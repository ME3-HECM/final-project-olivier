

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 20:01:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 06/04/2022 GMT
    86                           ; 
    87                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18LF67K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120                           	psect	idataBANK0
   121   0044FA                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for __halfsquare
   125   0044FA  015E               	dw	350
   126                           
   127                           ;initializer for __1square
   128   0044FC  02BC               	dw	700
   129                           
   130                           ;initializer for __45drightdelay
   131   0044FE  00AA               	dw	170
   132                           
   133                           ;initializer for __45dleftdelay
   134   004500  00AA               	dw	170
   135                           
   136                           ;initializer for _ForwardFlag
   137   004502  01                 	db	1
   138                           
   139                           	psect	idataBANK1
   140   004503                     __pidataBANK1:
   141                           	callstack 0
   142                           
   143                           ;initializer for stoa@F1144
   144   004503  28                 	db	40
   145   004504  6E                 	db	110
   146   004505  75                 	db	117
   147   004506  6C                 	db	108
   148   004507  6C                 	db	108
   149   004508  29                 	db	41
   150   004509  00                 	db	0
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATFbits	set	3966
   155   000000                     _LATDbits	set	3964
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISEbits	set	3973
   158   000000                     _TRISFbits	set	3974
   159   000000                     _CCPR2H	set	4006
   160   000000                     _CCPR1H	set	4010
   161   000000                     _SSP2CON2bits	set	3802
   162   000000                     _RX4PPS	set	3605
   163   000000                     _SSP2CLKPPS	set	3612
   164   000000                     _SSP2DATPPS	set	3613
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _RC4REG	set	3811
   169   000000                     _SP4BRGL	set	3813
   170   000000                     _TX4STAbits	set	3816
   171   000000                     _BAUD4CONbits	set	3817
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _TRISDbits	set	3972
   174   000000                     _CCPR4H	set	3873
   175   000000                     _CCPR3H	set	3877
   176   000000                     _SSP2STAT	set	3800
   177   000000                     _ANSELFbits	set	3764
   178   000000                     _SSP2BUF	set	3797
   179   000000                     _PIE0bits	set	3625
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RD5PPS	set	3695
   184   000000                     _RE2PPS	set	3700
   185   000000                     _RD6PPS	set	3696
   186   000000                     _CCP1CONbits	set	4011
   187   000000                     _CCPTMRS0bits	set	4013
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCP2CONbits	set	4007
   191   000000                     _LATAbits	set	3961
   192   000000                     _CCP3CONbits	set	3878
   193   000000                     _LATCbits	set	3963
   194   000000                     _LATEbits	set	3965
   195   000000                     _TRISCbits	set	3971
   196   000000                     _CCP4CONbits	set	3874
   197   000000                     _TRISHbits	set	3976
   198   000000                     _TRISGbits	set	3975
   199   000000                     _PORTFbits	set	3982
   200   000000                     _TRISAbits	set	3969
   201   000000                     _LATHbits	set	3968
   202   000000                     _RE4PPS	set	3702
   203   000000                     _RG6PPS	set	3720
   204   000000                     _TMR0L	set	4051
   205   000000                     _TMR0H	set	4052
   206   000000                     _T0CON0bits	set	4053
   207   000000                     _T0CON1bits	set	4054
   208   000000                     _T2CLKCONbits	set	4031
   209   000000                     _T2HLTbits	set	4030
   210   000000                     _INTCONbits	set	4082
   211   000000                     _PIE4bits	set	3629
   212   000000                     _PIR0bits	set	3635
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  43                 	db	67	;'C'
   222   000E02  6F                 	db	111	;'o'
   223   000E03  6C                 	db	108	;'l'
   224   000E04  6F                 	db	111	;'o'
   225   000E05  75                 	db	117	;'u'
   226   000E06  72                 	db	114	;'r'
   227   000E07  20                 	db	32
   228   000E08  69                 	db	105	;'i'
   229   000E09  73                 	db	115	;'s'
   230   000E0A  20                 	db	32
   231   000E0B  25                 	db	37
   232   000E0C  73                 	db	115	;'s'
   233   000E0D  20                 	db	32
   234   000E0E  20                 	db	32
   235   000E0F  0D                 	db	13
   236   000E10  00                 	db	0
   237   000E11                     STR_9:
   238                           
   239                           ; BSR set to: 14
   240   000E11  4C                 	db	76	;'L'
   241   000E12  69                 	db	105	;'i'
   242   000E13  67                 	db	103	;'g'
   243   000E14  68                 	db	104	;'h'
   244   000E15  74                 	db	116	;'t'
   245   000E16  20                 	db	32
   246   000E17  42                 	db	66	;'B'
   247   000E18  6C                 	db	108	;'l'
   248   000E19  75                 	db	117	;'u'
   249   000E1A  65                 	db	101	;'e'
   250   000E1B  00                 	db	0
   251   000E1C                     STR_5:
   252                           
   253                           ; BSR set to: 14
   254   000E1C  44                 	db	68	;'D'
   255   000E1D  61                 	db	97	;'a'
   256   000E1E  72                 	db	114	;'r'
   257   000E1F  6B                 	db	107	;'k'
   258   000E20  20                 	db	32
   259   000E21  42                 	db	66	;'B'
   260   000E22  6C                 	db	108	;'l'
   261   000E23  75                 	db	117	;'u'
   262   000E24  65                 	db	101	;'e'
   263   000E25  00                 	db	0
   264   000E26                     STR_10:
   265                           
   266                           ; BSR set to: 14
   267   000E26  45                 	db	69	;'E'
   268   000E27  67                 	db	103	;'g'
   269   000E28  67                 	db	103	;'g'
   270   000E29  73                 	db	115	;'s'
   271   000E2A  68                 	db	104	;'h'
   272   000E2B  65                 	db	101	;'e'
   273   000E2C  6C                 	db	108	;'l'
   274   000E2D  6C                 	db	108	;'l'
   275   000E2E  00                 	db	0
   276   000E2F                     STR_8:
   277                           
   278                           ; BSR set to: 14
   279   000E2F  4F                 	db	79	;'O'
   280   000E30  72                 	db	114	;'r'
   281   000E31  61                 	db	97	;'a'
   282   000E32  6E                 	db	110	;'n'
   283   000E33  67                 	db	103	;'g'
   284   000E34  65                 	db	101	;'e'
   285   000E35  00                 	db	0
   286   000E36                     STR_6:
   287                           
   288                           ; BSR set to: 14
   289   000E36  59                 	db	89	;'Y'
   290   000E37  65                 	db	101	;'e'
   291   000E38  6C                 	db	108	;'l'
   292   000E39  6C                 	db	108	;'l'
   293   000E3A  6F                 	db	111	;'o'
   294   000E3B  77                 	db	119	;'w'
   295   000E3C  00                 	db	0
   296   000E3D                     STR_4:
   297                           
   298                           ; BSR set to: 14
   299   000E3D  47                 	db	71	;'G'
   300   000E3E  72                 	db	114	;'r'
   301   000E3F  65                 	db	101	;'e'
   302   000E40  65                 	db	101	;'e'
   303   000E41  6E                 	db	110	;'n'
   304   000E42  00                 	db	0
   305   000E43                     STR_7:
   306                           
   307                           ; BSR set to: 14
   308   000E43  50                 	db	80	;'P'
   309   000E44  69                 	db	105	;'i'
   310   000E45  6E                 	db	110	;'n'
   311   000E46  6B                 	db	107	;'k'
   312   000E47  00                 	db	0
   313   000E48                     STR_11:
   314                           
   315                           ; BSR set to: 14
   316   000E48  6C                 	db	108	;'l'
   317   000E49  6C                 	db	108	;'l'
   318   000E4A  73                 	db	115	;'s'
   319   000E4B  00                 	db	0
   320   000E4C                     STR_3:
   321                           
   322                           ; BSR set to: 14
   323   000E4C  52                 	db	82	;'R'
   324   000E4D  65                 	db	101	;'e'
   325   000E4E  64                 	db	100	;'d'
   326   000E4F  00                 	db	0
   327   000E50  00                 	db	0	; dummy byte at the end
   328   000000                     
   329                           ; #config settings
   330                           
   331                           	psect	cinit
   332   003F08                     __pcinit:
   333                           	callstack 0
   334   003F08                     start_initialization:
   335                           	callstack 0
   336   003F08                     __initialization:
   337                           	callstack 0
   338                           
   339                           ; Initialize objects allocated to BANK1 (7 bytes)
   340                           ; load TBLPTR registers with __pidataBANK1
   341   003F08  0E03               	movlw	low __pidataBANK1
   342   003F0A  6EF6               	movwf	tblptrl,c
   343   003F0C  0E45               	movlw	high __pidataBANK1
   344   003F0E  6EF7               	movwf	tblptrh,c
   345   003F10  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   346   003F12  6EF8               	movwf	tblptru,c
   347   003F14  EE01  F086         	lfsr	0,__pdataBANK1
   348   003F18  EE10 F007          	lfsr	1,7
   349   003F1C                     copy_data0:
   350   003F1C  0009               	tblrd		*+
   351   003F1E  CFF5 FFEE          	movff	tablat,postinc0
   352   003F22  50E5               	movf	postdec1,w,c
   353   003F24  50E1               	movf	fsr1l,w,c
   354   003F26  E1FA               	bnz	copy_data0
   355                           
   356                           ; Initialize objects allocated to BANK0 (9 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358   003F28  0EFA               	movlw	low __pidataBANK0
   359   003F2A  6EF6               	movwf	tblptrl,c
   360   003F2C  0E44               	movlw	high __pidataBANK0
   361   003F2E  6EF7               	movwf	tblptrh,c
   362   003F30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363   003F32  6EF8               	movwf	tblptru,c
   364   003F34  EE00  F0F3         	lfsr	0,__pdataBANK0
   365   003F38  EE10 F009          	lfsr	1,9
   366   003F3C                     copy_data1:
   367   003F3C  0009               	tblrd		*+
   368   003F3E  CFF5 FFEE          	movff	tablat,postinc0
   369   003F42  50E5               	movf	postdec1,w,c
   370   003F44  50E1               	movf	fsr1l,w,c
   371   003F46  E1FA               	bnz	copy_data1
   372                           
   373                           ; Clear objects allocated to BANK1 (134 bytes)
   374   003F48  EE01  F000         	lfsr	0,__pbssBANK1
   375   003F4C  0E86               	movlw	134
   376   003F4E                     clear_0:
   377   003F4E  6AEE               	clrf	postinc0,c
   378   003F50  06E8               	decf	wreg,f,c
   379   003F52  E1FD               	bnz	clear_0
   380                           
   381                           ; Clear objects allocated to BANK0 (25 bytes)
   382   003F54  EE00  F0DA         	lfsr	0,__pbssBANK0
   383   003F58  0E19               	movlw	25
   384   003F5A                     clear_1:
   385   003F5A  6AEE               	clrf	postinc0,c
   386   003F5C  06E8               	decf	wreg,f,c
   387   003F5E  E1FD               	bnz	clear_1
   388   003F60                     end_of_initialization:
   389                           	callstack 0
   390   003F60                     __end_of__initialization:
   391                           	callstack 0
   392   003F60  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   393   003F62  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394   003F64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   395   003F66  6EF8               	movwf	tblptru,c
   396   003F68  0100               	movlb	0
   397   003F6A  EF64  F013         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400   0000DA                     __pbssBANK0:
   401                           	callstack 0
   402   0000DA                     _width:
   403                           	callstack 0
   404   0000DA                     	ds	2
   405   0000DC                     _prec:
   406                           	callstack 0
   407   0000DC                     	ds	2
   408   0000DE                     _maxTime:
   409                           	callstack 0
   410   0000DE                     	ds	2
   411   0000E0                     _flags:
   412                           	callstack 0
   413   0000E0                     	ds	1
   414   0000E1                     _motorR:
   415                           	callstack 0
   416   0000E1                     	ds	9
   417   0000EA                     _motorL:
   418                           	callstack 0
   419   0000EA                     	ds	9
   420                           
   421                           	psect	dataBANK0
   422   0000F3                     __pdataBANK0:
   423                           	callstack 0
   424   0000F3                     __halfsquare:
   425                           	callstack 0
   426   0000F3                     	ds	2
   427   0000F5                     __1square:
   428                           	callstack 0
   429   0000F5                     	ds	2
   430   0000F7                     __45drightdelay:
   431                           	callstack 0
   432   0000F7                     	ds	2
   433   0000F9                     __45dleftdelay:
   434                           	callstack 0
   435   0000F9                     	ds	2
   436   0000FB                     _ForwardFlag:
   437                           	callstack 0
   438   0000FB                     	ds	1
   439                           
   440                           	psect	bssBANK1
   441   000100                     __pbssBANK1:
   442                           	callstack 0
   443   000100                     _timerMemory:
   444                           	callstack 0
   445   000100                     	ds	40
   446   000128                     _movementMemory:
   447                           	callstack 0
   448   000128                     	ds	40
   449   000150                     	ds	32
   450   000170                     _colorf:
   451                           	callstack 0
   452   000170                     	ds	22
   453                           
   454                           	psect	dataBANK1
   455   000186                     __pdataBANK1:
   456                           	callstack 0
   457   000186                     stoa@F1144:
   458                           	callstack 0
   459   000186                     	ds	7
   460                           
   461                           	psect	cstackBANK0
   462   000060                     __pcstackBANK0:
   463                           	callstack 0
   464   000060                     ___flmul@sign:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x0
   468   000060                     	ds	1
   469   000061                     ___flmul@grs:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x1
   473   000061                     	ds	4
   474   000065                     ___flmul@aexp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478   000065                     	ds	1
   479   000066                     ___flmul@bexp:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x6
   483   000066                     	ds	1
   484   000067                     ___flmul@prod:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x7
   488   000067                     	ds	4
   489   00006B                     ___flmul@temp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xB
   493   00006B                     	ds	2
   494   00006D                     _RGB2Hue$3132:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0xD
   498   00006D                     	ds	4
   499   000071                     RGB2Hue@max:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x11
   503   000071                     	ds	2
   504   000073                     RGB2Hue@min:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x13
   508   000073                     	ds	2
   509   000075                     main@data:
   510                           	callstack 0
   511                           
   512                           ; 100 bytes @ 0x15
   513   000075                     	ds	100
   514   0000D9                     main@wall:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x79
   518   0000D9                     	ds	1
   519                           
   520                           	psect	cstackCOMRAM
   521   000001                     __pcstackCOMRAM:
   522                           	callstack 0
   523   000001                     ??_I2C_2_Master_Idle:
   524   000001                     ?_strlen:
   525                           	callstack 0
   526   000001                     ?_strncmp:
   527                           	callstack 0
   528   000001                     ?___wmul:
   529                           	callstack 0
   530   000001                     ?___fltol:
   531                           	callstack 0
   532   000001                     sendCharSerial4@charToSend:
   533                           	callstack 0
   534   000001                     ClickLEDOn@power:
   535                           	callstack 0
   536   000001                     initDCmotorsPWM@PWMperiod:
   537                           	callstack 0
   538   000001                     ___wmul@multiplier:
   539                           	callstack 0
   540   000001                     fputc@c:
   541                           	callstack 0
   542   000001                     strlen@s:
   543                           	callstack 0
   544   000001                     strncmp@_l:
   545                           	callstack 0
   546   000001                     ___fleq@ff1:
   547                           	callstack 0
   548   000001                     ___flge@ff1:
   549                           	callstack 0
   550   000001                     ___fltol@f1:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x0
   554   000001                     	ds	1
   555   000002                     ??_I2C_2_Master_Read:
   556   000002                     I2C_2_Master_Write@data_byte:
   557                           	callstack 0
   558   000002                     sendStringSerial4@string:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1
   562   000002                     	ds	1
   563   000003                     I2C_2_Master_Read@ack:
   564                           	callstack 0
   565   000003                     color_writetoaddr@value:
   566                           	callstack 0
   567   000003                     ___wmul@multiplicand:
   568                           	callstack 0
   569   000003                     fputc@fp:
   570                           	callstack 0
   571   000003                     strlen@a:
   572                           	callstack 0
   573   000003                     strncmp@_r:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2
   577   000003                     	ds	1
   578   000004                     I2C_2_Master_Read@tmp:
   579                           	callstack 0
   580   000004                     color_writetoaddr@address:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x3
   584   000004                     	ds	1
   585   000005                     ??_color_click_init:
   586   000005                     ??_fputc:
   587   000005                     ??___fltol:
   588   000005                     ?_color_read_Red:
   589                           	callstack 0
   590   000005                     ?_color_read_Green:
   591                           	callstack 0
   592   000005                     ?_color_read_Blue:
   593                           	callstack 0
   594   000005                     ?_color_read_Clear:
   595                           	callstack 0
   596   000005                     ___wmul@product:
   597                           	callstack 0
   598   000005                     strncmp@n:
   599                           	callstack 0
   600   000005                     ___fleq@ff2:
   601                           	callstack 0
   602   000005                     ___flge@ff2:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x4
   606   000005                     	ds	2
   607   000007                     ??_strncmp:
   608   000007                     ??_color_read_Red:
   609   000007                     ??_color_read_Green:
   610   000007                     ??_color_read_Blue:
   611   000007                     ??_color_read_Clear:
   612   000007                     ?___lwdiv:
   613                           	callstack 0
   614   000007                     ___lwdiv@dividend:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x6
   618   000007                     	ds	1
   619   000008                     strncmp@l:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x7
   623   000008                     	ds	1
   624   000009                     ??___fleq:
   625   000009                     ??___flge:
   626   000009                     ___fltol@sign1:
   627                           	callstack 0
   628   000009                     ___lwdiv@divisor:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x8
   632   000009                     	ds	1
   633   00000A                     ___fltol@exp1:
   634                           	callstack 0
   635   00000A                     color_read_Red@tmp:
   636                           	callstack 0
   637   00000A                     color_read_Green@tmp:
   638                           	callstack 0
   639   00000A                     color_read_Blue@tmp:
   640                           	callstack 0
   641   00000A                     color_read_Clear@tmp:
   642                           	callstack 0
   643   00000A                     stoa@fp:
   644                           	callstack 0
   645   00000A                     strncmp@r:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x9
   649   00000A                     	ds	1
   650   00000B                     ___lwdiv@quotient:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xA
   654   00000B                     	ds	1
   655   00000C                     ?___xxtofl:
   656                           	callstack 0
   657   00000C                     stoa@s:
   658                           	callstack 0
   659   00000C                     ___xxtofl@val:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0xB
   663   00000C                     	ds	1
   664   00000D                     ?_Hue2Colour:
   665                           	callstack 0
   666   00000D                     ___lwdiv@counter:
   667                           	callstack 0
   668   00000D                     Hue2Colour@cf:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0xC
   672   00000D                     	ds	1
   673   00000E                     ??_stoa:
   674   00000E                     setMotorPWM@m:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xD
   678   00000E                     	ds	1
   679   00000F                     Hue2Colour@colourname:
   680                           	callstack 0
   681   00000F                     stoa@nuls:
   682                           	callstack 0
   683                           
   684                           ; 7 bytes @ 0xE
   685   00000F                     	ds	1
   686   000010                     ??_setMotorPWM:
   687   000010                     ??___xxtofl:
   688                           
   689                           ; 1 bytes @ 0xF
   690   000010                     	ds	2
   691   000012                     setMotorPWM@posDuty:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x11
   695   000012                     	ds	1
   696   000013                     setMotorPWM@negDuty:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x12
   700   000013                     	ds	1
   701   000014                     ___xxtofl@sign:
   702                           	callstack 0
   703   000014                     stop@mL:
   704                           	callstack 0
   705   000014                     turnLeft@mL:
   706                           	callstack 0
   707   000014                     turnRight@mL:
   708                           	callstack 0
   709   000014                     fullSpeedAhead@mL:
   710                           	callstack 0
   711   000014                     fullSpeedReverse@mL:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x13
   715   000014                     	ds	1
   716   000015                     ___xxtofl@exp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x14
   720   000015                     	ds	1
   721   000016                     stop@mR:
   722                           	callstack 0
   723   000016                     turnLeft@mR:
   724                           	callstack 0
   725   000016                     turnRight@mR:
   726                           	callstack 0
   727   000016                     fullSpeedAhead@mR:
   728                           	callstack 0
   729   000016                     fullSpeedReverse@mR:
   730                           	callstack 0
   731   000016                     stoa@w:
   732                           	callstack 0
   733   000016                     ___xxtofl@arg:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x15
   737   000016                     	ds	2
   738   000018                     ??_fullSpeedAhead:
   739   000018                     ??_stop:
   740   000018                     ??_fullSpeedReverse:
   741   000018                     turnLeft@i:
   742                           	callstack 0
   743   000018                     turnRight@i:
   744                           	callstack 0
   745   000018                     stoa@i:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x17
   749   000018                     	ds	1
   750   000019                     fullSpeedAhead@i:
   751                           	callstack 0
   752   000019                     fullSpeedReverse@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x18
   756   000019                     	ds	1
   757   00001A                     ?___fladd:
   758                           	callstack 0
   759   00001A                     Left45@mL:
   760                           	callstack 0
   761   00001A                     Right45@mL:
   762                           	callstack 0
   763   00001A                     colour_read_all@cf:
   764                           	callstack 0
   765   00001A                     stoa@cp:
   766                           	callstack 0
   767   00001A                     ___fladd@b:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x19
   771   00001A                     	ds	1
   772   00001B                     reverseHalfSquare@mL:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x1A
   776   00001B                     	ds	1
   777   00001C                     Left45@mR:
   778                           	callstack 0
   779   00001C                     Right45@mR:
   780                           	callstack 0
   781   00001C                     stoa@l:
   782                           	callstack 0
   783   00001C                     colour_read_all@R:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x1B
   787   00001C                     	ds	1
   788   00001D                     reverseHalfSquare@mR:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x1C
   792   00001D                     	ds	1
   793   00001E                     ??_Left45:
   794   00001E                     ??_Right45:
   795   00001E                     stoa@p:
   796                           	callstack 0
   797   00001E                     ___fladd@a:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x1D
   801   00001E                     	ds	1
   802   00001F                     ??_reverseHalfSquare:
   803                           
   804                           ; 1 bytes @ 0x1E
   805   00001F                     	ds	1
   806   000020                     rotate180left@mL:
   807                           	callstack 0
   808   000020                     vfpfcnvrt@fp:
   809                           	callstack 0
   810   000020                     colour_read_all@G:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x1F
   814   000020                     	ds	1
   815   000021                     Red_R90@mL:
   816                           	callstack 0
   817   000021                     Green_L90@mL:
   818                           	callstack 0
   819   000021                     Yellow_rev1_R90@mL:
   820                           	callstack 0
   821   000021                     Pink_rev1_L90@mL:
   822                           	callstack 0
   823   000021                     Orange_R135@mL:
   824                           	callstack 0
   825   000021                     LightBlue_L135@mL:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x20
   829   000021                     	ds	1
   830   000022                     ??___fladd:
   831   000022                     rotate180left@mR:
   832                           	callstack 0
   833   000022                     vfpfcnvrt@fmt:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x21
   837   000022                     	ds	1
   838   000023                     Red_R90@mR:
   839                           	callstack 0
   840   000023                     Green_L90@mR:
   841                           	callstack 0
   842   000023                     Yellow_rev1_R90@mR:
   843                           	callstack 0
   844   000023                     Pink_rev1_L90@mR:
   845                           	callstack 0
   846   000023                     Orange_R135@mR:
   847                           	callstack 0
   848   000023                     LightBlue_L135@mR:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x22
   852   000023                     	ds	1
   853   000024                     Blue_T180@mL:
   854                           	callstack 0
   855   000024                     vfpfcnvrt@ap:
   856                           	callstack 0
   857   000024                     colour_read_all@B:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x23
   861   000024                     	ds	1
   862   000025                     ??_Yellow_rev1_R90:
   863   000025                     ??_Pink_rev1_L90:
   864   000025                     
   865                           ; 1 bytes @ 0x24
   866   000025                     	ds	1
   867   000026                     ??_vfpfcnvrt:
   868   000026                     ___fladd@signs:
   869                           	callstack 0
   870   000026                     Blue_T180@mR:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x25
   874   000026                     	ds	1
   875   000027                     ___fladd@aexp:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x26
   879   000027                     	ds	1
   880   000028                     ___fladd@bexp:
   881                           	callstack 0
   882   000028                     Colour2Action@cf:
   883                           	callstack 0
   884   000028                     _vfpfcnvrt$2827:
   885                           	callstack 0
   886   000028                     colour_read_all@C:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x27
   890   000028                     	ds	1
   891   000029                     ___fladd@grs:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x28
   895   000029                     	ds	1
   896   00002A                     ?_vfprintf:
   897                           	callstack 0
   898   00002A                     ?___flsub:
   899                           	callstack 0
   900   00002A                     vfprintf@fp:
   901                           	callstack 0
   902   00002A                     ___flsub@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x29
   906   00002A                     	ds	2
   907   00002C                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x2B
   911   00002C                     	ds	2
   912   00002E                     vfprintf@ap:
   913                           	callstack 0
   914   00002E                     ___flsub@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x2D
   918   00002E                     	ds	2
   919   000030                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2F
   923   000030                     	ds	2
   924   000032                     ?_sprintf:
   925                           	callstack 0
   926   000032                     ?___fldiv:
   927                           	callstack 0
   928   000032                     sprintf@s:
   929                           	callstack 0
   930   000032                     ___fldiv@b:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x31
   934   000032                     	ds	2
   935   000034                     sprintf@fmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x33
   939   000034                     	ds	2
   940   000036                     ___fldiv@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x35
   944   000036                     	ds	2
   945   000038                     sprintf@ap:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x37
   949   000038                     	ds	2
   950   00003A                     ??___fldiv:
   951   00003A                     sprintf@f:
   952                           	callstack 0
   953                           
   954                           ; 11 bytes @ 0x39
   955   00003A                     	ds	4
   956   00003E                     ___fldiv@rem:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x3D
   960   00003E                     	ds	4
   961   000042                     ___fldiv@sign:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x41
   965   000042                     	ds	1
   966   000043                     ___fldiv@new_exp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x42
   970   000043                     	ds	2
   971   000045                     Color2String@buf:
   972                           	callstack 0
   973   000045                     ___fldiv@grs:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x44
   977   000045                     	ds	2
   978   000047                     Color2String@cf:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x46
   982   000047                     	ds	2
   983   000049                     ___fldiv@bexp:
   984                           	callstack 0
   985   000049                     Color2String@colourname:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x48
   989   000049                     	ds	1
   990   00004A                     ___fldiv@aexp:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x49
   994   00004A                     	ds	1
   995   00004B                     ?___flmul:
   996                           	callstack 0
   997   00004B                     ___flmul@b:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x4A
  1001   00004B                     	ds	4
  1002   00004F                     ___flmul@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x4E
  1006   00004F                     	ds	4
  1007   000053                     ??___flmul:
  1008                           
  1009                           ; 1 bytes @ 0x52
  1010   000053                     	ds	4
  1011   000057                     RGB2Hue@cf:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x56
  1015   000057                     	ds	2
  1016   000059                     ??_RGB2Hue:
  1017                           
  1018                           ; 1 bytes @ 0x58
  1019   000059                     	ds	4
  1020   00005D                     ??_main:
  1021                           
  1022                           ; 1 bytes @ 0x5C
  1023   00005D                     	ds	2
  1024                           
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1027 ;;
  1028 ;; *************** function _main *****************
  1029 ;; Defined at:
  1030 ;;		line 19 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  data          100   21[BANK0 ] unsigned char [100]
  1035 ;;  PWMcycle        2    0        unsigned int 
  1036 ;;  movementCoun    2    0        unsigned int 
  1037 ;;  wall            1  121[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Totals:         2     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;Total ram usage:      103 bytes
  1052 ;; Hardware stack levels required when called: 8
  1053 ;; This function calls:
  1054 ;;		_ClickLEDOn
  1055 ;;		_Color2String
  1056 ;;		_Colour2Action
  1057 ;;		_Hue2Colour
  1058 ;;		_I2C_2_Master_Init
  1059 ;;		_Interrupts_init
  1060 ;;		_LED_init
  1061 ;;		_RGB2Hue
  1062 ;;		_Timer0_init
  1063 ;;		___flge
  1064 ;;		_color_click_init
  1065 ;;		_colour_read_all
  1066 ;;		_fullSpeedAhead
  1067 ;;		_initDCmotorsPWM
  1068 ;;		_initUSART4
  1069 ;;		_stop
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text0
  1076   0026C8                     __ptext0:
  1077                           	callstack 0
  1078   0026C8                     _main:
  1079                           	callstack 23
  1080   0026C8                     
  1081                           ;main.c: 20:     char data[100];;main.c: 21:     initUSART4();
  1082   0026C8  EC29  F022         	call	_initUSART4	;wreg free
  1083   0026CC                     
  1084                           ;main.c: 22:     color_click_init();
  1085   0026CC  EC66  F021         	call	_color_click_init	;wreg free
  1086   0026D0                     
  1087                           ;main.c: 23:     I2C_2_Master_Init();
  1088   0026D0  ECDB  F021         	call	_I2C_2_Master_Init	;wreg free
  1089   0026D4                     
  1090                           ;main.c: 24:     LED_init();
  1091   0026D4  EC56  F022         	call	_LED_init	;wreg free
  1092   0026D8                     
  1093                           ;main.c: 25:     Interrupts_init();
  1094   0026D8  EC63  F022         	call	_Interrupts_init	;wreg free
  1095   0026DC                     
  1096                           ;main.c: 26:     Timer0_init();
  1097   0026DC  EC17  F022         	call	_Timer0_init	;wreg free
  1098   0026E0                     
  1099                           ;main.c: 28:     initDCmotorsPWM(PWMcycle);
  1100   0026E0  0E00               	movlw	0
  1101   0026E2  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1102   0026E4  0E63               	movlw	99
  1103   0026E6  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1104   0026E8  EC35  F01D         	call	_initDCmotorsPWM	;wreg free
  1105   0026EC                     
  1106                           ;main.c: 30:     motorL.power=0;
  1107   0026EC  0E00               	movlw	0
  1108   0026EE  0100               	movlb	0	; () banked
  1109   0026F0  6FEA               	movwf	_motorL& (0+255),b
  1110   0026F2                     
  1111                           ; BSR set to: 0
  1112                           ;main.c: 31:     motorL.direction=1;
  1113   0026F2  0E01               	movlw	1
  1114   0026F4  6FEB               	movwf	(_motorL+1)& (0+255),b
  1115   0026F6                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 32:     motorL.brakemode=1;
  1118   0026F6  0E01               	movlw	1
  1119   0026F8  6FEC               	movwf	(_motorL+2)& (0+255),b
  1120   0026FA                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 33:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1123   0026FA  0EAA               	movlw	170
  1124   0026FC  6FEF               	movwf	(_motorL+5)& (0+255),b
  1125   0026FE  0E0F               	movlw	15
  1126   002700  6FF0               	movwf	(_motorL+6)& (0+255),b
  1127   002702                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 34:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1130   002702  0EA6               	movlw	166
  1131   002704  6FF1               	movwf	(_motorL+7)& (0+255),b
  1132   002706  0E0F               	movlw	15
  1133   002708  6FF2               	movwf	(_motorL+8)& (0+255),b
  1134   00270A                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 35:     motorL.PWMperiod=PWMcycle;
  1137   00270A  0E00               	movlw	0
  1138   00270C  6FEE               	movwf	(_motorL+4)& (0+255),b
  1139   00270E  0E63               	movlw	99
  1140   002710  6FED               	movwf	(_motorL+3)& (0+255),b
  1141   002712                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 37:     motorR.power=0;
  1144   002712  0E00               	movlw	0
  1145   002714  6FE1               	movwf	_motorR& (0+255),b
  1146   002716                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 38:     motorR.direction=1;
  1149   002716  0E01               	movlw	1
  1150   002718  6FE2               	movwf	(_motorR+1)& (0+255),b
  1151   00271A                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 39:     motorR.brakemode=1;
  1154   00271A  0E01               	movlw	1
  1155   00271C  6FE3               	movwf	(_motorR+2)& (0+255),b
  1156   00271E                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 40:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1159   00271E  0E25               	movlw	37
  1160   002720  6FE6               	movwf	(_motorR+5)& (0+255),b
  1161   002722  0E0F               	movlw	15
  1162   002724  6FE7               	movwf	(_motorR+6)& (0+255),b
  1163   002726                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 41:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1166   002726  0E21               	movlw	33
  1167   002728  6FE8               	movwf	(_motorR+7)& (0+255),b
  1168   00272A  0E0F               	movlw	15
  1169   00272C  6FE9               	movwf	(_motorR+8)& (0+255),b
  1170   00272E                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 42:     motorR.PWMperiod=PWMcycle;
  1173   00272E  0E00               	movlw	0
  1174   002730  6FE5               	movwf	(_motorR+4)& (0+255),b
  1175   002732  0E63               	movlw	99
  1176   002734  6FE4               	movwf	(_motorR+3)& (0+255),b
  1177   002736                     
  1178                           ; BSR set to: 0
  1179                           ;main.c: 44:     TRISFbits.TRISF2=1;
  1180   002736  8486               	bsf	134,2,c	;volatile
  1181   002738                     
  1182                           ; BSR set to: 0
  1183                           ;main.c: 45:     ANSELFbits.ANSELF2=0;
  1184   002738  010E               	movlb	14	; () banked
  1185   00273A  95B4               	bcf	180,2,b	;volatile
  1186   00273C                     l123:
  1187                           
  1188                           ;main.c: 46:     while(PORTFbits.RF2){
  1189   00273C  B48E               	btfsc	142,2,c	;volatile
  1190   00273E  EFA3  F013         	goto	u3971
  1191   002742  EFA5  F013         	goto	u3970
  1192   002746                     u3971:
  1193   002746  EF9E  F013         	goto	l123
  1194   00274A                     u3970:
  1195   00274A                     
  1196                           ;main.c: 48:     char wall=0;
  1197   00274A  0E00               	movlw	0
  1198   00274C  0100               	movlb	0	; () banked
  1199   00274E  6FD9               	movwf	main@wall& (0+255),b
  1200   002750                     
  1201                           ; BSR set to: 0
  1202                           ;main.c: 50:     ClickLEDOn(0);
  1203   002750  0E00               	movlw	0
  1204   002752  ECC1  F021         	call	_ClickLEDOn
  1205   002756                     l4304:
  1206                           
  1207                           ;main.c: 55:         fullSpeedAhead(&motorL,&motorR);
  1208   002756  0EEA               	movlw	low _motorL
  1209   002758  6E14               	movwf	fullSpeedAhead@mL^0,c
  1210   00275A  0E00               	movlw	high _motorL
  1211   00275C  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1212   00275E  0EE1               	movlw	low _motorR
  1213   002760  6E16               	movwf	fullSpeedAhead@mR^0,c
  1214   002762  0E00               	movlw	high _motorR
  1215   002764  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1216   002766  EC8A  F01E         	call	_fullSpeedAhead	;wreg free
  1217   00276A                     
  1218                           ;main.c: 56:         if (maxTime==1){
  1219   00276A  0100               	movlb	0	; () banked
  1220   00276C  05DE               	decf	_maxTime& (0+255),w,b	;volatile
  1221   00276E  11DF               	iorwf	(_maxTime+1)& (0+255),w,b	;volatile
  1222   002770  A4D8               	btfss	status,2,c
  1223   002772  EFBD  F013         	goto	u3981
  1224   002776  EFBF  F013         	goto	u3980
  1225   00277A                     u3981:
  1226   00277A  EF1C  F014         	goto	l4326
  1227   00277E                     u3980:
  1228   00277E                     
  1229                           ; BSR set to: 0
  1230                           ;main.c: 57:             stop(&motorL,&motorR);
  1231   00277E  0EEA               	movlw	low _motorL
  1232   002780  6E14               	movwf	stop@mL^0,c
  1233   002782  0E00               	movlw	high _motorL
  1234   002784  6E15               	movwf	(stop@mL+1)^0,c
  1235   002786  0EE1               	movlw	low _motorR
  1236   002788  6E16               	movwf	stop@mR^0,c
  1237   00278A  0E00               	movlw	high _motorR
  1238   00278C  6E17               	movwf	(stop@mR+1)^0,c
  1239   00278E  EC4C  F01C         	call	_stop	;wreg free
  1240   002792                     
  1241                           ;main.c: 58:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  1242   002792  0EF4               	movlw	244
  1243   002794  6E5E               	movwf	(??_main+1)^0,c
  1244   002796  0E82               	movlw	130
  1245   002798  6E5D               	movwf	??_main^0,c
  1246   00279A  0E05               	movlw	5
  1247   00279C                     u4107:
  1248   00279C  2EE8               	decfsz	wreg,f,c
  1249   00279E  D7FE               	bra	u4107
  1250   0027A0  2E5D               	decfsz	??_main^0,f,c
  1251   0027A2  D7FC               	bra	u4107
  1252   0027A4  2E5E               	decfsz	(??_main+1)^0,f,c
  1253   0027A6  D7FA               	bra	u4107
  1254   0027A8  F000               	nop	
  1255   0027AA  EF1C  F014         	goto	l4326
  1256   0027AE                     l4312:
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 62:             colour_read_all(&colorf);
  1260   0027AE  0E70               	movlw	low _colorf
  1261   0027B0  6E1A               	movwf	colour_read_all@cf^0,c
  1262   0027B2  0E01               	movlw	high _colorf
  1263   0027B4  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1264   0027B6  ECFB  F017         	call	_colour_read_all	;wreg free
  1265   0027BA                     
  1266                           ;main.c: 63:             Color2String(data,&colorf);
  1267   0027BA  0E75               	movlw	low main@data
  1268   0027BC  6E45               	movwf	Color2String@buf^0,c
  1269   0027BE  0E00               	movlw	high main@data
  1270   0027C0  6E46               	movwf	(Color2String@buf+1)^0,c
  1271   0027C2  0E70               	movlw	low _colorf
  1272   0027C4  6E47               	movwf	Color2String@cf^0,c
  1273   0027C6  0E01               	movlw	high _colorf
  1274   0027C8  6E48               	movwf	(Color2String@cf+1)^0,c
  1275   0027CA  EC86  F021         	call	_Color2String	;wreg free
  1276   0027CE                     
  1277                           ;main.c: 66:              if (colorf.Cf<100)
  1278   0027CE  C17C  F001         	movff	_colorf+12,___flge@ff1
  1279   0027D2  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1280   0027D6  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1281   0027DA  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1282   0027DE  0E00               	movlw	0
  1283   0027E0  6E05               	movwf	___flge@ff2^0,c
  1284   0027E2  0E00               	movlw	0
  1285   0027E4  6E06               	movwf	(___flge@ff2+1)^0,c
  1286   0027E6  0EC8               	movlw	200
  1287   0027E8  6E07               	movwf	(___flge@ff2+2)^0,c
  1288   0027EA  0E42               	movlw	66
  1289   0027EC  6E08               	movwf	(___flge@ff2+3)^0,c
  1290   0027EE  EC01  F019         	call	___flge	;wreg free
  1291   0027F2  B0D8               	btfsc	status,0,c
  1292   0027F4  EFFE  F013         	goto	u3991
  1293   0027F8  EF00  F014         	goto	u3990
  1294   0027FC                     u3991:
  1295   0027FC  EF1C  F014         	goto	l4326
  1296   002800                     u3990:
  1297   002800                     
  1298                           ;main.c: 67:              {;main.c: 69:                  wall=1;
  1299   002800  0E01               	movlw	1
  1300   002802  0100               	movlb	0	; () banked
  1301   002804  6FD9               	movwf	main@wall& (0+255),b
  1302   002806                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 70:                  ClickLEDOn(1);
  1305   002806  0E01               	movlw	1
  1306   002808  ECC1  F021         	call	_ClickLEDOn
  1307   00280C                     
  1308                           ;main.c: 71:                  stop(&motorL,&motorR);
  1309   00280C  0EEA               	movlw	low _motorL
  1310   00280E  6E14               	movwf	stop@mL^0,c
  1311   002810  0E00               	movlw	high _motorL
  1312   002812  6E15               	movwf	(stop@mL+1)^0,c
  1313   002814  0EE1               	movlw	low _motorR
  1314   002816  6E16               	movwf	stop@mR^0,c
  1315   002818  0E00               	movlw	high _motorR
  1316   00281A  6E17               	movwf	(stop@mR+1)^0,c
  1317   00281C  EC4C  F01C         	call	_stop	;wreg free
  1318   002820                     
  1319                           ;main.c: 72:                  _delay((unsigned long)((2000)*(64000000/4000.0)));
  1320   002820  0EA3               	movlw	163
  1321   002822  6E5E               	movwf	(??_main+1)^0,c
  1322   002824  0E57               	movlw	87
  1323   002826  6E5D               	movwf	??_main^0,c
  1324   002828  0E02               	movlw	2
  1325   00282A                     u4117:
  1326   00282A  2EE8               	decfsz	wreg,f,c
  1327   00282C  D7FE               	bra	u4117
  1328   00282E  2E5D               	decfsz	??_main^0,f,c
  1329   002830  D7FC               	bra	u4117
  1330   002832  2E5E               	decfsz	(??_main+1)^0,f,c
  1331   002834  D7FA               	bra	u4117
  1332   002836  D000               	nop2	
  1333   002838                     l4326:
  1334                           
  1335                           ;main.c: 61:         while (!wall){
  1336   002838  0100               	movlb	0	; () banked
  1337   00283A  51D9               	movf	main@wall& (0+255),w,b
  1338   00283C  B4D8               	btfsc	status,2,c
  1339   00283E  EF23  F014         	goto	u4001
  1340   002842  EF25  F014         	goto	u4000
  1341   002846                     u4001:
  1342   002846  EFD7  F013         	goto	l4312
  1343   00284A                     u4000:
  1344   00284A                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 75:         colour_read_all(&colorf);
  1347   00284A  0E70               	movlw	low _colorf
  1348   00284C  6E1A               	movwf	colour_read_all@cf^0,c
  1349   00284E  0E01               	movlw	high _colorf
  1350   002850  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1351   002852  ECFB  F017         	call	_colour_read_all	;wreg free
  1352   002856                     
  1353                           ;main.c: 76:         RGB2Hue(&colorf);
  1354   002856  0E70               	movlw	low _colorf
  1355   002858  6E57               	movwf	RGB2Hue@cf^0,c
  1356   00285A  0E01               	movlw	high _colorf
  1357   00285C  6E58               	movwf	(RGB2Hue@cf+1)^0,c
  1358   00285E  EC29  F007         	call	_RGB2Hue	;wreg free
  1359   002862                     
  1360                           ;main.c: 77:         Hue2Colour(&colorf);
  1361   002862  0E70               	movlw	low _colorf
  1362   002864  6E0D               	movwf	Hue2Colour@cf^0,c
  1363   002866  0E01               	movlw	high _colorf
  1364   002868  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1365   00286A  ECAA  F00A         	call	_Hue2Colour	;wreg free
  1366                           
  1367                           ;main.c: 78:         Colour2Action(&colorf);
  1368   00286E  0E70               	movlw	low _colorf
  1369   002870  6E28               	movwf	Colour2Action@cf^0,c
  1370   002872  0E01               	movlw	high _colorf
  1371   002874  6E29               	movwf	(Colour2Action@cf+1)^0,c
  1372   002876  EC37  F015         	call	_Colour2Action	;wreg free
  1373   00287A                     
  1374                           ;main.c: 81:         Color2String(data,&colorf);
  1375   00287A  0E75               	movlw	low main@data
  1376   00287C  6E45               	movwf	Color2String@buf^0,c
  1377   00287E  0E00               	movlw	high main@data
  1378   002880  6E46               	movwf	(Color2String@buf+1)^0,c
  1379   002882  0E70               	movlw	low _colorf
  1380   002884  6E47               	movwf	Color2String@cf^0,c
  1381   002886  0E01               	movlw	high _colorf
  1382   002888  6E48               	movwf	(Color2String@cf+1)^0,c
  1383   00288A  EC86  F021         	call	_Color2String	;wreg free
  1384   00288E                     
  1385                           ;main.c: 82:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1386   00288E  0E52               	movlw	82
  1387   002890  6E5E               	movwf	(??_main+1)^0,c
  1388   002892  0E2B               	movlw	43
  1389   002894  6E5D               	movwf	??_main^0,c
  1390   002896  0E00               	movlw	0
  1391   002898                     u4127:
  1392   002898  2EE8               	decfsz	wreg,f,c
  1393   00289A  D7FE               	bra	u4127
  1394   00289C  2E5D               	decfsz	??_main^0,f,c
  1395   00289E  D7FC               	bra	u4127
  1396   0028A0  2E5E               	decfsz	(??_main+1)^0,f,c
  1397   0028A2  D7FA               	bra	u4127
  1398   0028A4  D000               	nop2	
  1399   0028A6                     
  1400                           ;main.c: 83:         wall=0;
  1401   0028A6  0E00               	movlw	0
  1402   0028A8  0100               	movlb	0	; () banked
  1403   0028AA  6FD9               	movwf	main@wall& (0+255),b
  1404   0028AC                     
  1405                           ; BSR set to: 0
  1406                           ;main.c: 84:         ClickLEDOn(0);
  1407   0028AC  0E00               	movlw	0
  1408   0028AE  ECC1  F021         	call	_ClickLEDOn
  1409   0028B2  EFAB  F013         	goto	l4304
  1410   0028B6  EF16  F000         	goto	start
  1411   0028BA                     __end_of_main:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _initUSART4 *****************
  1415 ;; Defined at:
  1416 ;;		line 7 in file "serial.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text1
  1445   004452                     __ptext1:
  1446                           	callstack 0
  1447   004452                     _initUSART4:
  1448                           	callstack 29
  1449   004452                     
  1450                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1451   004452  8883               	bsf	131,4,c	;volatile
  1452                           
  1453                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1454   004454  8283               	bsf	131,1,c	;volatile
  1455   004456                     
  1456                           ;serial.c: 10:     RC0PPS = 0x12;
  1457   004456  0E12               	movlw	18
  1458   004458  010E               	movlb	14	; () banked
  1459   00445A  6F62               	movwf	98,b	;volatile
  1460                           
  1461                           ;serial.c: 11:     RX4PPS = 0x11;
  1462   00445C  0E11               	movlw	17
  1463   00445E  6F15               	movwf	21,b	;volatile
  1464   004460                     
  1465                           ; BSR set to: 14
  1466                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1467   004460  97E9               	bcf	233,3,b	;volatile
  1468   004462                     
  1469                           ; BSR set to: 14
  1470                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1471   004462  95E8               	bcf	232,2,b	;volatile
  1472                           
  1473                           ;serial.c: 15:     SP4BRGL = 51;
  1474   004464  0E33               	movlw	51
  1475   004466  6FE5               	movwf	229,b	;volatile
  1476                           
  1477                           ;serial.c: 16:     SP4BRGH = 0;
  1478   004468  0E00               	movlw	0
  1479   00446A  6FE6               	movwf	230,b	;volatile
  1480   00446C                     
  1481                           ; BSR set to: 14
  1482                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1483   00446C  89E7               	bsf	231,4,b	;volatile
  1484   00446E                     
  1485                           ; BSR set to: 14
  1486                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1487   00446E  8BE8               	bsf	232,5,b	;volatile
  1488   004470                     
  1489                           ; BSR set to: 14
  1490                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1491   004470  8FE7               	bsf	231,7,b	;volatile
  1492   004472                     
  1493                           ; BSR set to: 14
  1494   004472  0012               	return		;funcret
  1495   004474                     __end_of_initUSART4:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function _initDCmotorsPWM *****************
  1499 ;; Defined at:
  1500 ;;		line 11 in file "dc_motor.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;Total ram usage:        2 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 1
  1521 ;; This function calls:
  1522 ;;		Nothing
  1523 ;; This function is called by:
  1524 ;;		_main
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text2
  1529   003A6A                     __ptext2:
  1530                           	callstack 0
  1531   003A6A                     _initDCmotorsPWM:
  1532                           	callstack 29
  1533   003A6A                     
  1534                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1535   003A6A  9485               	bcf	133,2,c	;volatile
  1536                           
  1537                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1538   003A6C  9E83               	bcf	131,7,c	;volatile
  1539                           
  1540                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1541   003A6E  9885               	bcf	133,4,c	;volatile
  1542                           
  1543                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1544   003A70  9C87               	bcf	135,6,c	;volatile
  1545                           
  1546                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1547   003A72  947D               	bcf	125,2,c	;volatile
  1548                           
  1549                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1550   003A74  9E7B               	bcf	123,7,c	;volatile
  1551                           
  1552                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1553   003A76  987D               	bcf	125,4,c	;volatile
  1554                           
  1555                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1556   003A78  9C7F               	bcf	127,6,c	;volatile
  1557   003A7A                     
  1558                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1559   003A7A  0E05               	movlw	5
  1560   003A7C  010E               	movlb	14	; () banked
  1561   003A7E  6F74               	movwf	116,b	;volatile
  1562                           
  1563                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1564   003A80  0E06               	movlw	6
  1565   003A82  6F76               	movwf	118,b	;volatile
  1566                           
  1567                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1568   003A84  0E07               	movlw	7
  1569   003A86  6F69               	movwf	105,b	;volatile
  1570                           
  1571                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1572   003A88  0E08               	movlw	8
  1573   003A8A  6F88               	movwf	136,b	;volatile
  1574                           
  1575                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1576   003A8C  50BD               	movf	189,w,c	;volatile
  1577   003A8E  0B8F               	andlw	-113
  1578   003A90  0940               	iorlw	64
  1579   003A92  6EBD               	movwf	189,c	;volatile
  1580                           
  1581                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1582   003A94  0EE0               	movlw	-32
  1583   003A96  16BE               	andwf	190,f,c	;volatile
  1584                           
  1585                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1586   003A98  50BF               	movf	191,w,c	;volatile
  1587   003A9A  0BF0               	andlw	-16
  1588   003A9C  0901               	iorlw	1
  1589   003A9E  6EBF               	movwf	191,c	;volatile
  1590   003AA0                     
  1591                           ; BSR set to: 14
  1592                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1593   003AA0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1594   003AA4                     
  1595                           ; BSR set to: 14
  1596                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1597   003AA4  8EBD               	bsf	189,7,c	;volatile
  1598                           
  1599                           ;dc_motor.c: 40:     CCPR1H=0;
  1600   003AA6  0E00               	movlw	0
  1601   003AA8  6EAA               	movwf	170,c	;volatile
  1602                           
  1603                           ;dc_motor.c: 41:     CCPR2H=0;
  1604   003AAA  0E00               	movlw	0
  1605   003AAC  6EA6               	movwf	166,c	;volatile
  1606                           
  1607                           ;dc_motor.c: 42:     CCPR3H=0;
  1608   003AAE  0E00               	movlw	0
  1609   003AB0  010F               	movlb	15	; () banked
  1610   003AB2  6F25               	movwf	37,b	;volatile
  1611                           
  1612                           ;dc_motor.c: 43:     CCPR4H=0;
  1613   003AB4  0E00               	movlw	0
  1614   003AB6  6F21               	movwf	33,b	;volatile
  1615                           
  1616                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1617   003AB8  0EFC               	movlw	-4
  1618   003ABA  16AD               	andwf	173,f,c	;volatile
  1619                           
  1620                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1621   003ABC  0EF3               	movlw	-13
  1622   003ABE  16AD               	andwf	173,f,c	;volatile
  1623                           
  1624                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1625   003AC0  0ECF               	movlw	-49
  1626   003AC2  16AD               	andwf	173,f,c	;volatile
  1627                           
  1628                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1629   003AC4  0E3F               	movlw	-193
  1630   003AC6  16AD               	andwf	173,f,c	;volatile
  1631   003AC8                     
  1632                           ; BSR set to: 15
  1633                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1634   003AC8  88AB               	bsf	171,4,c	;volatile
  1635                           
  1636                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1637   003ACA  50AB               	movf	171,w,c	;volatile
  1638   003ACC  0BF0               	andlw	-16
  1639   003ACE  090C               	iorlw	12
  1640   003AD0  6EAB               	movwf	171,c	;volatile
  1641   003AD2                     
  1642                           ; BSR set to: 15
  1643                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1644   003AD2  8EAB               	bsf	171,7,c	;volatile
  1645   003AD4                     
  1646                           ; BSR set to: 15
  1647                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1648   003AD4  88A7               	bsf	167,4,c	;volatile
  1649                           
  1650                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1651   003AD6  50A7               	movf	167,w,c	;volatile
  1652   003AD8  0BF0               	andlw	-16
  1653   003ADA  090C               	iorlw	12
  1654   003ADC  6EA7               	movwf	167,c	;volatile
  1655   003ADE                     
  1656                           ; BSR set to: 15
  1657                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1658   003ADE  8EA7               	bsf	167,7,c	;volatile
  1659   003AE0                     
  1660                           ; BSR set to: 15
  1661                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1662   003AE0  8926               	bsf	38,4,b	;volatile
  1663                           
  1664                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1665   003AE2  5126               	movf	38,w,b	;volatile
  1666   003AE4  0BF0               	andlw	-16
  1667   003AE6  090C               	iorlw	12
  1668   003AE8  6F26               	movwf	38,b	;volatile
  1669   003AEA                     
  1670                           ; BSR set to: 15
  1671                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1672   003AEA  8F26               	bsf	38,7,b	;volatile
  1673   003AEC                     
  1674                           ; BSR set to: 15
  1675                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1676   003AEC  8922               	bsf	34,4,b	;volatile
  1677                           
  1678                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1679   003AEE  5122               	movf	34,w,b	;volatile
  1680   003AF0  0BF0               	andlw	-16
  1681   003AF2  090C               	iorlw	12
  1682   003AF4  6F22               	movwf	34,b	;volatile
  1683   003AF6                     
  1684                           ; BSR set to: 15
  1685                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1686   003AF6  8F22               	bsf	34,7,b	;volatile
  1687   003AF8                     
  1688                           ; BSR set to: 15
  1689   003AF8  0012               	return		;funcret
  1690   003AFA                     __end_of_initDCmotorsPWM:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _colour_read_all *****************
  1694 ;; Defined at:
  1695 ;;		line 8 in file "colorfunctions.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1698 ;;		 -> colorf(22), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  C               4   39[COMRAM] float 
  1701 ;;  B               4   35[COMRAM] float 
  1702 ;;  G               4   31[COMRAM] float 
  1703 ;;  R               4   27[COMRAM] float 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;Total ram usage:       18 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 4
  1720 ;; This function calls:
  1721 ;;		___xxtofl
  1722 ;;		_color_read_Blue
  1723 ;;		_color_read_Clear
  1724 ;;		_color_read_Green
  1725 ;;		_color_read_Red
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text3
  1732   002FF6                     __ptext3:
  1733                           	callstack 0
  1734   002FF6                     _colour_read_all:
  1735                           	callstack 26
  1736   002FF6                     
  1737                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1738   002FF6  EC0C  F020         	call	_color_read_Red	;wreg free
  1739   002FFA  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1740   002FFE  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1741   003002  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1742   003004  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1743   003006  0E00               	movlw	0
  1744   003008  EC5D  F014         	call	___xxtofl
  1745   00300C  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1746   003010  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1747   003014  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1748   003018  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1749                           
  1750                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1751   00301C  EC34  F020         	call	_color_read_Green	;wreg free
  1752   003020  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1753   003024  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1754   003028  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1755   00302A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1756   00302C  0E00               	movlw	0
  1757   00302E  EC5D  F014         	call	___xxtofl
  1758   003032  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1759   003036  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1760   00303A  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1761   00303E  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1762                           
  1763                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1764   003042  EC84  F020         	call	_color_read_Blue	;wreg free
  1765   003046  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1766   00304A  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1767   00304E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1768   003050  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1769   003052  0E00               	movlw	0
  1770   003054  EC5D  F014         	call	___xxtofl
  1771   003058  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1772   00305C  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1773   003060  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1774   003064  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1775                           
  1776                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1777   003068  EC5C  F020         	call	_color_read_Clear	;wreg free
  1778   00306C  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1779   003070  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1780   003074  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1781   003076  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1782   003078  0E00               	movlw	0
  1783   00307A  EC5D  F014         	call	___xxtofl
  1784   00307E  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1785   003082  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1786   003086  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1787   00308A  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1788   00308E                     
  1789                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1790   00308E  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1791   003092  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1792   003096  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1793   00309A  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1794   00309E  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1795   0030A2  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1796   0030A6                     
  1797                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1798   0030A6  EE20 F008          	lfsr	2,8
  1799   0030AA  501A               	movf	colour_read_all@cf^0,w,c
  1800   0030AC  26D9               	addwf	fsr2l,f,c
  1801   0030AE  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1802   0030B0  22DA               	addwfc	fsr2h,f,c
  1803   0030B2  C024  FFDE         	movff	colour_read_all@B,postinc2
  1804   0030B6  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1805   0030BA  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1806   0030BE  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1807   0030C2                     
  1808                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1809   0030C2  EE20 F004          	lfsr	2,4
  1810   0030C6  501A               	movf	colour_read_all@cf^0,w,c
  1811   0030C8  26D9               	addwf	fsr2l,f,c
  1812   0030CA  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1813   0030CC  22DA               	addwfc	fsr2h,f,c
  1814   0030CE  C020  FFDE         	movff	colour_read_all@G,postinc2
  1815   0030D2  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1816   0030D6  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1817   0030DA  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1818   0030DE                     
  1819                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1820   0030DE  EE20 F00C          	lfsr	2,12
  1821   0030E2  501A               	movf	colour_read_all@cf^0,w,c
  1822   0030E4  26D9               	addwf	fsr2l,f,c
  1823   0030E6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1824   0030E8  22DA               	addwfc	fsr2h,f,c
  1825   0030EA  C028  FFDE         	movff	colour_read_all@C,postinc2
  1826   0030EE  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  1827   0030F2  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  1828   0030F6  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  1829   0030FA  0012               	return		;funcret
  1830   0030FC                     __end_of_colour_read_all:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _color_read_Red *****************
  1834 ;; Defined at:
  1835 ;;		line 38 in file "colorclick.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  tmp             2    9[COMRAM] unsigned int 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    4[COMRAM] unsigned int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;Total ram usage:        7 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 3
  1856 ;; This function calls:
  1857 ;;		_I2C_2_Master_Read
  1858 ;;		_I2C_2_Master_RepStart
  1859 ;;		_I2C_2_Master_Start
  1860 ;;		_I2C_2_Master_Stop
  1861 ;;		_I2C_2_Master_Write
  1862 ;; This function is called by:
  1863 ;;		_colour_read_all
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text4
  1868   004018                     __ptext4:
  1869                           	callstack 0
  1870   004018                     _color_read_Red:
  1871                           	callstack 26
  1872   004018                     
  1873                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  1874   004018  EC73  F022         	call	_I2C_2_Master_Start	;wreg free
  1875                           
  1876                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  1877   00401C  0E52               	movlw	82
  1878   00401E  EC5D  F022         	call	_I2C_2_Master_Write
  1879                           
  1880                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  1881   004022  0EB6               	movlw	182
  1882   004024  EC5D  F022         	call	_I2C_2_Master_Write
  1883                           
  1884                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  1885   004028  EC69  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1886                           
  1887                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  1888   00402C  0E53               	movlw	83
  1889   00402E  EC5D  F022         	call	_I2C_2_Master_Write
  1890                           
  1891                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  1892   004032  0E01               	movlw	1
  1893   004034  EC45  F021         	call	_I2C_2_Master_Read
  1894   004038  6E07               	movwf	??_color_read_Red^0,c
  1895   00403A  5007               	movf	??_color_read_Red^0,w,c
  1896   00403C  6E0A               	movwf	color_read_Red@tmp^0,c
  1897   00403E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1898                           
  1899                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1900   004040  0E00               	movlw	0
  1901   004042  EC45  F021         	call	_I2C_2_Master_Read
  1902   004046  6E07               	movwf	??_color_read_Red^0,c
  1903   004048  5007               	movf	??_color_read_Red^0,w,c
  1904   00404A  6E09               	movwf	(??_color_read_Red+2)^0,c
  1905   00404C  6A08               	clrf	(??_color_read_Red+1)^0,c
  1906   00404E  500A               	movf	color_read_Red@tmp^0,w,c
  1907   004050  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1908   004052  6E0A               	movwf	color_read_Red@tmp^0,c
  1909   004054  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1910   004056  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1911   004058  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1912                           
  1913                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  1914   00405A  EC6E  F022         	call	_I2C_2_Master_Stop	;wreg free
  1915   00405E                     
  1916                           ;colorclick.c: 49:  return tmp;
  1917   00405E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1918   004062  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1919   004066  0012               	return		;funcret
  1920   004068                     __end_of_color_read_Red:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _color_read_Green *****************
  1924 ;; Defined at:
  1925 ;;		line 51 in file "colorclick.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  tmp             2    9[COMRAM] unsigned int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    4[COMRAM] unsigned int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1942 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1943 ;;Total ram usage:        7 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 3
  1946 ;; This function calls:
  1947 ;;		_I2C_2_Master_Read
  1948 ;;		_I2C_2_Master_RepStart
  1949 ;;		_I2C_2_Master_Start
  1950 ;;		_I2C_2_Master_Stop
  1951 ;;		_I2C_2_Master_Write
  1952 ;; This function is called by:
  1953 ;;		_colour_read_all
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text5
  1958   004068                     __ptext5:
  1959                           	callstack 0
  1960   004068                     _color_read_Green:
  1961                           	callstack 26
  1962   004068                     
  1963                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  1964   004068  EC73  F022         	call	_I2C_2_Master_Start	;wreg free
  1965                           
  1966                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  1967   00406C  0E52               	movlw	82
  1968   00406E  EC5D  F022         	call	_I2C_2_Master_Write
  1969                           
  1970                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  1971   004072  0EB8               	movlw	184
  1972   004074  EC5D  F022         	call	_I2C_2_Master_Write
  1973                           
  1974                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  1975   004078  EC69  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1976                           
  1977                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  1978   00407C  0E53               	movlw	83
  1979   00407E  EC5D  F022         	call	_I2C_2_Master_Write
  1980                           
  1981                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  1982   004082  0E01               	movlw	1
  1983   004084  EC45  F021         	call	_I2C_2_Master_Read
  1984   004088  6E07               	movwf	??_color_read_Green^0,c
  1985   00408A  5007               	movf	??_color_read_Green^0,w,c
  1986   00408C  6E0A               	movwf	color_read_Green@tmp^0,c
  1987   00408E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1988                           
  1989                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1990   004090  0E00               	movlw	0
  1991   004092  EC45  F021         	call	_I2C_2_Master_Read
  1992   004096  6E07               	movwf	??_color_read_Green^0,c
  1993   004098  5007               	movf	??_color_read_Green^0,w,c
  1994   00409A  6E09               	movwf	(??_color_read_Green+2)^0,c
  1995   00409C  6A08               	clrf	(??_color_read_Green+1)^0,c
  1996   00409E  500A               	movf	color_read_Green@tmp^0,w,c
  1997   0040A0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1998   0040A2  6E0A               	movwf	color_read_Green@tmp^0,c
  1999   0040A4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2000   0040A6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2001   0040A8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2002                           
  2003                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2004   0040AA  EC6E  F022         	call	_I2C_2_Master_Stop	;wreg free
  2005   0040AE                     
  2006                           ;colorclick.c: 62:     return tmp;
  2007   0040AE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2008   0040B2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2009   0040B6  0012               	return		;funcret
  2010   0040B8                     __end_of_color_read_Green:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _color_read_Clear *****************
  2014 ;; Defined at:
  2015 ;;		line 80 in file "colorclick.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  tmp             2    9[COMRAM] unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    4[COMRAM] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;Total ram usage:        7 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		_I2C_2_Master_Read
  2038 ;;		_I2C_2_Master_RepStart
  2039 ;;		_I2C_2_Master_Start
  2040 ;;		_I2C_2_Master_Stop
  2041 ;;		_I2C_2_Master_Write
  2042 ;; This function is called by:
  2043 ;;		_colour_read_all
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text6
  2048   0040B8                     __ptext6:
  2049                           	callstack 0
  2050   0040B8                     _color_read_Clear:
  2051                           	callstack 26
  2052   0040B8                     
  2053                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2054   0040B8  EC73  F022         	call	_I2C_2_Master_Start	;wreg free
  2055                           
  2056                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2057   0040BC  0E52               	movlw	82
  2058   0040BE  EC5D  F022         	call	_I2C_2_Master_Write
  2059                           
  2060                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2061   0040C2  0EB4               	movlw	180
  2062   0040C4  EC5D  F022         	call	_I2C_2_Master_Write
  2063                           
  2064                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2065   0040C8  EC69  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2066                           
  2067                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2068   0040CC  0E53               	movlw	83
  2069   0040CE  EC5D  F022         	call	_I2C_2_Master_Write
  2070                           
  2071                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2072   0040D2  0E01               	movlw	1
  2073   0040D4  EC45  F021         	call	_I2C_2_Master_Read
  2074   0040D8  6E07               	movwf	??_color_read_Clear^0,c
  2075   0040DA  5007               	movf	??_color_read_Clear^0,w,c
  2076   0040DC  6E0A               	movwf	color_read_Clear@tmp^0,c
  2077   0040DE  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2078                           
  2079                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2080   0040E0  0E00               	movlw	0
  2081   0040E2  EC45  F021         	call	_I2C_2_Master_Read
  2082   0040E6  6E07               	movwf	??_color_read_Clear^0,c
  2083   0040E8  5007               	movf	??_color_read_Clear^0,w,c
  2084   0040EA  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2085   0040EC  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2086   0040EE  500A               	movf	color_read_Clear@tmp^0,w,c
  2087   0040F0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2088   0040F2  6E0A               	movwf	color_read_Clear@tmp^0,c
  2089   0040F4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2090   0040F6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2091   0040F8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2092                           
  2093                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2094   0040FA  EC6E  F022         	call	_I2C_2_Master_Stop	;wreg free
  2095   0040FE                     
  2096                           ;colorclick.c: 91:     return tmp;
  2097   0040FE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2098   004102  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2099   004106  0012               	return		;funcret
  2100   004108                     __end_of_color_read_Clear:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _color_read_Blue *****************
  2104 ;; Defined at:
  2105 ;;		line 65 in file "colorclick.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  tmp             2    9[COMRAM] unsigned int 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    4[COMRAM] unsigned int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;Total ram usage:        7 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 3
  2126 ;; This function calls:
  2127 ;;		_I2C_2_Master_Read
  2128 ;;		_I2C_2_Master_RepStart
  2129 ;;		_I2C_2_Master_Start
  2130 ;;		_I2C_2_Master_Stop
  2131 ;;		_I2C_2_Master_Write
  2132 ;; This function is called by:
  2133 ;;		_colour_read_all
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text7
  2138   004108                     __ptext7:
  2139                           	callstack 0
  2140   004108                     _color_read_Blue:
  2141                           	callstack 26
  2142   004108                     
  2143                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2144   004108  EC73  F022         	call	_I2C_2_Master_Start	;wreg free
  2145                           
  2146                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2147   00410C  0E52               	movlw	82
  2148   00410E  EC5D  F022         	call	_I2C_2_Master_Write
  2149                           
  2150                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2151   004112  0EBA               	movlw	186
  2152   004114  EC5D  F022         	call	_I2C_2_Master_Write
  2153                           
  2154                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2155   004118  EC69  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2156                           
  2157                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2158   00411C  0E53               	movlw	83
  2159   00411E  EC5D  F022         	call	_I2C_2_Master_Write
  2160                           
  2161                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2162   004122  0E01               	movlw	1
  2163   004124  EC45  F021         	call	_I2C_2_Master_Read
  2164   004128  6E07               	movwf	??_color_read_Blue^0,c
  2165   00412A  5007               	movf	??_color_read_Blue^0,w,c
  2166   00412C  6E0A               	movwf	color_read_Blue@tmp^0,c
  2167   00412E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2168                           
  2169                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2170   004130  0E00               	movlw	0
  2171   004132  EC45  F021         	call	_I2C_2_Master_Read
  2172   004136  6E07               	movwf	??_color_read_Blue^0,c
  2173   004138  5007               	movf	??_color_read_Blue^0,w,c
  2174   00413A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2175   00413C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2176   00413E  500A               	movf	color_read_Blue@tmp^0,w,c
  2177   004140  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2178   004142  6E0A               	movwf	color_read_Blue@tmp^0,c
  2179   004144  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2180   004146  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2181   004148  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2182                           
  2183                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2184   00414A  EC6E  F022         	call	_I2C_2_Master_Stop	;wreg free
  2185   00414E                     
  2186                           ;colorclick.c: 76:     return tmp;
  2187   00414E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2188   004152  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2189   004156  0012               	return		;funcret
  2190   004158                     __end_of_color_read_Blue:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _I2C_2_Master_RepStart *****************
  2194 ;; Defined at:
  2195 ;;		line 33 in file "i2c.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 2
  2216 ;; This function calls:
  2217 ;;		_I2C_2_Master_Idle
  2218 ;; This function is called by:
  2219 ;;		_color_read_Red
  2220 ;;		_color_read_Green
  2221 ;;		_color_read_Blue
  2222 ;;		_color_read_Clear
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text8
  2227   0044D2                     __ptext8:
  2228                           	callstack 0
  2229   0044D2                     _I2C_2_Master_RepStart:
  2230                           	callstack 26
  2231   0044D2                     
  2232                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2233   0044D2  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2234   0044D6                     
  2235                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2236   0044D6  010E               	movlb	14	; () banked
  2237   0044D8  83DA               	bsf	218,1,b	;volatile
  2238   0044DA                     
  2239                           ; BSR set to: 14
  2240   0044DA  0012               	return		;funcret
  2241   0044DC                     __end_of_I2C_2_Master_RepStart:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _I2C_2_Master_Read *****************
  2245 ;; Defined at:
  2246 ;;		line 51 in file "i2c.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  ack             1    wreg     unsigned char 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  ack             1    2[COMRAM] unsigned char 
  2251 ;;  tmp             1    3[COMRAM] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      unsigned char 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:        3 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 2
  2268 ;; This function calls:
  2269 ;;		_I2C_2_Master_Idle
  2270 ;; This function is called by:
  2271 ;;		_color_read_Red
  2272 ;;		_color_read_Green
  2273 ;;		_color_read_Blue
  2274 ;;		_color_read_Clear
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text9
  2279   00428A                     __ptext9:
  2280                           	callstack 0
  2281   00428A                     _I2C_2_Master_Read:
  2282                           	callstack 26
  2283                           
  2284                           ; BSR set to: 14
  2285                           ;incstack = 0
  2286                           ;I2C_2_Master_Read@ack stored from wreg
  2287   00428A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2288   00428C                     
  2289                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2290   00428C  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2291   004290                     
  2292                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2293   004290  010E               	movlb	14	; () banked
  2294   004292  87DA               	bsf	218,3,b	;volatile
  2295                           
  2296                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2297   004294  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2298   004298                     
  2299                           ;i2c.c: 57:   tmp = SSP2BUF;
  2300   004298  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2301                           
  2302                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2303   00429C  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2304   0042A0                     
  2305                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2306   0042A0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2307   0042A2  B4D8               	btfsc	status,2,c
  2308   0042A4  EF56  F021         	goto	u2421
  2309   0042A8  EF5A  F021         	goto	u2420
  2310   0042AC                     u2421:
  2311   0042AC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2312   0042AE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2313   0042B0  EF5B  F021         	goto	u2438
  2314   0042B4                     u2420:
  2315   0042B4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2316   0042B6                     u2438:
  2317   0042B6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2318   0042B8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2319   0042BA  010E               	movlb	14	; () banked
  2320   0042BC  51DA               	movf	218,w,b	;volatile
  2321   0042BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2322   0042C0  0BDF               	andlw	-33
  2323   0042C2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2324   0042C4  6FDA               	movwf	218,b	;volatile
  2325   0042C6                     
  2326                           ; BSR set to: 14
  2327                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2328   0042C6  89DA               	bsf	218,4,b	;volatile
  2329   0042C8                     
  2330                           ; BSR set to: 14
  2331                           ;i2c.c: 61:   return tmp;
  2332   0042C8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2333   0042CA                     
  2334                           ; BSR set to: 14
  2335   0042CA  0012               	return		;funcret
  2336   0042CC                     __end_of_I2C_2_Master_Read:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _color_click_init *****************
  2340 ;; Defined at:
  2341 ;;		line 6 in file "colorclick.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;Total ram usage:        1 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 4
  2362 ;; This function calls:
  2363 ;;		_I2C_2_Master_Init
  2364 ;;		_color_writetoaddr
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text10
  2371   0042CC                     __ptext10:
  2372                           	callstack 0
  2373   0042CC                     _color_click_init:
  2374                           	callstack 26
  2375   0042CC                     
  2376                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2377   0042CC  ECDB  F021         	call	_I2C_2_Master_Init	;wreg free
  2378   0042D0                     
  2379                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2380   0042D0  0E01               	movlw	1
  2381   0042D2  6E03               	movwf	color_writetoaddr@value^0,c
  2382   0042D4  0E00               	movlw	0
  2383   0042D6  EC3A  F022         	call	_color_writetoaddr
  2384   0042DA                     
  2385                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2386   0042DA  0E3F               	movlw	63
  2387   0042DC  6E05               	movwf	??_color_click_init^0,c
  2388   0042DE  0E55               	movlw	85
  2389   0042E0                     u4137:
  2390   0042E0  2EE8               	decfsz	wreg,f,c
  2391   0042E2  D7FE               	bra	u4137
  2392   0042E4  2E05               	decfsz	??_color_click_init^0,f,c
  2393   0042E6  D7FC               	bra	u4137
  2394   0042E8  F000               	nop	
  2395   0042EA                     
  2396                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2397   0042EA  0E03               	movlw	3
  2398   0042EC  6E03               	movwf	color_writetoaddr@value^0,c
  2399   0042EE  0E00               	movlw	0
  2400   0042F0  EC3A  F022         	call	_color_writetoaddr
  2401   0042F4                     
  2402                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2403   0042F4  0ED6               	movlw	214
  2404   0042F6  6E03               	movwf	color_writetoaddr@value^0,c
  2405   0042F8  0E01               	movlw	1
  2406   0042FA  EC3A  F022         	call	_color_writetoaddr
  2407   0042FE                     
  2408                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2409   0042FE  927F               	bcf	127,1,c	;volatile
  2410   004300                     
  2411                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2412   004300  9287               	bcf	135,1,c	;volatile
  2413   004302                     
  2414                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2415   004302  9879               	bcf	121,4,c	;volatile
  2416   004304                     
  2417                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2418   004304  9881               	bcf	129,4,c	;volatile
  2419   004306                     
  2420                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2421   004306  9E7E               	bcf	126,7,c	;volatile
  2422   004308                     
  2423                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2424   004308  9E86               	bcf	134,7,c	;volatile
  2425   00430A  0012               	return		;funcret
  2426   00430C                     __end_of_color_click_init:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _color_writetoaddr *****************
  2430 ;; Defined at:
  2431 ;;		line 30 in file "colorclick.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  address         1    wreg     unsigned char 
  2434 ;;  value           1    2[COMRAM] unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  address         1    3[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:        2 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 3
  2453 ;; This function calls:
  2454 ;;		_I2C_2_Master_Start
  2455 ;;		_I2C_2_Master_Stop
  2456 ;;		_I2C_2_Master_Write
  2457 ;; This function is called by:
  2458 ;;		_color_click_init
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text11
  2463   004474                     __ptext11:
  2464                           	callstack 0
  2465   004474                     _color_writetoaddr:
  2466                           	callstack 26
  2467                           
  2468                           ;incstack = 0
  2469                           ;color_writetoaddr@address stored from wreg
  2470   004474  6E04               	movwf	color_writetoaddr@address^0,c
  2471   004476                     
  2472                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2473   004476  EC73  F022         	call	_I2C_2_Master_Start	;wreg free
  2474                           
  2475                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2476   00447A  0E52               	movlw	82
  2477   00447C  EC5D  F022         	call	_I2C_2_Master_Write
  2478                           
  2479                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2480   004480  5004               	movf	color_writetoaddr@address^0,w,c
  2481   004482  0980               	iorlw	128
  2482   004484  EC5D  F022         	call	_I2C_2_Master_Write
  2483                           
  2484                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2485   004488  5003               	movf	color_writetoaddr@value^0,w,c
  2486   00448A  EC5D  F022         	call	_I2C_2_Master_Write
  2487                           
  2488                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2489   00448E  EC6E  F022         	call	_I2C_2_Master_Stop	;wreg free
  2490   004492  0012               	return		;funcret
  2491   004494                     __end_of_color_writetoaddr:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _I2C_2_Master_Write *****************
  2495 ;; Defined at:
  2496 ;;		line 45 in file "i2c.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  data_byte       1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  data_byte       1    1[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;Total ram usage:        1 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 2
  2517 ;; This function calls:
  2518 ;;		_I2C_2_Master_Idle
  2519 ;; This function is called by:
  2520 ;;		_color_writetoaddr
  2521 ;;		_color_read_Red
  2522 ;;		_color_read_Green
  2523 ;;		_color_read_Blue
  2524 ;;		_color_read_Clear
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text12
  2529   0044BA                     __ptext12:
  2530                           	callstack 0
  2531   0044BA                     _I2C_2_Master_Write:
  2532                           	callstack 26
  2533                           
  2534                           ;incstack = 0
  2535                           ;I2C_2_Master_Write@data_byte stored from wreg
  2536   0044BA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2537   0044BC                     
  2538                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2539   0044BC  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2540   0044C0                     
  2541                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2542   0044C0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2543   0044C4  0012               	return		;funcret
  2544   0044C6                     __end_of_I2C_2_Master_Write:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _I2C_2_Master_Stop *****************
  2548 ;; Defined at:
  2549 ;;		line 39 in file "i2c.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		_I2C_2_Master_Idle
  2572 ;; This function is called by:
  2573 ;;		_color_writetoaddr
  2574 ;;		_color_read_Red
  2575 ;;		_color_read_Green
  2576 ;;		_color_read_Blue
  2577 ;;		_color_read_Clear
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text13
  2582   0044DC                     __ptext13:
  2583                           	callstack 0
  2584   0044DC                     _I2C_2_Master_Stop:
  2585                           	callstack 26
  2586   0044DC                     
  2587                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2588   0044DC  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2589   0044E0                     
  2590                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2591   0044E0  010E               	movlb	14	; () banked
  2592   0044E2  85DA               	bsf	218,2,b	;volatile
  2593   0044E4                     
  2594                           ; BSR set to: 14
  2595   0044E4  0012               	return		;funcret
  2596   0044E6                     __end_of_I2C_2_Master_Stop:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _I2C_2_Master_Start *****************
  2600 ;; Defined at:
  2601 ;;		line 27 in file "i2c.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 2
  2622 ;; This function calls:
  2623 ;;		_I2C_2_Master_Idle
  2624 ;; This function is called by:
  2625 ;;		_color_writetoaddr
  2626 ;;		_color_read_Red
  2627 ;;		_color_read_Green
  2628 ;;		_color_read_Blue
  2629 ;;		_color_read_Clear
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text14
  2634   0044E6                     __ptext14:
  2635                           	callstack 0
  2636   0044E6                     _I2C_2_Master_Start:
  2637                           	callstack 26
  2638   0044E6                     
  2639                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2640   0044E6  ECF0  F021         	call	_I2C_2_Master_Idle	;wreg free
  2641   0044EA                     
  2642                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2643   0044EA  010E               	movlb	14	; () banked
  2644   0044EC  81DA               	bsf	218,0,b	;volatile
  2645   0044EE                     
  2646                           ; BSR set to: 14
  2647   0044EE  0012               	return		;funcret
  2648   0044F0                     __end_of_I2C_2_Master_Start:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _I2C_2_Master_Idle *****************
  2652 ;; Defined at:
  2653 ;;		line 22 in file "i2c.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;Total ram usage:        1 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_I2C_2_Master_Start
  2678 ;;		_I2C_2_Master_RepStart
  2679 ;;		_I2C_2_Master_Stop
  2680 ;;		_I2C_2_Master_Write
  2681 ;;		_I2C_2_Master_Read
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text15
  2686   0043E0                     __ptext15:
  2687                           	callstack 0
  2688   0043E0                     _I2C_2_Master_Idle:
  2689                           	callstack 26
  2690   0043E0                     l30:
  2691   0043E0  010E               	movlb	14	; () banked
  2692   0043E2  B5D8               	btfsc	216,2,b	;volatile
  2693   0043E4  EFF6  F021         	goto	u2341
  2694   0043E8  EFF8  F021         	goto	u2340
  2695   0043EC                     u2341:
  2696   0043EC  EFF0  F021         	goto	l30
  2697   0043F0                     u2340:
  2698   0043F0                     
  2699                           ; BSR set to: 14
  2700   0043F0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2701   0043F4  0E1F               	movlw	31
  2702   0043F6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2703   0043F8  A4D8               	btfss	status,2,c
  2704   0043FA  EF01  F022         	goto	u2351
  2705   0043FE  EF03  F022         	goto	u2350
  2706   004402                     u2351:
  2707   004402  EFF0  F021         	goto	l30
  2708   004406                     u2350:
  2709   004406                     
  2710                           ; BSR set to: 14
  2711   004406  0012               	return		;funcret
  2712   004408                     __end_of_I2C_2_Master_Idle:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _I2C_2_Master_Init *****************
  2716 ;; Defined at:
  2717 ;;		line 4 in file "i2c.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;;		_color_click_init
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text16
  2747   0043B6                     __ptext16:
  2748                           	callstack 0
  2749   0043B6                     _I2C_2_Master_Init:
  2750                           	callstack 28
  2751   0043B6                     
  2752                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2753   0043B6  010E               	movlb	14	; () banked
  2754   0043B8  51D9               	movf	217,w,b	;volatile
  2755   0043BA  0BF0               	andlw	-16
  2756   0043BC  0908               	iorlw	8
  2757   0043BE  6FD9               	movwf	217,b	;volatile
  2758   0043C0                     
  2759                           ; BSR set to: 14
  2760                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2761   0043C0  8BD9               	bsf	217,5,b	;volatile
  2762                           
  2763                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2764   0043C2  0E9F               	movlw	159
  2765   0043C4  6FD6               	movwf	214,b	;volatile
  2766   0043C6                     
  2767                           ; BSR set to: 14
  2768                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2769   0043C6  8A84               	bsf	132,5,c	;volatile
  2770   0043C8                     
  2771                           ; BSR set to: 14
  2772                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2773   0043C8  8C84               	bsf	132,6,c	;volatile
  2774   0043CA                     
  2775                           ; BSR set to: 14
  2776                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2777   0043CA  9BA7               	bcf	167,5,b	;volatile
  2778   0043CC                     
  2779                           ; BSR set to: 14
  2780                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2781   0043CC  9DA7               	bcf	167,6,b	;volatile
  2782                           
  2783                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2784   0043CE  0E1D               	movlw	29
  2785   0043D0  6F1D               	movwf	29,b	;volatile
  2786                           
  2787                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2788   0043D2  0E1E               	movlw	30
  2789   0043D4  6F1C               	movwf	28,b	;volatile
  2790                           
  2791                           ;i2c.c: 18:   RD5PPS=0x1C;
  2792   0043D6  0E1C               	movlw	28
  2793   0043D8  6F6F               	movwf	111,b	;volatile
  2794                           
  2795                           ;i2c.c: 19:   RD6PPS=0x1B;
  2796   0043DA  0E1B               	movlw	27
  2797   0043DC  6F70               	movwf	112,b	;volatile
  2798   0043DE                     
  2799                           ; BSR set to: 14
  2800   0043DE  0012               	return		;funcret
  2801   0043E0                     __end_of_I2C_2_Master_Init:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _Timer0_init *****************
  2805 ;; Defined at:
  2806 ;;		line 7 in file "timer.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text17
  2835   00442E                     __ptext17:
  2836                           	callstack 0
  2837   00442E                     _Timer0_init:
  2838                           	callstack 29
  2839   00442E                     
  2840                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  2841   00442E  50D6               	movf	214,w,c	;volatile
  2842   004430  0B1F               	andlw	-225
  2843   004432  0940               	iorlw	64
  2844   004434  6ED6               	movwf	214,c	;volatile
  2845   004436                     
  2846                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  2847   004436  88D6               	bsf	214,4,c	;volatile
  2848                           
  2849                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  2850   004438  50D6               	movf	214,w,c	;volatile
  2851   00443A  0BF0               	andlw	-16
  2852   00443C  090D               	iorlw	13
  2853   00443E  6ED6               	movwf	214,c	;volatile
  2854   004440                     
  2855                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  2856   004440  88D5               	bsf	213,4,c	;volatile
  2857   004442                     
  2858                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  2859   004442  010E               	movlb	14	; () banked
  2860   004444  8B29               	bsf	41,5,b	;volatile
  2861                           
  2862                           ;timer.c: 17:     TMR0H=0;
  2863   004446  0E00               	movlw	0
  2864   004448  6ED4               	movwf	212,c	;volatile
  2865                           
  2866                           ;timer.c: 18:     TMR0L=0;
  2867   00444A  0E00               	movlw	0
  2868   00444C  6ED3               	movwf	211,c	;volatile
  2869   00444E                     
  2870                           ; BSR set to: 14
  2871                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  2872   00444E  8ED5               	bsf	213,7,c	;volatile
  2873   004450                     
  2874                           ; BSR set to: 14
  2875   004450  0012               	return		;funcret
  2876   004452                     __end_of_Timer0_init:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _RGB2Hue *****************
  2880 ;; Defined at:
  2881 ;;		line 23 in file "colorfunctions.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
  2884 ;;		 -> colorf(22), 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  min             2   19[BANK0 ] int 
  2887 ;;  max             2   17[BANK0 ] int 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;Total ram usage:       14 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 3
  2904 ;; This function calls:
  2905 ;;		___fladd
  2906 ;;		___fldiv
  2907 ;;		___fleq
  2908 ;;		___flge
  2909 ;;		___flmul
  2910 ;;		___flsub
  2911 ;;		___fltol
  2912 ;;		___xxtofl
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text18
  2919   000E52                     __ptext18:
  2920                           	callstack 0
  2921   000E52                     _RGB2Hue:
  2922                           	callstack 27
  2923   000E52                     
  2924                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2925   000E52  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2926   000E56  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2927   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  2928   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2929   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2930   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2931   000E6A  EE20 F004          	lfsr	2,4
  2932   000E6E  5057               	movf	RGB2Hue@cf^0,w,c
  2933   000E70  26D9               	addwf	fsr2l,f,c
  2934   000E72  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2935   000E74  22DA               	addwfc	fsr2h,f,c
  2936   000E76  CFDE F005          	movff	postinc2,___fleq@ff2
  2937   000E7A  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2938   000E7E  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2939   000E82  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2940   000E86  ECA3  F01B         	call	___fleq	;wreg free
  2941   000E8A  A0D8               	btfss	status,0,c
  2942   000E8C  EF4A  F007         	goto	u3791
  2943   000E90  EF4C  F007         	goto	u3790
  2944   000E94                     u3791:
  2945   000E94  EF7F  F007         	goto	l4186
  2946   000E98                     u3790:
  2947   000E98  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2948   000E9C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2949   000EA0  CFDE F001          	movff	postinc2,___fleq@ff1
  2950   000EA4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2951   000EA8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2952   000EAC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2953   000EB0  EE20 F008          	lfsr	2,8
  2954   000EB4  5057               	movf	RGB2Hue@cf^0,w,c
  2955   000EB6  26D9               	addwf	fsr2l,f,c
  2956   000EB8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2957   000EBA  22DA               	addwfc	fsr2h,f,c
  2958   000EBC  CFDE F005          	movff	postinc2,___fleq@ff2
  2959   000EC0  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2960   000EC4  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2961   000EC8  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2962   000ECC  ECA3  F01B         	call	___fleq	;wreg free
  2963   000ED0  A0D8               	btfss	status,0,c
  2964   000ED2  EF6D  F007         	goto	u3801
  2965   000ED6  EF6F  F007         	goto	u3800
  2966   000EDA                     u3801:
  2967   000EDA  EF7F  F007         	goto	l4186
  2968   000EDE                     u3800:
  2969   000EDE                     
  2970                           ;colorfunctions.c: 25:         cf->h=0;
  2971   000EDE  EE20 F010          	lfsr	2,16
  2972   000EE2  5057               	movf	RGB2Hue@cf^0,w,c
  2973   000EE4  26D9               	addwf	fsr2l,f,c
  2974   000EE6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2975   000EE8  22DA               	addwfc	fsr2h,f,c
  2976   000EEA  0E00               	movlw	0
  2977   000EEC  6EDE               	movwf	postinc2,c
  2978   000EEE  0E00               	movlw	0
  2979   000EF0  6EDE               	movwf	postinc2,c
  2980   000EF2  0E00               	movlw	0
  2981   000EF4  6EDE               	movwf	postinc2,c
  2982   000EF6  0E00               	movlw	0
  2983   000EF8  6EDD               	movwf	postdec2,c
  2984                           
  2985                           ;colorfunctions.c: 26:     } else{
  2986   000EFA  EFA9  F00A         	goto	l557
  2987   000EFE                     l4186:
  2988                           
  2989                           ;colorfunctions.c: 28:         signed int min=0;
  2990   000EFE  0E00               	movlw	0
  2991   000F00  0100               	movlb	0	; () banked
  2992   000F02  6F74               	movwf	(RGB2Hue@min+1)& (0+255),b
  2993   000F04  0E00               	movlw	0
  2994   000F06  6F73               	movwf	RGB2Hue@min& (0+255),b
  2995   000F08                     
  2996                           ; BSR set to: 0
  2997                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2998   000F08  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2999   000F0C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3000   000F10  CFDE F001          	movff	postinc2,___flge@ff1
  3001   000F14  CFDE F002          	movff	postinc2,___flge@ff1+1
  3002   000F18  CFDE F003          	movff	postinc2,___flge@ff1+2
  3003   000F1C  CFDE F004          	movff	postinc2,___flge@ff1+3
  3004   000F20  EE20 F004          	lfsr	2,4
  3005   000F24  5057               	movf	RGB2Hue@cf^0,w,c
  3006   000F26  26D9               	addwf	fsr2l,f,c
  3007   000F28  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3008   000F2A  22DA               	addwfc	fsr2h,f,c
  3009   000F2C  CFDE F005          	movff	postinc2,___flge@ff2
  3010   000F30  CFDE F006          	movff	postinc2,___flge@ff2+1
  3011   000F34  CFDE F007          	movff	postinc2,___flge@ff2+2
  3012   000F38  CFDE F008          	movff	postinc2,___flge@ff2+3
  3013   000F3C  EC01  F019         	call	___flge	;wreg free
  3014   000F40  B0D8               	btfsc	status,0,c
  3015   000F42  EFA5  F007         	goto	u3811
  3016   000F46  EFA7  F007         	goto	u3810
  3017   000F4A                     u3811:
  3018   000F4A  EFDE  F007         	goto	l4194
  3019   000F4E                     u3810:
  3020   000F4E  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3021   000F52  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3022   000F56  CFDE F001          	movff	postinc2,___flge@ff1
  3023   000F5A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3024   000F5E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3025   000F62  CFDE F004          	movff	postinc2,___flge@ff1+3
  3026   000F66  EE20 F008          	lfsr	2,8
  3027   000F6A  5057               	movf	RGB2Hue@cf^0,w,c
  3028   000F6C  26D9               	addwf	fsr2l,f,c
  3029   000F6E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3030   000F70  22DA               	addwfc	fsr2h,f,c
  3031   000F72  CFDE F005          	movff	postinc2,___flge@ff2
  3032   000F76  CFDE F006          	movff	postinc2,___flge@ff2+1
  3033   000F7A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3034   000F7E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3035   000F82  EC01  F019         	call	___flge	;wreg free
  3036   000F86  B0D8               	btfsc	status,0,c
  3037   000F88  EFC8  F007         	goto	u3821
  3038   000F8C  EFCA  F007         	goto	u3820
  3039   000F90                     u3821:
  3040   000F90  EFDE  F007         	goto	l4194
  3041   000F94                     u3820:
  3042   000F94                     
  3043                           ;colorfunctions.c: 31:             min=cf->Rf;
  3044   000F94  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3045   000F98  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3046   000F9C  CFDE F001          	movff	postinc2,___fltol@f1
  3047   000FA0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3048   000FA4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3049   000FA8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3050   000FAC  EC7E  F018         	call	___fltol	;wreg free
  3051   000FB0  C001  F073         	movff	?___fltol,RGB2Hue@min
  3052   000FB4  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3053                           
  3054                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3055   000FB8  EF50  F008         	goto	l549
  3056   000FBC                     l4194:
  3057   000FBC  EE20 F004          	lfsr	2,4
  3058   000FC0  5057               	movf	RGB2Hue@cf^0,w,c
  3059   000FC2  26D9               	addwf	fsr2l,f,c
  3060   000FC4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3061   000FC6  22DA               	addwfc	fsr2h,f,c
  3062   000FC8  CFDE F001          	movff	postinc2,___flge@ff1
  3063   000FCC  CFDE F002          	movff	postinc2,___flge@ff1+1
  3064   000FD0  CFDE F003          	movff	postinc2,___flge@ff1+2
  3065   000FD4  CFDE F004          	movff	postinc2,___flge@ff1+3
  3066   000FD8  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3067   000FDC  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3068   000FE0  CFDE F005          	movff	postinc2,___flge@ff2
  3069   000FE4  CFDE F006          	movff	postinc2,___flge@ff2+1
  3070   000FE8  CFDE F007          	movff	postinc2,___flge@ff2+2
  3071   000FEC  CFDE F008          	movff	postinc2,___flge@ff2+3
  3072   000FF0  EC01  F019         	call	___flge	;wreg free
  3073   000FF4  B0D8               	btfsc	status,0,c
  3074   000FF6  EFFF  F007         	goto	u3831
  3075   000FFA  EF01  F008         	goto	u3830
  3076   000FFE                     u3831:
  3077   000FFE  EF3C  F008         	goto	l4200
  3078   001002                     u3830:
  3079   001002  EE20 F004          	lfsr	2,4
  3080   001006  5057               	movf	RGB2Hue@cf^0,w,c
  3081   001008  26D9               	addwf	fsr2l,f,c
  3082   00100A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3083   00100C  22DA               	addwfc	fsr2h,f,c
  3084   00100E  CFDE F001          	movff	postinc2,___flge@ff1
  3085   001012  CFDE F002          	movff	postinc2,___flge@ff1+1
  3086   001016  CFDE F003          	movff	postinc2,___flge@ff1+2
  3087   00101A  CFDE F004          	movff	postinc2,___flge@ff1+3
  3088   00101E  EE20 F008          	lfsr	2,8
  3089   001022  5057               	movf	RGB2Hue@cf^0,w,c
  3090   001024  26D9               	addwf	fsr2l,f,c
  3091   001026  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3092   001028  22DA               	addwfc	fsr2h,f,c
  3093   00102A  CFDE F005          	movff	postinc2,___flge@ff2
  3094   00102E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3095   001032  CFDE F007          	movff	postinc2,___flge@ff2+2
  3096   001036  CFDE F008          	movff	postinc2,___flge@ff2+3
  3097   00103A  EC01  F019         	call	___flge	;wreg free
  3098   00103E  B0D8               	btfsc	status,0,c
  3099   001040  EF24  F008         	goto	u3841
  3100   001044  EF26  F008         	goto	u3840
  3101   001048                     u3841:
  3102   001048  EF3C  F008         	goto	l4200
  3103   00104C                     u3840:
  3104   00104C                     
  3105                           ;colorfunctions.c: 33:             min=cf->Gf;
  3106   00104C  EE20 F004          	lfsr	2,4
  3107   001050  5057               	movf	RGB2Hue@cf^0,w,c
  3108   001052  26D9               	addwf	fsr2l,f,c
  3109   001054  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3110   001056  22DA               	addwfc	fsr2h,f,c
  3111   001058  CFDE F001          	movff	postinc2,___fltol@f1
  3112   00105C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3113   001060  CFDE F003          	movff	postinc2,___fltol@f1+2
  3114   001064  CFDE F004          	movff	postinc2,___fltol@f1+3
  3115   001068  EC7E  F018         	call	___fltol	;wreg free
  3116   00106C  C001  F073         	movff	?___fltol,RGB2Hue@min
  3117   001070  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3118                           
  3119                           ;colorfunctions.c: 34:         } else{
  3120   001074  EF50  F008         	goto	l549
  3121   001078                     l4200:
  3122                           
  3123                           ;colorfunctions.c: 35:             min=cf->Bf;
  3124   001078  EE20 F008          	lfsr	2,8
  3125   00107C  5057               	movf	RGB2Hue@cf^0,w,c
  3126   00107E  26D9               	addwf	fsr2l,f,c
  3127   001080  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3128   001082  22DA               	addwfc	fsr2h,f,c
  3129   001084  CFDE F001          	movff	postinc2,___fltol@f1
  3130   001088  CFDE F002          	movff	postinc2,___fltol@f1+1
  3131   00108C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3132   001090  CFDE F004          	movff	postinc2,___fltol@f1+3
  3133   001094  EC7E  F018         	call	___fltol	;wreg free
  3134   001098  C001  F073         	movff	?___fltol,RGB2Hue@min
  3135   00109C  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3136   0010A0                     l549:
  3137                           
  3138                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3139   0010A0  EE20 F004          	lfsr	2,4
  3140   0010A4  5057               	movf	RGB2Hue@cf^0,w,c
  3141   0010A6  26D9               	addwf	fsr2l,f,c
  3142   0010A8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3143   0010AA  22DA               	addwfc	fsr2h,f,c
  3144   0010AC  CFDE F001          	movff	postinc2,___flge@ff1
  3145   0010B0  CFDE F002          	movff	postinc2,___flge@ff1+1
  3146   0010B4  CFDE F003          	movff	postinc2,___flge@ff1+2
  3147   0010B8  CFDE F004          	movff	postinc2,___flge@ff1+3
  3148   0010BC  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3149   0010C0  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3150   0010C4  CFDE F005          	movff	postinc2,___flge@ff2
  3151   0010C8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3152   0010CC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3153   0010D0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3154   0010D4  EC01  F019         	call	___flge	;wreg free
  3155   0010D8  B0D8               	btfsc	status,0,c
  3156   0010DA  EF71  F008         	goto	u3851
  3157   0010DE  EF73  F008         	goto	u3850
  3158   0010E2                     u3851:
  3159   0010E2  EF0D  F009         	goto	l4208
  3160   0010E6                     u3850:
  3161   0010E6  EE20 F008          	lfsr	2,8
  3162   0010EA  5057               	movf	RGB2Hue@cf^0,w,c
  3163   0010EC  26D9               	addwf	fsr2l,f,c
  3164   0010EE  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3165   0010F0  22DA               	addwfc	fsr2h,f,c
  3166   0010F2  CFDE F001          	movff	postinc2,___flge@ff1
  3167   0010F6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3168   0010FA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3169   0010FE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3170   001102  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3171   001106  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3172   00110A  CFDE F005          	movff	postinc2,___flge@ff2
  3173   00110E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3174   001112  CFDE F007          	movff	postinc2,___flge@ff2+2
  3175   001116  CFDE F008          	movff	postinc2,___flge@ff2+3
  3176   00111A  EC01  F019         	call	___flge	;wreg free
  3177   00111E  B0D8               	btfsc	status,0,c
  3178   001120  EF94  F008         	goto	u3861
  3179   001124  EF96  F008         	goto	u3860
  3180   001128                     u3861:
  3181   001128  EF0D  F009         	goto	l4208
  3182   00112C                     u3860:
  3183   00112C                     
  3184                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3185   00112C  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3186   001130  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3187   001134  CFDE F001          	movff	postinc2,___fltol@f1
  3188   001138  CFDE F002          	movff	postinc2,___fltol@f1+1
  3189   00113C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3190   001140  CFDE F004          	movff	postinc2,___fltol@f1+3
  3191   001144  EC7E  F018         	call	___fltol	;wreg free
  3192   001148  C001  F071         	movff	?___fltol,RGB2Hue@max
  3193   00114C  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3194   001150                     
  3195                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3196   001150  0100               	movlb	0	; () banked
  3197   001152  5173               	movf	RGB2Hue@min& (0+255),w,b
  3198   001154  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3199   001156  6E59               	movwf	??_RGB2Hue^0,c
  3200   001158  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3201   00115A  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3202   00115C  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3203   00115E  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3204   001162  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3205   001166  0E00               	movlw	0
  3206   001168  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3207   00116A  0EFF               	movlw	-1
  3208   00116C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3209   00116E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3210   001170  0E01               	movlw	1
  3211   001172  EC5D  F014         	call	___xxtofl
  3212   001176  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3213   00117A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3214   00117E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3215   001182  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3216   001186  EE20 F008          	lfsr	2,8
  3217   00118A  5057               	movf	RGB2Hue@cf^0,w,c
  3218   00118C  26D9               	addwf	fsr2l,f,c
  3219   00118E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3220   001190  22DA               	addwfc	fsr2h,f,c
  3221   001192  CFDE F02E          	movff	postinc2,___flsub@a
  3222   001196  CFDE F02F          	movff	postinc2,___flsub@a+1
  3223   00119A  CFDE F030          	movff	postinc2,___flsub@a+2
  3224   00119E  CFDE F031          	movff	postinc2,___flsub@a+3
  3225   0011A2  EE20 F004          	lfsr	2,4
  3226   0011A6  5057               	movf	RGB2Hue@cf^0,w,c
  3227   0011A8  26D9               	addwf	fsr2l,f,c
  3228   0011AA  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3229   0011AC  22DA               	addwfc	fsr2h,f,c
  3230   0011AE  CFDE F02A          	movff	postinc2,___flsub@b
  3231   0011B2  CFDE F02B          	movff	postinc2,___flsub@b+1
  3232   0011B6  CFDE F02C          	movff	postinc2,___flsub@b+2
  3233   0011BA  CFDE F02D          	movff	postinc2,___flsub@b+3
  3234   0011BE  EC22  F021         	call	___flsub	;wreg free
  3235   0011C2  C02A  F032         	movff	?___flsub,___fldiv@b
  3236   0011C6  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3237   0011CA  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3238   0011CE  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3239   0011D2  EC97  F011         	call	___fldiv	;wreg free
  3240   0011D6  C032  F04B         	movff	?___fldiv,___flmul@b
  3241   0011DA  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3242   0011DE  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3243   0011E2  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3244   0011E6  0E00               	movlw	0
  3245   0011E8  6E4F               	movwf	___flmul@a^0,c
  3246   0011EA  0E00               	movlw	0
  3247   0011EC  6E50               	movwf	(___flmul@a+1)^0,c
  3248   0011EE  0E70               	movlw	112
  3249   0011F0  6E51               	movwf	(___flmul@a+2)^0,c
  3250   0011F2  0E42               	movlw	66
  3251   0011F4  6E52               	movwf	(___flmul@a+3)^0,c
  3252   0011F6  EC81  F00F         	call	___flmul	;wreg free
  3253   0011FA  EE20 F010          	lfsr	2,16
  3254   0011FE  5057               	movf	RGB2Hue@cf^0,w,c
  3255   001200  26D9               	addwf	fsr2l,f,c
  3256   001202  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3257   001204  22DA               	addwfc	fsr2h,f,c
  3258   001206  C04B  FFDE         	movff	?___flmul,postinc2
  3259   00120A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3260   00120E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3261   001212  C04E  FFDE         	movff	?___flmul+3,postinc2
  3262                           
  3263                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3264   001216  EF75  F00A         	goto	l4220
  3265   00121A                     l4208:
  3266   00121A  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3267   00121E  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3268   001222  CFDE F001          	movff	postinc2,___flge@ff1
  3269   001226  CFDE F002          	movff	postinc2,___flge@ff1+1
  3270   00122A  CFDE F003          	movff	postinc2,___flge@ff1+2
  3271   00122E  CFDE F004          	movff	postinc2,___flge@ff1+3
  3272   001232  EE20 F004          	lfsr	2,4
  3273   001236  5057               	movf	RGB2Hue@cf^0,w,c
  3274   001238  26D9               	addwf	fsr2l,f,c
  3275   00123A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3276   00123C  22DA               	addwfc	fsr2h,f,c
  3277   00123E  CFDE F005          	movff	postinc2,___flge@ff2
  3278   001242  CFDE F006          	movff	postinc2,___flge@ff2+1
  3279   001246  CFDE F007          	movff	postinc2,___flge@ff2+2
  3280   00124A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3281   00124E  EC01  F019         	call	___flge	;wreg free
  3282   001252  B0D8               	btfsc	status,0,c
  3283   001254  EF2E  F009         	goto	u3871
  3284   001258  EF30  F009         	goto	u3870
  3285   00125C                     u3871:
  3286   00125C  EFE6  F009         	goto	l4216
  3287   001260                     u3870:
  3288   001260  EE20 F008          	lfsr	2,8
  3289   001264  5057               	movf	RGB2Hue@cf^0,w,c
  3290   001266  26D9               	addwf	fsr2l,f,c
  3291   001268  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3292   00126A  22DA               	addwfc	fsr2h,f,c
  3293   00126C  CFDE F001          	movff	postinc2,___flge@ff1
  3294   001270  CFDE F002          	movff	postinc2,___flge@ff1+1
  3295   001274  CFDE F003          	movff	postinc2,___flge@ff1+2
  3296   001278  CFDE F004          	movff	postinc2,___flge@ff1+3
  3297   00127C  EE20 F004          	lfsr	2,4
  3298   001280  5057               	movf	RGB2Hue@cf^0,w,c
  3299   001282  26D9               	addwf	fsr2l,f,c
  3300   001284  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3301   001286  22DA               	addwfc	fsr2h,f,c
  3302   001288  CFDE F005          	movff	postinc2,___flge@ff2
  3303   00128C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3304   001290  CFDE F007          	movff	postinc2,___flge@ff2+2
  3305   001294  CFDE F008          	movff	postinc2,___flge@ff2+3
  3306   001298  EC01  F019         	call	___flge	;wreg free
  3307   00129C  B0D8               	btfsc	status,0,c
  3308   00129E  EF53  F009         	goto	u3881
  3309   0012A2  EF55  F009         	goto	u3880
  3310   0012A6                     u3881:
  3311   0012A6  EFE6  F009         	goto	l4216
  3312   0012AA                     u3880:
  3313   0012AA                     
  3314                           ;colorfunctions.c: 44:             max=cf->Gf;
  3315   0012AA  EE20 F004          	lfsr	2,4
  3316   0012AE  5057               	movf	RGB2Hue@cf^0,w,c
  3317   0012B0  26D9               	addwf	fsr2l,f,c
  3318   0012B2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3319   0012B4  22DA               	addwfc	fsr2h,f,c
  3320   0012B6  CFDE F001          	movff	postinc2,___fltol@f1
  3321   0012BA  CFDE F002          	movff	postinc2,___fltol@f1+1
  3322   0012BE  CFDE F003          	movff	postinc2,___fltol@f1+2
  3323   0012C2  CFDE F004          	movff	postinc2,___fltol@f1+3
  3324   0012C6  EC7E  F018         	call	___fltol	;wreg free
  3325   0012CA  C001  F071         	movff	?___fltol,RGB2Hue@max
  3326   0012CE  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3327                           
  3328                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3329   0012D2  0100               	movlb	0	; () banked
  3330   0012D4  5173               	movf	RGB2Hue@min& (0+255),w,b
  3331   0012D6  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3332   0012D8  6E59               	movwf	??_RGB2Hue^0,c
  3333   0012DA  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3334   0012DC  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3335   0012DE  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3336   0012E0  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3337   0012E4  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3338   0012E8  0E00               	movlw	0
  3339   0012EA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3340   0012EC  0EFF               	movlw	-1
  3341   0012EE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3342   0012F0  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3343   0012F2  0E01               	movlw	1
  3344   0012F4  EC5D  F014         	call	___xxtofl
  3345   0012F8  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3346   0012FC  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3347   001300  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3348   001304  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3349   001308  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3350   00130C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3351   001310  CFDE F02E          	movff	postinc2,___flsub@a
  3352   001314  CFDE F02F          	movff	postinc2,___flsub@a+1
  3353   001318  CFDE F030          	movff	postinc2,___flsub@a+2
  3354   00131C  CFDE F031          	movff	postinc2,___flsub@a+3
  3355   001320  EE20 F008          	lfsr	2,8
  3356   001324  5057               	movf	RGB2Hue@cf^0,w,c
  3357   001326  26D9               	addwf	fsr2l,f,c
  3358   001328  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3359   00132A  22DA               	addwfc	fsr2h,f,c
  3360   00132C  CFDE F02A          	movff	postinc2,___flsub@b
  3361   001330  CFDE F02B          	movff	postinc2,___flsub@b+1
  3362   001334  CFDE F02C          	movff	postinc2,___flsub@b+2
  3363   001338  CFDE F02D          	movff	postinc2,___flsub@b+3
  3364   00133C  EC22  F021         	call	___flsub	;wreg free
  3365   001340  C02A  F032         	movff	?___flsub,___fldiv@b
  3366   001344  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3367   001348  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3368   00134C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3369   001350  EC97  F011         	call	___fldiv	;wreg free
  3370   001354  C032  F06D         	movff	?___fldiv,_RGB2Hue$3132
  3371   001358  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3132+1
  3372   00135C  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3132+2
  3373   001360  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3132+3
  3374   001364                     
  3375                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3376   001364  0E00               	movlw	0
  3377   001366  6E1E               	movwf	___fladd@a^0,c
  3378   001368  0E00               	movlw	0
  3379   00136A  6E1F               	movwf	(___fladd@a+1)^0,c
  3380   00136C  0E00               	movlw	0
  3381   00136E  6E20               	movwf	(___fladd@a+2)^0,c
  3382   001370  0E40               	movlw	64
  3383   001372  6E21               	movwf	(___fladd@a+3)^0,c
  3384   001374  C06D  F01A         	movff	_RGB2Hue$3132,___fladd@b
  3385   001378  C06E  F01B         	movff	_RGB2Hue$3132+1,___fladd@b+1
  3386   00137C  C06F  F01C         	movff	_RGB2Hue$3132+2,___fladd@b+2
  3387   001380  C070  F01D         	movff	_RGB2Hue$3132+3,___fladd@b+3
  3388   001384  EC21  F00D         	call	___fladd	;wreg free
  3389   001388  C01A  F04B         	movff	?___fladd,___flmul@b
  3390   00138C  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3391   001390  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3392   001394  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3393   001398  0E00               	movlw	0
  3394   00139A  6E4F               	movwf	___flmul@a^0,c
  3395   00139C  0E00               	movlw	0
  3396   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  3397   0013A0  0E70               	movlw	112
  3398   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  3399   0013A4  0E42               	movlw	66
  3400   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  3401   0013A8  EC81  F00F         	call	___flmul	;wreg free
  3402   0013AC  EE20 F010          	lfsr	2,16
  3403   0013B0  5057               	movf	RGB2Hue@cf^0,w,c
  3404   0013B2  26D9               	addwf	fsr2l,f,c
  3405   0013B4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3406   0013B6  22DA               	addwfc	fsr2h,f,c
  3407   0013B8  C04B  FFDE         	movff	?___flmul,postinc2
  3408   0013BC  C04C  FFDE         	movff	?___flmul+1,postinc2
  3409   0013C0  C04D  FFDE         	movff	?___flmul+2,postinc2
  3410   0013C4  C04E  FFDE         	movff	?___flmul+3,postinc2
  3411                           
  3412                           ;colorfunctions.c: 46:         }else{
  3413   0013C8  EF75  F00A         	goto	l4220
  3414   0013CC                     l4216:
  3415                           
  3416                           ;colorfunctions.c: 47:             max=cf->Bf;
  3417   0013CC  EE20 F008          	lfsr	2,8
  3418   0013D0  5057               	movf	RGB2Hue@cf^0,w,c
  3419   0013D2  26D9               	addwf	fsr2l,f,c
  3420   0013D4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3421   0013D6  22DA               	addwfc	fsr2h,f,c
  3422   0013D8  CFDE F001          	movff	postinc2,___fltol@f1
  3423   0013DC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3424   0013E0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3425   0013E4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3426   0013E8  EC7E  F018         	call	___fltol	;wreg free
  3427   0013EC  C001  F071         	movff	?___fltol,RGB2Hue@max
  3428   0013F0  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3429                           
  3430                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3431   0013F4  0100               	movlb	0	; () banked
  3432   0013F6  5173               	movf	RGB2Hue@min& (0+255),w,b
  3433   0013F8  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3434   0013FA  6E59               	movwf	??_RGB2Hue^0,c
  3435   0013FC  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3436   0013FE  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3437   001400  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3438   001402  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3439   001406  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3440   00140A  0E00               	movlw	0
  3441   00140C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3442   00140E  0EFF               	movlw	-1
  3443   001410  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3444   001412  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3445   001414  0E01               	movlw	1
  3446   001416  EC5D  F014         	call	___xxtofl
  3447   00141A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3448   00141E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3449   001422  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3450   001426  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3451   00142A  EE20 F004          	lfsr	2,4
  3452   00142E  5057               	movf	RGB2Hue@cf^0,w,c
  3453   001430  26D9               	addwf	fsr2l,f,c
  3454   001432  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3455   001434  22DA               	addwfc	fsr2h,f,c
  3456   001436  CFDE F02E          	movff	postinc2,___flsub@a
  3457   00143A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3458   00143E  CFDE F030          	movff	postinc2,___flsub@a+2
  3459   001442  CFDE F031          	movff	postinc2,___flsub@a+3
  3460   001446  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3461   00144A  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3462   00144E  CFDE F02A          	movff	postinc2,___flsub@b
  3463   001452  CFDE F02B          	movff	postinc2,___flsub@b+1
  3464   001456  CFDE F02C          	movff	postinc2,___flsub@b+2
  3465   00145A  CFDE F02D          	movff	postinc2,___flsub@b+3
  3466   00145E  EC22  F021         	call	___flsub	;wreg free
  3467   001462  C02A  F032         	movff	?___flsub,___fldiv@b
  3468   001466  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3469   00146A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3470   00146E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3471   001472  EC97  F011         	call	___fldiv	;wreg free
  3472   001476  C032  F06D         	movff	?___fldiv,_RGB2Hue$3132
  3473   00147A  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3132+1
  3474   00147E  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3132+2
  3475   001482  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3132+3
  3476   001486                     
  3477                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3478   001486  0E00               	movlw	0
  3479   001488  6E1E               	movwf	___fladd@a^0,c
  3480   00148A  0E00               	movlw	0
  3481   00148C  6E1F               	movwf	(___fladd@a+1)^0,c
  3482   00148E  0E80               	movlw	128
  3483   001490  6E20               	movwf	(___fladd@a+2)^0,c
  3484   001492  0E40               	movlw	64
  3485   001494  6E21               	movwf	(___fladd@a+3)^0,c
  3486   001496  C06D  F01A         	movff	_RGB2Hue$3132,___fladd@b
  3487   00149A  C06E  F01B         	movff	_RGB2Hue$3132+1,___fladd@b+1
  3488   00149E  C06F  F01C         	movff	_RGB2Hue$3132+2,___fladd@b+2
  3489   0014A2  C070  F01D         	movff	_RGB2Hue$3132+3,___fladd@b+3
  3490   0014A6  EC21  F00D         	call	___fladd	;wreg free
  3491   0014AA  C01A  F04B         	movff	?___fladd,___flmul@b
  3492   0014AE  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3493   0014B2  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3494   0014B6  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3495   0014BA  0E00               	movlw	0
  3496   0014BC  6E4F               	movwf	___flmul@a^0,c
  3497   0014BE  0E00               	movlw	0
  3498   0014C0  6E50               	movwf	(___flmul@a+1)^0,c
  3499   0014C2  0E70               	movlw	112
  3500   0014C4  6E51               	movwf	(___flmul@a+2)^0,c
  3501   0014C6  0E42               	movlw	66
  3502   0014C8  6E52               	movwf	(___flmul@a+3)^0,c
  3503   0014CA  EC81  F00F         	call	___flmul	;wreg free
  3504   0014CE  EE20 F010          	lfsr	2,16
  3505   0014D2  5057               	movf	RGB2Hue@cf^0,w,c
  3506   0014D4  26D9               	addwf	fsr2l,f,c
  3507   0014D6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3508   0014D8  22DA               	addwfc	fsr2h,f,c
  3509   0014DA  C04B  FFDE         	movff	?___flmul,postinc2
  3510   0014DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3511   0014E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3512   0014E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3513   0014EA                     l4220:
  3514                           
  3515                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3516   0014EA  EE20 F010          	lfsr	2,16
  3517   0014EE  5057               	movf	RGB2Hue@cf^0,w,c
  3518   0014F0  26D9               	addwf	fsr2l,f,c
  3519   0014F2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3520   0014F4  22DA               	addwfc	fsr2h,f,c
  3521   0014F6  0E03               	movlw	3
  3522   0014F8  BEDB               	btfsc	plusw2,7,c
  3523   0014FA  EF83  F00A         	goto	u3890
  3524   0014FE  EF81  F00A         	goto	u3891
  3525   001502                     u3891:
  3526   001502  EFA9  F00A         	goto	l557
  3527   001506                     u3890:
  3528   001506                     
  3529                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3530   001506  EE20 F010          	lfsr	2,16
  3531   00150A  5057               	movf	RGB2Hue@cf^0,w,c
  3532   00150C  26D9               	addwf	fsr2l,f,c
  3533   00150E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3534   001510  22DA               	addwfc	fsr2h,f,c
  3535   001512  CFDE F01A          	movff	postinc2,___fladd@b
  3536   001516  CFDE F01B          	movff	postinc2,___fladd@b+1
  3537   00151A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3538   00151E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3539   001522  0E00               	movlw	0
  3540   001524  6E1E               	movwf	___fladd@a^0,c
  3541   001526  0E00               	movlw	0
  3542   001528  6E1F               	movwf	(___fladd@a+1)^0,c
  3543   00152A  0EB4               	movlw	180
  3544   00152C  6E20               	movwf	(___fladd@a+2)^0,c
  3545   00152E  0E43               	movlw	67
  3546   001530  6E21               	movwf	(___fladd@a+3)^0,c
  3547   001532  EC21  F00D         	call	___fladd	;wreg free
  3548   001536  EE20 F010          	lfsr	2,16
  3549   00153A  5057               	movf	RGB2Hue@cf^0,w,c
  3550   00153C  26D9               	addwf	fsr2l,f,c
  3551   00153E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3552   001540  22DA               	addwfc	fsr2h,f,c
  3553   001542  C01A  FFDE         	movff	?___fladd,postinc2
  3554   001546  C01B  FFDE         	movff	?___fladd+1,postinc2
  3555   00154A  C01C  FFDE         	movff	?___fladd+2,postinc2
  3556   00154E  C01D  FFDE         	movff	?___fladd+3,postinc2
  3557   001552                     l557:
  3558   001552  0012               	return		;funcret
  3559   001554                     __end_of_RGB2Hue:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function ___xxtofl *****************
  3563 ;; Defined at:
  3564 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  sign            1    wreg     unsigned char 
  3567 ;;  val             4   11[COMRAM] long 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  sign            1   19[COMRAM] unsigned char 
  3570 ;;  arg             4   21[COMRAM] unsigned long 
  3571 ;;  exp             1   20[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  4   11[COMRAM] unsigned char 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:       14 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_Left45
  3592 ;;		_Right45
  3593 ;;		_reverseHalfSquare
  3594 ;;		_Yellow_rev1_R90
  3595 ;;		_Pink_rev1_L90
  3596 ;;		_colour_read_all
  3597 ;;		_RGB2Hue
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text19
  3602   0028BA                     __ptext19:
  3603                           	callstack 0
  3604   0028BA                     ___xxtofl:
  3605                           	callstack 28
  3606                           
  3607                           ;incstack = 0
  3608                           ;___xxtofl@sign stored from wreg
  3609   0028BA  6E14               	movwf	___xxtofl@sign^0,c
  3610   0028BC  5014               	movf	___xxtofl@sign^0,w,c
  3611   0028BE  B4D8               	btfsc	status,2,c
  3612   0028C0  EF64  F014         	goto	u3671
  3613   0028C4  EF66  F014         	goto	u3670
  3614   0028C8                     u3671:
  3615   0028C8  EF88  F014         	goto	l1288
  3616   0028CC                     u3670:
  3617   0028CC  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3618   0028CE  EF6D  F014         	goto	u3680
  3619   0028D2  EF6B  F014         	goto	u3681
  3620   0028D6                     u3681:
  3621   0028D6  EF88  F014         	goto	l1288
  3622   0028DA                     u3680:
  3623   0028DA  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3624   0028DE  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3625   0028E2  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3626   0028E6  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3627   0028EA  1E10               	comf	??___xxtofl^0,f,c
  3628   0028EC  1E11               	comf	(??___xxtofl+1)^0,f,c
  3629   0028EE  1E12               	comf	(??___xxtofl+2)^0,f,c
  3630   0028F0  1E13               	comf	(??___xxtofl+3)^0,f,c
  3631   0028F2  2A10               	incf	??___xxtofl^0,f,c
  3632   0028F4  0E00               	movlw	0
  3633   0028F6  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3634   0028F8  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3635   0028FA  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3636   0028FC  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3637   002900  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3638   002904  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3639   002908  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3640   00290C  EF90  F014         	goto	l4042
  3641   002910                     l1288:
  3642   002910  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3643   002914  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3644   002918  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3645   00291C  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3646   002920                     l4042:
  3647   002920  500C               	movf	___xxtofl@val^0,w,c
  3648   002922  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3649   002924  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3650   002926  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3651   002928  A4D8               	btfss	status,2,c
  3652   00292A  EF99  F014         	goto	u3691
  3653   00292E  EF9B  F014         	goto	u3690
  3654   002932                     u3691:
  3655   002932  EFA5  F014         	goto	l4048
  3656   002936                     u3690:
  3657   002936  0E00               	movlw	0
  3658   002938  6E0C               	movwf	?___xxtofl^0,c
  3659   00293A  0E00               	movlw	0
  3660   00293C  6E0D               	movwf	(?___xxtofl+1)^0,c
  3661   00293E  0E00               	movlw	0
  3662   002940  6E0E               	movwf	(?___xxtofl+2)^0,c
  3663   002942  0E00               	movlw	0
  3664   002944  6E0F               	movwf	(?___xxtofl+3)^0,c
  3665   002946  EF36  F015         	goto	l1291
  3666   00294A                     l4048:
  3667   00294A  0E96               	movlw	150
  3668   00294C  6E15               	movwf	___xxtofl@exp^0,c
  3669   00294E  EFAF  F014         	goto	l4052
  3670   002952                     l4050:
  3671   002952  2A15               	incf	___xxtofl@exp^0,f,c
  3672   002954  90D8               	bcf	status,0,c
  3673   002956  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3674   002958  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3675   00295A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3676   00295C  3216               	rrcf	___xxtofl@arg^0,f,c
  3677   00295E                     l4052:
  3678   00295E  0E00               	movlw	0
  3679   002960  1416               	andwf	___xxtofl@arg^0,w,c
  3680   002962  6E10               	movwf	??___xxtofl^0,c
  3681   002964  0E00               	movlw	0
  3682   002966  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3683   002968  6E11               	movwf	(??___xxtofl+1)^0,c
  3684   00296A  0E00               	movlw	0
  3685   00296C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3686   00296E  6E12               	movwf	(??___xxtofl+2)^0,c
  3687   002970  0EFE               	movlw	254
  3688   002972  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3689   002974  6E13               	movwf	(??___xxtofl+3)^0,c
  3690   002976  5010               	movf	??___xxtofl^0,w,c
  3691   002978  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3692   00297A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3693   00297C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3694   00297E  A4D8               	btfss	status,2,c
  3695   002980  EFC4  F014         	goto	u3701
  3696   002984  EFC6  F014         	goto	u3700
  3697   002988                     u3701:
  3698   002988  EFA9  F014         	goto	l4050
  3699   00298C                     u3700:
  3700   00298C  EFD4  F014         	goto	l1295
  3701   002990                     l4054:
  3702   002990  2A15               	incf	___xxtofl@exp^0,f,c
  3703   002992  0E01               	movlw	1
  3704   002994  2616               	addwf	___xxtofl@arg^0,f,c
  3705   002996  0E00               	movlw	0
  3706   002998  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3707   00299A  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3708   00299C  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3709   00299E  90D8               	bcf	status,0,c
  3710   0029A0  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3711   0029A2  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3712   0029A4  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3713   0029A6  3216               	rrcf	___xxtofl@arg^0,f,c
  3714   0029A8                     l1295:
  3715   0029A8  0E00               	movlw	0
  3716   0029AA  1416               	andwf	___xxtofl@arg^0,w,c
  3717   0029AC  6E10               	movwf	??___xxtofl^0,c
  3718   0029AE  0E00               	movlw	0
  3719   0029B0  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3720   0029B2  6E11               	movwf	(??___xxtofl+1)^0,c
  3721   0029B4  0E00               	movlw	0
  3722   0029B6  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3723   0029B8  6E12               	movwf	(??___xxtofl+2)^0,c
  3724   0029BA  0EFF               	movlw	255
  3725   0029BC  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3726   0029BE  6E13               	movwf	(??___xxtofl+3)^0,c
  3727   0029C0  5010               	movf	??___xxtofl^0,w,c
  3728   0029C2  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3729   0029C4  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3730   0029C6  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3731   0029C8  A4D8               	btfss	status,2,c
  3732   0029CA  EFE9  F014         	goto	u3711
  3733   0029CE  EFEB  F014         	goto	u3710
  3734   0029D2                     u3711:
  3735   0029D2  EFC8  F014         	goto	l4054
  3736   0029D6                     u3710:
  3737   0029D6  EFF3  F014         	goto	l4062
  3738   0029DA                     l4060:
  3739   0029DA  0615               	decf	___xxtofl@exp^0,f,c
  3740   0029DC  90D8               	bcf	status,0,c
  3741   0029DE  3616               	rlcf	___xxtofl@arg^0,f,c
  3742   0029E0  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3743   0029E2  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3744   0029E4  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3745   0029E6                     l4062:
  3746   0029E6  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3747   0029E8  EFF8  F014         	goto	u3721
  3748   0029EC  EFFA  F014         	goto	u3720
  3749   0029F0                     u3721:
  3750   0029F0  EF02  F015         	goto	l1302
  3751   0029F4                     u3720:
  3752   0029F4  0E02               	movlw	2
  3753   0029F6  6015               	cpfslt	___xxtofl@exp^0,c
  3754   0029F8  EF00  F015         	goto	u3731
  3755   0029FC  EF02  F015         	goto	u3730
  3756   002A00                     u3731:
  3757   002A00  EFED  F014         	goto	l4060
  3758   002A04                     u3730:
  3759   002A04                     l1302:
  3760   002A04  B015               	btfsc	___xxtofl@exp^0,0,c
  3761   002A06  EF07  F015         	goto	u3741
  3762   002A0A  EF09  F015         	goto	u3740
  3763   002A0E                     u3741:
  3764   002A0E  EF0A  F015         	goto	l4068
  3765   002A12                     u3740:
  3766   002A12  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3767   002A14                     l4068:
  3768   002A14  90D8               	bcf	status,0,c
  3769   002A16  3215               	rrcf	___xxtofl@exp^0,f,c
  3770   002A18  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3771   002A1C  6A11               	clrf	(??___xxtofl+1)^0,c
  3772   002A1E  6A12               	clrf	(??___xxtofl+2)^0,c
  3773   002A20  6A13               	clrf	(??___xxtofl+3)^0,c
  3774   002A22  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3775   002A26  6A12               	clrf	(??___xxtofl+2)^0,c
  3776   002A28  6A11               	clrf	(??___xxtofl+1)^0,c
  3777   002A2A  6A10               	clrf	??___xxtofl^0,c
  3778   002A2C  5010               	movf	??___xxtofl^0,w,c
  3779   002A2E  1216               	iorwf	___xxtofl@arg^0,f,c
  3780   002A30  5011               	movf	(??___xxtofl+1)^0,w,c
  3781   002A32  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3782   002A34  5012               	movf	(??___xxtofl+2)^0,w,c
  3783   002A36  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3784   002A38  5013               	movf	(??___xxtofl+3)^0,w,c
  3785   002A3A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3786   002A3C  5014               	movf	___xxtofl@sign^0,w,c
  3787   002A3E  B4D8               	btfsc	status,2,c
  3788   002A40  EF24  F015         	goto	u3751
  3789   002A44  EF26  F015         	goto	u3750
  3790   002A48                     u3751:
  3791   002A48  EF2E  F015         	goto	l4078
  3792   002A4C                     u3750:
  3793   002A4C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3794   002A4E  EF2D  F015         	goto	u3760
  3795   002A52  EF2B  F015         	goto	u3761
  3796   002A56                     u3761:
  3797   002A56  EF2E  F015         	goto	l4078
  3798   002A5A                     u3760:
  3799   002A5A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3800   002A5C                     l4078:
  3801   002A5C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3802   002A60  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3803   002A64  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3804   002A68  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3805   002A6C                     l1291:
  3806   002A6C  0012               	return		;funcret
  3807   002A6E                     __end_of___xxtofl:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function ___fltol *****************
  3811 ;; Defined at:
  3812 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  f1              4    0[COMRAM] unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  exp1            1    9[COMRAM] unsigned char 
  3817 ;;  sign1           1    8[COMRAM] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  4    0[COMRAM] long 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:       10 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_Left45
  3838 ;;		_Right45
  3839 ;;		_reverseHalfSquare
  3840 ;;		_Yellow_rev1_R90
  3841 ;;		_Pink_rev1_L90
  3842 ;;		_RGB2Hue
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text20
  3847   0030FC                     __ptext20:
  3848                           	callstack 0
  3849   0030FC                     ___fltol:
  3850                           	callstack 28
  3851   0030FC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3852   0030FE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3853   003100  6E0A               	movwf	___fltol@exp1^0,c
  3854   003102  500A               	movf	___fltol@exp1^0,w,c
  3855   003104  A4D8               	btfss	status,2,c
  3856   003106  EF87  F018         	goto	u3601
  3857   00310A  EF89  F018         	goto	u3600
  3858   00310E                     u3601:
  3859   00310E  EF93  F018         	goto	l3998
  3860   003112                     u3600:
  3861   003112                     l3994:
  3862   003112  0E00               	movlw	0
  3863   003114  6E01               	movwf	?___fltol^0,c
  3864   003116  0E00               	movlw	0
  3865   003118  6E02               	movwf	(?___fltol+1)^0,c
  3866   00311A  0E00               	movlw	0
  3867   00311C  6E03               	movwf	(?___fltol+2)^0,c
  3868   00311E  0E00               	movlw	0
  3869   003120  6E04               	movwf	(?___fltol+3)^0,c
  3870   003122  EF00  F019         	goto	l930
  3871   003126                     l3998:
  3872   003126  C001  F005         	movff	___fltol@f1,??___fltol
  3873   00312A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3874   00312E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3875   003132  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3876   003136  0E20               	movlw	32
  3877   003138  EFA3  F018         	goto	u3610
  3878   00313C                     u3615:
  3879   00313C  90D8               	bcf	status,0,c
  3880   00313E  3208               	rrcf	(??___fltol+3)^0,f,c
  3881   003140  3207               	rrcf	(??___fltol+2)^0,f,c
  3882   003142  3206               	rrcf	(??___fltol+1)^0,f,c
  3883   003144  3205               	rrcf	??___fltol^0,f,c
  3884   003146                     u3610:
  3885   003146  2EE8               	decfsz	wreg,f,c
  3886   003148  EF9E  F018         	goto	u3615
  3887   00314C  5005               	movf	??___fltol^0,w,c
  3888   00314E  6E09               	movwf	___fltol@sign1^0,c
  3889   003150  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3890   003152  0EFF               	movlw	255
  3891   003154  1601               	andwf	___fltol@f1^0,f,c
  3892   003156  0EFF               	movlw	255
  3893   003158  1602               	andwf	(___fltol@f1+1)^0,f,c
  3894   00315A  0EFF               	movlw	255
  3895   00315C  1603               	andwf	(___fltol@f1+2)^0,f,c
  3896   00315E  0E00               	movlw	0
  3897   003160  1604               	andwf	(___fltol@f1+3)^0,f,c
  3898   003162  0E96               	movlw	150
  3899   003164  5E0A               	subwf	___fltol@exp1^0,f,c
  3900   003166  BE0A               	btfsc	___fltol@exp1^0,7,c
  3901   003168  EFBA  F018         	goto	u3620
  3902   00316C  EFB8  F018         	goto	u3621
  3903   003170                     u3621:
  3904   003170  EFD0  F018         	goto	l4018
  3905   003174                     u3620:
  3906   003174  500A               	movf	___fltol@exp1^0,w,c
  3907   003176  0A80               	xorlw	128
  3908   003178  0F97               	addlw	151
  3909   00317A  B0D8               	btfsc	status,0,c
  3910   00317C  EFC2  F018         	goto	u3631
  3911   003180  EFC4  F018         	goto	u3630
  3912   003184                     u3631:
  3913   003184  EFC6  F018         	goto	l4014
  3914   003188                     u3630:
  3915   003188  EF89  F018         	goto	l3994
  3916   00318C                     l4014:
  3917   00318C  90D8               	bcf	status,0,c
  3918   00318E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3919   003190  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3920   003192  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3921   003194  3201               	rrcf	___fltol@f1^0,f,c
  3922   003196  3E0A               	incfsz	___fltol@exp1^0,f,c
  3923   003198  EFC6  F018         	goto	l4014
  3924   00319C  EFE8  F018         	goto	l4028
  3925   0031A0                     l4018:
  3926   0031A0  0E1F               	movlw	31
  3927   0031A2  640A               	cpfsgt	___fltol@exp1^0,c
  3928   0031A4  EFD6  F018         	goto	u3641
  3929   0031A8  EFD8  F018         	goto	u3640
  3930   0031AC                     u3641:
  3931   0031AC  EFE0  F018         	goto	l4026
  3932   0031B0                     u3640:
  3933   0031B0  EF89  F018         	goto	l3994
  3934   0031B4                     l4024:
  3935   0031B4  90D8               	bcf	status,0,c
  3936   0031B6  3601               	rlcf	___fltol@f1^0,f,c
  3937   0031B8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3938   0031BA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3939   0031BC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3940   0031BE  060A               	decf	___fltol@exp1^0,f,c
  3941   0031C0                     l4026:
  3942   0031C0  500A               	movf	___fltol@exp1^0,w,c
  3943   0031C2  A4D8               	btfss	status,2,c
  3944   0031C4  EFE6  F018         	goto	u3651
  3945   0031C8  EFE8  F018         	goto	u3650
  3946   0031CC                     u3651:
  3947   0031CC  EFDA  F018         	goto	l4024
  3948   0031D0                     u3650:
  3949   0031D0                     l4028:
  3950   0031D0  5009               	movf	___fltol@sign1^0,w,c
  3951   0031D2  B4D8               	btfsc	status,2,c
  3952   0031D4  EFEE  F018         	goto	u3661
  3953   0031D8  EFF0  F018         	goto	u3660
  3954   0031DC                     u3661:
  3955   0031DC  EFF8  F018         	goto	l4032
  3956   0031E0                     u3660:
  3957   0031E0  1E04               	comf	(___fltol@f1+3)^0,f,c
  3958   0031E2  1E03               	comf	(___fltol@f1+2)^0,f,c
  3959   0031E4  1E02               	comf	(___fltol@f1+1)^0,f,c
  3960   0031E6  6C01               	negf	___fltol@f1^0,c
  3961   0031E8  0E00               	movlw	0
  3962   0031EA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3963   0031EC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3964   0031EE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3965   0031F0                     l4032:
  3966   0031F0  C001  F001         	movff	___fltol@f1,?___fltol
  3967   0031F4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3968   0031F8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3969   0031FC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3970   003200                     l930:
  3971   003200  0012               	return		;funcret
  3972   003202                     __end_of___fltol:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function ___flsub *****************
  3976 ;; Defined at:
  3977 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  b               4   41[COMRAM] long 
  3980 ;;  a               4   45[COMRAM] long 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  4   41[COMRAM] long 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3995 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;Total ram usage:        8 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 2
  3999 ;; This function calls:
  4000 ;;		___fladd
  4001 ;; This function is called by:
  4002 ;;		_RGB2Hue
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text21
  4007   004244                     __ptext21:
  4008                           	callstack 0
  4009   004244                     ___flsub:
  4010                           	callstack 27
  4011   004244  0E00               	movlw	0
  4012   004246  1A2E               	xorwf	___flsub@a^0,f,c
  4013   004248  0E00               	movlw	0
  4014   00424A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  4015   00424C  0E00               	movlw	0
  4016   00424E  1A30               	xorwf	(___flsub@a+2)^0,f,c
  4017   004250  0E80               	movlw	128
  4018   004252  1A31               	xorwf	(___flsub@a+3)^0,f,c
  4019   004254  C02A  F01A         	movff	___flsub@b,___fladd@b
  4020   004258  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  4021   00425C  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  4022   004260  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  4023   004264  C02E  F01E         	movff	___flsub@a,___fladd@a
  4024   004268  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  4025   00426C  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  4026   004270  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  4027   004274  EC21  F00D         	call	___fladd	;wreg free
  4028   004278  C01A  F02A         	movff	?___fladd,?___flsub
  4029   00427C  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  4030   004280  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  4031   004284  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  4032   004288  0012               	return		;funcret
  4033   00428A                     __end_of___flsub:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function ___fladd *****************
  4037 ;; Defined at:
  4038 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  b               4   25[COMRAM] long 
  4041 ;;  a               4   29[COMRAM] long 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  grs             1   40[COMRAM] unsigned char 
  4044 ;;  bexp            1   39[COMRAM] unsigned char 
  4045 ;;  aexp            1   38[COMRAM] unsigned char 
  4046 ;;  signs           1   37[COMRAM] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  4   25[COMRAM] unsigned char 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;Total ram usage:       16 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 1
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_RGB2Hue
  4067 ;;		___flsub
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text22
  4072   001A42                     __ptext22:
  4073                           	callstack 0
  4074   001A42                     ___fladd:
  4075                           	callstack 27
  4076   001A42  501D               	movf	(___fladd@b+3)^0,w,c
  4077   001A44  0B80               	andlw	128
  4078   001A46  6E26               	movwf	___fladd@signs^0,c
  4079   001A48  501D               	movf	(___fladd@b+3)^0,w,c
  4080   001A4A  241D               	addwf	(___fladd@b+3)^0,w,c
  4081   001A4C  6E28               	movwf	___fladd@bexp^0,c
  4082   001A4E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4083   001A50  EF2C  F00D         	goto	u2461
  4084   001A54  EF2E  F00D         	goto	u2460
  4085   001A58                     u2461:
  4086   001A58  EF2F  F00D         	goto	l3266
  4087   001A5C                     u2460:
  4088   001A5C  8028               	bsf	___fladd@bexp^0,0,c
  4089   001A5E                     l3266:
  4090   001A5E  5028               	movf	___fladd@bexp^0,w,c
  4091   001A60  B4D8               	btfsc	status,2,c
  4092   001A62  EF35  F00D         	goto	u2471
  4093   001A66  EF37  F00D         	goto	u2470
  4094   001A6A                     u2471:
  4095   001A6A  EF4C  F00D         	goto	l3276
  4096   001A6E                     u2470:
  4097   001A6E  2828               	incf	___fladd@bexp^0,w,c
  4098   001A70  A4D8               	btfss	status,2,c
  4099   001A72  EF3D  F00D         	goto	u2481
  4100   001A76  EF3F  F00D         	goto	u2480
  4101   001A7A                     u2481:
  4102   001A7A  EF47  F00D         	goto	l3272
  4103   001A7E                     u2480:
  4104   001A7E  0E00               	movlw	0
  4105   001A80  6E1A               	movwf	___fladd@b^0,c
  4106   001A82  0E00               	movlw	0
  4107   001A84  6E1B               	movwf	(___fladd@b+1)^0,c
  4108   001A86  0E00               	movlw	0
  4109   001A88  6E1C               	movwf	(___fladd@b+2)^0,c
  4110   001A8A  0E00               	movlw	0
  4111   001A8C  6E1D               	movwf	(___fladd@b+3)^0,c
  4112   001A8E                     l3272:
  4113   001A8E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4114   001A90  0E00               	movlw	0
  4115   001A92  6E1D               	movwf	(___fladd@b+3)^0,c
  4116   001A94  EF54  F00D         	goto	l3278
  4117   001A98                     l3276:
  4118   001A98  0E00               	movlw	0
  4119   001A9A  6E1A               	movwf	___fladd@b^0,c
  4120   001A9C  0E00               	movlw	0
  4121   001A9E  6E1B               	movwf	(___fladd@b+1)^0,c
  4122   001AA0  0E00               	movlw	0
  4123   001AA2  6E1C               	movwf	(___fladd@b+2)^0,c
  4124   001AA4  0E00               	movlw	0
  4125   001AA6  6E1D               	movwf	(___fladd@b+3)^0,c
  4126   001AA8                     l3278:
  4127   001AA8  5021               	movf	(___fladd@a+3)^0,w,c
  4128   001AAA  0B80               	andlw	128
  4129   001AAC  6E27               	movwf	___fladd@aexp^0,c
  4130   001AAE  5026               	movf	___fladd@signs^0,w,c
  4131   001AB0  1827               	xorwf	___fladd@aexp^0,w,c
  4132   001AB2  B4D8               	btfsc	status,2,c
  4133   001AB4  EF5E  F00D         	goto	u2491
  4134   001AB8  EF60  F00D         	goto	u2490
  4135   001ABC                     u2491:
  4136   001ABC  EF61  F00D         	goto	l3284
  4137   001AC0                     u2490:
  4138   001AC0  8C26               	bsf	___fladd@signs^0,6,c
  4139   001AC2                     l3284:
  4140   001AC2  5021               	movf	(___fladd@a+3)^0,w,c
  4141   001AC4  2421               	addwf	(___fladd@a+3)^0,w,c
  4142   001AC6  6E27               	movwf	___fladd@aexp^0,c
  4143   001AC8  AE20               	btfss	(___fladd@a+2)^0,7,c
  4144   001ACA  EF69  F00D         	goto	u2501
  4145   001ACE  EF6B  F00D         	goto	u2500
  4146   001AD2                     u2501:
  4147   001AD2  EF6C  F00D         	goto	l3290
  4148   001AD6                     u2500:
  4149   001AD6  8027               	bsf	___fladd@aexp^0,0,c
  4150   001AD8                     l3290:
  4151   001AD8  5027               	movf	___fladd@aexp^0,w,c
  4152   001ADA  B4D8               	btfsc	status,2,c
  4153   001ADC  EF72  F00D         	goto	u2511
  4154   001AE0  EF74  F00D         	goto	u2510
  4155   001AE4                     u2511:
  4156   001AE4  EF89  F00D         	goto	l3300
  4157   001AE8                     u2510:
  4158   001AE8  2827               	incf	___fladd@aexp^0,w,c
  4159   001AEA  A4D8               	btfss	status,2,c
  4160   001AEC  EF7A  F00D         	goto	u2521
  4161   001AF0  EF7C  F00D         	goto	u2520
  4162   001AF4                     u2521:
  4163   001AF4  EF84  F00D         	goto	l3296
  4164   001AF8                     u2520:
  4165   001AF8  0E00               	movlw	0
  4166   001AFA  6E1E               	movwf	___fladd@a^0,c
  4167   001AFC  0E00               	movlw	0
  4168   001AFE  6E1F               	movwf	(___fladd@a+1)^0,c
  4169   001B00  0E00               	movlw	0
  4170   001B02  6E20               	movwf	(___fladd@a+2)^0,c
  4171   001B04  0E00               	movlw	0
  4172   001B06  6E21               	movwf	(___fladd@a+3)^0,c
  4173   001B08                     l3296:
  4174   001B08  8E20               	bsf	(___fladd@a+2)^0,7,c
  4175   001B0A  0E00               	movlw	0
  4176   001B0C  6E21               	movwf	(___fladd@a+3)^0,c
  4177   001B0E  EF91  F00D         	goto	l3302
  4178   001B12                     l3300:
  4179   001B12  0E00               	movlw	0
  4180   001B14  6E1E               	movwf	___fladd@a^0,c
  4181   001B16  0E00               	movlw	0
  4182   001B18  6E1F               	movwf	(___fladd@a+1)^0,c
  4183   001B1A  0E00               	movlw	0
  4184   001B1C  6E20               	movwf	(___fladd@a+2)^0,c
  4185   001B1E  0E00               	movlw	0
  4186   001B20  6E21               	movwf	(___fladd@a+3)^0,c
  4187   001B22                     l3302:
  4188   001B22  5028               	movf	___fladd@bexp^0,w,c
  4189   001B24  5C27               	subwf	___fladd@aexp^0,w,c
  4190   001B26  B0D8               	btfsc	status,0,c
  4191   001B28  EF98  F00D         	goto	u2531
  4192   001B2C  EF9A  F00D         	goto	u2530
  4193   001B30                     u2531:
  4194   001B30  EFC1  F00D         	goto	l3338
  4195   001B34                     u2530:
  4196   001B34  AC26               	btfss	___fladd@signs^0,6,c
  4197   001B36  EF9F  F00D         	goto	u2541
  4198   001B3A  EFA1  F00D         	goto	u2540
  4199   001B3E                     u2541:
  4200   001B3E  EFA3  F00D         	goto	l3308
  4201   001B42                     u2540:
  4202   001B42  0E80               	movlw	128
  4203   001B44  1A26               	xorwf	___fladd@signs^0,f,c
  4204   001B46                     l3308:
  4205   001B46  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4206   001B4A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4207   001B4E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4208   001B52  C01A  F029         	movff	___fladd@b,___fladd@grs
  4209   001B56  C01E  F01A         	movff	___fladd@a,___fladd@b
  4210   001B5A  C029  F01E         	movff	___fladd@grs,___fladd@a
  4211   001B5E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4212   001B62  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4213   001B66  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4214   001B6A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4215   001B6E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4216   001B72  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4217   001B76  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4218   001B7A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4219   001B7E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4220   001B82                     l3338:
  4221   001B82  0E00               	movlw	0
  4222   001B84  6E29               	movwf	___fladd@grs^0,c
  4223   001B86  5028               	movf	___fladd@bexp^0,w,c
  4224   001B88  C027  F022         	movff	___fladd@aexp,??___fladd
  4225   001B8C  6A23               	clrf	(??___fladd+1)^0,c
  4226   001B8E  5E22               	subwf	??___fladd^0,f,c
  4227   001B90  0E00               	movlw	0
  4228   001B92  5A23               	subwfb	(??___fladd+1)^0,f,c
  4229   001B94  BE23               	btfsc	(??___fladd+1)^0,7,c
  4230   001B96  EFD6  F00D         	goto	u2551
  4231   001B9A  5023               	movf	(??___fladd+1)^0,w,c
  4232   001B9C  E109               	bnz	u2550
  4233   001B9E  0E1A               	movlw	26
  4234   001BA0  5C22               	subwf	??___fladd^0,w,c
  4235   001BA2  A0D8               	btfss	status,0,c
  4236   001BA4  EFD6  F00D         	goto	u2551
  4237   001BA8  EFD8  F00D         	goto	u2550
  4238   001BAC                     u2551:
  4239   001BAC  EF0F  F00E         	goto	l1162
  4240   001BB0                     u2550:
  4241   001BB0  501A               	movf	___fladd@b^0,w,c
  4242   001BB2  101B               	iorwf	(___fladd@b+1)^0,w,c
  4243   001BB4  101C               	iorwf	(___fladd@b+2)^0,w,c
  4244   001BB6  101D               	iorwf	(___fladd@b+3)^0,w,c
  4245   001BB8  A4D8               	btfss	status,2,c
  4246   001BBA  EFE1  F00D         	goto	u2561
  4247   001BBE  EFE4  F00D         	goto	u2560
  4248   001BC2                     u2561:
  4249   001BC2  0E01               	movlw	1
  4250   001BC4  EFE5  F00D         	goto	u2570
  4251   001BC8                     u2560:
  4252   001BC8  0E00               	movlw	0
  4253   001BCA                     u2570:
  4254   001BCA  6E29               	movwf	___fladd@grs^0,c
  4255   001BCC  0E00               	movlw	0
  4256   001BCE  6E1A               	movwf	___fladd@b^0,c
  4257   001BD0  0E00               	movlw	0
  4258   001BD2  6E1B               	movwf	(___fladd@b+1)^0,c
  4259   001BD4  0E00               	movlw	0
  4260   001BD6  6E1C               	movwf	(___fladd@b+2)^0,c
  4261   001BD8  0E00               	movlw	0
  4262   001BDA  6E1D               	movwf	(___fladd@b+3)^0,c
  4263   001BDC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4264   001BE0  EF18  F00E         	goto	l1161
  4265   001BE4                     l1163:
  4266   001BE4  A029               	btfss	___fladd@grs^0,0,c
  4267   001BE6  EFF7  F00D         	goto	u2581
  4268   001BEA  EFF9  F00D         	goto	u2580
  4269   001BEE                     u2581:
  4270   001BEE  EFFF  F00D         	goto	l3350
  4271   001BF2                     u2580:
  4272   001BF2  90D8               	bcf	status,0,c
  4273   001BF4  3029               	rrcf	___fladd@grs^0,w,c
  4274   001BF6  0901               	iorlw	1
  4275   001BF8  6E29               	movwf	___fladd@grs^0,c
  4276   001BFA  EF01  F00E         	goto	l3352
  4277   001BFE                     l3350:
  4278   001BFE  90D8               	bcf	status,0,c
  4279   001C00  3229               	rrcf	___fladd@grs^0,f,c
  4280   001C02                     l3352:
  4281   001C02  A01A               	btfss	___fladd@b^0,0,c
  4282   001C04  EF06  F00E         	goto	u2591
  4283   001C08  EF08  F00E         	goto	u2590
  4284   001C0C                     u2591:
  4285   001C0C  EF09  F00E         	goto	l3356
  4286   001C10                     u2590:
  4287   001C10  8E29               	bsf	___fladd@grs^0,7,c
  4288   001C12                     l3356:
  4289   001C12  341D               	rlcf	(___fladd@b+3)^0,w,c
  4290   001C14  321D               	rrcf	(___fladd@b+3)^0,f,c
  4291   001C16  321C               	rrcf	(___fladd@b+2)^0,f,c
  4292   001C18  321B               	rrcf	(___fladd@b+1)^0,f,c
  4293   001C1A  321A               	rrcf	___fladd@b^0,f,c
  4294   001C1C  2A28               	incf	___fladd@bexp^0,f,c
  4295   001C1E                     l1162:
  4296   001C1E  5027               	movf	___fladd@aexp^0,w,c
  4297   001C20  5C28               	subwf	___fladd@bexp^0,w,c
  4298   001C22  A0D8               	btfss	status,0,c
  4299   001C24  EF16  F00E         	goto	u2601
  4300   001C28  EF18  F00E         	goto	u2600
  4301   001C2C                     u2601:
  4302   001C2C  EFF2  F00D         	goto	l1163
  4303   001C30                     u2600:
  4304   001C30                     l1161:
  4305   001C30  BC26               	btfsc	___fladd@signs^0,6,c
  4306   001C32  EF1D  F00E         	goto	u2611
  4307   001C36  EF1F  F00E         	goto	u2610
  4308   001C3A                     u2611:
  4309   001C3A  EF5F  F00E         	goto	l3384
  4310   001C3E                     u2610:
  4311   001C3E  5028               	movf	___fladd@bexp^0,w,c
  4312   001C40  A4D8               	btfss	status,2,c
  4313   001C42  EF25  F00E         	goto	u2621
  4314   001C46  EF27  F00E         	goto	u2620
  4315   001C4A                     u2621:
  4316   001C4A  EF31  F00E         	goto	l3366
  4317   001C4E                     u2620:
  4318   001C4E  0E00               	movlw	0
  4319   001C50  6E1A               	movwf	?___fladd^0,c
  4320   001C52  0E00               	movlw	0
  4321   001C54  6E1B               	movwf	(?___fladd+1)^0,c
  4322   001C56  0E00               	movlw	0
  4323   001C58  6E1C               	movwf	(?___fladd+2)^0,c
  4324   001C5A  0E00               	movlw	0
  4325   001C5C  6E1D               	movwf	(?___fladd+3)^0,c
  4326   001C5E  EF80  F00F         	goto	l1170
  4327   001C62                     l3366:
  4328   001C62  501E               	movf	___fladd@a^0,w,c
  4329   001C64  261A               	addwf	___fladd@b^0,f,c
  4330   001C66  501F               	movf	(___fladd@a+1)^0,w,c
  4331   001C68  221B               	addwfc	(___fladd@b+1)^0,f,c
  4332   001C6A  5020               	movf	(___fladd@a+2)^0,w,c
  4333   001C6C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4334   001C6E  5021               	movf	(___fladd@a+3)^0,w,c
  4335   001C70  221D               	addwfc	(___fladd@b+3)^0,f,c
  4336   001C72  A01D               	btfss	(___fladd@b+3)^0,0,c
  4337   001C74  EF3E  F00E         	goto	u2631
  4338   001C78  EF40  F00E         	goto	u2630
  4339   001C7C                     u2631:
  4340   001C7C  EFEC  F00E         	goto	l3420
  4341   001C80                     u2630:
  4342   001C80  A029               	btfss	___fladd@grs^0,0,c
  4343   001C82  EF45  F00E         	goto	u2641
  4344   001C86  EF47  F00E         	goto	u2640
  4345   001C8A                     u2641:
  4346   001C8A  EF4D  F00E         	goto	l3374
  4347   001C8E                     u2640:
  4348   001C8E  90D8               	bcf	status,0,c
  4349   001C90  3029               	rrcf	___fladd@grs^0,w,c
  4350   001C92  0901               	iorlw	1
  4351   001C94  6E29               	movwf	___fladd@grs^0,c
  4352   001C96  EF4F  F00E         	goto	l3376
  4353   001C9A                     l3374:
  4354   001C9A  90D8               	bcf	status,0,c
  4355   001C9C  3229               	rrcf	___fladd@grs^0,f,c
  4356   001C9E                     l3376:
  4357   001C9E  A01A               	btfss	___fladd@b^0,0,c
  4358   001CA0  EF54  F00E         	goto	u2651
  4359   001CA4  EF56  F00E         	goto	u2650
  4360   001CA8                     u2651:
  4361   001CA8  EF57  F00E         	goto	l3380
  4362   001CAC                     u2650:
  4363   001CAC  8E29               	bsf	___fladd@grs^0,7,c
  4364   001CAE                     l3380:
  4365   001CAE  341D               	rlcf	(___fladd@b+3)^0,w,c
  4366   001CB0  321D               	rrcf	(___fladd@b+3)^0,f,c
  4367   001CB2  321C               	rrcf	(___fladd@b+2)^0,f,c
  4368   001CB4  321B               	rrcf	(___fladd@b+1)^0,f,c
  4369   001CB6  321A               	rrcf	___fladd@b^0,f,c
  4370   001CB8  2A28               	incf	___fladd@bexp^0,f,c
  4371   001CBA  EFEC  F00E         	goto	l3420
  4372   001CBE                     l3384:
  4373   001CBE  501E               	movf	___fladd@a^0,w,c
  4374   001CC0  5C1A               	subwf	___fladd@b^0,w,c
  4375   001CC2  501F               	movf	(___fladd@a+1)^0,w,c
  4376   001CC4  581B               	subwfb	(___fladd@b+1)^0,w,c
  4377   001CC6  5020               	movf	(___fladd@a+2)^0,w,c
  4378   001CC8  581C               	subwfb	(___fladd@b+2)^0,w,c
  4379   001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  4380   001CCC  0A80               	xorlw	128
  4381   001CCE  6E22               	movwf	??___fladd^0,c
  4382   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
  4383   001CD2  0A80               	xorlw	128
  4384   001CD4  5822               	subwfb	??___fladd^0,w,c
  4385   001CD6  B0D8               	btfsc	status,0,c
  4386   001CD8  EF70  F00E         	goto	u2661
  4387   001CDC  EF72  F00E         	goto	u2660
  4388   001CE0                     u2661:
  4389   001CE0  EF9D  F00E         	goto	l3394
  4390   001CE4                     u2660:
  4391   001CE4  501A               	movf	___fladd@b^0,w,c
  4392   001CE6  5C1E               	subwf	___fladd@a^0,w,c
  4393   001CE8  6E22               	movwf	??___fladd^0,c
  4394   001CEA  501B               	movf	(___fladd@b+1)^0,w,c
  4395   001CEC  581F               	subwfb	(___fladd@a+1)^0,w,c
  4396   001CEE  6E23               	movwf	(??___fladd+1)^0,c
  4397   001CF0  501C               	movf	(___fladd@b+2)^0,w,c
  4398   001CF2  5820               	subwfb	(___fladd@a+2)^0,w,c
  4399   001CF4  6E24               	movwf	(??___fladd+2)^0,c
  4400   001CF6  501D               	movf	(___fladd@b+3)^0,w,c
  4401   001CF8  5821               	subwfb	(___fladd@a+3)^0,w,c
  4402   001CFA  6E25               	movwf	(??___fladd+3)^0,c
  4403   001CFC  0EFF               	movlw	255
  4404   001CFE  2422               	addwf	??___fladd^0,w,c
  4405   001D00  6E1A               	movwf	___fladd@b^0,c
  4406   001D02  0EFF               	movlw	255
  4407   001D04  2023               	addwfc	(??___fladd+1)^0,w,c
  4408   001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  4409   001D08  0EFF               	movlw	255
  4410   001D0A  2024               	addwfc	(??___fladd+2)^0,w,c
  4411   001D0C  6E1C               	movwf	(___fladd@b+2)^0,c
  4412   001D0E  0EFF               	movlw	255
  4413   001D10  2025               	addwfc	(??___fladd+3)^0,w,c
  4414   001D12  6E1D               	movwf	(___fladd@b+3)^0,c
  4415   001D14  0E80               	movlw	128
  4416   001D16  1A26               	xorwf	___fladd@signs^0,f,c
  4417   001D18  6C29               	negf	___fladd@grs^0,c
  4418   001D1A  5029               	movf	___fladd@grs^0,w,c
  4419   001D1C  A4D8               	btfss	status,2,c
  4420   001D1E  EF93  F00E         	goto	u2671
  4421   001D22  EF95  F00E         	goto	u2670
  4422   001D26                     u2671:
  4423   001D26  EFA5  F00E         	goto	l1178
  4424   001D2A                     u2670:
  4425   001D2A  0E01               	movlw	1
  4426   001D2C  261A               	addwf	___fladd@b^0,f,c
  4427   001D2E  0E00               	movlw	0
  4428   001D30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4429   001D32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4430   001D34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4431   001D36  EFA5  F00E         	goto	l1178
  4432   001D3A                     l3394:
  4433   001D3A  501E               	movf	___fladd@a^0,w,c
  4434   001D3C  5E1A               	subwf	___fladd@b^0,f,c
  4435   001D3E  501F               	movf	(___fladd@a+1)^0,w,c
  4436   001D40  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4437   001D42  5020               	movf	(___fladd@a+2)^0,w,c
  4438   001D44  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4439   001D46  5021               	movf	(___fladd@a+3)^0,w,c
  4440   001D48  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4441   001D4A                     l1178:
  4442   001D4A  501A               	movf	___fladd@b^0,w,c
  4443   001D4C  101B               	iorwf	(___fladd@b+1)^0,w,c
  4444   001D4E  101C               	iorwf	(___fladd@b+2)^0,w,c
  4445   001D50  101D               	iorwf	(___fladd@b+3)^0,w,c
  4446   001D52  A4D8               	btfss	status,2,c
  4447   001D54  EFAE  F00E         	goto	u2681
  4448   001D58  EFB0  F00E         	goto	u2680
  4449   001D5C                     u2681:
  4450   001D5C  EFE5  F00E         	goto	l3418
  4451   001D60                     u2680:
  4452   001D60  5029               	movf	___fladd@grs^0,w,c
  4453   001D62  A4D8               	btfss	status,2,c
  4454   001D64  EFB6  F00E         	goto	u2691
  4455   001D68  EFB8  F00E         	goto	u2690
  4456   001D6C                     u2691:
  4457   001D6C  EFE5  F00E         	goto	l3418
  4458   001D70                     u2690:
  4459   001D70  0E00               	movlw	0
  4460   001D72  6E1A               	movwf	?___fladd^0,c
  4461   001D74  0E00               	movlw	0
  4462   001D76  6E1B               	movwf	(?___fladd+1)^0,c
  4463   001D78  0E00               	movlw	0
  4464   001D7A  6E1C               	movwf	(?___fladd+2)^0,c
  4465   001D7C  0E00               	movlw	0
  4466   001D7E  6E1D               	movwf	(?___fladd+3)^0,c
  4467   001D80  EF80  F00F         	goto	l1170
  4468   001D84                     l3402:
  4469   001D84  90D8               	bcf	status,0,c
  4470   001D86  361A               	rlcf	___fladd@b^0,f,c
  4471   001D88  361B               	rlcf	(___fladd@b+1)^0,f,c
  4472   001D8A  361C               	rlcf	(___fladd@b+2)^0,f,c
  4473   001D8C  361D               	rlcf	(___fladd@b+3)^0,f,c
  4474   001D8E  AE29               	btfss	___fladd@grs^0,7,c
  4475   001D90  EFCC  F00E         	goto	u2701
  4476   001D94  EFCE  F00E         	goto	u2700
  4477   001D98                     u2701:
  4478   001D98  EFCF  F00E         	goto	l3408
  4479   001D9C                     u2700:
  4480   001D9C  801A               	bsf	___fladd@b^0,0,c
  4481   001D9E                     l3408:
  4482   001D9E  A029               	btfss	___fladd@grs^0,0,c
  4483   001DA0  EFD4  F00E         	goto	u2711
  4484   001DA4  EFD6  F00E         	goto	u2710
  4485   001DA8                     u2711:
  4486   001DA8  EFDA  F00E         	goto	l3412
  4487   001DAC                     u2710:
  4488   001DAC  80D8               	bsf	status,0,c
  4489   001DAE  3629               	rlcf	___fladd@grs^0,f,c
  4490   001DB0  EFDC  F00E         	goto	l3414
  4491   001DB4                     l3412:
  4492   001DB4  90D8               	bcf	status,0,c
  4493   001DB6  3629               	rlcf	___fladd@grs^0,f,c
  4494   001DB8                     l3414:
  4495   001DB8  5028               	movf	___fladd@bexp^0,w,c
  4496   001DBA  B4D8               	btfsc	status,2,c
  4497   001DBC  EFE2  F00E         	goto	u2721
  4498   001DC0  EFE4  F00E         	goto	u2720
  4499   001DC4                     u2721:
  4500   001DC4  EFE5  F00E         	goto	l3418
  4501   001DC8                     u2720:
  4502   001DC8  0628               	decf	___fladd@bexp^0,f,c
  4503   001DCA                     l3418:
  4504   001DCA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4505   001DCC  EFEA  F00E         	goto	u2731
  4506   001DD0  EFEC  F00E         	goto	u2730
  4507   001DD4                     u2731:
  4508   001DD4  EFC2  F00E         	goto	l3402
  4509   001DD8                     u2730:
  4510   001DD8                     l3420:
  4511   001DD8  0E00               	movlw	0
  4512   001DDA  6E27               	movwf	___fladd@aexp^0,c
  4513   001DDC  AE29               	btfss	___fladd@grs^0,7,c
  4514   001DDE  EFF3  F00E         	goto	u2741
  4515   001DE2  EFF5  F00E         	goto	u2740
  4516   001DE6                     u2741:
  4517   001DE6  EF0D  F00F         	goto	l1187
  4518   001DEA                     u2740:
  4519   001DEA  C029  F022         	movff	___fladd@grs,??___fladd
  4520   001DEE  0E7F               	movlw	127
  4521   001DF0  1622               	andwf	??___fladd^0,f,c
  4522   001DF2  B4D8               	btfsc	status,2,c
  4523   001DF4  EFFE  F00E         	goto	u2751
  4524   001DF8  EF00  F00F         	goto	u2750
  4525   001DFC                     u2751:
  4526   001DFC  EF04  F00F         	goto	l1188
  4527   001E00                     u2750:
  4528   001E00                     l3426:
  4529   001E00  0E01               	movlw	1
  4530   001E02  6E27               	movwf	___fladd@aexp^0,c
  4531   001E04  EF0D  F00F         	goto	l1187
  4532   001E08                     l1188:
  4533   001E08  A01A               	btfss	___fladd@b^0,0,c
  4534   001E0A  EF09  F00F         	goto	u2761
  4535   001E0E  EF0B  F00F         	goto	u2760
  4536   001E12                     u2761:
  4537   001E12  EF0D  F00F         	goto	l1187
  4538   001E16                     u2760:
  4539   001E16  EF00  F00F         	goto	l3426
  4540   001E1A                     l1187:
  4541   001E1A  5027               	movf	___fladd@aexp^0,w,c
  4542   001E1C  B4D8               	btfsc	status,2,c
  4543   001E1E  EF13  F00F         	goto	u2771
  4544   001E22  EF15  F00F         	goto	u2770
  4545   001E26                     u2771:
  4546   001E26  EF40  F00F         	goto	l3438
  4547   001E2A                     u2770:
  4548   001E2A  0E01               	movlw	1
  4549   001E2C  261A               	addwf	___fladd@b^0,f,c
  4550   001E2E  0E00               	movlw	0
  4551   001E30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4552   001E32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4553   001E34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4554   001E36  A01D               	btfss	(___fladd@b+3)^0,0,c
  4555   001E38  EF20  F00F         	goto	u2781
  4556   001E3C  EF22  F00F         	goto	u2780
  4557   001E40                     u2781:
  4558   001E40  EF40  F00F         	goto	l3438
  4559   001E44                     u2780:
  4560   001E44  C01A  F022         	movff	___fladd@b,??___fladd
  4561   001E48  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4562   001E4C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4563   001E50  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4564   001E54  3425               	rlcf	(??___fladd+3)^0,w,c
  4565   001E56  3225               	rrcf	(??___fladd+3)^0,f,c
  4566   001E58  3224               	rrcf	(??___fladd+2)^0,f,c
  4567   001E5A  3223               	rrcf	(??___fladd+1)^0,f,c
  4568   001E5C  3222               	rrcf	??___fladd^0,f,c
  4569   001E5E  C022  F01A         	movff	??___fladd,___fladd@b
  4570   001E62  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4571   001E66  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4572   001E6A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4573   001E6E  2828               	incf	___fladd@bexp^0,w,c
  4574   001E70  B4D8               	btfsc	status,2,c
  4575   001E72  EF3D  F00F         	goto	u2791
  4576   001E76  EF3F  F00F         	goto	u2790
  4577   001E7A                     u2791:
  4578   001E7A  EF40  F00F         	goto	l3438
  4579   001E7E                     u2790:
  4580   001E7E  2A28               	incf	___fladd@bexp^0,f,c
  4581   001E80                     l3438:
  4582   001E80  2828               	incf	___fladd@bexp^0,w,c
  4583   001E82  B4D8               	btfsc	status,2,c
  4584   001E84  EF46  F00F         	goto	u2801
  4585   001E88  EF48  F00F         	goto	u2800
  4586   001E8C                     u2801:
  4587   001E8C  EF50  F00F         	goto	l3442
  4588   001E90                     u2800:
  4589   001E90  5028               	movf	___fladd@bexp^0,w,c
  4590   001E92  A4D8               	btfss	status,2,c
  4591   001E94  EF4E  F00F         	goto	u2811
  4592   001E98  EF50  F00F         	goto	u2810
  4593   001E9C                     u2811:
  4594   001E9C  EF62  F00F         	goto	l3446
  4595   001EA0                     u2810:
  4596   001EA0                     l3442:
  4597   001EA0  0E00               	movlw	0
  4598   001EA2  6E1A               	movwf	___fladd@b^0,c
  4599   001EA4  0E00               	movlw	0
  4600   001EA6  6E1B               	movwf	(___fladd@b+1)^0,c
  4601   001EA8  0E00               	movlw	0
  4602   001EAA  6E1C               	movwf	(___fladd@b+2)^0,c
  4603   001EAC  0E00               	movlw	0
  4604   001EAE  6E1D               	movwf	(___fladd@b+3)^0,c
  4605   001EB0  5028               	movf	___fladd@bexp^0,w,c
  4606   001EB2  A4D8               	btfss	status,2,c
  4607   001EB4  EF5E  F00F         	goto	u2821
  4608   001EB8  EF60  F00F         	goto	u2820
  4609   001EBC                     u2821:
  4610   001EBC  EF62  F00F         	goto	l3446
  4611   001EC0                     u2820:
  4612   001EC0  0E00               	movlw	0
  4613   001EC2  6E26               	movwf	___fladd@signs^0,c
  4614   001EC4                     l3446:
  4615   001EC4  A028               	btfss	___fladd@bexp^0,0,c
  4616   001EC6  EF67  F00F         	goto	u2831
  4617   001ECA  EF69  F00F         	goto	u2830
  4618   001ECE                     u2831:
  4619   001ECE  EF6C  F00F         	goto	l3450
  4620   001ED2                     u2830:
  4621   001ED2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4622   001ED4  EF6D  F00F         	goto	l3452
  4623   001ED8                     l3450:
  4624   001ED8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4625   001EDA                     l3452:
  4626   001EDA  90D8               	bcf	status,0,c
  4627   001EDC  3028               	rrcf	___fladd@bexp^0,w,c
  4628   001EDE  6E1D               	movwf	(___fladd@b+3)^0,c
  4629   001EE0  AE26               	btfss	___fladd@signs^0,7,c
  4630   001EE2  EF75  F00F         	goto	u2841
  4631   001EE6  EF77  F00F         	goto	u2840
  4632   001EEA                     u2841:
  4633   001EEA  EF78  F00F         	goto	l3458
  4634   001EEE                     u2840:
  4635   001EEE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4636   001EF0                     l3458:
  4637   001EF0  C01A  F01A         	movff	___fladd@b,?___fladd
  4638   001EF4  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4639   001EF8  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4640   001EFC  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4641   001F00                     l1170:
  4642   001F00  0012               	return		;funcret
  4643   001F02                     __end_of___fladd:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function ___flmul *****************
  4647 ;; Defined at:
  4648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  b               4   74[COMRAM] unsigned char 
  4651 ;;  a               4   78[COMRAM] unsigned char 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  prod            4    7[BANK0 ] struct .
  4654 ;;  grs             4    1[BANK0 ] unsigned long 
  4655 ;;  temp            2   11[BANK0 ] struct .
  4656 ;;  bexp            1    6[BANK0 ] unsigned char 
  4657 ;;  aexp            1    5[BANK0 ] unsigned char 
  4658 ;;  sign            1    0[BANK0 ] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  4   74[COMRAM] unsigned char 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2, status,0, prodl, prodh
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4668 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;Total ram usage:       25 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 1
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_Left45
  4679 ;;		_Right45
  4680 ;;		_reverseHalfSquare
  4681 ;;		_Yellow_rev1_R90
  4682 ;;		_Pink_rev1_L90
  4683 ;;		_RGB2Hue
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text23
  4688   001F02                     __ptext23:
  4689                           	callstack 0
  4690   001F02                     ___flmul:
  4691                           	callstack 28
  4692   001F02  504E               	movf	(___flmul@b+3)^0,w,c
  4693   001F04  0B80               	andlw	128
  4694   001F06  0100               	movlb	0	; () banked
  4695   001F08  6F60               	movwf	___flmul@sign& (0+255),b
  4696   001F0A  504E               	movf	(___flmul@b+3)^0,w,c
  4697   001F0C  244E               	addwf	(___flmul@b+3)^0,w,c
  4698   001F0E  6F66               	movwf	___flmul@bexp& (0+255),b
  4699   001F10                     
  4700                           ; BSR set to: 0
  4701   001F10  AE4D               	btfss	(___flmul@b+2)^0,7,c
  4702   001F12  EF8D  F00F         	goto	u3381
  4703   001F16  EF8F  F00F         	goto	u3380
  4704   001F1A                     u3381:
  4705   001F1A  EF90  F00F         	goto	l3846
  4706   001F1E                     u3380:
  4707   001F1E                     
  4708                           ; BSR set to: 0
  4709   001F1E  8166               	bsf	___flmul@bexp& (0+255),0,b
  4710   001F20                     l3846:
  4711                           
  4712                           ; BSR set to: 0
  4713   001F20  5166               	movf	___flmul@bexp& (0+255),w,b
  4714   001F22  B4D8               	btfsc	status,2,c
  4715   001F24  EF96  F00F         	goto	u3391
  4716   001F28  EF98  F00F         	goto	u3390
  4717   001F2C                     u3391:
  4718   001F2C  EFAB  F00F         	goto	l3854
  4719   001F30                     u3390:
  4720   001F30                     
  4721                           ; BSR set to: 0
  4722   001F30  2966               	incf	___flmul@bexp& (0+255),w,b
  4723   001F32  A4D8               	btfss	status,2,c
  4724   001F34  EF9E  F00F         	goto	u3401
  4725   001F38  EFA0  F00F         	goto	u3400
  4726   001F3C                     u3401:
  4727   001F3C  EFA8  F00F         	goto	l3852
  4728   001F40                     u3400:
  4729   001F40                     
  4730                           ; BSR set to: 0
  4731   001F40  0E00               	movlw	0
  4732   001F42  6E4B               	movwf	___flmul@b^0,c
  4733   001F44  0E00               	movlw	0
  4734   001F46  6E4C               	movwf	(___flmul@b+1)^0,c
  4735   001F48  0E00               	movlw	0
  4736   001F4A  6E4D               	movwf	(___flmul@b+2)^0,c
  4737   001F4C  0E00               	movlw	0
  4738   001F4E  6E4E               	movwf	(___flmul@b+3)^0,c
  4739   001F50                     l3852:
  4740                           
  4741                           ; BSR set to: 0
  4742   001F50  8E4D               	bsf	(___flmul@b+2)^0,7,c
  4743   001F52  EFB3  F00F         	goto	l3856
  4744   001F56                     l3854:
  4745                           
  4746                           ; BSR set to: 0
  4747   001F56  0E00               	movlw	0
  4748   001F58  6E4B               	movwf	___flmul@b^0,c
  4749   001F5A  0E00               	movlw	0
  4750   001F5C  6E4C               	movwf	(___flmul@b+1)^0,c
  4751   001F5E  0E00               	movlw	0
  4752   001F60  6E4D               	movwf	(___flmul@b+2)^0,c
  4753   001F62  0E00               	movlw	0
  4754   001F64  6E4E               	movwf	(___flmul@b+3)^0,c
  4755   001F66                     l3856:
  4756                           
  4757                           ; BSR set to: 0
  4758   001F66  5052               	movf	(___flmul@a+3)^0,w,c
  4759   001F68  0B80               	andlw	128
  4760   001F6A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  4761   001F6C                     
  4762                           ; BSR set to: 0
  4763   001F6C  5052               	movf	(___flmul@a+3)^0,w,c
  4764   001F6E  2452               	addwf	(___flmul@a+3)^0,w,c
  4765   001F70  6F65               	movwf	___flmul@aexp& (0+255),b
  4766   001F72                     
  4767                           ; BSR set to: 0
  4768   001F72  AE51               	btfss	(___flmul@a+2)^0,7,c
  4769   001F74  EFBE  F00F         	goto	u3411
  4770   001F78  EFC0  F00F         	goto	u3410
  4771   001F7C                     u3411:
  4772   001F7C  EFC1  F00F         	goto	l3864
  4773   001F80                     u3410:
  4774   001F80                     
  4775                           ; BSR set to: 0
  4776   001F80  8165               	bsf	___flmul@aexp& (0+255),0,b
  4777   001F82                     l3864:
  4778                           
  4779                           ; BSR set to: 0
  4780   001F82  5165               	movf	___flmul@aexp& (0+255),w,b
  4781   001F84  B4D8               	btfsc	status,2,c
  4782   001F86  EFC7  F00F         	goto	u3421
  4783   001F8A  EFC9  F00F         	goto	u3420
  4784   001F8E                     u3421:
  4785   001F8E  EFDC  F00F         	goto	l3872
  4786   001F92                     u3420:
  4787   001F92                     
  4788                           ; BSR set to: 0
  4789   001F92  2965               	incf	___flmul@aexp& (0+255),w,b
  4790   001F94  A4D8               	btfss	status,2,c
  4791   001F96  EFCF  F00F         	goto	u3431
  4792   001F9A  EFD1  F00F         	goto	u3430
  4793   001F9E                     u3431:
  4794   001F9E  EFD9  F00F         	goto	l3870
  4795   001FA2                     u3430:
  4796   001FA2                     
  4797                           ; BSR set to: 0
  4798   001FA2  0E00               	movlw	0
  4799   001FA4  6E4F               	movwf	___flmul@a^0,c
  4800   001FA6  0E00               	movlw	0
  4801   001FA8  6E50               	movwf	(___flmul@a+1)^0,c
  4802   001FAA  0E00               	movlw	0
  4803   001FAC  6E51               	movwf	(___flmul@a+2)^0,c
  4804   001FAE  0E00               	movlw	0
  4805   001FB0  6E52               	movwf	(___flmul@a+3)^0,c
  4806   001FB2                     l3870:
  4807                           
  4808                           ; BSR set to: 0
  4809   001FB2  8E51               	bsf	(___flmul@a+2)^0,7,c
  4810   001FB4  EFE4  F00F         	goto	l1247
  4811   001FB8                     l3872:
  4812                           
  4813                           ; BSR set to: 0
  4814   001FB8  0E00               	movlw	0
  4815   001FBA  6E4F               	movwf	___flmul@a^0,c
  4816   001FBC  0E00               	movlw	0
  4817   001FBE  6E50               	movwf	(___flmul@a+1)^0,c
  4818   001FC0  0E00               	movlw	0
  4819   001FC2  6E51               	movwf	(___flmul@a+2)^0,c
  4820   001FC4  0E00               	movlw	0
  4821   001FC6  6E52               	movwf	(___flmul@a+3)^0,c
  4822   001FC8                     l1247:
  4823                           
  4824                           ; BSR set to: 0
  4825   001FC8  5165               	movf	___flmul@aexp& (0+255),w,b
  4826   001FCA  B4D8               	btfsc	status,2,c
  4827   001FCC  EFEA  F00F         	goto	u3441
  4828   001FD0  EFEC  F00F         	goto	u3440
  4829   001FD4                     u3441:
  4830   001FD4  EFF4  F00F         	goto	l3876
  4831   001FD8                     u3440:
  4832   001FD8                     
  4833                           ; BSR set to: 0
  4834   001FD8  5166               	movf	___flmul@bexp& (0+255),w,b
  4835   001FDA  A4D8               	btfss	status,2,c
  4836   001FDC  EFF2  F00F         	goto	u3451
  4837   001FE0  EFF4  F00F         	goto	u3450
  4838   001FE4                     u3451:
  4839   001FE4  EFFE  F00F         	goto	l3880
  4840   001FE8                     u3450:
  4841   001FE8                     l3876:
  4842                           
  4843                           ; BSR set to: 0
  4844   001FE8  0E00               	movlw	0
  4845   001FEA  6E4B               	movwf	?___flmul^0,c
  4846   001FEC  0E00               	movlw	0
  4847   001FEE  6E4C               	movwf	(?___flmul+1)^0,c
  4848   001FF0  0E00               	movlw	0
  4849   001FF2  6E4D               	movwf	(?___flmul+2)^0,c
  4850   001FF4  0E00               	movlw	0
  4851   001FF6  6E4E               	movwf	(?___flmul+3)^0,c
  4852   001FF8  EF96  F011         	goto	l1251
  4853   001FFC                     l3880:
  4854                           
  4855                           ; BSR set to: 0
  4856   001FFC  5051               	movf	(___flmul@a+2)^0,w,c
  4857   001FFE  024B               	mulwf	___flmul@b^0,c
  4858   002000  CFF3 F06B          	movff	prodl,___flmul@temp
  4859   002004  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4860   002008                     
  4861                           ; BSR set to: 0
  4862   002008  516B               	movf	___flmul@temp& (0+255),w,b
  4863   00200A  6F61               	movwf	___flmul@grs& (0+255),b
  4864   00200C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  4865   00200E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  4866   002010  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  4867   002012                     
  4868                           ; BSR set to: 0
  4869   002012  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4870   002014  6F67               	movwf	___flmul@prod& (0+255),b
  4871   002016  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  4872   002018  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  4873   00201A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  4874   00201C  5050               	movf	(___flmul@a+1)^0,w,c
  4875   00201E  024C               	mulwf	(___flmul@b+1)^0,c
  4876   002020  CFF3 F06B          	movff	prodl,___flmul@temp
  4877   002024  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4878   002028                     
  4879                           ; BSR set to: 0
  4880   002028  516B               	movf	___flmul@temp& (0+255),w,b
  4881   00202A  2761               	addwf	___flmul@grs& (0+255),f,b
  4882   00202C  0E00               	movlw	0
  4883   00202E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4884   002030  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4885   002032  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4886   002034                     
  4887                           ; BSR set to: 0
  4888   002034  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4889   002036  2767               	addwf	___flmul@prod& (0+255),f,b
  4890   002038  0E00               	movlw	0
  4891   00203A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4892   00203C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4893   00203E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4894   002040  504F               	movf	___flmul@a^0,w,c
  4895   002042  024D               	mulwf	(___flmul@b+2)^0,c
  4896   002044  CFF3 F06B          	movff	prodl,___flmul@temp
  4897   002048  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4898   00204C                     
  4899                           ; BSR set to: 0
  4900   00204C  516B               	movf	___flmul@temp& (0+255),w,b
  4901   00204E  2761               	addwf	___flmul@grs& (0+255),f,b
  4902   002050  0E00               	movlw	0
  4903   002052  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4904   002054  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4905   002056  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4906   002058                     
  4907                           ; BSR set to: 0
  4908   002058  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4909   00205A  2767               	addwf	___flmul@prod& (0+255),f,b
  4910   00205C  0E00               	movlw	0
  4911   00205E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4912   002060  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4913   002062  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4914   002064                     
  4915                           ; BSR set to: 0
  4916   002064  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4917   002068  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4918   00206C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4919   002070  6B61               	clrf	___flmul@grs& (0+255),b
  4920   002072                     
  4921                           ; BSR set to: 0
  4922   002072  504F               	movf	___flmul@a^0,w,c
  4923   002074  024C               	mulwf	(___flmul@b+1)^0,c
  4924   002076  CFF3 F06B          	movff	prodl,___flmul@temp
  4925   00207A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4926   00207E                     
  4927                           ; BSR set to: 0
  4928   00207E  516B               	movf	___flmul@temp& (0+255),w,b
  4929   002080  2761               	addwf	___flmul@grs& (0+255),f,b
  4930   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4931   002084  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4932   002086  0E00               	movlw	0
  4933   002088  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4934   00208A  0E00               	movlw	0
  4935   00208C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4936   00208E                     
  4937                           ; BSR set to: 0
  4938   00208E  5050               	movf	(___flmul@a+1)^0,w,c
  4939   002090  024B               	mulwf	___flmul@b^0,c
  4940   002092  CFF3 F06B          	movff	prodl,___flmul@temp
  4941   002096  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4942   00209A                     
  4943                           ; BSR set to: 0
  4944   00209A  516B               	movf	___flmul@temp& (0+255),w,b
  4945   00209C  2761               	addwf	___flmul@grs& (0+255),f,b
  4946   00209E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4947   0020A0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4948   0020A2  0E00               	movlw	0
  4949   0020A4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4950   0020A6  0E00               	movlw	0
  4951   0020A8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4952   0020AA                     
  4953                           ; BSR set to: 0
  4954   0020AA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4955   0020AE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4956   0020B2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4957   0020B6  6B61               	clrf	___flmul@grs& (0+255),b
  4958   0020B8  504F               	movf	___flmul@a^0,w,c
  4959   0020BA  024B               	mulwf	___flmul@b^0,c
  4960   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  4961   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4962   0020C4                     
  4963                           ; BSR set to: 0
  4964   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  4965   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  4966   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4967   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4968   0020CC  0E00               	movlw	0
  4969   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4970   0020D0  0E00               	movlw	0
  4971   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4972   0020D4                     
  4973                           ; BSR set to: 0
  4974   0020D4  5051               	movf	(___flmul@a+2)^0,w,c
  4975   0020D6  024C               	mulwf	(___flmul@b+1)^0,c
  4976   0020D8  CFF3 F06B          	movff	prodl,___flmul@temp
  4977   0020DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4978   0020E0  516B               	movf	___flmul@temp& (0+255),w,b
  4979   0020E2  2767               	addwf	___flmul@prod& (0+255),f,b
  4980   0020E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4981   0020E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4982   0020E8  0E00               	movlw	0
  4983   0020EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4984   0020EC  0E00               	movlw	0
  4985   0020EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4986   0020F0                     
  4987                           ; BSR set to: 0
  4988   0020F0  5050               	movf	(___flmul@a+1)^0,w,c
  4989   0020F2  024D               	mulwf	(___flmul@b+2)^0,c
  4990   0020F4  CFF3 F06B          	movff	prodl,___flmul@temp
  4991   0020F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4992   0020FC                     
  4993                           ; BSR set to: 0
  4994   0020FC  516B               	movf	___flmul@temp& (0+255),w,b
  4995   0020FE  2767               	addwf	___flmul@prod& (0+255),f,b
  4996   002100  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4997   002102  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4998   002104  0E00               	movlw	0
  4999   002106  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5000   002108  0E00               	movlw	0
  5001   00210A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5002   00210C  5051               	movf	(___flmul@a+2)^0,w,c
  5003   00210E  024D               	mulwf	(___flmul@b+2)^0,c
  5004   002110  CFF3 F06B          	movff	prodl,___flmul@temp
  5005   002114  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5006   002118                     
  5007                           ; BSR set to: 0
  5008   002118  516B               	movf	___flmul@temp& (0+255),w,b
  5009   00211A  6E53               	movwf	??___flmul^0,c
  5010   00211C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5011   00211E  6E54               	movwf	(??___flmul+1)^0,c
  5012   002120  6A55               	clrf	(??___flmul+2)^0,c
  5013   002122  6A56               	clrf	(??___flmul+3)^0,c
  5014   002124  C055  F056         	movff	??___flmul+2,??___flmul+3
  5015   002128  C054  F055         	movff	??___flmul+1,??___flmul+2
  5016   00212C  C053  F054         	movff	??___flmul,??___flmul+1
  5017   002130  6A53               	clrf	??___flmul^0,c
  5018   002132  5053               	movf	??___flmul^0,w,c
  5019   002134  2767               	addwf	___flmul@prod& (0+255),f,b
  5020   002136  5054               	movf	(??___flmul+1)^0,w,c
  5021   002138  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5022   00213A  5055               	movf	(??___flmul+2)^0,w,c
  5023   00213C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5024   00213E  5056               	movf	(??___flmul+3)^0,w,c
  5025   002140  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5026   002142                     
  5027                           ; BSR set to: 0
  5028   002142  C061  F053         	movff	___flmul@grs,??___flmul
  5029   002146  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  5030   00214A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  5031   00214E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  5032   002152  0E19               	movlw	25
  5033   002154  EFB1  F010         	goto	u3460
  5034   002158                     u3465:
  5035   002158  90D8               	bcf	status,0,c
  5036   00215A  3256               	rrcf	(??___flmul+3)^0,f,c
  5037   00215C  3255               	rrcf	(??___flmul+2)^0,f,c
  5038   00215E  3254               	rrcf	(??___flmul+1)^0,f,c
  5039   002160  3253               	rrcf	??___flmul^0,f,c
  5040   002162                     u3460:
  5041   002162  2EE8               	decfsz	wreg,f,c
  5042   002164  EFAC  F010         	goto	u3465
  5043   002168  5053               	movf	??___flmul^0,w,c
  5044   00216A  2767               	addwf	___flmul@prod& (0+255),f,b
  5045   00216C  5054               	movf	(??___flmul+1)^0,w,c
  5046   00216E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5047   002170  5055               	movf	(??___flmul+2)^0,w,c
  5048   002172  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5049   002174  5056               	movf	(??___flmul+3)^0,w,c
  5050   002176  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5051   002178                     
  5052                           ; BSR set to: 0
  5053   002178  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  5054   00217C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  5055   002180  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  5056   002184  6B61               	clrf	___flmul@grs& (0+255),b
  5057   002186                     
  5058                           ; BSR set to: 0
  5059   002186  5165               	movf	___flmul@aexp& (0+255),w,b
  5060   002188  C066  F053         	movff	___flmul@bexp,??___flmul
  5061   00218C  6A54               	clrf	(??___flmul+1)^0,c
  5062   00218E  2653               	addwf	??___flmul^0,f,c
  5063   002190  0E00               	movlw	0
  5064   002192  2254               	addwfc	(??___flmul+1)^0,f,c
  5065   002194  0E82               	movlw	130
  5066   002196  2453               	addwf	??___flmul^0,w,c
  5067   002198  6F6B               	movwf	___flmul@temp& (0+255),b
  5068   00219A  0EFF               	movlw	255
  5069   00219C  2054               	addwfc	(??___flmul+1)^0,w,c
  5070   00219E  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  5071   0021A0  EFE7  F010         	goto	l3928
  5072   0021A4                     l3922:
  5073                           
  5074                           ; BSR set to: 0
  5075   0021A4  90D8               	bcf	status,0,c
  5076   0021A6  3767               	rlcf	___flmul@prod& (0+255),f,b
  5077   0021A8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5078   0021AA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5079   0021AC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5080   0021AE                     
  5081                           ; BSR set to: 0
  5082   0021AE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5083   0021B0  EFDC  F010         	goto	u3471
  5084   0021B4  EFDE  F010         	goto	u3470
  5085   0021B8                     u3471:
  5086   0021B8  EFDF  F010         	goto	l1254
  5087   0021BC                     u3470:
  5088   0021BC                     
  5089                           ; BSR set to: 0
  5090   0021BC  8167               	bsf	___flmul@prod& (0+255),0,b
  5091   0021BE                     l1254:
  5092                           
  5093                           ; BSR set to: 0
  5094   0021BE  90D8               	bcf	status,0,c
  5095   0021C0  3761               	rlcf	___flmul@grs& (0+255),f,b
  5096   0021C2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5097   0021C4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5098   0021C6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5099   0021C8  076B               	decf	___flmul@temp& (0+255),f,b
  5100   0021CA  A0D8               	btfss	status,0,c
  5101   0021CC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  5102   0021CE                     l3928:
  5103                           
  5104                           ; BSR set to: 0
  5105   0021CE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  5106   0021D0  EFEC  F010         	goto	u3481
  5107   0021D4  EFEE  F010         	goto	u3480
  5108   0021D8                     u3481:
  5109   0021D8  EFD2  F010         	goto	l3922
  5110   0021DC                     u3480:
  5111   0021DC                     
  5112                           ; BSR set to: 0
  5113   0021DC  0E00               	movlw	0
  5114   0021DE  6F65               	movwf	___flmul@aexp& (0+255),b
  5115   0021E0                     
  5116                           ; BSR set to: 0
  5117   0021E0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5118   0021E2  EFF5  F010         	goto	u3491
  5119   0021E6  EFF7  F010         	goto	u3490
  5120   0021EA                     u3491:
  5121   0021EA  EF1B  F011         	goto	l1256
  5122   0021EE                     u3490:
  5123   0021EE                     
  5124                           ; BSR set to: 0
  5125   0021EE  0EFF               	movlw	255
  5126   0021F0  1561               	andwf	___flmul@grs& (0+255),w,b
  5127   0021F2  6E53               	movwf	??___flmul^0,c
  5128   0021F4  0EFF               	movlw	255
  5129   0021F6  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  5130   0021F8  6E54               	movwf	(??___flmul+1)^0,c
  5131   0021FA  0EFF               	movlw	255
  5132   0021FC  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  5133   0021FE  6E55               	movwf	(??___flmul+2)^0,c
  5134   002200  0E7F               	movlw	127
  5135   002202  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  5136   002204  6E56               	movwf	(??___flmul+3)^0,c
  5137   002206  5053               	movf	??___flmul^0,w,c
  5138   002208  1054               	iorwf	(??___flmul+1)^0,w,c
  5139   00220A  1055               	iorwf	(??___flmul+2)^0,w,c
  5140   00220C  1056               	iorwf	(??___flmul+3)^0,w,c
  5141   00220E  B4D8               	btfsc	status,2,c
  5142   002210  EF0C  F011         	goto	u3501
  5143   002214  EF0E  F011         	goto	u3500
  5144   002218                     u3501:
  5145   002218  EF12  F011         	goto	l1257
  5146   00221C                     u3500:
  5147   00221C                     l3936:
  5148                           
  5149                           ; BSR set to: 0
  5150   00221C  0E01               	movlw	1
  5151   00221E  6F65               	movwf	___flmul@aexp& (0+255),b
  5152   002220  EF1B  F011         	goto	l1256
  5153   002224                     l1257:
  5154                           
  5155                           ; BSR set to: 0
  5156   002224  A167               	btfss	___flmul@prod& (0+255),0,b
  5157   002226  EF17  F011         	goto	u3511
  5158   00222A  EF19  F011         	goto	u3510
  5159   00222E                     u3511:
  5160   00222E  EF1B  F011         	goto	l1256
  5161   002232                     u3510:
  5162   002232  EF0E  F011         	goto	l3936
  5163   002236                     l1256:
  5164                           
  5165                           ; BSR set to: 0
  5166   002236  5165               	movf	___flmul@aexp& (0+255),w,b
  5167   002238  B4D8               	btfsc	status,2,c
  5168   00223A  EF21  F011         	goto	u3521
  5169   00223E  EF23  F011         	goto	u3520
  5170   002242                     u3521:
  5171   002242  EF47  F011         	goto	l3948
  5172   002246                     u3520:
  5173   002246                     
  5174                           ; BSR set to: 0
  5175   002246  0E01               	movlw	1
  5176   002248  2767               	addwf	___flmul@prod& (0+255),f,b
  5177   00224A  0E00               	movlw	0
  5178   00224C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5179   00224E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5180   002250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5181   002252                     
  5182                           ; BSR set to: 0
  5183   002252  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5184   002254  EF2E  F011         	goto	u3531
  5185   002258  EF30  F011         	goto	u3530
  5186   00225C                     u3531:
  5187   00225C  EF47  F011         	goto	l3948
  5188   002260                     u3530:
  5189   002260                     
  5190                           ; BSR set to: 0
  5191   002260  C067  F053         	movff	___flmul@prod,??___flmul
  5192   002264  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  5193   002268  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  5194   00226C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  5195   002270  3456               	rlcf	(??___flmul+3)^0,w,c
  5196   002272  3256               	rrcf	(??___flmul+3)^0,f,c
  5197   002274  3255               	rrcf	(??___flmul+2)^0,f,c
  5198   002276  3254               	rrcf	(??___flmul+1)^0,f,c
  5199   002278  3253               	rrcf	??___flmul^0,f,c
  5200   00227A  C053  F067         	movff	??___flmul,___flmul@prod
  5201   00227E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  5202   002282  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  5203   002286  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  5204   00228A                     
  5205                           ; BSR set to: 0
  5206   00228A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  5207   00228C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  5208   00228E                     l3948:
  5209                           
  5210                           ; BSR set to: 0
  5211   00228E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5212   002290  EF52  F011         	goto	u3541
  5213   002294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5214   002296  E108               	bnz	u3540
  5215   002298  296B               	incf	___flmul@temp& (0+255),w,b
  5216   00229A  A0D8               	btfss	status,0,c
  5217   00229C  EF52  F011         	goto	u3541
  5218   0022A0  EF54  F011         	goto	u3540
  5219   0022A4                     u3541:
  5220   0022A4  EF5E  F011         	goto	l3952
  5221   0022A8                     u3540:
  5222   0022A8                     
  5223                           ; BSR set to: 0
  5224   0022A8  0E00               	movlw	0
  5225   0022AA  6F67               	movwf	___flmul@prod& (0+255),b
  5226   0022AC  0E00               	movlw	0
  5227   0022AE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5228   0022B0  0E80               	movlw	128
  5229   0022B2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5230   0022B4  0E7F               	movlw	127
  5231   0022B6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5232   0022B8  EF8C  F011         	goto	l3964
  5233   0022BC                     l3952:
  5234                           
  5235                           ; BSR set to: 0
  5236   0022BC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5237   0022BE  EF6B  F011         	goto	u3550
  5238   0022C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5239   0022C4  E106               	bnz	u3551
  5240   0022C6  056B               	decf	___flmul@temp& (0+255),w,b
  5241   0022C8  B0D8               	btfsc	status,0,c
  5242   0022CA  EF69  F011         	goto	u3551
  5243   0022CE  EF6B  F011         	goto	u3550
  5244   0022D2                     u3551:
  5245   0022D2  EF77  F011         	goto	l1264
  5246   0022D6                     u3550:
  5247   0022D6                     
  5248                           ; BSR set to: 0
  5249   0022D6  0E00               	movlw	0
  5250   0022D8  6F67               	movwf	___flmul@prod& (0+255),b
  5251   0022DA  0E00               	movlw	0
  5252   0022DC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5253   0022DE  0E00               	movlw	0
  5254   0022E0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5255   0022E2  0E00               	movlw	0
  5256   0022E4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5257   0022E6  0E00               	movlw	0
  5258   0022E8  6F60               	movwf	___flmul@sign& (0+255),b
  5259   0022EA  EF8C  F011         	goto	l3964
  5260   0022EE                     l1264:
  5261                           
  5262                           ; BSR set to: 0
  5263   0022EE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  5264   0022F2                     
  5265                           ; BSR set to: 0
  5266   0022F2  0EFF               	movlw	255
  5267   0022F4  1767               	andwf	___flmul@prod& (0+255),f,b
  5268   0022F6  0EFF               	movlw	255
  5269   0022F8  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  5270   0022FA  0E7F               	movlw	127
  5271   0022FC  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  5272   0022FE  0E00               	movlw	0
  5273   002300  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5274   002302                     
  5275                           ; BSR set to: 0
  5276   002302  A166               	btfss	___flmul@bexp& (0+255),0,b
  5277   002304  EF86  F011         	goto	u3561
  5278   002308  EF88  F011         	goto	u3560
  5279   00230C                     u3561:
  5280   00230C  EF89  F011         	goto	l3962
  5281   002310                     u3560:
  5282   002310                     
  5283                           ; BSR set to: 0
  5284   002310  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  5285   002312                     l3962:
  5286                           
  5287                           ; BSR set to: 0
  5288   002312  90D8               	bcf	status,0,c
  5289   002314  3166               	rrcf	___flmul@bexp& (0+255),w,b
  5290   002316  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5291   002318                     l3964:
  5292                           
  5293                           ; BSR set to: 0
  5294   002318  5160               	movf	___flmul@sign& (0+255),w,b
  5295   00231A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5296   00231C                     
  5297                           ; BSR set to: 0
  5298   00231C  C067  F04B         	movff	___flmul@prod,?___flmul
  5299   002320  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  5300   002324  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  5301   002328  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  5302   00232C                     l1251:
  5303                           
  5304                           ; BSR set to: 0
  5305   00232C  0012               	return		;funcret
  5306   00232E                     __end_of___flmul:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function ___fleq *****************
  5310 ;; Defined at:
  5311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  ff1             4    0[COMRAM] unsigned char 
  5314 ;;  ff2             4    4[COMRAM] unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;		None               void
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;Total ram usage:       12 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_RGB2Hue
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text24
  5341   003746                     __ptext24:
  5342                           	callstack 0
  5343   003746                     ___fleq:
  5344                           	callstack 28
  5345   003746  0E00               	movlw	0
  5346   003748  1401               	andwf	___fleq@ff1^0,w,c
  5347   00374A  6E09               	movwf	??___fleq^0,c
  5348   00374C  0E00               	movlw	0
  5349   00374E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5350   003750  6E0A               	movwf	(??___fleq+1)^0,c
  5351   003752  0E80               	movlw	128
  5352   003754  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5353   003756  6E0B               	movwf	(??___fleq+2)^0,c
  5354   003758  0E7F               	movlw	127
  5355   00375A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5356   00375C  6E0C               	movwf	(??___fleq+3)^0,c
  5357   00375E  5009               	movf	??___fleq^0,w,c
  5358   003760  100A               	iorwf	(??___fleq+1)^0,w,c
  5359   003762  100B               	iorwf	(??___fleq+2)^0,w,c
  5360   003764  100C               	iorwf	(??___fleq+3)^0,w,c
  5361   003766  A4D8               	btfss	status,2,c
  5362   003768  EFB8  F01B         	goto	u3571
  5363   00376C  EFBA  F01B         	goto	u3570
  5364   003770                     u3571:
  5365   003770  EFC2  F01B         	goto	l3980
  5366   003774                     u3570:
  5367   003774  0E00               	movlw	0
  5368   003776  6E01               	movwf	___fleq@ff1^0,c
  5369   003778  0E00               	movlw	0
  5370   00377A  6E02               	movwf	(___fleq@ff1+1)^0,c
  5371   00377C  0E00               	movlw	0
  5372   00377E  6E03               	movwf	(___fleq@ff1+2)^0,c
  5373   003780  0E00               	movlw	0
  5374   003782  6E04               	movwf	(___fleq@ff1+3)^0,c
  5375   003784                     l3980:
  5376   003784  0E00               	movlw	0
  5377   003786  1405               	andwf	___fleq@ff2^0,w,c
  5378   003788  6E09               	movwf	??___fleq^0,c
  5379   00378A  0E00               	movlw	0
  5380   00378C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5381   00378E  6E0A               	movwf	(??___fleq+1)^0,c
  5382   003790  0E80               	movlw	128
  5383   003792  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5384   003794  6E0B               	movwf	(??___fleq+2)^0,c
  5385   003796  0E7F               	movlw	127
  5386   003798  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5387   00379A  6E0C               	movwf	(??___fleq+3)^0,c
  5388   00379C  5009               	movf	??___fleq^0,w,c
  5389   00379E  100A               	iorwf	(??___fleq+1)^0,w,c
  5390   0037A0  100B               	iorwf	(??___fleq+2)^0,w,c
  5391   0037A2  100C               	iorwf	(??___fleq+3)^0,w,c
  5392   0037A4  A4D8               	btfss	status,2,c
  5393   0037A6  EFD7  F01B         	goto	u3581
  5394   0037AA  EFD9  F01B         	goto	u3580
  5395   0037AE                     u3581:
  5396   0037AE  EFE1  F01B         	goto	l3984
  5397   0037B2                     u3580:
  5398   0037B2  0E00               	movlw	0
  5399   0037B4  6E05               	movwf	___fleq@ff2^0,c
  5400   0037B6  0E00               	movlw	0
  5401   0037B8  6E06               	movwf	(___fleq@ff2+1)^0,c
  5402   0037BA  0E00               	movlw	0
  5403   0037BC  6E07               	movwf	(___fleq@ff2+2)^0,c
  5404   0037BE  0E00               	movlw	0
  5405   0037C0  6E08               	movwf	(___fleq@ff2+3)^0,c
  5406   0037C2                     l3984:
  5407   0037C2  5005               	movf	___fleq@ff2^0,w,c
  5408   0037C4  1801               	xorwf	___fleq@ff1^0,w,c
  5409   0037C6  E10F               	bnz	u3590
  5410   0037C8  5006               	movf	(___fleq@ff2+1)^0,w,c
  5411   0037CA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5412   0037CC  E10C               	bnz	u3590
  5413   0037CE  5007               	movf	(___fleq@ff2+2)^0,w,c
  5414   0037D0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5415   0037D2  E109               	bnz	u3590
  5416   0037D4  5008               	movf	(___fleq@ff2+3)^0,w,c
  5417   0037D6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5418   0037D8  B4D8               	btfsc	status,2,c
  5419   0037DA  EFF1  F01B         	goto	u3591
  5420   0037DE  EFF3  F01B         	goto	u3590
  5421   0037E2                     u3591:
  5422   0037E2  EFF6  F01B         	goto	l3988
  5423   0037E6                     u3590:
  5424   0037E6  90D8               	bcf	status,0,c
  5425   0037E8  EFF7  F01B         	goto	l892
  5426   0037EC                     l3988:
  5427   0037EC  80D8               	bsf	status,0,c
  5428   0037EE                     l892:
  5429   0037EE  0012               	return		;funcret
  5430   0037F0                     __end_of___fleq:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function ___fldiv *****************
  5434 ;; Defined at:
  5435 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  b               4   49[COMRAM] unsigned char 
  5438 ;;  a               4   53[COMRAM] unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  grs             4   68[COMRAM] unsigned long 
  5441 ;;  rem             4   61[COMRAM] unsigned long 
  5442 ;;  new_exp         2   66[COMRAM] short 
  5443 ;;  aexp            1   73[COMRAM] unsigned char 
  5444 ;;  bexp            1   72[COMRAM] unsigned char 
  5445 ;;  sign            1   65[COMRAM] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4   49[COMRAM] unsigned char 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5455 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5456 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;Total ram usage:       25 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 1
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_RGB2Hue
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text25
  5470   00232E                     __ptext25:
  5471                           	callstack 0
  5472   00232E                     ___fldiv:
  5473                           	callstack 28
  5474   00232E  5035               	movf	(___fldiv@b+3)^0,w,c
  5475   002330  0B80               	andlw	128
  5476   002332  6E42               	movwf	___fldiv@sign^0,c
  5477   002334  5035               	movf	(___fldiv@b+3)^0,w,c
  5478   002336  2435               	addwf	(___fldiv@b+3)^0,w,c
  5479   002338  6E49               	movwf	___fldiv@bexp^0,c
  5480   00233A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5481   00233C  EFA2  F011         	goto	u3151
  5482   002340  EFA4  F011         	goto	u3150
  5483   002344                     u3151:
  5484   002344  EFA5  F011         	goto	l3708
  5485   002348                     u3150:
  5486   002348  8049               	bsf	___fldiv@bexp^0,0,c
  5487   00234A                     l3708:
  5488   00234A  5049               	movf	___fldiv@bexp^0,w,c
  5489   00234C  B4D8               	btfsc	status,2,c
  5490   00234E  EFAB  F011         	goto	u3161
  5491   002352  EFAD  F011         	goto	u3160
  5492   002356                     u3161:
  5493   002356  EFC2  F011         	goto	l3718
  5494   00235A                     u3160:
  5495   00235A  2849               	incf	___fldiv@bexp^0,w,c
  5496   00235C  A4D8               	btfss	status,2,c
  5497   00235E  EFB3  F011         	goto	u3171
  5498   002362  EFB5  F011         	goto	u3170
  5499   002366                     u3171:
  5500   002366  EFBD  F011         	goto	l3714
  5501   00236A                     u3170:
  5502   00236A  0E00               	movlw	0
  5503   00236C  6E32               	movwf	___fldiv@b^0,c
  5504   00236E  0E00               	movlw	0
  5505   002370  6E33               	movwf	(___fldiv@b+1)^0,c
  5506   002372  0E00               	movlw	0
  5507   002374  6E34               	movwf	(___fldiv@b+2)^0,c
  5508   002376  0E00               	movlw	0
  5509   002378  6E35               	movwf	(___fldiv@b+3)^0,c
  5510   00237A                     l3714:
  5511   00237A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5512   00237C  0E00               	movlw	0
  5513   00237E  6E35               	movwf	(___fldiv@b+3)^0,c
  5514   002380  EFCA  F011         	goto	l3720
  5515   002384                     l3718:
  5516   002384  0E00               	movlw	0
  5517   002386  6E32               	movwf	___fldiv@b^0,c
  5518   002388  0E00               	movlw	0
  5519   00238A  6E33               	movwf	(___fldiv@b+1)^0,c
  5520   00238C  0E00               	movlw	0
  5521   00238E  6E34               	movwf	(___fldiv@b+2)^0,c
  5522   002390  0E00               	movlw	0
  5523   002392  6E35               	movwf	(___fldiv@b+3)^0,c
  5524   002394                     l3720:
  5525   002394  5039               	movf	(___fldiv@a+3)^0,w,c
  5526   002396  0B80               	andlw	128
  5527   002398  1A42               	xorwf	___fldiv@sign^0,f,c
  5528   00239A  5039               	movf	(___fldiv@a+3)^0,w,c
  5529   00239C  2439               	addwf	(___fldiv@a+3)^0,w,c
  5530   00239E  6E4A               	movwf	___fldiv@aexp^0,c
  5531   0023A0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  5532   0023A2  EFD5  F011         	goto	u3181
  5533   0023A6  EFD7  F011         	goto	u3180
  5534   0023AA                     u3181:
  5535   0023AA  EFD8  F011         	goto	l3728
  5536   0023AE                     u3180:
  5537   0023AE  804A               	bsf	___fldiv@aexp^0,0,c
  5538   0023B0                     l3728:
  5539   0023B0  504A               	movf	___fldiv@aexp^0,w,c
  5540   0023B2  B4D8               	btfsc	status,2,c
  5541   0023B4  EFDE  F011         	goto	u3191
  5542   0023B8  EFE0  F011         	goto	u3190
  5543   0023BC                     u3191:
  5544   0023BC  EFF5  F011         	goto	l3738
  5545   0023C0                     u3190:
  5546   0023C0  284A               	incf	___fldiv@aexp^0,w,c
  5547   0023C2  A4D8               	btfss	status,2,c
  5548   0023C4  EFE6  F011         	goto	u3201
  5549   0023C8  EFE8  F011         	goto	u3200
  5550   0023CC                     u3201:
  5551   0023CC  EFF0  F011         	goto	l3734
  5552   0023D0                     u3200:
  5553   0023D0  0E00               	movlw	0
  5554   0023D2  6E36               	movwf	___fldiv@a^0,c
  5555   0023D4  0E00               	movlw	0
  5556   0023D6  6E37               	movwf	(___fldiv@a+1)^0,c
  5557   0023D8  0E00               	movlw	0
  5558   0023DA  6E38               	movwf	(___fldiv@a+2)^0,c
  5559   0023DC  0E00               	movlw	0
  5560   0023DE  6E39               	movwf	(___fldiv@a+3)^0,c
  5561   0023E0                     l3734:
  5562   0023E0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  5563   0023E2  0E00               	movlw	0
  5564   0023E4  6E39               	movwf	(___fldiv@a+3)^0,c
  5565   0023E6  EFFD  F011         	goto	l3740
  5566   0023EA                     l3738:
  5567   0023EA  0E00               	movlw	0
  5568   0023EC  6E36               	movwf	___fldiv@a^0,c
  5569   0023EE  0E00               	movlw	0
  5570   0023F0  6E37               	movwf	(___fldiv@a+1)^0,c
  5571   0023F2  0E00               	movlw	0
  5572   0023F4  6E38               	movwf	(___fldiv@a+2)^0,c
  5573   0023F6  0E00               	movlw	0
  5574   0023F8  6E39               	movwf	(___fldiv@a+3)^0,c
  5575   0023FA                     l3740:
  5576   0023FA  5036               	movf	___fldiv@a^0,w,c
  5577   0023FC  1037               	iorwf	(___fldiv@a+1)^0,w,c
  5578   0023FE  1038               	iorwf	(___fldiv@a+2)^0,w,c
  5579   002400  1039               	iorwf	(___fldiv@a+3)^0,w,c
  5580   002402  A4D8               	btfss	status,2,c
  5581   002404  EF06  F012         	goto	u3211
  5582   002408  EF08  F012         	goto	u3210
  5583   00240C                     u3211:
  5584   00240C  EF20  F012         	goto	l3752
  5585   002410                     u3210:
  5586   002410  0E00               	movlw	0
  5587   002412  6E32               	movwf	___fldiv@b^0,c
  5588   002414  0E00               	movlw	0
  5589   002416  6E33               	movwf	(___fldiv@b+1)^0,c
  5590   002418  0E00               	movlw	0
  5591   00241A  6E34               	movwf	(___fldiv@b+2)^0,c
  5592   00241C  0E00               	movlw	0
  5593   00241E  6E35               	movwf	(___fldiv@b+3)^0,c
  5594   002420  0E80               	movlw	128
  5595   002422  1234               	iorwf	(___fldiv@b+2)^0,f,c
  5596   002424  0E7F               	movlw	127
  5597   002426  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5598   002428                     l3746:
  5599   002428  5042               	movf	___fldiv@sign^0,w,c
  5600   00242A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5601   00242C  C032  F032         	movff	___fldiv@b,?___fldiv
  5602   002430  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  5603   002434  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  5604   002438  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  5605   00243C  EF63  F013         	goto	l1215
  5606   002440                     l3752:
  5607   002440  5049               	movf	___fldiv@bexp^0,w,c
  5608   002442  A4D8               	btfss	status,2,c
  5609   002444  EF26  F012         	goto	u3221
  5610   002448  EF28  F012         	goto	u3220
  5611   00244C                     u3221:
  5612   00244C  EF32  F012         	goto	l3760
  5613   002450                     u3220:
  5614   002450  0E00               	movlw	0
  5615   002452  6E32               	movwf	?___fldiv^0,c
  5616   002454  0E00               	movlw	0
  5617   002456  6E33               	movwf	(?___fldiv+1)^0,c
  5618   002458  0E00               	movlw	0
  5619   00245A  6E34               	movwf	(?___fldiv+2)^0,c
  5620   00245C  0E00               	movlw	0
  5621   00245E  6E35               	movwf	(?___fldiv+3)^0,c
  5622   002460  EF63  F013         	goto	l1215
  5623   002464                     l3760:
  5624   002464  504A               	movf	___fldiv@aexp^0,w,c
  5625   002466  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  5626   00246A  6A3B               	clrf	(??___fldiv+1)^0,c
  5627   00246C  5E3A               	subwf	??___fldiv^0,f,c
  5628   00246E  0E00               	movlw	0
  5629   002470  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  5630   002472  0E7F               	movlw	127
  5631   002474  243A               	addwf	??___fldiv^0,w,c
  5632   002476  6E43               	movwf	___fldiv@new_exp^0,c
  5633   002478  0E00               	movlw	0
  5634   00247A  203B               	addwfc	(??___fldiv+1)^0,w,c
  5635   00247C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5636   00247E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  5637   002482  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  5638   002486  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  5639   00248A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  5640   00248E  0E00               	movlw	0
  5641   002490  6E32               	movwf	___fldiv@b^0,c
  5642   002492  0E00               	movlw	0
  5643   002494  6E33               	movwf	(___fldiv@b+1)^0,c
  5644   002496  0E00               	movlw	0
  5645   002498  6E34               	movwf	(___fldiv@b+2)^0,c
  5646   00249A  0E00               	movlw	0
  5647   00249C  6E35               	movwf	(___fldiv@b+3)^0,c
  5648   00249E  0E00               	movlw	0
  5649   0024A0  6E45               	movwf	___fldiv@grs^0,c
  5650   0024A2  0E00               	movlw	0
  5651   0024A4  6E46               	movwf	(___fldiv@grs+1)^0,c
  5652   0024A6  0E00               	movlw	0
  5653   0024A8  6E47               	movwf	(___fldiv@grs+2)^0,c
  5654   0024AA  0E00               	movlw	0
  5655   0024AC  6E48               	movwf	(___fldiv@grs+3)^0,c
  5656   0024AE  0E00               	movlw	0
  5657   0024B0  6E4A               	movwf	___fldiv@aexp^0,c
  5658   0024B2  EF93  F012         	goto	l1217
  5659   0024B6                     l3770:
  5660   0024B6  504A               	movf	___fldiv@aexp^0,w,c
  5661   0024B8  B4D8               	btfsc	status,2,c
  5662   0024BA  EF61  F012         	goto	u3231
  5663   0024BE  EF63  F012         	goto	u3230
  5664   0024C2                     u3231:
  5665   0024C2  EF7A  F012         	goto	l3778
  5666   0024C6                     u3230:
  5667   0024C6  90D8               	bcf	status,0,c
  5668   0024C8  363E               	rlcf	___fldiv@rem^0,f,c
  5669   0024CA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  5670   0024CC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  5671   0024CE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  5672   0024D0  90D8               	bcf	status,0,c
  5673   0024D2  3632               	rlcf	___fldiv@b^0,f,c
  5674   0024D4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5675   0024D6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5676   0024D8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5677   0024DA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5678   0024DC  EF72  F012         	goto	u3241
  5679   0024E0  EF74  F012         	goto	u3240
  5680   0024E4                     u3241:
  5681   0024E4  EF75  F012         	goto	l1220
  5682   0024E8                     u3240:
  5683   0024E8  8032               	bsf	___fldiv@b^0,0,c
  5684   0024EA                     l1220:
  5685   0024EA  90D8               	bcf	status,0,c
  5686   0024EC  3645               	rlcf	___fldiv@grs^0,f,c
  5687   0024EE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5688   0024F0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5689   0024F2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5690   0024F4                     l3778:
  5691   0024F4  5036               	movf	___fldiv@a^0,w,c
  5692   0024F6  5C3E               	subwf	___fldiv@rem^0,w,c
  5693   0024F8  5037               	movf	(___fldiv@a+1)^0,w,c
  5694   0024FA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  5695   0024FC  5038               	movf	(___fldiv@a+2)^0,w,c
  5696   0024FE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  5697   002500  5039               	movf	(___fldiv@a+3)^0,w,c
  5698   002502  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  5699   002504  A0D8               	btfss	status,0,c
  5700   002506  EF87  F012         	goto	u3251
  5701   00250A  EF89  F012         	goto	u3250
  5702   00250E                     u3251:
  5703   00250E  EF92  F012         	goto	l3784
  5704   002512                     u3250:
  5705   002512  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  5706   002514  5036               	movf	___fldiv@a^0,w,c
  5707   002516  5E3E               	subwf	___fldiv@rem^0,f,c
  5708   002518  5037               	movf	(___fldiv@a+1)^0,w,c
  5709   00251A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  5710   00251C  5038               	movf	(___fldiv@a+2)^0,w,c
  5711   00251E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  5712   002520  5039               	movf	(___fldiv@a+3)^0,w,c
  5713   002522  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  5714   002524                     l3784:
  5715   002524  2A4A               	incf	___fldiv@aexp^0,f,c
  5716   002526                     l1217:
  5717   002526  0E19               	movlw	25
  5718   002528  644A               	cpfsgt	___fldiv@aexp^0,c
  5719   00252A  EF99  F012         	goto	u3261
  5720   00252E  EF9B  F012         	goto	u3260
  5721   002532                     u3261:
  5722   002532  EF5B  F012         	goto	l3770
  5723   002536                     u3260:
  5724   002536  503E               	movf	___fldiv@rem^0,w,c
  5725   002538  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  5726   00253A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  5727   00253C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  5728   00253E  B4D8               	btfsc	status,2,c
  5729   002540  EFA4  F012         	goto	u3271
  5730   002544  EFA6  F012         	goto	u3270
  5731   002548                     u3271:
  5732   002548  EFBE  F012         	goto	l3796
  5733   00254C                     u3270:
  5734   00254C  8045               	bsf	___fldiv@grs^0,0,c
  5735   00254E  EFBE  F012         	goto	l3796
  5736   002552                     l3790:
  5737   002552  90D8               	bcf	status,0,c
  5738   002554  3632               	rlcf	___fldiv@b^0,f,c
  5739   002556  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5740   002558  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5741   00255A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5742   00255C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5743   00255E  EFB3  F012         	goto	u3281
  5744   002562  EFB5  F012         	goto	u3280
  5745   002566                     u3281:
  5746   002566  EFB6  F012         	goto	l1226
  5747   00256A                     u3280:
  5748   00256A  8032               	bsf	___fldiv@b^0,0,c
  5749   00256C                     l1226:
  5750   00256C  90D8               	bcf	status,0,c
  5751   00256E  3645               	rlcf	___fldiv@grs^0,f,c
  5752   002570  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5753   002572  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5754   002574  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5755   002576  0643               	decf	___fldiv@new_exp^0,f,c
  5756   002578  A0D8               	btfss	status,0,c
  5757   00257A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  5758   00257C                     l3796:
  5759   00257C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5760   00257E  EFC3  F012         	goto	u3291
  5761   002582  EFC5  F012         	goto	u3290
  5762   002586                     u3291:
  5763   002586  EFA9  F012         	goto	l3790
  5764   00258A                     u3290:
  5765   00258A  0E00               	movlw	0
  5766   00258C  6E4A               	movwf	___fldiv@aexp^0,c
  5767   00258E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5768   002590  EFCC  F012         	goto	u3301
  5769   002594  EFCE  F012         	goto	u3300
  5770   002598                     u3301:
  5771   002598  EFF2  F012         	goto	l1228
  5772   00259C                     u3300:
  5773   00259C  0EFF               	movlw	255
  5774   00259E  1445               	andwf	___fldiv@grs^0,w,c
  5775   0025A0  6E3A               	movwf	??___fldiv^0,c
  5776   0025A2  0EFF               	movlw	255
  5777   0025A4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  5778   0025A6  6E3B               	movwf	(??___fldiv+1)^0,c
  5779   0025A8  0EFF               	movlw	255
  5780   0025AA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  5781   0025AC  6E3C               	movwf	(??___fldiv+2)^0,c
  5782   0025AE  0E7F               	movlw	127
  5783   0025B0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  5784   0025B2  6E3D               	movwf	(??___fldiv+3)^0,c
  5785   0025B4  503A               	movf	??___fldiv^0,w,c
  5786   0025B6  103B               	iorwf	(??___fldiv+1)^0,w,c
  5787   0025B8  103C               	iorwf	(??___fldiv+2)^0,w,c
  5788   0025BA  103D               	iorwf	(??___fldiv+3)^0,w,c
  5789   0025BC  B4D8               	btfsc	status,2,c
  5790   0025BE  EFE3  F012         	goto	u3311
  5791   0025C2  EFE5  F012         	goto	u3310
  5792   0025C6                     u3311:
  5793   0025C6  EFE9  F012         	goto	l1229
  5794   0025CA                     u3310:
  5795   0025CA                     l3804:
  5796   0025CA  0E01               	movlw	1
  5797   0025CC  6E4A               	movwf	___fldiv@aexp^0,c
  5798   0025CE  EFF2  F012         	goto	l1228
  5799   0025D2                     l1229:
  5800   0025D2  A032               	btfss	___fldiv@b^0,0,c
  5801   0025D4  EFEE  F012         	goto	u3321
  5802   0025D8  EFF0  F012         	goto	u3320
  5803   0025DC                     u3321:
  5804   0025DC  EFF2  F012         	goto	l1228
  5805   0025E0                     u3320:
  5806   0025E0  EFE5  F012         	goto	l3804
  5807   0025E4                     l1228:
  5808   0025E4  504A               	movf	___fldiv@aexp^0,w,c
  5809   0025E6  B4D8               	btfsc	status,2,c
  5810   0025E8  EFF8  F012         	goto	u3331
  5811   0025EC  EFFA  F012         	goto	u3330
  5812   0025F0                     u3331:
  5813   0025F0  EF1E  F013         	goto	l3816
  5814   0025F4                     u3330:
  5815   0025F4  0E01               	movlw	1
  5816   0025F6  2632               	addwf	___fldiv@b^0,f,c
  5817   0025F8  0E00               	movlw	0
  5818   0025FA  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5819   0025FC  2234               	addwfc	(___fldiv@b+2)^0,f,c
  5820   0025FE  2235               	addwfc	(___fldiv@b+3)^0,f,c
  5821   002600  A035               	btfss	(___fldiv@b+3)^0,0,c
  5822   002602  EF05  F013         	goto	u3341
  5823   002606  EF07  F013         	goto	u3340
  5824   00260A                     u3341:
  5825   00260A  EF1E  F013         	goto	l3816
  5826   00260E                     u3340:
  5827   00260E  C032  F03A         	movff	___fldiv@b,??___fldiv
  5828   002612  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  5829   002616  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  5830   00261A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  5831   00261E  343D               	rlcf	(??___fldiv+3)^0,w,c
  5832   002620  323D               	rrcf	(??___fldiv+3)^0,f,c
  5833   002622  323C               	rrcf	(??___fldiv+2)^0,f,c
  5834   002624  323B               	rrcf	(??___fldiv+1)^0,f,c
  5835   002626  323A               	rrcf	??___fldiv^0,f,c
  5836   002628  C03A  F032         	movff	??___fldiv,___fldiv@b
  5837   00262C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  5838   002630  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  5839   002634  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  5840   002638  4A43               	infsnz	___fldiv@new_exp^0,f,c
  5841   00263A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  5842   00263C                     l3816:
  5843   00263C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5844   00263E  EF29  F013         	goto	u3351
  5845   002642  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5846   002644  E108               	bnz	u3350
  5847   002646  2843               	incf	___fldiv@new_exp^0,w,c
  5848   002648  A0D8               	btfss	status,0,c
  5849   00264A  EF29  F013         	goto	u3351
  5850   00264E  EF2B  F013         	goto	u3350
  5851   002652                     u3351:
  5852   002652  EF36  F013         	goto	l3820
  5853   002656                     u3350:
  5854   002656  0E00               	movlw	0
  5855   002658  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5856   00265A  6843               	setf	___fldiv@new_exp^0,c
  5857   00265C  0E00               	movlw	0
  5858   00265E  6E32               	movwf	___fldiv@b^0,c
  5859   002660  0E00               	movlw	0
  5860   002662  6E33               	movwf	(___fldiv@b+1)^0,c
  5861   002664  0E00               	movlw	0
  5862   002666  6E34               	movwf	(___fldiv@b+2)^0,c
  5863   002668  0E00               	movlw	0
  5864   00266A  6E35               	movwf	(___fldiv@b+3)^0,c
  5865   00266C                     l3820:
  5866   00266C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5867   00266E  EF43  F013         	goto	u3360
  5868   002672  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5869   002674  E106               	bnz	u3361
  5870   002676  0443               	decf	___fldiv@new_exp^0,w,c
  5871   002678  B0D8               	btfsc	status,0,c
  5872   00267A  EF41  F013         	goto	u3361
  5873   00267E  EF43  F013         	goto	u3360
  5874   002682                     u3361:
  5875   002682  EF51  F013         	goto	l3824
  5876   002686                     u3360:
  5877   002686  0E00               	movlw	0
  5878   002688  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5879   00268A  0E00               	movlw	0
  5880   00268C  6E43               	movwf	___fldiv@new_exp^0,c
  5881   00268E  0E00               	movlw	0
  5882   002690  6E32               	movwf	___fldiv@b^0,c
  5883   002692  0E00               	movlw	0
  5884   002694  6E33               	movwf	(___fldiv@b+1)^0,c
  5885   002696  0E00               	movlw	0
  5886   002698  6E34               	movwf	(___fldiv@b+2)^0,c
  5887   00269A  0E00               	movlw	0
  5888   00269C  6E35               	movwf	(___fldiv@b+3)^0,c
  5889   00269E  0E00               	movlw	0
  5890   0026A0  6E42               	movwf	___fldiv@sign^0,c
  5891   0026A2                     l3824:
  5892   0026A2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  5893   0026A6  A049               	btfss	___fldiv@bexp^0,0,c
  5894   0026A8  EF58  F013         	goto	u3371
  5895   0026AC  EF5A  F013         	goto	u3370
  5896   0026B0                     u3371:
  5897   0026B0  EF5D  F013         	goto	l3830
  5898   0026B4                     u3370:
  5899   0026B4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5900   0026B6  EF5E  F013         	goto	l3832
  5901   0026BA                     l3830:
  5902   0026BA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  5903   0026BC                     l3832:
  5904   0026BC  90D8               	bcf	status,0,c
  5905   0026BE  3049               	rrcf	___fldiv@bexp^0,w,c
  5906   0026C0  6E35               	movwf	(___fldiv@b+3)^0,c
  5907   0026C2  EF14  F012         	goto	l3746
  5908   0026C6                     l1215:
  5909   0026C6  0012               	return		;funcret
  5910   0026C8                     __end_of___fldiv:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _LED_init *****************
  5914 ;; Defined at:
  5915 ;;		line 4 in file "LED.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		None
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text26
  5944   0044AC                     __ptext26:
  5945                           	callstack 0
  5946   0044AC                     _LED_init:
  5947                           	callstack 29
  5948   0044AC                     
  5949                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5950   0044AC  9884               	bcf	132,4,c	;volatile
  5951                           
  5952                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5953   0044AE  9088               	bcf	136,0,c	;volatile
  5954                           
  5955                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5956   0044B0  9086               	bcf	134,0,c	;volatile
  5957                           
  5958                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5959   0044B2  987C               	bcf	124,4,c	;volatile
  5960                           
  5961                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5962   0044B4  9080               	bcf	128,0,c	;volatile
  5963                           
  5964                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5965   0044B6  907E               	bcf	126,0,c	;volatile
  5966   0044B8  0012               	return		;funcret
  5967   0044BA                     __end_of_LED_init:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _Interrupts_init *****************
  5971 ;; Defined at:
  5972 ;;		line 5 in file "interrupts.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		None
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 1
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text27
  6001   0044C6                     __ptext27:
  6002                           	callstack 0
  6003   0044C6                     _Interrupts_init:
  6004                           	callstack 29
  6005   0044C6                     
  6006                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  6007   0044C6  010E               	movlb	14	; () banked
  6008   0044C8  872D               	bsf	45,3,b	;volatile
  6009                           
  6010                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  6011   0044CA  8AF2               	bsf	242,5,c	;volatile
  6012                           
  6013                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  6014   0044CC  8CF2               	bsf	242,6,c	;volatile
  6015                           
  6016                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  6017   0044CE  8EF2               	bsf	242,7,c	;volatile
  6018   0044D0                     
  6019                           ; BSR set to: 14
  6020   0044D0  0012               	return		;funcret
  6021   0044D2                     __end_of_Interrupts_init:
  6022                           	callstack 0
  6023                           
  6024 ;; *************** function _Colour2Action *****************
  6025 ;; Defined at:
  6026 ;;		line 105 in file "colorfunctions.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  cf              2   39[COMRAM] PTR struct RGBC_rel
  6029 ;;		 -> colorf(22), 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;Total ram usage:        4 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; Hardware stack levels required when called: 7
  6048 ;; This function calls:
  6049 ;;		_Blue_T180
  6050 ;;		_Green_L90
  6051 ;;		_LightBlue_L135
  6052 ;;		_Orange_R135
  6053 ;;		_Pink_rev1_L90
  6054 ;;		_Red_R90
  6055 ;;		_Yellow_rev1_R90
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text28
  6062   002A6E                     __ptext28:
  6063                           	callstack 0
  6064   002A6E                     _Colour2Action:
  6065                           	callstack 23
  6066   002A6E                     
  6067                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  6068   002A6E  EE20 F014          	lfsr	2,20
  6069   002A72  5028               	movf	Colour2Action@cf^0,w,c
  6070   002A74  26D9               	addwf	fsr2l,f,c
  6071   002A76  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6072   002A78  22DA               	addwfc	fsr2h,f,c
  6073   002A7A  50DE               	movf	postinc2,w,c
  6074   002A7C  10DE               	iorwf	postinc2,w,c
  6075   002A7E  A4D8               	btfss	status,2,c
  6076   002A80  EF44  F015         	goto	u3901
  6077   002A84  EF46  F015         	goto	u3900
  6078   002A88                     u3901:
  6079   002A88  EF52  F015         	goto	l4228
  6080   002A8C                     u3900:
  6081   002A8C                     
  6082                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  6083   002A8C  0EEA               	movlw	low _motorL
  6084   002A8E  6E21               	movwf	Red_R90@mL^0,c
  6085   002A90  0E00               	movlw	high _motorL
  6086   002A92  6E22               	movwf	(Red_R90@mL+1)^0,c
  6087   002A94  0EE1               	movlw	low _motorR
  6088   002A96  6E23               	movwf	Red_R90@mR^0,c
  6089   002A98  0E00               	movlw	high _motorR
  6090   002A9A  6E24               	movwf	(Red_R90@mR+1)^0,c
  6091   002A9C  EC4A  F01E         	call	_Red_R90	;wreg free
  6092                           
  6093                           ;colorfunctions.c: 110:     }
  6094   002AA0  EFF9  F015         	goto	l591
  6095   002AA4                     l4228:
  6096   002AA4  EE20 F014          	lfsr	2,20
  6097   002AA8  5028               	movf	Colour2Action@cf^0,w,c
  6098   002AAA  26D9               	addwf	fsr2l,f,c
  6099   002AAC  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6100   002AAE  22DA               	addwfc	fsr2h,f,c
  6101   002AB0  04DE               	decf	postinc2,w,c
  6102   002AB2  10DE               	iorwf	postinc2,w,c
  6103   002AB4  A4D8               	btfss	status,2,c
  6104   002AB6  EF5F  F015         	goto	u3911
  6105   002ABA  EF61  F015         	goto	u3910
  6106   002ABE                     u3911:
  6107   002ABE  EF6D  F015         	goto	l4232
  6108   002AC2                     u3910:
  6109   002AC2                     
  6110                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  6111   002AC2  0EEA               	movlw	low _motorL
  6112   002AC4  6E21               	movwf	Green_L90@mL^0,c
  6113   002AC6  0E00               	movlw	high _motorL
  6114   002AC8  6E22               	movwf	(Green_L90@mL+1)^0,c
  6115   002ACA  0EE1               	movlw	low _motorR
  6116   002ACC  6E23               	movwf	Green_L90@mR^0,c
  6117   002ACE  0E00               	movlw	high _motorR
  6118   002AD0  6E24               	movwf	(Green_L90@mR+1)^0,c
  6119   002AD2  ECCA  F01E         	call	_Green_L90	;wreg free
  6120                           
  6121                           ;colorfunctions.c: 114:     }
  6122   002AD6  EFF9  F015         	goto	l591
  6123   002ADA                     l4232:
  6124   002ADA  EE20 F014          	lfsr	2,20
  6125   002ADE  5028               	movf	Colour2Action@cf^0,w,c
  6126   002AE0  26D9               	addwf	fsr2l,f,c
  6127   002AE2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6128   002AE4  22DA               	addwfc	fsr2h,f,c
  6129   002AE6  0E02               	movlw	2
  6130   002AE8  18DE               	xorwf	postinc2,w,c
  6131   002AEA  10DE               	iorwf	postinc2,w,c
  6132   002AEC  A4D8               	btfss	status,2,c
  6133   002AEE  EF7B  F015         	goto	u3921
  6134   002AF2  EF7D  F015         	goto	u3920
  6135   002AF6                     u3921:
  6136   002AF6  EF89  F015         	goto	l4236
  6137   002AFA                     u3920:
  6138   002AFA                     
  6139                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  6140   002AFA  0EEA               	movlw	low _motorL
  6141   002AFC  6E24               	movwf	Blue_T180@mL^0,c
  6142   002AFE  0E00               	movlw	high _motorL
  6143   002B00  6E25               	movwf	(Blue_T180@mL+1)^0,c
  6144   002B02  0EE1               	movlw	low _motorR
  6145   002B04  6E26               	movwf	Blue_T180@mR^0,c
  6146   002B06  0E00               	movlw	high _motorR
  6147   002B08  6E27               	movwf	(Blue_T180@mR+1)^0,c
  6148   002B0A  ECB7  F01F         	call	_Blue_T180	;wreg free
  6149                           
  6150                           ;colorfunctions.c: 118:     }
  6151   002B0E  EFF9  F015         	goto	l591
  6152   002B12                     l4236:
  6153   002B12  EE20 F014          	lfsr	2,20
  6154   002B16  5028               	movf	Colour2Action@cf^0,w,c
  6155   002B18  26D9               	addwf	fsr2l,f,c
  6156   002B1A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6157   002B1C  22DA               	addwfc	fsr2h,f,c
  6158   002B1E  0E03               	movlw	3
  6159   002B20  18DE               	xorwf	postinc2,w,c
  6160   002B22  10DE               	iorwf	postinc2,w,c
  6161   002B24  A4D8               	btfss	status,2,c
  6162   002B26  EF97  F015         	goto	u3931
  6163   002B2A  EF99  F015         	goto	u3930
  6164   002B2E                     u3931:
  6165   002B2E  EFA5  F015         	goto	l4240
  6166   002B32                     u3930:
  6167   002B32                     
  6168                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  6169   002B32  0EEA               	movlw	low _motorL
  6170   002B34  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  6171   002B36  0E00               	movlw	high _motorL
  6172   002B38  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  6173   002B3A  0EE1               	movlw	low _motorR
  6174   002B3C  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  6175   002B3E  0E00               	movlw	high _motorR
  6176   002B40  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  6177   002B42  EC83  F019         	call	_Yellow_rev1_R90	;wreg free
  6178                           
  6179                           ;colorfunctions.c: 122:     }
  6180   002B46  EFF9  F015         	goto	l591
  6181   002B4A                     l4240:
  6182   002B4A  EE20 F014          	lfsr	2,20
  6183   002B4E  5028               	movf	Colour2Action@cf^0,w,c
  6184   002B50  26D9               	addwf	fsr2l,f,c
  6185   002B52  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6186   002B54  22DA               	addwfc	fsr2h,f,c
  6187   002B56  0E04               	movlw	4
  6188   002B58  18DE               	xorwf	postinc2,w,c
  6189   002B5A  10DE               	iorwf	postinc2,w,c
  6190   002B5C  A4D8               	btfss	status,2,c
  6191   002B5E  EFB3  F015         	goto	u3941
  6192   002B62  EFB5  F015         	goto	u3940
  6193   002B66                     u3941:
  6194   002B66  EFC1  F015         	goto	l4244
  6195   002B6A                     u3940:
  6196   002B6A                     
  6197                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  6198   002B6A  0EEA               	movlw	low _motorL
  6199   002B6C  6E21               	movwf	Pink_rev1_L90@mL^0,c
  6200   002B6E  0E00               	movlw	high _motorL
  6201   002B70  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  6202   002B72  0EE1               	movlw	low _motorR
  6203   002B74  6E23               	movwf	Pink_rev1_L90@mR^0,c
  6204   002B76  0E00               	movlw	high _motorR
  6205   002B78  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  6206   002B7A  ECFB  F019         	call	_Pink_rev1_L90	;wreg free
  6207                           
  6208                           ;colorfunctions.c: 126:     }
  6209   002B7E  EFF9  F015         	goto	l591
  6210   002B82                     l4244:
  6211   002B82  EE20 F014          	lfsr	2,20
  6212   002B86  5028               	movf	Colour2Action@cf^0,w,c
  6213   002B88  26D9               	addwf	fsr2l,f,c
  6214   002B8A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6215   002B8C  22DA               	addwfc	fsr2h,f,c
  6216   002B8E  0E05               	movlw	5
  6217   002B90  18DE               	xorwf	postinc2,w,c
  6218   002B92  10DE               	iorwf	postinc2,w,c
  6219   002B94  A4D8               	btfss	status,2,c
  6220   002B96  EFCF  F015         	goto	u3951
  6221   002B9A  EFD1  F015         	goto	u3950
  6222   002B9E                     u3951:
  6223   002B9E  EFDD  F015         	goto	l4248
  6224   002BA2                     u3950:
  6225   002BA2                     
  6226                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  6227   002BA2  0EEA               	movlw	low _motorL
  6228   002BA4  6E21               	movwf	Orange_R135@mL^0,c
  6229   002BA6  0E00               	movlw	high _motorL
  6230   002BA8  6E22               	movwf	(Orange_R135@mL+1)^0,c
  6231   002BAA  0EE1               	movlw	low _motorR
  6232   002BAC  6E23               	movwf	Orange_R135@mR^0,c
  6233   002BAE  0E00               	movlw	high _motorR
  6234   002BB0  6E24               	movwf	(Orange_R135@mR+1)^0,c
  6235   002BB2  EC45  F01B         	call	_Orange_R135	;wreg free
  6236                           
  6237                           ;colorfunctions.c: 130:     }
  6238   002BB6  EFF9  F015         	goto	l591
  6239   002BBA                     l4248:
  6240   002BBA  EE20 F014          	lfsr	2,20
  6241   002BBE  5028               	movf	Colour2Action@cf^0,w,c
  6242   002BC0  26D9               	addwf	fsr2l,f,c
  6243   002BC2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6244   002BC4  22DA               	addwfc	fsr2h,f,c
  6245   002BC6  0E06               	movlw	6
  6246   002BC8  18DE               	xorwf	postinc2,w,c
  6247   002BCA  10DE               	iorwf	postinc2,w,c
  6248   002BCC  A4D8               	btfss	status,2,c
  6249   002BCE  EFEB  F015         	goto	u3961
  6250   002BD2  EFED  F015         	goto	u3960
  6251   002BD6                     u3961:
  6252   002BD6  EFF9  F015         	goto	l584
  6253   002BDA                     u3960:
  6254   002BDA                     
  6255                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  6256   002BDA  0EEA               	movlw	low _motorL
  6257   002BDC  6E21               	movwf	LightBlue_L135@mL^0,c
  6258   002BDE  0E00               	movlw	high _motorL
  6259   002BE0  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  6260   002BE2  0EE1               	movlw	low _motorR
  6261   002BE4  6E23               	movwf	LightBlue_L135@mR^0,c
  6262   002BE6  0E00               	movlw	high _motorR
  6263   002BE8  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  6264   002BEA  ECF8  F01B         	call	_LightBlue_L135	;wreg free
  6265   002BEE  EFF9  F015         	goto	l591
  6266   002BF2                     l584:
  6267   002BF2                     l591:
  6268   002BF2  0012               	return		;funcret
  6269   002BF4                     __end_of_Colour2Action:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _Yellow_rev1_R90 *****************
  6273 ;; Defined at:
  6274 ;;		line 269 in file "dc_motor.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6277 ;;		 -> motorL(9), 
  6278 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6279 ;;		 -> motorR(9), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;Total ram usage:        6 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 5
  6298 ;; This function calls:
  6299 ;;		_Left45
  6300 ;;		_Right45
  6301 ;;		_TimerReset
  6302 ;;		_fullSpeedAhead
  6303 ;;		_fullSpeedReverse
  6304 ;;		_reverseHalfSquare
  6305 ;;		_stop
  6306 ;; This function is called by:
  6307 ;;		_Colour2Action
  6308 ;;		_White
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text29
  6313   003306                     __ptext29:
  6314                           	callstack 0
  6315   003306                     _Yellow_rev1_R90:
  6316                           	callstack 24
  6317   003306                     
  6318                           ;dc_motor.c: 269: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 270: {;dc_motor.c: 271:     if (ForwardFlag){
  6319   003306  0100               	movlb	0	; () banked
  6320   003308  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6321   00330A  B4D8               	btfsc	status,2,c
  6322   00330C  EF8A  F019         	goto	u3101
  6323   003310  EF8C  F019         	goto	u3100
  6324   003314                     u3101:
  6325   003314  EFCE  F019         	goto	l3614
  6326   003318                     u3100:
  6327   003318                     
  6328                           ; BSR set to: 0
  6329                           ;dc_motor.c: 272:         reverseHalfSquare(mL,mR);
  6330   003318  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  6331   00331C  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  6332   003320  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  6333   003324  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  6334   003328  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  6335                           
  6336                           ;dc_motor.c: 274:         fullSpeedReverse(mL,mR);
  6337   00332C  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  6338   003330  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  6339   003334  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  6340   003338  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  6341   00333C  EC0A  F01F         	call	_fullSpeedReverse	;wreg free
  6342   003340                     
  6343                           ;dc_motor.c: 275:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6344   003340  0E39               	movlw	57
  6345   003342  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6346   003344  0ED2               	movlw	210
  6347   003346  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6348   003348  0E4C               	movlw	76
  6349   00334A                     u4147:
  6350   00334A  2EE8               	decfsz	wreg,f,c
  6351   00334C  D7FE               	bra	u4147
  6352   00334E  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6353   003350  D7FC               	bra	u4147
  6354   003352  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6355   003354  D7FA               	bra	u4147
  6356   003356  D000               	nop2	
  6357   003358                     
  6358                           ;dc_motor.c: 277:         Right45(mL,mR);
  6359   003358  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6360   00335C  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6361   003360  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6362   003364  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6363   003368  EC7D  F01D         	call	_Right45	;wreg free
  6364   00336C                     
  6365                           ;dc_motor.c: 278:         Right45(mL,mR);
  6366   00336C  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6367   003370  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6368   003374  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6369   003378  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6370   00337C  EC7D  F01D         	call	_Right45	;wreg free
  6371   003380                     
  6372                           ;dc_motor.c: 279:         TimerReset();
  6373   003380  EC78  F022         	call	_TimerReset	;wreg free
  6374   003384                     l3612:
  6375                           
  6376                           ;dc_motor.c: 280:         stop(mL,mR);
  6377   003384  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  6378   003388  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  6379   00338C  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  6380   003390  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  6381   003394  EC4C  F01C         	call	_stop	;wreg free
  6382                           
  6383                           ;dc_motor.c: 281:     }
  6384   003398  EFFA  F019         	goto	l286
  6385   00339C                     l3614:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;dc_motor.c: 284:         Left45(mL,mR);
  6389   00339C  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6390   0033A0  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6391   0033A4  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6392   0033A8  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6393   0033AC  ECC2  F01D         	call	_Left45	;wreg free
  6394                           
  6395                           ;dc_motor.c: 285:         Left45(mL,mR);
  6396   0033B0  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6397   0033B4  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6398   0033B8  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6399   0033BC  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6400   0033C0  ECC2  F01D         	call	_Left45	;wreg free
  6401                           
  6402                           ;dc_motor.c: 286:         fullSpeedAhead(mL,mR);
  6403   0033C4  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  6404   0033C8  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  6405   0033CC  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  6406   0033D0  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  6407   0033D4  EC8A  F01E         	call	_fullSpeedAhead	;wreg free
  6408   0033D8                     
  6409                           ;dc_motor.c: 287:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6410   0033D8  0E39               	movlw	57
  6411   0033DA  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6412   0033DC  0ED2               	movlw	210
  6413   0033DE  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6414   0033E0  0E4C               	movlw	76
  6415   0033E2                     u4157:
  6416   0033E2  2EE8               	decfsz	wreg,f,c
  6417   0033E4  D7FE               	bra	u4157
  6418   0033E6  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6419   0033E8  D7FC               	bra	u4157
  6420   0033EA  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6421   0033EC  D7FA               	bra	u4157
  6422   0033EE  D000               	nop2	
  6423   0033F0  EFC2  F019         	goto	l3612
  6424   0033F4                     l286:
  6425   0033F4  0012               	return		;funcret
  6426   0033F6                     __end_of_Yellow_rev1_R90:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _Red_R90 *****************
  6430 ;; Defined at:
  6431 ;;		line 226 in file "dc_motor.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6434 ;;		 -> motorL(9), 
  6435 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6436 ;;		 -> motorR(9), 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6452 ;;Total ram usage:        4 bytes
  6453 ;; Hardware stack levels used: 1
  6454 ;; Hardware stack levels required when called: 5
  6455 ;; This function calls:
  6456 ;;		_Left45
  6457 ;;		_Right45
  6458 ;;		_TimerReset
  6459 ;;		_reverseHalfSquare
  6460 ;; This function is called by:
  6461 ;;		_Colour2Action
  6462 ;;		_White
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text30
  6467   003C94                     __ptext30:
  6468                           	callstack 0
  6469   003C94                     _Red_R90:
  6470                           	callstack 24
  6471   003C94                     
  6472                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  6473   003C94  0100               	movlb	0	; () banked
  6474   003C96  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6475   003C98  B4D8               	btfsc	status,2,c
  6476   003C9A  EF51  F01E         	goto	u3071
  6477   003C9E  EF53  F01E         	goto	u3070
  6478   003CA2                     u3071:
  6479   003CA2  EF75  F01E         	goto	l3582
  6480   003CA6                     u3070:
  6481   003CA6                     
  6482                           ; BSR set to: 0
  6483                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  6484   003CA6  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  6485   003CAA  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  6486   003CAE  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  6487   003CB2  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  6488   003CB6  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  6489                           
  6490                           ;dc_motor.c: 230:         Right45(mL,mR);
  6491   003CBA  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6492   003CBE  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6493   003CC2  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6494   003CC6  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6495   003CCA  EC7D  F01D         	call	_Right45	;wreg free
  6496                           
  6497                           ;dc_motor.c: 231:         Right45(mL,mR);
  6498   003CCE  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6499   003CD2  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6500   003CD6  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6501   003CDA  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6502   003CDE  EC7D  F01D         	call	_Right45	;wreg free
  6503   003CE2                     
  6504                           ;dc_motor.c: 232:         TimerReset();
  6505   003CE2  EC78  F022         	call	_TimerReset	;wreg free
  6506                           
  6507                           ;dc_motor.c: 233:     }
  6508   003CE6  EF89  F01E         	goto	l271
  6509   003CEA                     l3582:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;dc_motor.c: 236:         Left45(mL,mR);
  6513   003CEA  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6514   003CEE  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6515   003CF2  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6516   003CF6  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6517   003CFA  ECC2  F01D         	call	_Left45	;wreg free
  6518                           
  6519                           ;dc_motor.c: 237:         Left45(mL,mR);
  6520   003CFE  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6521   003D02  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6522   003D06  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6523   003D0A  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6524   003D0E  ECC2  F01D         	call	_Left45	;wreg free
  6525   003D12                     l271:
  6526   003D12  0012               	return		;funcret
  6527   003D14                     __end_of_Red_R90:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function _Pink_rev1_L90 *****************
  6531 ;; Defined at:
  6532 ;;		line 291 in file "dc_motor.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6535 ;;		 -> motorL(9), 
  6536 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6537 ;;		 -> motorR(9), 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;Total ram usage:        6 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 5
  6556 ;; This function calls:
  6557 ;;		_Left45
  6558 ;;		_Right45
  6559 ;;		_TimerReset
  6560 ;;		_fullSpeedAhead
  6561 ;;		_fullSpeedReverse
  6562 ;;		_reverseHalfSquare
  6563 ;;		_stop
  6564 ;; This function is called by:
  6565 ;;		_Colour2Action
  6566 ;;		_White
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text31
  6571   0033F6                     __ptext31:
  6572                           	callstack 0
  6573   0033F6                     _Pink_rev1_L90:
  6574                           	callstack 24
  6575   0033F6                     
  6576                           ;dc_motor.c: 291: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 292: {;dc_motor.c: 293:     if (ForwardFlag){
  6577   0033F6  0100               	movlb	0	; () banked
  6578   0033F8  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6579   0033FA  B4D8               	btfsc	status,2,c
  6580   0033FC  EF02  F01A         	goto	u3111
  6581   003400  EF04  F01A         	goto	u3110
  6582   003404                     u3111:
  6583   003404  EF3C  F01A         	goto	l3632
  6584   003408                     u3110:
  6585   003408                     
  6586                           ; BSR set to: 0
  6587                           ;dc_motor.c: 294:         reverseHalfSquare(mL,mR);
  6588   003408  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  6589   00340C  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  6590   003410  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  6591   003414  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  6592   003418  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  6593                           
  6594                           ;dc_motor.c: 296:         fullSpeedReverse(mL,mR);
  6595   00341C  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  6596   003420  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  6597   003424  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  6598   003428  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  6599   00342C  EC0A  F01F         	call	_fullSpeedReverse	;wreg free
  6600   003430                     
  6601                           ;dc_motor.c: 297:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6602   003430  0E39               	movlw	57
  6603   003432  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6604   003434  0ED2               	movlw	210
  6605   003436  6E25               	movwf	??_Pink_rev1_L90^0,c
  6606   003438  0E4C               	movlw	76
  6607   00343A                     u4167:
  6608   00343A  2EE8               	decfsz	wreg,f,c
  6609   00343C  D7FE               	bra	u4167
  6610   00343E  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6611   003440  D7FC               	bra	u4167
  6612   003442  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6613   003444  D7FA               	bra	u4167
  6614   003446  D000               	nop2	
  6615   003448                     
  6616                           ;dc_motor.c: 298:         Left45(mL,mR);
  6617   003448  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6618   00344C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6619   003450  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6620   003454  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6621   003458  ECC2  F01D         	call	_Left45	;wreg free
  6622   00345C                     
  6623                           ;dc_motor.c: 299:         Left45(mL,mR);
  6624   00345C  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6625   003460  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6626   003464  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6627   003468  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6628   00346C  ECC2  F01D         	call	_Left45	;wreg free
  6629   003470                     
  6630                           ;dc_motor.c: 300:         TimerReset();
  6631   003470  EC78  F022         	call	_TimerReset	;wreg free
  6632                           
  6633                           ;dc_motor.c: 301:     }
  6634   003474  EF70  F01A         	goto	l291
  6635   003478                     l3632:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;dc_motor.c: 304:         Right45(mL,mR);
  6639   003478  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6640   00347C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6641   003480  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6642   003484  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6643   003488  EC7D  F01D         	call	_Right45	;wreg free
  6644                           
  6645                           ;dc_motor.c: 305:         Right45(mL,mR);
  6646   00348C  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6647   003490  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6648   003494  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6649   003498  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6650   00349C  EC7D  F01D         	call	_Right45	;wreg free
  6651                           
  6652                           ;dc_motor.c: 306:         fullSpeedAhead(mL,mR);
  6653   0034A0  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  6654   0034A4  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  6655   0034A8  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  6656   0034AC  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  6657   0034B0  EC8A  F01E         	call	_fullSpeedAhead	;wreg free
  6658   0034B4                     
  6659                           ;dc_motor.c: 307:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6660   0034B4  0E39               	movlw	57
  6661   0034B6  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6662   0034B8  0ED2               	movlw	210
  6663   0034BA  6E25               	movwf	??_Pink_rev1_L90^0,c
  6664   0034BC  0E4C               	movlw	76
  6665   0034BE                     u4177:
  6666   0034BE  2EE8               	decfsz	wreg,f,c
  6667   0034C0  D7FE               	bra	u4177
  6668   0034C2  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6669   0034C4  D7FC               	bra	u4177
  6670   0034C6  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6671   0034C8  D7FA               	bra	u4177
  6672   0034CA  D000               	nop2	
  6673   0034CC                     
  6674                           ;dc_motor.c: 308:         stop(mL,mR);
  6675   0034CC  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  6676   0034D0  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  6677   0034D4  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  6678   0034D8  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  6679   0034DC  EC4C  F01C         	call	_stop	;wreg free
  6680   0034E0                     l291:
  6681   0034E0  0012               	return		;funcret
  6682   0034E2                     __end_of_Pink_rev1_L90:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function _fullSpeedAhead *****************
  6686 ;; Defined at:
  6687 ;;		line 149 in file "dc_motor.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6690 ;;		 -> motorL(9), 
  6691 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6692 ;;		 -> motorR(9), 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  i               2   24[COMRAM] unsigned int 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6708 ;;Total ram usage:        7 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; Hardware stack levels required when called: 3
  6711 ;; This function calls:
  6712 ;;		_setMotorPWM
  6713 ;; This function is called by:
  6714 ;;		_main
  6715 ;;		_Yellow_rev1_R90
  6716 ;;		_Pink_rev1_L90
  6717 ;;		_White
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text32
  6722   003D14                     __ptext32:
  6723                           	callstack 0
  6724   003D14                     _fullSpeedAhead:
  6725                           	callstack 27
  6726   003D14                     
  6727                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6728   003D14  EE20 F001          	lfsr	2,1
  6729   003D18  5014               	movf	fullSpeedAhead@mL^0,w,c
  6730   003D1A  26D9               	addwf	fsr2l,f,c
  6731   003D1C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6732   003D1E  22DA               	addwfc	fsr2h,f,c
  6733   003D20  0E01               	movlw	1
  6734   003D22  6EDF               	movwf	indf2,c
  6735                           
  6736                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6737   003D24  EE20 F001          	lfsr	2,1
  6738   003D28  5016               	movf	fullSpeedAhead@mR^0,w,c
  6739   003D2A  26D9               	addwf	fsr2l,f,c
  6740   003D2C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6741   003D2E  22DA               	addwfc	fsr2h,f,c
  6742   003D30  0E01               	movlw	1
  6743   003D32  6EDF               	movwf	indf2,c
  6744   003D34                     
  6745                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6746   003D34  0E00               	movlw	0
  6747   003D36  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6748   003D38  0E00               	movlw	0
  6749   003D3A  6E19               	movwf	fullSpeedAhead@i^0,c
  6750   003D3C                     l3216:
  6751                           
  6752                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6753   003D3C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6754   003D40  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6755   003D44  2ADF               	incf	indf2,f,c
  6756                           
  6757                           ;dc_motor.c: 157:         (mR->power)++;
  6758   003D46  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6759   003D4A  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6760   003D4E  2ADF               	incf	indf2,f,c
  6761   003D50                     
  6762                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6763   003D50  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6764   003D54  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6765   003D58  ECFA  F015         	call	_setMotorPWM	;wreg free
  6766   003D5C                     
  6767                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6768   003D5C  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6769   003D60  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6770   003D64  ECFA  F015         	call	_setMotorPWM	;wreg free
  6771   003D68                     
  6772                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6773   003D68  0E09               	movlw	9
  6774   003D6A  6E18               	movwf	??_fullSpeedAhead^0,c
  6775   003D6C  0E4E               	movlw	78
  6776   003D6E                     u4187:
  6777   003D6E  2EE8               	decfsz	wreg,f,c
  6778   003D70  D7FE               	bra	u4187
  6779   003D72  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6780   003D74  D7FC               	bra	u4187
  6781   003D76  D000               	nop2	
  6782   003D78                     
  6783                           ;dc_motor.c: 161:     }
  6784   003D78  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6785   003D7A  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6786   003D7C  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6787   003D7E  E109               	bnz	u2440
  6788   003D80  0E32               	movlw	50
  6789   003D82  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6790   003D84  A0D8               	btfss	status,0,c
  6791   003D86  EFC7  F01E         	goto	u2441
  6792   003D8A  EFC9  F01E         	goto	u2440
  6793   003D8E                     u2441:
  6794   003D8E  EF9E  F01E         	goto	l3216
  6795   003D92                     u2440:
  6796   003D92  0012               	return		;funcret
  6797   003D94                     __end_of_fullSpeedAhead:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _Orange_R135 *****************
  6801 ;; Defined at:
  6802 ;;		line 311 in file "dc_motor.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6805 ;;		 -> motorL(9), 
  6806 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6807 ;;		 -> motorR(9), 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;Total ram usage:        4 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; Hardware stack levels required when called: 5
  6826 ;; This function calls:
  6827 ;;		_Left45
  6828 ;;		_Right45
  6829 ;;		_TimerReset
  6830 ;;		_reverseHalfSquare
  6831 ;;		_stop
  6832 ;; This function is called by:
  6833 ;;		_Colour2Action
  6834 ;;		_White
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text33
  6839   00368A                     __ptext33:
  6840                           	callstack 0
  6841   00368A                     _Orange_R135:
  6842                           	callstack 24
  6843   00368A                     
  6844                           ;dc_motor.c: 311: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           312: {;dc_motor.c: 313:     if (ForwardFlag){
  6845   00368A  0100               	movlb	0	; () banked
  6846   00368C  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6847   00368E  B4D8               	btfsc	status,2,c
  6848   003690  EF4C  F01B         	goto	u3121
  6849   003694  EF4E  F01B         	goto	u3120
  6850   003698                     u3121:
  6851   003698  EF7A  F01B         	goto	l3644
  6852   00369C                     u3120:
  6853   00369C                     
  6854                           ; BSR set to: 0
  6855                           ;dc_motor.c: 314:         reverseHalfSquare(mL,mR);
  6856   00369C  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  6857   0036A0  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  6858   0036A4  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  6859   0036A8  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  6860   0036AC  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  6861                           
  6862                           ;dc_motor.c: 316:         Right45(mL,mR);
  6863   0036B0  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6864   0036B4  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6865   0036B8  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6866   0036BC  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6867   0036C0  EC7D  F01D         	call	_Right45	;wreg free
  6868                           
  6869                           ;dc_motor.c: 317:         Right45(mL,mR);
  6870   0036C4  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6871   0036C8  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6872   0036CC  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6873   0036D0  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6874   0036D4  EC7D  F01D         	call	_Right45	;wreg free
  6875                           
  6876                           ;dc_motor.c: 318:         Right45(mL,mR);
  6877   0036D8  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6878   0036DC  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6879   0036E0  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6880   0036E4  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6881   0036E8  EC7D  F01D         	call	_Right45	;wreg free
  6882   0036EC                     
  6883                           ;dc_motor.c: 319:         TimerReset();
  6884   0036EC  EC78  F022         	call	_TimerReset	;wreg free
  6885                           
  6886                           ;dc_motor.c: 321:     }
  6887   0036F0  EFA2  F01B         	goto	l296
  6888   0036F4                     l3644:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;dc_motor.c: 324:         Left45(mL,mR);
  6892   0036F4  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6893   0036F8  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6894   0036FC  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6895   003700  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6896   003704  ECC2  F01D         	call	_Left45	;wreg free
  6897                           
  6898                           ;dc_motor.c: 325:         Left45(mL,mR);
  6899   003708  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6900   00370C  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6901   003710  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6902   003714  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6903   003718  ECC2  F01D         	call	_Left45	;wreg free
  6904                           
  6905                           ;dc_motor.c: 326:         Left45(mL,mR);
  6906   00371C  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6907   003720  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6908   003724  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6909   003728  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6910   00372C  ECC2  F01D         	call	_Left45	;wreg free
  6911                           
  6912                           ;dc_motor.c: 327:         stop(mL,mR);
  6913   003730  C021  F014         	movff	Orange_R135@mL,stop@mL
  6914   003734  C022  F015         	movff	Orange_R135@mL+1,stop@mL+1
  6915   003738  C023  F016         	movff	Orange_R135@mR,stop@mR
  6916   00373C  C024  F017         	movff	Orange_R135@mR+1,stop@mR+1
  6917   003740  EC4C  F01C         	call	_stop	;wreg free
  6918   003744                     l296:
  6919   003744  0012               	return		;funcret
  6920   003746                     __end_of_Orange_R135:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function _LightBlue_L135 *****************
  6924 ;; Defined at:
  6925 ;;		line 330 in file "dc_motor.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6928 ;;		 -> motorL(9), 
  6929 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6930 ;;		 -> motorR(9), 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;Total ram usage:        4 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; Hardware stack levels required when called: 5
  6949 ;; This function calls:
  6950 ;;		_Left45
  6951 ;;		_Right45
  6952 ;;		_TimerReset
  6953 ;;		_reverseHalfSquare
  6954 ;; This function is called by:
  6955 ;;		_Colour2Action
  6956 ;;		_White
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text34
  6961   0037F0                     __ptext34:
  6962                           	callstack 0
  6963   0037F0                     _LightBlue_L135:
  6964                           	callstack 24
  6965   0037F0                     
  6966                           ;dc_motor.c: 330: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 331: {;dc_motor.c: 333:      if (ForwardFlag){
  6967   0037F0  0100               	movlb	0	; () banked
  6968   0037F2  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6969   0037F4  B4D8               	btfsc	status,2,c
  6970   0037F6  EFFF  F01B         	goto	u3131
  6971   0037FA  EF01  F01C         	goto	u3130
  6972   0037FE                     u3131:
  6973   0037FE  EF2D  F01C         	goto	l3652
  6974   003802                     u3130:
  6975   003802                     
  6976                           ; BSR set to: 0
  6977                           ;dc_motor.c: 334:         reverseHalfSquare(mL,mR);
  6978   003802  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  6979   003806  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  6980   00380A  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  6981   00380E  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  6982   003812  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  6983                           
  6984                           ;dc_motor.c: 336:         Left45(mL,mR);
  6985   003816  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6986   00381A  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6987   00381E  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6988   003822  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6989   003826  ECC2  F01D         	call	_Left45	;wreg free
  6990                           
  6991                           ;dc_motor.c: 337:         Left45(mL,mR);
  6992   00382A  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6993   00382E  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6994   003832  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6995   003836  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6996   00383A  ECC2  F01D         	call	_Left45	;wreg free
  6997                           
  6998                           ;dc_motor.c: 338:         Left45(mL,mR);
  6999   00383E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7000   003842  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7001   003846  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7002   00384A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7003   00384E  ECC2  F01D         	call	_Left45	;wreg free
  7004   003852                     
  7005                           ;dc_motor.c: 339:         TimerReset();
  7006   003852  EC78  F022         	call	_TimerReset	;wreg free
  7007                           
  7008                           ;dc_motor.c: 340:     }
  7009   003856  EF4B  F01C         	goto	l301
  7010   00385A                     l3652:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;dc_motor.c: 343:         Right45(mL,mR);
  7014   00385A  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7015   00385E  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7016   003862  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7017   003866  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7018   00386A  EC7D  F01D         	call	_Right45	;wreg free
  7019                           
  7020                           ;dc_motor.c: 344:         Right45(mL,mR);
  7021   00386E  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7022   003872  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7023   003876  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7024   00387A  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7025   00387E  EC7D  F01D         	call	_Right45	;wreg free
  7026                           
  7027                           ;dc_motor.c: 345:         Right45(mL,mR);
  7028   003882  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7029   003886  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7030   00388A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7031   00388E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7032   003892  EC7D  F01D         	call	_Right45	;wreg free
  7033   003896                     l301:
  7034   003896  0012               	return		;funcret
  7035   003898                     __end_of_LightBlue_L135:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _Green_L90 *****************
  7039 ;; Defined at:
  7040 ;;		line 241 in file "dc_motor.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7043 ;;		 -> motorL(9), 
  7044 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7045 ;;		 -> motorR(9), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;Total ram usage:        4 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 5
  7064 ;; This function calls:
  7065 ;;		_Left45
  7066 ;;		_Right45
  7067 ;;		_TimerReset
  7068 ;;		_reverseHalfSquare
  7069 ;; This function is called by:
  7070 ;;		_Colour2Action
  7071 ;;		_White
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text35
  7076   003D94                     __ptext35:
  7077                           	callstack 0
  7078   003D94                     _Green_L90:
  7079                           	callstack 24
  7080   003D94                     
  7081                           ;dc_motor.c: 241: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          42: {;dc_motor.c: 243:     if (ForwardFlag){
  7082   003D94  0100               	movlb	0	; () banked
  7083   003D96  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7084   003D98  B4D8               	btfsc	status,2,c
  7085   003D9A  EFD1  F01E         	goto	u3081
  7086   003D9E  EFD3  F01E         	goto	u3080
  7087   003DA2                     u3081:
  7088   003DA2  EFF5  F01E         	goto	l3590
  7089   003DA6                     u3080:
  7090   003DA6                     
  7091                           ; BSR set to: 0
  7092                           ;dc_motor.c: 244:         reverseHalfSquare(mL,mR);
  7093   003DA6  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  7094   003DAA  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  7095   003DAE  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  7096   003DB2  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  7097   003DB6  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  7098                           
  7099                           ;dc_motor.c: 246:         Left45(mL,mR);
  7100   003DBA  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7101   003DBE  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7102   003DC2  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7103   003DC6  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7104   003DCA  ECC2  F01D         	call	_Left45	;wreg free
  7105                           
  7106                           ;dc_motor.c: 247:         Left45(mL,mR);
  7107   003DCE  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7108   003DD2  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7109   003DD6  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7110   003DDA  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7111   003DDE  ECC2  F01D         	call	_Left45	;wreg free
  7112   003DE2                     
  7113                           ;dc_motor.c: 248:         TimerReset();
  7114   003DE2  EC78  F022         	call	_TimerReset	;wreg free
  7115                           
  7116                           ;dc_motor.c: 249:     }
  7117   003DE6  EF09  F01F         	goto	l276
  7118   003DEA                     l3590:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;dc_motor.c: 252:         Right45(mL,mR);
  7122   003DEA  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7123   003DEE  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7124   003DF2  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7125   003DF6  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7126   003DFA  EC7D  F01D         	call	_Right45	;wreg free
  7127                           
  7128                           ;dc_motor.c: 253:         Right45(mL,mR);
  7129   003DFE  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7130   003E02  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7131   003E06  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7132   003E0A  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7133   003E0E  EC7D  F01D         	call	_Right45	;wreg free
  7134   003E12                     l276:
  7135   003E12  0012               	return		;funcret
  7136   003E14                     __end_of_Green_L90:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _Right45 *****************
  7140 ;; Defined at:
  7141 ;;		line 193 in file "dc_motor.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7144 ;;		 -> motorL(9), 
  7145 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7146 ;;		 -> motorR(9), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;Total ram usage:        6 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 4
  7165 ;; This function calls:
  7166 ;;		_stop
  7167 ;;		_turnRight
  7168 ;; This function is called by:
  7169 ;;		_Red_R90
  7170 ;;		_Green_L90
  7171 ;;		_Yellow_rev1_R90
  7172 ;;		_Pink_rev1_L90
  7173 ;;		_Orange_R135
  7174 ;;		_LightBlue_L135
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text36
  7179   003AFA                     __ptext36:
  7180                           	callstack 0
  7181   003AFA                     _Right45:
  7182                           	callstack 24
  7183   003AFA                     
  7184                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7185   003AFA  8080               	bsf	128,0,c	;volatile
  7186   003AFC                     
  7187                           ;dc_motor.c: 197:     stop(mL,mR);
  7188   003AFC  C01A  F014         	movff	Right45@mL,stop@mL
  7189   003B00  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7190   003B04  C01C  F016         	movff	Right45@mR,stop@mR
  7191   003B08  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7192   003B0C  EC4C  F01C         	call	_stop	;wreg free
  7193   003B10                     
  7194                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7195   003B10  0E05               	movlw	5
  7196   003B12  6E1F               	movwf	(??_Right45+1)^0,c
  7197   003B14  0E0F               	movlw	15
  7198   003B16  6E1E               	movwf	??_Right45^0,c
  7199   003B18  0EF1               	movlw	241
  7200   003B1A                     u4197:
  7201   003B1A  2EE8               	decfsz	wreg,f,c
  7202   003B1C  D7FE               	bra	u4197
  7203   003B1E  2E1E               	decfsz	??_Right45^0,f,c
  7204   003B20  D7FC               	bra	u4197
  7205   003B22  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7206   003B24  D7FA               	bra	u4197
  7207   003B26  F000               	nop	
  7208   003B28                     
  7209                           ;dc_motor.c: 199:     turnRight(mL,mR);
  7210   003B28  C01A  F014         	movff	Right45@mL,turnRight@mL
  7211   003B2C  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  7212   003B30  C01C  F016         	movff	Right45@mR,turnRight@mR
  7213   003B34  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  7214   003B38  EC9F  F01C         	call	_turnRight	;wreg free
  7215                           
  7216                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  7217   003B3C  0E0E               	movlw	14
  7218   003B3E  6E1F               	movwf	(??_Right45+1)^0,c
  7219   003B40  0ECD               	movlw	205
  7220   003B42  6E1E               	movwf	??_Right45^0,c
  7221   003B44  0E6C               	movlw	108
  7222   003B46                     u4207:
  7223   003B46  2EE8               	decfsz	wreg,f,c
  7224   003B48  D7FE               	bra	u4207
  7225   003B4A  2E1E               	decfsz	??_Right45^0,f,c
  7226   003B4C  D7FC               	bra	u4207
  7227   003B4E  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7228   003B50  D7FA               	bra	u4207
  7229   003B52  D000               	nop2	
  7230   003B54                     
  7231                           ;dc_motor.c: 201:     stop(mL,mR);
  7232   003B54  C01A  F014         	movff	Right45@mL,stop@mL
  7233   003B58  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7234   003B5C  C01C  F016         	movff	Right45@mR,stop@mR
  7235   003B60  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7236   003B64  EC4C  F01C         	call	_stop	;wreg free
  7237   003B68                     
  7238                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7239   003B68  0E05               	movlw	5
  7240   003B6A  6E1F               	movwf	(??_Right45+1)^0,c
  7241   003B6C  0E0F               	movlw	15
  7242   003B6E  6E1E               	movwf	??_Right45^0,c
  7243   003B70  0EF1               	movlw	241
  7244   003B72                     u4217:
  7245   003B72  2EE8               	decfsz	wreg,f,c
  7246   003B74  D7FE               	bra	u4217
  7247   003B76  2E1E               	decfsz	??_Right45^0,f,c
  7248   003B78  D7FC               	bra	u4217
  7249   003B7A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7250   003B7C  D7FA               	bra	u4217
  7251   003B7E  F000               	nop	
  7252   003B80                     
  7253                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  7254   003B80  9080               	bcf	128,0,c	;volatile
  7255   003B82  0012               	return		;funcret
  7256   003B84                     __end_of_Right45:
  7257                           	callstack 0
  7258                           
  7259 ;; *************** function _turnRight *****************
  7260 ;; Defined at:
  7261 ;;		line 132 in file "dc_motor.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7264 ;;		 -> motorL(9), 
  7265 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7266 ;;		 -> motorR(9), 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  i               2   23[COMRAM] unsigned int 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;Total ram usage:        6 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 3
  7285 ;; This function calls:
  7286 ;;		_setMotorPWM
  7287 ;; This function is called by:
  7288 ;;		_Right45
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text37
  7293   00393E                     __ptext37:
  7294                           	callstack 0
  7295   00393E                     _turnRight:
  7296                           	callstack 24
  7297   00393E                     
  7298                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 0;
  7299   00393E  EE20 F001          	lfsr	2,1
  7300   003942  5014               	movf	turnRight@mL^0,w,c
  7301   003944  26D9               	addwf	fsr2l,f,c
  7302   003946  5015               	movf	(turnRight@mL+1)^0,w,c
  7303   003948  22DA               	addwfc	fsr2h,f,c
  7304   00394A  0E00               	movlw	0
  7305   00394C  6EDF               	movwf	indf2,c
  7306                           
  7307                           ;dc_motor.c: 135:     (mR->direction) = 1;
  7308   00394E  EE20 F001          	lfsr	2,1
  7309   003952  5016               	movf	turnRight@mR^0,w,c
  7310   003954  26D9               	addwf	fsr2l,f,c
  7311   003956  5017               	movf	(turnRight@mR+1)^0,w,c
  7312   003958  22DA               	addwfc	fsr2h,f,c
  7313   00395A  0E01               	movlw	1
  7314   00395C  6EDF               	movwf	indf2,c
  7315   00395E                     
  7316                           ;dc_motor.c: 136:     setMotorPWM(mL);
  7317   00395E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7318   003962  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7319   003966  ECFA  F015         	call	_setMotorPWM	;wreg free
  7320   00396A                     
  7321                           ;dc_motor.c: 137:     setMotorPWM(mR);
  7322   00396A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7323   00396E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7324   003972  ECFA  F015         	call	_setMotorPWM	;wreg free
  7325   003976                     
  7326                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  7327   003976  0E00               	movlw	0
  7328   003978  6E19               	movwf	(turnRight@i+1)^0,c
  7329   00397A  0E00               	movlw	0
  7330   00397C  6E18               	movwf	turnRight@i^0,c
  7331   00397E                     l3098:
  7332                           
  7333                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  7334   00397E  C014  FFD9         	movff	turnRight@mL,fsr2l
  7335   003982  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7336   003986  2ADF               	incf	indf2,f,c
  7337                           
  7338                           ;dc_motor.c: 141:         mR->power++;
  7339   003988  C016  FFD9         	movff	turnRight@mR,fsr2l
  7340   00398C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7341   003990  2ADF               	incf	indf2,f,c
  7342   003992                     
  7343                           ;dc_motor.c: 142:         setMotorPWM(mL);
  7344   003992  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7345   003996  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7346   00399A  ECFA  F015         	call	_setMotorPWM	;wreg free
  7347   00399E                     
  7348                           ;dc_motor.c: 143:         setMotorPWM(mR);
  7349   00399E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7350   0039A2  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7351   0039A6  ECFA  F015         	call	_setMotorPWM	;wreg free
  7352   0039AA                     
  7353                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7354   0039AA  0EE4               	movlw	228
  7355   0039AC                     u4227:
  7356   0039AC  D000               	nop2	
  7357   0039AE  D000               	nop2	
  7358   0039B0  2EE8               	decfsz	wreg,f,c
  7359   0039B2  D7FC               	bra	u4227
  7360   0039B4  D000               	nop2	
  7361   0039B6  D000               	nop2	
  7362   0039B8                     
  7363                           ;dc_motor.c: 145:     }
  7364   0039B8  4A18               	infsnz	turnRight@i^0,f,c
  7365   0039BA  2A19               	incf	(turnRight@i+1)^0,f,c
  7366   0039BC  5019               	movf	(turnRight@i+1)^0,w,c
  7367   0039BE  E109               	bnz	u2360
  7368   0039C0  0E32               	movlw	50
  7369   0039C2  5C18               	subwf	turnRight@i^0,w,c
  7370   0039C4  A0D8               	btfss	status,0,c
  7371   0039C6  EFE7  F01C         	goto	u2361
  7372   0039CA  EFE9  F01C         	goto	u2360
  7373   0039CE                     u2361:
  7374   0039CE  EFBF  F01C         	goto	l3098
  7375   0039D2                     u2360:
  7376   0039D2  0012               	return		;funcret
  7377   0039D4                     __end_of_turnRight:
  7378                           	callstack 0
  7379                           
  7380 ;; *************** function _Blue_T180 *****************
  7381 ;; Defined at:
  7382 ;;		line 257 in file "dc_motor.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  7385 ;;		 -> motorL(9), 
  7386 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7387 ;;		 -> motorR(9), 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;Total ram usage:        4 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 6
  7406 ;; This function calls:
  7407 ;;		_TimerReset
  7408 ;;		_reverseHalfSquare
  7409 ;;		_rotate180left
  7410 ;; This function is called by:
  7411 ;;		_Colour2Action
  7412 ;;		_White
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text38
  7417   003F6E                     __ptext38:
  7418                           	callstack 0
  7419   003F6E                     _Blue_T180:
  7420                           	callstack 23
  7421   003F6E                     
  7422                           ;dc_motor.c: 257: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          58: {;dc_motor.c: 259:     if (ForwardFlag){
  7423   003F6E  0100               	movlb	0	; () banked
  7424   003F70  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7425   003F72  B4D8               	btfsc	status,2,c
  7426   003F74  EFBE  F01F         	goto	u3091
  7427   003F78  EFC0  F01F         	goto	u3090
  7428   003F7C                     u3091:
  7429   003F7C  EFD8  F01F         	goto	l3598
  7430   003F80                     u3090:
  7431   003F80                     
  7432                           ; BSR set to: 0
  7433                           ;dc_motor.c: 260:     reverseHalfSquare(mL,mR);
  7434   003F80  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  7435   003F84  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  7436   003F88  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  7437   003F8C  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  7438   003F90  EC07  F01E         	call	_reverseHalfSquare	;wreg free
  7439                           
  7440                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  7441   003F94  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7442   003F98  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7443   003F9C  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7444   003FA0  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7445   003FA4  ECE3  F01F         	call	_rotate180left	;wreg free
  7446   003FA8                     
  7447                           ;dc_motor.c: 263:     TimerReset();
  7448   003FA8  EC78  F022         	call	_TimerReset	;wreg free
  7449                           
  7450                           ;dc_motor.c: 264:     }else{
  7451   003FAC  EFE2  F01F         	goto	l281
  7452   003FB0                     l3598:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;dc_motor.c: 265:     rotate180left(mL,mR);
  7456   003FB0  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7457   003FB4  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7458   003FB8  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7459   003FBC  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7460   003FC0  ECE3  F01F         	call	_rotate180left	;wreg free
  7461   003FC4                     l281:
  7462   003FC4  0012               	return		;funcret
  7463   003FC6                     __end_of_Blue_T180:
  7464                           	callstack 0
  7465                           
  7466 ;; *************** function _rotate180left *****************
  7467 ;; Defined at:
  7468 ;;		line 207 in file "dc_motor.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7471 ;;		 -> motorL(9), 
  7472 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7473 ;;		 -> motorR(9), 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;Total ram usage:        4 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; Hardware stack levels required when called: 5
  7492 ;; This function calls:
  7493 ;;		_Left45
  7494 ;; This function is called by:
  7495 ;;		_Blue_T180
  7496 ;;		_White
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text39
  7501   003FC6                     __ptext39:
  7502                           	callstack 0
  7503   003FC6                     _rotate180left:
  7504                           	callstack 23
  7505   003FC6                     
  7506                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  7507   003FC6  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7508   003FCA  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7509   003FCE  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7510   003FD2  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7511   003FD6  ECC2  F01D         	call	_Left45	;wreg free
  7512                           
  7513                           ;dc_motor.c: 211:     Left45(mL,mR);
  7514   003FDA  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7515   003FDE  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7516   003FE2  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7517   003FE6  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7518   003FEA  ECC2  F01D         	call	_Left45	;wreg free
  7519                           
  7520                           ;dc_motor.c: 212:     Left45(mL,mR);
  7521   003FEE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7522   003FF2  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7523   003FF6  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7524   003FFA  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7525   003FFE  ECC2  F01D         	call	_Left45	;wreg free
  7526                           
  7527                           ;dc_motor.c: 213:     Left45(mL,mR);
  7528   004002  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7529   004006  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7530   00400A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7531   00400E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7532   004012  ECC2  F01D         	call	_Left45	;wreg free
  7533   004016  0012               	return		;funcret
  7534   004018                     __end_of_rotate180left:
  7535                           	callstack 0
  7536                           
  7537 ;; *************** function _Left45 *****************
  7538 ;; Defined at:
  7539 ;;		line 179 in file "dc_motor.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7542 ;;		 -> motorL(9), 
  7543 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7544 ;;		 -> motorR(9), 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;Total ram usage:        6 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; Hardware stack levels required when called: 4
  7563 ;; This function calls:
  7564 ;;		_stop
  7565 ;;		_turnLeft
  7566 ;; This function is called by:
  7567 ;;		_rotate180left
  7568 ;;		_Red_R90
  7569 ;;		_Green_L90
  7570 ;;		_Yellow_rev1_R90
  7571 ;;		_Pink_rev1_L90
  7572 ;;		_Orange_R135
  7573 ;;		_LightBlue_L135
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text40
  7578   003B84                     __ptext40:
  7579                           	callstack 0
  7580   003B84                     _Left45:
  7581                           	callstack 24
  7582   003B84                     
  7583                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  7584   003B84  807E               	bsf	126,0,c	;volatile
  7585   003B86                     
  7586                           ;dc_motor.c: 183:     stop(mL,mR);
  7587   003B86  C01A  F014         	movff	Left45@mL,stop@mL
  7588   003B8A  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7589   003B8E  C01C  F016         	movff	Left45@mR,stop@mR
  7590   003B92  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7591   003B96  EC4C  F01C         	call	_stop	;wreg free
  7592   003B9A                     
  7593                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7594   003B9A  0E05               	movlw	5
  7595   003B9C  6E1F               	movwf	(??_Left45+1)^0,c
  7596   003B9E  0E0F               	movlw	15
  7597   003BA0  6E1E               	movwf	??_Left45^0,c
  7598   003BA2  0EF1               	movlw	241
  7599   003BA4                     u4237:
  7600   003BA4  2EE8               	decfsz	wreg,f,c
  7601   003BA6  D7FE               	bra	u4237
  7602   003BA8  2E1E               	decfsz	??_Left45^0,f,c
  7603   003BAA  D7FC               	bra	u4237
  7604   003BAC  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7605   003BAE  D7FA               	bra	u4237
  7606   003BB0  F000               	nop	
  7607   003BB2                     
  7608                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  7609   003BB2  C01A  F014         	movff	Left45@mL,turnLeft@mL
  7610   003BB6  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  7611   003BBA  C01C  F016         	movff	Left45@mR,turnLeft@mR
  7612   003BBE  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  7613   003BC2  ECEA  F01C         	call	_turnLeft	;wreg free
  7614                           
  7615                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  7616   003BC6  0E0E               	movlw	14
  7617   003BC8  6E1F               	movwf	(??_Left45+1)^0,c
  7618   003BCA  0ECD               	movlw	205
  7619   003BCC  6E1E               	movwf	??_Left45^0,c
  7620   003BCE  0E6C               	movlw	108
  7621   003BD0                     u4247:
  7622   003BD0  2EE8               	decfsz	wreg,f,c
  7623   003BD2  D7FE               	bra	u4247
  7624   003BD4  2E1E               	decfsz	??_Left45^0,f,c
  7625   003BD6  D7FC               	bra	u4247
  7626   003BD8  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7627   003BDA  D7FA               	bra	u4247
  7628   003BDC  D000               	nop2	
  7629   003BDE                     
  7630                           ;dc_motor.c: 187:     stop(mL,mR);
  7631   003BDE  C01A  F014         	movff	Left45@mL,stop@mL
  7632   003BE2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7633   003BE6  C01C  F016         	movff	Left45@mR,stop@mR
  7634   003BEA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7635   003BEE  EC4C  F01C         	call	_stop	;wreg free
  7636   003BF2                     
  7637                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7638   003BF2  0E05               	movlw	5
  7639   003BF4  6E1F               	movwf	(??_Left45+1)^0,c
  7640   003BF6  0E0F               	movlw	15
  7641   003BF8  6E1E               	movwf	??_Left45^0,c
  7642   003BFA  0EF1               	movlw	241
  7643   003BFC                     u4257:
  7644   003BFC  2EE8               	decfsz	wreg,f,c
  7645   003BFE  D7FE               	bra	u4257
  7646   003C00  2E1E               	decfsz	??_Left45^0,f,c
  7647   003C02  D7FC               	bra	u4257
  7648   003C04  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7649   003C06  D7FA               	bra	u4257
  7650   003C08  F000               	nop	
  7651   003C0A                     
  7652                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  7653   003C0A  907E               	bcf	126,0,c	;volatile
  7654   003C0C  0012               	return		;funcret
  7655   003C0E                     __end_of_Left45:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _turnLeft *****************
  7659 ;; Defined at:
  7660 ;;		line 113 in file "dc_motor.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7663 ;;		 -> motorL(9), 
  7664 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7665 ;;		 -> motorR(9), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  i               2   23[COMRAM] unsigned int 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;Total ram usage:        6 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 3
  7684 ;; This function calls:
  7685 ;;		_setMotorPWM
  7686 ;; This function is called by:
  7687 ;;		_Left45
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text41
  7692   0039D4                     __ptext41:
  7693                           	callstack 0
  7694   0039D4                     _turnLeft:
  7695                           	callstack 24
  7696   0039D4                     
  7697                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 1;
  7698   0039D4  EE20 F001          	lfsr	2,1
  7699   0039D8  5014               	movf	turnLeft@mL^0,w,c
  7700   0039DA  26D9               	addwf	fsr2l,f,c
  7701   0039DC  5015               	movf	(turnLeft@mL+1)^0,w,c
  7702   0039DE  22DA               	addwfc	fsr2h,f,c
  7703   0039E0  0E01               	movlw	1
  7704   0039E2  6EDF               	movwf	indf2,c
  7705                           
  7706                           ;dc_motor.c: 117:     (mR->direction) = 0;
  7707   0039E4  EE20 F001          	lfsr	2,1
  7708   0039E8  5016               	movf	turnLeft@mR^0,w,c
  7709   0039EA  26D9               	addwf	fsr2l,f,c
  7710   0039EC  5017               	movf	(turnLeft@mR+1)^0,w,c
  7711   0039EE  22DA               	addwfc	fsr2h,f,c
  7712   0039F0  0E00               	movlw	0
  7713   0039F2  6EDF               	movwf	indf2,c
  7714   0039F4                     
  7715                           ;dc_motor.c: 118:     setMotorPWM(mL);
  7716   0039F4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7717   0039F8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7718   0039FC  ECFA  F015         	call	_setMotorPWM	;wreg free
  7719   003A00                     
  7720                           ;dc_motor.c: 119:     setMotorPWM(mR);
  7721   003A00  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7722   003A04  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7723   003A08  ECFA  F015         	call	_setMotorPWM	;wreg free
  7724   003A0C                     
  7725                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  7726   003A0C  0E00               	movlw	0
  7727   003A0E  6E19               	movwf	(turnLeft@i+1)^0,c
  7728   003A10  0E00               	movlw	0
  7729   003A12  6E18               	movwf	turnLeft@i^0,c
  7730   003A14                     l3018:
  7731                           
  7732                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  7733   003A14  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7734   003A18  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7735   003A1C  2ADF               	incf	indf2,f,c
  7736                           
  7737                           ;dc_motor.c: 123:         mR->power++;
  7738   003A1E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7739   003A22  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7740   003A26  2ADF               	incf	indf2,f,c
  7741   003A28                     
  7742                           ;dc_motor.c: 124:         setMotorPWM(mL);
  7743   003A28  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7744   003A2C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7745   003A30  ECFA  F015         	call	_setMotorPWM	;wreg free
  7746   003A34                     
  7747                           ;dc_motor.c: 125:         setMotorPWM(mR);
  7748   003A34  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7749   003A38  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7750   003A3C  ECFA  F015         	call	_setMotorPWM	;wreg free
  7751   003A40                     
  7752                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7753   003A40  0EE4               	movlw	228
  7754   003A42                     u4267:
  7755   003A42  D000               	nop2	
  7756   003A44  D000               	nop2	
  7757   003A46  2EE8               	decfsz	wreg,f,c
  7758   003A48  D7FC               	bra	u4267
  7759   003A4A  D000               	nop2	
  7760   003A4C  D000               	nop2	
  7761   003A4E                     
  7762                           ;dc_motor.c: 127:     }
  7763   003A4E  4A18               	infsnz	turnLeft@i^0,f,c
  7764   003A50  2A19               	incf	(turnLeft@i+1)^0,f,c
  7765   003A52  5019               	movf	(turnLeft@i+1)^0,w,c
  7766   003A54  E109               	bnz	u2210
  7767   003A56  0E32               	movlw	50
  7768   003A58  5C18               	subwf	turnLeft@i^0,w,c
  7769   003A5A  A0D8               	btfss	status,0,c
  7770   003A5C  EF32  F01D         	goto	u2211
  7771   003A60  EF34  F01D         	goto	u2210
  7772   003A64                     u2211:
  7773   003A64  EF0A  F01D         	goto	l3018
  7774   003A68                     u2210:
  7775   003A68  0012               	return		;funcret
  7776   003A6A                     __end_of_turnLeft:
  7777                           	callstack 0
  7778                           
  7779 ;; *************** function _reverseHalfSquare *****************
  7780 ;; Defined at:
  7781 ;;		line 216 in file "dc_motor.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  7784 ;;		 -> motorL(9), 
  7785 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  7786 ;;		 -> motorR(9), 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;Total ram usage:        6 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 4
  7805 ;; This function calls:
  7806 ;;		_fullSpeedReverse
  7807 ;;		_stop
  7808 ;; This function is called by:
  7809 ;;		_Red_R90
  7810 ;;		_Green_L90
  7811 ;;		_Blue_T180
  7812 ;;		_Yellow_rev1_R90
  7813 ;;		_Pink_rev1_L90
  7814 ;;		_Orange_R135
  7815 ;;		_LightBlue_L135
  7816 ;;		_White
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text42
  7821   003C0E                     __ptext42:
  7822                           	callstack 0
  7823   003C0E                     _reverseHalfSquare:
  7824                           	callstack 24
  7825   003C0E                     
  7826                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  7827   003C0E  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7828   003C12  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7829   003C16  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7830   003C1A  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7831   003C1E  EC4C  F01C         	call	_stop	;wreg free
  7832   003C22                     
  7833                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7834   003C22  0E09               	movlw	9
  7835   003C24  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7836   003C26  0E1E               	movlw	30
  7837   003C28  6E1F               	movwf	??_reverseHalfSquare^0,c
  7838   003C2A  0EE4               	movlw	228
  7839   003C2C                     u4277:
  7840   003C2C  2EE8               	decfsz	wreg,f,c
  7841   003C2E  D7FE               	bra	u4277
  7842   003C30  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7843   003C32  D7FC               	bra	u4277
  7844   003C34  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7845   003C36  D7FA               	bra	u4277
  7846   003C38  D000               	nop2	
  7847   003C3A                     
  7848                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  7849   003C3A  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  7850   003C3E  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  7851   003C42  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  7852   003C46  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  7853   003C4A  EC0A  F01F         	call	_fullSpeedReverse	;wreg free
  7854                           
  7855                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  7856   003C4E  0E1D               	movlw	29
  7857   003C50  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7858   003C52  0E69               	movlw	105
  7859   003C54  6E1F               	movwf	??_reverseHalfSquare^0,c
  7860   003C56  0EA5               	movlw	165
  7861   003C58                     u4287:
  7862   003C58  2EE8               	decfsz	wreg,f,c
  7863   003C5A  D7FE               	bra	u4287
  7864   003C5C  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7865   003C5E  D7FC               	bra	u4287
  7866   003C60  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7867   003C62  D7FA               	bra	u4287
  7868   003C64  F000               	nop	
  7869   003C66                     
  7870                           ;dc_motor.c: 222:     stop(mL,mR);
  7871   003C66  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7872   003C6A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7873   003C6E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7874   003C72  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7875   003C76  EC4C  F01C         	call	_stop	;wreg free
  7876   003C7A                     
  7877                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7878   003C7A  0E09               	movlw	9
  7879   003C7C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7880   003C7E  0E1E               	movlw	30
  7881   003C80  6E1F               	movwf	??_reverseHalfSquare^0,c
  7882   003C82  0EE4               	movlw	228
  7883   003C84                     u4297:
  7884   003C84  2EE8               	decfsz	wreg,f,c
  7885   003C86  D7FE               	bra	u4297
  7886   003C88  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7887   003C8A  D7FC               	bra	u4297
  7888   003C8C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7889   003C8E  D7FA               	bra	u4297
  7890   003C90  D000               	nop2	
  7891   003C92  0012               	return		;funcret
  7892   003C94                     __end_of_reverseHalfSquare:
  7893                           	callstack 0
  7894                           
  7895 ;; *************** function _stop *****************
  7896 ;; Defined at:
  7897 ;;		line 93 in file "dc_motor.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7900 ;;		 -> motorL(9), 
  7901 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7902 ;;		 -> motorR(9), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;		None
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7918 ;;Total ram usage:        5 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 3
  7921 ;; This function calls:
  7922 ;;		_setMotorPWM
  7923 ;; This function is called by:
  7924 ;;		_main
  7925 ;;		_Left45
  7926 ;;		_Right45
  7927 ;;		_reverseHalfSquare
  7928 ;;		_Yellow_rev1_R90
  7929 ;;		_Pink_rev1_L90
  7930 ;;		_Orange_R135
  7931 ;;		_White
  7932 ;;		_maxTimeReturn
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text43
  7937   003898                     __ptext43:
  7938                           	callstack 0
  7939   003898                     _stop:
  7940                           	callstack 27
  7941   003898                     
  7942                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  7943   003898  887C               	bsf	124,4,c	;volatile
  7944                           
  7945                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7946   00389A  EF85  F01C         	goto	l3002
  7947   00389E                     l2988:
  7948                           
  7949                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  7950   00389E  C014  FFD9         	movff	stop@mL,fsr2l
  7951   0038A2  C015  FFDA         	movff	stop@mL+1,fsr2h
  7952   0038A6  50DF               	movf	indf2,w,c
  7953   0038A8  B4D8               	btfsc	status,2,c
  7954   0038AA  EF59  F01C         	goto	u2171
  7955   0038AE  EF5B  F01C         	goto	u2170
  7956   0038B2                     u2171:
  7957   0038B2  EF60  F01C         	goto	l2992
  7958   0038B6                     u2170:
  7959   0038B6                     
  7960                           ;dc_motor.c: 100:             mL->power--;
  7961   0038B6  C014  FFD9         	movff	stop@mL,fsr2l
  7962   0038BA  C015  FFDA         	movff	stop@mL+1,fsr2h
  7963   0038BE  06DF               	decf	indf2,f,c
  7964   0038C0                     l2992:
  7965                           
  7966                           ;dc_motor.c: 102:         if ((mR->power)>0){
  7967   0038C0  C016  FFD9         	movff	stop@mR,fsr2l
  7968   0038C4  C017  FFDA         	movff	stop@mR+1,fsr2h
  7969   0038C8  50DF               	movf	indf2,w,c
  7970   0038CA  B4D8               	btfsc	status,2,c
  7971   0038CC  EF6A  F01C         	goto	u2181
  7972   0038D0  EF6C  F01C         	goto	u2180
  7973   0038D4                     u2181:
  7974   0038D4  EF71  F01C         	goto	l2996
  7975   0038D8                     u2180:
  7976   0038D8                     
  7977                           ;dc_motor.c: 103:             mR->power--;
  7978   0038D8  C016  FFD9         	movff	stop@mR,fsr2l
  7979   0038DC  C017  FFDA         	movff	stop@mR+1,fsr2h
  7980   0038E0  06DF               	decf	indf2,f,c
  7981   0038E2                     l2996:
  7982                           
  7983                           ;dc_motor.c: 105:         setMotorPWM(mL);
  7984   0038E2  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7985   0038E6  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7986   0038EA  ECFA  F015         	call	_setMotorPWM	;wreg free
  7987   0038EE                     
  7988                           ;dc_motor.c: 106:         setMotorPWM(mR);
  7989   0038EE  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7990   0038F2  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7991   0038F6  ECFA  F015         	call	_setMotorPWM	;wreg free
  7992   0038FA                     
  7993                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7994   0038FA  0E09               	movlw	9
  7995   0038FC  6E18               	movwf	??_stop^0,c
  7996   0038FE  0E4E               	movlw	78
  7997   003900                     u4307:
  7998   003900  2EE8               	decfsz	wreg,f,c
  7999   003902  D7FE               	bra	u4307
  8000   003904  2E18               	decfsz	??_stop^0,f,c
  8001   003906  D7FC               	bra	u4307
  8002   003908  D000               	nop2	
  8003   00390A                     l3002:
  8004                           
  8005                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8006   00390A  C014  FFD9         	movff	stop@mL,fsr2l
  8007   00390E  C015  FFDA         	movff	stop@mL+1,fsr2h
  8008   003912  50DF               	movf	indf2,w,c
  8009   003914  B4D8               	btfsc	status,2,c
  8010   003916  EF8F  F01C         	goto	u2191
  8011   00391A  EF91  F01C         	goto	u2190
  8012   00391E                     u2191:
  8013   00391E  EF9D  F01C         	goto	l233
  8014   003922                     u2190:
  8015   003922  C016  FFD9         	movff	stop@mR,fsr2l
  8016   003926  C017  FFDA         	movff	stop@mR+1,fsr2h
  8017   00392A  50DF               	movf	indf2,w,c
  8018   00392C  A4D8               	btfss	status,2,c
  8019   00392E  EF9B  F01C         	goto	u2201
  8020   003932  EF9D  F01C         	goto	u2200
  8021   003936                     u2201:
  8022   003936  EF4F  F01C         	goto	l2988
  8023   00393A                     u2200:
  8024   00393A                     l233:
  8025                           
  8026                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8027   00393A  987C               	bcf	124,4,c	;volatile
  8028   00393C  0012               	return		;funcret
  8029   00393E                     __end_of_stop:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function _fullSpeedReverse *****************
  8033 ;; Defined at:
  8034 ;;		line 163 in file "dc_motor.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8037 ;;		 -> motorL(9), 
  8038 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8039 ;;		 -> motorR(9), 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  i               2   24[COMRAM] unsigned int 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;Total ram usage:        7 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 3
  8058 ;; This function calls:
  8059 ;;		_setMotorPWM
  8060 ;; This function is called by:
  8061 ;;		_reverseHalfSquare
  8062 ;;		_Yellow_rev1_R90
  8063 ;;		_Pink_rev1_L90
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text44
  8068   003E14                     __ptext44:
  8069                           	callstack 0
  8070   003E14                     _fullSpeedReverse:
  8071                           	callstack 24
  8072   003E14                     
  8073                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  8074   003E14  EE20 F001          	lfsr	2,1
  8075   003E18  5014               	movf	fullSpeedReverse@mL^0,w,c
  8076   003E1A  26D9               	addwf	fsr2l,f,c
  8077   003E1C  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  8078   003E1E  22DA               	addwfc	fsr2h,f,c
  8079   003E20  0E00               	movlw	0
  8080   003E22  6EDF               	movwf	indf2,c
  8081                           
  8082                           ;dc_motor.c: 166:  (mR->direction) = 0;
  8083   003E24  EE20 F001          	lfsr	2,1
  8084   003E28  5016               	movf	fullSpeedReverse@mR^0,w,c
  8085   003E2A  26D9               	addwf	fsr2l,f,c
  8086   003E2C  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  8087   003E2E  22DA               	addwfc	fsr2h,f,c
  8088   003E30  0E00               	movlw	0
  8089   003E32  6EDF               	movwf	indf2,c
  8090   003E34                     
  8091                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  8092   003E34  0E00               	movlw	0
  8093   003E36  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  8094   003E38  0E00               	movlw	0
  8095   003E3A  6E19               	movwf	fullSpeedReverse@i^0,c
  8096   003E3C                     l3118:
  8097                           
  8098                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  8099   003E3C  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  8100   003E40  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  8101   003E44  2ADF               	incf	indf2,f,c
  8102                           
  8103                           ;dc_motor.c: 171:         (mR->power)++;
  8104   003E46  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  8105   003E4A  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  8106   003E4E  2ADF               	incf	indf2,f,c
  8107   003E50                     
  8108                           ;dc_motor.c: 172:         setMotorPWM(mL);
  8109   003E50  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  8110   003E54  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  8111   003E58  ECFA  F015         	call	_setMotorPWM	;wreg free
  8112   003E5C                     
  8113                           ;dc_motor.c: 173:         setMotorPWM(mR);
  8114   003E5C  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  8115   003E60  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  8116   003E64  ECFA  F015         	call	_setMotorPWM	;wreg free
  8117   003E68                     
  8118                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8119   003E68  0E09               	movlw	9
  8120   003E6A  6E18               	movwf	??_fullSpeedReverse^0,c
  8121   003E6C  0E4E               	movlw	78
  8122   003E6E                     u4317:
  8123   003E6E  2EE8               	decfsz	wreg,f,c
  8124   003E70  D7FE               	bra	u4317
  8125   003E72  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  8126   003E74  D7FC               	bra	u4317
  8127   003E76  D000               	nop2	
  8128   003E78                     
  8129                           ;dc_motor.c: 175:     }
  8130   003E78  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  8131   003E7A  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  8132   003E7C  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  8133   003E7E  E109               	bnz	u2370
  8134   003E80  0E32               	movlw	50
  8135   003E82  5C19               	subwf	fullSpeedReverse@i^0,w,c
  8136   003E84  A0D8               	btfss	status,0,c
  8137   003E86  EF47  F01F         	goto	u2371
  8138   003E8A  EF49  F01F         	goto	u2370
  8139   003E8E                     u2371:
  8140   003E8E  EF1E  F01F         	goto	l3118
  8141   003E92                     u2370:
  8142   003E92  0012               	return		;funcret
  8143   003E94                     __end_of_fullSpeedReverse:
  8144                           	callstack 0
  8145                           
  8146 ;; *************** function _setMotorPWM *****************
  8147 ;; Defined at:
  8148 ;;		line 70 in file "dc_motor.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8151 ;;		 -> motorR(9), motorL(9), 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  negDuty         1   18[COMRAM] unsigned char 
  8154 ;;  posDuty         1   17[COMRAM] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;Total ram usage:        6 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 2
  8171 ;; This function calls:
  8172 ;;		___lwdiv
  8173 ;;		___wmul
  8174 ;; This function is called by:
  8175 ;;		_stop
  8176 ;;		_turnLeft
  8177 ;;		_turnRight
  8178 ;;		_fullSpeedAhead
  8179 ;;		_fullSpeedReverse
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text45
  8184   002BF4                     __ptext45:
  8185                           	callstack 0
  8186   002BF4                     _setMotorPWM:
  8187                           	callstack 27
  8188   002BF4                     
  8189                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8190   002BF4  EE20 F002          	lfsr	2,2
  8191   002BF8  500E               	movf	setMotorPWM@m^0,w,c
  8192   002BFA  26D9               	addwf	fsr2l,f,c
  8193   002BFC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8194   002BFE  22DA               	addwfc	fsr2h,f,c
  8195   002C00  50DF               	movf	indf2,w,c
  8196   002C02  B4D8               	btfsc	status,2,c
  8197   002C04  EF06  F016         	goto	u2091
  8198   002C08  EF08  F016         	goto	u2090
  8199   002C0C                     u2091:
  8200   002C0C  EF3C  F016         	goto	l2952
  8201   002C10                     u2090:
  8202   002C10                     
  8203                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  8204   002C10  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8205   002C14  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8206   002C18  50DF               	movf	indf2,w,c
  8207   002C1A  6E10               	movwf	??_setMotorPWM^0,c
  8208   002C1C  5010               	movf	??_setMotorPWM^0,w,c
  8209   002C1E  6E01               	movwf	___wmul@multiplier^0,c
  8210   002C20  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8211   002C22  EE20 F003          	lfsr	2,3
  8212   002C26  500E               	movf	setMotorPWM@m^0,w,c
  8213   002C28  26D9               	addwf	fsr2l,f,c
  8214   002C2A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8215   002C2C  22DA               	addwfc	fsr2h,f,c
  8216   002C2E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8217   002C32  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8218   002C36  EC04  F022         	call	___wmul	;wreg free
  8219   002C3A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8220   002C3E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8221   002C42  0E00               	movlw	0
  8222   002C44  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8223   002C46  0E64               	movlw	100
  8224   002C48  6E09               	movwf	___lwdiv@divisor^0,c
  8225   002C4A  EC4A  F01F         	call	___lwdiv	;wreg free
  8226   002C4E  EE20 F003          	lfsr	2,3
  8227   002C52  500E               	movf	setMotorPWM@m^0,w,c
  8228   002C54  26D9               	addwf	fsr2l,f,c
  8229   002C56  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8230   002C58  22DA               	addwfc	fsr2h,f,c
  8231   002C5A  50DF               	movf	indf2,w,c
  8232   002C5C  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8233   002C5E  5007               	movf	?___lwdiv^0,w,c
  8234   002C60  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8235   002C62  6E12               	movwf	setMotorPWM@posDuty^0,c
  8236   002C64                     
  8237                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  8238   002C64  EE20 F003          	lfsr	2,3
  8239   002C68  500E               	movf	setMotorPWM@m^0,w,c
  8240   002C6A  26D9               	addwf	fsr2l,f,c
  8241   002C6C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8242   002C6E  22DA               	addwfc	fsr2h,f,c
  8243   002C70  50DF               	movf	indf2,w,c
  8244   002C72  6E13               	movwf	setMotorPWM@negDuty^0,c
  8245                           
  8246                           ;dc_motor.c: 77:     }
  8247   002C74  EF5F  F016         	goto	l2956
  8248   002C78                     l2952:
  8249                           
  8250                           ;dc_motor.c: 79:         posDuty=0;
  8251   002C78  0E00               	movlw	0
  8252   002C7A  6E12               	movwf	setMotorPWM@posDuty^0,c
  8253   002C7C                     
  8254                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8255   002C7C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8256   002C80  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8257   002C84  50DF               	movf	indf2,w,c
  8258   002C86  6E10               	movwf	??_setMotorPWM^0,c
  8259   002C88  5010               	movf	??_setMotorPWM^0,w,c
  8260   002C8A  6E01               	movwf	___wmul@multiplier^0,c
  8261   002C8C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8262   002C8E  EE20 F003          	lfsr	2,3
  8263   002C92  500E               	movf	setMotorPWM@m^0,w,c
  8264   002C94  26D9               	addwf	fsr2l,f,c
  8265   002C96  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8266   002C98  22DA               	addwfc	fsr2h,f,c
  8267   002C9A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8268   002C9E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8269   002CA2  EC04  F022         	call	___wmul	;wreg free
  8270   002CA6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8271   002CAA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8272   002CAE  0E00               	movlw	0
  8273   002CB0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8274   002CB2  0E64               	movlw	100
  8275   002CB4  6E09               	movwf	___lwdiv@divisor^0,c
  8276   002CB6  EC4A  F01F         	call	___lwdiv	;wreg free
  8277   002CBA  5007               	movf	?___lwdiv^0,w,c
  8278   002CBC  6E13               	movwf	setMotorPWM@negDuty^0,c
  8279   002CBE                     l2956:
  8280                           
  8281                           ;dc_motor.c: 83:     if (m->direction) {
  8282   002CBE  EE20 F001          	lfsr	2,1
  8283   002CC2  500E               	movf	setMotorPWM@m^0,w,c
  8284   002CC4  26D9               	addwf	fsr2l,f,c
  8285   002CC6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8286   002CC8  22DA               	addwfc	fsr2h,f,c
  8287   002CCA  50DF               	movf	indf2,w,c
  8288   002CCC  B4D8               	btfsc	status,2,c
  8289   002CCE  EF6B  F016         	goto	u2101
  8290   002CD2  EF6D  F016         	goto	u2100
  8291   002CD6                     u2101:
  8292   002CD6  EF8F  F016         	goto	l2960
  8293   002CDA                     u2100:
  8294   002CDA                     
  8295                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  8296   002CDA  EE20 F005          	lfsr	2,5
  8297   002CDE  500E               	movf	setMotorPWM@m^0,w,c
  8298   002CE0  26D9               	addwf	fsr2l,f,c
  8299   002CE2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8300   002CE4  22DA               	addwfc	fsr2h,f,c
  8301   002CE6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8302   002CEA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8303   002CEE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8304   002CF2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8305   002CF6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8306                           
  8307                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  8308   002CFA  EE20 F007          	lfsr	2,7
  8309   002CFE  500E               	movf	setMotorPWM@m^0,w,c
  8310   002D00  26D9               	addwf	fsr2l,f,c
  8311   002D02  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8312   002D04  22DA               	addwfc	fsr2h,f,c
  8313   002D06  CFDE F010          	movff	postinc2,??_setMotorPWM
  8314   002D0A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8315   002D0E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8316   002D12  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8317   002D16  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8318                           
  8319                           ;dc_motor.c: 86:     } else {
  8320   002D1A  EFAF  F016         	goto	l224
  8321   002D1E                     l2960:
  8322                           
  8323                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  8324   002D1E  EE20 F005          	lfsr	2,5
  8325   002D22  500E               	movf	setMotorPWM@m^0,w,c
  8326   002D24  26D9               	addwf	fsr2l,f,c
  8327   002D26  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8328   002D28  22DA               	addwfc	fsr2h,f,c
  8329   002D2A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8330   002D2E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8331   002D32  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8332   002D36  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8333   002D3A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8334                           
  8335                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  8336   002D3E  EE20 F007          	lfsr	2,7
  8337   002D42  500E               	movf	setMotorPWM@m^0,w,c
  8338   002D44  26D9               	addwf	fsr2l,f,c
  8339   002D46  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8340   002D48  22DA               	addwfc	fsr2h,f,c
  8341   002D4A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8342   002D4E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8343   002D52  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8344   002D56  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8345   002D5A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8346   002D5E                     l224:
  8347   002D5E  0012               	return		;funcret
  8348   002D60                     __end_of_setMotorPWM:
  8349                           	callstack 0
  8350                           
  8351 ;; *************** function ___wmul *****************
  8352 ;; Defined at:
  8353 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  multiplier      2    0[COMRAM] unsigned int 
  8356 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  product         2    4[COMRAM] unsigned int 
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  2    0[COMRAM] unsigned int 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, prodl, prodh
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;Total ram usage:        6 bytes
  8373 ;; Hardware stack levels used: 1
  8374 ;; Hardware stack levels required when called: 1
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		_setMotorPWM
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text46
  8383   004408                     __ptext46:
  8384                           	callstack 0
  8385   004408                     ___wmul:
  8386                           	callstack 27
  8387   004408  5001               	movf	___wmul@multiplier^0,w,c
  8388   00440A  0203               	mulwf	___wmul@multiplicand^0,c
  8389   00440C  CFF3 F005          	movff	prodl,___wmul@product
  8390   004410  CFF4 F006          	movff	prodh,___wmul@product+1
  8391   004414  5001               	movf	___wmul@multiplier^0,w,c
  8392   004416  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8393   004418  50F3               	movf	243,w,c
  8394   00441A  2606               	addwf	(___wmul@product+1)^0,f,c
  8395   00441C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8396   00441E  0203               	mulwf	___wmul@multiplicand^0,c
  8397   004420  50F3               	movf	243,w,c
  8398   004422  2606               	addwf	(___wmul@product+1)^0,f,c
  8399   004424  C005  F001         	movff	___wmul@product,?___wmul
  8400   004428  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8401   00442C  0012               	return		;funcret
  8402   00442E                     __end_of___wmul:
  8403                           	callstack 0
  8404                           
  8405 ;; *************** function ___lwdiv *****************
  8406 ;; Defined at:
  8407 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  dividend        2    6[COMRAM] unsigned int 
  8410 ;;  divisor         2    8[COMRAM] unsigned int 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  quotient        2   10[COMRAM] unsigned int 
  8413 ;;  counter         1   12[COMRAM] unsigned char 
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  2    6[COMRAM] unsigned int 
  8416 ;; Registers used:
  8417 ;;		wreg, status,2, status,0
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8427 ;;Total ram usage:        7 bytes
  8428 ;; Hardware stack levels used: 1
  8429 ;; Hardware stack levels required when called: 1
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_setMotorPWM
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text47
  8438   003E94                     __ptext47:
  8439                           	callstack 0
  8440   003E94                     ___lwdiv:
  8441                           	callstack 27
  8442   003E94  0E00               	movlw	0
  8443   003E96  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8444   003E98  0E00               	movlw	0
  8445   003E9A  6E0B               	movwf	___lwdiv@quotient^0,c
  8446   003E9C  5009               	movf	___lwdiv@divisor^0,w,c
  8447   003E9E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8448   003EA0  B4D8               	btfsc	status,2,c
  8449   003EA2  EF55  F01F         	goto	u2061
  8450   003EA6  EF57  F01F         	goto	u2060
  8451   003EAA                     u2061:
  8452   003EAA  EF7F  F01F         	goto	l1124
  8453   003EAE                     u2060:
  8454   003EAE  0E01               	movlw	1
  8455   003EB0  6E0D               	movwf	___lwdiv@counter^0,c
  8456   003EB2  EF5F  F01F         	goto	l2932
  8457   003EB6                     l2930:
  8458   003EB6  90D8               	bcf	status,0,c
  8459   003EB8  3609               	rlcf	___lwdiv@divisor^0,f,c
  8460   003EBA  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8461   003EBC  2A0D               	incf	___lwdiv@counter^0,f,c
  8462   003EBE                     l2932:
  8463   003EBE  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8464   003EC0  EF64  F01F         	goto	u2071
  8465   003EC4  EF66  F01F         	goto	u2070
  8466   003EC8                     u2071:
  8467   003EC8  EF5B  F01F         	goto	l2930
  8468   003ECC                     u2070:
  8469   003ECC                     l2934:
  8470   003ECC  90D8               	bcf	status,0,c
  8471   003ECE  360B               	rlcf	___lwdiv@quotient^0,f,c
  8472   003ED0  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8473   003ED2  5009               	movf	___lwdiv@divisor^0,w,c
  8474   003ED4  5C07               	subwf	___lwdiv@dividend^0,w,c
  8475   003ED6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8476   003ED8  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8477   003EDA  A0D8               	btfss	status,0,c
  8478   003EDC  EF72  F01F         	goto	u2081
  8479   003EE0  EF74  F01F         	goto	u2080
  8480   003EE4                     u2081:
  8481   003EE4  EF79  F01F         	goto	l2942
  8482   003EE8                     u2080:
  8483   003EE8  5009               	movf	___lwdiv@divisor^0,w,c
  8484   003EEA  5E07               	subwf	___lwdiv@dividend^0,f,c
  8485   003EEC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8486   003EEE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8487   003EF0  800B               	bsf	___lwdiv@quotient^0,0,c
  8488   003EF2                     l2942:
  8489   003EF2  90D8               	bcf	status,0,c
  8490   003EF4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8491   003EF6  3209               	rrcf	___lwdiv@divisor^0,f,c
  8492   003EF8  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8493   003EFA  EF66  F01F         	goto	l2934
  8494   003EFE                     l1124:
  8495   003EFE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8496   003F02  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8497   003F06  0012               	return		;funcret
  8498   003F08                     __end_of___lwdiv:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _TimerReset *****************
  8502 ;; Defined at:
  8503 ;;		line 23 in file "timer.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1    wreg      void 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;Total ram usage:        0 bytes
  8522 ;; Hardware stack levels used: 1
  8523 ;; Hardware stack levels required when called: 1
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_Red_R90
  8528 ;;		_Green_L90
  8529 ;;		_Blue_T180
  8530 ;;		_Yellow_rev1_R90
  8531 ;;		_Pink_rev1_L90
  8532 ;;		_Orange_R135
  8533 ;;		_LightBlue_L135
  8534 ;;		_White
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text48
  8539   0044F0                     __ptext48:
  8540                           	callstack 0
  8541   0044F0                     _TimerReset:
  8542                           	callstack 27
  8543   0044F0                     
  8544                           ;timer.c: 25:     TMR0L = 0;
  8545   0044F0  0E00               	movlw	0
  8546   0044F2  6ED3               	movwf	211,c	;volatile
  8547                           
  8548                           ;timer.c: 26:     TMR0H = 0;
  8549   0044F4  0E00               	movlw	0
  8550   0044F6  6ED4               	movwf	212,c	;volatile
  8551   0044F8  0012               	return		;funcret
  8552   0044FA                     __end_of_TimerReset:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function _Color2String *****************
  8556 ;; Defined at:
  8557 ;;		line 39 in file "serial.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  buf             2   68[COMRAM] PTR unsigned char 
  8560 ;;		 -> main@data(100), 
  8561 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  8562 ;;		 -> colorf(22), 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  8565 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  8566 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  8567 ;;		 -> STR_2(1), 
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8581 ;;Total ram usage:        6 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 7
  8584 ;; This function calls:
  8585 ;;		_Hue2Colour
  8586 ;;		_sendStringSerial4
  8587 ;;		_sprintf
  8588 ;; This function is called by:
  8589 ;;		_main
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text49
  8594   00430C                     __ptext49:
  8595                           	callstack 0
  8596   00430C                     _Color2String:
  8597                           	callstack 23
  8598   00430C                     
  8599                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  8600   00430C  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  8601   004310  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  8602   004314  ECAA  F00A         	call	_Hue2Colour	;wreg free
  8603   004318  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  8604   00431C  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  8605   004320                     
  8606                           ;serial.c: 45:     sprintf(buf,"Colour is %s  \r",colourname);
  8607   004320  C045  F032         	movff	Color2String@buf,sprintf@s
  8608   004324  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  8609   004328  0E01               	movlw	low STR_1
  8610   00432A  6E34               	movwf	sprintf@fmt^0,c
  8611   00432C  0E0E               	movlw	high STR_1
  8612   00432E  6E35               	movwf	(sprintf@fmt+1)^0,c
  8613   004330  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  8614   004334  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  8615   004338  ECD4  F020         	call	_sprintf	;wreg free
  8616   00433C                     
  8617                           ;serial.c: 46:     sendStringSerial4(buf);
  8618   00433C  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  8619   004340  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  8620   004344  ECA5  F021         	call	_sendStringSerial4	;wreg free
  8621   004348  0012               	return		;funcret
  8622   00434A                     __end_of_Color2String:
  8623                           	callstack 0
  8624                           
  8625 ;; *************** function _sprintf *****************
  8626 ;; Defined at:
  8627 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  s               2   49[COMRAM] PTR unsigned char 
  8630 ;;		 -> main@data(100), 
  8631 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  8632 ;;		 -> STR_1(16), 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  f              11   57[COMRAM] struct _IO_FILE
  8635 ;;  ap              2   55[COMRAM] PTR void [1]
  8636 ;;		 -> ?_sprintf(2), 
  8637 ;;  ret             2    0        int 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  2   49[COMRAM] int 
  8640 ;; Registers used:
  8641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8647 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;Total ram usage:       19 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; Hardware stack levels required when called: 6
  8654 ;; This function calls:
  8655 ;;		_vfprintf
  8656 ;; This function is called by:
  8657 ;;		_Color2String
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text50
  8662   0041A8                     __ptext50:
  8663                           	callstack 0
  8664   0041A8                     _sprintf:
  8665                           	callstack 23
  8666   0041A8  0E36               	movlw	low (?_sprintf+4)
  8667   0041AA  6E38               	movwf	sprintf@ap^0,c
  8668   0041AC  0E00               	movlw	high (?_sprintf+4)
  8669   0041AE  6E39               	movwf	(sprintf@ap+1)^0,c
  8670   0041B0  C032  F03A         	movff	sprintf@s,sprintf@f
  8671   0041B4  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  8672   0041B8  0E00               	movlw	0
  8673   0041BA  6E3E               	movwf	(sprintf@f+4)^0,c
  8674   0041BC  0E00               	movlw	0
  8675   0041BE  6E3D               	movwf	(sprintf@f+3)^0,c
  8676   0041C0  0E00               	movlw	0
  8677   0041C2  6E44               	movwf	(sprintf@f+10)^0,c
  8678   0041C4  0E00               	movlw	0
  8679   0041C6  6E43               	movwf	(sprintf@f+9)^0,c
  8680   0041C8  0E3A               	movlw	low sprintf@f
  8681   0041CA  6E2A               	movwf	vfprintf@fp^0,c
  8682   0041CC  0E00               	movlw	high sprintf@f
  8683   0041CE  6E2B               	movwf	(vfprintf@fp+1)^0,c
  8684   0041D0  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  8685   0041D4  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8686   0041D8  0E38               	movlw	low sprintf@ap
  8687   0041DA  6E2E               	movwf	vfprintf@ap^0,c
  8688   0041DC  0E00               	movlw	high sprintf@ap
  8689   0041DE  6E2F               	movwf	(vfprintf@ap+1)^0,c
  8690   0041E0  ECFB  F020         	call	_vfprintf	;wreg free
  8691   0041E4  503D               	movf	(sprintf@f+3)^0,w,c
  8692   0041E6  2432               	addwf	sprintf@s^0,w,c
  8693   0041E8  6ED9               	movwf	fsr2l,c
  8694   0041EA  503E               	movf	(sprintf@f+4)^0,w,c
  8695   0041EC  2033               	addwfc	(sprintf@s+1)^0,w,c
  8696   0041EE  6EDA               	movwf	fsr2h,c
  8697   0041F0  0E00               	movlw	0
  8698   0041F2  6EDF               	movwf	indf2,c
  8699   0041F4  0012               	return		;funcret
  8700   0041F6                     __end_of_sprintf:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function _vfprintf *****************
  8704 ;; Defined at:
  8705 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  8708 ;;		 -> sprintf@f(11), 
  8709 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  8710 ;;		 -> STR_1(16), 
  8711 ;;  ap              2   45[COMRAM] PTR PTR void 
  8712 ;;		 -> sprintf@ap(2), 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  8715 ;;		 -> STR_1(16), 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  2   41[COMRAM] int 
  8718 ;; Registers used:
  8719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;Total ram usage:        8 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 5
  8732 ;; This function calls:
  8733 ;;		_vfpfcnvrt
  8734 ;; This function is called by:
  8735 ;;		_sprintf
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text51
  8740   0041F6                     __ptext51:
  8741                           	callstack 0
  8742   0041F6                     _vfprintf:
  8743                           	callstack 23
  8744   0041F6                     
  8745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  8746   0041F6  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  8747   0041FA  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8748                           
  8749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8750   0041FE  EF0F  F021         	goto	l3488
  8751   004202                     l3486:
  8752                           
  8753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8754   004202  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  8755   004206  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8756   00420A  0E30               	movlw	low vfprintf@cfmt
  8757   00420C  6E22               	movwf	vfpfcnvrt@fmt^0,c
  8758   00420E  0E00               	movlw	high vfprintf@cfmt
  8759   004210  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8760   004212  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  8761   004216  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8762   00421A  ECB0  F016         	call	_vfpfcnvrt	;wreg free
  8763   00421E                     l3488:
  8764                           
  8765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8766   00421E  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  8767   004222  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8768   004226                     	if	0	;tblptru may be non-zero
  8769   004226                     	endif
  8770   004226                     	if	0	;tblptru may be non-zero
  8771   004226                     	endif
  8772   004226  0008               	tblrd		*
  8773   004228  50F5               	movf	tablat,w,c
  8774   00422A  0900               	iorlw	0
  8775   00422C  A4D8               	btfss	status,2,c
  8776   00422E  EF1B  F021         	goto	u2901
  8777   004232  EF1D  F021         	goto	u2900
  8778   004236                     u2901:
  8779   004236  EF01  F021         	goto	l3486
  8780   00423A                     u2900:
  8781   00423A                     
  8782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  8783   00423A  0E00               	movlw	0
  8784   00423C  6E2B               	movwf	(?_vfprintf+1)^0,c
  8785   00423E  0E00               	movlw	0
  8786   004240  6E2A               	movwf	?_vfprintf^0,c
  8787   004242  0012               	return		;funcret
  8788   004244                     __end_of_vfprintf:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function _vfpfcnvrt *****************
  8792 ;; Defined at:
  8793 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8796 ;;		 -> sprintf@f(11), 
  8797 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  8798 ;;		 -> vfprintf@cfmt(2), 
  8799 ;;  ap              2   35[COMRAM] PTR PTR void 
  8800 ;;		 -> sprintf@ap(2), 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  convarg         8    0        struct .
  8803 ;;  cp              3    0        PTR unsigned char 
  8804 ;;  i               2    0        int 
  8805 ;;  done            2    0        int 
  8806 ;;  c               1    0        unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8816 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;Total ram usage:       10 bytes
  8821 ;; Hardware stack levels used: 1
  8822 ;; Hardware stack levels required when called: 4
  8823 ;; This function calls:
  8824 ;;		_fputc
  8825 ;;		_stoa
  8826 ;;		_strncmp
  8827 ;; This function is called by:
  8828 ;;		_vfprintf
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text52
  8833   002D60                     __ptext52:
  8834                           	callstack 0
  8835   002D60                     _vfpfcnvrt:
  8836                           	callstack 23
  8837   002D60                     
  8838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  8839   002D60  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8840   002D64  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8841   002D68  CFDE FFF6          	movff	postinc2,tblptrl
  8842   002D6C  CFDD FFF7          	movff	postdec2,tblptrh
  8843   002D70                     	if	0	;tblptru may be non-zero
  8844   002D70                     	endif
  8845   002D70                     	if	0	;tblptru may be non-zero
  8846   002D70                     	endif
  8847   002D70  0008               	tblrd		*
  8848   002D72  50F5               	movf	tablat,w,c
  8849   002D74  0A25               	xorlw	37
  8850   002D76  A4D8               	btfss	status,2,c
  8851   002D78  EFC0  F016         	goto	u2381
  8852   002D7C  EFC2  F016         	goto	u2380
  8853   002D80                     u2381:
  8854   002D80  EF48  F017         	goto	l3172
  8855   002D84                     u2380:
  8856   002D84                     
  8857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  8858   002D84  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8859   002D88  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8860   002D8C  2ADE               	incf	postinc2,f,c
  8861   002D8E  0E00               	movlw	0
  8862   002D90  22DD               	addwfc	postdec2,f,c
  8863   002D92                     
  8864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  8865   002D92  0E00               	movlw	0
  8866   002D94  0100               	movlb	0	; () banked
  8867   002D96  6FDB               	movwf	(_width+1)& (0+255),b
  8868   002D98  0E00               	movlw	0
  8869   002D9A  6FDA               	movwf	_width& (0+255),b
  8870   002D9C  C0DA  F0E0         	movff	_width,_flags
  8871   002DA0                     
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  8874   002DA0  69DC               	setf	_prec& (0+255),b
  8875   002DA2  69DD               	setf	(_prec+1)& (0+255),b
  8876   002DA4                     
  8877                           ; BSR set to: 0
  8878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  8879   002DA4  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8880   002DA8  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8881   002DAC  CFDE FFF6          	movff	postinc2,tblptrl
  8882   002DB0  CFDD FFF7          	movff	postdec2,tblptrh
  8883   002DB4                     	if	0	;tblptru may be non-zero
  8884   002DB4                     	endif
  8885   002DB4                     	if	0	;tblptru may be non-zero
  8886   002DB4                     	endif
  8887   002DB4  0008               	tblrd		*
  8888   002DB6  50F5               	movf	tablat,w,c
  8889   002DB8  0A73               	xorlw	115
  8890   002DBA  B4D8               	btfsc	status,2,c
  8891   002DBC  EFE2  F016         	goto	u2391
  8892   002DC0  EFE4  F016         	goto	u2390
  8893   002DC4                     u2391:
  8894   002DC4  EFFF  F016         	goto	l3156
  8895   002DC8                     u2390:
  8896   002DC8                     
  8897                           ; BSR set to: 0
  8898   002DC8  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8899   002DCC  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8900   002DD0  CFDE F001          	movff	postinc2,strncmp@_l
  8901   002DD4  CFDD F002          	movff	postdec2,strncmp@_l+1
  8902   002DD8  0E48               	movlw	low STR_11
  8903   002DDA  6E03               	movwf	strncmp@_r^0,c
  8904   002DDC  0E0E               	movlw	high STR_11
  8905   002DDE  6E04               	movwf	(strncmp@_r+1)^0,c
  8906   002DE0  0E00               	movlw	0
  8907   002DE2  6E06               	movwf	(strncmp@n+1)^0,c
  8908   002DE4  0E03               	movlw	3
  8909   002DE6  6E05               	movwf	strncmp@n^0,c
  8910   002DE8  EC71  F01A         	call	_strncmp	;wreg free
  8911   002DEC  5001               	movf	?_strncmp^0,w,c
  8912   002DEE  1002               	iorwf	(?_strncmp+1)^0,w,c
  8913   002DF0  A4D8               	btfss	status,2,c
  8914   002DF2  EFFD  F016         	goto	u2401
  8915   002DF6  EFFF  F016         	goto	u2400
  8916   002DFA                     u2401:
  8917   002DFA  EF3F  F017         	goto	l3168
  8918   002DFE                     u2400:
  8919   002DFE                     l3156:
  8920                           
  8921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  8922   002DFE  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8923   002E02  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8924   002E06  CFDE FFF6          	movff	postinc2,tblptrl
  8925   002E0A  CFDD FFF7          	movff	postdec2,tblptrh
  8926   002E0E                     	if	0	;tblptru may be non-zero
  8927   002E0E                     	endif
  8928   002E0E                     	if	0	;tblptru may be non-zero
  8929   002E0E                     	endif
  8930   002E0E  0008               	tblrd		*
  8931   002E10  50F5               	movf	tablat,w,c
  8932   002E12  0A73               	xorlw	115
  8933   002E14  B4D8               	btfsc	status,2,c
  8934   002E16  EF0F  F017         	goto	u2411
  8935   002E1A  EF11  F017         	goto	u2410
  8936   002E1E                     u2411:
  8937   002E1E  EF17  F017         	goto	l3160
  8938   002E22                     u2410:
  8939   002E22  0E00               	movlw	0
  8940   002E24  6E29               	movwf	(_vfpfcnvrt$2827+1)^0,c
  8941   002E26  0E03               	movlw	3
  8942   002E28  6E28               	movwf	_vfpfcnvrt$2827^0,c
  8943   002E2A  EF1B  F017         	goto	l3162
  8944   002E2E                     l3160:
  8945   002E2E  0E00               	movlw	0
  8946   002E30  6E29               	movwf	(_vfpfcnvrt$2827+1)^0,c
  8947   002E32  0E01               	movlw	1
  8948   002E34  6E28               	movwf	_vfpfcnvrt$2827^0,c
  8949   002E36                     l3162:
  8950   002E36  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8951   002E3A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8952   002E3E  5028               	movf	_vfpfcnvrt$2827^0,w,c
  8953   002E40  26DE               	addwf	postinc2,f,c
  8954   002E42  5029               	movf	(_vfpfcnvrt$2827+1)^0,w,c
  8955   002E44  22DD               	addwfc	postdec2,f,c
  8956   002E46                     
  8957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  8958   002E46  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8959   002E4A  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8960   002E4E  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8961   002E52  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8962   002E56  CFDF F026          	movff	indf2,??_vfpfcnvrt
  8963   002E5A  0E02               	movlw	2
  8964   002E5C  26DE               	addwf	postinc2,f,c
  8965   002E5E  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  8966   002E62  0E00               	movlw	0
  8967   002E64  22DD               	addwfc	postdec2,f,c
  8968   002E66  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8969   002E6A  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8970   002E6E  CFDE F00C          	movff	postinc2,stoa@s
  8971   002E72  CFDD F00D          	movff	postdec2,stoa@s+1
  8972   002E76  EC5D  F017         	call	_stoa	;wreg free
  8973   002E7A  EF5C  F017         	goto	l1368
  8974   002E7E                     l3168:
  8975                           
  8976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  8977   002E7E  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8978   002E82  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8979   002E86  2ADE               	incf	postinc2,f,c
  8980   002E88  0E00               	movlw	0
  8981   002E8A  22DD               	addwfc	postdec2,f,c
  8982   002E8C  EF5C  F017         	goto	l1368
  8983   002E90                     l3172:
  8984                           
  8985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  8986   002E90  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8987   002E94  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8988   002E98  CFDE FFF6          	movff	postinc2,tblptrl
  8989   002E9C  CFDD FFF7          	movff	postdec2,tblptrh
  8990   002EA0                     	if	0	;tblptru may be non-zero
  8991   002EA0                     	endif
  8992   002EA0                     	if	0	;tblptru may be non-zero
  8993   002EA0                     	endif
  8994   002EA0  0008               	tblrd		*
  8995   002EA2  50F5               	movf	tablat,w,c
  8996   002EA4  6E01               	movwf	fputc@c^0,c
  8997   002EA6  6A02               	clrf	(fputc@c+1)^0,c
  8998   002EA8  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8999   002EAC  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9000   002EB0  ECE0  F01A         	call	_fputc	;wreg free
  9001   002EB4  EF3F  F017         	goto	l3168
  9002   002EB8                     l1368:
  9003   002EB8  0012               	return		;funcret
  9004   002EBA                     __end_of_vfpfcnvrt:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _strncmp *****************
  9008 ;; Defined at:
  9009 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9012 ;;		 -> STR_1(16), 
  9013 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9014 ;;		 -> STR_13(4), 
  9015 ;;  n               2    4[COMRAM] unsigned int 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9018 ;;		 -> STR_13(4), 
  9019 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9020 ;;		 -> STR_1(16), 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  2    0[COMRAM] int 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;Total ram usage:       11 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 1
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_vfpfcnvrt
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text53
  9045   0034E2                     __ptext53:
  9046                           	callstack 0
  9047   0034E2                     _strncmp:
  9048                           	callstack 25
  9049   0034E2  C001  F008         	movff	strncmp@_l,strncmp@l
  9050   0034E6  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9051   0034EA  C003  F00A         	movff	strncmp@_r,strncmp@r
  9052   0034EE  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9053   0034F2  0605               	decf	strncmp@n^0,f,c
  9054   0034F4  A0D8               	btfss	status,0,c
  9055   0034F6  0606               	decf	(strncmp@n+1)^0,f,c
  9056   0034F8  2805               	incf	strncmp@n^0,w,c
  9057   0034FA  E106               	bnz	u2291
  9058   0034FC  2806               	incf	(strncmp@n+1)^0,w,c
  9059   0034FE  A4D8               	btfss	status,2,c
  9060   003500  EF84  F01A         	goto	u2291
  9061   003504  EF86  F01A         	goto	u2290
  9062   003508                     u2291:
  9063   003508  EF93  F01A         	goto	l3070
  9064   00350C                     u2290:
  9065   00350C  0E00               	movlw	0
  9066   00350E  6E02               	movwf	(?_strncmp+1)^0,c
  9067   003510  0E00               	movlw	0
  9068   003512  6E01               	movwf	?_strncmp^0,c
  9069   003514  EFDF  F01A         	goto	l1407
  9070   003518                     l3068:
  9071   003518  4A08               	infsnz	strncmp@l^0,f,c
  9072   00351A  2A09               	incf	(strncmp@l+1)^0,f,c
  9073   00351C  4A0A               	infsnz	strncmp@r^0,f,c
  9074   00351E  2A0B               	incf	(strncmp@r+1)^0,f,c
  9075   003520  0605               	decf	strncmp@n^0,f,c
  9076   003522  A0D8               	btfss	status,0,c
  9077   003524  0606               	decf	(strncmp@n+1)^0,f,c
  9078   003526                     l3070:
  9079   003526  C008  FFF6         	movff	strncmp@l,tblptrl
  9080   00352A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9081   00352E                     	if	0	;tblptru may be non-zero
  9082   00352E                     	endif
  9083   00352E                     	if	0	;tblptru may be non-zero
  9084   00352E                     	endif
  9085   00352E  0008               	tblrd		*
  9086   003530  50F5               	movf	tablat,w,c
  9087   003532  0900               	iorlw	0
  9088   003534  B4D8               	btfsc	status,2,c
  9089   003536  EF9F  F01A         	goto	u2301
  9090   00353A  EFA1  F01A         	goto	u2300
  9091   00353E                     u2301:
  9092   00353E  EFCD  F01A         	goto	l3078
  9093   003542                     u2300:
  9094   003542  C00A  FFF6         	movff	strncmp@r,tblptrl
  9095   003546  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9096   00354A                     	if	0	;tblptru may be non-zero
  9097   00354A                     	endif
  9098   00354A                     	if	0	;tblptru may be non-zero
  9099   00354A                     	endif
  9100   00354A  0008               	tblrd		*
  9101   00354C  50F5               	movf	tablat,w,c
  9102   00354E  0900               	iorlw	0
  9103   003550  B4D8               	btfsc	status,2,c
  9104   003552  EFAD  F01A         	goto	u2311
  9105   003556  EFAF  F01A         	goto	u2310
  9106   00355A                     u2311:
  9107   00355A  EFCD  F01A         	goto	l3078
  9108   00355E                     u2310:
  9109   00355E  5005               	movf	strncmp@n^0,w,c
  9110   003560  1006               	iorwf	(strncmp@n+1)^0,w,c
  9111   003562  B4D8               	btfsc	status,2,c
  9112   003564  EFB6  F01A         	goto	u2321
  9113   003568  EFB8  F01A         	goto	u2320
  9114   00356C                     u2321:
  9115   00356C  EFCD  F01A         	goto	l3078
  9116   003570                     u2320:
  9117   003570  C008  FFF6         	movff	strncmp@l,tblptrl
  9118   003574  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9119   003578                     	if	0	;tblptru may be non-zero
  9120   003578                     	endif
  9121   003578                     	if	0	;tblptru may be non-zero
  9122   003578                     	endif
  9123   003578  0008               	tblrd		*
  9124   00357A  CFF5 F007          	movff	tablat,??_strncmp
  9125   00357E  C00A  FFF6         	movff	strncmp@r,tblptrl
  9126   003582  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9127   003586                     	if	0	;tblptru may be non-zero
  9128   003586                     	endif
  9129   003586                     	if	0	;tblptru may be non-zero
  9130   003586                     	endif
  9131   003586  0008               	tblrd		*
  9132   003588  50F5               	movf	tablat,w,c
  9133   00358A  1807               	xorwf	??_strncmp^0,w,c
  9134   00358C  B4D8               	btfsc	status,2,c
  9135   00358E  EFCB  F01A         	goto	u2331
  9136   003592  EFCD  F01A         	goto	u2330
  9137   003596                     u2331:
  9138   003596  EF8C  F01A         	goto	l3068
  9139   00359A                     u2330:
  9140   00359A                     l3078:
  9141   00359A  C008  FFF6         	movff	strncmp@l,tblptrl
  9142   00359E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9143   0035A2                     	if	0	;tblptru may be non-zero
  9144   0035A2                     	endif
  9145   0035A2                     	if	0	;tblptru may be non-zero
  9146   0035A2                     	endif
  9147   0035A2  0008               	tblrd		*
  9148   0035A4  CFF5 F007          	movff	tablat,??_strncmp
  9149   0035A8  C00A  FFF6         	movff	strncmp@r,tblptrl
  9150   0035AC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9151   0035B0                     	if	0	;tblptru may be non-zero
  9152   0035B0                     	endif
  9153   0035B0                     	if	0	;tblptru may be non-zero
  9154   0035B0                     	endif
  9155   0035B0  0008               	tblrd		*
  9156   0035B2  50F5               	movf	tablat,w,c
  9157   0035B4  5C07               	subwf	??_strncmp^0,w,c
  9158   0035B6  6E01               	movwf	?_strncmp^0,c
  9159   0035B8  6A02               	clrf	(?_strncmp+1)^0,c
  9160   0035BA  A0D8               	btfss	status,0,c
  9161   0035BC  0602               	decf	(?_strncmp+1)^0,f,c
  9162   0035BE                     l1407:
  9163   0035BE  0012               	return		;funcret
  9164   0035C0                     __end_of_strncmp:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _stoa *****************
  9168 ;; Defined at:
  9169 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9172 ;;		 -> sprintf@f(11), 
  9173 ;;  s               2   11[COMRAM] PTR unsigned char 
  9174 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
  9175 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
  9176 ;;		 -> STR_3(4), STR_2(1), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9179 ;;  p               2   29[COMRAM] int 
  9180 ;;  l               2   27[COMRAM] int 
  9181 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9182 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9183 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9184 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9185 ;;  i               2   23[COMRAM] int 
  9186 ;;  w               2   21[COMRAM] int 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:       22 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 3
  9203 ;; This function calls:
  9204 ;;		_fputc
  9205 ;;		_strlen
  9206 ;; This function is called by:
  9207 ;;		_vfpfcnvrt
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	text54
  9212   002EBA                     __ptext54:
  9213                           	callstack 0
  9214   002EBA                     _stoa:
  9215                           	callstack 23
  9216   002EBA                     
  9217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9218   002EBA  EE21  F086         	lfsr	2,stoa@F1144
  9219   002EBE  EE10  F00F         	lfsr	1,stoa@nuls
  9220   002EC2  0E06               	movlw	6
  9221   002EC4                     u2221:
  9222   002EC4  CFDB FFE3          	movff	plusw2,plusw1
  9223   002EC8  06E8               	decf	wreg,f,c
  9224   002ECA  E2FC               	bc	u2221
  9225   002ECC                     
  9226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9227   002ECC  C00C  F01A         	movff	stoa@s,stoa@cp
  9228   002ED0  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9229   002ED4                     
  9230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9231   002ED4  501A               	movf	stoa@cp^0,w,c
  9232   002ED6  101B               	iorwf	(stoa@cp+1)^0,w,c
  9233   002ED8  A4D8               	btfss	status,2,c
  9234   002EDA  EF71  F017         	goto	u2231
  9235   002EDE  EF73  F017         	goto	u2230
  9236   002EE2                     u2231:
  9237   002EE2  EF77  F017         	goto	l3038
  9238   002EE6                     u2230:
  9239   002EE6                     
  9240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9241   002EE6  0E0F               	movlw	low stoa@nuls
  9242   002EE8  6E1A               	movwf	stoa@cp^0,c
  9243   002EEA  0E00               	movlw	high stoa@nuls
  9244   002EEC  6E1B               	movwf	(stoa@cp+1)^0,c
  9245   002EEE                     l3038:
  9246                           
  9247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9248   002EEE  C01A  F001         	movff	stoa@cp,strlen@s
  9249   002EF2  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9250   002EF6  ECAC  F020         	call	_strlen	;wreg free
  9251   002EFA  C001  F01C         	movff	?_strlen,stoa@l
  9252   002EFE  C002  F01D         	movff	?_strlen+1,stoa@l+1
  9253   002F02                     
  9254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  9255   002F02  C0DC  F01E         	movff	_prec,stoa@p
  9256   002F06  C0DD  F01F         	movff	_prec+1,stoa@p+1
  9257   002F0A                     
  9258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  9259   002F0A  BE1F               	btfsc	(stoa@p+1)^0,7,c
  9260   002F0C  EF8A  F017         	goto	u2241
  9261   002F10  EF8C  F017         	goto	u2240
  9262   002F14                     u2241:
  9263   002F14  EFA1  F017         	goto	l1348
  9264   002F18                     u2240:
  9265   002F18  501C               	movf	stoa@l^0,w,c
  9266   002F1A  5C1E               	subwf	stoa@p^0,w,c
  9267   002F1C  501F               	movf	(stoa@p+1)^0,w,c
  9268   002F1E  0A80               	xorlw	128
  9269   002F20  6E0E               	movwf	??_stoa^0,c
  9270   002F22  501D               	movf	(stoa@l+1)^0,w,c
  9271   002F24  0A80               	xorlw	128
  9272   002F26  580E               	subwfb	??_stoa^0,w,c
  9273   002F28  A0D8               	btfss	status,0,c
  9274   002F2A  EF99  F017         	goto	u2251
  9275   002F2E  EF9B  F017         	goto	u2250
  9276   002F32                     u2251:
  9277   002F32  EF9D  F017         	goto	l1346
  9278   002F36                     u2250:
  9279   002F36  EFA1  F017         	goto	l1348
  9280   002F3A                     l1346:
  9281   002F3A  C01E  F01C         	movff	stoa@p,stoa@l
  9282   002F3E  C01F  F01D         	movff	stoa@p+1,stoa@l+1
  9283   002F42                     l1348:
  9284                           
  9285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  9286   002F42  C01C  F01E         	movff	stoa@l,stoa@p
  9287   002F46  C01D  F01F         	movff	stoa@l+1,stoa@p+1
  9288                           
  9289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  9290   002F4A  C0DA  F016         	movff	_width,stoa@w
  9291   002F4E  C0DB  F017         	movff	_width+1,stoa@w+1
  9292                           
  9293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9294   002F52  EFB7  F017         	goto	l3050
  9295   002F56                     l3046:
  9296                           
  9297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  9298   002F56  0E00               	movlw	0
  9299   002F58  6E02               	movwf	(fputc@c+1)^0,c
  9300   002F5A  0E20               	movlw	32
  9301   002F5C  6E01               	movwf	fputc@c^0,c
  9302   002F5E  C00A  F003         	movff	stoa@fp,fputc@fp
  9303   002F62  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9304   002F66  ECE0  F01A         	call	_fputc	;wreg free
  9305   002F6A                     
  9306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  9307   002F6A  4A1C               	infsnz	stoa@l^0,f,c
  9308   002F6C  2A1D               	incf	(stoa@l+1)^0,f,c
  9309   002F6E                     l3050:
  9310                           
  9311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9312   002F6E  5016               	movf	stoa@w^0,w,c
  9313   002F70  5C1C               	subwf	stoa@l^0,w,c
  9314   002F72  501D               	movf	(stoa@l+1)^0,w,c
  9315   002F74  0A80               	xorlw	128
  9316   002F76  6E0E               	movwf	??_stoa^0,c
  9317   002F78  5017               	movf	(stoa@w+1)^0,w,c
  9318   002F7A  0A80               	xorlw	128
  9319   002F7C  580E               	subwfb	??_stoa^0,w,c
  9320   002F7E  A0D8               	btfss	status,0,c
  9321   002F80  EFC4  F017         	goto	u2261
  9322   002F84  EFC6  F017         	goto	u2260
  9323   002F88                     u2261:
  9324   002F88  EFAB  F017         	goto	l3046
  9325   002F8C                     u2260:
  9326   002F8C                     
  9327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  9328   002F8C  0E00               	movlw	0
  9329   002F8E  6E19               	movwf	(stoa@i+1)^0,c
  9330   002F90  0E00               	movlw	0
  9331   002F92  6E18               	movwf	stoa@i^0,c
  9332                           
  9333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9334   002F94  EFEB  F017         	goto	l3060
  9335   002F98                     l3054:
  9336                           
  9337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  9338   002F98  C01A  FFF6         	movff	stoa@cp,tblptrl
  9339   002F9C  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9340   002FA0  0E00               	movlw	low (__smallconst shr (0+16))
  9341   002FA2  6EF8               	movwf	tblptru,c
  9342   002FA4  0E0D               	movlw	(high __ramtop+-1)
  9343   002FA6  64F7               	cpfsgt	tblptrh,c
  9344   002FA8  D003               	bra	u2277
  9345   002FAA  0008               	tblrd		*
  9346   002FAC  50F5               	movf	tablat,w,c
  9347   002FAE  D005               	bra	u2270
  9348   002FB0                     u2277:
  9349   002FB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  9350   002FB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  9351   002FB8  50EF               	movf	indf0,w,c
  9352   002FBA                     u2270:
  9353   002FBA  6E0E               	movwf	??_stoa^0,c
  9354   002FBC  500E               	movf	??_stoa^0,w,c
  9355   002FBE  6E01               	movwf	fputc@c^0,c
  9356   002FC0  6A02               	clrf	(fputc@c+1)^0,c
  9357   002FC2  C00A  F003         	movff	stoa@fp,fputc@fp
  9358   002FC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9359   002FCA  ECE0  F01A         	call	_fputc	;wreg free
  9360   002FCE                     
  9361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  9362   002FCE  4A1A               	infsnz	stoa@cp^0,f,c
  9363   002FD0  2A1B               	incf	(stoa@cp+1)^0,f,c
  9364   002FD2                     
  9365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  9366   002FD2  4A18               	infsnz	stoa@i^0,f,c
  9367   002FD4  2A19               	incf	(stoa@i+1)^0,f,c
  9368   002FD6                     l3060:
  9369                           
  9370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9371   002FD6  501E               	movf	stoa@p^0,w,c
  9372   002FD8  5C18               	subwf	stoa@i^0,w,c
  9373   002FDA  5019               	movf	(stoa@i+1)^0,w,c
  9374   002FDC  0A80               	xorlw	128
  9375   002FDE  6E0E               	movwf	??_stoa^0,c
  9376   002FE0  501F               	movf	(stoa@p+1)^0,w,c
  9377   002FE2  0A80               	xorlw	128
  9378   002FE4  580E               	subwfb	??_stoa^0,w,c
  9379   002FE6  A0D8               	btfss	status,0,c
  9380   002FE8  EFF8  F017         	goto	u2281
  9381   002FEC  EFFA  F017         	goto	u2280
  9382   002FF0                     u2281:
  9383   002FF0  EFCC  F017         	goto	l3054
  9384   002FF4                     u2280:
  9385   002FF4  0012               	return		;funcret
  9386   002FF6                     __end_of_stoa:
  9387                           	callstack 0
  9388                           
  9389 ;; *************** function _strlen *****************
  9390 ;; Defined at:
  9391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9394 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9395 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9396 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9399 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9400 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9401 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2    0[COMRAM] unsigned int 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9415 ;;Total ram usage:        4 bytes
  9416 ;; Hardware stack levels used: 1
  9417 ;; Hardware stack levels required when called: 1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_stoa
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text55
  9426   004158                     __ptext55:
  9427                           	callstack 0
  9428   004158                     _strlen:
  9429                           	callstack 24
  9430   004158  C001  F003         	movff	strlen@s,strlen@a
  9431   00415C  C002  F004         	movff	strlen@s+1,strlen@a+1
  9432   004160  EFB4  F020         	goto	l2980
  9433   004164                     l2978:
  9434   004164  4A01               	infsnz	strlen@s^0,f,c
  9435   004166  2A02               	incf	(strlen@s+1)^0,f,c
  9436   004168                     l2980:
  9437   004168  C001  FFF6         	movff	strlen@s,tblptrl
  9438   00416C  C002  FFF7         	movff	strlen@s+1,tblptrh
  9439   004170  0E00               	movlw	low (__smallconst shr (0+16))
  9440   004172  6EF8               	movwf	tblptru,c
  9441   004174  0E0D               	movlw	(high __ramtop+-1)
  9442   004176  64F7               	cpfsgt	tblptrh,c
  9443   004178  D003               	bra	u2157
  9444   00417A  0008               	tblrd		*
  9445   00417C  50F5               	movf	tablat,w,c
  9446   00417E  D005               	bra	u2150
  9447   004180                     u2157:
  9448   004180  CFF6 FFE9          	movff	tblptrl,fsr0l
  9449   004184  CFF7 FFEA          	movff	tblptrh,fsr0h
  9450   004188  50EF               	movf	indf0,w,c
  9451   00418A                     u2150:
  9452   00418A  0900               	iorlw	0
  9453   00418C  A4D8               	btfss	status,2,c
  9454   00418E  EFCB  F020         	goto	u2161
  9455   004192  EFCD  F020         	goto	u2160
  9456   004196                     u2161:
  9457   004196  EFB2  F020         	goto	l2978
  9458   00419A                     u2160:
  9459   00419A  5003               	movf	strlen@a^0,w,c
  9460   00419C  5C01               	subwf	strlen@s^0,w,c
  9461   00419E  6E01               	movwf	?_strlen^0,c
  9462   0041A0  5004               	movf	(strlen@a+1)^0,w,c
  9463   0041A2  5802               	subwfb	(strlen@s+1)^0,w,c
  9464   0041A4  6E02               	movwf	(?_strlen+1)^0,c
  9465   0041A6  0012               	return		;funcret
  9466   0041A8                     __end_of_strlen:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function _fputc *****************
  9470 ;; Defined at:
  9471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  c               2    0[COMRAM] int 
  9474 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9475 ;;		 -> sprintf@f(11), 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2    0[COMRAM] int 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9489 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9491 ;;Total ram usage:        9 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; Hardware stack levels required when called: 2
  9494 ;; This function calls:
  9495 ;;		_putch
  9496 ;; This function is called by:
  9497 ;;		_stoa
  9498 ;;		_vfpfcnvrt
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text56
  9503   0035C0                     __ptext56:
  9504                           	callstack 0
  9505   0035C0                     _fputc:
  9506                           	callstack 23
  9507   0035C0  5003               	movf	fputc@fp^0,w,c
  9508   0035C2  1004               	iorwf	(fputc@fp+1)^0,w,c
  9509   0035C4  B4D8               	btfsc	status,2,c
  9510   0035C6  EFE7  F01A         	goto	u2111
  9511   0035CA  EFE9  F01A         	goto	u2110
  9512   0035CE                     u2111:
  9513   0035CE  EFF2  F01A         	goto	l2966
  9514   0035D2                     u2110:
  9515   0035D2  5003               	movf	fputc@fp^0,w,c
  9516   0035D4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9517   0035D6  A4D8               	btfss	status,2,c
  9518   0035D8  EFF0  F01A         	goto	u2121
  9519   0035DC  EFF2  F01A         	goto	u2120
  9520   0035E0                     u2121:
  9521   0035E0  EFF7  F01A         	goto	l2968
  9522   0035E4                     u2120:
  9523   0035E4                     l2966:
  9524   0035E4  5001               	movf	fputc@c^0,w,c
  9525   0035E6  EC85  F022         	call	_putch
  9526   0035EA  EF44  F01B         	goto	l1386
  9527   0035EE                     l2968:
  9528   0035EE  EE20 F009          	lfsr	2,9
  9529   0035F2  5003               	movf	fputc@fp^0,w,c
  9530   0035F4  26D9               	addwf	fsr2l,f,c
  9531   0035F6  5004               	movf	(fputc@fp+1)^0,w,c
  9532   0035F8  22DA               	addwfc	fsr2h,f,c
  9533   0035FA  50DE               	movf	postinc2,w,c
  9534   0035FC  10DE               	iorwf	postinc2,w,c
  9535   0035FE  B4D8               	btfsc	status,2,c
  9536   003600  EF04  F01B         	goto	u2131
  9537   003604  EF06  F01B         	goto	u2130
  9538   003608                     u2131:
  9539   003608  EF21  F01B         	goto	l2972
  9540   00360C                     u2130:
  9541   00360C  EE20 F009          	lfsr	2,9
  9542   003610  5003               	movf	fputc@fp^0,w,c
  9543   003612  26D9               	addwf	fsr2l,f,c
  9544   003614  5004               	movf	(fputc@fp+1)^0,w,c
  9545   003616  22DA               	addwfc	fsr2h,f,c
  9546   003618  EE10 F003          	lfsr	1,3
  9547   00361C  5003               	movf	fputc@fp^0,w,c
  9548   00361E  26E1               	addwf	fsr1l,f,c
  9549   003620  5004               	movf	(fputc@fp+1)^0,w,c
  9550   003622  22E2               	addwfc	fsr1h,f,c
  9551   003624  50DE               	movf	postinc2,w,c
  9552   003626  5CE6               	subwf	postinc1,w,c
  9553   003628  50E6               	movf	postinc1,w,c
  9554   00362A  0A80               	xorlw	128
  9555   00362C  6E09               	movwf	(??_fputc+4)^0,c
  9556   00362E  50DE               	movf	postinc2,w,c
  9557   003630  0A80               	xorlw	128
  9558   003632  5809               	subwfb	(??_fputc+4)^0,w,c
  9559   003634  B0D8               	btfsc	status,0,c
  9560   003636  EF1F  F01B         	goto	u2141
  9561   00363A  EF21  F01B         	goto	u2140
  9562   00363E                     u2141:
  9563   00363E  EF44  F01B         	goto	l1386
  9564   003642                     u2140:
  9565   003642                     l2972:
  9566   003642  EE20 F003          	lfsr	2,3
  9567   003646  5003               	movf	fputc@fp^0,w,c
  9568   003648  26D9               	addwf	fsr2l,f,c
  9569   00364A  5004               	movf	(fputc@fp+1)^0,w,c
  9570   00364C  22DA               	addwfc	fsr2h,f,c
  9571   00364E  CFDE F005          	movff	postinc2,??_fputc
  9572   003652  CFDD F006          	movff	postdec2,??_fputc+1
  9573   003656  C003  FFD9         	movff	fputc@fp,fsr2l
  9574   00365A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9575   00365E  CFDE F007          	movff	postinc2,??_fputc+2
  9576   003662  CFDD F008          	movff	postdec2,??_fputc+3
  9577   003666  5005               	movf	??_fputc^0,w,c
  9578   003668  2407               	addwf	(??_fputc+2)^0,w,c
  9579   00366A  6ED9               	movwf	fsr2l,c
  9580   00366C  5006               	movf	(??_fputc+1)^0,w,c
  9581   00366E  2008               	addwfc	(??_fputc+3)^0,w,c
  9582   003670  6EDA               	movwf	fsr2h,c
  9583   003672  C001  FFDF         	movff	fputc@c,indf2
  9584   003676  EE20 F003          	lfsr	2,3
  9585   00367A  5003               	movf	fputc@fp^0,w,c
  9586   00367C  26D9               	addwf	fsr2l,f,c
  9587   00367E  5004               	movf	(fputc@fp+1)^0,w,c
  9588   003680  22DA               	addwfc	fsr2h,f,c
  9589   003682  2ADE               	incf	postinc2,f,c
  9590   003684  0E00               	movlw	0
  9591   003686  22DD               	addwfc	postdec2,f,c
  9592   003688                     l1386:
  9593   003688  0012               	return		;funcret
  9594   00368A                     __end_of_fputc:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _putch *****************
  9598 ;; Defined at:
  9599 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  c               1    wreg     unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  c               1    0[COMRAM] unsigned char 
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_fputc
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text57
  9628   00450A                     __ptext57:
  9629                           	callstack 0
  9630   00450A                     _putch:
  9631                           	callstack 23
  9632   00450A  0012               	return		;funcret
  9633   00450C                     __end_of_putch:
  9634                           	callstack 0
  9635                           
  9636 ;; *************** function _sendStringSerial4 *****************
  9637 ;; Defined at:
  9638 ;;		line 49 in file "serial.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  string          2    1[COMRAM] PTR unsigned char 
  9641 ;;		 -> main@data(100), 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9657 ;;Total ram usage:        2 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 2
  9660 ;; This function calls:
  9661 ;;		_sendCharSerial4
  9662 ;; This function is called by:
  9663 ;;		_Color2String
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text58
  9668   00434A                     __ptext58:
  9669                           	callstack 0
  9670   00434A                     _sendStringSerial4:
  9671                           	callstack 27
  9672   00434A                     
  9673                           ;serial.c: 52:     while(*string != 0){
  9674   00434A  EFB4  F021         	goto	l3674
  9675   00434E                     l3668:
  9676                           
  9677                           ;serial.c: 54:   sendCharSerial4(*string++);
  9678   00434E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9679   004352  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9680   004356  50DF               	movf	indf2,w,c
  9681   004358  EC4A  F022         	call	_sendCharSerial4
  9682   00435C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9683   00435E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9684   004360                     
  9685                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  9686   004360  0E6A               	movlw	106
  9687   004362                     u4327:
  9688   004362  2EE8               	decfsz	wreg,f,c
  9689   004364  D7FE               	bra	u4327
  9690   004366  D000               	nop2	
  9691   004368                     l3674:
  9692                           
  9693                           ;serial.c: 52:     while(*string != 0){
  9694   004368  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9695   00436C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9696   004370  50DF               	movf	indf2,w,c
  9697   004372  A4D8               	btfss	status,2,c
  9698   004374  EFBE  F021         	goto	u3141
  9699   004378  EFC0  F021         	goto	u3140
  9700   00437C                     u3141:
  9701   00437C  EFA7  F021         	goto	l3668
  9702   004380                     u3140:
  9703   004380  0012               	return		;funcret
  9704   004382                     __end_of_sendStringSerial4:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _sendCharSerial4 *****************
  9708 ;; Defined at:
  9709 ;;		line 34 in file "serial.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  charToSend      1    wreg     unsigned char 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  charToSend      1    0[COMRAM] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9727 ;;Total ram usage:        1 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; Hardware stack levels required when called: 1
  9730 ;; This function calls:
  9731 ;;		Nothing
  9732 ;; This function is called by:
  9733 ;;		_sendStringSerial4
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           	psect	text59
  9738   004494                     __ptext59:
  9739                           	callstack 0
  9740   004494                     _sendCharSerial4:
  9741                           	callstack 27
  9742                           
  9743                           ;incstack = 0
  9744                           ;sendCharSerial4@charToSend stored from wreg
  9745   004494  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9746   004496                     l366:
  9747   004496  010E               	movlb	14	; () banked
  9748   004498  A537               	btfss	55,2,b	;volatile
  9749   00449A  EF51  F022         	goto	u2451
  9750   00449E  EF53  F022         	goto	u2450
  9751   0044A2                     u2451:
  9752   0044A2  EF4B  F022         	goto	l366
  9753   0044A6                     u2450:
  9754   0044A6                     
  9755                           ; BSR set to: 14
  9756                           ;serial.c: 36:     TX4REG = charToSend;
  9757   0044A6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9758   0044AA                     
  9759                           ; BSR set to: 14
  9760   0044AA  0012               	return		;funcret
  9761   0044AC                     __end_of_sendCharSerial4:
  9762                           	callstack 0
  9763                           
  9764 ;; *************** function _Hue2Colour *****************
  9765 ;; Defined at:
  9766 ;;		line 56 in file "colorfunctions.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
  9769 ;;		 -> colorf(22), 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  colourname      2   14[COMRAM] PTR unsigned char 
  9772 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9773 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9774 ;;		 -> STR_2(1), 
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  2   12[COMRAM] PTR unsigned char 
  9777 ;; Registers used:
  9778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;Total ram usage:        4 bytes
  9789 ;; Hardware stack levels used: 1
  9790 ;; Hardware stack levels required when called: 2
  9791 ;; This function calls:
  9792 ;;		___flge
  9793 ;; This function is called by:
  9794 ;;		_main
  9795 ;;		_Color2String
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text60
  9800   001554                     __ptext60:
  9801                           	callstack 0
  9802   001554                     _Hue2Colour:
  9803                           	callstack 28
  9804   001554                     
  9805                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
  9806   001554  0E10               	movlw	low (STR_1+15)
  9807   001556  6E0F               	movwf	Hue2Colour@colourname^0,c
  9808   001558  0E0E               	movlw	high (STR_1+15)
  9809   00155A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9810   00155C                     
  9811                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
  9812   00155C  0E00               	movlw	0
  9813   00155E  6E01               	movwf	___flge@ff1^0,c
  9814   001560  0E00               	movlw	0
  9815   001562  6E02               	movwf	(___flge@ff1+1)^0,c
  9816   001564  0EB0               	movlw	176
  9817   001566  6E03               	movwf	(___flge@ff1+2)^0,c
  9818   001568  0E43               	movlw	67
  9819   00156A  6E04               	movwf	(___flge@ff1+3)^0,c
  9820   00156C  EE20 F010          	lfsr	2,16
  9821   001570  500D               	movf	Hue2Colour@cf^0,w,c
  9822   001572  26D9               	addwf	fsr2l,f,c
  9823   001574  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9824   001576  22DA               	addwfc	fsr2h,f,c
  9825   001578  CFDE F005          	movff	postinc2,___flge@ff2
  9826   00157C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9827   001580  CFDE F007          	movff	postinc2,___flge@ff2+2
  9828   001584  CFDE F008          	movff	postinc2,___flge@ff2+3
  9829   001588  EC01  F019         	call	___flge	;wreg free
  9830   00158C  B0D8               	btfsc	status,0,c
  9831   00158E  EFCB  F00A         	goto	u2911
  9832   001592  EFCD  F00A         	goto	u2910
  9833   001596                     u2911:
  9834   001596  EFFA  F00A         	goto	l3516
  9835   00159A                     u2910:
  9836   00159A  EE20 F010          	lfsr	2,16
  9837   00159E  500D               	movf	Hue2Colour@cf^0,w,c
  9838   0015A0  26D9               	addwf	fsr2l,f,c
  9839   0015A2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9840   0015A4  22DA               	addwfc	fsr2h,f,c
  9841   0015A6  CFDE F001          	movff	postinc2,___flge@ff1
  9842   0015AA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9843   0015AE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9844   0015B2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9845   0015B6  0E00               	movlw	0
  9846   0015B8  6E05               	movwf	___flge@ff2^0,c
  9847   0015BA  0E00               	movlw	0
  9848   0015BC  6E06               	movwf	(___flge@ff2+1)^0,c
  9849   0015BE  0EB4               	movlw	180
  9850   0015C0  6E07               	movwf	(___flge@ff2+2)^0,c
  9851   0015C2  0E43               	movlw	67
  9852   0015C4  6E08               	movwf	(___flge@ff2+3)^0,c
  9853   0015C6  EC01  F019         	call	___flge	;wreg free
  9854   0015CA  B0D8               	btfsc	status,0,c
  9855   0015CC  EFEA  F00A         	goto	u2921
  9856   0015D0  EFEC  F00A         	goto	u2920
  9857   0015D4                     u2921:
  9858   0015D4  EFFA  F00A         	goto	l3516
  9859   0015D8                     u2920:
  9860   0015D8                     
  9861                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
  9862   0015D8  0E4C               	movlw	low STR_3
  9863   0015DA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9864   0015DC  0E0E               	movlw	high STR_3
  9865   0015DE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9866   0015E0                     
  9867                           ;colorfunctions.c: 65:         cf->colourindex=0;
  9868   0015E0  EE20 F014          	lfsr	2,20
  9869   0015E4  500D               	movf	Hue2Colour@cf^0,w,c
  9870   0015E6  26D9               	addwf	fsr2l,f,c
  9871   0015E8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9872   0015EA  22DA               	addwfc	fsr2h,f,c
  9873   0015EC  0E00               	movlw	0
  9874   0015EE  6EDE               	movwf	postinc2,c
  9875   0015F0  0E00               	movlw	0
  9876   0015F2  6EDD               	movwf	postdec2,c
  9877   0015F4                     l3516:
  9878                           
  9879                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
  9880   0015F4  0E00               	movlw	0
  9881   0015F6  6E01               	movwf	___flge@ff1^0,c
  9882   0015F8  0E00               	movlw	0
  9883   0015FA  6E02               	movwf	(___flge@ff1+1)^0,c
  9884   0015FC  0E96               	movlw	150
  9885   0015FE  6E03               	movwf	(___flge@ff1+2)^0,c
  9886   001600  0E42               	movlw	66
  9887   001602  6E04               	movwf	(___flge@ff1+3)^0,c
  9888   001604  EE20 F010          	lfsr	2,16
  9889   001608  500D               	movf	Hue2Colour@cf^0,w,c
  9890   00160A  26D9               	addwf	fsr2l,f,c
  9891   00160C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9892   00160E  22DA               	addwfc	fsr2h,f,c
  9893   001610  CFDE F005          	movff	postinc2,___flge@ff2
  9894   001614  CFDE F006          	movff	postinc2,___flge@ff2+1
  9895   001618  CFDE F007          	movff	postinc2,___flge@ff2+2
  9896   00161C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9897   001620  EC01  F019         	call	___flge	;wreg free
  9898   001624  B0D8               	btfsc	status,0,c
  9899   001626  EF17  F00B         	goto	u2931
  9900   00162A  EF19  F00B         	goto	u2930
  9901   00162E                     u2931:
  9902   00162E  EF48  F00B         	goto	l3524
  9903   001632                     u2930:
  9904   001632  EE20 F010          	lfsr	2,16
  9905   001636  500D               	movf	Hue2Colour@cf^0,w,c
  9906   001638  26D9               	addwf	fsr2l,f,c
  9907   00163A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9908   00163C  22DA               	addwfc	fsr2h,f,c
  9909   00163E  CFDE F001          	movff	postinc2,___flge@ff1
  9910   001642  CFDE F002          	movff	postinc2,___flge@ff1+1
  9911   001646  CFDE F003          	movff	postinc2,___flge@ff1+2
  9912   00164A  CFDE F004          	movff	postinc2,___flge@ff1+3
  9913   00164E  0E00               	movlw	0
  9914   001650  6E05               	movwf	___flge@ff2^0,c
  9915   001652  0E00               	movlw	0
  9916   001654  6E06               	movwf	(___flge@ff2+1)^0,c
  9917   001656  0E9E               	movlw	158
  9918   001658  6E07               	movwf	(___flge@ff2+2)^0,c
  9919   00165A  0E42               	movlw	66
  9920   00165C  6E08               	movwf	(___flge@ff2+3)^0,c
  9921   00165E  EC01  F019         	call	___flge	;wreg free
  9922   001662  B0D8               	btfsc	status,0,c
  9923   001664  EF36  F00B         	goto	u2941
  9924   001668  EF38  F00B         	goto	u2940
  9925   00166C                     u2941:
  9926   00166C  EF48  F00B         	goto	l3524
  9927   001670                     u2940:
  9928   001670                     
  9929                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
  9930   001670  0E3D               	movlw	low STR_4
  9931   001672  6E0F               	movwf	Hue2Colour@colourname^0,c
  9932   001674  0E0E               	movlw	high STR_4
  9933   001676  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9934   001678                     
  9935                           ;colorfunctions.c: 70:         cf->colourindex=1;
  9936   001678  EE20 F014          	lfsr	2,20
  9937   00167C  500D               	movf	Hue2Colour@cf^0,w,c
  9938   00167E  26D9               	addwf	fsr2l,f,c
  9939   001680  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9940   001682  22DA               	addwfc	fsr2h,f,c
  9941   001684  0E01               	movlw	1
  9942   001686  6EDE               	movwf	postinc2,c
  9943   001688  0E00               	movlw	0
  9944   00168A  6EDD               	movwf	postdec2,c
  9945                           
  9946                           ;colorfunctions.c: 71:     }
  9947   00168C  EF1C  F00D         	goto	l3572
  9948   001690                     l3524:
  9949   001690  0E00               	movlw	0
  9950   001692  6E01               	movwf	___flge@ff1^0,c
  9951   001694  0E00               	movlw	0
  9952   001696  6E02               	movwf	(___flge@ff1+1)^0,c
  9953   001698  0E11               	movlw	17
  9954   00169A  6E03               	movwf	(___flge@ff1+2)^0,c
  9955   00169C  0E43               	movlw	67
  9956   00169E  6E04               	movwf	(___flge@ff1+3)^0,c
  9957   0016A0  EE20 F010          	lfsr	2,16
  9958   0016A4  500D               	movf	Hue2Colour@cf^0,w,c
  9959   0016A6  26D9               	addwf	fsr2l,f,c
  9960   0016A8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9961   0016AA  22DA               	addwfc	fsr2h,f,c
  9962   0016AC  CFDE F005          	movff	postinc2,___flge@ff2
  9963   0016B0  CFDE F006          	movff	postinc2,___flge@ff2+1
  9964   0016B4  CFDE F007          	movff	postinc2,___flge@ff2+2
  9965   0016B8  CFDE F008          	movff	postinc2,___flge@ff2+3
  9966   0016BC  EC01  F019         	call	___flge	;wreg free
  9967   0016C0  B0D8               	btfsc	status,0,c
  9968   0016C2  EF65  F00B         	goto	u2951
  9969   0016C6  EF67  F00B         	goto	u2950
  9970   0016CA                     u2951:
  9971   0016CA  EF96  F00B         	goto	l3532
  9972   0016CE                     u2950:
  9973   0016CE  EE20 F010          	lfsr	2,16
  9974   0016D2  500D               	movf	Hue2Colour@cf^0,w,c
  9975   0016D4  26D9               	addwf	fsr2l,f,c
  9976   0016D6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9977   0016D8  22DA               	addwfc	fsr2h,f,c
  9978   0016DA  CFDE F001          	movff	postinc2,___flge@ff1
  9979   0016DE  CFDE F002          	movff	postinc2,___flge@ff1+1
  9980   0016E2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9981   0016E6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9982   0016EA  0E00               	movlw	0
  9983   0016EC  6E05               	movwf	___flge@ff2^0,c
  9984   0016EE  0E00               	movlw	0
  9985   0016F0  6E06               	movwf	(___flge@ff2+1)^0,c
  9986   0016F2  0E24               	movlw	36
  9987   0016F4  6E07               	movwf	(___flge@ff2+2)^0,c
  9988   0016F6  0E43               	movlw	67
  9989   0016F8  6E08               	movwf	(___flge@ff2+3)^0,c
  9990   0016FA  EC01  F019         	call	___flge	;wreg free
  9991   0016FE  B0D8               	btfsc	status,0,c
  9992   001700  EF84  F00B         	goto	u2961
  9993   001704  EF86  F00B         	goto	u2960
  9994   001708                     u2961:
  9995   001708  EF96  F00B         	goto	l3532
  9996   00170C                     u2960:
  9997   00170C                     
  9998                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
  9999   00170C  0E1C               	movlw	low STR_5
 10000   00170E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10001   001710  0E0E               	movlw	high STR_5
 10002   001712  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10003   001714                     
 10004                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10005   001714  EE20 F014          	lfsr	2,20
 10006   001718  500D               	movf	Hue2Colour@cf^0,w,c
 10007   00171A  26D9               	addwf	fsr2l,f,c
 10008   00171C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10009   00171E  22DA               	addwfc	fsr2h,f,c
 10010   001720  0E02               	movlw	2
 10011   001722  6EDE               	movwf	postinc2,c
 10012   001724  0E00               	movlw	0
 10013   001726  6EDD               	movwf	postdec2,c
 10014                           
 10015                           ;colorfunctions.c: 76:     }
 10016   001728  EF1C  F00D         	goto	l3572
 10017   00172C                     l3532:
 10018   00172C  0E00               	movlw	0
 10019   00172E  6E01               	movwf	___flge@ff1^0,c
 10020   001730  0E00               	movlw	0
 10021   001732  6E02               	movwf	(___flge@ff1+1)^0,c
 10022   001734  0EA8               	movlw	168
 10023   001736  6E03               	movwf	(___flge@ff1+2)^0,c
 10024   001738  0E41               	movlw	65
 10025   00173A  6E04               	movwf	(___flge@ff1+3)^0,c
 10026   00173C  EE20 F010          	lfsr	2,16
 10027   001740  500D               	movf	Hue2Colour@cf^0,w,c
 10028   001742  26D9               	addwf	fsr2l,f,c
 10029   001744  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10030   001746  22DA               	addwfc	fsr2h,f,c
 10031   001748  CFDE F005          	movff	postinc2,___flge@ff2
 10032   00174C  CFDE F006          	movff	postinc2,___flge@ff2+1
 10033   001750  CFDE F007          	movff	postinc2,___flge@ff2+2
 10034   001754  CFDE F008          	movff	postinc2,___flge@ff2+3
 10035   001758  EC01  F019         	call	___flge	;wreg free
 10036   00175C  B0D8               	btfsc	status,0,c
 10037   00175E  EFB3  F00B         	goto	u2971
 10038   001762  EFB5  F00B         	goto	u2970
 10039   001766                     u2971:
 10040   001766  EFE4  F00B         	goto	l3540
 10041   00176A                     u2970:
 10042   00176A  EE20 F010          	lfsr	2,16
 10043   00176E  500D               	movf	Hue2Colour@cf^0,w,c
 10044   001770  26D9               	addwf	fsr2l,f,c
 10045   001772  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10046   001774  22DA               	addwfc	fsr2h,f,c
 10047   001776  CFDE F001          	movff	postinc2,___flge@ff1
 10048   00177A  CFDE F002          	movff	postinc2,___flge@ff1+1
 10049   00177E  CFDE F003          	movff	postinc2,___flge@ff1+2
 10050   001782  CFDE F004          	movff	postinc2,___flge@ff1+3
 10051   001786  0E00               	movlw	0
 10052   001788  6E05               	movwf	___flge@ff2^0,c
 10053   00178A  0E00               	movlw	0
 10054   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
 10055   00178E  0EC8               	movlw	200
 10056   001790  6E07               	movwf	(___flge@ff2+2)^0,c
 10057   001792  0E41               	movlw	65
 10058   001794  6E08               	movwf	(___flge@ff2+3)^0,c
 10059   001796  EC01  F019         	call	___flge	;wreg free
 10060   00179A  B0D8               	btfsc	status,0,c
 10061   00179C  EFD2  F00B         	goto	u2981
 10062   0017A0  EFD4  F00B         	goto	u2980
 10063   0017A4                     u2981:
 10064   0017A4  EFE4  F00B         	goto	l3540
 10065   0017A8                     u2980:
 10066   0017A8                     
 10067                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10068   0017A8  0E36               	movlw	low STR_6
 10069   0017AA  6E0F               	movwf	Hue2Colour@colourname^0,c
 10070   0017AC  0E0E               	movlw	high STR_6
 10071   0017AE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10072   0017B0                     
 10073                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10074   0017B0  EE20 F014          	lfsr	2,20
 10075   0017B4  500D               	movf	Hue2Colour@cf^0,w,c
 10076   0017B6  26D9               	addwf	fsr2l,f,c
 10077   0017B8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10078   0017BA  22DA               	addwfc	fsr2h,f,c
 10079   0017BC  0E03               	movlw	3
 10080   0017BE  6EDE               	movwf	postinc2,c
 10081   0017C0  0E00               	movlw	0
 10082   0017C2  6EDD               	movwf	postdec2,c
 10083                           
 10084                           ;colorfunctions.c: 81:     }
 10085   0017C4  EF1C  F00D         	goto	l3572
 10086   0017C8                     l3540:
 10087   0017C8  0E00               	movlw	0
 10088   0017CA  6E01               	movwf	___flge@ff1^0,c
 10089   0017CC  0E00               	movlw	0
 10090   0017CE  6E02               	movwf	(___flge@ff1+1)^0,c
 10091   0017D0  0E70               	movlw	112
 10092   0017D2  6E03               	movwf	(___flge@ff1+2)^0,c
 10093   0017D4  0E41               	movlw	65
 10094   0017D6  6E04               	movwf	(___flge@ff1+3)^0,c
 10095   0017D8  EE20 F010          	lfsr	2,16
 10096   0017DC  500D               	movf	Hue2Colour@cf^0,w,c
 10097   0017DE  26D9               	addwf	fsr2l,f,c
 10098   0017E0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10099   0017E2  22DA               	addwfc	fsr2h,f,c
 10100   0017E4  CFDE F005          	movff	postinc2,___flge@ff2
 10101   0017E8  CFDE F006          	movff	postinc2,___flge@ff2+1
 10102   0017EC  CFDE F007          	movff	postinc2,___flge@ff2+2
 10103   0017F0  CFDE F008          	movff	postinc2,___flge@ff2+3
 10104   0017F4  EC01  F019         	call	___flge	;wreg free
 10105   0017F8  B0D8               	btfsc	status,0,c
 10106   0017FA  EF01  F00C         	goto	u2991
 10107   0017FE  EF03  F00C         	goto	u2990
 10108   001802                     u2991:
 10109   001802  EF32  F00C         	goto	l3548
 10110   001806                     u2990:
 10111   001806  EE20 F010          	lfsr	2,16
 10112   00180A  500D               	movf	Hue2Colour@cf^0,w,c
 10113   00180C  26D9               	addwf	fsr2l,f,c
 10114   00180E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10115   001810  22DA               	addwfc	fsr2h,f,c
 10116   001812  CFDE F001          	movff	postinc2,___flge@ff1
 10117   001816  CFDE F002          	movff	postinc2,___flge@ff1+1
 10118   00181A  CFDE F003          	movff	postinc2,___flge@ff1+2
 10119   00181E  CFDE F004          	movff	postinc2,___flge@ff1+3
 10120   001822  0E00               	movlw	0
 10121   001824  6E05               	movwf	___flge@ff2^0,c
 10122   001826  0E00               	movlw	0
 10123   001828  6E06               	movwf	(___flge@ff2+1)^0,c
 10124   00182A  0E98               	movlw	152
 10125   00182C  6E07               	movwf	(___flge@ff2+2)^0,c
 10126   00182E  0E41               	movlw	65
 10127   001830  6E08               	movwf	(___flge@ff2+3)^0,c
 10128   001832  EC01  F019         	call	___flge	;wreg free
 10129   001836  B0D8               	btfsc	status,0,c
 10130   001838  EF20  F00C         	goto	u3001
 10131   00183C  EF22  F00C         	goto	u3000
 10132   001840                     u3001:
 10133   001840  EF32  F00C         	goto	l3548
 10134   001844                     u3000:
 10135   001844                     
 10136                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 10137   001844  0E43               	movlw	low STR_7
 10138   001846  6E0F               	movwf	Hue2Colour@colourname^0,c
 10139   001848  0E0E               	movlw	high STR_7
 10140   00184A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10141   00184C                     
 10142                           ;colorfunctions.c: 85:         cf->colourindex=4;
 10143   00184C  EE20 F014          	lfsr	2,20
 10144   001850  500D               	movf	Hue2Colour@cf^0,w,c
 10145   001852  26D9               	addwf	fsr2l,f,c
 10146   001854  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10147   001856  22DA               	addwfc	fsr2h,f,c
 10148   001858  0E04               	movlw	4
 10149   00185A  6EDE               	movwf	postinc2,c
 10150   00185C  0E00               	movlw	0
 10151   00185E  6EDD               	movwf	postdec2,c
 10152                           
 10153                           ;colorfunctions.c: 86:     }
 10154   001860  EF1C  F00D         	goto	l3572
 10155   001864                     l3548:
 10156   001864  0E00               	movlw	0
 10157   001866  6E01               	movwf	___flge@ff1^0,c
 10158   001868  0E00               	movlw	0
 10159   00186A  6E02               	movwf	(___flge@ff1+1)^0,c
 10160   00186C  0EE0               	movlw	224
 10161   00186E  6E03               	movwf	(___flge@ff1+2)^0,c
 10162   001870  0E40               	movlw	64
 10163   001872  6E04               	movwf	(___flge@ff1+3)^0,c
 10164   001874  EE20 F010          	lfsr	2,16
 10165   001878  500D               	movf	Hue2Colour@cf^0,w,c
 10166   00187A  26D9               	addwf	fsr2l,f,c
 10167   00187C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10168   00187E  22DA               	addwfc	fsr2h,f,c
 10169   001880  CFDE F005          	movff	postinc2,___flge@ff2
 10170   001884  CFDE F006          	movff	postinc2,___flge@ff2+1
 10171   001888  CFDE F007          	movff	postinc2,___flge@ff2+2
 10172   00188C  CFDE F008          	movff	postinc2,___flge@ff2+3
 10173   001890  EC01  F019         	call	___flge	;wreg free
 10174   001894  B0D8               	btfsc	status,0,c
 10175   001896  EF4F  F00C         	goto	u3011
 10176   00189A  EF51  F00C         	goto	u3010
 10177   00189E                     u3011:
 10178   00189E  EF80  F00C         	goto	l3556
 10179   0018A2                     u3010:
 10180   0018A2  EE20 F010          	lfsr	2,16
 10181   0018A6  500D               	movf	Hue2Colour@cf^0,w,c
 10182   0018A8  26D9               	addwf	fsr2l,f,c
 10183   0018AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10184   0018AC  22DA               	addwfc	fsr2h,f,c
 10185   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
 10186   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
 10187   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
 10188   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
 10189   0018BE  0E00               	movlw	0
 10190   0018C0  6E05               	movwf	___flge@ff2^0,c
 10191   0018C2  0E00               	movlw	0
 10192   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
 10193   0018C6  0E10               	movlw	16
 10194   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
 10195   0018CA  0E41               	movlw	65
 10196   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
 10197   0018CE  EC01  F019         	call	___flge	;wreg free
 10198   0018D2  B0D8               	btfsc	status,0,c
 10199   0018D4  EF6E  F00C         	goto	u3021
 10200   0018D8  EF70  F00C         	goto	u3020
 10201   0018DC                     u3021:
 10202   0018DC  EF80  F00C         	goto	l3556
 10203   0018E0                     u3020:
 10204   0018E0                     
 10205                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10206   0018E0  0E2F               	movlw	low STR_8
 10207   0018E2  6E0F               	movwf	Hue2Colour@colourname^0,c
 10208   0018E4  0E0E               	movlw	high STR_8
 10209   0018E6  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10210   0018E8                     
 10211                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10212   0018E8  EE20 F014          	lfsr	2,20
 10213   0018EC  500D               	movf	Hue2Colour@cf^0,w,c
 10214   0018EE  26D9               	addwf	fsr2l,f,c
 10215   0018F0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10216   0018F2  22DA               	addwfc	fsr2h,f,c
 10217   0018F4  0E05               	movlw	5
 10218   0018F6  6EDE               	movwf	postinc2,c
 10219   0018F8  0E00               	movlw	0
 10220   0018FA  6EDD               	movwf	postdec2,c
 10221                           
 10222                           ;colorfunctions.c: 91:     }
 10223   0018FC  EF1C  F00D         	goto	l3572
 10224   001900                     l3556:
 10225   001900  0E00               	movlw	0
 10226   001902  6E01               	movwf	___flge@ff1^0,c
 10227   001904  0E00               	movlw	0
 10228   001906  6E02               	movwf	(___flge@ff1+1)^0,c
 10229   001908  0EAA               	movlw	170
 10230   00190A  6E03               	movwf	(___flge@ff1+2)^0,c
 10231   00190C  0E42               	movlw	66
 10232   00190E  6E04               	movwf	(___flge@ff1+3)^0,c
 10233   001910  EE20 F010          	lfsr	2,16
 10234   001914  500D               	movf	Hue2Colour@cf^0,w,c
 10235   001916  26D9               	addwf	fsr2l,f,c
 10236   001918  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10237   00191A  22DA               	addwfc	fsr2h,f,c
 10238   00191C  CFDE F005          	movff	postinc2,___flge@ff2
 10239   001920  CFDE F006          	movff	postinc2,___flge@ff2+1
 10240   001924  CFDE F007          	movff	postinc2,___flge@ff2+2
 10241   001928  CFDE F008          	movff	postinc2,___flge@ff2+3
 10242   00192C  EC01  F019         	call	___flge	;wreg free
 10243   001930  B0D8               	btfsc	status,0,c
 10244   001932  EF9D  F00C         	goto	u3031
 10245   001936  EF9F  F00C         	goto	u3030
 10246   00193A                     u3031:
 10247   00193A  EFCE  F00C         	goto	l3564
 10248   00193E                     u3030:
 10249   00193E  EE20 F010          	lfsr	2,16
 10250   001942  500D               	movf	Hue2Colour@cf^0,w,c
 10251   001944  26D9               	addwf	fsr2l,f,c
 10252   001946  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10253   001948  22DA               	addwfc	fsr2h,f,c
 10254   00194A  CFDE F001          	movff	postinc2,___flge@ff1
 10255   00194E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10256   001952  CFDE F003          	movff	postinc2,___flge@ff1+2
 10257   001956  CFDE F004          	movff	postinc2,___flge@ff1+3
 10258   00195A  0E00               	movlw	0
 10259   00195C  6E05               	movwf	___flge@ff2^0,c
 10260   00195E  0E00               	movlw	0
 10261   001960  6E06               	movwf	(___flge@ff2+1)^0,c
 10262   001962  0EBC               	movlw	188
 10263   001964  6E07               	movwf	(___flge@ff2+2)^0,c
 10264   001966  0E42               	movlw	66
 10265   001968  6E08               	movwf	(___flge@ff2+3)^0,c
 10266   00196A  EC01  F019         	call	___flge	;wreg free
 10267   00196E  B0D8               	btfsc	status,0,c
 10268   001970  EFBC  F00C         	goto	u3041
 10269   001974  EFBE  F00C         	goto	u3040
 10270   001978                     u3041:
 10271   001978  EFCE  F00C         	goto	l3564
 10272   00197C                     u3040:
 10273   00197C                     
 10274                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 10275   00197C  0E11               	movlw	low STR_9
 10276   00197E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10277   001980  0E0E               	movlw	high STR_9
 10278   001982  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10279   001984                     
 10280                           ;colorfunctions.c: 95:         cf->colourindex=6;
 10281   001984  EE20 F014          	lfsr	2,20
 10282   001988  500D               	movf	Hue2Colour@cf^0,w,c
 10283   00198A  26D9               	addwf	fsr2l,f,c
 10284   00198C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10285   00198E  22DA               	addwfc	fsr2h,f,c
 10286   001990  0E06               	movlw	6
 10287   001992  6EDE               	movwf	postinc2,c
 10288   001994  0E00               	movlw	0
 10289   001996  6EDD               	movwf	postdec2,c
 10290                           
 10291                           ;colorfunctions.c: 96:     }
 10292   001998  EF1C  F00D         	goto	l3572
 10293   00199C                     l3564:
 10294   00199C  0E00               	movlw	0
 10295   00199E  6E01               	movwf	___flge@ff1^0,c
 10296   0019A0  0E00               	movlw	0
 10297   0019A2  6E02               	movwf	(___flge@ff1+1)^0,c
 10298   0019A4  0ED0               	movlw	208
 10299   0019A6  6E03               	movwf	(___flge@ff1+2)^0,c
 10300   0019A8  0E41               	movlw	65
 10301   0019AA  6E04               	movwf	(___flge@ff1+3)^0,c
 10302   0019AC  EE20 F010          	lfsr	2,16
 10303   0019B0  500D               	movf	Hue2Colour@cf^0,w,c
 10304   0019B2  26D9               	addwf	fsr2l,f,c
 10305   0019B4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10306   0019B6  22DA               	addwfc	fsr2h,f,c
 10307   0019B8  CFDE F005          	movff	postinc2,___flge@ff2
 10308   0019BC  CFDE F006          	movff	postinc2,___flge@ff2+1
 10309   0019C0  CFDE F007          	movff	postinc2,___flge@ff2+2
 10310   0019C4  CFDE F008          	movff	postinc2,___flge@ff2+3
 10311   0019C8  EC01  F019         	call	___flge	;wreg free
 10312   0019CC  B0D8               	btfsc	status,0,c
 10313   0019CE  EFEB  F00C         	goto	u3051
 10314   0019D2  EFED  F00C         	goto	u3050
 10315   0019D6                     u3051:
 10316   0019D6  EF1C  F00D         	goto	l568
 10317   0019DA                     u3050:
 10318   0019DA  EE20 F010          	lfsr	2,16
 10319   0019DE  500D               	movf	Hue2Colour@cf^0,w,c
 10320   0019E0  26D9               	addwf	fsr2l,f,c
 10321   0019E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10322   0019E4  22DA               	addwfc	fsr2h,f,c
 10323   0019E6  CFDE F001          	movff	postinc2,___flge@ff1
 10324   0019EA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10325   0019EE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10326   0019F2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10327   0019F6  0E00               	movlw	0
 10328   0019F8  6E05               	movwf	___flge@ff2^0,c
 10329   0019FA  0E00               	movlw	0
 10330   0019FC  6E06               	movwf	(___flge@ff2+1)^0,c
 10331   0019FE  0EE8               	movlw	232
 10332   001A00  6E07               	movwf	(___flge@ff2+2)^0,c
 10333   001A02  0E41               	movlw	65
 10334   001A04  6E08               	movwf	(___flge@ff2+3)^0,c
 10335   001A06  EC01  F019         	call	___flge	;wreg free
 10336   001A0A  B0D8               	btfsc	status,0,c
 10337   001A0C  EF0A  F00D         	goto	u3061
 10338   001A10  EF0C  F00D         	goto	u3060
 10339   001A14                     u3061:
 10340   001A14  EF1C  F00D         	goto	l568
 10341   001A18                     u3060:
 10342   001A18                     
 10343                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 10344   001A18  0E26               	movlw	low STR_10
 10345   001A1A  6E0F               	movwf	Hue2Colour@colourname^0,c
 10346   001A1C  0E0E               	movlw	high STR_10
 10347   001A1E  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10348   001A20                     
 10349                           ;colorfunctions.c: 100:         cf->colourindex=7;
 10350   001A20  EE20 F014          	lfsr	2,20
 10351   001A24  500D               	movf	Hue2Colour@cf^0,w,c
 10352   001A26  26D9               	addwf	fsr2l,f,c
 10353   001A28  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10354   001A2A  22DA               	addwfc	fsr2h,f,c
 10355   001A2C  0E07               	movlw	7
 10356   001A2E  6EDE               	movwf	postinc2,c
 10357   001A30  0E00               	movlw	0
 10358   001A32  6EDD               	movwf	postdec2,c
 10359   001A34  EF1C  F00D         	goto	l3572
 10360   001A38                     l568:
 10361   001A38                     l3572:
 10362                           
 10363                           ;colorfunctions.c: 102:     return colourname;
 10364   001A38  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 10365   001A3C  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 10366   001A40  0012               	return		;funcret
 10367   001A42                     __end_of_Hue2Colour:
 10368                           	callstack 0
 10369                           
 10370 ;; *************** function ___flge *****************
 10371 ;; Defined at:
 10372 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 10375 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;		None
 10378 ;; Return value:  Size  Location     Type
 10379 ;;		None               void
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10387 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10389 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;Total ram usage:       12 bytes
 10392 ;; Hardware stack levels used: 1
 10393 ;; Hardware stack levels required when called: 1
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_main
 10398 ;;		_RGB2Hue
 10399 ;;		_Hue2Colour
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text61
 10404   003202                     __ptext61:
 10405                           	callstack 0
 10406   003202                     ___flge:
 10407                           	callstack 29
 10408   003202  0E00               	movlw	0
 10409   003204  1401               	andwf	___flge@ff1^0,w,c
 10410   003206  6E09               	movwf	??___flge^0,c
 10411   003208  0E00               	movlw	0
 10412   00320A  1402               	andwf	(___flge@ff1+1)^0,w,c
 10413   00320C  6E0A               	movwf	(??___flge+1)^0,c
 10414   00320E  0E80               	movlw	128
 10415   003210  1403               	andwf	(___flge@ff1+2)^0,w,c
 10416   003212  6E0B               	movwf	(??___flge+2)^0,c
 10417   003214  0E7F               	movlw	127
 10418   003216  1404               	andwf	(___flge@ff1+3)^0,w,c
 10419   003218  6E0C               	movwf	(??___flge+3)^0,c
 10420   00321A  5009               	movf	??___flge^0,w,c
 10421   00321C  100A               	iorwf	(??___flge+1)^0,w,c
 10422   00321E  100B               	iorwf	(??___flge+2)^0,w,c
 10423   003220  100C               	iorwf	(??___flge+3)^0,w,c
 10424   003222  A4D8               	btfss	status,2,c
 10425   003224  EF16  F019         	goto	u2851
 10426   003228  EF18  F019         	goto	u2850
 10427   00322C                     u2851:
 10428   00322C  EF20  F019         	goto	l3466
 10429   003230                     u2850:
 10430   003230  0E00               	movlw	0
 10431   003232  6E01               	movwf	___flge@ff1^0,c
 10432   003234  0E00               	movlw	0
 10433   003236  6E02               	movwf	(___flge@ff1+1)^0,c
 10434   003238  0E00               	movlw	0
 10435   00323A  6E03               	movwf	(___flge@ff1+2)^0,c
 10436   00323C  0E00               	movlw	0
 10437   00323E  6E04               	movwf	(___flge@ff1+3)^0,c
 10438   003240                     l3466:
 10439   003240  0E00               	movlw	0
 10440   003242  1405               	andwf	___flge@ff2^0,w,c
 10441   003244  6E09               	movwf	??___flge^0,c
 10442   003246  0E00               	movlw	0
 10443   003248  1406               	andwf	(___flge@ff2+1)^0,w,c
 10444   00324A  6E0A               	movwf	(??___flge+1)^0,c
 10445   00324C  0E80               	movlw	128
 10446   00324E  1407               	andwf	(___flge@ff2+2)^0,w,c
 10447   003250  6E0B               	movwf	(??___flge+2)^0,c
 10448   003252  0E7F               	movlw	127
 10449   003254  1408               	andwf	(___flge@ff2+3)^0,w,c
 10450   003256  6E0C               	movwf	(??___flge+3)^0,c
 10451   003258  5009               	movf	??___flge^0,w,c
 10452   00325A  100A               	iorwf	(??___flge+1)^0,w,c
 10453   00325C  100B               	iorwf	(??___flge+2)^0,w,c
 10454   00325E  100C               	iorwf	(??___flge+3)^0,w,c
 10455   003260  A4D8               	btfss	status,2,c
 10456   003262  EF35  F019         	goto	u2861
 10457   003266  EF37  F019         	goto	u2860
 10458   00326A                     u2861:
 10459   00326A  EF3F  F019         	goto	l3470
 10460   00326E                     u2860:
 10461   00326E  0E00               	movlw	0
 10462   003270  6E05               	movwf	___flge@ff2^0,c
 10463   003272  0E00               	movlw	0
 10464   003274  6E06               	movwf	(___flge@ff2+1)^0,c
 10465   003276  0E00               	movlw	0
 10466   003278  6E07               	movwf	(___flge@ff2+2)^0,c
 10467   00327A  0E00               	movlw	0
 10468   00327C  6E08               	movwf	(___flge@ff2+3)^0,c
 10469   00327E                     l3470:
 10470   00327E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10471   003280  EF44  F019         	goto	u2871
 10472   003284  EF46  F019         	goto	u2870
 10473   003288                     u2871:
 10474   003288  EF4F  F019         	goto	l3474
 10475   00328C                     u2870:
 10476   00328C  6C01               	negf	___flge@ff1^0,c
 10477   00328E  1E02               	comf	(___flge@ff1+1)^0,f,c
 10478   003290  B0D8               	btfsc	status,0,c
 10479   003292  2A02               	incf	(___flge@ff1+1)^0,f,c
 10480   003294  1E03               	comf	(___flge@ff1+2)^0,f,c
 10481   003296  B0D8               	btfsc	status,0,c
 10482   003298  2A03               	incf	(___flge@ff1+2)^0,f,c
 10483   00329A  0E80               	movlw	128
 10484   00329C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10485   00329E                     l3474:
 10486   00329E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10487   0032A0  EF54  F019         	goto	u2881
 10488   0032A4  EF56  F019         	goto	u2880
 10489   0032A8                     u2881:
 10490   0032A8  EF5F  F019         	goto	l898
 10491   0032AC                     u2880:
 10492   0032AC  6C05               	negf	___flge@ff2^0,c
 10493   0032AE  1E06               	comf	(___flge@ff2+1)^0,f,c
 10494   0032B0  B0D8               	btfsc	status,0,c
 10495   0032B2  2A06               	incf	(___flge@ff2+1)^0,f,c
 10496   0032B4  1E07               	comf	(___flge@ff2+2)^0,f,c
 10497   0032B6  B0D8               	btfsc	status,0,c
 10498   0032B8  2A07               	incf	(___flge@ff2+2)^0,f,c
 10499   0032BA  0E80               	movlw	128
 10500   0032BC  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10501   0032BE                     l898:
 10502   0032BE  0E00               	movlw	0
 10503   0032C0  1A01               	xorwf	___flge@ff1^0,f,c
 10504   0032C2  0E00               	movlw	0
 10505   0032C4  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10506   0032C6  0E00               	movlw	0
 10507   0032C8  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10508   0032CA  0E80               	movlw	128
 10509   0032CC  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10510   0032CE  0E00               	movlw	0
 10511   0032D0  1A05               	xorwf	___flge@ff2^0,f,c
 10512   0032D2  0E00               	movlw	0
 10513   0032D4  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10514   0032D6  0E00               	movlw	0
 10515   0032D8  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10516   0032DA  0E80               	movlw	128
 10517   0032DC  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10518   0032DE  5005               	movf	___flge@ff2^0,w,c
 10519   0032E0  5C01               	subwf	___flge@ff1^0,w,c
 10520   0032E2  5006               	movf	(___flge@ff2+1)^0,w,c
 10521   0032E4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10522   0032E6  5007               	movf	(___flge@ff2+2)^0,w,c
 10523   0032E8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10524   0032EA  5008               	movf	(___flge@ff2+3)^0,w,c
 10525   0032EC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10526   0032EE  B0D8               	btfsc	status,0,c
 10527   0032F0  EF7C  F019         	goto	u2891
 10528   0032F4  EF7E  F019         	goto	u2890
 10529   0032F8                     u2891:
 10530   0032F8  EF81  F019         	goto	l3480
 10531   0032FC                     u2890:
 10532   0032FC  90D8               	bcf	status,0,c
 10533   0032FE  EF82  F019         	goto	l903
 10534   003302                     l3480:
 10535   003302  80D8               	bsf	status,0,c
 10536   003304                     l903:
 10537   003304  0012               	return		;funcret
 10538   003306                     __end_of___flge:
 10539                           	callstack 0
 10540                           
 10541 ;; *************** function _ClickLEDOn *****************
 10542 ;; Defined at:
 10543 ;;		line 93 in file "colorclick.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  power           1    wreg     unsigned char 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  power           1    0[COMRAM] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10561 ;;Total ram usage:        1 bytes
 10562 ;; Hardware stack levels used: 1
 10563 ;; Hardware stack levels required when called: 1
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_main
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text62
 10572   004382                     __ptext62:
 10573                           	callstack 0
 10574   004382                     _ClickLEDOn:
 10575                           	callstack 29
 10576                           
 10577                           ;incstack = 0
 10578                           ;ClickLEDOn@power stored from wreg
 10579   004382  6E01               	movwf	ClickLEDOn@power^0,c
 10580   004384                     
 10581                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10582   004384  5001               	movf	ClickLEDOn@power^0,w,c
 10583   004386  B4D8               	btfsc	status,2,c
 10584   004388  EFC8  F021         	goto	u3771
 10585   00438C  EFCA  F021         	goto	u3770
 10586   004390                     u3771:
 10587   004390  EFCF  F021         	goto	l4160
 10588   004394                     u3770:
 10589   004394                     
 10590                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10591   004394  827F               	bsf	127,1,c	;volatile
 10592                           
 10593                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10594   004396  8879               	bsf	121,4,c	;volatile
 10595                           
 10596                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10597   004398  8E7E               	bsf	126,7,c	;volatile
 10598                           
 10599                           ;colorclick.c: 99:     }
 10600   00439A  EFDA  F021         	goto	l430
 10601   00439E                     l4160:
 10602   00439E  5001               	movf	ClickLEDOn@power^0,w,c
 10603   0043A0  A4D8               	btfss	status,2,c
 10604   0043A2  EFD5  F021         	goto	u3781
 10605   0043A6  EFD7  F021         	goto	u3780
 10606   0043AA                     u3781:
 10607   0043AA  EFDA  F021         	goto	l430
 10608   0043AE                     u3780:
 10609   0043AE                     
 10610                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10611   0043AE  927F               	bcf	127,1,c	;volatile
 10612                           
 10613                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10614   0043B0  9879               	bcf	121,4,c	;volatile
 10615                           
 10616                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10617   0043B2  9E7E               	bcf	126,7,c	;volatile
 10618   0043B4                     l430:
 10619   0043B4  0012               	return		;funcret
 10620   0043B6                     __end_of_ClickLEDOn:
 10621                           	callstack 0
 10622                           
 10623 ;; *************** function _HighISR *****************
 10624 ;; Defined at:
 10625 ;;		line 25 in file "interrupts.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;Total ram usage:        0 bytes
 10644 ;; Hardware stack levels used: 1
 10645 ;; This function calls:
 10646 ;;		Nothing
 10647 ;; This function is called by:
 10648 ;;		Interrupt level 2
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	intcode
 10653   000008                     __pintcode:
 10654                           	callstack 0
 10655   000008                     _HighISR:
 10656                           	callstack 23
 10657                           
 10658                           ;incstack = 0
 10659   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10660   00000A                     
 10661                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 10662   00000A  010E               	movlb	14	; () banked
 10663   00000C  AB33               	btfss	51,5,b	;volatile
 10664   00000E  EF0B  F000         	goto	i2u409_41
 10665   000012  EF0D  F000         	goto	i2u409_40
 10666   000016                     i2u409_41:
 10667   000016  EF14  F000         	goto	i2l630
 10668   00001A                     i2u409_40:
 10669   00001A                     
 10670                           ; BSR set to: 14
 10671                           ;interrupts.c: 29:     maxTime = 1;
 10672   00001A  0E00               	movlw	0
 10673   00001C  0100               	movlb	0	; () banked
 10674   00001E  6FDF               	movwf	(_maxTime+1)& (0+255),b	;volatile
 10675   000020  0E01               	movlw	1
 10676   000022  6FDE               	movwf	_maxTime& (0+255),b	;volatile
 10677   000024                     
 10678                           ; BSR set to: 0
 10679                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 10680   000024  010E               	movlb	14	; () banked
 10681   000026  9B33               	bcf	51,5,b	;volatile
 10682   000028                     i2l630:
 10683                           
 10684                           ; BSR set to: 14
 10685   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10686   00002A  0011               	retfie		f
 10687   00002C                     __end_of_HighISR:
 10688                           	callstack 0
 10689                           
 10690                           	psect	rparam
 10691   000000                     
 10692                           	psect	temp
 10693   00005F                     btemp:
 10694                           	callstack 0
 10695   00005F                     	ds	1
 10696   000000                     int$flags	set	btemp
 10697   000000                     wtemp8	set	btemp+1
 10698   000000                     ttemp5	set	btemp+1
 10699   000000                     ttemp6	set	btemp+4
 10700   000000                     ttemp7	set	btemp+8
 10701                           
 10702                           	psect	idloc
 10703                           
 10704                           ;Config register IDLOC0 @ 0x200000
 10705                           ;	unspecified, using default values
 10706   200000                     	org	2097152
 10707   200000  0FFF               	dw	4095
 10708                           
 10709                           ;Config register IDLOC1 @ 0x200002
 10710                           ;	unspecified, using default values
 10711   200002                     	org	2097154
 10712   200002  0FFF               	dw	4095
 10713                           
 10714                           ;Config register IDLOC2 @ 0x200004
 10715                           ;	unspecified, using default values
 10716   200004                     	org	2097156
 10717   200004  0FFF               	dw	4095
 10718                           
 10719                           ;Config register IDLOC3 @ 0x200006
 10720                           ;	unspecified, using default values
 10721   200006                     	org	2097158
 10722   200006  0FFF               	dw	4095
 10723                           
 10724                           ;Config register IDLOC4 @ 0x200008
 10725                           ;	unspecified, using default values
 10726   200008                     	org	2097160
 10727   200008  0FFF               	dw	4095
 10728                           
 10729                           ;Config register IDLOC5 @ 0x20000A
 10730                           ;	unspecified, using default values
 10731   20000A                     	org	2097162
 10732   20000A  0FFF               	dw	4095
 10733                           
 10734                           ;Config register IDLOC6 @ 0x20000C
 10735                           ;	unspecified, using default values
 10736   20000C                     	org	2097164
 10737   20000C  0FFF               	dw	4095
 10738                           
 10739                           ;Config register IDLOC7 @ 0x20000E
 10740                           ;	unspecified, using default values
 10741   20000E                     	org	2097166
 10742   20000E  0FFF               	dw	4095
 10743                           
 10744                           	psect	config
 10745                           
 10746                           ;Config register CONFIG1L @ 0x300000
 10747                           ;	External Oscillator mode Selection bits
 10748                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10749                           ;	Power-up default value for COSC bits
 10750                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10751   300000                     	org	3145728
 10752   300000  AA                 	db	170
 10753                           
 10754                           ;Config register CONFIG1H @ 0x300001
 10755                           ;	unspecified, using default values
 10756                           ;	Clock Out Enable bit
 10757                           ;	CLKOUTEN = 0x1, unprogrammed default
 10758                           ;	Clock Switch Enable bit
 10759                           ;	CSWEN = 0x1, unprogrammed default
 10760                           ;	Fail-Safe Clock Monitor Enable bit
 10761                           ;	FCMEN = 0x1, unprogrammed default
 10762   300001                     	org	3145729
 10763   300001  FF                 	db	255
 10764                           
 10765                           ;Config register CONFIG2L @ 0x300002
 10766                           ;	unspecified, using default values
 10767                           ;	Master Clear Enable bit
 10768                           ;	MCLRE = 0x1, unprogrammed default
 10769                           ;	Power-up Timer Enable bit
 10770                           ;	PWRTE = 0x1, unprogrammed default
 10771                           ;	Low-power BOR enable bit
 10772                           ;	LPBOREN = 0x1, unprogrammed default
 10773                           ;	Brown-out Reset Enable bits
 10774                           ;	BOREN = 0x3, unprogrammed default
 10775   300002                     	org	3145730
 10776   300002  FF                 	db	255
 10777                           
 10778                           ;Config register CONFIG2H @ 0x300003
 10779                           ;	unspecified, using default values
 10780                           ;	Brown Out Reset Voltage selection bits
 10781                           ;	BORV = 0x3, unprogrammed default
 10782                           ;	ZCD Disable bit
 10783                           ;	ZCD = 0x1, unprogrammed default
 10784                           ;	PPSLOCK bit One-Way Set Enable bit
 10785                           ;	PPS1WAY = 0x1, unprogrammed default
 10786                           ;	Stack Full/Underflow Reset Enable bit
 10787                           ;	STVREN = 0x1, unprogrammed default
 10788                           ;	Debugger Enable bit
 10789                           ;	DEBUG = 0x1, unprogrammed default
 10790                           ;	Extended Instruction Set Enable bit
 10791                           ;	XINST = 0x1, unprogrammed default
 10792   300003                     	org	3145731
 10793   300003  FF                 	db	255
 10794                           
 10795                           ;Config register CONFIG3L @ 0x300004
 10796                           ;	WDT Period Select bits
 10797                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10798                           ;	WDT operating mode
 10799                           ;	WDTE = OFF, WDT Disabled
 10800   300004                     	org	3145732
 10801   300004  9F                 	db	159
 10802                           
 10803                           ;Config register CONFIG3H @ 0x300005
 10804                           ;	unspecified, using default values
 10805                           ;	WDT Window Select bits
 10806                           ;	WDTCWS = 0x7, unprogrammed default
 10807                           ;	WDT input clock selector
 10808                           ;	WDTCCS = 0x7, unprogrammed default
 10809   300005                     	org	3145733
 10810   300005  FF                 	db	255
 10811                           
 10812                           ;Config register CONFIG4L @ 0x300006
 10813                           ;	unspecified, using default values
 10814                           ;	Write Protection Block 0
 10815                           ;	WRT0 = 0x1, unprogrammed default
 10816                           ;	Write Protection Block 1
 10817                           ;	WRT1 = 0x1, unprogrammed default
 10818                           ;	Write Protection Block 2
 10819                           ;	WRT2 = 0x1, unprogrammed default
 10820                           ;	Write Protection Block 3
 10821                           ;	WRT3 = 0x1, unprogrammed default
 10822                           ;	Write Protection Block 3
 10823                           ;	WRT4 = 0x1, unprogrammed default
 10824                           ;	Write Protection Block 3
 10825                           ;	WRT5 = 0x1, unprogrammed default
 10826                           ;	Write Protection Block 3
 10827                           ;	WRT6 = 0x1, unprogrammed default
 10828                           ;	Write Protection Block 3
 10829                           ;	WRT7 = 0x1, unprogrammed default
 10830   300006                     	org	3145734
 10831   300006  FF                 	db	255
 10832                           
 10833                           ;Config register CONFIG4H @ 0x300007
 10834                           ;	unspecified, using default values
 10835                           ;	Configuration Register Write Protection bit
 10836                           ;	WRTC = 0x1, unprogrammed default
 10837                           ;	Boot Block Write Protection bit
 10838                           ;	WRTB = 0x1, unprogrammed default
 10839                           ;	Data EEPROM Write Protection bit
 10840                           ;	WRTD = 0x1, unprogrammed default
 10841                           ;	Scanner Enable bit
 10842                           ;	SCANE = 0x1, unprogrammed default
 10843                           ;	Low Voltage Programming Enable bit
 10844                           ;	LVP = 0x1, unprogrammed default
 10845   300007                     	org	3145735
 10846   300007  FF                 	db	255
 10847                           
 10848                           ;Config register CONFIG5L @ 0x300008
 10849                           ;	unspecified, using default values
 10850                           ;	UserNVM Program Memory Code Protection bit
 10851                           ;	CP = 0x1, unprogrammed default
 10852                           ;	DataNVM Memory Code Protection bit
 10853                           ;	CPD = 0x1, unprogrammed default
 10854   300008                     	org	3145736
 10855   300008  FF                 	db	255
 10856                           
 10857                           ;Config register CONFIG5H @ 0x300009
 10858                           ;	unspecified, using default values
 10859   300009                     	org	3145737
 10860   300009  FF                 	db	255
 10861                           
 10862                           ;Config register CONFIG6L @ 0x30000A
 10863                           ;	unspecified, using default values
 10864                           ;	Table Read Protection Block 0
 10865                           ;	EBTR0 = 0x1, unprogrammed default
 10866                           ;	Table Read Protection Block 1
 10867                           ;	EBTR1 = 0x1, unprogrammed default
 10868                           ;	Table Read Protection Block 2
 10869                           ;	EBTR2 = 0x1, unprogrammed default
 10870                           ;	Table Read Protection Block 3
 10871                           ;	EBTR3 = 0x1, unprogrammed default
 10872                           ;	Table Read Protection Block 4
 10873                           ;	EBTR4 = 0x1, unprogrammed default
 10874                           ;	Table Read Protection Block 5
 10875                           ;	EBTR5 = 0x1, unprogrammed default
 10876                           ;	Table Read Protection Block 6
 10877                           ;	EBTR6 = 0x1, unprogrammed default
 10878                           ;	Table Read Protection Block 7
 10879                           ;	EBTR7 = 0x1, unprogrammed default
 10880   30000A                     	org	3145738
 10881   30000A  FF                 	db	255
 10882                           
 10883                           ;Config register CONFIG6H @ 0x30000B
 10884                           ;	unspecified, using default values
 10885                           ;	Boot Block Table Read Protection bit
 10886                           ;	EBTRB = 0x1, unprogrammed default
 10887   30000B                     	org	3145739
 10888   30000B  FF                 	db	255
 10889                           tosu	equ	0xFFF
 10890                           tosh	equ	0xFFE
 10891                           tosl	equ	0xFFD
 10892                           stkptr	equ	0xFFC
 10893                           pclatu	equ	0xFFB
 10894                           pclath	equ	0xFFA
 10895                           pcl	equ	0xFF9
 10896                           tblptru	equ	0xFF8
 10897                           tblptrh	equ	0xFF7
 10898                           tblptrl	equ	0xFF6
 10899                           tablat	equ	0xFF5
 10900                           prodh	equ	0xFF4
 10901                           prodl	equ	0xFF3
 10902                           indf0	equ	0xFEF
 10903                           postinc0	equ	0xFEE
 10904                           postdec0	equ	0xFED
 10905                           preinc0	equ	0xFEC
 10906                           plusw0	equ	0xFEB
 10907                           fsr0h	equ	0xFEA
 10908                           fsr0l	equ	0xFE9
 10909                           wreg	equ	0xFE8
 10910                           indf1	equ	0xFE7
 10911                           postinc1	equ	0xFE6
 10912                           postdec1	equ	0xFE5
 10913                           preinc1	equ	0xFE4
 10914                           plusw1	equ	0xFE3
 10915                           fsr1h	equ	0xFE2
 10916                           fsr1l	equ	0xFE1
 10917                           bsr	equ	0xFE0
 10918                           indf2	equ	0xFDF
 10919                           postinc2	equ	0xFDE
 10920                           postdec2	equ	0xFDD
 10921                           preinc2	equ	0xFDC
 10922                           plusw2	equ	0xFDB
 10923                           fsr2h	equ	0xFDA
 10924                           fsr2l	equ	0xFD9
 10925                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    122     156
    BANK1           256      0     141
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2773$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2720$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2720$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_RGB2Hue
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _Colour2Action->_Blue_T180
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___flmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0  262521
                                             92 COMRAM     2     2      0
                                             21 BANK0    101   101      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16629
                                             86 COMRAM     6     4      2
                                             13 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     999
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2838
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  221267
                                             39 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   39827
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Red_R90                                              4     0      4   29100
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Pink_rev1_L90                                        6     2      4   39783
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Orange_R135                                          4     0      4   33913
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _LightBlue_L135                                       4     0      4   29188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Green_L90                                            4     0      4   29100
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9540
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Blue_T180                                            4     0      4   20104
                                             35 COMRAM     4     0      4
                         _TimerReset
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10780
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4   10148
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8888
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4681
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8157
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _TimerReset
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _TimerReset
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
       _stop
     _Pink_rev1_L90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Yellow_rev1_R90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8D       7       55.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     187      62        0.0%
DATA                 0      0     187       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 20:01:19 2023

               _color_read_Red 4018                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 4108                             l30 43E0  
                           l33 4406                             l42 44E4                             l27 43DE  
                           l36 44EE                             l45 44C4                             l39 44DA  
                           l48 42CA            ___wmul@multiplicand 0003                 ?_rotate180left 0020  
             _color_read_Clear 40B8               _color_read_Green 4068              ??_Interrupts_init 0001  
                  Green_L90@mL 0021                    Green_L90@mR 0023                            l123 273C  
                          l301 3896                            l224 2D5E                            l233 393A  
                          l217 3AF8                            l234 393C                            l244 39D2  
                          l260 3B82                            l412 4492                            l421 4156  
                          l430 43B4                            l254 3E92                            l239 3A68  
                          l263 4016                            l271 3D12                            l415 4066  
                          l424 4106                            l257 3C0C                            l281 3FC4  
                          l249 3D92                            l409 430A                            l266 3C92  
                          l418 40B6                            l291 34E0                            l372 4348  
                          l276 3E12                            l445 44B8                            l357 4472  
                          l366 4496                            l286 33F4                            l543 30FA  
                          l296 3744                            l624 44D0                            l369 44AA  
                          l633 442C                            l378 4380                            l490 4450  
                          l493 44F8                            l549 10A0                            l557 1552  
                          l574 1A40                            l903 3304                            l591 2BF2  
                          l568 1A38                            l584 2BF2                            l930 3200  
                          l892 37EE                            l898 32BE                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1554  
                 ___fltol@exp1 000A                           l1131 3F06                           l1203 4288  
                         l1124 3EFE                           l1220 24EA                           l1302 2A04  
                         l1311 41F4                           l1215 26C6                           l3000 38FA  
                         l1217 2526                           l1161 1C30                           l3002 390A  
                         l3010 3A00                           l1226 256C                           l1170 1F00  
                         l1162 1C1E                           l1403 41A6                           l1251 232C  
                         l1163 1BE4                           l3004 3922                           l3020 3A28  
                         l3012 3A0C                           l3100 3992                           l1228 25E4  
                         l1229 25D2                           l3030 2EBA                           l3110 3E14  
                         l3022 3A34                           l3006 39D4                           l3102 399E  
                         l1254 21BE                           l1407 35BE                           l1247 1FC8  
                         l3040 2F02                           l3032 2ECC                           l3120 3E50  
                         l3112 3E34                           l3024 3A40                           l3008 39F4  
                         l3104 39AA                           l1264 22EE                           l1256 2236  
                         l4000 3150                           l3200 42A0                           l1257 2224  
                         l3050 2F6E                           l1346 2F3A                           l3042 2F0A  
                         l3034 2ED4                           l3122 3E5C                           l3026 3A4E  
                         l3018 3A14                           l3130 3B84                           l3106 39B8  
                         l3210 3D34                           l1178 1D4A                           l4002 3152  
                         l3202 42C6                           l1187 1E1A                           l1291 2A6C  
                         l3060 2FD6                           l3052 2F8C                           l3044 2F18  
                         l1348 2F42                           l3036 2EE6                           l3124 3E68  
                         l3028 3A52                           l3140 3BF2                           l3132 3B86  
                         l3108 39BC                           l3220 3D5C                           l1188 1E08  
                         l3300 1B12                           l4004 3162                           l4100 42DA  
                         l3204 42C8                           l1357 2FF4                           l3054 2F98  
                         l3046 2F56                           l3038 2EEE                           l3070 3526  
                         l3062 34E2                           l3150 2DA0                           l1374 4242  
                         l3126 3E78                           l3118 3E3C                           l3142 3C0A  
                         l3134 3B9A                           l3230 3AFC                           l3222 3D68  
                         l3310 1B4A                           l3302 1B22                           l4030 31E0  
                         l4014 318C                           l4006 3166                           l4110 4302  
                         l4102 42EA                           l1295 29A8                           l3056 2FCE  
                         l3048 2F6A                           l3072 3542                           l3064 350C  
                         l1368 2EB8                           l3160 2E2E                           l3152 2DA4  
                         l3144 2D60                           l3128 3E7C                           l3136 3BB2  
                         l3240 3B80                           l3232 3B10                           l3224 3D78  
                         l3216 3D3C                           l3208 3D14                           l4120 44C6  
                         l3320 1B5E                           l3312 1B4E                           l3304 1B34  
                         l4032 31F0                           l4024 31B4                           l4016 3196  
                         l4008 3174                           l4040 28DA                           l1288 2910  
                         l4200 1078                           l4112 4304                           l4104 42F4  
                         l1386 3688                           l3058 2FD2                           l3074 355E  
                         l3162 2E36                           l3154 2DC8                           l3146 2D84  
                         l3250 3C66                           l3138 3BDE                           l3242 3FC6  
                         l3090 396A                           l3234 3B28                           l3226 3D7C  
                         l3218 3D50                           l3410 1DAC                           l3402 1D84  
                         l3330 1B72                           l3322 1B62                           l3314 1B52  
                         l3306 1B42                           l4026 31C0                           l4018 31A0  
                         l4050 2952                           l4042 2920                           l4210 1260  
                         l4202 10E6                           l4130 444E                           l4122 442E  
                         l3082 43E0                           l4114 4306                           l4106 42FE  
                         l3076 3570                           l3068 3518                           l3164 2E46  
                         l3156 2DFE                           l3148 2D92                           l3172 2E90  
                         l3252 3C7A                           l3244 3C0E                           l3092 3976  
                         l3236 3B54                           l3228 3AFA                           l3412 1DB4  
                         l3404 1D8E                           l3420 1DD8                           l3340 1B86  
                         l3332 1B76                           l3324 1B66                           l3316 1B56  
                         l3308 1B46                           l3260 1A42                           l4028 31D0  
                         l4060 29DA                           l4052 295E                           l4044 2936  
                         l4036 28BC                           l4212 12AA                           l4220 14EA  
                         l4204 112C                           l4124 4436                           l3500 43C8  
                         l3084 43F0                           l3180 44EA                           l4116 4308  
                         l4108 4300                           l4140 3AC8                           l4132 3A6A  
                         l4300 2750                           l1397 450A                           l3510 159A  
                         l3078 359A                           l3158 2E22                           l3254 44F0  
                         l3246 3C22                           l3086 393E                           l3238 3B68  
                         l4230 2AC2                           l4118 44AC                           l3430 1E2A  
                         l3422 1DDC                           l3414 1DB8                           l3406 1D9C  
                         l3350 1BFE                           l3342 1BB0                           l3334 1B7A  
                         l3326 1B6A                           l3318 1B5A                           l3270 1A7E  
                         l3262 1A4E                           l4070 2A18                           l4062 29E6  
                         l4054 2990                           l4038 28CC                           l4222 1506  
                         l4214 1364                           l4206 1150                           l4126 4440  
                         l3502 43CA                           l3190 44BC                           l3182 44D2  
                         l4150 3AEA                           l4142 3AD2                           l4134 3A7A  
                         l4310 2792                           l4302 2756                           l4160 439E  
                         l3520 1670                           l3512 15D8                           l3256 4496  
                         l3168 2E7E                           l3248 3C3A                           l3088 395E  
                         l3600 3306                           l4240 2B4A                           l4232 2ADA  
                         l4224 2A6E                           l3440 1E90                           l3432 1E36  
                         l3424 1DEA                           l3416 1DC8                           l3408 1D9E  
                         l3360 1C3E                           l3352 1C02                           l3344 1BCC  
                         l3336 1B7E                           l3328 1B6E                           l3280 1AAE  
                         l3272 1A8E                           l3264 1A5C                           l4072 2A3C  
                         l4064 29F4                           l4056 2992                           l4048 294A  
                         l4216 13CC                           l4208 121A                           l4128 4442  
                         l3504 43CC                           l3192 44C0                           l3184 44D6  
                         l4152 3AEC                           l4144 3AD4                           l4136 3AA0  
                         l4320 2806                           l4312 27AE                           l4304 2756  
                         l4162 43AE                           l3530 1714                           l3522 1678  
                         l3514 15E0                           l3506 1554                           l3258 44A6  
                         l3098 397E                           l3610 3380                           l3602 3318  
                         l4250 2BDA                           l4242 2B6A                           l4234 2AFA  
                         l4226 2A8C                           l3450 1ED8                           l3442 1EA0  
                         l3434 1E44                           l3426 1E00                           l3418 1DCA  
                         l3370 1C80                           l3362 1C4E                           l3354 1C10  
                         l3346 1BDC                           l3338 1B82                           l3290 1AD8  
                         l3282 1AC0                           l3274 1A90                           l3266 1A5E  
                         l4074 2A4C                           l4066 2A12                           l4058 299E  
                         l4218 1486                           l3178 44E6                           l3186 44DC  
                         l3194 428C                           l4170 30C2                           l4154 3AF6  
                         l4146 3ADE                           l4138 3AA4                           l4090 446C  
                         l4082 4452                           l4330 2856                           l4322 280C  
                         l4314 27BA                           l4306 276A                           l4156 4384  
                         l3540 17C8                           l3532 172C                           l3524 1690  
                         l3516 15F4                           l3508 155C                           l3620 33F6  
                         l3612 3384                           l3604 3340                           l4244 2B82  
                         l4236 2B12                           l4228 2AA4                           l3452 1EDA  
                         l3444 1EC0                           l3436 1E7E                           l3380 1CAE  
                         l3372 1C8E                           l3356 1C12                           l3348 1BF2  
                         l3292 1AE8                           l3284 1AC2                           l3268 1A6E  
                         l3276 1A98                           l4076 2A5A                           l4068 2A14  
                         l4180 0E52                           l3188 44E0                           l3196 4290  
                         l4172 30DE                           l4164 2FF6                           l4148 3AE0  
                         l4092 446E                           l4084 4456                           l4340 28AC  
                         l4332 2862                           l4324 2820                           l4316 27CE  
                         l4308 277E                           l4260 26D4                           l4158 4394  
                         l3470 327E                           l3462 3202                           l3550 18A2  
                         l3542 1806                           l3534 176A                           l3526 16CE  
                         l3518 1632                           l4174 430C                           l3630 3470  
                         l3622 3408                           l3606 3358                           l3614 339C  
                         l4246 2BA2                           l4238 2B32                           l3710 235A  
                         l3702 232E                           l3454 1EE0                           l3446 1EC4  
                         l3438 1E80                           l3390 1D1A                           l3382 1CB8  
                         l3374 1C9A                           l3366 1C62                           l3358 1C1C  
                         l3294 1AF8                           l3286 1AC8                           l3278 1AA8  
                         l4078 2A5C                           l4190 0F4E                           l4182 0E98  
                         l3198 4298                           l4166 308E                           l4094 4470  
                         l4086 4460                           l4334 287A                           l4318 2800  
                         l4326 2838                           l4270 26EC                           l4262 26D8  
                         l4254 26C8                           l3480 3302                           l3472 328C  
                         l3464 3230                           l3560 197C                           l3552 18E0  
                         l3544 1844                           l3536 17A8                           l3528 170C  
                         l4176 4320                           l2920 4424                           l3640 369C  
                         l3624 3430                           l3632 3478                           l3616 33D8  
                         l3608 336C                           l4248 2BBA                           l3800 258E  
                         l3720 2394                           l3712 236A                           l3704 233A  
                         l3456 1EEE                           l3448 1ED2                           l3392 1D2A  
                         l3376 1C9E                           l3368 1C72                           l3384 1CBE  
                         l3296 1B08                           l3288 1AD6                           l4192 0F94  
                         l4184 0EDE                           l4096 42CC                           l4168 30A6  
                         l4088 4462                           l4336 288E                           l4328 284A  
                         l4280 270A                           l4272 26F2                           l4264 26DC  
                         l4256 26CC                           l3474 329E                           l3466 3240  
                         l3570 1A20                           l3562 1984                           l3554 18E8  
                         l3546 184C                           l3538 17B0                           l3490 423A  
                         l4178 433C                           l2930 3EB6                           l3650 3852  
                         l3642 36EC                           l3634 34B4                           l3626 3448  
                         l3810 2600                           l3802 259C                           l3730 23C0  
                         l3722 239A                           l3714 237A                           l3706 2348  
                         l3458 1EF0                           l3386 1CE4                           l3394 1D3A  
                         l3378 1CAC                           l3298 1B0A                           l4194 0FBC  
                         l4186 0EFE                           l4098 42D0                           l4338 28A6  
                         l4290 2726                           l4282 2712                           l4274 26F6  
                         l4266 26E0                           l4258 26D0                           l3476 32AC  
                         l3468 326E                           l3564 199C                           l3556 1900  
                         l3548 1864                           l3572 1A38                           l3484 41F6  
                         l3660 41C8                           l2940 3EF0                           l2932 3EBE  
                         l2924 3E94                           l3652 385A                           l3644 36F4  
                         l3636 34CC                           l3628 345C                           l3580 3CE2  
                         l3820 266C                           l3812 260E                           l3804 25CA  
                         l3740 23FA                           l3732 23D0                           l3724 23A0  
                         l3716 237C                           l3708 234A                           l3900 208E  
                         l3396 1D60                           l3388 1D18                           l4196 1002  
                         l4188 0F08                           l4292 272E                           l4284 2716  
                         l4276 26FA                           l4268 26E0                           l3478 32FC  
                         l3566 19DA                           l3558 193E                           l3670 435C  
                         l3486 4202                           l3662 41E4                           l3654 41A8  
                         l2942 3EF2                           l2934 3ECC                           l2926 3E9C  
                         l2918 4408                           l2950 2C64                           l3590 3DEA  
                         l3646 37F0                           l3638 368A                           l3582 3CEA  
                         l3830 26BA                           l3822 2686                           l3814 2638  
                         l3742 2410                           l3734 23E0                           l3726 23AE  
                         l3718 2384                           l3910 20F0                           l3902 209A  
                         l3398 1D70                           l4198 104C                           l3494 43B6  
                         l4294 2736                           l4286 271A                           l4278 2702  
                         l3568 1A18                           l3672 4360                           l3488 421E  
                         l3656 41B8                           l2944 3EF8                           l2936 3ED2  
                         l2928 3EAE                           l2960 2D1E                           l2952 2C78  
                         l3592 3F6E                           l3584 3D94                           l3648 3802  
                         l3576 3C94                           l3832 26BC                           l3824 26A2  
                         l3808 25F4                           l3816 263C                           l3760 2464  
                         l3744 2420                           l3752 2440                           l3736 23E2  
                         l3728 23B0                           l3920 2186                           l3912 20FC  
                         l3904 20AA                           l3840 1F02                           l3496 43C0  
                         l3680 405E                           l4296 2738                           l4288 271E  
                         l3674 4368                           l3666 434A                           l2970 360C  
                         l2962 35C0                           l3658 41C0                           l2938 3EE8  
                         l2954 2C7C                           l2946 2BF4                           l3594 3F80  
                         l3586 3DA6                           l3578 3CA6                           l3826 26A6  
                         l3818 2656                           l3770 24B6                           l3762 247E  
                         l3754 2450                           l3746 2428                           l3738 23EA  
                         l3930 21DC                           l3922 21A4                           l3914 2118  
                         l3906 20C4                           l3850 1F40                           l3842 1F10  
                         l3498 43C6                           l3690 4108                           l4298 274A  
                         l3668 434E                           l2972 3642                           l2964 35D2  
                         l2980 4168                           l2956 2CBE                           l2948 2C10  
                         l3596 3FA8                           l3588 3DE2                           l3828 26B4  
                         l3780 2512                           l3772 24C6                           l3764 248E  
                         l3756 2450                           l3748 242C                           l3940 2246  
                         l3932 21E0                           l3924 21AE                           l3916 2142  
                         l3908 20D4                           l3860 1F72                           l3852 1F50  
                         l3844 1F1E                           l3676 4476                           l3692 414E  
                         l3684 4068                           l2966 35E4                           l2982 419A  
                         l2958 2CDA                           l2990 38B6                           l3598 3FB0  
                         l3790 2552                           l3782 2514                           l3774 24DA  
                         l3766 249E                           l3950 22A8                           l3942 2252  
                         l3934 21EE                           l3926 21BC                           l3918 2178  
                         l3870 1FB2                           l3862 1F80                           l3854 1F56  
                         l3846 1F20                           l3686 40AE                           l3678 4018  
                         l2968 35EE                           l2976 4158                           l2992 38C0  
                         l3792 255C                           l3784 2524                           l3776 24E8  
                         l3768 24AE                           l3960 2310                           l3952 22BC  
                         l3944 2260                           l3936 221C                           l3928 21CE  
                         l3880 1FFC                           l3872 1FB8                           l3864 1F82  
                         l3856 1F66                           l3848 1F30                           l3696 40B8  
                         l2978 4164                           l2994 38D8                           l2986 3898  
                         l3794 256A                           l3786 2536                           l3778 24F4  
                         l3962 2312                           l3954 22D6                           l3946 228A  
                         l3890 204C                           l3882 2008                           l3874 1FD8  
                         l3866 1F92                           l3858 1F6C                           l3970 4244  
                         l3698 40FE                           l2996 38E2                           l2988 389E  
                         l3788 254C                           l3796 257C                           l3980 3784  
                         l3956 22F2                           l3964 2318                           l3948 228E  
                         l3892 2058                           l3884 2012                           l3876 1FE8  
                         l3868 1FA2                           l3972 4254                           l2998 38EE  
                         l3798 258A                           l3982 37B2                           l3966 231C  
                         l3958 2302                           l3894 2064                           l3886 2028  
                         l3984 37C2                           l3976 3746                           l3896 2072  
                         l3888 2034                           l3992 30FC                           l3986 37E6  
                         l3978 3774                           l3898 207E                           l3994 3112  
                         l3988 37EC                           l3998 3126                           STR_1 0E01  
                         STR_2 0E10                           STR_3 0E4C                           STR_4 0E3D  
                         STR_5 0E1C                           STR_6 0E36                           STR_7 0E43  
                         STR_8 0E2F                           STR_9 0E11                           u2100 2CDA  
                         u2101 2CD6                           u2110 35D2                           u2111 35CE  
                         u3000 1844                           u2120 35E4                           u2200 393A  
                         u3001 1840                           u2121 35E0                           u2201 3936  
                         u3010 18A2                           u2130 360C                           u2210 3A68  
                         u3011 189E                           u2131 3608                           u2211 3A64  
                         u3020 18E0                           u2140 3642                           u2300 3542  
                         u2060 3EAE                           u3100 3318                           u3021 18DC  
                         u2141 363E                           u2221 2EC4                           u2301 353E  
                         u2061 3EAA                           u3101 3314                           u3030 193E  
                         u2150 418A                           u2230 2EE6                           u2310 355E  
                         u2070 3ECC                           u3110 3408                           u3031 193A  
                         u2231 2EE2                           u2311 355A                           u2071 3EC8  
                         u3111 3404                           u3040 197C                           u2160 419A  
                         u2240 2F18                           u2320 3570                           u2400 2DFE  
                         u2080 3EE8                           u3120 369C                           u3200 23D0  
                         u4000 284A                   _BAUD4CONbits 000EE9                           u3041 1978  
                         u2161 4196                           u2241 2F14                           u2321 356C  
                         u2401 2DFA                           u2081 3EE4                           u3121 3698  
                         u3201 23CC                           u4001 2846                           u3050 19DA  
                         u2250 2F36                           u2330 359A                           u2410 2E22  
                         u2090 2C10                           u2170 38B6                           u3130 3802  
                         u3210 2410                           u3051 19D6                           u2251 2F32  
                         u2331 3596                           u2411 2E1E                           u2091 2C0C  
                         u2171 38B2                           u3131 37FE                           u3211 240C  
                         u3060 1A18                           u3140 4380                           u2260 2F8C  
                         u2180 38D8                           u3300 259C                           u3220 2450  
                         u2500 1AD6                           u2340 43F0                           u2420 42B4  
                         u3061 1A14                           u3141 437C                           u2157 4180  
                         u2261 2F88                           u2181 38D4                           u3301 2598  
                         u3221 244C                           u2501 1AD2                           u2341 43EC  
                         u2421 42AC                           u2270 2FBA                           u2190 3922  
                         u3070 3CA6                           u3310 25CA                           u3230 24C6  
                         u3150 2348                           u2510 1AE8                           u2350 4406  
                         u2191 391E                           u3071 3CA2                           u3311 25C6  
                         u3231 24C2                           u3151 2344                           u2511 1AE4  
                         u2351 4402                           u2280 2FF4                           u2360 39D2  
                         u3080 3DA6                           u2440 3D92                           u3320 25E0  
                         u3240 24E8                           u3160 235A                           u3400 1F40  
                         u2600 1C30                           u2520 1AF8                           u2281 2FF0  
                         u2361 39CE                           u3081 3DA2                           u2441 3D8E  
                         u3321 25DC                           u3241 24E4                           u3161 2356  
                         u3401 1F3C                           u2601 1C2C                           u2521 1AF4  
                         u2450 44A6                           u2290 350C                           u2370 3E92  
                         u3090 3F80                           u3330 25F4                           u3250 2512  
                         u3170 236A                           u3410 1F80                           u2610 1C3E  
                         u2530 1B34                           _T2PR 000FBC                           u2451 44A2  
                         u2291 3508                           u2371 3E8E                           u3091 3F7C  
                         u3331 25F0                           u3251 250E                           u3171 2366  
                         u3411 1F7C                           u2611 1C3A                           u2531 1B30  
                         u4107 279C                           u2380 2D84                           u3340 260E  
                         u3260 2536                           u3180 23AE                           u3500 221C  
                         u3420 1F92                           u2700 1D9C                           u2620 1C4E  
                         u2540 1B42                           u2460 1A5C                           u2277 2FB0  
                         u2381 2D80                           u3341 260A                           u3261 2532  
                         u3181 23AA                           u3501 2218                           u3421 1F8E  
                         u2701 1D98                           u2621 1C4A                           u2541 1B3E  
                         u2461 1A58                           u4117 282A                           u2390 2DC8  
                         u3350 2656                           u3270 254C                           u3190 23C0  
                         u3510 2232                           u3430 1FA2                           u2710 1DAC  
                         u2630 1C80                           u2550 1BB0                           u2470 1A6E  
                         u2438 42B6                           u2391 2DC4                           u4207 3B46  
                         u3351 2652                           u3271 2548                           u3191 23BC  
                         u3511 222E                           u3431 1F9E                           u2711 1DA8  
                         u2631 1C7C                           u2551 1BAC                           u2471 1A6A  
                         u4127 2898                           u3360 2686                           u3280 256A  
                         u3520 2246                           u3440 1FD8                           u2800 1E90  
                         u2720 1DC8                           u2640 1C8E                           u2560 1BC8  
                         u2480 1A7E                           u3600 3112                           u4217 3B72  
                         u3361 2682                           u3281 2566                           u3521 2242  
                         u3441 1FD4                           u2801 1E8C                           u2721 1DC4  
                         u2641 1C8A                           u2561 1BC2                           u2481 1A7A  
                         u3601 310E                           u4137 42E0                           u3370 26B4  
                         u3290 258A                           u3530 2260                           u3450 1FE8  
                         u2810 1EA0                           u2730 1DD8                           u2650 1CAC  
                         u2570 1BCA                           u2490 1AC0                           u3610 3146  
                         u4307 3900                           u4227 39AC                           u4147 334A  
                         u3371 26B0                           u3291 2586                           u3531 225C  
                         u3451 1FE4                           u2811 1E9C                           u2731 1DD4  
                         u2651 1CA8                           u2491 1ABC                           u2900 423A  
                         u3540 22A8                           u3460 2162                           u3380 1F1E  
                         u2820 1EC0                           u2740 1DEA                           u2660 1CE4  
                         u2580 1BF2                           u3620 3174                           u3700 298C  
                         u2901 4236                           u4317 3E6E                           u4237 3BA4  
                         u4157 33E2                           u3541 22A4                           u3381 1F1A  
                         u2821 1EBC                           u2741 1DE6                           u2661 1CE0  
                         u2581 1BEE                           u3621 3170                           u3701 2988  
                         u2910 159A                           u3550 22D6                           u3470 21BC  
                         u3390 1F30                           u2830 1ED2                           u2750 1E00  
                         u2670 1D2A                           u2590 1C10                           u3630 3188  
                         u3710 29D6                           u2911 1596                           u4327 4362  
                         u4247 3BD0                           u4167 343A                           u3551 22D2  
                         u3471 21B8                           u3391 1F2C                           u2831 1ECE  
                         u2751 1DFC                           u2671 1D26                           u2591 1C0C  
                         u3631 3184                           u3615 313C                           u3711 29D2  
                         u2920 15D8                           u3560 2310                           u3480 21DC  
                         u2840 1EEE                           u2760 1E16                           u2680 1D60  
                         u3640 31B0                           u3720 29F4                           u3800 0EDE  
                         u2921 15D4                           u4257 3BFC                           u4177 34BE  
                         u3561 230C                           u3481 21D8                           u3465 2158  
                         u2841 1EEA                           u2761 1E12                           u2681 1D5C  
                         u3641 31AC                           u3721 29F0                           u3801 0EDA  
                         u2850 3230                           u2930 1632                           u3570 3774  
                         u3490 21EE                           u2770 1E2A                           u2690 1D70  
                         u3650 31D0                           u3730 2A04                           u3810 0F4E  
                         u2851 322C                           u2931 162E                           u4267 3A42  
                         u4187 3D6E                           u3571 3770                           u3491 21EA  
                         u2771 1E26                           u2691 1D6C                           u3651 31CC  
                         u3731 2A00                           u3811 0F4A                           u2860 326E  
                         u2940 1670                           u3900 2A8C                           u3580 37B2  
                         u2780 1E44                           u3660 31E0                           u3740 2A12  
                         u3820 0F94                           u2861 326A                           u2941 166C  
                         u4277 3C2C                           u4197 3B1A                           u3901 2A88  
                         u3581 37AE                           u2781 1E40                           u3661 31DC  
                         u3741 2A0E                           u3821 0F90                           u2870 328C  
                         u2950 16CE                           u3910 2AC2                           u3590 37E6  
                         u2790 1E7E                           u3750 2A4C                           u3670 28CC  
                         u3830 1002                           u2871 3288                           u2951 16CA  
                         u4287 3C58                           u3911 2ABE                           u3591 37E2  
                         u2791 1E7A                           u3751 2A48                           u3671 28C8  
                         u3831 0FFE                           u2880 32AC                           u2960 170C  
                         u3920 2AFA                           u3760 2A5A                           u3680 28DA  
                         u3840 104C                           u2881 32A8                           u2961 1708  
                         u4297 3C84                           u3921 2AF6                           u3761 2A56  
                         u3681 28D6                           u3841 1048                           u3770 4394  
                         u2890 32FC                           u2970 176A                           u3930 2B32  
                         u3690 2936                           u3850 10E6                           u3771 4390  
                         u2891 32F8                           u2971 1766                           u3931 2B2E  
                         u3691 2932                           u3851 10E2                           u3780 43AE  
                         u2980 17A8                           u3940 2B6A                           u3860 112C  
                         u3781 43AA                           u2981 17A4                           u3941 2B66  
                         u3861 1128                           u2990 1806                           u3950 2BA2  
                         u3870 1260                           u3790 0E98                           u2991 1802  
                         u3951 2B9E                           u3871 125C                           u3791 0E94  
                         u3960 2BDA                           u3880 12AA                           u3961 2BD6  
                         u3881 12A6                           u3890 1506                           u3970 274A  
                         u3891 1502                           u3971 2746                           u3980 277E  
                         u3981 277A                           u3990 2800                           u3991 27FC  
          reverseHalfSquare@mL 001B            reverseHalfSquare@mR 001D                           _dbuf 0150  
                         _main 26C8                           _prec 00DC                           fsr0h 000FEA  
                         fsr1h 000FE2                           indf0 000FEF                           fsr2h 000FDA  
                         fsr0l 000FE9                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           _stoa 2EBA                           btemp 005F  
                         _stop 3898                     _ClickLEDOn 4382                           prodh 000FF4  
                         prodl 000FF3                           start 002C                ___fldiv@new_exp 0043  
      __end_of_Yellow_rev1_R90 33F6         __end_of_color_read_Red 4068                __end_of_HighISR 002C  
                 ___param_bank 000000                __end_of_Red_R90 3D14                     _Hue2Colour 1554  
              __end_of_Right45 3B84               __end_of_LED_init 44BA                  ___fltol@sign1 0009  
              __end_of___fladd 1F02                          ?_main 0001                __end_of___fldiv 26C8  
                        STR_10 0E26                          STR_11 0E48                          STR_13 0E48  
              __end_of___flmul 232E                __end_of___flsub 428A                __end_of___fltol 3202  
                        ?_stoa 000A                 _LightBlue_L135 37F0                          ?_stop 0014  
              __end_of___lwdiv 3F08                          i2l630 0028                   vfpfcnvrt@fmt 0022  
                        _TMR0H 000FD4                          _TMR0L 000FD3        __end_of_sendCharSerial4 44AC  
   __end_of_I2C_2_Master_Start 44F0     __end_of_I2C_2_Master_Write 44C6                          _flags 00E0  
                        _fputc 35C0              fullSpeedReverse@i 0019                          _width 00DA  
                        _putch 450A                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          stoa@i 0018                          stoa@l 001C  
                        stoa@p 001E                          stoa@s 000C                          stoa@w 0016  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 41F6  
              __end_of_strncmp 35C0           __end_of_Color2String 434A        __end_of_color_read_Blue 4158  
        _I2C_2_Master_RepStart 44D2                ?_color_read_Red 0005                __initialization 3F08  
                 __end_of_main 28BA                   __end_of_stoa 2FF6                   __end_of_stop 393E  
              ??_rotate180left 0024         __end_of_LightBlue_L135 3898                         ??_main 005D  
                       ??_stoa 000E                         ??_stop 0018                  __activetblptr 000002  
                    ??_RGB2Hue 0059                  ??_Orange_R135 0025                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                _colour_read_all 2FF6  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l4412 000A  
                       i2l4414 001A                         i2l4416 0024                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 430C                         _RX4PPS 000E15  
                       _TX4REG 000EE4                    ?_ClickLEDOn 0001               __end_of___xxtofl 2A6E  
                    ??_Red_R90 0025                         _Left45 3B84                      ??_Right45 001E  
             _fullSpeedReverse 3E14               ?_Yellow_rev1_R90 0021                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0030                         ___flge 3202  
                       ___fleq 3746                      ??___fladd 0022                    ?_Hue2Colour 000D  
                       ___wmul 4408                      ??___fldiv 003A                  Orange_R135@mL 0021  
                    ??___flmul 0053                  Orange_R135@mR 0023                      ??___flsub 0032  
                    ??___fltol 0005                      ??___lwdiv 000B                     _TimerReset 44F0  
                       _colorf 0170                ?_LightBlue_L135 0021                         clear_0 3F4E  
                       clear_1 3F5A             fullSpeedReverse@mL 0014             fullSpeedReverse@mR 0016  
                       _motorL 00EA                         _motorR 00E1                         isa$std 000001  
                       _strlen 4158                         fputc@c 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         stoa@cp 001A                         stoa@fp 000A  
                       putch@c 0001               __end_of_vfprintf 4244                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0038  
                    ??_strncmp 0007               __end_of_turnLeft 3A6A                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 0016                   ___xxtofl@exp 0015  
                 ___xxtofl@val 000C                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
          __end_of_Orange_R135 3746                     __accesstop 0060        __end_of__initialization 3F60  
     __end_of_color_read_Clear 4108                fullSpeedAhead@i 0019              __end_of_Blue_T180 3FC6  
     __end_of_color_read_Green 40B8         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                    ?_LED_init 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 44C6                 __pcstackCOMRAM 0001                   __pidataBANK0 44FA  
                 __pidataBANK1 4503                  __end_of_fputc 368A              __end_of_Green_L90 3E14  
                __end_of_putch 450C                      RGB2Hue@cf 0057            __end_of_Timer0_init 4452  
                  _ForwardFlag 00FB        __end_of_colour_read_all 30FC                        ??_fputc 0005  
                      ??_putch 0001                     __pbssBANK0 00DA                     __pbssBANK1 0100  
                   ??_LED_init 0001                        ?_Left45 001A              _color_writetoaddr 4474  
                 _T2CLKCONbits 000FBF          __end_of_Colour2Action 2BF4                        ?___flge 0001  
                      ?___fleq 0001             ?_color_writetoaddr 0003                        ?___wmul 0001  
                  ?_TimerReset 0001            ??_color_writetoaddr 0004                        ?_strlen 0001  
                 _Color2String 430C                        _RGB2Hue 0E52                      ?___xxtofl 000C  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                    _Orange_R135 368A  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5        __end_of_Interrupts_init 44D2  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
    __end_of_color_writetoaddr 4494                        _Red_R90 3C94             _I2C_2_Master_Start 44E6  
                   _initUSART4 4452             _I2C_2_Master_Write 44BA                        _Right45 3AFA  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 442E        sendStringSerial4@string 0002                        ___fladd 1A42  
                      ___fldiv 232E                        ___flmul 1F02                        ___flsub 4244  
                      ___fltol 30FC            ?_I2C_2_Master_Start 0001                        ___lwdiv 3E94  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002A                   __psmallconst 0E00  
                      __pcinit 3F08                        __ramtop 0E00                      ?_turnLeft 0014  
                      __ptext0 26C8                        __ptext1 4452                        __ptext2 3A6A  
                      __ptext3 2FF6                        __ptext4 4018                        __ptext5 4068  
                      __ptext6 40B8                        __ptext7 4108                        __ptext8 44D2  
                      __ptext9 428A                        _maxTime 00DE                      _T2CONbits 000FBD  
             ?_colour_read_all 001A                     ??___xxtofl 0010                 Color2String@cf 0047  
     __end_of_fullSpeedReverse 3E94                      _T2HLTbits 000FBE                        _sprintf 41A8  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002                        _strncmp 34E2  
         end_of_initialization 3F60                        fputc@fp 0003                  _Pink_rev1_L90 33F6  
                __Lmediumconst 0000                   ??_ClickLEDOn 0001              ?_color_click_init 0001  
               __45drightdelay 00F7             ??_color_click_init 0005               ??_LightBlue_L135 0025  
            __end_of_vfpfcnvrt 2EBA              _reverseHalfSquare 3C0E                        postdec1 000FE5  
                      postdec2 000FDD                   ??_Hue2Colour 000F                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 0030  
           ?_reverseHalfSquare 001B                        strlen@a 0003                        strlen@s 0001  
        __end_of_rotate180left 4018                _initDCmotorsPWM 3A6A                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 39D4  
                  ___fladd@grs 0029            ??_reverseHalfSquare 001F             __end_of_ClickLEDOn 43B6  
                ___xxtofl@sign 0014                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016       color_writetoaddr@address 0004                      Red_R90@mL 0021  
                    Red_R90@mR 0023        ??_I2C_2_Master_RepStart 0002                 _movementMemory 0128  
           __end_of_Hue2Colour 1A42                 ?_Pink_rev1_L90 0021               ?_Interrupts_init 0001  
                  ___flmul@grs 0061                    _CCP1CONbits 000FAB              ?_color_read_Clear 0005  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
              Colour2Action@cf 0028      __end_of_reverseHalfSquare 3C94             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                      _Blue_T180 3F6E                 __end_of_Left45 3C0E  
                 _RGB2Hue$3132 006D                 __end_of___flge 3306                 __end_of___fleq 37F0  
               _fullSpeedAhead 3D14                    vfpfcnvrt@ap 0024                    vfpfcnvrt@fp 0020  
               __end_of___wmul 442E                      _Green_L90 3D94                      Right45@mL 001A  
                    Right45@mR 001C                 __end_of_strlen 41A8                     RGB2Hue@max 0071  
                   RGB2Hue@min 0073            color_read_Clear@tmp 000A            start_initialization 3F08  
                  __halfsquare 00F3                       ??_Left45 001E            color_read_Green@tmp 000A  
                   ?_Blue_T180 0024        __end_of_initDCmotorsPWM 3AFA                    vfprintf@fmt 002C  
       __end_of_fullSpeedAhead 3D94                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                   ??_TimerReset 0001                    __pdataBANK0 00F3  
                  __pdataBANK1 0186                       ??_strlen 0003                      ___fladd@a 001E  
                    ___fladd@b 001A                ClickLEDOn@power 0001                     ?_Green_L90 0021  
                    ___fldiv@a 0036                      ___fldiv@b 0032                       ?_RGB2Hue 0057  
                    ___flmul@a 004F                      ___flmul@b 004B                      ___flsub@a 002E  
                    ___flsub@b 002A                  __pcstackBANK0 0060                   ?_Orange_R135 0021  
              ??_Pink_rev1_L90 0025                       ?_HighISR 0001             __end_of_TimerReset 44FA  
                     ?_Red_R90 0021         Color2String@colourname 0049                       ?_Right45 001A  
             ___lwdiv@dividend 0007                   ?_Timer0_init 0001                ?_fullSpeedAhead 0014  
                    __pintcode 0008                       ?___fladd 001A                       ?___fldiv 0032  
                     ?___flmul 004B                       ?___flsub 002A                       ?___fltol 0001  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
              Pink_rev1_L90@mL 0021                Pink_rev1_L90@mR 0023                    __smallconst 0E00  
            _I2C_2_Master_Idle 43E0              _I2C_2_Master_Init 43B6              _I2C_2_Master_Read 428A  
                __45dleftdelay 00F9              _I2C_2_Master_Stop 44DC              ?_fullSpeedReverse 0014  
            ??_Yellow_rev1_R90 0025             ?_I2C_2_Master_Idle 0001                rotate180left@mL 0020  
              rotate180left@mR 0022             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0032             ??_fullSpeedReverse 0018  
                     ?_strncmp 0001           Hue2Colour@colourname 000F              colour_read_all@cf 001A  
                 Hue2Colour@cf 000D              _sendStringSerial4 434A            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
                     _LED_init 44AC             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR0bits 000E33  
                     i2u409_40 001A                       i2u409_41 0016                    ??_Blue_T180 0028  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001                       Left45@mL 001A  
                     Left45@mR 001C              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 2D60  
    __end_of_I2C_2_Master_Idle 4408      __end_of_I2C_2_Master_Init 43E0      __end_of_I2C_2_Master_Read 42CC  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 44E6                    ??_Green_L90 0025  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
                    _turnRight 393E                       __1square 00F5                      copy_data0 3F1C  
                    copy_data1 3F3C      __end_of_sendStringSerial4 4382  __end_of_I2C_2_Master_RepStart 44DC  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 2D60                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 002E                       __Lrparam 0000  
                   vfprintf@fp 002A                  _Colour2Action 2A6E                     ?_vfpfcnvrt 0020  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     sprintf@fmt 0034  
                  Blue_T180@mL 0024                    Blue_T180@mR 0026                       ___xxtofl 28BA  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4474                ___lwdiv@counter 000D                     ?_turnRight 0014  
                     __ptext10 42CC                       __ptext11 4474                       __ptext20 30FC  
                     __ptext12 44BA                       __ptext21 4244                       __ptext13 44DC  
                     __ptext30 3C94                       __ptext22 1A42                       __ptext14 44E6  
                     __ptext31 33F6                       __ptext23 1F02                       __ptext15 43E0  
                     __ptext40 3B84                       __ptext32 3D14                       __ptext24 3746  
                     __ptext16 43B6                       __ptext41 39D4                       __ptext33 368A  
                     __ptext25 232E                       __ptext17 442E                       __ptext50 41A8  
                     __ptext42 3C0E                       __ptext34 37F0                       __ptext26 44AC  
                     __ptext18 0E52                       __ptext51 41F6                       __ptext43 3898  
                     __ptext35 3D94                       __ptext27 44C6                       __ptext19 28BA  
                     __ptext60 1554                       __ptext52 2D60                       __ptext44 3E14  
                     __ptext36 3AFA                       __ptext28 2A6E                       __ptext61 3202  
                     __ptext53 34E2                       __ptext45 2BF4                       __ptext37 393E  
                     __ptext29 3306                       __ptext62 4382                       __ptext54 2EBA  
                     __ptext46 4408                       __ptext38 3F6E                       __ptext55 4158  
                     __ptext47 3E94                       __ptext39 3FC6                       __ptext56 35C0  
                     __ptext48 44F0                       __ptext57 450A                       __ptext49 430C  
                     __ptext58 434A                       __ptext59 4494                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
              Color2String@buf 0045               colour_read_all@B 0024               colour_read_all@C 0028  
             colour_read_all@G 0020               colour_read_all@R 001C                     turnRight@i 0018  
             LightBlue_L135@mL 0021               LightBlue_L135@mR 0023                      stoa@F1144 0186  
               ?_Colour2Action 0028                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 41F6                       main@data 0075  
            Yellow_rev1_R90@mL 0021              Yellow_rev1_R90@mR 0023                       main@wall 00D9  
                     _turnLeft 39D4                  ?_Color2String 0045                 _vfpfcnvrt$2827 0028  
                   _INTCONbits 000FF2                    _setMotorPWM 2BF4                       intlevel2 0000  
                    sprintf@ap 0038               ??_fullSpeedAhead 0018                      turnLeft@i 0018  
                    strncmp@_l 0001                      strncmp@_r 0003              ??_colour_read_all 001C  
              _Yellow_rev1_R90 3306                    ??_vfpfcnvrt 0026                       stoa@nuls 000F  
             _color_click_init 42CC                  _rotate180left 3FC6                 ??_Color2String 0049  
                     sprintf@f 003A                       sprintf@s 0032                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                    _timerMemory 0100                       strncmp@l 0008  
                     strncmp@n 0005                       strncmp@r 000A                    ??_turnRight 0018  
                ___fladd@signs 0026                     _TX4STAbits 000EE8          __end_of_Pink_rev1_L90 34E2  
              _sendCharSerial4 4494                   ___fladd@aexp 0027                   ___fladd@bexp 0028  
              ??_Colour2Action 002A  
