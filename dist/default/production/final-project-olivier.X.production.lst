

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 21:14:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 06/04/2022 GMT
    89                           ; 
    90                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18LF67K40 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123                           	psect	idataBANK0
   124   004914                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for __halfsquare
   128   004914  015E               	dw	350
   129                           
   130                           ;initializer for __1square
   131   004916  02BC               	dw	700
   132                           
   133                           ;initializer for __45drightdelay
   134   004918  0095               	dw	149
   135                           
   136                           ;initializer for __45dleftdelay
   137   00491A  0092               	dw	146
   138                           
   139                           ;initializer for _ForwardFlag
   140   00491C  01                 	db	1
   141                           
   142                           	psect	idataBANK1
   143   00491D                     __pidataBANK1:
   144                           	callstack 0
   145                           
   146                           ;initializer for stoa@F1144
   147   00491D  28                 	db	40
   148   00491E  6E                 	db	110
   149   00491F  75                 	db	117
   150   004920  6C                 	db	108
   151   004921  6C                 	db	108
   152   004922  29                 	db	41
   153   004923  00                 	db	0
   154   000000                     _TX4REG	set	3812
   155   000000                     _RC4STAbits	set	3815
   156   000000                     _SP4BRGH	set	3814
   157   000000                     _LATFbits	set	3966
   158   000000                     _LATDbits	set	3964
   159   000000                     _LATGbits	set	3967
   160   000000                     _TRISEbits	set	3973
   161   000000                     _TRISFbits	set	3974
   162   000000                     _CCPR2H	set	4006
   163   000000                     _CCPR1H	set	4010
   164   000000                     _SSP2CON2bits	set	3802
   165   000000                     _RX4PPS	set	3605
   166   000000                     _SSP2CLKPPS	set	3612
   167   000000                     _SSP2DATPPS	set	3613
   168   000000                     _ANSELDbits	set	3751
   169   000000                     _SSP2ADD	set	3798
   170   000000                     _SSP2CON1bits	set	3801
   171   000000                     _RC4REG	set	3811
   172   000000                     _SP4BRGL	set	3813
   173   000000                     _TX4STAbits	set	3816
   174   000000                     _BAUD4CONbits	set	3817
   175   000000                     _SSP2CON2	set	3802
   176   000000                     _TRISDbits	set	3972
   177   000000                     _CCPR4H	set	3873
   178   000000                     _CCPR3H	set	3877
   179   000000                     _SSP2STAT	set	3800
   180   000000                     _ANSELFbits	set	3764
   181   000000                     _SSP2BUF	set	3797
   182   000000                     _PIE0bits	set	3625
   183   000000                     _PIR4bits	set	3639
   184   000000                     _RC0PPS	set	3682
   185   000000                     _RC7PPS	set	3689
   186   000000                     _RD5PPS	set	3695
   187   000000                     _RE2PPS	set	3700
   188   000000                     _RD6PPS	set	3696
   189   000000                     _CCP1CONbits	set	4011
   190   000000                     _CCPTMRS0bits	set	4013
   191   000000                     _T2PR	set	4028
   192   000000                     _T2CONbits	set	4029
   193   000000                     _CCP2CONbits	set	4007
   194   000000                     _LATAbits	set	3961
   195   000000                     _CCP3CONbits	set	3878
   196   000000                     _LATCbits	set	3963
   197   000000                     _LATEbits	set	3965
   198   000000                     _TRISCbits	set	3971
   199   000000                     _CCP4CONbits	set	3874
   200   000000                     _TRISHbits	set	3976
   201   000000                     _TRISGbits	set	3975
   202   000000                     _PORTFbits	set	3982
   203   000000                     _TRISAbits	set	3969
   204   000000                     _LATHbits	set	3968
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _TMR0L	set	4051
   208   000000                     _TMR0H	set	4052
   209   000000                     _T0CON0bits	set	4053
   210   000000                     _T0CON1bits	set	4054
   211   000000                     _T2CLKCONbits	set	4031
   212   000000                     _T2HLTbits	set	4030
   213   000000                     _INTCONbits	set	4082
   214   000000                     _PIE4bits	set	3629
   215   000000                     _PIR0bits	set	3635
   216                           
   217                           	psect	smallconst
   218   000E00                     __psmallconst:
   219                           	callstack 0
   220   000E00  00                 	db	0
   221   000E01                     STR_1:
   222                           
   223                           ; BSR set to: 14
   224   000E01  43                 	db	67	;'C'
   225   000E02  6F                 	db	111	;'o'
   226   000E03  6C                 	db	108	;'l'
   227   000E04  6F                 	db	111	;'o'
   228   000E05  75                 	db	117	;'u'
   229   000E06  72                 	db	114	;'r'
   230   000E07  20                 	db	32
   231   000E08  69                 	db	105	;'i'
   232   000E09  73                 	db	115	;'s'
   233   000E0A  20                 	db	32
   234   000E0B  25                 	db	37
   235   000E0C  73                 	db	115	;'s'
   236   000E0D  20                 	db	32
   237   000E0E  20                 	db	32
   238   000E0F  0D                 	db	13
   239   000E10  00                 	db	0
   240   000E11                     STR_9:
   241                           
   242                           ; BSR set to: 14
   243   000E11  4C                 	db	76	;'L'
   244   000E12  69                 	db	105	;'i'
   245   000E13  67                 	db	103	;'g'
   246   000E14  68                 	db	104	;'h'
   247   000E15  74                 	db	116	;'t'
   248   000E16  20                 	db	32
   249   000E17  42                 	db	66	;'B'
   250   000E18  6C                 	db	108	;'l'
   251   000E19  75                 	db	117	;'u'
   252   000E1A  65                 	db	101	;'e'
   253   000E1B  00                 	db	0
   254   000E1C                     STR_5:
   255                           
   256                           ; BSR set to: 14
   257   000E1C  44                 	db	68	;'D'
   258   000E1D  61                 	db	97	;'a'
   259   000E1E  72                 	db	114	;'r'
   260   000E1F  6B                 	db	107	;'k'
   261   000E20  20                 	db	32
   262   000E21  42                 	db	66	;'B'
   263   000E22  6C                 	db	108	;'l'
   264   000E23  75                 	db	117	;'u'
   265   000E24  65                 	db	101	;'e'
   266   000E25  00                 	db	0
   267   000E26                     STR_10:
   268                           
   269                           ; BSR set to: 14
   270   000E26  45                 	db	69	;'E'
   271   000E27  67                 	db	103	;'g'
   272   000E28  67                 	db	103	;'g'
   273   000E29  73                 	db	115	;'s'
   274   000E2A  68                 	db	104	;'h'
   275   000E2B  65                 	db	101	;'e'
   276   000E2C  6C                 	db	108	;'l'
   277   000E2D  6C                 	db	108	;'l'
   278   000E2E  00                 	db	0
   279   000E2F                     STR_8:
   280                           
   281                           ; BSR set to: 14
   282   000E2F  4F                 	db	79	;'O'
   283   000E30  72                 	db	114	;'r'
   284   000E31  61                 	db	97	;'a'
   285   000E32  6E                 	db	110	;'n'
   286   000E33  67                 	db	103	;'g'
   287   000E34  65                 	db	101	;'e'
   288   000E35  00                 	db	0
   289   000E36                     STR_6:
   290                           
   291                           ; BSR set to: 14
   292   000E36  59                 	db	89	;'Y'
   293   000E37  65                 	db	101	;'e'
   294   000E38  6C                 	db	108	;'l'
   295   000E39  6C                 	db	108	;'l'
   296   000E3A  6F                 	db	111	;'o'
   297   000E3B  77                 	db	119	;'w'
   298   000E3C  00                 	db	0
   299   000E3D                     STR_4:
   300                           
   301                           ; BSR set to: 14
   302   000E3D  47                 	db	71	;'G'
   303   000E3E  72                 	db	114	;'r'
   304   000E3F  65                 	db	101	;'e'
   305   000E40  65                 	db	101	;'e'
   306   000E41  6E                 	db	110	;'n'
   307   000E42  00                 	db	0
   308   000E43                     STR_7:
   309                           
   310                           ; BSR set to: 14
   311   000E43  50                 	db	80	;'P'
   312   000E44  69                 	db	105	;'i'
   313   000E45  6E                 	db	110	;'n'
   314   000E46  6B                 	db	107	;'k'
   315   000E47  00                 	db	0
   316   000E48                     STR_11:
   317                           
   318                           ; BSR set to: 14
   319   000E48  6C                 	db	108	;'l'
   320   000E49  6C                 	db	108	;'l'
   321   000E4A  73                 	db	115	;'s'
   322   000E4B  00                 	db	0
   323   000E4C                     STR_3:
   324                           
   325                           ; BSR set to: 14
   326   000E4C  52                 	db	82	;'R'
   327   000E4D  65                 	db	101	;'e'
   328   000E4E  64                 	db	100	;'d'
   329   000E4F  00                 	db	0
   330   000E50  00                 	db	0	; dummy byte at the end
   331   000000                     
   332                           ; #config settings
   333                           
   334                           	psect	cinit
   335   0042B2                     __pcinit:
   336                           	callstack 0
   337   0042B2                     start_initialization:
   338                           	callstack 0
   339   0042B2                     __initialization:
   340                           	callstack 0
   341                           
   342                           ; Initialize objects allocated to BANK1 (7 bytes)
   343                           ; load TBLPTR registers with __pidataBANK1
   344   0042B2  0E1D               	movlw	low __pidataBANK1
   345   0042B4  6EF6               	movwf	tblptrl,c
   346   0042B6  0E49               	movlw	high __pidataBANK1
   347   0042B8  6EF7               	movwf	tblptrh,c
   348   0042BA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   349   0042BC  6EF8               	movwf	tblptru,c
   350   0042BE  EE01  F086         	lfsr	0,__pdataBANK1
   351   0042C2  EE10 F007          	lfsr	1,7
   352   0042C6                     copy_data0:
   353   0042C6  0009               	tblrd		*+
   354   0042C8  CFF5 FFEE          	movff	tablat,postinc0
   355   0042CC  50E5               	movf	postdec1,w,c
   356   0042CE  50E1               	movf	fsr1l,w,c
   357   0042D0  E1FA               	bnz	copy_data0
   358                           
   359                           ; Initialize objects allocated to BANK0 (9 bytes)
   360                           ; load TBLPTR registers with __pidataBANK0
   361   0042D2  0E14               	movlw	low __pidataBANK0
   362   0042D4  6EF6               	movwf	tblptrl,c
   363   0042D6  0E49               	movlw	high __pidataBANK0
   364   0042D8  6EF7               	movwf	tblptrh,c
   365   0042DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   366   0042DC  6EF8               	movwf	tblptru,c
   367   0042DE  EE00  F0F7         	lfsr	0,__pdataBANK0
   368   0042E2  EE10 F009          	lfsr	1,9
   369   0042E6                     copy_data1:
   370   0042E6  0009               	tblrd		*+
   371   0042E8  CFF5 FFEE          	movff	tablat,postinc0
   372   0042EC  50E5               	movf	postdec1,w,c
   373   0042EE  50E1               	movf	fsr1l,w,c
   374   0042F0  E1FA               	bnz	copy_data1
   375                           
   376                           ; Clear objects allocated to BANK1 (134 bytes)
   377   0042F2  EE01  F000         	lfsr	0,__pbssBANK1
   378   0042F6  0E86               	movlw	134
   379   0042F8                     clear_0:
   380   0042F8  6AEE               	clrf	postinc0,c
   381   0042FA  06E8               	decf	wreg,f,c
   382   0042FC  E1FD               	bnz	clear_0
   383                           
   384                           ; Clear objects allocated to BANK0 (29 bytes)
   385   0042FE  EE00  F0DA         	lfsr	0,__pbssBANK0
   386   004302  0E1D               	movlw	29
   387   004304                     clear_1:
   388   004304  6AEE               	clrf	postinc0,c
   389   004306  06E8               	decf	wreg,f,c
   390   004308  E1FD               	bnz	clear_1
   391   00430A                     end_of_initialization:
   392                           	callstack 0
   393   00430A                     __end_of__initialization:
   394                           	callstack 0
   395   00430A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   396   00430C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397   00430E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   398   004310  6EF8               	movwf	tblptru,c
   399   004312  0100               	movlb	0
   400   004314  EF08  F015         	goto	_main	;jump to C main() function
   401                           
   402                           	psect	bssBANK0
   403   0000DA                     __pbssBANK0:
   404                           	callstack 0
   405   0000DA                     _width:
   406                           	callstack 0
   407   0000DA                     	ds	2
   408   0000DC                     _prec:
   409                           	callstack 0
   410   0000DC                     	ds	2
   411   0000DE                     _retracingDone:
   412                           	callstack 0
   413   0000DE                     	ds	2
   414   0000E0                     _movementCount:
   415                           	callstack 0
   416   0000E0                     	ds	2
   417   0000E2                     _maxTime:
   418                           	callstack 0
   419   0000E2                     	ds	2
   420   0000E4                     _flags:
   421                           	callstack 0
   422   0000E4                     	ds	1
   423   0000E5                     _motorR:
   424                           	callstack 0
   425   0000E5                     	ds	9
   426   0000EE                     _motorL:
   427                           	callstack 0
   428   0000EE                     	ds	9
   429                           
   430                           	psect	dataBANK0
   431   0000F7                     __pdataBANK0:
   432                           	callstack 0
   433   0000F7                     __halfsquare:
   434                           	callstack 0
   435   0000F7                     	ds	2
   436   0000F9                     __1square:
   437                           	callstack 0
   438   0000F9                     	ds	2
   439   0000FB                     __45drightdelay:
   440                           	callstack 0
   441   0000FB                     	ds	2
   442   0000FD                     __45dleftdelay:
   443                           	callstack 0
   444   0000FD                     	ds	2
   445   0000FF                     _ForwardFlag:
   446                           	callstack 0
   447   0000FF                     	ds	1
   448                           
   449                           	psect	bssBANK1
   450   000100                     __pbssBANK1:
   451                           	callstack 0
   452   000100                     	ds	32
   453   000120                     _timerMemory:
   454                           	callstack 0
   455   000120                     	ds	40
   456   000148                     _movementMemory:
   457                           	callstack 0
   458   000148                     	ds	40
   459   000170                     _colorf:
   460                           	callstack 0
   461   000170                     	ds	22
   462                           
   463                           	psect	dataBANK1
   464   000186                     __pdataBANK1:
   465                           	callstack 0
   466   000186                     stoa@F1144:
   467                           	callstack 0
   468   000186                     	ds	7
   469                           
   470                           	psect	cstackBANK0
   471   000060                     __pcstackBANK0:
   472                           	callstack 0
   473   000060                     ___flmul@sign:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x0
   477   000060                     	ds	1
   478   000061                     ___flmul@grs:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x1
   482   000061                     	ds	4
   483   000065                     ___flmul@aexp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x5
   487   000065                     	ds	1
   488   000066                     ___flmul@bexp:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x6
   492   000066                     	ds	1
   493   000067                     ___flmul@prod:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x7
   497   000067                     	ds	4
   498   00006B                     ___flmul@temp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xB
   502   00006B                     	ds	2
   503   00006D                     _RGB2Hue$3148:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0xD
   507   00006D                     	ds	4
   508   000071                     RGB2Hue@max:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x11
   512   000071                     	ds	2
   513   000073                     RGB2Hue@min:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x13
   517   000073                     	ds	2
   518   000075                     main@data:
   519                           	callstack 0
   520                           
   521                           ; 100 bytes @ 0x15
   522   000075                     	ds	100
   523   0000D9                     main@wall:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x79
   527   0000D9                     	ds	1
   528                           
   529                           	psect	cstackCOMRAM
   530   000001                     __pcstackCOMRAM:
   531                           	callstack 0
   532   000001                     ??_I2C_2_Master_Idle:
   533   000001                     ?_getTimerValue:
   534                           	callstack 0
   535   000001                     ?_strlen:
   536                           	callstack 0
   537   000001                     ?_strncmp:
   538                           	callstack 0
   539   000001                     ?___wmul:
   540                           	callstack 0
   541   000001                     ?___fltol:
   542                           	callstack 0
   543   000001                     sendCharSerial4@charToSend:
   544                           	callstack 0
   545   000001                     ClickLEDOn@power:
   546                           	callstack 0
   547   000001                     initDCmotorsPWM@PWMperiod:
   548                           	callstack 0
   549   000001                     ___wmul@multiplier:
   550                           	callstack 0
   551   000001                     fputc@c:
   552                           	callstack 0
   553   000001                     strlen@s:
   554                           	callstack 0
   555   000001                     strncmp@_l:
   556                           	callstack 0
   557   000001                     ___fleq@ff1:
   558                           	callstack 0
   559   000001                     ___flge@ff1:
   560                           	callstack 0
   561   000001                     ___fltol@f1:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x0
   565   000001                     	ds	1
   566   000002                     ??_I2C_2_Master_Read:
   567   000002                     I2C_2_Master_Write@data_byte:
   568                           	callstack 0
   569   000002                     sendStringSerial4@string:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1
   573   000002                     	ds	1
   574   000003                     ??_getTimerValue:
   575   000003                     I2C_2_Master_Read@ack:
   576                           	callstack 0
   577   000003                     color_writetoaddr@value:
   578                           	callstack 0
   579   000003                     ___wmul@multiplicand:
   580                           	callstack 0
   581   000003                     fputc@fp:
   582                           	callstack 0
   583   000003                     strlen@a:
   584                           	callstack 0
   585   000003                     strncmp@_r:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x2
   589   000003                     	ds	1
   590   000004                     I2C_2_Master_Read@tmp:
   591                           	callstack 0
   592   000004                     color_writetoaddr@address:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x3
   596   000004                     	ds	1
   597   000005                     ??_color_click_init:
   598   000005                     ??_fputc:
   599   000005                     ??___fltol:
   600   000005                     ?_color_read_Red:
   601                           	callstack 0
   602   000005                     ?_color_read_Green:
   603                           	callstack 0
   604   000005                     ?_color_read_Blue:
   605                           	callstack 0
   606   000005                     ?_color_read_Clear:
   607                           	callstack 0
   608   000005                     getTimerValue@timerCount:
   609                           	callstack 0
   610   000005                     ___wmul@product:
   611                           	callstack 0
   612   000005                     strncmp@n:
   613                           	callstack 0
   614   000005                     ___fleq@ff2:
   615                           	callstack 0
   616   000005                     ___flge@ff2:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x4
   620   000005                     	ds	2
   621   000007                     ??_strncmp:
   622   000007                     ??_color_read_Red:
   623   000007                     ??_color_read_Green:
   624   000007                     ??_color_read_Blue:
   625   000007                     ??_color_read_Clear:
   626   000007                     ?___lwdiv:
   627                           	callstack 0
   628   000007                     memoryUpdate@cf:
   629                           	callstack 0
   630   000007                     ___lwdiv@dividend:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x6
   634   000007                     	ds	1
   635   000008                     strncmp@l:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x7
   639   000008                     	ds	1
   640   000009                     ??___fleq:
   641   000009                     ??___flge:
   642   000009                     ___fltol@sign1:
   643                           	callstack 0
   644   000009                     memoryUpdate@movementCount:
   645                           	callstack 0
   646   000009                     ___lwdiv@divisor:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x8
   650   000009                     	ds	1
   651   00000A                     ___fltol@exp1:
   652                           	callstack 0
   653   00000A                     color_read_Red@tmp:
   654                           	callstack 0
   655   00000A                     color_read_Green@tmp:
   656                           	callstack 0
   657   00000A                     color_read_Blue@tmp:
   658                           	callstack 0
   659   00000A                     color_read_Clear@tmp:
   660                           	callstack 0
   661   00000A                     stoa@fp:
   662                           	callstack 0
   663   00000A                     strncmp@r:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x9
   667   00000A                     	ds	1
   668   00000B                     memoryUpdate@movementMemory:
   669                           	callstack 0
   670   00000B                     ___lwdiv@quotient:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0xA
   674   00000B                     	ds	1
   675   00000C                     ?___xxtofl:
   676                           	callstack 0
   677   00000C                     stoa@s:
   678                           	callstack 0
   679   00000C                     ___xxtofl@val:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0xB
   683   00000C                     	ds	1
   684   00000D                     ?_Hue2Colour:
   685                           	callstack 0
   686   00000D                     ___lwdiv@counter:
   687                           	callstack 0
   688   00000D                     memoryUpdate@timerMemory:
   689                           	callstack 0
   690   00000D                     Hue2Colour@cf:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0xC
   694   00000D                     	ds	1
   695   00000E                     ??_stoa:
   696   00000E                     setMotorPWM@m:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0xD
   700   00000E                     	ds	1
   701   00000F                     memoryUpdate@colourcode:
   702                           	callstack 0
   703   00000F                     Hue2Colour@colourname:
   704                           	callstack 0
   705   00000F                     stoa@nuls:
   706                           	callstack 0
   707                           
   708                           ; 7 bytes @ 0xE
   709   00000F                     	ds	1
   710   000010                     ??_setMotorPWM:
   711   000010                     ??___xxtofl:
   712                           
   713                           ; 1 bytes @ 0xF
   714   000010                     	ds	1
   715   000011                     memoryUpdate@timerVal:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719   000011                     	ds	1
   720   000012                     setMotorPWM@posDuty:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x11
   724   000012                     	ds	1
   725   000013                     setMotorPWM@negDuty:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x12
   729   000013                     	ds	1
   730   000014                     ___xxtofl@sign:
   731                           	callstack 0
   732   000014                     stop@mL:
   733                           	callstack 0
   734   000014                     turnLeft@mL:
   735                           	callstack 0
   736   000014                     turnRight@mL:
   737                           	callstack 0
   738   000014                     fullSpeedAhead@mL:
   739                           	callstack 0
   740   000014                     fullSpeedReverse@mL:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x13
   744   000014                     	ds	1
   745   000015                     ___xxtofl@exp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x14
   749   000015                     	ds	1
   750   000016                     stop@mR:
   751                           	callstack 0
   752   000016                     turnLeft@mR:
   753                           	callstack 0
   754   000016                     turnRight@mR:
   755                           	callstack 0
   756   000016                     fullSpeedAhead@mR:
   757                           	callstack 0
   758   000016                     fullSpeedReverse@mR:
   759                           	callstack 0
   760   000016                     stoa@w:
   761                           	callstack 0
   762   000016                     ___xxtofl@arg:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x15
   766   000016                     	ds	2
   767   000018                     ??_fullSpeedAhead:
   768   000018                     ??_stop:
   769   000018                     ??_fullSpeedReverse:
   770   000018                     turnLeft@i:
   771                           	callstack 0
   772   000018                     turnRight@i:
   773                           	callstack 0
   774   000018                     stoa@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x17
   778   000018                     	ds	1
   779   000019                     fullSpeedAhead@i:
   780                           	callstack 0
   781   000019                     fullSpeedReverse@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x18
   785   000019                     	ds	1
   786   00001A                     ?___fladd:
   787                           	callstack 0
   788   00001A                     Left45@mL:
   789                           	callstack 0
   790   00001A                     Right45@mL:
   791                           	callstack 0
   792   00001A                     colour_read_all@cf:
   793                           	callstack 0
   794   00001A                     stoa@cp:
   795                           	callstack 0
   796   00001A                     ___fladd@b:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x19
   800   00001A                     	ds	1
   801   00001B                     reverseHalfSquare@mL:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x1A
   805   00001B                     	ds	1
   806   00001C                     Left45@mR:
   807                           	callstack 0
   808   00001C                     Right45@mR:
   809                           	callstack 0
   810   00001C                     stoa@l:
   811                           	callstack 0
   812   00001C                     colour_read_all@R:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x1B
   816   00001C                     	ds	1
   817   00001D                     reverseHalfSquare@mR:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x1C
   821   00001D                     	ds	1
   822   00001E                     ??_Left45:
   823   00001E                     ??_Right45:
   824   00001E                     stoa@p:
   825                           	callstack 0
   826   00001E                     ___fladd@a:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x1D
   830   00001E                     	ds	1
   831   00001F                     ??_reverseHalfSquare:
   832                           
   833                           ; 1 bytes @ 0x1E
   834   00001F                     	ds	1
   835   000020                     rotate180left@mL:
   836                           	callstack 0
   837   000020                     vfpfcnvrt@fp:
   838                           	callstack 0
   839   000020                     colour_read_all@G:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x1F
   843   000020                     	ds	1
   844   000021                     Red_R90@mL:
   845                           	callstack 0
   846   000021                     Green_L90@mL:
   847                           	callstack 0
   848   000021                     Yellow_rev1_R90@mL:
   849                           	callstack 0
   850   000021                     Pink_rev1_L90@mL:
   851                           	callstack 0
   852   000021                     Orange_R135@mL:
   853                           	callstack 0
   854   000021                     LightBlue_L135@mL:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x20
   858   000021                     	ds	1
   859   000022                     ??___fladd:
   860   000022                     rotate180left@mR:
   861                           	callstack 0
   862   000022                     vfpfcnvrt@fmt:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x21
   866   000022                     	ds	1
   867   000023                     Red_R90@mR:
   868                           	callstack 0
   869   000023                     Green_L90@mR:
   870                           	callstack 0
   871   000023                     Yellow_rev1_R90@mR:
   872                           	callstack 0
   873   000023                     Pink_rev1_L90@mR:
   874                           	callstack 0
   875   000023                     Orange_R135@mR:
   876                           	callstack 0
   877   000023                     LightBlue_L135@mR:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x22
   881   000023                     	ds	1
   882   000024                     Blue_T180@mL:
   883                           	callstack 0
   884   000024                     vfpfcnvrt@ap:
   885                           	callstack 0
   886   000024                     colour_read_all@B:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x23
   890   000024                     	ds	1
   891   000025                     ??_Yellow_rev1_R90:
   892   000025                     ??_Pink_rev1_L90:
   893   000025                     
   894                           ; 1 bytes @ 0x24
   895   000025                     	ds	1
   896   000026                     ??_vfpfcnvrt:
   897   000026                     ___fladd@signs:
   898                           	callstack 0
   899   000026                     Blue_T180@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x25
   903   000026                     	ds	1
   904   000027                     ___fladd@aexp:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x26
   908   000027                     	ds	1
   909   000028                     ___fladd@bexp:
   910                           	callstack 0
   911   000028                     White@mL:
   912                           	callstack 0
   913   000028                     _vfpfcnvrt$2847:
   914                           	callstack 0
   915   000028                     colour_read_all@C:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x27
   919   000028                     	ds	1
   920   000029                     ___fladd@grs:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x28
   924   000029                     	ds	1
   925   00002A                     ?_vfprintf:
   926                           	callstack 0
   927   00002A                     ?___flsub:
   928                           	callstack 0
   929   00002A                     White@mR:
   930                           	callstack 0
   931   00002A                     vfprintf@fp:
   932                           	callstack 0
   933   00002A                     ___flsub@b:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x29
   937   00002A                     	ds	2
   938   00002C                     White@movementCount:
   939                           	callstack 0
   940   00002C                     vfprintf@fmt:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x2B
   944   00002C                     	ds	2
   945   00002E                     White@movementMemory:
   946                           	callstack 0
   947   00002E                     vfprintf@ap:
   948                           	callstack 0
   949   00002E                     ___flsub@a:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x2D
   953   00002E                     	ds	2
   954   000030                     White@timerMemory:
   955                           	callstack 0
   956   000030                     vfprintf@cfmt:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x2F
   960   000030                     	ds	2
   961   000032                     ??_White:
   962   000032                     ?_sprintf:
   963                           	callstack 0
   964   000032                     ?___fldiv:
   965                           	callstack 0
   966   000032                     sprintf@s:
   967                           	callstack 0
   968   000032                     ___fldiv@b:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x31
   972   000032                     	ds	2
   973   000034                     White@tempTimer:
   974                           	callstack 0
   975   000034                     sprintf@fmt:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x33
   979   000034                     	ds	2
   980   000036                     White@i:
   981                           	callstack 0
   982   000036                     ___fldiv@a:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x35
   986   000036                     	ds	2
   987   000038                     Colour2Action@cf:
   988                           	callstack 0
   989   000038                     sprintf@ap:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x37
   993   000038                     	ds	2
   994   00003A                     ??___fldiv:
   995   00003A                     sprintf@f:
   996                           	callstack 0
   997                           
   998                           ; 11 bytes @ 0x39
   999   00003A                     	ds	4
  1000   00003E                     ___fldiv@rem:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x3D
  1004   00003E                     	ds	4
  1005   000042                     ___fldiv@sign:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x41
  1009   000042                     	ds	1
  1010   000043                     ___fldiv@new_exp:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x42
  1014   000043                     	ds	2
  1015   000045                     Color2String@buf:
  1016                           	callstack 0
  1017   000045                     ___fldiv@grs:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x44
  1021   000045                     	ds	2
  1022   000047                     Color2String@cf:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x46
  1026   000047                     	ds	2
  1027   000049                     ___fldiv@bexp:
  1028                           	callstack 0
  1029   000049                     Color2String@colourname:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x48
  1033   000049                     	ds	1
  1034   00004A                     ___fldiv@aexp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x49
  1038   00004A                     	ds	1
  1039   00004B                     ?___flmul:
  1040                           	callstack 0
  1041   00004B                     ___flmul@b:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x4A
  1045   00004B                     	ds	4
  1046   00004F                     ___flmul@a:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x4E
  1050   00004F                     	ds	4
  1051   000053                     ??___flmul:
  1052                           
  1053                           ; 1 bytes @ 0x52
  1054   000053                     	ds	4
  1055   000057                     RGB2Hue@cf:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x56
  1059   000057                     	ds	2
  1060   000059                     ??_RGB2Hue:
  1061                           
  1062                           ; 1 bytes @ 0x58
  1063   000059                     	ds	4
  1064   00005D                     ??_main:
  1065                           
  1066                           ; 1 bytes @ 0x5C
  1067   00005D                     	ds	2
  1068                           
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 19 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  data          100   21[BANK0 ] unsigned char [100]
  1079 ;;  buf            20    0        unsigned char [20]
  1080 ;;  PWMcycle        2    0        unsigned int 
  1081 ;;  wall            1  121[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Totals:         2     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;Total ram usage:      103 bytes
  1096 ;; Hardware stack levels required when called: 9
  1097 ;; This function calls:
  1098 ;;		_ClickLEDOn
  1099 ;;		_Color2String
  1100 ;;		_Colour2Action
  1101 ;;		_Hue2Colour
  1102 ;;		_I2C_2_Master_Init
  1103 ;;		_Interrupts_init
  1104 ;;		_LED_init
  1105 ;;		_RGB2Hue
  1106 ;;		_Timer0_init
  1107 ;;		_TimerReset
  1108 ;;		___flge
  1109 ;;		_color_click_init
  1110 ;;		_colour_read_all
  1111 ;;		_fullSpeedAhead
  1112 ;;		_initDCmotorsPWM
  1113 ;;		_initUSART4
  1114 ;;		_memoryUpdate
  1115 ;;		_stop
  1116 ;; This function is called by:
  1117 ;;		Startup code after reset
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text0
  1122   002A10                     __ptext0:
  1123                           	callstack 0
  1124   002A10                     _main:
  1125                           	callstack 22
  1126   002A10                     
  1127                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1128   002A10  EC27  F024         	call	_initUSART4	;wreg free
  1129   002A14                     
  1130                           ;main.c: 23:     color_click_init();
  1131   002A14  EC64  F023         	call	_color_click_init	;wreg free
  1132   002A18                     
  1133                           ;main.c: 24:     I2C_2_Master_Init();
  1134   002A18  ECD9  F023         	call	_I2C_2_Master_Init	;wreg free
  1135   002A1C                     
  1136                           ;main.c: 25:     LED_init();
  1137   002A1C  EC63  F024         	call	_LED_init	;wreg free
  1138   002A20                     
  1139                           ;main.c: 26:     Interrupts_init();
  1140   002A20  EC70  F024         	call	_Interrupts_init	;wreg free
  1141   002A24                     
  1142                           ;main.c: 27:     Timer0_init();
  1143   002A24  EC15  F024         	call	_Timer0_init	;wreg free
  1144   002A28                     
  1145                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1146   002A28  0E00               	movlw	0
  1147   002A2A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1148   002A2C  0E63               	movlw	99
  1149   002A2E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1150   002A30  EC0F  F01F         	call	_initDCmotorsPWM	;wreg free
  1151   002A34                     
  1152                           ;main.c: 31:     motorL.power=0;
  1153   002A34  0E00               	movlw	0
  1154   002A36  0100               	movlb	0	; () banked
  1155   002A38  6FEE               	movwf	_motorL& (0+255),b
  1156   002A3A                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 32:     motorL.direction=1;
  1159   002A3A  0E01               	movlw	1
  1160   002A3C  6FEF               	movwf	(_motorL+1)& (0+255),b
  1161   002A3E                     
  1162                           ; BSR set to: 0
  1163                           ;main.c: 33:     motorL.brakemode=1;
  1164   002A3E  0E01               	movlw	1
  1165   002A40  6FF0               	movwf	(_motorL+2)& (0+255),b
  1166   002A42                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1169   002A42  0EAA               	movlw	170
  1170   002A44  6FF3               	movwf	(_motorL+5)& (0+255),b
  1171   002A46  0E0F               	movlw	15
  1172   002A48  6FF4               	movwf	(_motorL+6)& (0+255),b
  1173   002A4A                     
  1174                           ; BSR set to: 0
  1175                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1176   002A4A  0EA6               	movlw	166
  1177   002A4C  6FF5               	movwf	(_motorL+7)& (0+255),b
  1178   002A4E  0E0F               	movlw	15
  1179   002A50  6FF6               	movwf	(_motorL+8)& (0+255),b
  1180   002A52                     
  1181                           ; BSR set to: 0
  1182                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1183   002A52  0E00               	movlw	0
  1184   002A54  6FF2               	movwf	(_motorL+4)& (0+255),b
  1185   002A56  0E63               	movlw	99
  1186   002A58  6FF1               	movwf	(_motorL+3)& (0+255),b
  1187   002A5A                     
  1188                           ; BSR set to: 0
  1189                           ;main.c: 38:     motorR.power=0;
  1190   002A5A  0E00               	movlw	0
  1191   002A5C  6FE5               	movwf	_motorR& (0+255),b
  1192   002A5E                     
  1193                           ; BSR set to: 0
  1194                           ;main.c: 39:     motorR.direction=1;
  1195   002A5E  0E01               	movlw	1
  1196   002A60  6FE6               	movwf	(_motorR+1)& (0+255),b
  1197   002A62                     
  1198                           ; BSR set to: 0
  1199                           ;main.c: 40:     motorR.brakemode=1;
  1200   002A62  0E01               	movlw	1
  1201   002A64  6FE7               	movwf	(_motorR+2)& (0+255),b
  1202   002A66                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1205   002A66  0E25               	movlw	37
  1206   002A68  6FEA               	movwf	(_motorR+5)& (0+255),b
  1207   002A6A  0E0F               	movlw	15
  1208   002A6C  6FEB               	movwf	(_motorR+6)& (0+255),b
  1209   002A6E                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1212   002A6E  0E21               	movlw	33
  1213   002A70  6FEC               	movwf	(_motorR+7)& (0+255),b
  1214   002A72  0E0F               	movlw	15
  1215   002A74  6FED               	movwf	(_motorR+8)& (0+255),b
  1216   002A76                     
  1217                           ; BSR set to: 0
  1218                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1219   002A76  0E00               	movlw	0
  1220   002A78  6FE9               	movwf	(_motorR+4)& (0+255),b
  1221   002A7A  0E63               	movlw	99
  1222   002A7C  6FE8               	movwf	(_motorR+3)& (0+255),b
  1223   002A7E                     
  1224                           ; BSR set to: 0
  1225                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1226   002A7E  8486               	bsf	134,2,c	;volatile
  1227   002A80                     
  1228                           ; BSR set to: 0
  1229                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1230   002A80  010E               	movlb	14	; () banked
  1231   002A82  95B4               	bcf	180,2,b	;volatile
  1232   002A84                     l129:
  1233                           
  1234                           ;main.c: 47:     while(PORTFbits.RF2){
  1235   002A84  B48E               	btfsc	142,2,c	;volatile
  1236   002A86  EF47  F015         	goto	u4151
  1237   002A8A  EF49  F015         	goto	u4150
  1238   002A8E                     u4151:
  1239   002A8E  EF42  F015         	goto	l129
  1240   002A92                     u4150:
  1241   002A92                     
  1242                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1243   002A92  0E29               	movlw	41
  1244   002A94  6E5E               	movwf	(??_main+1)^0,c
  1245   002A96  0E96               	movlw	150
  1246   002A98  6E5D               	movwf	??_main^0,c
  1247   002A9A  0E7F               	movlw	127
  1248   002A9C                     u4227:
  1249   002A9C  2EE8               	decfsz	wreg,f,c
  1250   002A9E  D7FE               	bra	u4227
  1251   002AA0  2E5D               	decfsz	??_main^0,f,c
  1252   002AA2  D7FC               	bra	u4227
  1253   002AA4  2E5E               	decfsz	(??_main+1)^0,f,c
  1254   002AA6  D7FA               	bra	u4227
  1255   002AA8  F000               	nop	
  1256   002AAA                     
  1257                           ;main.c: 50:     TimerReset();
  1258   002AAA  EC85  F024         	call	_TimerReset	;wreg free
  1259   002AAE                     
  1260                           ;main.c: 51:     char wall=0;
  1261   002AAE  0E00               	movlw	0
  1262   002AB0  0100               	movlb	0	; () banked
  1263   002AB2  6FD9               	movwf	main@wall& (0+255),b
  1264   002AB4                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 53:     ClickLEDOn(0);
  1267   002AB4  0E00               	movlw	0
  1268   002AB6  ECBF  F023         	call	_ClickLEDOn
  1269                           
  1270                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1271   002ABA  EF19  F016         	goto	l4492
  1272   002ABE                     l4446:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1276   002ABE  0EEE               	movlw	low _motorL
  1277   002AC0  6E14               	movwf	fullSpeedAhead@mL^0,c
  1278   002AC2  0E00               	movlw	high _motorL
  1279   002AC4  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1280   002AC6  0EE5               	movlw	low _motorR
  1281   002AC8  6E16               	movwf	fullSpeedAhead@mR^0,c
  1282   002ACA  0E00               	movlw	high _motorR
  1283   002ACC  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1284   002ACE  EC23  F020         	call	_fullSpeedAhead	;wreg free
  1285                           
  1286                           ;main.c: 59:         while (!wall){
  1287   002AD2  EFB0  F015         	goto	l4462
  1288   002AD6                     l4448:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;main.c: 60:             colour_read_all(&colorf);
  1292   002AD6  0E70               	movlw	low _colorf
  1293   002AD8  6E1A               	movwf	colour_read_all@cf^0,c
  1294   002ADA  0E01               	movlw	high _colorf
  1295   002ADC  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1296   002ADE  ECE9  F019         	call	_colour_read_all	;wreg free
  1297   002AE2                     
  1298                           ;main.c: 61:             Color2String(data,&colorf);
  1299   002AE2  0E75               	movlw	low main@data
  1300   002AE4  6E45               	movwf	Color2String@buf^0,c
  1301   002AE6  0E00               	movlw	high main@data
  1302   002AE8  6E46               	movwf	(Color2String@buf+1)^0,c
  1303   002AEA  0E70               	movlw	low _colorf
  1304   002AEC  6E47               	movwf	Color2String@cf^0,c
  1305   002AEE  0E01               	movlw	high _colorf
  1306   002AF0  6E48               	movwf	(Color2String@cf+1)^0,c
  1307   002AF2  EC84  F023         	call	_Color2String	;wreg free
  1308   002AF6                     
  1309                           ;main.c: 64:              if (colorf.Cf<50)
  1310   002AF6  C17C  F001         	movff	_colorf+12,___flge@ff1
  1311   002AFA  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1312   002AFE  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1313   002B02  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1314   002B06  0E00               	movlw	0
  1315   002B08  6E05               	movwf	___flge@ff2^0,c
  1316   002B0A  0E00               	movlw	0
  1317   002B0C  6E06               	movwf	(___flge@ff2+1)^0,c
  1318   002B0E  0E48               	movlw	72
  1319   002B10  6E07               	movwf	(___flge@ff2+2)^0,c
  1320   002B12  0E42               	movlw	66
  1321   002B14  6E08               	movwf	(___flge@ff2+3)^0,c
  1322   002B16  ECEF  F01A         	call	___flge	;wreg free
  1323   002B1A  B0D8               	btfsc	status,0,c
  1324   002B1C  EF92  F015         	goto	u4161
  1325   002B20  EF94  F015         	goto	u4160
  1326   002B24                     u4161:
  1327   002B24  EFB0  F015         	goto	l4462
  1328   002B28                     u4160:
  1329   002B28                     
  1330                           ;main.c: 65:              {;main.c: 73:                  wall=1;
  1331   002B28  0E01               	movlw	1
  1332   002B2A  0100               	movlb	0	; () banked
  1333   002B2C  6FD9               	movwf	main@wall& (0+255),b
  1334   002B2E                     
  1335                           ; BSR set to: 0
  1336                           ;main.c: 74:                  ClickLEDOn(1);
  1337   002B2E  0E01               	movlw	1
  1338   002B30  ECBF  F023         	call	_ClickLEDOn
  1339   002B34                     
  1340                           ;main.c: 75:                  stop(&motorL,&motorR);
  1341   002B34  0EEE               	movlw	low _motorL
  1342   002B36  6E14               	movwf	stop@mL^0,c
  1343   002B38  0E00               	movlw	high _motorL
  1344   002B3A  6E15               	movwf	(stop@mL+1)^0,c
  1345   002B3C  0EE5               	movlw	low _motorR
  1346   002B3E  6E16               	movwf	stop@mR^0,c
  1347   002B40  0E00               	movlw	high _motorR
  1348   002B42  6E17               	movwf	(stop@mR+1)^0,c
  1349   002B44  EC82  F01D         	call	_stop	;wreg free
  1350   002B48                     
  1351                           ;main.c: 76:                  _delay((unsigned long)((2000)*(64000000/4000.0)));
  1352   002B48  0EA3               	movlw	163
  1353   002B4A  6E5E               	movwf	(??_main+1)^0,c
  1354   002B4C  0E57               	movlw	87
  1355   002B4E  6E5D               	movwf	??_main^0,c
  1356   002B50  0E02               	movlw	2
  1357   002B52                     u4237:
  1358   002B52  2EE8               	decfsz	wreg,f,c
  1359   002B54  D7FE               	bra	u4237
  1360   002B56  2E5D               	decfsz	??_main^0,f,c
  1361   002B58  D7FC               	bra	u4237
  1362   002B5A  2E5E               	decfsz	(??_main+1)^0,f,c
  1363   002B5C  D7FA               	bra	u4237
  1364   002B5E  D000               	nop2	
  1365   002B60                     l4462:
  1366                           
  1367                           ;main.c: 59:         while (!wall){
  1368   002B60  0100               	movlb	0	; () banked
  1369   002B62  51D9               	movf	main@wall& (0+255),w,b
  1370   002B64  B4D8               	btfsc	status,2,c
  1371   002B66  EFB7  F015         	goto	u4171
  1372   002B6A  EFB9  F015         	goto	u4170
  1373   002B6E                     u4171:
  1374   002B6E  EF6B  F015         	goto	l4448
  1375   002B72                     u4170:
  1376   002B72                     
  1377                           ; BSR set to: 0
  1378                           ;main.c: 79:         colour_read_all(&colorf);
  1379   002B72  0E70               	movlw	low _colorf
  1380   002B74  6E1A               	movwf	colour_read_all@cf^0,c
  1381   002B76  0E01               	movlw	high _colorf
  1382   002B78  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1383   002B7A  ECE9  F019         	call	_colour_read_all	;wreg free
  1384   002B7E                     
  1385                           ;main.c: 80:         wall=0;
  1386   002B7E  0E00               	movlw	0
  1387   002B80  0100               	movlb	0	; () banked
  1388   002B82  6FD9               	movwf	main@wall& (0+255),b
  1389   002B84                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 81:         ClickLEDOn(0);
  1392   002B84  0E00               	movlw	0
  1393   002B86  ECBF  F023         	call	_ClickLEDOn
  1394   002B8A                     
  1395                           ;main.c: 82:         RGB2Hue(&colorf);
  1396   002B8A  0E70               	movlw	low _colorf
  1397   002B8C  6E57               	movwf	RGB2Hue@cf^0,c
  1398   002B8E  0E01               	movlw	high _colorf
  1399   002B90  6E58               	movwf	(RGB2Hue@cf+1)^0,c
  1400   002B92  EC29  F007         	call	_RGB2Hue	;wreg free
  1401   002B96                     
  1402                           ;main.c: 83:         Hue2Colour(&colorf);
  1403   002B96  0E70               	movlw	low _colorf
  1404   002B98  6E0D               	movwf	Hue2Colour@cf^0,c
  1405   002B9A  0E01               	movlw	high _colorf
  1406   002B9C  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1407   002B9E  ECAA  F00A         	call	_Hue2Colour	;wreg free
  1408   002BA2                     
  1409                           ;main.c: 84:         memoryUpdate(&colorf,movementCount,movementMemory,timerMemory);
  1410   002BA2  0E70               	movlw	low _colorf
  1411   002BA4  6E07               	movwf	memoryUpdate@cf^0,c
  1412   002BA6  0E01               	movlw	high _colorf
  1413   002BA8  6E08               	movwf	(memoryUpdate@cf+1)^0,c
  1414   002BAA  C0E0  F009         	movff	_movementCount,memoryUpdate@movementCount	;volatile
  1415   002BAE  C0E1  F00A         	movff	_movementCount+1,memoryUpdate@movementCount+1	;volatile
  1416   002BB2  0E48               	movlw	low _movementMemory
  1417   002BB4  6E0B               	movwf	memoryUpdate@movementMemory^0,c
  1418   002BB6  0E01               	movlw	high _movementMemory
  1419   002BB8  6E0C               	movwf	(memoryUpdate@movementMemory+1)^0,c
  1420   002BBA  0E20               	movlw	low _timerMemory
  1421   002BBC  6E0D               	movwf	memoryUpdate@timerMemory^0,c
  1422   002BBE  0E01               	movlw	high _timerMemory
  1423   002BC0  6E0E               	movwf	(memoryUpdate@timerMemory+1)^0,c
  1424   002BC2  EC8C  F021         	call	_memoryUpdate	;wreg free
  1425   002BC6                     
  1426                           ;main.c: 85:         Colour2Action(&colorf);
  1427   002BC6  0E70               	movlw	low _colorf
  1428   002BC8  6E38               	movwf	Colour2Action@cf^0,c
  1429   002BCA  0E01               	movlw	high _colorf
  1430   002BCC  6E39               	movwf	(Colour2Action@cf+1)^0,c
  1431   002BCE  EC25  F016         	call	_Colour2Action	;wreg free
  1432   002BD2                     
  1433                           ;main.c: 86:         if (colorf.colourindex == 7)
  1434   002BD2  0E07               	movlw	7
  1435   002BD4  0101               	movlb	1	; () banked
  1436   002BD6  1984               	xorwf	(_colorf+20)& (0+255),w,b
  1437   002BD8  1185               	iorwf	(_colorf+21)& (0+255),w,b
  1438   002BDA  A4D8               	btfss	status,2,c
  1439   002BDC  EFF2  F015         	goto	u4181
  1440   002BE0  EFF4  F015         	goto	u4180
  1441   002BE4                     u4181:
  1442   002BE4  EFFE  F015         	goto	l4484
  1443   002BE8                     u4180:
  1444   002BE8                     l4482:
  1445   002BE8  0100               	movlb	0	; () banked
  1446   002BEA  51DE               	movf	_retracingDone& (0+255),w,b	;volatile
  1447   002BEC  11DF               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1448   002BEE  B4D8               	btfsc	status,2,c
  1449   002BF0  EFFC  F015         	goto	u4191
  1450   002BF4  EFFE  F015         	goto	u4190
  1451   002BF8                     u4191:
  1452   002BF8  EFF4  F015         	goto	l4482
  1453   002BFC                     u4190:
  1454   002BFC                     l4484:
  1455                           
  1456                           ;main.c: 91:         TimerReset();
  1457   002BFC  EC85  F024         	call	_TimerReset	;wreg free
  1458   002C00                     
  1459                           ;main.c: 92:         movementCount++;
  1460   002C00  0100               	movlb	0	; () banked
  1461   002C02  4BE0               	infsnz	_movementCount& (0+255),f,b	;volatile
  1462   002C04  2BE1               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1463   002C06                     
  1464                           ; BSR set to: 0
  1465                           ;main.c: 99:         Color2String(data,&colorf);
  1466   002C06  0E75               	movlw	low main@data
  1467   002C08  6E45               	movwf	Color2String@buf^0,c
  1468   002C0A  0E00               	movlw	high main@data
  1469   002C0C  6E46               	movwf	(Color2String@buf+1)^0,c
  1470   002C0E  0E70               	movlw	low _colorf
  1471   002C10  6E47               	movwf	Color2String@cf^0,c
  1472   002C12  0E01               	movlw	high _colorf
  1473   002C14  6E48               	movwf	(Color2String@cf+1)^0,c
  1474   002C16  EC84  F023         	call	_Color2String	;wreg free
  1475   002C1A                     
  1476                           ;main.c: 100:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1477   002C1A  0E52               	movlw	82
  1478   002C1C  6E5E               	movwf	(??_main+1)^0,c
  1479   002C1E  0E2B               	movlw	43
  1480   002C20  6E5D               	movwf	??_main^0,c
  1481   002C22  0E00               	movlw	0
  1482   002C24                     u4247:
  1483   002C24  2EE8               	decfsz	wreg,f,c
  1484   002C26  D7FE               	bra	u4247
  1485   002C28  2E5D               	decfsz	??_main^0,f,c
  1486   002C2A  D7FC               	bra	u4247
  1487   002C2C  2E5E               	decfsz	(??_main+1)^0,f,c
  1488   002C2E  D7FA               	bra	u4247
  1489   002C30  D000               	nop2	
  1490   002C32                     l4492:
  1491                           
  1492                           ;main.c: 56:     while (!retracingDone){
  1493   002C32  0100               	movlb	0	; () banked
  1494   002C34  51DE               	movf	_retracingDone& (0+255),w,b	;volatile
  1495   002C36  11DF               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1496   002C38  B4D8               	btfsc	status,2,c
  1497   002C3A  EF21  F016         	goto	u4201
  1498   002C3E  EF23  F016         	goto	u4200
  1499   002C42                     u4201:
  1500   002C42  EF5F  F015         	goto	l4446
  1501   002C46                     u4200:
  1502   002C46                     
  1503                           ; BSR set to: 0
  1504   002C46  EF16  F000         	goto	start
  1505   002C4A                     __end_of_main:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _memoryUpdate *****************
  1509 ;; Defined at:
  1510 ;;		line 10 in file "memory.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  cf              2    6[COMRAM] PTR struct RGBC_rel
  1513 ;;		 -> colorf(22), 
  1514 ;;  movementCoun    2    8[COMRAM] unsigned int 
  1515 ;;  movementMemo    2   10[COMRAM] PTR volatile unsigned in
  1516 ;;		 -> movementMemory(40), 
  1517 ;;  timerMemory     2   12[COMRAM] PTR volatile unsigned in
  1518 ;;		 -> timerMemory(40), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  timerVal        2   16[COMRAM] unsigned int 
  1521 ;;  colourcode      2   14[COMRAM] int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1531 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1534 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;Total ram usage:       12 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 2
  1538 ;; This function calls:
  1539 ;;		_getTimerValue
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text1
  1546   004318                     __ptext1:
  1547                           	callstack 0
  1548   004318                     _memoryUpdate:
  1549                           	callstack 28
  1550   004318                     
  1551                           ;memory.c: 10: void memoryUpdate(struct RGBC_rel *cf, unsigned int movementCount, volati
      +                          le unsigned int *movementMemory, volatile unsigned int *timerMemory);memory.c: 11: {;mem
      +                          ory.c: 13:     int colourcode = cf->colourindex;
  1552   004318  EE20 F014          	lfsr	2,20
  1553   00431C  5007               	movf	memoryUpdate@cf^0,w,c
  1554   00431E  26D9               	addwf	fsr2l,f,c
  1555   004320  5008               	movf	(memoryUpdate@cf+1)^0,w,c
  1556   004322  22DA               	addwfc	fsr2h,f,c
  1557   004324  CFDE F00F          	movff	postinc2,memoryUpdate@colourcode
  1558   004328  CFDD F010          	movff	postdec2,memoryUpdate@colourcode+1
  1559   00432C                     
  1560                           ;memory.c: 15:     unsigned int timerVal = getTimerValue();
  1561   00432C  EC48  F024         	call	_getTimerValue	;wreg free
  1562   004330  C001  F011         	movff	?_getTimerValue,memoryUpdate@timerVal
  1563   004334  C002  F012         	movff	?_getTimerValue+1,memoryUpdate@timerVal+1
  1564   004338                     
  1565                           ;memory.c: 16:     timerMemory[movementCount] = timerVal;
  1566   004338  90D8               	bcf	status,0,c
  1567   00433A  3409               	rlcf	memoryUpdate@movementCount^0,w,c
  1568   00433C  6ED9               	movwf	fsr2l,c
  1569   00433E  340A               	rlcf	(memoryUpdate@movementCount+1)^0,w,c
  1570   004340  6EDA               	movwf	fsr2h,c
  1571   004342  500D               	movf	memoryUpdate@timerMemory^0,w,c
  1572   004344  26D9               	addwf	fsr2l,f,c
  1573   004346  500E               	movf	(memoryUpdate@timerMemory+1)^0,w,c
  1574   004348  22DA               	addwfc	fsr2h,f,c
  1575   00434A  C011  FFDE         	movff	memoryUpdate@timerVal,postinc2
  1576   00434E  C012  FFDD         	movff	memoryUpdate@timerVal+1,postdec2
  1577   004352                     
  1578                           ;memory.c: 17:     movementMemory[movementCount] = colourcode;
  1579   004352  90D8               	bcf	status,0,c
  1580   004354  3409               	rlcf	memoryUpdate@movementCount^0,w,c
  1581   004356  6ED9               	movwf	fsr2l,c
  1582   004358  340A               	rlcf	(memoryUpdate@movementCount+1)^0,w,c
  1583   00435A  6EDA               	movwf	fsr2h,c
  1584   00435C  500B               	movf	memoryUpdate@movementMemory^0,w,c
  1585   00435E  26D9               	addwf	fsr2l,f,c
  1586   004360  500C               	movf	(memoryUpdate@movementMemory+1)^0,w,c
  1587   004362  22DA               	addwfc	fsr2h,f,c
  1588   004364  C00F  FFDE         	movff	memoryUpdate@colourcode,postinc2
  1589   004368  C010  FFDD         	movff	memoryUpdate@colourcode+1,postdec2
  1590   00436C  0012               	return		;funcret
  1591   00436E                     __end_of_memoryUpdate:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _initUSART4 *****************
  1595 ;; Defined at:
  1596 ;;		line 7 in file "serial.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text2
  1625   00484E                     __ptext2:
  1626                           	callstack 0
  1627   00484E                     _initUSART4:
  1628                           	callstack 29
  1629   00484E                     
  1630                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1631   00484E  8883               	bsf	131,4,c	;volatile
  1632                           
  1633                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1634   004850  8283               	bsf	131,1,c	;volatile
  1635   004852                     
  1636                           ;serial.c: 10:     RC0PPS = 0x12;
  1637   004852  0E12               	movlw	18
  1638   004854  010E               	movlb	14	; () banked
  1639   004856  6F62               	movwf	98,b	;volatile
  1640                           
  1641                           ;serial.c: 11:     RX4PPS = 0x11;
  1642   004858  0E11               	movlw	17
  1643   00485A  6F15               	movwf	21,b	;volatile
  1644   00485C                     
  1645                           ; BSR set to: 14
  1646                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1647   00485C  97E9               	bcf	233,3,b	;volatile
  1648   00485E                     
  1649                           ; BSR set to: 14
  1650                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1651   00485E  95E8               	bcf	232,2,b	;volatile
  1652                           
  1653                           ;serial.c: 15:     SP4BRGL = 51;
  1654   004860  0E33               	movlw	51
  1655   004862  6FE5               	movwf	229,b	;volatile
  1656                           
  1657                           ;serial.c: 16:     SP4BRGH = 0;
  1658   004864  0E00               	movlw	0
  1659   004866  6FE6               	movwf	230,b	;volatile
  1660   004868                     
  1661                           ; BSR set to: 14
  1662                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1663   004868  89E7               	bsf	231,4,b	;volatile
  1664   00486A                     
  1665                           ; BSR set to: 14
  1666                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1667   00486A  8BE8               	bsf	232,5,b	;volatile
  1668   00486C                     
  1669                           ; BSR set to: 14
  1670                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1671   00486C  8FE7               	bsf	231,7,b	;volatile
  1672   00486E                     
  1673                           ; BSR set to: 14
  1674   00486E  0012               	return		;funcret
  1675   004870                     __end_of_initUSART4:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _initDCmotorsPWM *****************
  1679 ;; Defined at:
  1680 ;;		line 11 in file "dc_motor.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;Total ram usage:        2 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text3
  1709   003E1E                     __ptext3:
  1710                           	callstack 0
  1711   003E1E                     _initDCmotorsPWM:
  1712                           	callstack 29
  1713   003E1E                     
  1714                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1715   003E1E  9485               	bcf	133,2,c	;volatile
  1716                           
  1717                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1718   003E20  9E83               	bcf	131,7,c	;volatile
  1719                           
  1720                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1721   003E22  9885               	bcf	133,4,c	;volatile
  1722                           
  1723                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1724   003E24  9C87               	bcf	135,6,c	;volatile
  1725                           
  1726                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1727   003E26  947D               	bcf	125,2,c	;volatile
  1728                           
  1729                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1730   003E28  9E7B               	bcf	123,7,c	;volatile
  1731                           
  1732                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1733   003E2A  987D               	bcf	125,4,c	;volatile
  1734                           
  1735                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1736   003E2C  9C7F               	bcf	127,6,c	;volatile
  1737   003E2E                     
  1738                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1739   003E2E  0E05               	movlw	5
  1740   003E30  010E               	movlb	14	; () banked
  1741   003E32  6F74               	movwf	116,b	;volatile
  1742                           
  1743                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1744   003E34  0E06               	movlw	6
  1745   003E36  6F76               	movwf	118,b	;volatile
  1746                           
  1747                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1748   003E38  0E07               	movlw	7
  1749   003E3A  6F69               	movwf	105,b	;volatile
  1750                           
  1751                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1752   003E3C  0E08               	movlw	8
  1753   003E3E  6F88               	movwf	136,b	;volatile
  1754                           
  1755                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1756   003E40  50BD               	movf	189,w,c	;volatile
  1757   003E42  0B8F               	andlw	-113
  1758   003E44  0940               	iorlw	64
  1759   003E46  6EBD               	movwf	189,c	;volatile
  1760                           
  1761                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1762   003E48  0EE0               	movlw	-32
  1763   003E4A  16BE               	andwf	190,f,c	;volatile
  1764                           
  1765                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1766   003E4C  50BF               	movf	191,w,c	;volatile
  1767   003E4E  0BF0               	andlw	-16
  1768   003E50  0901               	iorlw	1
  1769   003E52  6EBF               	movwf	191,c	;volatile
  1770   003E54                     
  1771                           ; BSR set to: 14
  1772                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1773   003E54  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1774   003E58                     
  1775                           ; BSR set to: 14
  1776                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1777   003E58  8EBD               	bsf	189,7,c	;volatile
  1778                           
  1779                           ;dc_motor.c: 40:     CCPR1H=0;
  1780   003E5A  0E00               	movlw	0
  1781   003E5C  6EAA               	movwf	170,c	;volatile
  1782                           
  1783                           ;dc_motor.c: 41:     CCPR2H=0;
  1784   003E5E  0E00               	movlw	0
  1785   003E60  6EA6               	movwf	166,c	;volatile
  1786                           
  1787                           ;dc_motor.c: 42:     CCPR3H=0;
  1788   003E62  0E00               	movlw	0
  1789   003E64  010F               	movlb	15	; () banked
  1790   003E66  6F25               	movwf	37,b	;volatile
  1791                           
  1792                           ;dc_motor.c: 43:     CCPR4H=0;
  1793   003E68  0E00               	movlw	0
  1794   003E6A  6F21               	movwf	33,b	;volatile
  1795                           
  1796                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1797   003E6C  0EFC               	movlw	-4
  1798   003E6E  16AD               	andwf	173,f,c	;volatile
  1799                           
  1800                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1801   003E70  0EF3               	movlw	-13
  1802   003E72  16AD               	andwf	173,f,c	;volatile
  1803                           
  1804                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1805   003E74  0ECF               	movlw	-49
  1806   003E76  16AD               	andwf	173,f,c	;volatile
  1807                           
  1808                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1809   003E78  0E3F               	movlw	-193
  1810   003E7A  16AD               	andwf	173,f,c	;volatile
  1811   003E7C                     
  1812                           ; BSR set to: 15
  1813                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1814   003E7C  88AB               	bsf	171,4,c	;volatile
  1815                           
  1816                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1817   003E7E  50AB               	movf	171,w,c	;volatile
  1818   003E80  0BF0               	andlw	-16
  1819   003E82  090C               	iorlw	12
  1820   003E84  6EAB               	movwf	171,c	;volatile
  1821   003E86                     
  1822                           ; BSR set to: 15
  1823                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1824   003E86  8EAB               	bsf	171,7,c	;volatile
  1825   003E88                     
  1826                           ; BSR set to: 15
  1827                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1828   003E88  88A7               	bsf	167,4,c	;volatile
  1829                           
  1830                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1831   003E8A  50A7               	movf	167,w,c	;volatile
  1832   003E8C  0BF0               	andlw	-16
  1833   003E8E  090C               	iorlw	12
  1834   003E90  6EA7               	movwf	167,c	;volatile
  1835   003E92                     
  1836                           ; BSR set to: 15
  1837                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1838   003E92  8EA7               	bsf	167,7,c	;volatile
  1839   003E94                     
  1840                           ; BSR set to: 15
  1841                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1842   003E94  8926               	bsf	38,4,b	;volatile
  1843                           
  1844                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1845   003E96  5126               	movf	38,w,b	;volatile
  1846   003E98  0BF0               	andlw	-16
  1847   003E9A  090C               	iorlw	12
  1848   003E9C  6F26               	movwf	38,b	;volatile
  1849   003E9E                     
  1850                           ; BSR set to: 15
  1851                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1852   003E9E  8F26               	bsf	38,7,b	;volatile
  1853   003EA0                     
  1854                           ; BSR set to: 15
  1855                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1856   003EA0  8922               	bsf	34,4,b	;volatile
  1857                           
  1858                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1859   003EA2  5122               	movf	34,w,b	;volatile
  1860   003EA4  0BF0               	andlw	-16
  1861   003EA6  090C               	iorlw	12
  1862   003EA8  6F22               	movwf	34,b	;volatile
  1863   003EAA                     
  1864                           ; BSR set to: 15
  1865                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1866   003EAA  8F22               	bsf	34,7,b	;volatile
  1867   003EAC                     
  1868                           ; BSR set to: 15
  1869   003EAC  0012               	return		;funcret
  1870   003EAE                     __end_of_initDCmotorsPWM:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _colour_read_all *****************
  1874 ;; Defined at:
  1875 ;;		line 8 in file "colorfunctions.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1878 ;;		 -> colorf(22), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  C               4   39[COMRAM] float 
  1881 ;;  B               4   35[COMRAM] float 
  1882 ;;  G               4   31[COMRAM] float 
  1883 ;;  R               4   27[COMRAM] float 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;Total ram usage:       18 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 4
  1900 ;; This function calls:
  1901 ;;		___xxtofl
  1902 ;;		_color_read_Blue
  1903 ;;		_color_read_Clear
  1904 ;;		_color_read_Green
  1905 ;;		_color_read_Red
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text4
  1912   0033D2                     __ptext4:
  1913                           	callstack 0
  1914   0033D2                     _colour_read_all:
  1915                           	callstack 26
  1916   0033D2                     
  1917                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1918   0033D2  EC0A  F022         	call	_color_read_Red	;wreg free
  1919   0033D6  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1920   0033DA  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1921   0033DE  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1922   0033E0  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1923   0033E2  0E00               	movlw	0
  1924   0033E4  EC0E  F017         	call	___xxtofl
  1925   0033E8  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1926   0033EC  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1927   0033F0  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1928   0033F4  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1929                           
  1930                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1931   0033F8  EC32  F022         	call	_color_read_Green	;wreg free
  1932   0033FC  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1933   003400  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1934   003404  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1935   003406  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1936   003408  0E00               	movlw	0
  1937   00340A  EC0E  F017         	call	___xxtofl
  1938   00340E  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1939   003412  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1940   003416  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1941   00341A  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1942                           
  1943                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1944   00341E  EC82  F022         	call	_color_read_Blue	;wreg free
  1945   003422  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1946   003426  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1947   00342A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1948   00342C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1949   00342E  0E00               	movlw	0
  1950   003430  EC0E  F017         	call	___xxtofl
  1951   003434  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1952   003438  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1953   00343C  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1954   003440  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1955                           
  1956                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1957   003444  EC5A  F022         	call	_color_read_Clear	;wreg free
  1958   003448  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1959   00344C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1960   003450  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1961   003452  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1962   003454  0E00               	movlw	0
  1963   003456  EC0E  F017         	call	___xxtofl
  1964   00345A  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1965   00345E  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1966   003462  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1967   003466  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1968   00346A                     
  1969                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1970   00346A  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1971   00346E  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1972   003472  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1973   003476  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1974   00347A  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1975   00347E  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1976   003482                     
  1977                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1978   003482  EE20 F008          	lfsr	2,8
  1979   003486  501A               	movf	colour_read_all@cf^0,w,c
  1980   003488  26D9               	addwf	fsr2l,f,c
  1981   00348A  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1982   00348C  22DA               	addwfc	fsr2h,f,c
  1983   00348E  C024  FFDE         	movff	colour_read_all@B,postinc2
  1984   003492  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1985   003496  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1986   00349A  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1987   00349E                     
  1988                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1989   00349E  EE20 F004          	lfsr	2,4
  1990   0034A2  501A               	movf	colour_read_all@cf^0,w,c
  1991   0034A4  26D9               	addwf	fsr2l,f,c
  1992   0034A6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1993   0034A8  22DA               	addwfc	fsr2h,f,c
  1994   0034AA  C020  FFDE         	movff	colour_read_all@G,postinc2
  1995   0034AE  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1996   0034B2  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1997   0034B6  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1998   0034BA                     
  1999                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2000   0034BA  EE20 F00C          	lfsr	2,12
  2001   0034BE  501A               	movf	colour_read_all@cf^0,w,c
  2002   0034C0  26D9               	addwf	fsr2l,f,c
  2003   0034C2  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2004   0034C4  22DA               	addwfc	fsr2h,f,c
  2005   0034C6  C028  FFDE         	movff	colour_read_all@C,postinc2
  2006   0034CA  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2007   0034CE  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2008   0034D2  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2009   0034D6  0012               	return		;funcret
  2010   0034D8                     __end_of_colour_read_all:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _color_read_Red *****************
  2014 ;; Defined at:
  2015 ;;		line 38 in file "colorclick.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  tmp             2    9[COMRAM] unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    4[COMRAM] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;Total ram usage:        7 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		_I2C_2_Master_Read
  2038 ;;		_I2C_2_Master_RepStart
  2039 ;;		_I2C_2_Master_Start
  2040 ;;		_I2C_2_Master_Stop
  2041 ;;		_I2C_2_Master_Write
  2042 ;; This function is called by:
  2043 ;;		_colour_read_all
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text5
  2048   004414                     __ptext5:
  2049                           	callstack 0
  2050   004414                     _color_read_Red:
  2051                           	callstack 26
  2052   004414                     
  2053                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2054   004414  EC80  F024         	call	_I2C_2_Master_Start	;wreg free
  2055                           
  2056                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2057   004418  0E52               	movlw	82
  2058   00441A  EC6A  F024         	call	_I2C_2_Master_Write
  2059                           
  2060                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2061   00441E  0EB6               	movlw	182
  2062   004420  EC6A  F024         	call	_I2C_2_Master_Write
  2063                           
  2064                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2065   004424  EC76  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2066                           
  2067                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2068   004428  0E53               	movlw	83
  2069   00442A  EC6A  F024         	call	_I2C_2_Master_Write
  2070                           
  2071                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2072   00442E  0E01               	movlw	1
  2073   004430  EC43  F023         	call	_I2C_2_Master_Read
  2074   004434  6E07               	movwf	??_color_read_Red^0,c
  2075   004436  5007               	movf	??_color_read_Red^0,w,c
  2076   004438  6E0A               	movwf	color_read_Red@tmp^0,c
  2077   00443A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2078                           
  2079                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2080   00443C  0E00               	movlw	0
  2081   00443E  EC43  F023         	call	_I2C_2_Master_Read
  2082   004442  6E07               	movwf	??_color_read_Red^0,c
  2083   004444  5007               	movf	??_color_read_Red^0,w,c
  2084   004446  6E09               	movwf	(??_color_read_Red+2)^0,c
  2085   004448  6A08               	clrf	(??_color_read_Red+1)^0,c
  2086   00444A  500A               	movf	color_read_Red@tmp^0,w,c
  2087   00444C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2088   00444E  6E0A               	movwf	color_read_Red@tmp^0,c
  2089   004450  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2090   004452  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2091   004454  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2092                           
  2093                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2094   004456  EC7B  F024         	call	_I2C_2_Master_Stop	;wreg free
  2095   00445A                     
  2096                           ;colorclick.c: 49:  return tmp;
  2097   00445A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2098   00445E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2099   004462  0012               	return		;funcret
  2100   004464                     __end_of_color_read_Red:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _color_read_Green *****************
  2104 ;; Defined at:
  2105 ;;		line 51 in file "colorclick.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  tmp             2    9[COMRAM] unsigned int 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    4[COMRAM] unsigned int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;Total ram usage:        7 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 3
  2126 ;; This function calls:
  2127 ;;		_I2C_2_Master_Read
  2128 ;;		_I2C_2_Master_RepStart
  2129 ;;		_I2C_2_Master_Start
  2130 ;;		_I2C_2_Master_Stop
  2131 ;;		_I2C_2_Master_Write
  2132 ;; This function is called by:
  2133 ;;		_colour_read_all
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text6
  2138   004464                     __ptext6:
  2139                           	callstack 0
  2140   004464                     _color_read_Green:
  2141                           	callstack 26
  2142   004464                     
  2143                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2144   004464  EC80  F024         	call	_I2C_2_Master_Start	;wreg free
  2145                           
  2146                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2147   004468  0E52               	movlw	82
  2148   00446A  EC6A  F024         	call	_I2C_2_Master_Write
  2149                           
  2150                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2151   00446E  0EB8               	movlw	184
  2152   004470  EC6A  F024         	call	_I2C_2_Master_Write
  2153                           
  2154                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2155   004474  EC76  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2156                           
  2157                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2158   004478  0E53               	movlw	83
  2159   00447A  EC6A  F024         	call	_I2C_2_Master_Write
  2160                           
  2161                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2162   00447E  0E01               	movlw	1
  2163   004480  EC43  F023         	call	_I2C_2_Master_Read
  2164   004484  6E07               	movwf	??_color_read_Green^0,c
  2165   004486  5007               	movf	??_color_read_Green^0,w,c
  2166   004488  6E0A               	movwf	color_read_Green@tmp^0,c
  2167   00448A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2168                           
  2169                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2170   00448C  0E00               	movlw	0
  2171   00448E  EC43  F023         	call	_I2C_2_Master_Read
  2172   004492  6E07               	movwf	??_color_read_Green^0,c
  2173   004494  5007               	movf	??_color_read_Green^0,w,c
  2174   004496  6E09               	movwf	(??_color_read_Green+2)^0,c
  2175   004498  6A08               	clrf	(??_color_read_Green+1)^0,c
  2176   00449A  500A               	movf	color_read_Green@tmp^0,w,c
  2177   00449C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2178   00449E  6E0A               	movwf	color_read_Green@tmp^0,c
  2179   0044A0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2180   0044A2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2181   0044A4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2182                           
  2183                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2184   0044A6  EC7B  F024         	call	_I2C_2_Master_Stop	;wreg free
  2185   0044AA                     
  2186                           ;colorclick.c: 62:     return tmp;
  2187   0044AA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2188   0044AE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2189   0044B2  0012               	return		;funcret
  2190   0044B4                     __end_of_color_read_Green:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _color_read_Clear *****************
  2194 ;; Defined at:
  2195 ;;		line 80 in file "colorclick.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  tmp             2    9[COMRAM] unsigned int 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2    4[COMRAM] unsigned int 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;Total ram usage:        7 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 3
  2216 ;; This function calls:
  2217 ;;		_I2C_2_Master_Read
  2218 ;;		_I2C_2_Master_RepStart
  2219 ;;		_I2C_2_Master_Start
  2220 ;;		_I2C_2_Master_Stop
  2221 ;;		_I2C_2_Master_Write
  2222 ;; This function is called by:
  2223 ;;		_colour_read_all
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text7
  2228   0044B4                     __ptext7:
  2229                           	callstack 0
  2230   0044B4                     _color_read_Clear:
  2231                           	callstack 26
  2232   0044B4                     
  2233                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2234   0044B4  EC80  F024         	call	_I2C_2_Master_Start	;wreg free
  2235                           
  2236                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2237   0044B8  0E52               	movlw	82
  2238   0044BA  EC6A  F024         	call	_I2C_2_Master_Write
  2239                           
  2240                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2241   0044BE  0EB4               	movlw	180
  2242   0044C0  EC6A  F024         	call	_I2C_2_Master_Write
  2243                           
  2244                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2245   0044C4  EC76  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2246                           
  2247                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2248   0044C8  0E53               	movlw	83
  2249   0044CA  EC6A  F024         	call	_I2C_2_Master_Write
  2250                           
  2251                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2252   0044CE  0E01               	movlw	1
  2253   0044D0  EC43  F023         	call	_I2C_2_Master_Read
  2254   0044D4  6E07               	movwf	??_color_read_Clear^0,c
  2255   0044D6  5007               	movf	??_color_read_Clear^0,w,c
  2256   0044D8  6E0A               	movwf	color_read_Clear@tmp^0,c
  2257   0044DA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2258                           
  2259                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2260   0044DC  0E00               	movlw	0
  2261   0044DE  EC43  F023         	call	_I2C_2_Master_Read
  2262   0044E2  6E07               	movwf	??_color_read_Clear^0,c
  2263   0044E4  5007               	movf	??_color_read_Clear^0,w,c
  2264   0044E6  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2265   0044E8  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2266   0044EA  500A               	movf	color_read_Clear@tmp^0,w,c
  2267   0044EC  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2268   0044EE  6E0A               	movwf	color_read_Clear@tmp^0,c
  2269   0044F0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2270   0044F2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2271   0044F4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2272                           
  2273                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2274   0044F6  EC7B  F024         	call	_I2C_2_Master_Stop	;wreg free
  2275   0044FA                     
  2276                           ;colorclick.c: 91:     return tmp;
  2277   0044FA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2278   0044FE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2279   004502  0012               	return		;funcret
  2280   004504                     __end_of_color_read_Clear:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _color_read_Blue *****************
  2284 ;; Defined at:
  2285 ;;		line 65 in file "colorclick.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  tmp             2    9[COMRAM] unsigned int 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2    4[COMRAM] unsigned int 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;Total ram usage:        7 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 3
  2306 ;; This function calls:
  2307 ;;		_I2C_2_Master_Read
  2308 ;;		_I2C_2_Master_RepStart
  2309 ;;		_I2C_2_Master_Start
  2310 ;;		_I2C_2_Master_Stop
  2311 ;;		_I2C_2_Master_Write
  2312 ;; This function is called by:
  2313 ;;		_colour_read_all
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text8
  2318   004504                     __ptext8:
  2319                           	callstack 0
  2320   004504                     _color_read_Blue:
  2321                           	callstack 26
  2322   004504                     
  2323                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2324   004504  EC80  F024         	call	_I2C_2_Master_Start	;wreg free
  2325                           
  2326                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2327   004508  0E52               	movlw	82
  2328   00450A  EC6A  F024         	call	_I2C_2_Master_Write
  2329                           
  2330                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2331   00450E  0EBA               	movlw	186
  2332   004510  EC6A  F024         	call	_I2C_2_Master_Write
  2333                           
  2334                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2335   004514  EC76  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2336                           
  2337                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2338   004518  0E53               	movlw	83
  2339   00451A  EC6A  F024         	call	_I2C_2_Master_Write
  2340                           
  2341                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2342   00451E  0E01               	movlw	1
  2343   004520  EC43  F023         	call	_I2C_2_Master_Read
  2344   004524  6E07               	movwf	??_color_read_Blue^0,c
  2345   004526  5007               	movf	??_color_read_Blue^0,w,c
  2346   004528  6E0A               	movwf	color_read_Blue@tmp^0,c
  2347   00452A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2348                           
  2349                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2350   00452C  0E00               	movlw	0
  2351   00452E  EC43  F023         	call	_I2C_2_Master_Read
  2352   004532  6E07               	movwf	??_color_read_Blue^0,c
  2353   004534  5007               	movf	??_color_read_Blue^0,w,c
  2354   004536  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2355   004538  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2356   00453A  500A               	movf	color_read_Blue@tmp^0,w,c
  2357   00453C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2358   00453E  6E0A               	movwf	color_read_Blue@tmp^0,c
  2359   004540  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2360   004542  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2361   004544  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2362                           
  2363                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2364   004546  EC7B  F024         	call	_I2C_2_Master_Stop	;wreg free
  2365   00454A                     
  2366                           ;colorclick.c: 76:     return tmp;
  2367   00454A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2368   00454E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2369   004552  0012               	return		;funcret
  2370   004554                     __end_of_color_read_Blue:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _I2C_2_Master_RepStart *****************
  2374 ;; Defined at:
  2375 ;;		line 33 in file "i2c.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 2
  2396 ;; This function calls:
  2397 ;;		_I2C_2_Master_Idle
  2398 ;; This function is called by:
  2399 ;;		_color_read_Red
  2400 ;;		_color_read_Green
  2401 ;;		_color_read_Blue
  2402 ;;		_color_read_Clear
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text9
  2407   0048EC                     __ptext9:
  2408                           	callstack 0
  2409   0048EC                     _I2C_2_Master_RepStart:
  2410                           	callstack 26
  2411   0048EC                     
  2412                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2413   0048EC  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2414   0048F0                     
  2415                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2416   0048F0  010E               	movlb	14	; () banked
  2417   0048F2  83DA               	bsf	218,1,b	;volatile
  2418   0048F4                     
  2419                           ; BSR set to: 14
  2420   0048F4  0012               	return		;funcret
  2421   0048F6                     __end_of_I2C_2_Master_RepStart:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function _I2C_2_Master_Read *****************
  2425 ;; Defined at:
  2426 ;;		line 51 in file "i2c.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  ack             1    wreg     unsigned char 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  ack             1    2[COMRAM] unsigned char 
  2431 ;;  tmp             1    3[COMRAM] unsigned char 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      unsigned char 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;Total ram usage:        3 bytes
  2446 ;; Hardware stack levels used: 1
  2447 ;; Hardware stack levels required when called: 2
  2448 ;; This function calls:
  2449 ;;		_I2C_2_Master_Idle
  2450 ;; This function is called by:
  2451 ;;		_color_read_Red
  2452 ;;		_color_read_Green
  2453 ;;		_color_read_Blue
  2454 ;;		_color_read_Clear
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text10
  2459   004686                     __ptext10:
  2460                           	callstack 0
  2461   004686                     _I2C_2_Master_Read:
  2462                           	callstack 26
  2463                           
  2464                           ; BSR set to: 14
  2465                           ;incstack = 0
  2466                           ;I2C_2_Master_Read@ack stored from wreg
  2467   004686  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2468   004688                     
  2469                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2470   004688  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2471   00468C                     
  2472                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2473   00468C  010E               	movlb	14	; () banked
  2474   00468E  87DA               	bsf	218,3,b	;volatile
  2475                           
  2476                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2477   004690  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2478   004694                     
  2479                           ;i2c.c: 57:   tmp = SSP2BUF;
  2480   004694  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2481                           
  2482                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2483   004698  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2484   00469C                     
  2485                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2486   00469C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2487   00469E  B4D8               	btfsc	status,2,c
  2488   0046A0  EF54  F023         	goto	u2491
  2489   0046A4  EF58  F023         	goto	u2490
  2490   0046A8                     u2491:
  2491   0046A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2492   0046AA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2493   0046AC  EF59  F023         	goto	u2508
  2494   0046B0                     u2490:
  2495   0046B0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2496   0046B2                     u2508:
  2497   0046B2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2498   0046B4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2499   0046B6  010E               	movlb	14	; () banked
  2500   0046B8  51DA               	movf	218,w,b	;volatile
  2501   0046BA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2502   0046BC  0BDF               	andlw	-33
  2503   0046BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2504   0046C0  6FDA               	movwf	218,b	;volatile
  2505   0046C2                     
  2506                           ; BSR set to: 14
  2507                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2508   0046C2  89DA               	bsf	218,4,b	;volatile
  2509   0046C4                     
  2510                           ; BSR set to: 14
  2511                           ;i2c.c: 61:   return tmp;
  2512   0046C4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2513   0046C6                     
  2514                           ; BSR set to: 14
  2515   0046C6  0012               	return		;funcret
  2516   0046C8                     __end_of_I2C_2_Master_Read:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _color_click_init *****************
  2520 ;; Defined at:
  2521 ;;		line 6 in file "colorclick.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 4
  2542 ;; This function calls:
  2543 ;;		_I2C_2_Master_Init
  2544 ;;		_color_writetoaddr
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text11
  2551   0046C8                     __ptext11:
  2552                           	callstack 0
  2553   0046C8                     _color_click_init:
  2554                           	callstack 26
  2555   0046C8                     
  2556                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2557   0046C8  ECD9  F023         	call	_I2C_2_Master_Init	;wreg free
  2558   0046CC                     
  2559                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2560   0046CC  0E01               	movlw	1
  2561   0046CE  6E03               	movwf	color_writetoaddr@value^0,c
  2562   0046D0  0E00               	movlw	0
  2563   0046D2  EC38  F024         	call	_color_writetoaddr
  2564   0046D6                     
  2565                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2566   0046D6  0E3F               	movlw	63
  2567   0046D8  6E05               	movwf	??_color_click_init^0,c
  2568   0046DA  0E55               	movlw	85
  2569   0046DC                     u4257:
  2570   0046DC  2EE8               	decfsz	wreg,f,c
  2571   0046DE  D7FE               	bra	u4257
  2572   0046E0  2E05               	decfsz	??_color_click_init^0,f,c
  2573   0046E2  D7FC               	bra	u4257
  2574   0046E4  F000               	nop	
  2575   0046E6                     
  2576                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2577   0046E6  0E03               	movlw	3
  2578   0046E8  6E03               	movwf	color_writetoaddr@value^0,c
  2579   0046EA  0E00               	movlw	0
  2580   0046EC  EC38  F024         	call	_color_writetoaddr
  2581   0046F0                     
  2582                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2583   0046F0  0ED6               	movlw	214
  2584   0046F2  6E03               	movwf	color_writetoaddr@value^0,c
  2585   0046F4  0E01               	movlw	1
  2586   0046F6  EC38  F024         	call	_color_writetoaddr
  2587   0046FA                     
  2588                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2589   0046FA  927F               	bcf	127,1,c	;volatile
  2590   0046FC                     
  2591                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2592   0046FC  9287               	bcf	135,1,c	;volatile
  2593   0046FE                     
  2594                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2595   0046FE  9879               	bcf	121,4,c	;volatile
  2596   004700                     
  2597                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2598   004700  9881               	bcf	129,4,c	;volatile
  2599   004702                     
  2600                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2601   004702  9E7E               	bcf	126,7,c	;volatile
  2602   004704                     
  2603                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2604   004704  9E86               	bcf	134,7,c	;volatile
  2605   004706  0012               	return		;funcret
  2606   004708                     __end_of_color_click_init:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _color_writetoaddr *****************
  2610 ;; Defined at:
  2611 ;;		line 30 in file "colorclick.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  address         1    wreg     unsigned char 
  2614 ;;  value           1    2[COMRAM] unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  address         1    3[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 3
  2633 ;; This function calls:
  2634 ;;		_I2C_2_Master_Start
  2635 ;;		_I2C_2_Master_Stop
  2636 ;;		_I2C_2_Master_Write
  2637 ;; This function is called by:
  2638 ;;		_color_click_init
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text12
  2643   004870                     __ptext12:
  2644                           	callstack 0
  2645   004870                     _color_writetoaddr:
  2646                           	callstack 26
  2647                           
  2648                           ;incstack = 0
  2649                           ;color_writetoaddr@address stored from wreg
  2650   004870  6E04               	movwf	color_writetoaddr@address^0,c
  2651   004872                     
  2652                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2653   004872  EC80  F024         	call	_I2C_2_Master_Start	;wreg free
  2654                           
  2655                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2656   004876  0E52               	movlw	82
  2657   004878  EC6A  F024         	call	_I2C_2_Master_Write
  2658                           
  2659                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2660   00487C  5004               	movf	color_writetoaddr@address^0,w,c
  2661   00487E  0980               	iorlw	128
  2662   004880  EC6A  F024         	call	_I2C_2_Master_Write
  2663                           
  2664                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2665   004884  5003               	movf	color_writetoaddr@value^0,w,c
  2666   004886  EC6A  F024         	call	_I2C_2_Master_Write
  2667                           
  2668                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2669   00488A  EC7B  F024         	call	_I2C_2_Master_Stop	;wreg free
  2670   00488E  0012               	return		;funcret
  2671   004890                     __end_of_color_writetoaddr:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _I2C_2_Master_Write *****************
  2675 ;; Defined at:
  2676 ;;		line 45 in file "i2c.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  data_byte       1    wreg     unsigned char 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  data_byte       1    1[COMRAM] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;Total ram usage:        1 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 2
  2697 ;; This function calls:
  2698 ;;		_I2C_2_Master_Idle
  2699 ;; This function is called by:
  2700 ;;		_color_writetoaddr
  2701 ;;		_color_read_Red
  2702 ;;		_color_read_Green
  2703 ;;		_color_read_Blue
  2704 ;;		_color_read_Clear
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text13
  2709   0048D4                     __ptext13:
  2710                           	callstack 0
  2711   0048D4                     _I2C_2_Master_Write:
  2712                           	callstack 26
  2713                           
  2714                           ;incstack = 0
  2715                           ;I2C_2_Master_Write@data_byte stored from wreg
  2716   0048D4  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2717   0048D6                     
  2718                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2719   0048D6  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2720   0048DA                     
  2721                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2722   0048DA  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2723   0048DE  0012               	return		;funcret
  2724   0048E0                     __end_of_I2C_2_Master_Write:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _I2C_2_Master_Stop *****************
  2728 ;; Defined at:
  2729 ;;		line 39 in file "i2c.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 2
  2750 ;; This function calls:
  2751 ;;		_I2C_2_Master_Idle
  2752 ;; This function is called by:
  2753 ;;		_color_writetoaddr
  2754 ;;		_color_read_Red
  2755 ;;		_color_read_Green
  2756 ;;		_color_read_Blue
  2757 ;;		_color_read_Clear
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text14
  2762   0048F6                     __ptext14:
  2763                           	callstack 0
  2764   0048F6                     _I2C_2_Master_Stop:
  2765                           	callstack 26
  2766   0048F6                     
  2767                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2768   0048F6  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2769   0048FA                     
  2770                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2771   0048FA  010E               	movlb	14	; () banked
  2772   0048FC  85DA               	bsf	218,2,b	;volatile
  2773   0048FE                     
  2774                           ; BSR set to: 14
  2775   0048FE  0012               	return		;funcret
  2776   004900                     __end_of_I2C_2_Master_Stop:
  2777                           	callstack 0
  2778                           
  2779 ;; *************** function _I2C_2_Master_Start *****************
  2780 ;; Defined at:
  2781 ;;		line 27 in file "i2c.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 2
  2802 ;; This function calls:
  2803 ;;		_I2C_2_Master_Idle
  2804 ;; This function is called by:
  2805 ;;		_color_writetoaddr
  2806 ;;		_color_read_Red
  2807 ;;		_color_read_Green
  2808 ;;		_color_read_Blue
  2809 ;;		_color_read_Clear
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text15
  2814   004900                     __ptext15:
  2815                           	callstack 0
  2816   004900                     _I2C_2_Master_Start:
  2817                           	callstack 26
  2818   004900                     
  2819                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2820   004900  ECEE  F023         	call	_I2C_2_Master_Idle	;wreg free
  2821   004904                     
  2822                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2823   004904  010E               	movlb	14	; () banked
  2824   004906  81DA               	bsf	218,0,b	;volatile
  2825   004908                     
  2826                           ; BSR set to: 14
  2827   004908  0012               	return		;funcret
  2828   00490A                     __end_of_I2C_2_Master_Start:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _I2C_2_Master_Idle *****************
  2832 ;; Defined at:
  2833 ;;		line 22 in file "i2c.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_I2C_2_Master_Start
  2858 ;;		_I2C_2_Master_RepStart
  2859 ;;		_I2C_2_Master_Stop
  2860 ;;		_I2C_2_Master_Write
  2861 ;;		_I2C_2_Master_Read
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text16
  2866   0047DC                     __ptext16:
  2867                           	callstack 0
  2868   0047DC                     _I2C_2_Master_Idle:
  2869                           	callstack 26
  2870   0047DC                     l30:
  2871   0047DC  010E               	movlb	14	; () banked
  2872   0047DE  B5D8               	btfsc	216,2,b	;volatile
  2873   0047E0  EFF4  F023         	goto	u2421
  2874   0047E4  EFF6  F023         	goto	u2420
  2875   0047E8                     u2421:
  2876   0047E8  EFEE  F023         	goto	l30
  2877   0047EC                     u2420:
  2878   0047EC                     
  2879                           ; BSR set to: 14
  2880   0047EC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2881   0047F0  0E1F               	movlw	31
  2882   0047F2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2883   0047F4  A4D8               	btfss	status,2,c
  2884   0047F6  EFFF  F023         	goto	u2431
  2885   0047FA  EF01  F024         	goto	u2430
  2886   0047FE                     u2431:
  2887   0047FE  EFEE  F023         	goto	l30
  2888   004802                     u2430:
  2889   004802                     
  2890                           ; BSR set to: 14
  2891   004802  0012               	return		;funcret
  2892   004804                     __end_of_I2C_2_Master_Idle:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _I2C_2_Master_Init *****************
  2896 ;; Defined at:
  2897 ;;		line 4 in file "i2c.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;;		_color_click_init
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text17
  2927   0047B2                     __ptext17:
  2928                           	callstack 0
  2929   0047B2                     _I2C_2_Master_Init:
  2930                           	callstack 28
  2931   0047B2                     
  2932                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2933   0047B2  010E               	movlb	14	; () banked
  2934   0047B4  51D9               	movf	217,w,b	;volatile
  2935   0047B6  0BF0               	andlw	-16
  2936   0047B8  0908               	iorlw	8
  2937   0047BA  6FD9               	movwf	217,b	;volatile
  2938   0047BC                     
  2939                           ; BSR set to: 14
  2940                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2941   0047BC  8BD9               	bsf	217,5,b	;volatile
  2942                           
  2943                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2944   0047BE  0E9F               	movlw	159
  2945   0047C0  6FD6               	movwf	214,b	;volatile
  2946   0047C2                     
  2947                           ; BSR set to: 14
  2948                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2949   0047C2  8A84               	bsf	132,5,c	;volatile
  2950   0047C4                     
  2951                           ; BSR set to: 14
  2952                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2953   0047C4  8C84               	bsf	132,6,c	;volatile
  2954   0047C6                     
  2955                           ; BSR set to: 14
  2956                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2957   0047C6  9BA7               	bcf	167,5,b	;volatile
  2958   0047C8                     
  2959                           ; BSR set to: 14
  2960                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2961   0047C8  9DA7               	bcf	167,6,b	;volatile
  2962                           
  2963                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2964   0047CA  0E1D               	movlw	29
  2965   0047CC  6F1D               	movwf	29,b	;volatile
  2966                           
  2967                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2968   0047CE  0E1E               	movlw	30
  2969   0047D0  6F1C               	movwf	28,b	;volatile
  2970                           
  2971                           ;i2c.c: 18:   RD5PPS=0x1C;
  2972   0047D2  0E1C               	movlw	28
  2973   0047D4  6F6F               	movwf	111,b	;volatile
  2974                           
  2975                           ;i2c.c: 19:   RD6PPS=0x1B;
  2976   0047D6  0E1B               	movlw	27
  2977   0047D8  6F70               	movwf	112,b	;volatile
  2978   0047DA                     
  2979                           ; BSR set to: 14
  2980   0047DA  0012               	return		;funcret
  2981   0047DC                     __end_of_I2C_2_Master_Init:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _Timer0_init *****************
  2985 ;; Defined at:
  2986 ;;		line 7 in file "timer.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text18
  3015   00482A                     __ptext18:
  3016                           	callstack 0
  3017   00482A                     _Timer0_init:
  3018                           	callstack 29
  3019   00482A                     
  3020                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3021   00482A  50D6               	movf	214,w,c	;volatile
  3022   00482C  0B1F               	andlw	-225
  3023   00482E  0940               	iorlw	64
  3024   004830  6ED6               	movwf	214,c	;volatile
  3025   004832                     
  3026                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3027   004832  88D6               	bsf	214,4,c	;volatile
  3028                           
  3029                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3030   004834  50D6               	movf	214,w,c	;volatile
  3031   004836  0BF0               	andlw	-16
  3032   004838  090D               	iorlw	13
  3033   00483A  6ED6               	movwf	214,c	;volatile
  3034   00483C                     
  3035                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3036   00483C  88D5               	bsf	213,4,c	;volatile
  3037   00483E                     
  3038                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3039   00483E  010E               	movlb	14	; () banked
  3040   004840  8B29               	bsf	41,5,b	;volatile
  3041                           
  3042                           ;timer.c: 17:     TMR0H=0;
  3043   004842  0E00               	movlw	0
  3044   004844  6ED4               	movwf	212,c	;volatile
  3045                           
  3046                           ;timer.c: 18:     TMR0L=0;
  3047   004846  0E00               	movlw	0
  3048   004848  6ED3               	movwf	211,c	;volatile
  3049   00484A                     
  3050                           ; BSR set to: 14
  3051                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3052   00484A  8ED5               	bsf	213,7,c	;volatile
  3053   00484C                     
  3054                           ; BSR set to: 14
  3055   00484C  0012               	return		;funcret
  3056   00484E                     __end_of_Timer0_init:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _RGB2Hue *****************
  3060 ;; Defined at:
  3061 ;;		line 23 in file "colorfunctions.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
  3064 ;;		 -> colorf(22), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  min             2   19[BANK0 ] int 
  3067 ;;  max             2   17[BANK0 ] int 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:       14 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 3
  3084 ;; This function calls:
  3085 ;;		___fladd
  3086 ;;		___fldiv
  3087 ;;		___fleq
  3088 ;;		___flge
  3089 ;;		___flmul
  3090 ;;		___flsub
  3091 ;;		___fltol
  3092 ;;		___xxtofl
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text19
  3099   000E52                     __ptext19:
  3100                           	callstack 0
  3101   000E52                     _RGB2Hue:
  3102                           	callstack 27
  3103   000E52                     
  3104                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3105   000E52  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3106   000E56  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3107   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3108   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3109   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3110   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3111   000E6A  EE20 F004          	lfsr	2,4
  3112   000E6E  5057               	movf	RGB2Hue@cf^0,w,c
  3113   000E70  26D9               	addwf	fsr2l,f,c
  3114   000E72  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3115   000E74  22DA               	addwfc	fsr2h,f,c
  3116   000E76  CFDE F005          	movff	postinc2,___fleq@ff2
  3117   000E7A  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3118   000E7E  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3119   000E82  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3120   000E86  EC2D  F01D         	call	___fleq	;wreg free
  3121   000E8A  A0D8               	btfss	status,0,c
  3122   000E8C  EF4A  F007         	goto	u3961
  3123   000E90  EF4C  F007         	goto	u3960
  3124   000E94                     u3961:
  3125   000E94  EF7F  F007         	goto	l4316
  3126   000E98                     u3960:
  3127   000E98  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3128   000E9C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3129   000EA0  CFDE F001          	movff	postinc2,___fleq@ff1
  3130   000EA4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3131   000EA8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3132   000EAC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3133   000EB0  EE20 F008          	lfsr	2,8
  3134   000EB4  5057               	movf	RGB2Hue@cf^0,w,c
  3135   000EB6  26D9               	addwf	fsr2l,f,c
  3136   000EB8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3137   000EBA  22DA               	addwfc	fsr2h,f,c
  3138   000EBC  CFDE F005          	movff	postinc2,___fleq@ff2
  3139   000EC0  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3140   000EC4  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3141   000EC8  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3142   000ECC  EC2D  F01D         	call	___fleq	;wreg free
  3143   000ED0  A0D8               	btfss	status,0,c
  3144   000ED2  EF6D  F007         	goto	u3971
  3145   000ED6  EF6F  F007         	goto	u3970
  3146   000EDA                     u3971:
  3147   000EDA  EF7F  F007         	goto	l4316
  3148   000EDE                     u3970:
  3149   000EDE                     
  3150                           ;colorfunctions.c: 25:         cf->h=0;
  3151   000EDE  EE20 F010          	lfsr	2,16
  3152   000EE2  5057               	movf	RGB2Hue@cf^0,w,c
  3153   000EE4  26D9               	addwf	fsr2l,f,c
  3154   000EE6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3155   000EE8  22DA               	addwfc	fsr2h,f,c
  3156   000EEA  0E00               	movlw	0
  3157   000EEC  6EDE               	movwf	postinc2,c
  3158   000EEE  0E00               	movlw	0
  3159   000EF0  6EDE               	movwf	postinc2,c
  3160   000EF2  0E00               	movlw	0
  3161   000EF4  6EDE               	movwf	postinc2,c
  3162   000EF6  0E00               	movlw	0
  3163   000EF8  6EDD               	movwf	postdec2,c
  3164                           
  3165                           ;colorfunctions.c: 26:     } else{
  3166   000EFA  EFA9  F00A         	goto	l585
  3167   000EFE                     l4316:
  3168                           
  3169                           ;colorfunctions.c: 28:         signed int min=0;
  3170   000EFE  0E00               	movlw	0
  3171   000F00  0100               	movlb	0	; () banked
  3172   000F02  6F74               	movwf	(RGB2Hue@min+1)& (0+255),b
  3173   000F04  0E00               	movlw	0
  3174   000F06  6F73               	movwf	RGB2Hue@min& (0+255),b
  3175   000F08                     
  3176                           ; BSR set to: 0
  3177                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3178   000F08  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3179   000F0C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3180   000F10  CFDE F001          	movff	postinc2,___flge@ff1
  3181   000F14  CFDE F002          	movff	postinc2,___flge@ff1+1
  3182   000F18  CFDE F003          	movff	postinc2,___flge@ff1+2
  3183   000F1C  CFDE F004          	movff	postinc2,___flge@ff1+3
  3184   000F20  EE20 F004          	lfsr	2,4
  3185   000F24  5057               	movf	RGB2Hue@cf^0,w,c
  3186   000F26  26D9               	addwf	fsr2l,f,c
  3187   000F28  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3188   000F2A  22DA               	addwfc	fsr2h,f,c
  3189   000F2C  CFDE F005          	movff	postinc2,___flge@ff2
  3190   000F30  CFDE F006          	movff	postinc2,___flge@ff2+1
  3191   000F34  CFDE F007          	movff	postinc2,___flge@ff2+2
  3192   000F38  CFDE F008          	movff	postinc2,___flge@ff2+3
  3193   000F3C  ECEF  F01A         	call	___flge	;wreg free
  3194   000F40  B0D8               	btfsc	status,0,c
  3195   000F42  EFA5  F007         	goto	u3981
  3196   000F46  EFA7  F007         	goto	u3980
  3197   000F4A                     u3981:
  3198   000F4A  EFDE  F007         	goto	l4324
  3199   000F4E                     u3980:
  3200   000F4E  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3201   000F52  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3202   000F56  CFDE F001          	movff	postinc2,___flge@ff1
  3203   000F5A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3204   000F5E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3205   000F62  CFDE F004          	movff	postinc2,___flge@ff1+3
  3206   000F66  EE20 F008          	lfsr	2,8
  3207   000F6A  5057               	movf	RGB2Hue@cf^0,w,c
  3208   000F6C  26D9               	addwf	fsr2l,f,c
  3209   000F6E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3210   000F70  22DA               	addwfc	fsr2h,f,c
  3211   000F72  CFDE F005          	movff	postinc2,___flge@ff2
  3212   000F76  CFDE F006          	movff	postinc2,___flge@ff2+1
  3213   000F7A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3214   000F7E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3215   000F82  ECEF  F01A         	call	___flge	;wreg free
  3216   000F86  B0D8               	btfsc	status,0,c
  3217   000F88  EFC8  F007         	goto	u3991
  3218   000F8C  EFCA  F007         	goto	u3990
  3219   000F90                     u3991:
  3220   000F90  EFDE  F007         	goto	l4324
  3221   000F94                     u3990:
  3222   000F94                     
  3223                           ;colorfunctions.c: 31:             min=cf->Rf;
  3224   000F94  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3225   000F98  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3226   000F9C  CFDE F001          	movff	postinc2,___fltol@f1
  3227   000FA0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3228   000FA4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3229   000FA8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3230   000FAC  EC6C  F01A         	call	___fltol	;wreg free
  3231   000FB0  C001  F073         	movff	?___fltol,RGB2Hue@min
  3232   000FB4  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3233                           
  3234                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3235   000FB8  EF50  F008         	goto	l577
  3236   000FBC                     l4324:
  3237   000FBC  EE20 F004          	lfsr	2,4
  3238   000FC0  5057               	movf	RGB2Hue@cf^0,w,c
  3239   000FC2  26D9               	addwf	fsr2l,f,c
  3240   000FC4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3241   000FC6  22DA               	addwfc	fsr2h,f,c
  3242   000FC8  CFDE F001          	movff	postinc2,___flge@ff1
  3243   000FCC  CFDE F002          	movff	postinc2,___flge@ff1+1
  3244   000FD0  CFDE F003          	movff	postinc2,___flge@ff1+2
  3245   000FD4  CFDE F004          	movff	postinc2,___flge@ff1+3
  3246   000FD8  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3247   000FDC  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3248   000FE0  CFDE F005          	movff	postinc2,___flge@ff2
  3249   000FE4  CFDE F006          	movff	postinc2,___flge@ff2+1
  3250   000FE8  CFDE F007          	movff	postinc2,___flge@ff2+2
  3251   000FEC  CFDE F008          	movff	postinc2,___flge@ff2+3
  3252   000FF0  ECEF  F01A         	call	___flge	;wreg free
  3253   000FF4  B0D8               	btfsc	status,0,c
  3254   000FF6  EFFF  F007         	goto	u4001
  3255   000FFA  EF01  F008         	goto	u4000
  3256   000FFE                     u4001:
  3257   000FFE  EF3C  F008         	goto	l4330
  3258   001002                     u4000:
  3259   001002  EE20 F004          	lfsr	2,4
  3260   001006  5057               	movf	RGB2Hue@cf^0,w,c
  3261   001008  26D9               	addwf	fsr2l,f,c
  3262   00100A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3263   00100C  22DA               	addwfc	fsr2h,f,c
  3264   00100E  CFDE F001          	movff	postinc2,___flge@ff1
  3265   001012  CFDE F002          	movff	postinc2,___flge@ff1+1
  3266   001016  CFDE F003          	movff	postinc2,___flge@ff1+2
  3267   00101A  CFDE F004          	movff	postinc2,___flge@ff1+3
  3268   00101E  EE20 F008          	lfsr	2,8
  3269   001022  5057               	movf	RGB2Hue@cf^0,w,c
  3270   001024  26D9               	addwf	fsr2l,f,c
  3271   001026  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3272   001028  22DA               	addwfc	fsr2h,f,c
  3273   00102A  CFDE F005          	movff	postinc2,___flge@ff2
  3274   00102E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3275   001032  CFDE F007          	movff	postinc2,___flge@ff2+2
  3276   001036  CFDE F008          	movff	postinc2,___flge@ff2+3
  3277   00103A  ECEF  F01A         	call	___flge	;wreg free
  3278   00103E  B0D8               	btfsc	status,0,c
  3279   001040  EF24  F008         	goto	u4011
  3280   001044  EF26  F008         	goto	u4010
  3281   001048                     u4011:
  3282   001048  EF3C  F008         	goto	l4330
  3283   00104C                     u4010:
  3284   00104C                     
  3285                           ;colorfunctions.c: 33:             min=cf->Gf;
  3286   00104C  EE20 F004          	lfsr	2,4
  3287   001050  5057               	movf	RGB2Hue@cf^0,w,c
  3288   001052  26D9               	addwf	fsr2l,f,c
  3289   001054  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3290   001056  22DA               	addwfc	fsr2h,f,c
  3291   001058  CFDE F001          	movff	postinc2,___fltol@f1
  3292   00105C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3293   001060  CFDE F003          	movff	postinc2,___fltol@f1+2
  3294   001064  CFDE F004          	movff	postinc2,___fltol@f1+3
  3295   001068  EC6C  F01A         	call	___fltol	;wreg free
  3296   00106C  C001  F073         	movff	?___fltol,RGB2Hue@min
  3297   001070  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3298                           
  3299                           ;colorfunctions.c: 34:         } else{
  3300   001074  EF50  F008         	goto	l577
  3301   001078                     l4330:
  3302                           
  3303                           ;colorfunctions.c: 35:             min=cf->Bf;
  3304   001078  EE20 F008          	lfsr	2,8
  3305   00107C  5057               	movf	RGB2Hue@cf^0,w,c
  3306   00107E  26D9               	addwf	fsr2l,f,c
  3307   001080  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3308   001082  22DA               	addwfc	fsr2h,f,c
  3309   001084  CFDE F001          	movff	postinc2,___fltol@f1
  3310   001088  CFDE F002          	movff	postinc2,___fltol@f1+1
  3311   00108C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3312   001090  CFDE F004          	movff	postinc2,___fltol@f1+3
  3313   001094  EC6C  F01A         	call	___fltol	;wreg free
  3314   001098  C001  F073         	movff	?___fltol,RGB2Hue@min
  3315   00109C  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3316   0010A0                     l577:
  3317                           
  3318                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3319   0010A0  EE20 F004          	lfsr	2,4
  3320   0010A4  5057               	movf	RGB2Hue@cf^0,w,c
  3321   0010A6  26D9               	addwf	fsr2l,f,c
  3322   0010A8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3323   0010AA  22DA               	addwfc	fsr2h,f,c
  3324   0010AC  CFDE F001          	movff	postinc2,___flge@ff1
  3325   0010B0  CFDE F002          	movff	postinc2,___flge@ff1+1
  3326   0010B4  CFDE F003          	movff	postinc2,___flge@ff1+2
  3327   0010B8  CFDE F004          	movff	postinc2,___flge@ff1+3
  3328   0010BC  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3329   0010C0  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3330   0010C4  CFDE F005          	movff	postinc2,___flge@ff2
  3331   0010C8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3332   0010CC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3333   0010D0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3334   0010D4  ECEF  F01A         	call	___flge	;wreg free
  3335   0010D8  B0D8               	btfsc	status,0,c
  3336   0010DA  EF71  F008         	goto	u4021
  3337   0010DE  EF73  F008         	goto	u4020
  3338   0010E2                     u4021:
  3339   0010E2  EF0D  F009         	goto	l4338
  3340   0010E6                     u4020:
  3341   0010E6  EE20 F008          	lfsr	2,8
  3342   0010EA  5057               	movf	RGB2Hue@cf^0,w,c
  3343   0010EC  26D9               	addwf	fsr2l,f,c
  3344   0010EE  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3345   0010F0  22DA               	addwfc	fsr2h,f,c
  3346   0010F2  CFDE F001          	movff	postinc2,___flge@ff1
  3347   0010F6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3348   0010FA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3349   0010FE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3350   001102  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3351   001106  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3352   00110A  CFDE F005          	movff	postinc2,___flge@ff2
  3353   00110E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3354   001112  CFDE F007          	movff	postinc2,___flge@ff2+2
  3355   001116  CFDE F008          	movff	postinc2,___flge@ff2+3
  3356   00111A  ECEF  F01A         	call	___flge	;wreg free
  3357   00111E  B0D8               	btfsc	status,0,c
  3358   001120  EF94  F008         	goto	u4031
  3359   001124  EF96  F008         	goto	u4030
  3360   001128                     u4031:
  3361   001128  EF0D  F009         	goto	l4338
  3362   00112C                     u4030:
  3363   00112C                     
  3364                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3365   00112C  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3366   001130  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3367   001134  CFDE F001          	movff	postinc2,___fltol@f1
  3368   001138  CFDE F002          	movff	postinc2,___fltol@f1+1
  3369   00113C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3370   001140  CFDE F004          	movff	postinc2,___fltol@f1+3
  3371   001144  EC6C  F01A         	call	___fltol	;wreg free
  3372   001148  C001  F071         	movff	?___fltol,RGB2Hue@max
  3373   00114C  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3374   001150                     
  3375                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3376   001150  0100               	movlb	0	; () banked
  3377   001152  5173               	movf	RGB2Hue@min& (0+255),w,b
  3378   001154  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3379   001156  6E59               	movwf	??_RGB2Hue^0,c
  3380   001158  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3381   00115A  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3382   00115C  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3383   00115E  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3384   001162  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3385   001166  0E00               	movlw	0
  3386   001168  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3387   00116A  0EFF               	movlw	-1
  3388   00116C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3389   00116E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3390   001170  0E01               	movlw	1
  3391   001172  EC0E  F017         	call	___xxtofl
  3392   001176  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3393   00117A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3394   00117E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3395   001182  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3396   001186  EE20 F008          	lfsr	2,8
  3397   00118A  5057               	movf	RGB2Hue@cf^0,w,c
  3398   00118C  26D9               	addwf	fsr2l,f,c
  3399   00118E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3400   001190  22DA               	addwfc	fsr2h,f,c
  3401   001192  CFDE F02E          	movff	postinc2,___flsub@a
  3402   001196  CFDE F02F          	movff	postinc2,___flsub@a+1
  3403   00119A  CFDE F030          	movff	postinc2,___flsub@a+2
  3404   00119E  CFDE F031          	movff	postinc2,___flsub@a+3
  3405   0011A2  EE20 F004          	lfsr	2,4
  3406   0011A6  5057               	movf	RGB2Hue@cf^0,w,c
  3407   0011A8  26D9               	addwf	fsr2l,f,c
  3408   0011AA  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3409   0011AC  22DA               	addwfc	fsr2h,f,c
  3410   0011AE  CFDE F02A          	movff	postinc2,___flsub@b
  3411   0011B2  CFDE F02B          	movff	postinc2,___flsub@b+1
  3412   0011B6  CFDE F02C          	movff	postinc2,___flsub@b+2
  3413   0011BA  CFDE F02D          	movff	postinc2,___flsub@b+3
  3414   0011BE  EC20  F023         	call	___flsub	;wreg free
  3415   0011C2  C02A  F032         	movff	?___flsub,___fldiv@b
  3416   0011C6  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3417   0011CA  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3418   0011CE  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3419   0011D2  EC97  F011         	call	___fldiv	;wreg free
  3420   0011D6  C032  F04B         	movff	?___fldiv,___flmul@b
  3421   0011DA  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3422   0011DE  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3423   0011E2  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3424   0011E6  0E00               	movlw	0
  3425   0011E8  6E4F               	movwf	___flmul@a^0,c
  3426   0011EA  0E00               	movlw	0
  3427   0011EC  6E50               	movwf	(___flmul@a+1)^0,c
  3428   0011EE  0E70               	movlw	112
  3429   0011F0  6E51               	movwf	(___flmul@a+2)^0,c
  3430   0011F2  0E42               	movlw	66
  3431   0011F4  6E52               	movwf	(___flmul@a+3)^0,c
  3432   0011F6  EC81  F00F         	call	___flmul	;wreg free
  3433   0011FA  EE20 F010          	lfsr	2,16
  3434   0011FE  5057               	movf	RGB2Hue@cf^0,w,c
  3435   001200  26D9               	addwf	fsr2l,f,c
  3436   001202  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3437   001204  22DA               	addwfc	fsr2h,f,c
  3438   001206  C04B  FFDE         	movff	?___flmul,postinc2
  3439   00120A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3440   00120E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3441   001212  C04E  FFDE         	movff	?___flmul+3,postinc2
  3442                           
  3443                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3444   001216  EF75  F00A         	goto	l4350
  3445   00121A                     l4338:
  3446   00121A  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3447   00121E  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3448   001222  CFDE F001          	movff	postinc2,___flge@ff1
  3449   001226  CFDE F002          	movff	postinc2,___flge@ff1+1
  3450   00122A  CFDE F003          	movff	postinc2,___flge@ff1+2
  3451   00122E  CFDE F004          	movff	postinc2,___flge@ff1+3
  3452   001232  EE20 F004          	lfsr	2,4
  3453   001236  5057               	movf	RGB2Hue@cf^0,w,c
  3454   001238  26D9               	addwf	fsr2l,f,c
  3455   00123A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3456   00123C  22DA               	addwfc	fsr2h,f,c
  3457   00123E  CFDE F005          	movff	postinc2,___flge@ff2
  3458   001242  CFDE F006          	movff	postinc2,___flge@ff2+1
  3459   001246  CFDE F007          	movff	postinc2,___flge@ff2+2
  3460   00124A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3461   00124E  ECEF  F01A         	call	___flge	;wreg free
  3462   001252  B0D8               	btfsc	status,0,c
  3463   001254  EF2E  F009         	goto	u4041
  3464   001258  EF30  F009         	goto	u4040
  3465   00125C                     u4041:
  3466   00125C  EFE6  F009         	goto	l4346
  3467   001260                     u4040:
  3468   001260  EE20 F008          	lfsr	2,8
  3469   001264  5057               	movf	RGB2Hue@cf^0,w,c
  3470   001266  26D9               	addwf	fsr2l,f,c
  3471   001268  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3472   00126A  22DA               	addwfc	fsr2h,f,c
  3473   00126C  CFDE F001          	movff	postinc2,___flge@ff1
  3474   001270  CFDE F002          	movff	postinc2,___flge@ff1+1
  3475   001274  CFDE F003          	movff	postinc2,___flge@ff1+2
  3476   001278  CFDE F004          	movff	postinc2,___flge@ff1+3
  3477   00127C  EE20 F004          	lfsr	2,4
  3478   001280  5057               	movf	RGB2Hue@cf^0,w,c
  3479   001282  26D9               	addwf	fsr2l,f,c
  3480   001284  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3481   001286  22DA               	addwfc	fsr2h,f,c
  3482   001288  CFDE F005          	movff	postinc2,___flge@ff2
  3483   00128C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3484   001290  CFDE F007          	movff	postinc2,___flge@ff2+2
  3485   001294  CFDE F008          	movff	postinc2,___flge@ff2+3
  3486   001298  ECEF  F01A         	call	___flge	;wreg free
  3487   00129C  B0D8               	btfsc	status,0,c
  3488   00129E  EF53  F009         	goto	u4051
  3489   0012A2  EF55  F009         	goto	u4050
  3490   0012A6                     u4051:
  3491   0012A6  EFE6  F009         	goto	l4346
  3492   0012AA                     u4050:
  3493   0012AA                     
  3494                           ;colorfunctions.c: 44:             max=cf->Gf;
  3495   0012AA  EE20 F004          	lfsr	2,4
  3496   0012AE  5057               	movf	RGB2Hue@cf^0,w,c
  3497   0012B0  26D9               	addwf	fsr2l,f,c
  3498   0012B2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3499   0012B4  22DA               	addwfc	fsr2h,f,c
  3500   0012B6  CFDE F001          	movff	postinc2,___fltol@f1
  3501   0012BA  CFDE F002          	movff	postinc2,___fltol@f1+1
  3502   0012BE  CFDE F003          	movff	postinc2,___fltol@f1+2
  3503   0012C2  CFDE F004          	movff	postinc2,___fltol@f1+3
  3504   0012C6  EC6C  F01A         	call	___fltol	;wreg free
  3505   0012CA  C001  F071         	movff	?___fltol,RGB2Hue@max
  3506   0012CE  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3507                           
  3508                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3509   0012D2  0100               	movlb	0	; () banked
  3510   0012D4  5173               	movf	RGB2Hue@min& (0+255),w,b
  3511   0012D6  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3512   0012D8  6E59               	movwf	??_RGB2Hue^0,c
  3513   0012DA  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3514   0012DC  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3515   0012DE  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3516   0012E0  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3517   0012E4  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3518   0012E8  0E00               	movlw	0
  3519   0012EA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3520   0012EC  0EFF               	movlw	-1
  3521   0012EE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3522   0012F0  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3523   0012F2  0E01               	movlw	1
  3524   0012F4  EC0E  F017         	call	___xxtofl
  3525   0012F8  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3526   0012FC  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3527   001300  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3528   001304  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3529   001308  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3530   00130C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3531   001310  CFDE F02E          	movff	postinc2,___flsub@a
  3532   001314  CFDE F02F          	movff	postinc2,___flsub@a+1
  3533   001318  CFDE F030          	movff	postinc2,___flsub@a+2
  3534   00131C  CFDE F031          	movff	postinc2,___flsub@a+3
  3535   001320  EE20 F008          	lfsr	2,8
  3536   001324  5057               	movf	RGB2Hue@cf^0,w,c
  3537   001326  26D9               	addwf	fsr2l,f,c
  3538   001328  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3539   00132A  22DA               	addwfc	fsr2h,f,c
  3540   00132C  CFDE F02A          	movff	postinc2,___flsub@b
  3541   001330  CFDE F02B          	movff	postinc2,___flsub@b+1
  3542   001334  CFDE F02C          	movff	postinc2,___flsub@b+2
  3543   001338  CFDE F02D          	movff	postinc2,___flsub@b+3
  3544   00133C  EC20  F023         	call	___flsub	;wreg free
  3545   001340  C02A  F032         	movff	?___flsub,___fldiv@b
  3546   001344  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3547   001348  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3548   00134C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3549   001350  EC97  F011         	call	___fldiv	;wreg free
  3550   001354  C032  F06D         	movff	?___fldiv,_RGB2Hue$3148
  3551   001358  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3148+1
  3552   00135C  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3148+2
  3553   001360  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3148+3
  3554   001364                     
  3555                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3556   001364  0E00               	movlw	0
  3557   001366  6E1E               	movwf	___fladd@a^0,c
  3558   001368  0E00               	movlw	0
  3559   00136A  6E1F               	movwf	(___fladd@a+1)^0,c
  3560   00136C  0E00               	movlw	0
  3561   00136E  6E20               	movwf	(___fladd@a+2)^0,c
  3562   001370  0E40               	movlw	64
  3563   001372  6E21               	movwf	(___fladd@a+3)^0,c
  3564   001374  C06D  F01A         	movff	_RGB2Hue$3148,___fladd@b
  3565   001378  C06E  F01B         	movff	_RGB2Hue$3148+1,___fladd@b+1
  3566   00137C  C06F  F01C         	movff	_RGB2Hue$3148+2,___fladd@b+2
  3567   001380  C070  F01D         	movff	_RGB2Hue$3148+3,___fladd@b+3
  3568   001384  EC21  F00D         	call	___fladd	;wreg free
  3569   001388  C01A  F04B         	movff	?___fladd,___flmul@b
  3570   00138C  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3571   001390  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3572   001394  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3573   001398  0E00               	movlw	0
  3574   00139A  6E4F               	movwf	___flmul@a^0,c
  3575   00139C  0E00               	movlw	0
  3576   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  3577   0013A0  0E70               	movlw	112
  3578   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  3579   0013A4  0E42               	movlw	66
  3580   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  3581   0013A8  EC81  F00F         	call	___flmul	;wreg free
  3582   0013AC  EE20 F010          	lfsr	2,16
  3583   0013B0  5057               	movf	RGB2Hue@cf^0,w,c
  3584   0013B2  26D9               	addwf	fsr2l,f,c
  3585   0013B4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3586   0013B6  22DA               	addwfc	fsr2h,f,c
  3587   0013B8  C04B  FFDE         	movff	?___flmul,postinc2
  3588   0013BC  C04C  FFDE         	movff	?___flmul+1,postinc2
  3589   0013C0  C04D  FFDE         	movff	?___flmul+2,postinc2
  3590   0013C4  C04E  FFDE         	movff	?___flmul+3,postinc2
  3591                           
  3592                           ;colorfunctions.c: 46:         }else{
  3593   0013C8  EF75  F00A         	goto	l4350
  3594   0013CC                     l4346:
  3595                           
  3596                           ;colorfunctions.c: 47:             max=cf->Bf;
  3597   0013CC  EE20 F008          	lfsr	2,8
  3598   0013D0  5057               	movf	RGB2Hue@cf^0,w,c
  3599   0013D2  26D9               	addwf	fsr2l,f,c
  3600   0013D4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3601   0013D6  22DA               	addwfc	fsr2h,f,c
  3602   0013D8  CFDE F001          	movff	postinc2,___fltol@f1
  3603   0013DC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3604   0013E0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3605   0013E4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3606   0013E8  EC6C  F01A         	call	___fltol	;wreg free
  3607   0013EC  C001  F071         	movff	?___fltol,RGB2Hue@max
  3608   0013F0  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3609                           
  3610                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3611   0013F4  0100               	movlb	0	; () banked
  3612   0013F6  5173               	movf	RGB2Hue@min& (0+255),w,b
  3613   0013F8  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3614   0013FA  6E59               	movwf	??_RGB2Hue^0,c
  3615   0013FC  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3616   0013FE  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3617   001400  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3618   001402  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3619   001406  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3620   00140A  0E00               	movlw	0
  3621   00140C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3622   00140E  0EFF               	movlw	-1
  3623   001410  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3624   001412  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3625   001414  0E01               	movlw	1
  3626   001416  EC0E  F017         	call	___xxtofl
  3627   00141A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3628   00141E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3629   001422  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3630   001426  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3631   00142A  EE20 F004          	lfsr	2,4
  3632   00142E  5057               	movf	RGB2Hue@cf^0,w,c
  3633   001430  26D9               	addwf	fsr2l,f,c
  3634   001432  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3635   001434  22DA               	addwfc	fsr2h,f,c
  3636   001436  CFDE F02E          	movff	postinc2,___flsub@a
  3637   00143A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3638   00143E  CFDE F030          	movff	postinc2,___flsub@a+2
  3639   001442  CFDE F031          	movff	postinc2,___flsub@a+3
  3640   001446  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3641   00144A  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3642   00144E  CFDE F02A          	movff	postinc2,___flsub@b
  3643   001452  CFDE F02B          	movff	postinc2,___flsub@b+1
  3644   001456  CFDE F02C          	movff	postinc2,___flsub@b+2
  3645   00145A  CFDE F02D          	movff	postinc2,___flsub@b+3
  3646   00145E  EC20  F023         	call	___flsub	;wreg free
  3647   001462  C02A  F032         	movff	?___flsub,___fldiv@b
  3648   001466  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3649   00146A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3650   00146E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3651   001472  EC97  F011         	call	___fldiv	;wreg free
  3652   001476  C032  F06D         	movff	?___fldiv,_RGB2Hue$3148
  3653   00147A  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3148+1
  3654   00147E  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3148+2
  3655   001482  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3148+3
  3656   001486                     
  3657                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3658   001486  0E00               	movlw	0
  3659   001488  6E1E               	movwf	___fladd@a^0,c
  3660   00148A  0E00               	movlw	0
  3661   00148C  6E1F               	movwf	(___fladd@a+1)^0,c
  3662   00148E  0E80               	movlw	128
  3663   001490  6E20               	movwf	(___fladd@a+2)^0,c
  3664   001492  0E40               	movlw	64
  3665   001494  6E21               	movwf	(___fladd@a+3)^0,c
  3666   001496  C06D  F01A         	movff	_RGB2Hue$3148,___fladd@b
  3667   00149A  C06E  F01B         	movff	_RGB2Hue$3148+1,___fladd@b+1
  3668   00149E  C06F  F01C         	movff	_RGB2Hue$3148+2,___fladd@b+2
  3669   0014A2  C070  F01D         	movff	_RGB2Hue$3148+3,___fladd@b+3
  3670   0014A6  EC21  F00D         	call	___fladd	;wreg free
  3671   0014AA  C01A  F04B         	movff	?___fladd,___flmul@b
  3672   0014AE  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3673   0014B2  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3674   0014B6  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3675   0014BA  0E00               	movlw	0
  3676   0014BC  6E4F               	movwf	___flmul@a^0,c
  3677   0014BE  0E00               	movlw	0
  3678   0014C0  6E50               	movwf	(___flmul@a+1)^0,c
  3679   0014C2  0E70               	movlw	112
  3680   0014C4  6E51               	movwf	(___flmul@a+2)^0,c
  3681   0014C6  0E42               	movlw	66
  3682   0014C8  6E52               	movwf	(___flmul@a+3)^0,c
  3683   0014CA  EC81  F00F         	call	___flmul	;wreg free
  3684   0014CE  EE20 F010          	lfsr	2,16
  3685   0014D2  5057               	movf	RGB2Hue@cf^0,w,c
  3686   0014D4  26D9               	addwf	fsr2l,f,c
  3687   0014D6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3688   0014D8  22DA               	addwfc	fsr2h,f,c
  3689   0014DA  C04B  FFDE         	movff	?___flmul,postinc2
  3690   0014DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3691   0014E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3692   0014E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3693   0014EA                     l4350:
  3694                           
  3695                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3696   0014EA  EE20 F010          	lfsr	2,16
  3697   0014EE  5057               	movf	RGB2Hue@cf^0,w,c
  3698   0014F0  26D9               	addwf	fsr2l,f,c
  3699   0014F2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3700   0014F4  22DA               	addwfc	fsr2h,f,c
  3701   0014F6  0E03               	movlw	3
  3702   0014F8  BEDB               	btfsc	plusw2,7,c
  3703   0014FA  EF83  F00A         	goto	u4060
  3704   0014FE  EF81  F00A         	goto	u4061
  3705   001502                     u4061:
  3706   001502  EFA9  F00A         	goto	l585
  3707   001506                     u4060:
  3708   001506                     
  3709                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3710   001506  EE20 F010          	lfsr	2,16
  3711   00150A  5057               	movf	RGB2Hue@cf^0,w,c
  3712   00150C  26D9               	addwf	fsr2l,f,c
  3713   00150E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3714   001510  22DA               	addwfc	fsr2h,f,c
  3715   001512  CFDE F01A          	movff	postinc2,___fladd@b
  3716   001516  CFDE F01B          	movff	postinc2,___fladd@b+1
  3717   00151A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3718   00151E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3719   001522  0E00               	movlw	0
  3720   001524  6E1E               	movwf	___fladd@a^0,c
  3721   001526  0E00               	movlw	0
  3722   001528  6E1F               	movwf	(___fladd@a+1)^0,c
  3723   00152A  0EB4               	movlw	180
  3724   00152C  6E20               	movwf	(___fladd@a+2)^0,c
  3725   00152E  0E43               	movlw	67
  3726   001530  6E21               	movwf	(___fladd@a+3)^0,c
  3727   001532  EC21  F00D         	call	___fladd	;wreg free
  3728   001536  EE20 F010          	lfsr	2,16
  3729   00153A  5057               	movf	RGB2Hue@cf^0,w,c
  3730   00153C  26D9               	addwf	fsr2l,f,c
  3731   00153E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3732   001540  22DA               	addwfc	fsr2h,f,c
  3733   001542  C01A  FFDE         	movff	?___fladd,postinc2
  3734   001546  C01B  FFDE         	movff	?___fladd+1,postinc2
  3735   00154A  C01C  FFDE         	movff	?___fladd+2,postinc2
  3736   00154E  C01D  FFDE         	movff	?___fladd+3,postinc2
  3737   001552                     l585:
  3738   001552  0012               	return		;funcret
  3739   001554                     __end_of_RGB2Hue:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function ___xxtofl *****************
  3743 ;; Defined at:
  3744 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  sign            1    wreg     unsigned char 
  3747 ;;  val             4   11[COMRAM] long 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  sign            1   19[COMRAM] unsigned char 
  3750 ;;  arg             4   21[COMRAM] unsigned long 
  3751 ;;  exp             1   20[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  4   11[COMRAM] unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;Total ram usage:       14 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_Left45
  3772 ;;		_Right45
  3773 ;;		_reverseHalfSquare
  3774 ;;		_Yellow_rev1_R90
  3775 ;;		_Pink_rev1_L90
  3776 ;;		_colour_read_all
  3777 ;;		_RGB2Hue
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text20
  3782   002E1C                     __ptext20:
  3783                           	callstack 0
  3784   002E1C                     ___xxtofl:
  3785                           	callstack 28
  3786                           
  3787                           ;incstack = 0
  3788                           ;___xxtofl@sign stored from wreg
  3789   002E1C  6E14               	movwf	___xxtofl@sign^0,c
  3790   002E1E  5014               	movf	___xxtofl@sign^0,w,c
  3791   002E20  B4D8               	btfsc	status,2,c
  3792   002E22  EF15  F017         	goto	u3841
  3793   002E26  EF17  F017         	goto	u3840
  3794   002E2A                     u3841:
  3795   002E2A  EF39  F017         	goto	l1320
  3796   002E2E                     u3840:
  3797   002E2E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3798   002E30  EF1E  F017         	goto	u3850
  3799   002E34  EF1C  F017         	goto	u3851
  3800   002E38                     u3851:
  3801   002E38  EF39  F017         	goto	l1320
  3802   002E3C                     u3850:
  3803   002E3C  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3804   002E40  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3805   002E44  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3806   002E48  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3807   002E4C  1E10               	comf	??___xxtofl^0,f,c
  3808   002E4E  1E11               	comf	(??___xxtofl+1)^0,f,c
  3809   002E50  1E12               	comf	(??___xxtofl+2)^0,f,c
  3810   002E52  1E13               	comf	(??___xxtofl+3)^0,f,c
  3811   002E54  2A10               	incf	??___xxtofl^0,f,c
  3812   002E56  0E00               	movlw	0
  3813   002E58  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3814   002E5A  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3815   002E5C  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3816   002E5E  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3817   002E62  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3818   002E66  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3819   002E6A  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3820   002E6E  EF41  F017         	goto	l4172
  3821   002E72                     l1320:
  3822   002E72  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3823   002E76  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3824   002E7A  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3825   002E7E  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3826   002E82                     l4172:
  3827   002E82  500C               	movf	___xxtofl@val^0,w,c
  3828   002E84  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3829   002E86  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3830   002E88  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3831   002E8A  A4D8               	btfss	status,2,c
  3832   002E8C  EF4A  F017         	goto	u3861
  3833   002E90  EF4C  F017         	goto	u3860
  3834   002E94                     u3861:
  3835   002E94  EF56  F017         	goto	l4178
  3836   002E98                     u3860:
  3837   002E98  0E00               	movlw	0
  3838   002E9A  6E0C               	movwf	?___xxtofl^0,c
  3839   002E9C  0E00               	movlw	0
  3840   002E9E  6E0D               	movwf	(?___xxtofl+1)^0,c
  3841   002EA0  0E00               	movlw	0
  3842   002EA2  6E0E               	movwf	(?___xxtofl+2)^0,c
  3843   002EA4  0E00               	movlw	0
  3844   002EA6  6E0F               	movwf	(?___xxtofl+3)^0,c
  3845   002EA8  EFE7  F017         	goto	l1323
  3846   002EAC                     l4178:
  3847   002EAC  0E96               	movlw	150
  3848   002EAE  6E15               	movwf	___xxtofl@exp^0,c
  3849   002EB0  EF60  F017         	goto	l4182
  3850   002EB4                     l4180:
  3851   002EB4  2A15               	incf	___xxtofl@exp^0,f,c
  3852   002EB6  90D8               	bcf	status,0,c
  3853   002EB8  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3854   002EBA  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3855   002EBC  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3856   002EBE  3216               	rrcf	___xxtofl@arg^0,f,c
  3857   002EC0                     l4182:
  3858   002EC0  0E00               	movlw	0
  3859   002EC2  1416               	andwf	___xxtofl@arg^0,w,c
  3860   002EC4  6E10               	movwf	??___xxtofl^0,c
  3861   002EC6  0E00               	movlw	0
  3862   002EC8  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3863   002ECA  6E11               	movwf	(??___xxtofl+1)^0,c
  3864   002ECC  0E00               	movlw	0
  3865   002ECE  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3866   002ED0  6E12               	movwf	(??___xxtofl+2)^0,c
  3867   002ED2  0EFE               	movlw	254
  3868   002ED4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3869   002ED6  6E13               	movwf	(??___xxtofl+3)^0,c
  3870   002ED8  5010               	movf	??___xxtofl^0,w,c
  3871   002EDA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3872   002EDC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3873   002EDE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3874   002EE0  A4D8               	btfss	status,2,c
  3875   002EE2  EF75  F017         	goto	u3871
  3876   002EE6  EF77  F017         	goto	u3870
  3877   002EEA                     u3871:
  3878   002EEA  EF5A  F017         	goto	l4180
  3879   002EEE                     u3870:
  3880   002EEE  EF85  F017         	goto	l1327
  3881   002EF2                     l4184:
  3882   002EF2  2A15               	incf	___xxtofl@exp^0,f,c
  3883   002EF4  0E01               	movlw	1
  3884   002EF6  2616               	addwf	___xxtofl@arg^0,f,c
  3885   002EF8  0E00               	movlw	0
  3886   002EFA  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3887   002EFC  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3888   002EFE  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3889   002F00  90D8               	bcf	status,0,c
  3890   002F02  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3891   002F04  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3892   002F06  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3893   002F08  3216               	rrcf	___xxtofl@arg^0,f,c
  3894   002F0A                     l1327:
  3895   002F0A  0E00               	movlw	0
  3896   002F0C  1416               	andwf	___xxtofl@arg^0,w,c
  3897   002F0E  6E10               	movwf	??___xxtofl^0,c
  3898   002F10  0E00               	movlw	0
  3899   002F12  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3900   002F14  6E11               	movwf	(??___xxtofl+1)^0,c
  3901   002F16  0E00               	movlw	0
  3902   002F18  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3903   002F1A  6E12               	movwf	(??___xxtofl+2)^0,c
  3904   002F1C  0EFF               	movlw	255
  3905   002F1E  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3906   002F20  6E13               	movwf	(??___xxtofl+3)^0,c
  3907   002F22  5010               	movf	??___xxtofl^0,w,c
  3908   002F24  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3909   002F26  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3910   002F28  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3911   002F2A  A4D8               	btfss	status,2,c
  3912   002F2C  EF9A  F017         	goto	u3881
  3913   002F30  EF9C  F017         	goto	u3880
  3914   002F34                     u3881:
  3915   002F34  EF79  F017         	goto	l4184
  3916   002F38                     u3880:
  3917   002F38  EFA4  F017         	goto	l4192
  3918   002F3C                     l4190:
  3919   002F3C  0615               	decf	___xxtofl@exp^0,f,c
  3920   002F3E  90D8               	bcf	status,0,c
  3921   002F40  3616               	rlcf	___xxtofl@arg^0,f,c
  3922   002F42  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3923   002F44  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3924   002F46  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3925   002F48                     l4192:
  3926   002F48  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3927   002F4A  EFA9  F017         	goto	u3891
  3928   002F4E  EFAB  F017         	goto	u3890
  3929   002F52                     u3891:
  3930   002F52  EFB3  F017         	goto	l1334
  3931   002F56                     u3890:
  3932   002F56  0E02               	movlw	2
  3933   002F58  6015               	cpfslt	___xxtofl@exp^0,c
  3934   002F5A  EFB1  F017         	goto	u3901
  3935   002F5E  EFB3  F017         	goto	u3900
  3936   002F62                     u3901:
  3937   002F62  EF9E  F017         	goto	l4190
  3938   002F66                     u3900:
  3939   002F66                     l1334:
  3940   002F66  B015               	btfsc	___xxtofl@exp^0,0,c
  3941   002F68  EFB8  F017         	goto	u3911
  3942   002F6C  EFBA  F017         	goto	u3910
  3943   002F70                     u3911:
  3944   002F70  EFBB  F017         	goto	l4198
  3945   002F74                     u3910:
  3946   002F74  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3947   002F76                     l4198:
  3948   002F76  90D8               	bcf	status,0,c
  3949   002F78  3215               	rrcf	___xxtofl@exp^0,f,c
  3950   002F7A  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3951   002F7E  6A11               	clrf	(??___xxtofl+1)^0,c
  3952   002F80  6A12               	clrf	(??___xxtofl+2)^0,c
  3953   002F82  6A13               	clrf	(??___xxtofl+3)^0,c
  3954   002F84  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3955   002F88  6A12               	clrf	(??___xxtofl+2)^0,c
  3956   002F8A  6A11               	clrf	(??___xxtofl+1)^0,c
  3957   002F8C  6A10               	clrf	??___xxtofl^0,c
  3958   002F8E  5010               	movf	??___xxtofl^0,w,c
  3959   002F90  1216               	iorwf	___xxtofl@arg^0,f,c
  3960   002F92  5011               	movf	(??___xxtofl+1)^0,w,c
  3961   002F94  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3962   002F96  5012               	movf	(??___xxtofl+2)^0,w,c
  3963   002F98  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3964   002F9A  5013               	movf	(??___xxtofl+3)^0,w,c
  3965   002F9C  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3966   002F9E  5014               	movf	___xxtofl@sign^0,w,c
  3967   002FA0  B4D8               	btfsc	status,2,c
  3968   002FA2  EFD5  F017         	goto	u3921
  3969   002FA6  EFD7  F017         	goto	u3920
  3970   002FAA                     u3921:
  3971   002FAA  EFDF  F017         	goto	l4208
  3972   002FAE                     u3920:
  3973   002FAE  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3974   002FB0  EFDE  F017         	goto	u3930
  3975   002FB4  EFDC  F017         	goto	u3931
  3976   002FB8                     u3931:
  3977   002FB8  EFDF  F017         	goto	l4208
  3978   002FBC                     u3930:
  3979   002FBC  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3980   002FBE                     l4208:
  3981   002FBE  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3982   002FC2  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3983   002FC6  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3984   002FCA  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3985   002FCE                     l1323:
  3986   002FCE  0012               	return		;funcret
  3987   002FD0                     __end_of___xxtofl:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function ___fltol *****************
  3991 ;; Defined at:
  3992 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  f1              4    0[COMRAM] unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  exp1            1    9[COMRAM] unsigned char 
  3997 ;;  sign1           1    8[COMRAM] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  4    0[COMRAM] long 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:       10 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_Left45
  4018 ;;		_Right45
  4019 ;;		_reverseHalfSquare
  4020 ;;		_Yellow_rev1_R90
  4021 ;;		_Pink_rev1_L90
  4022 ;;		_RGB2Hue
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text21
  4027   0034D8                     __ptext21:
  4028                           	callstack 0
  4029   0034D8                     ___fltol:
  4030                           	callstack 28
  4031   0034D8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4032   0034DA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4033   0034DC  6E0A               	movwf	___fltol@exp1^0,c
  4034   0034DE  500A               	movf	___fltol@exp1^0,w,c
  4035   0034E0  A4D8               	btfss	status,2,c
  4036   0034E2  EF75  F01A         	goto	u3771
  4037   0034E6  EF77  F01A         	goto	u3770
  4038   0034EA                     u3771:
  4039   0034EA  EF81  F01A         	goto	l4128
  4040   0034EE                     u3770:
  4041   0034EE                     l4124:
  4042   0034EE  0E00               	movlw	0
  4043   0034F0  6E01               	movwf	?___fltol^0,c
  4044   0034F2  0E00               	movlw	0
  4045   0034F4  6E02               	movwf	(?___fltol+1)^0,c
  4046   0034F6  0E00               	movlw	0
  4047   0034F8  6E03               	movwf	(?___fltol+2)^0,c
  4048   0034FA  0E00               	movlw	0
  4049   0034FC  6E04               	movwf	(?___fltol+3)^0,c
  4050   0034FE  EFEE  F01A         	goto	l962
  4051   003502                     l4128:
  4052   003502  C001  F005         	movff	___fltol@f1,??___fltol
  4053   003506  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4054   00350A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4055   00350E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4056   003512  0E20               	movlw	32
  4057   003514  EF91  F01A         	goto	u3780
  4058   003518                     u3785:
  4059   003518  90D8               	bcf	status,0,c
  4060   00351A  3208               	rrcf	(??___fltol+3)^0,f,c
  4061   00351C  3207               	rrcf	(??___fltol+2)^0,f,c
  4062   00351E  3206               	rrcf	(??___fltol+1)^0,f,c
  4063   003520  3205               	rrcf	??___fltol^0,f,c
  4064   003522                     u3780:
  4065   003522  2EE8               	decfsz	wreg,f,c
  4066   003524  EF8C  F01A         	goto	u3785
  4067   003528  5005               	movf	??___fltol^0,w,c
  4068   00352A  6E09               	movwf	___fltol@sign1^0,c
  4069   00352C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4070   00352E  0EFF               	movlw	255
  4071   003530  1601               	andwf	___fltol@f1^0,f,c
  4072   003532  0EFF               	movlw	255
  4073   003534  1602               	andwf	(___fltol@f1+1)^0,f,c
  4074   003536  0EFF               	movlw	255
  4075   003538  1603               	andwf	(___fltol@f1+2)^0,f,c
  4076   00353A  0E00               	movlw	0
  4077   00353C  1604               	andwf	(___fltol@f1+3)^0,f,c
  4078   00353E  0E96               	movlw	150
  4079   003540  5E0A               	subwf	___fltol@exp1^0,f,c
  4080   003542  BE0A               	btfsc	___fltol@exp1^0,7,c
  4081   003544  EFA8  F01A         	goto	u3790
  4082   003548  EFA6  F01A         	goto	u3791
  4083   00354C                     u3791:
  4084   00354C  EFBE  F01A         	goto	l4148
  4085   003550                     u3790:
  4086   003550  500A               	movf	___fltol@exp1^0,w,c
  4087   003552  0A80               	xorlw	128
  4088   003554  0F97               	addlw	151
  4089   003556  B0D8               	btfsc	status,0,c
  4090   003558  EFB0  F01A         	goto	u3801
  4091   00355C  EFB2  F01A         	goto	u3800
  4092   003560                     u3801:
  4093   003560  EFB4  F01A         	goto	l4144
  4094   003564                     u3800:
  4095   003564  EF77  F01A         	goto	l4124
  4096   003568                     l4144:
  4097   003568  90D8               	bcf	status,0,c
  4098   00356A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4099   00356C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4100   00356E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4101   003570  3201               	rrcf	___fltol@f1^0,f,c
  4102   003572  3E0A               	incfsz	___fltol@exp1^0,f,c
  4103   003574  EFB4  F01A         	goto	l4144
  4104   003578  EFD6  F01A         	goto	l4158
  4105   00357C                     l4148:
  4106   00357C  0E1F               	movlw	31
  4107   00357E  640A               	cpfsgt	___fltol@exp1^0,c
  4108   003580  EFC4  F01A         	goto	u3811
  4109   003584  EFC6  F01A         	goto	u3810
  4110   003588                     u3811:
  4111   003588  EFCE  F01A         	goto	l4156
  4112   00358C                     u3810:
  4113   00358C  EF77  F01A         	goto	l4124
  4114   003590                     l4154:
  4115   003590  90D8               	bcf	status,0,c
  4116   003592  3601               	rlcf	___fltol@f1^0,f,c
  4117   003594  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4118   003596  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4119   003598  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4120   00359A  060A               	decf	___fltol@exp1^0,f,c
  4121   00359C                     l4156:
  4122   00359C  500A               	movf	___fltol@exp1^0,w,c
  4123   00359E  A4D8               	btfss	status,2,c
  4124   0035A0  EFD4  F01A         	goto	u3821
  4125   0035A4  EFD6  F01A         	goto	u3820
  4126   0035A8                     u3821:
  4127   0035A8  EFC8  F01A         	goto	l4154
  4128   0035AC                     u3820:
  4129   0035AC                     l4158:
  4130   0035AC  5009               	movf	___fltol@sign1^0,w,c
  4131   0035AE  B4D8               	btfsc	status,2,c
  4132   0035B0  EFDC  F01A         	goto	u3831
  4133   0035B4  EFDE  F01A         	goto	u3830
  4134   0035B8                     u3831:
  4135   0035B8  EFE6  F01A         	goto	l4162
  4136   0035BC                     u3830:
  4137   0035BC  1E04               	comf	(___fltol@f1+3)^0,f,c
  4138   0035BE  1E03               	comf	(___fltol@f1+2)^0,f,c
  4139   0035C0  1E02               	comf	(___fltol@f1+1)^0,f,c
  4140   0035C2  6C01               	negf	___fltol@f1^0,c
  4141   0035C4  0E00               	movlw	0
  4142   0035C6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4143   0035C8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4144   0035CA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4145   0035CC                     l4162:
  4146   0035CC  C001  F001         	movff	___fltol@f1,?___fltol
  4147   0035D0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4148   0035D4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4149   0035D8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4150   0035DC                     l962:
  4151   0035DC  0012               	return		;funcret
  4152   0035DE                     __end_of___fltol:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function ___flsub *****************
  4156 ;; Defined at:
  4157 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  b               4   41[COMRAM] long 
  4160 ;;  a               4   45[COMRAM] long 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  4   41[COMRAM] long 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4172 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;Total ram usage:        8 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; Hardware stack levels required when called: 2
  4179 ;; This function calls:
  4180 ;;		___fladd
  4181 ;; This function is called by:
  4182 ;;		_RGB2Hue
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text22
  4187   004640                     __ptext22:
  4188                           	callstack 0
  4189   004640                     ___flsub:
  4190                           	callstack 27
  4191   004640  0E00               	movlw	0
  4192   004642  1A2E               	xorwf	___flsub@a^0,f,c
  4193   004644  0E00               	movlw	0
  4194   004646  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  4195   004648  0E00               	movlw	0
  4196   00464A  1A30               	xorwf	(___flsub@a+2)^0,f,c
  4197   00464C  0E80               	movlw	128
  4198   00464E  1A31               	xorwf	(___flsub@a+3)^0,f,c
  4199   004650  C02A  F01A         	movff	___flsub@b,___fladd@b
  4200   004654  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  4201   004658  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  4202   00465C  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  4203   004660  C02E  F01E         	movff	___flsub@a,___fladd@a
  4204   004664  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  4205   004668  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  4206   00466C  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  4207   004670  EC21  F00D         	call	___fladd	;wreg free
  4208   004674  C01A  F02A         	movff	?___fladd,?___flsub
  4209   004678  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  4210   00467C  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  4211   004680  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  4212   004684  0012               	return		;funcret
  4213   004686                     __end_of___flsub:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function ___fladd *****************
  4217 ;; Defined at:
  4218 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  b               4   25[COMRAM] long 
  4221 ;;  a               4   29[COMRAM] long 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  grs             1   40[COMRAM] unsigned char 
  4224 ;;  bexp            1   39[COMRAM] unsigned char 
  4225 ;;  aexp            1   38[COMRAM] unsigned char 
  4226 ;;  signs           1   37[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  4   25[COMRAM] unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;Total ram usage:       16 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 1
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_RGB2Hue
  4247 ;;		___flsub
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text23
  4252   001A42                     __ptext23:
  4253                           	callstack 0
  4254   001A42                     ___fladd:
  4255                           	callstack 27
  4256   001A42  501D               	movf	(___fladd@b+3)^0,w,c
  4257   001A44  0B80               	andlw	128
  4258   001A46  6E26               	movwf	___fladd@signs^0,c
  4259   001A48  501D               	movf	(___fladd@b+3)^0,w,c
  4260   001A4A  241D               	addwf	(___fladd@b+3)^0,w,c
  4261   001A4C  6E28               	movwf	___fladd@bexp^0,c
  4262   001A4E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4263   001A50  EF2C  F00D         	goto	u2591
  4264   001A54  EF2E  F00D         	goto	u2590
  4265   001A58                     u2591:
  4266   001A58  EF2F  F00D         	goto	l3396
  4267   001A5C                     u2590:
  4268   001A5C  8028               	bsf	___fladd@bexp^0,0,c
  4269   001A5E                     l3396:
  4270   001A5E  5028               	movf	___fladd@bexp^0,w,c
  4271   001A60  B4D8               	btfsc	status,2,c
  4272   001A62  EF35  F00D         	goto	u2601
  4273   001A66  EF37  F00D         	goto	u2600
  4274   001A6A                     u2601:
  4275   001A6A  EF4C  F00D         	goto	l3406
  4276   001A6E                     u2600:
  4277   001A6E  2828               	incf	___fladd@bexp^0,w,c
  4278   001A70  A4D8               	btfss	status,2,c
  4279   001A72  EF3D  F00D         	goto	u2611
  4280   001A76  EF3F  F00D         	goto	u2610
  4281   001A7A                     u2611:
  4282   001A7A  EF47  F00D         	goto	l3402
  4283   001A7E                     u2610:
  4284   001A7E  0E00               	movlw	0
  4285   001A80  6E1A               	movwf	___fladd@b^0,c
  4286   001A82  0E00               	movlw	0
  4287   001A84  6E1B               	movwf	(___fladd@b+1)^0,c
  4288   001A86  0E00               	movlw	0
  4289   001A88  6E1C               	movwf	(___fladd@b+2)^0,c
  4290   001A8A  0E00               	movlw	0
  4291   001A8C  6E1D               	movwf	(___fladd@b+3)^0,c
  4292   001A8E                     l3402:
  4293   001A8E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4294   001A90  0E00               	movlw	0
  4295   001A92  6E1D               	movwf	(___fladd@b+3)^0,c
  4296   001A94  EF54  F00D         	goto	l3408
  4297   001A98                     l3406:
  4298   001A98  0E00               	movlw	0
  4299   001A9A  6E1A               	movwf	___fladd@b^0,c
  4300   001A9C  0E00               	movlw	0
  4301   001A9E  6E1B               	movwf	(___fladd@b+1)^0,c
  4302   001AA0  0E00               	movlw	0
  4303   001AA2  6E1C               	movwf	(___fladd@b+2)^0,c
  4304   001AA4  0E00               	movlw	0
  4305   001AA6  6E1D               	movwf	(___fladd@b+3)^0,c
  4306   001AA8                     l3408:
  4307   001AA8  5021               	movf	(___fladd@a+3)^0,w,c
  4308   001AAA  0B80               	andlw	128
  4309   001AAC  6E27               	movwf	___fladd@aexp^0,c
  4310   001AAE  5026               	movf	___fladd@signs^0,w,c
  4311   001AB0  1827               	xorwf	___fladd@aexp^0,w,c
  4312   001AB2  B4D8               	btfsc	status,2,c
  4313   001AB4  EF5E  F00D         	goto	u2621
  4314   001AB8  EF60  F00D         	goto	u2620
  4315   001ABC                     u2621:
  4316   001ABC  EF61  F00D         	goto	l3414
  4317   001AC0                     u2620:
  4318   001AC0  8C26               	bsf	___fladd@signs^0,6,c
  4319   001AC2                     l3414:
  4320   001AC2  5021               	movf	(___fladd@a+3)^0,w,c
  4321   001AC4  2421               	addwf	(___fladd@a+3)^0,w,c
  4322   001AC6  6E27               	movwf	___fladd@aexp^0,c
  4323   001AC8  AE20               	btfss	(___fladd@a+2)^0,7,c
  4324   001ACA  EF69  F00D         	goto	u2631
  4325   001ACE  EF6B  F00D         	goto	u2630
  4326   001AD2                     u2631:
  4327   001AD2  EF6C  F00D         	goto	l3420
  4328   001AD6                     u2630:
  4329   001AD6  8027               	bsf	___fladd@aexp^0,0,c
  4330   001AD8                     l3420:
  4331   001AD8  5027               	movf	___fladd@aexp^0,w,c
  4332   001ADA  B4D8               	btfsc	status,2,c
  4333   001ADC  EF72  F00D         	goto	u2641
  4334   001AE0  EF74  F00D         	goto	u2640
  4335   001AE4                     u2641:
  4336   001AE4  EF89  F00D         	goto	l3430
  4337   001AE8                     u2640:
  4338   001AE8  2827               	incf	___fladd@aexp^0,w,c
  4339   001AEA  A4D8               	btfss	status,2,c
  4340   001AEC  EF7A  F00D         	goto	u2651
  4341   001AF0  EF7C  F00D         	goto	u2650
  4342   001AF4                     u2651:
  4343   001AF4  EF84  F00D         	goto	l3426
  4344   001AF8                     u2650:
  4345   001AF8  0E00               	movlw	0
  4346   001AFA  6E1E               	movwf	___fladd@a^0,c
  4347   001AFC  0E00               	movlw	0
  4348   001AFE  6E1F               	movwf	(___fladd@a+1)^0,c
  4349   001B00  0E00               	movlw	0
  4350   001B02  6E20               	movwf	(___fladd@a+2)^0,c
  4351   001B04  0E00               	movlw	0
  4352   001B06  6E21               	movwf	(___fladd@a+3)^0,c
  4353   001B08                     l3426:
  4354   001B08  8E20               	bsf	(___fladd@a+2)^0,7,c
  4355   001B0A  0E00               	movlw	0
  4356   001B0C  6E21               	movwf	(___fladd@a+3)^0,c
  4357   001B0E  EF91  F00D         	goto	l3432
  4358   001B12                     l3430:
  4359   001B12  0E00               	movlw	0
  4360   001B14  6E1E               	movwf	___fladd@a^0,c
  4361   001B16  0E00               	movlw	0
  4362   001B18  6E1F               	movwf	(___fladd@a+1)^0,c
  4363   001B1A  0E00               	movlw	0
  4364   001B1C  6E20               	movwf	(___fladd@a+2)^0,c
  4365   001B1E  0E00               	movlw	0
  4366   001B20  6E21               	movwf	(___fladd@a+3)^0,c
  4367   001B22                     l3432:
  4368   001B22  5028               	movf	___fladd@bexp^0,w,c
  4369   001B24  5C27               	subwf	___fladd@aexp^0,w,c
  4370   001B26  B0D8               	btfsc	status,0,c
  4371   001B28  EF98  F00D         	goto	u2661
  4372   001B2C  EF9A  F00D         	goto	u2660
  4373   001B30                     u2661:
  4374   001B30  EFC1  F00D         	goto	l3468
  4375   001B34                     u2660:
  4376   001B34  AC26               	btfss	___fladd@signs^0,6,c
  4377   001B36  EF9F  F00D         	goto	u2671
  4378   001B3A  EFA1  F00D         	goto	u2670
  4379   001B3E                     u2671:
  4380   001B3E  EFA3  F00D         	goto	l3438
  4381   001B42                     u2670:
  4382   001B42  0E80               	movlw	128
  4383   001B44  1A26               	xorwf	___fladd@signs^0,f,c
  4384   001B46                     l3438:
  4385   001B46  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4386   001B4A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4387   001B4E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4388   001B52  C01A  F029         	movff	___fladd@b,___fladd@grs
  4389   001B56  C01E  F01A         	movff	___fladd@a,___fladd@b
  4390   001B5A  C029  F01E         	movff	___fladd@grs,___fladd@a
  4391   001B5E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4392   001B62  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4393   001B66  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4394   001B6A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4395   001B6E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4396   001B72  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4397   001B76  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4398   001B7A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4399   001B7E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4400   001B82                     l3468:
  4401   001B82  0E00               	movlw	0
  4402   001B84  6E29               	movwf	___fladd@grs^0,c
  4403   001B86  5028               	movf	___fladd@bexp^0,w,c
  4404   001B88  C027  F022         	movff	___fladd@aexp,??___fladd
  4405   001B8C  6A23               	clrf	(??___fladd+1)^0,c
  4406   001B8E  5E22               	subwf	??___fladd^0,f,c
  4407   001B90  0E00               	movlw	0
  4408   001B92  5A23               	subwfb	(??___fladd+1)^0,f,c
  4409   001B94  BE23               	btfsc	(??___fladd+1)^0,7,c
  4410   001B96  EFD6  F00D         	goto	u2681
  4411   001B9A  5023               	movf	(??___fladd+1)^0,w,c
  4412   001B9C  E109               	bnz	u2680
  4413   001B9E  0E1A               	movlw	26
  4414   001BA0  5C22               	subwf	??___fladd^0,w,c
  4415   001BA2  A0D8               	btfss	status,0,c
  4416   001BA4  EFD6  F00D         	goto	u2681
  4417   001BA8  EFD8  F00D         	goto	u2680
  4418   001BAC                     u2681:
  4419   001BAC  EF0F  F00E         	goto	l1194
  4420   001BB0                     u2680:
  4421   001BB0  501A               	movf	___fladd@b^0,w,c
  4422   001BB2  101B               	iorwf	(___fladd@b+1)^0,w,c
  4423   001BB4  101C               	iorwf	(___fladd@b+2)^0,w,c
  4424   001BB6  101D               	iorwf	(___fladd@b+3)^0,w,c
  4425   001BB8  A4D8               	btfss	status,2,c
  4426   001BBA  EFE1  F00D         	goto	u2691
  4427   001BBE  EFE4  F00D         	goto	u2690
  4428   001BC2                     u2691:
  4429   001BC2  0E01               	movlw	1
  4430   001BC4  EFE5  F00D         	goto	u2700
  4431   001BC8                     u2690:
  4432   001BC8  0E00               	movlw	0
  4433   001BCA                     u2700:
  4434   001BCA  6E29               	movwf	___fladd@grs^0,c
  4435   001BCC  0E00               	movlw	0
  4436   001BCE  6E1A               	movwf	___fladd@b^0,c
  4437   001BD0  0E00               	movlw	0
  4438   001BD2  6E1B               	movwf	(___fladd@b+1)^0,c
  4439   001BD4  0E00               	movlw	0
  4440   001BD6  6E1C               	movwf	(___fladd@b+2)^0,c
  4441   001BD8  0E00               	movlw	0
  4442   001BDA  6E1D               	movwf	(___fladd@b+3)^0,c
  4443   001BDC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4444   001BE0  EF18  F00E         	goto	l1193
  4445   001BE4                     l1195:
  4446   001BE4  A029               	btfss	___fladd@grs^0,0,c
  4447   001BE6  EFF7  F00D         	goto	u2711
  4448   001BEA  EFF9  F00D         	goto	u2710
  4449   001BEE                     u2711:
  4450   001BEE  EFFF  F00D         	goto	l3480
  4451   001BF2                     u2710:
  4452   001BF2  90D8               	bcf	status,0,c
  4453   001BF4  3029               	rrcf	___fladd@grs^0,w,c
  4454   001BF6  0901               	iorlw	1
  4455   001BF8  6E29               	movwf	___fladd@grs^0,c
  4456   001BFA  EF01  F00E         	goto	l3482
  4457   001BFE                     l3480:
  4458   001BFE  90D8               	bcf	status,0,c
  4459   001C00  3229               	rrcf	___fladd@grs^0,f,c
  4460   001C02                     l3482:
  4461   001C02  A01A               	btfss	___fladd@b^0,0,c
  4462   001C04  EF06  F00E         	goto	u2721
  4463   001C08  EF08  F00E         	goto	u2720
  4464   001C0C                     u2721:
  4465   001C0C  EF09  F00E         	goto	l3486
  4466   001C10                     u2720:
  4467   001C10  8E29               	bsf	___fladd@grs^0,7,c
  4468   001C12                     l3486:
  4469   001C12  341D               	rlcf	(___fladd@b+3)^0,w,c
  4470   001C14  321D               	rrcf	(___fladd@b+3)^0,f,c
  4471   001C16  321C               	rrcf	(___fladd@b+2)^0,f,c
  4472   001C18  321B               	rrcf	(___fladd@b+1)^0,f,c
  4473   001C1A  321A               	rrcf	___fladd@b^0,f,c
  4474   001C1C  2A28               	incf	___fladd@bexp^0,f,c
  4475   001C1E                     l1194:
  4476   001C1E  5027               	movf	___fladd@aexp^0,w,c
  4477   001C20  5C28               	subwf	___fladd@bexp^0,w,c
  4478   001C22  A0D8               	btfss	status,0,c
  4479   001C24  EF16  F00E         	goto	u2731
  4480   001C28  EF18  F00E         	goto	u2730
  4481   001C2C                     u2731:
  4482   001C2C  EFF2  F00D         	goto	l1195
  4483   001C30                     u2730:
  4484   001C30                     l1193:
  4485   001C30  BC26               	btfsc	___fladd@signs^0,6,c
  4486   001C32  EF1D  F00E         	goto	u2741
  4487   001C36  EF1F  F00E         	goto	u2740
  4488   001C3A                     u2741:
  4489   001C3A  EF5F  F00E         	goto	l3514
  4490   001C3E                     u2740:
  4491   001C3E  5028               	movf	___fladd@bexp^0,w,c
  4492   001C40  A4D8               	btfss	status,2,c
  4493   001C42  EF25  F00E         	goto	u2751
  4494   001C46  EF27  F00E         	goto	u2750
  4495   001C4A                     u2751:
  4496   001C4A  EF31  F00E         	goto	l3496
  4497   001C4E                     u2750:
  4498   001C4E  0E00               	movlw	0
  4499   001C50  6E1A               	movwf	?___fladd^0,c
  4500   001C52  0E00               	movlw	0
  4501   001C54  6E1B               	movwf	(?___fladd+1)^0,c
  4502   001C56  0E00               	movlw	0
  4503   001C58  6E1C               	movwf	(?___fladd+2)^0,c
  4504   001C5A  0E00               	movlw	0
  4505   001C5C  6E1D               	movwf	(?___fladd+3)^0,c
  4506   001C5E  EF80  F00F         	goto	l1202
  4507   001C62                     l3496:
  4508   001C62  501E               	movf	___fladd@a^0,w,c
  4509   001C64  261A               	addwf	___fladd@b^0,f,c
  4510   001C66  501F               	movf	(___fladd@a+1)^0,w,c
  4511   001C68  221B               	addwfc	(___fladd@b+1)^0,f,c
  4512   001C6A  5020               	movf	(___fladd@a+2)^0,w,c
  4513   001C6C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4514   001C6E  5021               	movf	(___fladd@a+3)^0,w,c
  4515   001C70  221D               	addwfc	(___fladd@b+3)^0,f,c
  4516   001C72  A01D               	btfss	(___fladd@b+3)^0,0,c
  4517   001C74  EF3E  F00E         	goto	u2761
  4518   001C78  EF40  F00E         	goto	u2760
  4519   001C7C                     u2761:
  4520   001C7C  EFEC  F00E         	goto	l3550
  4521   001C80                     u2760:
  4522   001C80  A029               	btfss	___fladd@grs^0,0,c
  4523   001C82  EF45  F00E         	goto	u2771
  4524   001C86  EF47  F00E         	goto	u2770
  4525   001C8A                     u2771:
  4526   001C8A  EF4D  F00E         	goto	l3504
  4527   001C8E                     u2770:
  4528   001C8E  90D8               	bcf	status,0,c
  4529   001C90  3029               	rrcf	___fladd@grs^0,w,c
  4530   001C92  0901               	iorlw	1
  4531   001C94  6E29               	movwf	___fladd@grs^0,c
  4532   001C96  EF4F  F00E         	goto	l3506
  4533   001C9A                     l3504:
  4534   001C9A  90D8               	bcf	status,0,c
  4535   001C9C  3229               	rrcf	___fladd@grs^0,f,c
  4536   001C9E                     l3506:
  4537   001C9E  A01A               	btfss	___fladd@b^0,0,c
  4538   001CA0  EF54  F00E         	goto	u2781
  4539   001CA4  EF56  F00E         	goto	u2780
  4540   001CA8                     u2781:
  4541   001CA8  EF57  F00E         	goto	l3510
  4542   001CAC                     u2780:
  4543   001CAC  8E29               	bsf	___fladd@grs^0,7,c
  4544   001CAE                     l3510:
  4545   001CAE  341D               	rlcf	(___fladd@b+3)^0,w,c
  4546   001CB0  321D               	rrcf	(___fladd@b+3)^0,f,c
  4547   001CB2  321C               	rrcf	(___fladd@b+2)^0,f,c
  4548   001CB4  321B               	rrcf	(___fladd@b+1)^0,f,c
  4549   001CB6  321A               	rrcf	___fladd@b^0,f,c
  4550   001CB8  2A28               	incf	___fladd@bexp^0,f,c
  4551   001CBA  EFEC  F00E         	goto	l3550
  4552   001CBE                     l3514:
  4553   001CBE  501E               	movf	___fladd@a^0,w,c
  4554   001CC0  5C1A               	subwf	___fladd@b^0,w,c
  4555   001CC2  501F               	movf	(___fladd@a+1)^0,w,c
  4556   001CC4  581B               	subwfb	(___fladd@b+1)^0,w,c
  4557   001CC6  5020               	movf	(___fladd@a+2)^0,w,c
  4558   001CC8  581C               	subwfb	(___fladd@b+2)^0,w,c
  4559   001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  4560   001CCC  0A80               	xorlw	128
  4561   001CCE  6E22               	movwf	??___fladd^0,c
  4562   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
  4563   001CD2  0A80               	xorlw	128
  4564   001CD4  5822               	subwfb	??___fladd^0,w,c
  4565   001CD6  B0D8               	btfsc	status,0,c
  4566   001CD8  EF70  F00E         	goto	u2791
  4567   001CDC  EF72  F00E         	goto	u2790
  4568   001CE0                     u2791:
  4569   001CE0  EF9D  F00E         	goto	l3524
  4570   001CE4                     u2790:
  4571   001CE4  501A               	movf	___fladd@b^0,w,c
  4572   001CE6  5C1E               	subwf	___fladd@a^0,w,c
  4573   001CE8  6E22               	movwf	??___fladd^0,c
  4574   001CEA  501B               	movf	(___fladd@b+1)^0,w,c
  4575   001CEC  581F               	subwfb	(___fladd@a+1)^0,w,c
  4576   001CEE  6E23               	movwf	(??___fladd+1)^0,c
  4577   001CF0  501C               	movf	(___fladd@b+2)^0,w,c
  4578   001CF2  5820               	subwfb	(___fladd@a+2)^0,w,c
  4579   001CF4  6E24               	movwf	(??___fladd+2)^0,c
  4580   001CF6  501D               	movf	(___fladd@b+3)^0,w,c
  4581   001CF8  5821               	subwfb	(___fladd@a+3)^0,w,c
  4582   001CFA  6E25               	movwf	(??___fladd+3)^0,c
  4583   001CFC  0EFF               	movlw	255
  4584   001CFE  2422               	addwf	??___fladd^0,w,c
  4585   001D00  6E1A               	movwf	___fladd@b^0,c
  4586   001D02  0EFF               	movlw	255
  4587   001D04  2023               	addwfc	(??___fladd+1)^0,w,c
  4588   001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  4589   001D08  0EFF               	movlw	255
  4590   001D0A  2024               	addwfc	(??___fladd+2)^0,w,c
  4591   001D0C  6E1C               	movwf	(___fladd@b+2)^0,c
  4592   001D0E  0EFF               	movlw	255
  4593   001D10  2025               	addwfc	(??___fladd+3)^0,w,c
  4594   001D12  6E1D               	movwf	(___fladd@b+3)^0,c
  4595   001D14  0E80               	movlw	128
  4596   001D16  1A26               	xorwf	___fladd@signs^0,f,c
  4597   001D18  6C29               	negf	___fladd@grs^0,c
  4598   001D1A  5029               	movf	___fladd@grs^0,w,c
  4599   001D1C  A4D8               	btfss	status,2,c
  4600   001D1E  EF93  F00E         	goto	u2801
  4601   001D22  EF95  F00E         	goto	u2800
  4602   001D26                     u2801:
  4603   001D26  EFA5  F00E         	goto	l1210
  4604   001D2A                     u2800:
  4605   001D2A  0E01               	movlw	1
  4606   001D2C  261A               	addwf	___fladd@b^0,f,c
  4607   001D2E  0E00               	movlw	0
  4608   001D30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4609   001D32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4610   001D34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4611   001D36  EFA5  F00E         	goto	l1210
  4612   001D3A                     l3524:
  4613   001D3A  501E               	movf	___fladd@a^0,w,c
  4614   001D3C  5E1A               	subwf	___fladd@b^0,f,c
  4615   001D3E  501F               	movf	(___fladd@a+1)^0,w,c
  4616   001D40  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4617   001D42  5020               	movf	(___fladd@a+2)^0,w,c
  4618   001D44  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4619   001D46  5021               	movf	(___fladd@a+3)^0,w,c
  4620   001D48  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4621   001D4A                     l1210:
  4622   001D4A  501A               	movf	___fladd@b^0,w,c
  4623   001D4C  101B               	iorwf	(___fladd@b+1)^0,w,c
  4624   001D4E  101C               	iorwf	(___fladd@b+2)^0,w,c
  4625   001D50  101D               	iorwf	(___fladd@b+3)^0,w,c
  4626   001D52  A4D8               	btfss	status,2,c
  4627   001D54  EFAE  F00E         	goto	u2811
  4628   001D58  EFB0  F00E         	goto	u2810
  4629   001D5C                     u2811:
  4630   001D5C  EFE5  F00E         	goto	l3548
  4631   001D60                     u2810:
  4632   001D60  5029               	movf	___fladd@grs^0,w,c
  4633   001D62  A4D8               	btfss	status,2,c
  4634   001D64  EFB6  F00E         	goto	u2821
  4635   001D68  EFB8  F00E         	goto	u2820
  4636   001D6C                     u2821:
  4637   001D6C  EFE5  F00E         	goto	l3548
  4638   001D70                     u2820:
  4639   001D70  0E00               	movlw	0
  4640   001D72  6E1A               	movwf	?___fladd^0,c
  4641   001D74  0E00               	movlw	0
  4642   001D76  6E1B               	movwf	(?___fladd+1)^0,c
  4643   001D78  0E00               	movlw	0
  4644   001D7A  6E1C               	movwf	(?___fladd+2)^0,c
  4645   001D7C  0E00               	movlw	0
  4646   001D7E  6E1D               	movwf	(?___fladd+3)^0,c
  4647   001D80  EF80  F00F         	goto	l1202
  4648   001D84                     l3532:
  4649   001D84  90D8               	bcf	status,0,c
  4650   001D86  361A               	rlcf	___fladd@b^0,f,c
  4651   001D88  361B               	rlcf	(___fladd@b+1)^0,f,c
  4652   001D8A  361C               	rlcf	(___fladd@b+2)^0,f,c
  4653   001D8C  361D               	rlcf	(___fladd@b+3)^0,f,c
  4654   001D8E  AE29               	btfss	___fladd@grs^0,7,c
  4655   001D90  EFCC  F00E         	goto	u2831
  4656   001D94  EFCE  F00E         	goto	u2830
  4657   001D98                     u2831:
  4658   001D98  EFCF  F00E         	goto	l3538
  4659   001D9C                     u2830:
  4660   001D9C  801A               	bsf	___fladd@b^0,0,c
  4661   001D9E                     l3538:
  4662   001D9E  A029               	btfss	___fladd@grs^0,0,c
  4663   001DA0  EFD4  F00E         	goto	u2841
  4664   001DA4  EFD6  F00E         	goto	u2840
  4665   001DA8                     u2841:
  4666   001DA8  EFDA  F00E         	goto	l3542
  4667   001DAC                     u2840:
  4668   001DAC  80D8               	bsf	status,0,c
  4669   001DAE  3629               	rlcf	___fladd@grs^0,f,c
  4670   001DB0  EFDC  F00E         	goto	l3544
  4671   001DB4                     l3542:
  4672   001DB4  90D8               	bcf	status,0,c
  4673   001DB6  3629               	rlcf	___fladd@grs^0,f,c
  4674   001DB8                     l3544:
  4675   001DB8  5028               	movf	___fladd@bexp^0,w,c
  4676   001DBA  B4D8               	btfsc	status,2,c
  4677   001DBC  EFE2  F00E         	goto	u2851
  4678   001DC0  EFE4  F00E         	goto	u2850
  4679   001DC4                     u2851:
  4680   001DC4  EFE5  F00E         	goto	l3548
  4681   001DC8                     u2850:
  4682   001DC8  0628               	decf	___fladd@bexp^0,f,c
  4683   001DCA                     l3548:
  4684   001DCA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4685   001DCC  EFEA  F00E         	goto	u2861
  4686   001DD0  EFEC  F00E         	goto	u2860
  4687   001DD4                     u2861:
  4688   001DD4  EFC2  F00E         	goto	l3532
  4689   001DD8                     u2860:
  4690   001DD8                     l3550:
  4691   001DD8  0E00               	movlw	0
  4692   001DDA  6E27               	movwf	___fladd@aexp^0,c
  4693   001DDC  AE29               	btfss	___fladd@grs^0,7,c
  4694   001DDE  EFF3  F00E         	goto	u2871
  4695   001DE2  EFF5  F00E         	goto	u2870
  4696   001DE6                     u2871:
  4697   001DE6  EF0D  F00F         	goto	l1219
  4698   001DEA                     u2870:
  4699   001DEA  C029  F022         	movff	___fladd@grs,??___fladd
  4700   001DEE  0E7F               	movlw	127
  4701   001DF0  1622               	andwf	??___fladd^0,f,c
  4702   001DF2  B4D8               	btfsc	status,2,c
  4703   001DF4  EFFE  F00E         	goto	u2881
  4704   001DF8  EF00  F00F         	goto	u2880
  4705   001DFC                     u2881:
  4706   001DFC  EF04  F00F         	goto	l1220
  4707   001E00                     u2880:
  4708   001E00                     l3556:
  4709   001E00  0E01               	movlw	1
  4710   001E02  6E27               	movwf	___fladd@aexp^0,c
  4711   001E04  EF0D  F00F         	goto	l1219
  4712   001E08                     l1220:
  4713   001E08  A01A               	btfss	___fladd@b^0,0,c
  4714   001E0A  EF09  F00F         	goto	u2891
  4715   001E0E  EF0B  F00F         	goto	u2890
  4716   001E12                     u2891:
  4717   001E12  EF0D  F00F         	goto	l1219
  4718   001E16                     u2890:
  4719   001E16  EF00  F00F         	goto	l3556
  4720   001E1A                     l1219:
  4721   001E1A  5027               	movf	___fladd@aexp^0,w,c
  4722   001E1C  B4D8               	btfsc	status,2,c
  4723   001E1E  EF13  F00F         	goto	u2901
  4724   001E22  EF15  F00F         	goto	u2900
  4725   001E26                     u2901:
  4726   001E26  EF40  F00F         	goto	l3568
  4727   001E2A                     u2900:
  4728   001E2A  0E01               	movlw	1
  4729   001E2C  261A               	addwf	___fladd@b^0,f,c
  4730   001E2E  0E00               	movlw	0
  4731   001E30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4732   001E32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4733   001E34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4734   001E36  A01D               	btfss	(___fladd@b+3)^0,0,c
  4735   001E38  EF20  F00F         	goto	u2911
  4736   001E3C  EF22  F00F         	goto	u2910
  4737   001E40                     u2911:
  4738   001E40  EF40  F00F         	goto	l3568
  4739   001E44                     u2910:
  4740   001E44  C01A  F022         	movff	___fladd@b,??___fladd
  4741   001E48  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4742   001E4C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4743   001E50  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4744   001E54  3425               	rlcf	(??___fladd+3)^0,w,c
  4745   001E56  3225               	rrcf	(??___fladd+3)^0,f,c
  4746   001E58  3224               	rrcf	(??___fladd+2)^0,f,c
  4747   001E5A  3223               	rrcf	(??___fladd+1)^0,f,c
  4748   001E5C  3222               	rrcf	??___fladd^0,f,c
  4749   001E5E  C022  F01A         	movff	??___fladd,___fladd@b
  4750   001E62  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4751   001E66  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4752   001E6A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4753   001E6E  2828               	incf	___fladd@bexp^0,w,c
  4754   001E70  B4D8               	btfsc	status,2,c
  4755   001E72  EF3D  F00F         	goto	u2921
  4756   001E76  EF3F  F00F         	goto	u2920
  4757   001E7A                     u2921:
  4758   001E7A  EF40  F00F         	goto	l3568
  4759   001E7E                     u2920:
  4760   001E7E  2A28               	incf	___fladd@bexp^0,f,c
  4761   001E80                     l3568:
  4762   001E80  2828               	incf	___fladd@bexp^0,w,c
  4763   001E82  B4D8               	btfsc	status,2,c
  4764   001E84  EF46  F00F         	goto	u2931
  4765   001E88  EF48  F00F         	goto	u2930
  4766   001E8C                     u2931:
  4767   001E8C  EF50  F00F         	goto	l3572
  4768   001E90                     u2930:
  4769   001E90  5028               	movf	___fladd@bexp^0,w,c
  4770   001E92  A4D8               	btfss	status,2,c
  4771   001E94  EF4E  F00F         	goto	u2941
  4772   001E98  EF50  F00F         	goto	u2940
  4773   001E9C                     u2941:
  4774   001E9C  EF62  F00F         	goto	l3576
  4775   001EA0                     u2940:
  4776   001EA0                     l3572:
  4777   001EA0  0E00               	movlw	0
  4778   001EA2  6E1A               	movwf	___fladd@b^0,c
  4779   001EA4  0E00               	movlw	0
  4780   001EA6  6E1B               	movwf	(___fladd@b+1)^0,c
  4781   001EA8  0E00               	movlw	0
  4782   001EAA  6E1C               	movwf	(___fladd@b+2)^0,c
  4783   001EAC  0E00               	movlw	0
  4784   001EAE  6E1D               	movwf	(___fladd@b+3)^0,c
  4785   001EB0  5028               	movf	___fladd@bexp^0,w,c
  4786   001EB2  A4D8               	btfss	status,2,c
  4787   001EB4  EF5E  F00F         	goto	u2951
  4788   001EB8  EF60  F00F         	goto	u2950
  4789   001EBC                     u2951:
  4790   001EBC  EF62  F00F         	goto	l3576
  4791   001EC0                     u2950:
  4792   001EC0  0E00               	movlw	0
  4793   001EC2  6E26               	movwf	___fladd@signs^0,c
  4794   001EC4                     l3576:
  4795   001EC4  A028               	btfss	___fladd@bexp^0,0,c
  4796   001EC6  EF67  F00F         	goto	u2961
  4797   001ECA  EF69  F00F         	goto	u2960
  4798   001ECE                     u2961:
  4799   001ECE  EF6C  F00F         	goto	l3580
  4800   001ED2                     u2960:
  4801   001ED2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4802   001ED4  EF6D  F00F         	goto	l3582
  4803   001ED8                     l3580:
  4804   001ED8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4805   001EDA                     l3582:
  4806   001EDA  90D8               	bcf	status,0,c
  4807   001EDC  3028               	rrcf	___fladd@bexp^0,w,c
  4808   001EDE  6E1D               	movwf	(___fladd@b+3)^0,c
  4809   001EE0  AE26               	btfss	___fladd@signs^0,7,c
  4810   001EE2  EF75  F00F         	goto	u2971
  4811   001EE6  EF77  F00F         	goto	u2970
  4812   001EEA                     u2971:
  4813   001EEA  EF78  F00F         	goto	l3588
  4814   001EEE                     u2970:
  4815   001EEE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4816   001EF0                     l3588:
  4817   001EF0  C01A  F01A         	movff	___fladd@b,?___fladd
  4818   001EF4  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4819   001EF8  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4820   001EFC  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4821   001F00                     l1202:
  4822   001F00  0012               	return		;funcret
  4823   001F02                     __end_of___fladd:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function ___flmul *****************
  4827 ;; Defined at:
  4828 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  b               4   74[COMRAM] unsigned char 
  4831 ;;  a               4   78[COMRAM] unsigned char 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  prod            4    7[BANK0 ] struct .
  4834 ;;  grs             4    1[BANK0 ] unsigned long 
  4835 ;;  temp            2   11[BANK0 ] struct .
  4836 ;;  bexp            1    6[BANK0 ] unsigned char 
  4837 ;;  aexp            1    5[BANK0 ] unsigned char 
  4838 ;;  sign            1    0[BANK0 ] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  4   74[COMRAM] unsigned char 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0, prodl, prodh
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4848 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;Total ram usage:       25 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_Left45
  4859 ;;		_Right45
  4860 ;;		_reverseHalfSquare
  4861 ;;		_Yellow_rev1_R90
  4862 ;;		_Pink_rev1_L90
  4863 ;;		_RGB2Hue
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text24
  4868   001F02                     __ptext24:
  4869                           	callstack 0
  4870   001F02                     ___flmul:
  4871                           	callstack 28
  4872   001F02  504E               	movf	(___flmul@b+3)^0,w,c
  4873   001F04  0B80               	andlw	128
  4874   001F06  0100               	movlb	0	; () banked
  4875   001F08  6F60               	movwf	___flmul@sign& (0+255),b
  4876   001F0A  504E               	movf	(___flmul@b+3)^0,w,c
  4877   001F0C  244E               	addwf	(___flmul@b+3)^0,w,c
  4878   001F0E  6F66               	movwf	___flmul@bexp& (0+255),b
  4879   001F10                     
  4880                           ; BSR set to: 0
  4881   001F10  AE4D               	btfss	(___flmul@b+2)^0,7,c
  4882   001F12  EF8D  F00F         	goto	u3551
  4883   001F16  EF8F  F00F         	goto	u3550
  4884   001F1A                     u3551:
  4885   001F1A  EF90  F00F         	goto	l3976
  4886   001F1E                     u3550:
  4887   001F1E                     
  4888                           ; BSR set to: 0
  4889   001F1E  8166               	bsf	___flmul@bexp& (0+255),0,b
  4890   001F20                     l3976:
  4891                           
  4892                           ; BSR set to: 0
  4893   001F20  5166               	movf	___flmul@bexp& (0+255),w,b
  4894   001F22  B4D8               	btfsc	status,2,c
  4895   001F24  EF96  F00F         	goto	u3561
  4896   001F28  EF98  F00F         	goto	u3560
  4897   001F2C                     u3561:
  4898   001F2C  EFAB  F00F         	goto	l3984
  4899   001F30                     u3560:
  4900   001F30                     
  4901                           ; BSR set to: 0
  4902   001F30  2966               	incf	___flmul@bexp& (0+255),w,b
  4903   001F32  A4D8               	btfss	status,2,c
  4904   001F34  EF9E  F00F         	goto	u3571
  4905   001F38  EFA0  F00F         	goto	u3570
  4906   001F3C                     u3571:
  4907   001F3C  EFA8  F00F         	goto	l3982
  4908   001F40                     u3570:
  4909   001F40                     
  4910                           ; BSR set to: 0
  4911   001F40  0E00               	movlw	0
  4912   001F42  6E4B               	movwf	___flmul@b^0,c
  4913   001F44  0E00               	movlw	0
  4914   001F46  6E4C               	movwf	(___flmul@b+1)^0,c
  4915   001F48  0E00               	movlw	0
  4916   001F4A  6E4D               	movwf	(___flmul@b+2)^0,c
  4917   001F4C  0E00               	movlw	0
  4918   001F4E  6E4E               	movwf	(___flmul@b+3)^0,c
  4919   001F50                     l3982:
  4920                           
  4921                           ; BSR set to: 0
  4922   001F50  8E4D               	bsf	(___flmul@b+2)^0,7,c
  4923   001F52  EFB3  F00F         	goto	l3986
  4924   001F56                     l3984:
  4925                           
  4926                           ; BSR set to: 0
  4927   001F56  0E00               	movlw	0
  4928   001F58  6E4B               	movwf	___flmul@b^0,c
  4929   001F5A  0E00               	movlw	0
  4930   001F5C  6E4C               	movwf	(___flmul@b+1)^0,c
  4931   001F5E  0E00               	movlw	0
  4932   001F60  6E4D               	movwf	(___flmul@b+2)^0,c
  4933   001F62  0E00               	movlw	0
  4934   001F64  6E4E               	movwf	(___flmul@b+3)^0,c
  4935   001F66                     l3986:
  4936                           
  4937                           ; BSR set to: 0
  4938   001F66  5052               	movf	(___flmul@a+3)^0,w,c
  4939   001F68  0B80               	andlw	128
  4940   001F6A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  4941   001F6C                     
  4942                           ; BSR set to: 0
  4943   001F6C  5052               	movf	(___flmul@a+3)^0,w,c
  4944   001F6E  2452               	addwf	(___flmul@a+3)^0,w,c
  4945   001F70  6F65               	movwf	___flmul@aexp& (0+255),b
  4946   001F72                     
  4947                           ; BSR set to: 0
  4948   001F72  AE51               	btfss	(___flmul@a+2)^0,7,c
  4949   001F74  EFBE  F00F         	goto	u3581
  4950   001F78  EFC0  F00F         	goto	u3580
  4951   001F7C                     u3581:
  4952   001F7C  EFC1  F00F         	goto	l3994
  4953   001F80                     u3580:
  4954   001F80                     
  4955                           ; BSR set to: 0
  4956   001F80  8165               	bsf	___flmul@aexp& (0+255),0,b
  4957   001F82                     l3994:
  4958                           
  4959                           ; BSR set to: 0
  4960   001F82  5165               	movf	___flmul@aexp& (0+255),w,b
  4961   001F84  B4D8               	btfsc	status,2,c
  4962   001F86  EFC7  F00F         	goto	u3591
  4963   001F8A  EFC9  F00F         	goto	u3590
  4964   001F8E                     u3591:
  4965   001F8E  EFDC  F00F         	goto	l4002
  4966   001F92                     u3590:
  4967   001F92                     
  4968                           ; BSR set to: 0
  4969   001F92  2965               	incf	___flmul@aexp& (0+255),w,b
  4970   001F94  A4D8               	btfss	status,2,c
  4971   001F96  EFCF  F00F         	goto	u3601
  4972   001F9A  EFD1  F00F         	goto	u3600
  4973   001F9E                     u3601:
  4974   001F9E  EFD9  F00F         	goto	l4000
  4975   001FA2                     u3600:
  4976   001FA2                     
  4977                           ; BSR set to: 0
  4978   001FA2  0E00               	movlw	0
  4979   001FA4  6E4F               	movwf	___flmul@a^0,c
  4980   001FA6  0E00               	movlw	0
  4981   001FA8  6E50               	movwf	(___flmul@a+1)^0,c
  4982   001FAA  0E00               	movlw	0
  4983   001FAC  6E51               	movwf	(___flmul@a+2)^0,c
  4984   001FAE  0E00               	movlw	0
  4985   001FB0  6E52               	movwf	(___flmul@a+3)^0,c
  4986   001FB2                     l4000:
  4987                           
  4988                           ; BSR set to: 0
  4989   001FB2  8E51               	bsf	(___flmul@a+2)^0,7,c
  4990   001FB4  EFE4  F00F         	goto	l1279
  4991   001FB8                     l4002:
  4992                           
  4993                           ; BSR set to: 0
  4994   001FB8  0E00               	movlw	0
  4995   001FBA  6E4F               	movwf	___flmul@a^0,c
  4996   001FBC  0E00               	movlw	0
  4997   001FBE  6E50               	movwf	(___flmul@a+1)^0,c
  4998   001FC0  0E00               	movlw	0
  4999   001FC2  6E51               	movwf	(___flmul@a+2)^0,c
  5000   001FC4  0E00               	movlw	0
  5001   001FC6  6E52               	movwf	(___flmul@a+3)^0,c
  5002   001FC8                     l1279:
  5003                           
  5004                           ; BSR set to: 0
  5005   001FC8  5165               	movf	___flmul@aexp& (0+255),w,b
  5006   001FCA  B4D8               	btfsc	status,2,c
  5007   001FCC  EFEA  F00F         	goto	u3611
  5008   001FD0  EFEC  F00F         	goto	u3610
  5009   001FD4                     u3611:
  5010   001FD4  EFF4  F00F         	goto	l4006
  5011   001FD8                     u3610:
  5012   001FD8                     
  5013                           ; BSR set to: 0
  5014   001FD8  5166               	movf	___flmul@bexp& (0+255),w,b
  5015   001FDA  A4D8               	btfss	status,2,c
  5016   001FDC  EFF2  F00F         	goto	u3621
  5017   001FE0  EFF4  F00F         	goto	u3620
  5018   001FE4                     u3621:
  5019   001FE4  EFFE  F00F         	goto	l4010
  5020   001FE8                     u3620:
  5021   001FE8                     l4006:
  5022                           
  5023                           ; BSR set to: 0
  5024   001FE8  0E00               	movlw	0
  5025   001FEA  6E4B               	movwf	?___flmul^0,c
  5026   001FEC  0E00               	movlw	0
  5027   001FEE  6E4C               	movwf	(?___flmul+1)^0,c
  5028   001FF0  0E00               	movlw	0
  5029   001FF2  6E4D               	movwf	(?___flmul+2)^0,c
  5030   001FF4  0E00               	movlw	0
  5031   001FF6  6E4E               	movwf	(?___flmul+3)^0,c
  5032   001FF8  EF96  F011         	goto	l1283
  5033   001FFC                     l4010:
  5034                           
  5035                           ; BSR set to: 0
  5036   001FFC  5051               	movf	(___flmul@a+2)^0,w,c
  5037   001FFE  024B               	mulwf	___flmul@b^0,c
  5038   002000  CFF3 F06B          	movff	prodl,___flmul@temp
  5039   002004  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5040   002008                     
  5041                           ; BSR set to: 0
  5042   002008  516B               	movf	___flmul@temp& (0+255),w,b
  5043   00200A  6F61               	movwf	___flmul@grs& (0+255),b
  5044   00200C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  5045   00200E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  5046   002010  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  5047   002012                     
  5048                           ; BSR set to: 0
  5049   002012  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5050   002014  6F67               	movwf	___flmul@prod& (0+255),b
  5051   002016  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  5052   002018  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  5053   00201A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  5054   00201C  5050               	movf	(___flmul@a+1)^0,w,c
  5055   00201E  024C               	mulwf	(___flmul@b+1)^0,c
  5056   002020  CFF3 F06B          	movff	prodl,___flmul@temp
  5057   002024  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5058   002028                     
  5059                           ; BSR set to: 0
  5060   002028  516B               	movf	___flmul@temp& (0+255),w,b
  5061   00202A  2761               	addwf	___flmul@grs& (0+255),f,b
  5062   00202C  0E00               	movlw	0
  5063   00202E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5064   002030  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5065   002032  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5066   002034                     
  5067                           ; BSR set to: 0
  5068   002034  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5069   002036  2767               	addwf	___flmul@prod& (0+255),f,b
  5070   002038  0E00               	movlw	0
  5071   00203A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5072   00203C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5073   00203E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5074   002040  504F               	movf	___flmul@a^0,w,c
  5075   002042  024D               	mulwf	(___flmul@b+2)^0,c
  5076   002044  CFF3 F06B          	movff	prodl,___flmul@temp
  5077   002048  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5078   00204C                     
  5079                           ; BSR set to: 0
  5080   00204C  516B               	movf	___flmul@temp& (0+255),w,b
  5081   00204E  2761               	addwf	___flmul@grs& (0+255),f,b
  5082   002050  0E00               	movlw	0
  5083   002052  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5084   002054  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5085   002056  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5086   002058                     
  5087                           ; BSR set to: 0
  5088   002058  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5089   00205A  2767               	addwf	___flmul@prod& (0+255),f,b
  5090   00205C  0E00               	movlw	0
  5091   00205E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5092   002060  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5093   002062  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5094   002064                     
  5095                           ; BSR set to: 0
  5096   002064  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  5097   002068  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  5098   00206C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  5099   002070  6B61               	clrf	___flmul@grs& (0+255),b
  5100   002072                     
  5101                           ; BSR set to: 0
  5102   002072  504F               	movf	___flmul@a^0,w,c
  5103   002074  024C               	mulwf	(___flmul@b+1)^0,c
  5104   002076  CFF3 F06B          	movff	prodl,___flmul@temp
  5105   00207A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5106   00207E                     
  5107                           ; BSR set to: 0
  5108   00207E  516B               	movf	___flmul@temp& (0+255),w,b
  5109   002080  2761               	addwf	___flmul@grs& (0+255),f,b
  5110   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5111   002084  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5112   002086  0E00               	movlw	0
  5113   002088  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5114   00208A  0E00               	movlw	0
  5115   00208C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5116   00208E                     
  5117                           ; BSR set to: 0
  5118   00208E  5050               	movf	(___flmul@a+1)^0,w,c
  5119   002090  024B               	mulwf	___flmul@b^0,c
  5120   002092  CFF3 F06B          	movff	prodl,___flmul@temp
  5121   002096  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5122   00209A                     
  5123                           ; BSR set to: 0
  5124   00209A  516B               	movf	___flmul@temp& (0+255),w,b
  5125   00209C  2761               	addwf	___flmul@grs& (0+255),f,b
  5126   00209E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5127   0020A0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5128   0020A2  0E00               	movlw	0
  5129   0020A4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5130   0020A6  0E00               	movlw	0
  5131   0020A8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5132   0020AA                     
  5133                           ; BSR set to: 0
  5134   0020AA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  5135   0020AE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  5136   0020B2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  5137   0020B6  6B61               	clrf	___flmul@grs& (0+255),b
  5138   0020B8  504F               	movf	___flmul@a^0,w,c
  5139   0020BA  024B               	mulwf	___flmul@b^0,c
  5140   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  5141   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5142   0020C4                     
  5143                           ; BSR set to: 0
  5144   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  5145   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  5146   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5147   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5148   0020CC  0E00               	movlw	0
  5149   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5150   0020D0  0E00               	movlw	0
  5151   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5152   0020D4                     
  5153                           ; BSR set to: 0
  5154   0020D4  5051               	movf	(___flmul@a+2)^0,w,c
  5155   0020D6  024C               	mulwf	(___flmul@b+1)^0,c
  5156   0020D8  CFF3 F06B          	movff	prodl,___flmul@temp
  5157   0020DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5158   0020E0  516B               	movf	___flmul@temp& (0+255),w,b
  5159   0020E2  2767               	addwf	___flmul@prod& (0+255),f,b
  5160   0020E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5161   0020E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5162   0020E8  0E00               	movlw	0
  5163   0020EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5164   0020EC  0E00               	movlw	0
  5165   0020EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5166   0020F0                     
  5167                           ; BSR set to: 0
  5168   0020F0  5050               	movf	(___flmul@a+1)^0,w,c
  5169   0020F2  024D               	mulwf	(___flmul@b+2)^0,c
  5170   0020F4  CFF3 F06B          	movff	prodl,___flmul@temp
  5171   0020F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5172   0020FC                     
  5173                           ; BSR set to: 0
  5174   0020FC  516B               	movf	___flmul@temp& (0+255),w,b
  5175   0020FE  2767               	addwf	___flmul@prod& (0+255),f,b
  5176   002100  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5177   002102  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5178   002104  0E00               	movlw	0
  5179   002106  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5180   002108  0E00               	movlw	0
  5181   00210A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5182   00210C  5051               	movf	(___flmul@a+2)^0,w,c
  5183   00210E  024D               	mulwf	(___flmul@b+2)^0,c
  5184   002110  CFF3 F06B          	movff	prodl,___flmul@temp
  5185   002114  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5186   002118                     
  5187                           ; BSR set to: 0
  5188   002118  516B               	movf	___flmul@temp& (0+255),w,b
  5189   00211A  6E53               	movwf	??___flmul^0,c
  5190   00211C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5191   00211E  6E54               	movwf	(??___flmul+1)^0,c
  5192   002120  6A55               	clrf	(??___flmul+2)^0,c
  5193   002122  6A56               	clrf	(??___flmul+3)^0,c
  5194   002124  C055  F056         	movff	??___flmul+2,??___flmul+3
  5195   002128  C054  F055         	movff	??___flmul+1,??___flmul+2
  5196   00212C  C053  F054         	movff	??___flmul,??___flmul+1
  5197   002130  6A53               	clrf	??___flmul^0,c
  5198   002132  5053               	movf	??___flmul^0,w,c
  5199   002134  2767               	addwf	___flmul@prod& (0+255),f,b
  5200   002136  5054               	movf	(??___flmul+1)^0,w,c
  5201   002138  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5202   00213A  5055               	movf	(??___flmul+2)^0,w,c
  5203   00213C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5204   00213E  5056               	movf	(??___flmul+3)^0,w,c
  5205   002140  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5206   002142                     
  5207                           ; BSR set to: 0
  5208   002142  C061  F053         	movff	___flmul@grs,??___flmul
  5209   002146  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  5210   00214A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  5211   00214E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  5212   002152  0E19               	movlw	25
  5213   002154  EFB1  F010         	goto	u3630
  5214   002158                     u3635:
  5215   002158  90D8               	bcf	status,0,c
  5216   00215A  3256               	rrcf	(??___flmul+3)^0,f,c
  5217   00215C  3255               	rrcf	(??___flmul+2)^0,f,c
  5218   00215E  3254               	rrcf	(??___flmul+1)^0,f,c
  5219   002160  3253               	rrcf	??___flmul^0,f,c
  5220   002162                     u3630:
  5221   002162  2EE8               	decfsz	wreg,f,c
  5222   002164  EFAC  F010         	goto	u3635
  5223   002168  5053               	movf	??___flmul^0,w,c
  5224   00216A  2767               	addwf	___flmul@prod& (0+255),f,b
  5225   00216C  5054               	movf	(??___flmul+1)^0,w,c
  5226   00216E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5227   002170  5055               	movf	(??___flmul+2)^0,w,c
  5228   002172  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5229   002174  5056               	movf	(??___flmul+3)^0,w,c
  5230   002176  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5231   002178                     
  5232                           ; BSR set to: 0
  5233   002178  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  5234   00217C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  5235   002180  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  5236   002184  6B61               	clrf	___flmul@grs& (0+255),b
  5237   002186                     
  5238                           ; BSR set to: 0
  5239   002186  5165               	movf	___flmul@aexp& (0+255),w,b
  5240   002188  C066  F053         	movff	___flmul@bexp,??___flmul
  5241   00218C  6A54               	clrf	(??___flmul+1)^0,c
  5242   00218E  2653               	addwf	??___flmul^0,f,c
  5243   002190  0E00               	movlw	0
  5244   002192  2254               	addwfc	(??___flmul+1)^0,f,c
  5245   002194  0E82               	movlw	130
  5246   002196  2453               	addwf	??___flmul^0,w,c
  5247   002198  6F6B               	movwf	___flmul@temp& (0+255),b
  5248   00219A  0EFF               	movlw	255
  5249   00219C  2054               	addwfc	(??___flmul+1)^0,w,c
  5250   00219E  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  5251   0021A0  EFE7  F010         	goto	l4058
  5252   0021A4                     l4052:
  5253                           
  5254                           ; BSR set to: 0
  5255   0021A4  90D8               	bcf	status,0,c
  5256   0021A6  3767               	rlcf	___flmul@prod& (0+255),f,b
  5257   0021A8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5258   0021AA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5259   0021AC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5260   0021AE                     
  5261                           ; BSR set to: 0
  5262   0021AE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5263   0021B0  EFDC  F010         	goto	u3641
  5264   0021B4  EFDE  F010         	goto	u3640
  5265   0021B8                     u3641:
  5266   0021B8  EFDF  F010         	goto	l1286
  5267   0021BC                     u3640:
  5268   0021BC                     
  5269                           ; BSR set to: 0
  5270   0021BC  8167               	bsf	___flmul@prod& (0+255),0,b
  5271   0021BE                     l1286:
  5272                           
  5273                           ; BSR set to: 0
  5274   0021BE  90D8               	bcf	status,0,c
  5275   0021C0  3761               	rlcf	___flmul@grs& (0+255),f,b
  5276   0021C2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5277   0021C4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5278   0021C6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5279   0021C8  076B               	decf	___flmul@temp& (0+255),f,b
  5280   0021CA  A0D8               	btfss	status,0,c
  5281   0021CC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  5282   0021CE                     l4058:
  5283                           
  5284                           ; BSR set to: 0
  5285   0021CE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  5286   0021D0  EFEC  F010         	goto	u3651
  5287   0021D4  EFEE  F010         	goto	u3650
  5288   0021D8                     u3651:
  5289   0021D8  EFD2  F010         	goto	l4052
  5290   0021DC                     u3650:
  5291   0021DC                     
  5292                           ; BSR set to: 0
  5293   0021DC  0E00               	movlw	0
  5294   0021DE  6F65               	movwf	___flmul@aexp& (0+255),b
  5295   0021E0                     
  5296                           ; BSR set to: 0
  5297   0021E0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5298   0021E2  EFF5  F010         	goto	u3661
  5299   0021E6  EFF7  F010         	goto	u3660
  5300   0021EA                     u3661:
  5301   0021EA  EF1B  F011         	goto	l1288
  5302   0021EE                     u3660:
  5303   0021EE                     
  5304                           ; BSR set to: 0
  5305   0021EE  0EFF               	movlw	255
  5306   0021F0  1561               	andwf	___flmul@grs& (0+255),w,b
  5307   0021F2  6E53               	movwf	??___flmul^0,c
  5308   0021F4  0EFF               	movlw	255
  5309   0021F6  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  5310   0021F8  6E54               	movwf	(??___flmul+1)^0,c
  5311   0021FA  0EFF               	movlw	255
  5312   0021FC  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  5313   0021FE  6E55               	movwf	(??___flmul+2)^0,c
  5314   002200  0E7F               	movlw	127
  5315   002202  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  5316   002204  6E56               	movwf	(??___flmul+3)^0,c
  5317   002206  5053               	movf	??___flmul^0,w,c
  5318   002208  1054               	iorwf	(??___flmul+1)^0,w,c
  5319   00220A  1055               	iorwf	(??___flmul+2)^0,w,c
  5320   00220C  1056               	iorwf	(??___flmul+3)^0,w,c
  5321   00220E  B4D8               	btfsc	status,2,c
  5322   002210  EF0C  F011         	goto	u3671
  5323   002214  EF0E  F011         	goto	u3670
  5324   002218                     u3671:
  5325   002218  EF12  F011         	goto	l1289
  5326   00221C                     u3670:
  5327   00221C                     l4066:
  5328                           
  5329                           ; BSR set to: 0
  5330   00221C  0E01               	movlw	1
  5331   00221E  6F65               	movwf	___flmul@aexp& (0+255),b
  5332   002220  EF1B  F011         	goto	l1288
  5333   002224                     l1289:
  5334                           
  5335                           ; BSR set to: 0
  5336   002224  A167               	btfss	___flmul@prod& (0+255),0,b
  5337   002226  EF17  F011         	goto	u3681
  5338   00222A  EF19  F011         	goto	u3680
  5339   00222E                     u3681:
  5340   00222E  EF1B  F011         	goto	l1288
  5341   002232                     u3680:
  5342   002232  EF0E  F011         	goto	l4066
  5343   002236                     l1288:
  5344                           
  5345                           ; BSR set to: 0
  5346   002236  5165               	movf	___flmul@aexp& (0+255),w,b
  5347   002238  B4D8               	btfsc	status,2,c
  5348   00223A  EF21  F011         	goto	u3691
  5349   00223E  EF23  F011         	goto	u3690
  5350   002242                     u3691:
  5351   002242  EF47  F011         	goto	l4078
  5352   002246                     u3690:
  5353   002246                     
  5354                           ; BSR set to: 0
  5355   002246  0E01               	movlw	1
  5356   002248  2767               	addwf	___flmul@prod& (0+255),f,b
  5357   00224A  0E00               	movlw	0
  5358   00224C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5359   00224E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5360   002250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5361   002252                     
  5362                           ; BSR set to: 0
  5363   002252  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5364   002254  EF2E  F011         	goto	u3701
  5365   002258  EF30  F011         	goto	u3700
  5366   00225C                     u3701:
  5367   00225C  EF47  F011         	goto	l4078
  5368   002260                     u3700:
  5369   002260                     
  5370                           ; BSR set to: 0
  5371   002260  C067  F053         	movff	___flmul@prod,??___flmul
  5372   002264  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  5373   002268  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  5374   00226C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  5375   002270  3456               	rlcf	(??___flmul+3)^0,w,c
  5376   002272  3256               	rrcf	(??___flmul+3)^0,f,c
  5377   002274  3255               	rrcf	(??___flmul+2)^0,f,c
  5378   002276  3254               	rrcf	(??___flmul+1)^0,f,c
  5379   002278  3253               	rrcf	??___flmul^0,f,c
  5380   00227A  C053  F067         	movff	??___flmul,___flmul@prod
  5381   00227E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  5382   002282  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  5383   002286  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  5384   00228A                     
  5385                           ; BSR set to: 0
  5386   00228A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  5387   00228C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  5388   00228E                     l4078:
  5389                           
  5390                           ; BSR set to: 0
  5391   00228E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5392   002290  EF52  F011         	goto	u3711
  5393   002294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5394   002296  E108               	bnz	u3710
  5395   002298  296B               	incf	___flmul@temp& (0+255),w,b
  5396   00229A  A0D8               	btfss	status,0,c
  5397   00229C  EF52  F011         	goto	u3711
  5398   0022A0  EF54  F011         	goto	u3710
  5399   0022A4                     u3711:
  5400   0022A4  EF5E  F011         	goto	l4082
  5401   0022A8                     u3710:
  5402   0022A8                     
  5403                           ; BSR set to: 0
  5404   0022A8  0E00               	movlw	0
  5405   0022AA  6F67               	movwf	___flmul@prod& (0+255),b
  5406   0022AC  0E00               	movlw	0
  5407   0022AE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5408   0022B0  0E80               	movlw	128
  5409   0022B2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5410   0022B4  0E7F               	movlw	127
  5411   0022B6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5412   0022B8  EF8C  F011         	goto	l4094
  5413   0022BC                     l4082:
  5414                           
  5415                           ; BSR set to: 0
  5416   0022BC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5417   0022BE  EF6B  F011         	goto	u3720
  5418   0022C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5419   0022C4  E106               	bnz	u3721
  5420   0022C6  056B               	decf	___flmul@temp& (0+255),w,b
  5421   0022C8  B0D8               	btfsc	status,0,c
  5422   0022CA  EF69  F011         	goto	u3721
  5423   0022CE  EF6B  F011         	goto	u3720
  5424   0022D2                     u3721:
  5425   0022D2  EF77  F011         	goto	l1296
  5426   0022D6                     u3720:
  5427   0022D6                     
  5428                           ; BSR set to: 0
  5429   0022D6  0E00               	movlw	0
  5430   0022D8  6F67               	movwf	___flmul@prod& (0+255),b
  5431   0022DA  0E00               	movlw	0
  5432   0022DC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5433   0022DE  0E00               	movlw	0
  5434   0022E0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5435   0022E2  0E00               	movlw	0
  5436   0022E4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5437   0022E6  0E00               	movlw	0
  5438   0022E8  6F60               	movwf	___flmul@sign& (0+255),b
  5439   0022EA  EF8C  F011         	goto	l4094
  5440   0022EE                     l1296:
  5441                           
  5442                           ; BSR set to: 0
  5443   0022EE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  5444   0022F2                     
  5445                           ; BSR set to: 0
  5446   0022F2  0EFF               	movlw	255
  5447   0022F4  1767               	andwf	___flmul@prod& (0+255),f,b
  5448   0022F6  0EFF               	movlw	255
  5449   0022F8  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  5450   0022FA  0E7F               	movlw	127
  5451   0022FC  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  5452   0022FE  0E00               	movlw	0
  5453   002300  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5454   002302                     
  5455                           ; BSR set to: 0
  5456   002302  A166               	btfss	___flmul@bexp& (0+255),0,b
  5457   002304  EF86  F011         	goto	u3731
  5458   002308  EF88  F011         	goto	u3730
  5459   00230C                     u3731:
  5460   00230C  EF89  F011         	goto	l4092
  5461   002310                     u3730:
  5462   002310                     
  5463                           ; BSR set to: 0
  5464   002310  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  5465   002312                     l4092:
  5466                           
  5467                           ; BSR set to: 0
  5468   002312  90D8               	bcf	status,0,c
  5469   002314  3166               	rrcf	___flmul@bexp& (0+255),w,b
  5470   002316  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5471   002318                     l4094:
  5472                           
  5473                           ; BSR set to: 0
  5474   002318  5160               	movf	___flmul@sign& (0+255),w,b
  5475   00231A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5476   00231C                     
  5477                           ; BSR set to: 0
  5478   00231C  C067  F04B         	movff	___flmul@prod,?___flmul
  5479   002320  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  5480   002324  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  5481   002328  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  5482   00232C                     l1283:
  5483                           
  5484                           ; BSR set to: 0
  5485   00232C  0012               	return		;funcret
  5486   00232E                     __end_of___flmul:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function ___fleq *****************
  5490 ;; Defined at:
  5491 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  ff1             4    0[COMRAM] unsigned char 
  5494 ;;  ff2             4    4[COMRAM] unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;		None               void
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5506 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;Total ram usage:       12 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_RGB2Hue
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text25
  5521   003A5A                     __ptext25:
  5522                           	callstack 0
  5523   003A5A                     ___fleq:
  5524                           	callstack 28
  5525   003A5A  0E00               	movlw	0
  5526   003A5C  1401               	andwf	___fleq@ff1^0,w,c
  5527   003A5E  6E09               	movwf	??___fleq^0,c
  5528   003A60  0E00               	movlw	0
  5529   003A62  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5530   003A64  6E0A               	movwf	(??___fleq+1)^0,c
  5531   003A66  0E80               	movlw	128
  5532   003A68  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5533   003A6A  6E0B               	movwf	(??___fleq+2)^0,c
  5534   003A6C  0E7F               	movlw	127
  5535   003A6E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5536   003A70  6E0C               	movwf	(??___fleq+3)^0,c
  5537   003A72  5009               	movf	??___fleq^0,w,c
  5538   003A74  100A               	iorwf	(??___fleq+1)^0,w,c
  5539   003A76  100B               	iorwf	(??___fleq+2)^0,w,c
  5540   003A78  100C               	iorwf	(??___fleq+3)^0,w,c
  5541   003A7A  A4D8               	btfss	status,2,c
  5542   003A7C  EF42  F01D         	goto	u3741
  5543   003A80  EF44  F01D         	goto	u3740
  5544   003A84                     u3741:
  5545   003A84  EF4C  F01D         	goto	l4110
  5546   003A88                     u3740:
  5547   003A88  0E00               	movlw	0
  5548   003A8A  6E01               	movwf	___fleq@ff1^0,c
  5549   003A8C  0E00               	movlw	0
  5550   003A8E  6E02               	movwf	(___fleq@ff1+1)^0,c
  5551   003A90  0E00               	movlw	0
  5552   003A92  6E03               	movwf	(___fleq@ff1+2)^0,c
  5553   003A94  0E00               	movlw	0
  5554   003A96  6E04               	movwf	(___fleq@ff1+3)^0,c
  5555   003A98                     l4110:
  5556   003A98  0E00               	movlw	0
  5557   003A9A  1405               	andwf	___fleq@ff2^0,w,c
  5558   003A9C  6E09               	movwf	??___fleq^0,c
  5559   003A9E  0E00               	movlw	0
  5560   003AA0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5561   003AA2  6E0A               	movwf	(??___fleq+1)^0,c
  5562   003AA4  0E80               	movlw	128
  5563   003AA6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5564   003AA8  6E0B               	movwf	(??___fleq+2)^0,c
  5565   003AAA  0E7F               	movlw	127
  5566   003AAC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5567   003AAE  6E0C               	movwf	(??___fleq+3)^0,c
  5568   003AB0  5009               	movf	??___fleq^0,w,c
  5569   003AB2  100A               	iorwf	(??___fleq+1)^0,w,c
  5570   003AB4  100B               	iorwf	(??___fleq+2)^0,w,c
  5571   003AB6  100C               	iorwf	(??___fleq+3)^0,w,c
  5572   003AB8  A4D8               	btfss	status,2,c
  5573   003ABA  EF61  F01D         	goto	u3751
  5574   003ABE  EF63  F01D         	goto	u3750
  5575   003AC2                     u3751:
  5576   003AC2  EF6B  F01D         	goto	l4114
  5577   003AC6                     u3750:
  5578   003AC6  0E00               	movlw	0
  5579   003AC8  6E05               	movwf	___fleq@ff2^0,c
  5580   003ACA  0E00               	movlw	0
  5581   003ACC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5582   003ACE  0E00               	movlw	0
  5583   003AD0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5584   003AD2  0E00               	movlw	0
  5585   003AD4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5586   003AD6                     l4114:
  5587   003AD6  5005               	movf	___fleq@ff2^0,w,c
  5588   003AD8  1801               	xorwf	___fleq@ff1^0,w,c
  5589   003ADA  E10F               	bnz	u3760
  5590   003ADC  5006               	movf	(___fleq@ff2+1)^0,w,c
  5591   003ADE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5592   003AE0  E10C               	bnz	u3760
  5593   003AE2  5007               	movf	(___fleq@ff2+2)^0,w,c
  5594   003AE4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5595   003AE6  E109               	bnz	u3760
  5596   003AE8  5008               	movf	(___fleq@ff2+3)^0,w,c
  5597   003AEA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5598   003AEC  B4D8               	btfsc	status,2,c
  5599   003AEE  EF7B  F01D         	goto	u3761
  5600   003AF2  EF7D  F01D         	goto	u3760
  5601   003AF6                     u3761:
  5602   003AF6  EF80  F01D         	goto	l4118
  5603   003AFA                     u3760:
  5604   003AFA  90D8               	bcf	status,0,c
  5605   003AFC  EF81  F01D         	goto	l924
  5606   003B00                     l4118:
  5607   003B00  80D8               	bsf	status,0,c
  5608   003B02                     l924:
  5609   003B02  0012               	return		;funcret
  5610   003B04                     __end_of___fleq:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function ___fldiv *****************
  5614 ;; Defined at:
  5615 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  b               4   49[COMRAM] unsigned char 
  5618 ;;  a               4   53[COMRAM] unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  grs             4   68[COMRAM] unsigned long 
  5621 ;;  rem             4   61[COMRAM] unsigned long 
  5622 ;;  new_exp         2   66[COMRAM] short 
  5623 ;;  aexp            1   73[COMRAM] unsigned char 
  5624 ;;  bexp            1   72[COMRAM] unsigned char 
  5625 ;;  sign            1   65[COMRAM] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  4   49[COMRAM] unsigned char 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5635 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5636 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;Total ram usage:       25 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_RGB2Hue
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text26
  5650   00232E                     __ptext26:
  5651                           	callstack 0
  5652   00232E                     ___fldiv:
  5653                           	callstack 28
  5654   00232E  5035               	movf	(___fldiv@b+3)^0,w,c
  5655   002330  0B80               	andlw	128
  5656   002332  6E42               	movwf	___fldiv@sign^0,c
  5657   002334  5035               	movf	(___fldiv@b+3)^0,w,c
  5658   002336  2435               	addwf	(___fldiv@b+3)^0,w,c
  5659   002338  6E49               	movwf	___fldiv@bexp^0,c
  5660   00233A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5661   00233C  EFA2  F011         	goto	u3321
  5662   002340  EFA4  F011         	goto	u3320
  5663   002344                     u3321:
  5664   002344  EFA5  F011         	goto	l3838
  5665   002348                     u3320:
  5666   002348  8049               	bsf	___fldiv@bexp^0,0,c
  5667   00234A                     l3838:
  5668   00234A  5049               	movf	___fldiv@bexp^0,w,c
  5669   00234C  B4D8               	btfsc	status,2,c
  5670   00234E  EFAB  F011         	goto	u3331
  5671   002352  EFAD  F011         	goto	u3330
  5672   002356                     u3331:
  5673   002356  EFC2  F011         	goto	l3848
  5674   00235A                     u3330:
  5675   00235A  2849               	incf	___fldiv@bexp^0,w,c
  5676   00235C  A4D8               	btfss	status,2,c
  5677   00235E  EFB3  F011         	goto	u3341
  5678   002362  EFB5  F011         	goto	u3340
  5679   002366                     u3341:
  5680   002366  EFBD  F011         	goto	l3844
  5681   00236A                     u3340:
  5682   00236A  0E00               	movlw	0
  5683   00236C  6E32               	movwf	___fldiv@b^0,c
  5684   00236E  0E00               	movlw	0
  5685   002370  6E33               	movwf	(___fldiv@b+1)^0,c
  5686   002372  0E00               	movlw	0
  5687   002374  6E34               	movwf	(___fldiv@b+2)^0,c
  5688   002376  0E00               	movlw	0
  5689   002378  6E35               	movwf	(___fldiv@b+3)^0,c
  5690   00237A                     l3844:
  5691   00237A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5692   00237C  0E00               	movlw	0
  5693   00237E  6E35               	movwf	(___fldiv@b+3)^0,c
  5694   002380  EFCA  F011         	goto	l3850
  5695   002384                     l3848:
  5696   002384  0E00               	movlw	0
  5697   002386  6E32               	movwf	___fldiv@b^0,c
  5698   002388  0E00               	movlw	0
  5699   00238A  6E33               	movwf	(___fldiv@b+1)^0,c
  5700   00238C  0E00               	movlw	0
  5701   00238E  6E34               	movwf	(___fldiv@b+2)^0,c
  5702   002390  0E00               	movlw	0
  5703   002392  6E35               	movwf	(___fldiv@b+3)^0,c
  5704   002394                     l3850:
  5705   002394  5039               	movf	(___fldiv@a+3)^0,w,c
  5706   002396  0B80               	andlw	128
  5707   002398  1A42               	xorwf	___fldiv@sign^0,f,c
  5708   00239A  5039               	movf	(___fldiv@a+3)^0,w,c
  5709   00239C  2439               	addwf	(___fldiv@a+3)^0,w,c
  5710   00239E  6E4A               	movwf	___fldiv@aexp^0,c
  5711   0023A0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  5712   0023A2  EFD5  F011         	goto	u3351
  5713   0023A6  EFD7  F011         	goto	u3350
  5714   0023AA                     u3351:
  5715   0023AA  EFD8  F011         	goto	l3858
  5716   0023AE                     u3350:
  5717   0023AE  804A               	bsf	___fldiv@aexp^0,0,c
  5718   0023B0                     l3858:
  5719   0023B0  504A               	movf	___fldiv@aexp^0,w,c
  5720   0023B2  B4D8               	btfsc	status,2,c
  5721   0023B4  EFDE  F011         	goto	u3361
  5722   0023B8  EFE0  F011         	goto	u3360
  5723   0023BC                     u3361:
  5724   0023BC  EFF5  F011         	goto	l3868
  5725   0023C0                     u3360:
  5726   0023C0  284A               	incf	___fldiv@aexp^0,w,c
  5727   0023C2  A4D8               	btfss	status,2,c
  5728   0023C4  EFE6  F011         	goto	u3371
  5729   0023C8  EFE8  F011         	goto	u3370
  5730   0023CC                     u3371:
  5731   0023CC  EFF0  F011         	goto	l3864
  5732   0023D0                     u3370:
  5733   0023D0  0E00               	movlw	0
  5734   0023D2  6E36               	movwf	___fldiv@a^0,c
  5735   0023D4  0E00               	movlw	0
  5736   0023D6  6E37               	movwf	(___fldiv@a+1)^0,c
  5737   0023D8  0E00               	movlw	0
  5738   0023DA  6E38               	movwf	(___fldiv@a+2)^0,c
  5739   0023DC  0E00               	movlw	0
  5740   0023DE  6E39               	movwf	(___fldiv@a+3)^0,c
  5741   0023E0                     l3864:
  5742   0023E0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  5743   0023E2  0E00               	movlw	0
  5744   0023E4  6E39               	movwf	(___fldiv@a+3)^0,c
  5745   0023E6  EFFD  F011         	goto	l3870
  5746   0023EA                     l3868:
  5747   0023EA  0E00               	movlw	0
  5748   0023EC  6E36               	movwf	___fldiv@a^0,c
  5749   0023EE  0E00               	movlw	0
  5750   0023F0  6E37               	movwf	(___fldiv@a+1)^0,c
  5751   0023F2  0E00               	movlw	0
  5752   0023F4  6E38               	movwf	(___fldiv@a+2)^0,c
  5753   0023F6  0E00               	movlw	0
  5754   0023F8  6E39               	movwf	(___fldiv@a+3)^0,c
  5755   0023FA                     l3870:
  5756   0023FA  5036               	movf	___fldiv@a^0,w,c
  5757   0023FC  1037               	iorwf	(___fldiv@a+1)^0,w,c
  5758   0023FE  1038               	iorwf	(___fldiv@a+2)^0,w,c
  5759   002400  1039               	iorwf	(___fldiv@a+3)^0,w,c
  5760   002402  A4D8               	btfss	status,2,c
  5761   002404  EF06  F012         	goto	u3381
  5762   002408  EF08  F012         	goto	u3380
  5763   00240C                     u3381:
  5764   00240C  EF20  F012         	goto	l3882
  5765   002410                     u3380:
  5766   002410  0E00               	movlw	0
  5767   002412  6E32               	movwf	___fldiv@b^0,c
  5768   002414  0E00               	movlw	0
  5769   002416  6E33               	movwf	(___fldiv@b+1)^0,c
  5770   002418  0E00               	movlw	0
  5771   00241A  6E34               	movwf	(___fldiv@b+2)^0,c
  5772   00241C  0E00               	movlw	0
  5773   00241E  6E35               	movwf	(___fldiv@b+3)^0,c
  5774   002420  0E80               	movlw	128
  5775   002422  1234               	iorwf	(___fldiv@b+2)^0,f,c
  5776   002424  0E7F               	movlw	127
  5777   002426  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5778   002428                     l3876:
  5779   002428  5042               	movf	___fldiv@sign^0,w,c
  5780   00242A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5781   00242C  C032  F032         	movff	___fldiv@b,?___fldiv
  5782   002430  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  5783   002434  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  5784   002438  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  5785   00243C  EF63  F013         	goto	l1247
  5786   002440                     l3882:
  5787   002440  5049               	movf	___fldiv@bexp^0,w,c
  5788   002442  A4D8               	btfss	status,2,c
  5789   002444  EF26  F012         	goto	u3391
  5790   002448  EF28  F012         	goto	u3390
  5791   00244C                     u3391:
  5792   00244C  EF32  F012         	goto	l3890
  5793   002450                     u3390:
  5794   002450  0E00               	movlw	0
  5795   002452  6E32               	movwf	?___fldiv^0,c
  5796   002454  0E00               	movlw	0
  5797   002456  6E33               	movwf	(?___fldiv+1)^0,c
  5798   002458  0E00               	movlw	0
  5799   00245A  6E34               	movwf	(?___fldiv+2)^0,c
  5800   00245C  0E00               	movlw	0
  5801   00245E  6E35               	movwf	(?___fldiv+3)^0,c
  5802   002460  EF63  F013         	goto	l1247
  5803   002464                     l3890:
  5804   002464  504A               	movf	___fldiv@aexp^0,w,c
  5805   002466  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  5806   00246A  6A3B               	clrf	(??___fldiv+1)^0,c
  5807   00246C  5E3A               	subwf	??___fldiv^0,f,c
  5808   00246E  0E00               	movlw	0
  5809   002470  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  5810   002472  0E7F               	movlw	127
  5811   002474  243A               	addwf	??___fldiv^0,w,c
  5812   002476  6E43               	movwf	___fldiv@new_exp^0,c
  5813   002478  0E00               	movlw	0
  5814   00247A  203B               	addwfc	(??___fldiv+1)^0,w,c
  5815   00247C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5816   00247E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  5817   002482  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  5818   002486  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  5819   00248A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  5820   00248E  0E00               	movlw	0
  5821   002490  6E32               	movwf	___fldiv@b^0,c
  5822   002492  0E00               	movlw	0
  5823   002494  6E33               	movwf	(___fldiv@b+1)^0,c
  5824   002496  0E00               	movlw	0
  5825   002498  6E34               	movwf	(___fldiv@b+2)^0,c
  5826   00249A  0E00               	movlw	0
  5827   00249C  6E35               	movwf	(___fldiv@b+3)^0,c
  5828   00249E  0E00               	movlw	0
  5829   0024A0  6E45               	movwf	___fldiv@grs^0,c
  5830   0024A2  0E00               	movlw	0
  5831   0024A4  6E46               	movwf	(___fldiv@grs+1)^0,c
  5832   0024A6  0E00               	movlw	0
  5833   0024A8  6E47               	movwf	(___fldiv@grs+2)^0,c
  5834   0024AA  0E00               	movlw	0
  5835   0024AC  6E48               	movwf	(___fldiv@grs+3)^0,c
  5836   0024AE  0E00               	movlw	0
  5837   0024B0  6E4A               	movwf	___fldiv@aexp^0,c
  5838   0024B2  EF93  F012         	goto	l1249
  5839   0024B6                     l3900:
  5840   0024B6  504A               	movf	___fldiv@aexp^0,w,c
  5841   0024B8  B4D8               	btfsc	status,2,c
  5842   0024BA  EF61  F012         	goto	u3401
  5843   0024BE  EF63  F012         	goto	u3400
  5844   0024C2                     u3401:
  5845   0024C2  EF7A  F012         	goto	l3908
  5846   0024C6                     u3400:
  5847   0024C6  90D8               	bcf	status,0,c
  5848   0024C8  363E               	rlcf	___fldiv@rem^0,f,c
  5849   0024CA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  5850   0024CC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  5851   0024CE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  5852   0024D0  90D8               	bcf	status,0,c
  5853   0024D2  3632               	rlcf	___fldiv@b^0,f,c
  5854   0024D4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5855   0024D6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5856   0024D8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5857   0024DA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5858   0024DC  EF72  F012         	goto	u3411
  5859   0024E0  EF74  F012         	goto	u3410
  5860   0024E4                     u3411:
  5861   0024E4  EF75  F012         	goto	l1252
  5862   0024E8                     u3410:
  5863   0024E8  8032               	bsf	___fldiv@b^0,0,c
  5864   0024EA                     l1252:
  5865   0024EA  90D8               	bcf	status,0,c
  5866   0024EC  3645               	rlcf	___fldiv@grs^0,f,c
  5867   0024EE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5868   0024F0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5869   0024F2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5870   0024F4                     l3908:
  5871   0024F4  5036               	movf	___fldiv@a^0,w,c
  5872   0024F6  5C3E               	subwf	___fldiv@rem^0,w,c
  5873   0024F8  5037               	movf	(___fldiv@a+1)^0,w,c
  5874   0024FA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  5875   0024FC  5038               	movf	(___fldiv@a+2)^0,w,c
  5876   0024FE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  5877   002500  5039               	movf	(___fldiv@a+3)^0,w,c
  5878   002502  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  5879   002504  A0D8               	btfss	status,0,c
  5880   002506  EF87  F012         	goto	u3421
  5881   00250A  EF89  F012         	goto	u3420
  5882   00250E                     u3421:
  5883   00250E  EF92  F012         	goto	l3914
  5884   002512                     u3420:
  5885   002512  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  5886   002514  5036               	movf	___fldiv@a^0,w,c
  5887   002516  5E3E               	subwf	___fldiv@rem^0,f,c
  5888   002518  5037               	movf	(___fldiv@a+1)^0,w,c
  5889   00251A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  5890   00251C  5038               	movf	(___fldiv@a+2)^0,w,c
  5891   00251E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  5892   002520  5039               	movf	(___fldiv@a+3)^0,w,c
  5893   002522  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  5894   002524                     l3914:
  5895   002524  2A4A               	incf	___fldiv@aexp^0,f,c
  5896   002526                     l1249:
  5897   002526  0E19               	movlw	25
  5898   002528  644A               	cpfsgt	___fldiv@aexp^0,c
  5899   00252A  EF99  F012         	goto	u3431
  5900   00252E  EF9B  F012         	goto	u3430
  5901   002532                     u3431:
  5902   002532  EF5B  F012         	goto	l3900
  5903   002536                     u3430:
  5904   002536  503E               	movf	___fldiv@rem^0,w,c
  5905   002538  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  5906   00253A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  5907   00253C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  5908   00253E  B4D8               	btfsc	status,2,c
  5909   002540  EFA4  F012         	goto	u3441
  5910   002544  EFA6  F012         	goto	u3440
  5911   002548                     u3441:
  5912   002548  EFBE  F012         	goto	l3926
  5913   00254C                     u3440:
  5914   00254C  8045               	bsf	___fldiv@grs^0,0,c
  5915   00254E  EFBE  F012         	goto	l3926
  5916   002552                     l3920:
  5917   002552  90D8               	bcf	status,0,c
  5918   002554  3632               	rlcf	___fldiv@b^0,f,c
  5919   002556  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5920   002558  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5921   00255A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5922   00255C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5923   00255E  EFB3  F012         	goto	u3451
  5924   002562  EFB5  F012         	goto	u3450
  5925   002566                     u3451:
  5926   002566  EFB6  F012         	goto	l1258
  5927   00256A                     u3450:
  5928   00256A  8032               	bsf	___fldiv@b^0,0,c
  5929   00256C                     l1258:
  5930   00256C  90D8               	bcf	status,0,c
  5931   00256E  3645               	rlcf	___fldiv@grs^0,f,c
  5932   002570  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5933   002572  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5934   002574  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5935   002576  0643               	decf	___fldiv@new_exp^0,f,c
  5936   002578  A0D8               	btfss	status,0,c
  5937   00257A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  5938   00257C                     l3926:
  5939   00257C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5940   00257E  EFC3  F012         	goto	u3461
  5941   002582  EFC5  F012         	goto	u3460
  5942   002586                     u3461:
  5943   002586  EFA9  F012         	goto	l3920
  5944   00258A                     u3460:
  5945   00258A  0E00               	movlw	0
  5946   00258C  6E4A               	movwf	___fldiv@aexp^0,c
  5947   00258E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5948   002590  EFCC  F012         	goto	u3471
  5949   002594  EFCE  F012         	goto	u3470
  5950   002598                     u3471:
  5951   002598  EFF2  F012         	goto	l1260
  5952   00259C                     u3470:
  5953   00259C  0EFF               	movlw	255
  5954   00259E  1445               	andwf	___fldiv@grs^0,w,c
  5955   0025A0  6E3A               	movwf	??___fldiv^0,c
  5956   0025A2  0EFF               	movlw	255
  5957   0025A4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  5958   0025A6  6E3B               	movwf	(??___fldiv+1)^0,c
  5959   0025A8  0EFF               	movlw	255
  5960   0025AA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  5961   0025AC  6E3C               	movwf	(??___fldiv+2)^0,c
  5962   0025AE  0E7F               	movlw	127
  5963   0025B0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  5964   0025B2  6E3D               	movwf	(??___fldiv+3)^0,c
  5965   0025B4  503A               	movf	??___fldiv^0,w,c
  5966   0025B6  103B               	iorwf	(??___fldiv+1)^0,w,c
  5967   0025B8  103C               	iorwf	(??___fldiv+2)^0,w,c
  5968   0025BA  103D               	iorwf	(??___fldiv+3)^0,w,c
  5969   0025BC  B4D8               	btfsc	status,2,c
  5970   0025BE  EFE3  F012         	goto	u3481
  5971   0025C2  EFE5  F012         	goto	u3480
  5972   0025C6                     u3481:
  5973   0025C6  EFE9  F012         	goto	l1261
  5974   0025CA                     u3480:
  5975   0025CA                     l3934:
  5976   0025CA  0E01               	movlw	1
  5977   0025CC  6E4A               	movwf	___fldiv@aexp^0,c
  5978   0025CE  EFF2  F012         	goto	l1260
  5979   0025D2                     l1261:
  5980   0025D2  A032               	btfss	___fldiv@b^0,0,c
  5981   0025D4  EFEE  F012         	goto	u3491
  5982   0025D8  EFF0  F012         	goto	u3490
  5983   0025DC                     u3491:
  5984   0025DC  EFF2  F012         	goto	l1260
  5985   0025E0                     u3490:
  5986   0025E0  EFE5  F012         	goto	l3934
  5987   0025E4                     l1260:
  5988   0025E4  504A               	movf	___fldiv@aexp^0,w,c
  5989   0025E6  B4D8               	btfsc	status,2,c
  5990   0025E8  EFF8  F012         	goto	u3501
  5991   0025EC  EFFA  F012         	goto	u3500
  5992   0025F0                     u3501:
  5993   0025F0  EF1E  F013         	goto	l3946
  5994   0025F4                     u3500:
  5995   0025F4  0E01               	movlw	1
  5996   0025F6  2632               	addwf	___fldiv@b^0,f,c
  5997   0025F8  0E00               	movlw	0
  5998   0025FA  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5999   0025FC  2234               	addwfc	(___fldiv@b+2)^0,f,c
  6000   0025FE  2235               	addwfc	(___fldiv@b+3)^0,f,c
  6001   002600  A035               	btfss	(___fldiv@b+3)^0,0,c
  6002   002602  EF05  F013         	goto	u3511
  6003   002606  EF07  F013         	goto	u3510
  6004   00260A                     u3511:
  6005   00260A  EF1E  F013         	goto	l3946
  6006   00260E                     u3510:
  6007   00260E  C032  F03A         	movff	___fldiv@b,??___fldiv
  6008   002612  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  6009   002616  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  6010   00261A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  6011   00261E  343D               	rlcf	(??___fldiv+3)^0,w,c
  6012   002620  323D               	rrcf	(??___fldiv+3)^0,f,c
  6013   002622  323C               	rrcf	(??___fldiv+2)^0,f,c
  6014   002624  323B               	rrcf	(??___fldiv+1)^0,f,c
  6015   002626  323A               	rrcf	??___fldiv^0,f,c
  6016   002628  C03A  F032         	movff	??___fldiv,___fldiv@b
  6017   00262C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  6018   002630  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  6019   002634  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  6020   002638  4A43               	infsnz	___fldiv@new_exp^0,f,c
  6021   00263A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  6022   00263C                     l3946:
  6023   00263C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6024   00263E  EF29  F013         	goto	u3521
  6025   002642  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  6026   002644  E108               	bnz	u3520
  6027   002646  2843               	incf	___fldiv@new_exp^0,w,c
  6028   002648  A0D8               	btfss	status,0,c
  6029   00264A  EF29  F013         	goto	u3521
  6030   00264E  EF2B  F013         	goto	u3520
  6031   002652                     u3521:
  6032   002652  EF36  F013         	goto	l3950
  6033   002656                     u3520:
  6034   002656  0E00               	movlw	0
  6035   002658  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  6036   00265A  6843               	setf	___fldiv@new_exp^0,c
  6037   00265C  0E00               	movlw	0
  6038   00265E  6E32               	movwf	___fldiv@b^0,c
  6039   002660  0E00               	movlw	0
  6040   002662  6E33               	movwf	(___fldiv@b+1)^0,c
  6041   002664  0E00               	movlw	0
  6042   002666  6E34               	movwf	(___fldiv@b+2)^0,c
  6043   002668  0E00               	movlw	0
  6044   00266A  6E35               	movwf	(___fldiv@b+3)^0,c
  6045   00266C                     l3950:
  6046   00266C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6047   00266E  EF43  F013         	goto	u3530
  6048   002672  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  6049   002674  E106               	bnz	u3531
  6050   002676  0443               	decf	___fldiv@new_exp^0,w,c
  6051   002678  B0D8               	btfsc	status,0,c
  6052   00267A  EF41  F013         	goto	u3531
  6053   00267E  EF43  F013         	goto	u3530
  6054   002682                     u3531:
  6055   002682  EF51  F013         	goto	l3954
  6056   002686                     u3530:
  6057   002686  0E00               	movlw	0
  6058   002688  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  6059   00268A  0E00               	movlw	0
  6060   00268C  6E43               	movwf	___fldiv@new_exp^0,c
  6061   00268E  0E00               	movlw	0
  6062   002690  6E32               	movwf	___fldiv@b^0,c
  6063   002692  0E00               	movlw	0
  6064   002694  6E33               	movwf	(___fldiv@b+1)^0,c
  6065   002696  0E00               	movlw	0
  6066   002698  6E34               	movwf	(___fldiv@b+2)^0,c
  6067   00269A  0E00               	movlw	0
  6068   00269C  6E35               	movwf	(___fldiv@b+3)^0,c
  6069   00269E  0E00               	movlw	0
  6070   0026A0  6E42               	movwf	___fldiv@sign^0,c
  6071   0026A2                     l3954:
  6072   0026A2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  6073   0026A6  A049               	btfss	___fldiv@bexp^0,0,c
  6074   0026A8  EF58  F013         	goto	u3541
  6075   0026AC  EF5A  F013         	goto	u3540
  6076   0026B0                     u3541:
  6077   0026B0  EF5D  F013         	goto	l3960
  6078   0026B4                     u3540:
  6079   0026B4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  6080   0026B6  EF5E  F013         	goto	l3962
  6081   0026BA                     l3960:
  6082   0026BA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  6083   0026BC                     l3962:
  6084   0026BC  90D8               	bcf	status,0,c
  6085   0026BE  3049               	rrcf	___fldiv@bexp^0,w,c
  6086   0026C0  6E35               	movwf	(___fldiv@b+3)^0,c
  6087   0026C2  EF14  F012         	goto	l3876
  6088   0026C6                     l1247:
  6089   0026C6  0012               	return		;funcret
  6090   0026C8                     __end_of___fldiv:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function _LED_init *****************
  6094 ;; Defined at:
  6095 ;;		line 4 in file "LED.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		None
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; Hardware stack levels required when called: 1
  6116 ;; This function calls:
  6117 ;;		Nothing
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text27
  6124   0048C6                     __ptext27:
  6125                           	callstack 0
  6126   0048C6                     _LED_init:
  6127                           	callstack 29
  6128   0048C6                     
  6129                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  6130   0048C6  9884               	bcf	132,4,c	;volatile
  6131                           
  6132                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  6133   0048C8  9088               	bcf	136,0,c	;volatile
  6134                           
  6135                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  6136   0048CA  9086               	bcf	134,0,c	;volatile
  6137                           
  6138                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  6139   0048CC  987C               	bcf	124,4,c	;volatile
  6140                           
  6141                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  6142   0048CE  9080               	bcf	128,0,c	;volatile
  6143                           
  6144                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  6145   0048D0  907E               	bcf	126,0,c	;volatile
  6146   0048D2  0012               	return		;funcret
  6147   0048D4                     __end_of_LED_init:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function _Interrupts_init *****************
  6151 ;; Defined at:
  6152 ;;		line 5 in file "interrupts.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		None
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 1
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_main
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text28
  6181   0048E0                     __ptext28:
  6182                           	callstack 0
  6183   0048E0                     _Interrupts_init:
  6184                           	callstack 29
  6185   0048E0                     
  6186                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  6187   0048E0  010E               	movlb	14	; () banked
  6188   0048E2  872D               	bsf	45,3,b	;volatile
  6189                           
  6190                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  6191   0048E4  8AF2               	bsf	242,5,c	;volatile
  6192                           
  6193                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  6194   0048E6  8CF2               	bsf	242,6,c	;volatile
  6195                           
  6196                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  6197   0048E8  8EF2               	bsf	242,7,c	;volatile
  6198   0048EA                     
  6199                           ; BSR set to: 14
  6200   0048EA  0012               	return		;funcret
  6201   0048EC                     __end_of_Interrupts_init:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _Colour2Action *****************
  6205 ;; Defined at:
  6206 ;;		line 105 in file "colorfunctions.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  cf              2   55[COMRAM] PTR struct RGBC_rel
  6209 ;;		 -> colorf(22), 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;Total ram usage:        4 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 8
  6228 ;; This function calls:
  6229 ;;		_Blue_T180
  6230 ;;		_Green_L90
  6231 ;;		_LightBlue_L135
  6232 ;;		_Orange_R135
  6233 ;;		_Pink_rev1_L90
  6234 ;;		_Red_R90
  6235 ;;		_White
  6236 ;;		_Yellow_rev1_R90
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text29
  6243   002C4A                     __ptext29:
  6244                           	callstack 0
  6245   002C4A                     _Colour2Action:
  6246                           	callstack 22
  6247   002C4A                     
  6248                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  6249   002C4A  EE20 F014          	lfsr	2,20
  6250   002C4E  5038               	movf	Colour2Action@cf^0,w,c
  6251   002C50  26D9               	addwf	fsr2l,f,c
  6252   002C52  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6253   002C54  22DA               	addwfc	fsr2h,f,c
  6254   002C56  50DE               	movf	postinc2,w,c
  6255   002C58  10DE               	iorwf	postinc2,w,c
  6256   002C5A  A4D8               	btfss	status,2,c
  6257   002C5C  EF32  F016         	goto	u4071
  6258   002C60  EF34  F016         	goto	u4070
  6259   002C64                     u4071:
  6260   002C64  EF40  F016         	goto	l4366
  6261   002C68                     u4070:
  6262   002C68                     
  6263                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  6264   002C68  0EEE               	movlw	low _motorL
  6265   002C6A  6E21               	movwf	Red_R90@mL^0,c
  6266   002C6C  0E00               	movlw	high _motorL
  6267   002C6E  6E22               	movwf	(Red_R90@mL+1)^0,c
  6268   002C70  0EE5               	movlw	low _motorR
  6269   002C72  6E23               	movwf	Red_R90@mR^0,c
  6270   002C74  0E00               	movlw	high _motorR
  6271   002C76  6E24               	movwf	(Red_R90@mR+1)^0,c
  6272   002C78  ECA3  F020         	call	_Red_R90	;wreg free
  6273                           
  6274                           ;colorfunctions.c: 110:     }
  6275   002C7C  EFE7  F016         	goto	l4390
  6276   002C80                     l4366:
  6277   002C80  EE20 F014          	lfsr	2,20
  6278   002C84  5038               	movf	Colour2Action@cf^0,w,c
  6279   002C86  26D9               	addwf	fsr2l,f,c
  6280   002C88  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6281   002C8A  22DA               	addwfc	fsr2h,f,c
  6282   002C8C  04DE               	decf	postinc2,w,c
  6283   002C8E  10DE               	iorwf	postinc2,w,c
  6284   002C90  A4D8               	btfss	status,2,c
  6285   002C92  EF4D  F016         	goto	u4081
  6286   002C96  EF4F  F016         	goto	u4080
  6287   002C9A                     u4081:
  6288   002C9A  EF5B  F016         	goto	l4370
  6289   002C9E                     u4080:
  6290   002C9E                     
  6291                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  6292   002C9E  0EEE               	movlw	low _motorL
  6293   002CA0  6E21               	movwf	Green_L90@mL^0,c
  6294   002CA2  0E00               	movlw	high _motorL
  6295   002CA4  6E22               	movwf	(Green_L90@mL+1)^0,c
  6296   002CA6  0EE5               	movlw	low _motorR
  6297   002CA8  6E23               	movwf	Green_L90@mR^0,c
  6298   002CAA  0E00               	movlw	high _motorR
  6299   002CAC  6E24               	movwf	(Green_L90@mR+1)^0,c
  6300   002CAE  ECE1  F020         	call	_Green_L90	;wreg free
  6301                           
  6302                           ;colorfunctions.c: 114:     }
  6303   002CB2  EFE7  F016         	goto	l4390
  6304   002CB6                     l4370:
  6305   002CB6  EE20 F014          	lfsr	2,20
  6306   002CBA  5038               	movf	Colour2Action@cf^0,w,c
  6307   002CBC  26D9               	addwf	fsr2l,f,c
  6308   002CBE  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6309   002CC0  22DA               	addwfc	fsr2h,f,c
  6310   002CC2  0E02               	movlw	2
  6311   002CC4  18DE               	xorwf	postinc2,w,c
  6312   002CC6  10DE               	iorwf	postinc2,w,c
  6313   002CC8  A4D8               	btfss	status,2,c
  6314   002CCA  EF69  F016         	goto	u4091
  6315   002CCE  EF6B  F016         	goto	u4090
  6316   002CD2                     u4091:
  6317   002CD2  EF77  F016         	goto	l4374
  6318   002CD6                     u4090:
  6319   002CD6                     
  6320                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  6321   002CD6  0EEE               	movlw	low _motorL
  6322   002CD8  6E24               	movwf	Blue_T180@mL^0,c
  6323   002CDA  0E00               	movlw	high _motorL
  6324   002CDC  6E25               	movwf	(Blue_T180@mL+1)^0,c
  6325   002CDE  0EE5               	movlw	low _motorR
  6326   002CE0  6E26               	movwf	Blue_T180@mR^0,c
  6327   002CE2  0E00               	movlw	high _motorR
  6328   002CE4  6E27               	movwf	(Blue_T180@mR+1)^0,c
  6329   002CE6  ECB7  F021         	call	_Blue_T180	;wreg free
  6330                           
  6331                           ;colorfunctions.c: 118:     }
  6332   002CEA  EFE7  F016         	goto	l4390
  6333   002CEE                     l4374:
  6334   002CEE  EE20 F014          	lfsr	2,20
  6335   002CF2  5038               	movf	Colour2Action@cf^0,w,c
  6336   002CF4  26D9               	addwf	fsr2l,f,c
  6337   002CF6  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6338   002CF8  22DA               	addwfc	fsr2h,f,c
  6339   002CFA  0E03               	movlw	3
  6340   002CFC  18DE               	xorwf	postinc2,w,c
  6341   002CFE  10DE               	iorwf	postinc2,w,c
  6342   002D00  A4D8               	btfss	status,2,c
  6343   002D02  EF85  F016         	goto	u4101
  6344   002D06  EF87  F016         	goto	u4100
  6345   002D0A                     u4101:
  6346   002D0A  EF93  F016         	goto	l4378
  6347   002D0E                     u4100:
  6348   002D0E                     
  6349                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  6350   002D0E  0EEE               	movlw	low _motorL
  6351   002D10  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  6352   002D12  0E00               	movlw	high _motorL
  6353   002D14  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  6354   002D16  0EE5               	movlw	low _motorR
  6355   002D18  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  6356   002D1A  0E00               	movlw	high _motorR
  6357   002D1C  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  6358   002D1E  EC71  F01B         	call	_Yellow_rev1_R90	;wreg free
  6359                           
  6360                           ;colorfunctions.c: 122:     }
  6361   002D22  EFE7  F016         	goto	l4390
  6362   002D26                     l4378:
  6363   002D26  EE20 F014          	lfsr	2,20
  6364   002D2A  5038               	movf	Colour2Action@cf^0,w,c
  6365   002D2C  26D9               	addwf	fsr2l,f,c
  6366   002D2E  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6367   002D30  22DA               	addwfc	fsr2h,f,c
  6368   002D32  0E04               	movlw	4
  6369   002D34  18DE               	xorwf	postinc2,w,c
  6370   002D36  10DE               	iorwf	postinc2,w,c
  6371   002D38  A4D8               	btfss	status,2,c
  6372   002D3A  EFA1  F016         	goto	u4111
  6373   002D3E  EFA3  F016         	goto	u4110
  6374   002D42                     u4111:
  6375   002D42  EFAF  F016         	goto	l4382
  6376   002D46                     u4110:
  6377   002D46                     
  6378                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  6379   002D46  0EEE               	movlw	low _motorL
  6380   002D48  6E21               	movwf	Pink_rev1_L90@mL^0,c
  6381   002D4A  0E00               	movlw	high _motorL
  6382   002D4C  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  6383   002D4E  0EE5               	movlw	low _motorR
  6384   002D50  6E23               	movwf	Pink_rev1_L90@mR^0,c
  6385   002D52  0E00               	movlw	high _motorR
  6386   002D54  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  6387   002D56  ECE5  F01B         	call	_Pink_rev1_L90	;wreg free
  6388                           
  6389                           ;colorfunctions.c: 126:     }
  6390   002D5A  EFE7  F016         	goto	l4390
  6391   002D5E                     l4382:
  6392   002D5E  EE20 F014          	lfsr	2,20
  6393   002D62  5038               	movf	Colour2Action@cf^0,w,c
  6394   002D64  26D9               	addwf	fsr2l,f,c
  6395   002D66  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6396   002D68  22DA               	addwfc	fsr2h,f,c
  6397   002D6A  0E05               	movlw	5
  6398   002D6C  18DE               	xorwf	postinc2,w,c
  6399   002D6E  10DE               	iorwf	postinc2,w,c
  6400   002D70  A4D8               	btfss	status,2,c
  6401   002D72  EFBD  F016         	goto	u4121
  6402   002D76  EFBF  F016         	goto	u4120
  6403   002D7A                     u4121:
  6404   002D7A  EFCB  F016         	goto	l4386
  6405   002D7E                     u4120:
  6406   002D7E                     
  6407                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  6408   002D7E  0EEE               	movlw	low _motorL
  6409   002D80  6E21               	movwf	Orange_R135@mL^0,c
  6410   002D82  0E00               	movlw	high _motorL
  6411   002D84  6E22               	movwf	(Orange_R135@mL+1)^0,c
  6412   002D86  0EE5               	movlw	low _motorR
  6413   002D88  6E23               	movwf	Orange_R135@mR^0,c
  6414   002D8A  0E00               	movlw	high _motorR
  6415   002D8C  6E24               	movwf	(Orange_R135@mR+1)^0,c
  6416   002D8E  ECD5  F01D         	call	_Orange_R135	;wreg free
  6417                           
  6418                           ;colorfunctions.c: 130:     }
  6419   002D92  EFE7  F016         	goto	l4390
  6420   002D96                     l4386:
  6421   002D96  EE20 F014          	lfsr	2,20
  6422   002D9A  5038               	movf	Colour2Action@cf^0,w,c
  6423   002D9C  26D9               	addwf	fsr2l,f,c
  6424   002D9E  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6425   002DA0  22DA               	addwfc	fsr2h,f,c
  6426   002DA2  0E06               	movlw	6
  6427   002DA4  18DE               	xorwf	postinc2,w,c
  6428   002DA6  10DE               	iorwf	postinc2,w,c
  6429   002DA8  A4D8               	btfss	status,2,c
  6430   002DAA  EFD9  F016         	goto	u4131
  6431   002DAE  EFDB  F016         	goto	u4130
  6432   002DB2                     u4131:
  6433   002DB2  EFE7  F016         	goto	l612
  6434   002DB6                     u4130:
  6435   002DB6                     
  6436                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  6437   002DB6  0EEE               	movlw	low _motorL
  6438   002DB8  6E21               	movwf	LightBlue_L135@mL^0,c
  6439   002DBA  0E00               	movlw	high _motorL
  6440   002DBC  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  6441   002DBE  0EE5               	movlw	low _motorR
  6442   002DC0  6E23               	movwf	LightBlue_L135@mR^0,c
  6443   002DC2  0E00               	movlw	high _motorR
  6444   002DC4  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  6445   002DC6  EC27  F01E         	call	_LightBlue_L135	;wreg free
  6446   002DCA  EFE7  F016         	goto	l4390
  6447   002DCE                     l612:
  6448   002DCE                     l4390:
  6449                           
  6450                           ;colorfunctions.c: 135:     if (cf->colourindex == 7)
  6451   002DCE  EE20 F014          	lfsr	2,20
  6452   002DD2  5038               	movf	Colour2Action@cf^0,w,c
  6453   002DD4  26D9               	addwf	fsr2l,f,c
  6454   002DD6  5039               	movf	(Colour2Action@cf+1)^0,w,c
  6455   002DD8  22DA               	addwfc	fsr2h,f,c
  6456   002DDA  0E07               	movlw	7
  6457   002DDC  18DE               	xorwf	postinc2,w,c
  6458   002DDE  10DE               	iorwf	postinc2,w,c
  6459   002DE0  A4D8               	btfss	status,2,c
  6460   002DE2  EFF5  F016         	goto	u4141
  6461   002DE6  EFF7  F016         	goto	u4140
  6462   002DEA                     u4141:
  6463   002DEA  EF0D  F017         	goto	l619
  6464   002DEE                     u4140:
  6465   002DEE                     
  6466                           ;colorfunctions.c: 136:     {;colorfunctions.c: 137:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  6467   002DEE  0EEE               	movlw	low _motorL
  6468   002DF0  6E28               	movwf	White@mL^0,c
  6469   002DF2  0E00               	movlw	high _motorL
  6470   002DF4  6E29               	movwf	(White@mL+1)^0,c
  6471   002DF6  0EE5               	movlw	low _motorR
  6472   002DF8  6E2A               	movwf	White@mR^0,c
  6473   002DFA  0E00               	movlw	high _motorR
  6474   002DFC  6E2B               	movwf	(White@mR+1)^0,c
  6475   002DFE  C0E0  F02C         	movff	_movementCount,White@movementCount	;volatile
  6476   002E02  C0E1  F02D         	movff	_movementCount+1,White@movementCount+1	;volatile
  6477   002E06  0E48               	movlw	low _movementMemory
  6478   002E08  6E2E               	movwf	White@movementMemory^0,c
  6479   002E0A  0E01               	movlw	high _movementMemory
  6480   002E0C  6E2F               	movwf	(White@movementMemory+1)^0,c
  6481   002E0E  0E20               	movlw	low _timerMemory
  6482   002E10  6E30               	movwf	White@timerMemory^0,c
  6483   002E12  0E01               	movlw	high _timerMemory
  6484   002E14  6E31               	movwf	(White@timerMemory+1)^0,c
  6485   002E16  EC64  F013         	call	_White	;wreg free
  6486   002E1A                     l619:
  6487   002E1A  0012               	return		;funcret
  6488   002E1C                     __end_of_Colour2Action:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function _White *****************
  6492 ;; Defined at:
  6493 ;;		line 341 in file "dc_motor.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  mL              2   39[COMRAM] PTR struct DC_motor
  6496 ;;		 -> motorL(9), 
  6497 ;;  mR              2   41[COMRAM] PTR struct DC_motor
  6498 ;;		 -> motorR(9), 
  6499 ;;  movementCoun    2   43[COMRAM] unsigned int 
  6500 ;;  movementMemo    2   45[COMRAM] PTR volatile unsigned in
  6501 ;;		 -> movementMemory(40), 
  6502 ;;  timerMemory     2   47[COMRAM] PTR volatile unsigned in
  6503 ;;		 -> timerMemory(40), 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  tempTimer       2   51[COMRAM] unsigned int 
  6506 ;;  i               2   53[COMRAM] int 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6516 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6519 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6520 ;;Total ram usage:       16 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 7
  6523 ;; This function calls:
  6524 ;;		_Blue_T180
  6525 ;;		_Green_L90
  6526 ;;		_LightBlue_L135
  6527 ;;		_Orange_R135
  6528 ;;		_Pink_rev1_L90
  6529 ;;		_Red_R90
  6530 ;;		_TimerReset
  6531 ;;		_Yellow_rev1_R90
  6532 ;;		_fullSpeedAhead
  6533 ;;		_getTimerValue
  6534 ;;		_reverseHalfSquare
  6535 ;;		_rotate180left
  6536 ;;		_stop
  6537 ;; This function is called by:
  6538 ;;		_Colour2Action
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text30
  6543   0026C8                     __ptext30:
  6544                           	callstack 0
  6545   0026C8                     _White:
  6546                           	callstack 22
  6547   0026C8                     
  6548                           ;dc_motor.c: 341: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile unsigned int *timerMemory);dc_
      +                          motor.c: 342: {;dc_motor.c: 343:     LATDbits.LATD4 = 1;;
  6549   0026C8  887C               	bsf	124,4,c	;volatile
  6550                           
  6551                           ;dc_motor.c: 345:     while (!retracingDone){
  6552   0026CA  EFE6  F014         	goto	l3776
  6553   0026CE                     l3708:
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;dc_motor.c: 346:         reverseHalfSquare(mL,mR);
  6557   0026CE  C028  F01B         	movff	White@mL,reverseHalfSquare@mL
  6558   0026D2  C029  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  6559   0026D6  C02A  F01D         	movff	White@mR,reverseHalfSquare@mR
  6560   0026DA  C02B  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  6561   0026DE  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  6562                           
  6563                           ;dc_motor.c: 347:         rotate180left(mL,mR);
  6564   0026E2  C028  F020         	movff	White@mL,rotate180left@mL
  6565   0026E6  C029  F021         	movff	White@mL+1,rotate180left@mL+1
  6566   0026EA  C02A  F022         	movff	White@mR,rotate180left@mR
  6567   0026EE  C02B  F023         	movff	White@mR+1,rotate180left@mR+1
  6568   0026F2  ECE1  F021         	call	_rotate180left	;wreg free
  6569   0026F6                     
  6570                           ;dc_motor.c: 348:         _delay((unsigned long)((500)*(64000000/4000.0)));
  6571   0026F6  0E29               	movlw	41
  6572   0026F8  6E33               	movwf	(??_White+1)^0,c
  6573   0026FA  0E96               	movlw	150
  6574   0026FC  6E32               	movwf	??_White^0,c
  6575   0026FE  0E7F               	movlw	127
  6576   002700                     u4267:
  6577   002700  2EE8               	decfsz	wreg,f,c
  6578   002702  D7FE               	bra	u4267
  6579   002704  2E32               	decfsz	??_White^0,f,c
  6580   002706  D7FC               	bra	u4267
  6581   002708  2E33               	decfsz	(??_White+1)^0,f,c
  6582   00270A  D7FA               	bra	u4267
  6583   00270C  F000               	nop	
  6584   00270E                     
  6585                           ;dc_motor.c: 349:         reverseHalfSquare(mL,mR);
  6586   00270E  C028  F01B         	movff	White@mL,reverseHalfSquare@mL
  6587   002712  C029  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  6588   002716  C02A  F01D         	movff	White@mR,reverseHalfSquare@mR
  6589   00271A  C02B  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  6590   00271E  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  6591   002722                     
  6592                           ;dc_motor.c: 350:         ForwardFlag = 0;
  6593   002722  0E00               	movlw	0
  6594   002724  0100               	movlb	0	; () banked
  6595   002726  6FFF               	movwf	_ForwardFlag& (0+255),b	;volatile
  6596   002728                     
  6597                           ; BSR set to: 0
  6598                           ;dc_motor.c: 351:         retracingDone = 1;
  6599   002728  0E00               	movlw	0
  6600   00272A  6FDF               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  6601   00272C  0E01               	movlw	1
  6602   00272E  6FDE               	movwf	_retracingDone& (0+255),b	;volatile
  6603   002730                     
  6604                           ; BSR set to: 0
  6605                           ;dc_motor.c: 353:         for (int i=movementCount-1; i>=0;i--){
  6606   002730  0EFF               	movlw	255
  6607   002732  242C               	addwf	White@movementCount^0,w,c
  6608   002734  6E36               	movwf	White@i^0,c
  6609   002736  0EFF               	movlw	255
  6610   002738  202D               	addwfc	(White@movementCount+1)^0,w,c
  6611   00273A  6E37               	movwf	(White@i+1)^0,c
  6612   00273C                     l3720:
  6613   00273C  BE37               	btfsc	(White@i+1)^0,7,c
  6614   00273E  EFA5  F013         	goto	u3200
  6615   002742  EFA3  F013         	goto	u3201
  6616   002746                     u3201:
  6617   002746  EFA7  F013         	goto	l319
  6618   00274A                     u3200:
  6619   00274A  EFE6  F014         	goto	l3776
  6620   00274E                     l319:
  6621                           
  6622                           ;dc_motor.c: 354:             LATDbits.LATD4 = 1;;
  6623   00274E  887C               	bsf	124,4,c	;volatile
  6624   002750                     
  6625                           ;dc_motor.c: 355:             _delay((unsigned long)((200)*(64000000/4000.0)));
  6626   002750  0E11               	movlw	17
  6627   002752  6E33               	movwf	(??_White+1)^0,c
  6628   002754  0E3C               	movlw	60
  6629   002756  6E32               	movwf	??_White^0,c
  6630   002758  0ECB               	movlw	203
  6631   00275A                     u4277:
  6632   00275A  2EE8               	decfsz	wreg,f,c
  6633   00275C  D7FE               	bra	u4277
  6634   00275E  2E32               	decfsz	??_White^0,f,c
  6635   002760  D7FC               	bra	u4277
  6636   002762  2E33               	decfsz	(??_White+1)^0,f,c
  6637   002764  D7FA               	bra	u4277
  6638   002766  F000               	nop	
  6639   002768                     
  6640                           ;dc_motor.c: 356:             if (movementMemory[i]==0){
  6641   002768  90D8               	bcf	status,0,c
  6642   00276A  3436               	rlcf	White@i^0,w,c
  6643   00276C  6ED9               	movwf	fsr2l,c
  6644   00276E  3437               	rlcf	(White@i+1)^0,w,c
  6645   002770  6EDA               	movwf	fsr2h,c
  6646   002772  502E               	movf	White@movementMemory^0,w,c
  6647   002774  26D9               	addwf	fsr2l,f,c
  6648   002776  502F               	movf	(White@movementMemory+1)^0,w,c
  6649   002778  22DA               	addwfc	fsr2h,f,c
  6650   00277A  50DE               	movf	postinc2,w,c
  6651   00277C  10DE               	iorwf	postinc2,w,c
  6652   00277E  A4D8               	btfss	status,2,c
  6653   002780  EFC4  F013         	goto	u3211
  6654   002784  EFC6  F013         	goto	u3210
  6655   002788                     u3211:
  6656   002788  EFD2  F013         	goto	l3730
  6657   00278C                     u3210:
  6658   00278C                     
  6659                           ;dc_motor.c: 357:                 Red_R90(mL,mR);}
  6660   00278C  C028  F021         	movff	White@mL,Red_R90@mL
  6661   002790  C029  F022         	movff	White@mL+1,Red_R90@mL+1
  6662   002794  C02A  F023         	movff	White@mR,Red_R90@mR
  6663   002798  C02B  F024         	movff	White@mR+1,Red_R90@mR+1
  6664   00279C  ECA3  F020         	call	_Red_R90	;wreg free
  6665   0027A0  EFAA  F014         	goto	l3758
  6666   0027A4                     l3730:
  6667   0027A4  90D8               	bcf	status,0,c
  6668   0027A6  3436               	rlcf	White@i^0,w,c
  6669   0027A8  6ED9               	movwf	fsr2l,c
  6670   0027AA  3437               	rlcf	(White@i+1)^0,w,c
  6671   0027AC  6EDA               	movwf	fsr2h,c
  6672   0027AE  502E               	movf	White@movementMemory^0,w,c
  6673   0027B0  26D9               	addwf	fsr2l,f,c
  6674   0027B2  502F               	movf	(White@movementMemory+1)^0,w,c
  6675   0027B4  22DA               	addwfc	fsr2h,f,c
  6676   0027B6  04DE               	decf	postinc2,w,c
  6677   0027B8  10DE               	iorwf	postinc2,w,c
  6678   0027BA  A4D8               	btfss	status,2,c
  6679   0027BC  EFE2  F013         	goto	u3221
  6680   0027C0  EFE4  F013         	goto	u3220
  6681   0027C4                     u3221:
  6682   0027C4  EFF0  F013         	goto	l3734
  6683   0027C8                     u3220:
  6684   0027C8                     
  6685                           ;dc_motor.c: 359:                 Green_L90(mL,mR);}
  6686   0027C8  C028  F021         	movff	White@mL,Green_L90@mL
  6687   0027CC  C029  F022         	movff	White@mL+1,Green_L90@mL+1
  6688   0027D0  C02A  F023         	movff	White@mR,Green_L90@mR
  6689   0027D4  C02B  F024         	movff	White@mR+1,Green_L90@mR+1
  6690   0027D8  ECE1  F020         	call	_Green_L90	;wreg free
  6691   0027DC  EFAA  F014         	goto	l3758
  6692   0027E0                     l3734:
  6693   0027E0  90D8               	bcf	status,0,c
  6694   0027E2  3436               	rlcf	White@i^0,w,c
  6695   0027E4  6ED9               	movwf	fsr2l,c
  6696   0027E6  3437               	rlcf	(White@i+1)^0,w,c
  6697   0027E8  6EDA               	movwf	fsr2h,c
  6698   0027EA  502E               	movf	White@movementMemory^0,w,c
  6699   0027EC  26D9               	addwf	fsr2l,f,c
  6700   0027EE  502F               	movf	(White@movementMemory+1)^0,w,c
  6701   0027F0  22DA               	addwfc	fsr2h,f,c
  6702   0027F2  0E02               	movlw	2
  6703   0027F4  18DE               	xorwf	postinc2,w,c
  6704   0027F6  10DE               	iorwf	postinc2,w,c
  6705   0027F8  A4D8               	btfss	status,2,c
  6706   0027FA  EF01  F014         	goto	u3231
  6707   0027FE  EF03  F014         	goto	u3230
  6708   002802                     u3231:
  6709   002802  EF0F  F014         	goto	l3738
  6710   002806                     u3230:
  6711   002806                     
  6712                           ;dc_motor.c: 361:                 Blue_T180(mL,mR);}
  6713   002806  C028  F024         	movff	White@mL,Blue_T180@mL
  6714   00280A  C029  F025         	movff	White@mL+1,Blue_T180@mL+1
  6715   00280E  C02A  F026         	movff	White@mR,Blue_T180@mR
  6716   002812  C02B  F027         	movff	White@mR+1,Blue_T180@mR+1
  6717   002816  ECB7  F021         	call	_Blue_T180	;wreg free
  6718   00281A  EFAA  F014         	goto	l3758
  6719   00281E                     l3738:
  6720   00281E  90D8               	bcf	status,0,c
  6721   002820  3436               	rlcf	White@i^0,w,c
  6722   002822  6ED9               	movwf	fsr2l,c
  6723   002824  3437               	rlcf	(White@i+1)^0,w,c
  6724   002826  6EDA               	movwf	fsr2h,c
  6725   002828  502E               	movf	White@movementMemory^0,w,c
  6726   00282A  26D9               	addwf	fsr2l,f,c
  6727   00282C  502F               	movf	(White@movementMemory+1)^0,w,c
  6728   00282E  22DA               	addwfc	fsr2h,f,c
  6729   002830  0E03               	movlw	3
  6730   002832  18DE               	xorwf	postinc2,w,c
  6731   002834  10DE               	iorwf	postinc2,w,c
  6732   002836  A4D8               	btfss	status,2,c
  6733   002838  EF20  F014         	goto	u3241
  6734   00283C  EF22  F014         	goto	u3240
  6735   002840                     u3241:
  6736   002840  EF2E  F014         	goto	l3742
  6737   002844                     u3240:
  6738   002844                     
  6739                           ;dc_motor.c: 363:                 Yellow_rev1_R90(mL,mR);}
  6740   002844  C028  F021         	movff	White@mL,Yellow_rev1_R90@mL
  6741   002848  C029  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  6742   00284C  C02A  F023         	movff	White@mR,Yellow_rev1_R90@mR
  6743   002850  C02B  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  6744   002854  EC71  F01B         	call	_Yellow_rev1_R90	;wreg free
  6745   002858  EFAA  F014         	goto	l3758
  6746   00285C                     l3742:
  6747   00285C  90D8               	bcf	status,0,c
  6748   00285E  3436               	rlcf	White@i^0,w,c
  6749   002860  6ED9               	movwf	fsr2l,c
  6750   002862  3437               	rlcf	(White@i+1)^0,w,c
  6751   002864  6EDA               	movwf	fsr2h,c
  6752   002866  502E               	movf	White@movementMemory^0,w,c
  6753   002868  26D9               	addwf	fsr2l,f,c
  6754   00286A  502F               	movf	(White@movementMemory+1)^0,w,c
  6755   00286C  22DA               	addwfc	fsr2h,f,c
  6756   00286E  0E04               	movlw	4
  6757   002870  18DE               	xorwf	postinc2,w,c
  6758   002872  10DE               	iorwf	postinc2,w,c
  6759   002874  A4D8               	btfss	status,2,c
  6760   002876  EF3F  F014         	goto	u3251
  6761   00287A  EF41  F014         	goto	u3250
  6762   00287E                     u3251:
  6763   00287E  EF4D  F014         	goto	l3746
  6764   002882                     u3250:
  6765   002882                     
  6766                           ;dc_motor.c: 365:                 Pink_rev1_L90(mL,mR);}
  6767   002882  C028  F021         	movff	White@mL,Pink_rev1_L90@mL
  6768   002886  C029  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  6769   00288A  C02A  F023         	movff	White@mR,Pink_rev1_L90@mR
  6770   00288E  C02B  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  6771   002892  ECE5  F01B         	call	_Pink_rev1_L90	;wreg free
  6772   002896  EFAA  F014         	goto	l3758
  6773   00289A                     l3746:
  6774   00289A  90D8               	bcf	status,0,c
  6775   00289C  3436               	rlcf	White@i^0,w,c
  6776   00289E  6ED9               	movwf	fsr2l,c
  6777   0028A0  3437               	rlcf	(White@i+1)^0,w,c
  6778   0028A2  6EDA               	movwf	fsr2h,c
  6779   0028A4  502E               	movf	White@movementMemory^0,w,c
  6780   0028A6  26D9               	addwf	fsr2l,f,c
  6781   0028A8  502F               	movf	(White@movementMemory+1)^0,w,c
  6782   0028AA  22DA               	addwfc	fsr2h,f,c
  6783   0028AC  0E05               	movlw	5
  6784   0028AE  18DE               	xorwf	postinc2,w,c
  6785   0028B0  10DE               	iorwf	postinc2,w,c
  6786   0028B2  A4D8               	btfss	status,2,c
  6787   0028B4  EF5E  F014         	goto	u3261
  6788   0028B8  EF60  F014         	goto	u3260
  6789   0028BC                     u3261:
  6790   0028BC  EF6C  F014         	goto	l3750
  6791   0028C0                     u3260:
  6792   0028C0                     
  6793                           ;dc_motor.c: 367:                 Orange_R135(mL,mR);}
  6794   0028C0  C028  F021         	movff	White@mL,Orange_R135@mL
  6795   0028C4  C029  F022         	movff	White@mL+1,Orange_R135@mL+1
  6796   0028C8  C02A  F023         	movff	White@mR,Orange_R135@mR
  6797   0028CC  C02B  F024         	movff	White@mR+1,Orange_R135@mR+1
  6798   0028D0  ECD5  F01D         	call	_Orange_R135	;wreg free
  6799   0028D4  EFAA  F014         	goto	l3758
  6800   0028D8                     l3750:
  6801   0028D8  90D8               	bcf	status,0,c
  6802   0028DA  3436               	rlcf	White@i^0,w,c
  6803   0028DC  6ED9               	movwf	fsr2l,c
  6804   0028DE  3437               	rlcf	(White@i+1)^0,w,c
  6805   0028E0  6EDA               	movwf	fsr2h,c
  6806   0028E2  502E               	movf	White@movementMemory^0,w,c
  6807   0028E4  26D9               	addwf	fsr2l,f,c
  6808   0028E6  502F               	movf	(White@movementMemory+1)^0,w,c
  6809   0028E8  22DA               	addwfc	fsr2h,f,c
  6810   0028EA  0E06               	movlw	6
  6811   0028EC  18DE               	xorwf	postinc2,w,c
  6812   0028EE  10DE               	iorwf	postinc2,w,c
  6813   0028F0  A4D8               	btfss	status,2,c
  6814   0028F2  EF7D  F014         	goto	u3271
  6815   0028F6  EF7F  F014         	goto	u3270
  6816   0028FA                     u3271:
  6817   0028FA  EF8B  F014         	goto	l3754
  6818   0028FE                     u3270:
  6819   0028FE                     
  6820                           ;dc_motor.c: 369:                 LightBlue_L135(mL,mR);}
  6821   0028FE  C028  F021         	movff	White@mL,LightBlue_L135@mL
  6822   002902  C029  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  6823   002906  C02A  F023         	movff	White@mR,LightBlue_L135@mR
  6824   00290A  C02B  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  6825   00290E  EC27  F01E         	call	_LightBlue_L135	;wreg free
  6826   002912  EFAA  F014         	goto	l3758
  6827   002916                     l3754:
  6828   002916  90D8               	bcf	status,0,c
  6829   002918  3436               	rlcf	White@i^0,w,c
  6830   00291A  6ED9               	movwf	fsr2l,c
  6831   00291C  3437               	rlcf	(White@i+1)^0,w,c
  6832   00291E  6EDA               	movwf	fsr2h,c
  6833   002920  502E               	movf	White@movementMemory^0,w,c
  6834   002922  26D9               	addwf	fsr2l,f,c
  6835   002924  502F               	movf	(White@movementMemory+1)^0,w,c
  6836   002926  22DA               	addwfc	fsr2h,f,c
  6837   002928  0E07               	movlw	7
  6838   00292A  18DE               	xorwf	postinc2,w,c
  6839   00292C  10DE               	iorwf	postinc2,w,c
  6840   00292E  A4D8               	btfss	status,2,c
  6841   002930  EF9C  F014         	goto	u3281
  6842   002934  EF9E  F014         	goto	u3280
  6843   002938                     u3281:
  6844   002938  EFAA  F014         	goto	l330
  6845   00293C                     u3280:
  6846   00293C                     
  6847                           ;dc_motor.c: 371:                 stop(mL,mR);}
  6848   00293C  C028  F014         	movff	White@mL,stop@mL
  6849   002940  C029  F015         	movff	White@mL+1,stop@mL+1
  6850   002944  C02A  F016         	movff	White@mR,stop@mR
  6851   002948  C02B  F017         	movff	White@mR+1,stop@mR+1
  6852   00294C  EC82  F01D         	call	_stop	;wreg free
  6853   002950  EFAA  F014         	goto	l3758
  6854   002954                     l330:
  6855   002954                     l3758:
  6856                           
  6857                           ;dc_motor.c: 372:             LATDbits.LATD4 = 1;;
  6858   002954  887C               	bsf	124,4,c	;volatile
  6859   002956                     
  6860                           ;dc_motor.c: 374:             unsigned int tempTimer = 0;
  6861   002956  0E00               	movlw	0
  6862   002958  6E35               	movwf	(White@tempTimer+1)^0,c
  6863   00295A  0E00               	movlw	0
  6864   00295C  6E34               	movwf	White@tempTimer^0,c
  6865   00295E                     
  6866                           ;dc_motor.c: 375:             TimerReset();
  6867   00295E  EC85  F024         	call	_TimerReset	;wreg free
  6868   002962                     
  6869                           ;dc_motor.c: 376:             fullSpeedAhead(mL,mR);
  6870   002962  C028  F014         	movff	White@mL,fullSpeedAhead@mL
  6871   002966  C029  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  6872   00296A  C02A  F016         	movff	White@mR,fullSpeedAhead@mR
  6873   00296E  C02B  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  6874   002972  EC23  F020         	call	_fullSpeedAhead	;wreg free
  6875                           
  6876                           ;dc_motor.c: 377:             while(tempTimer<timerMemory[i])
  6877   002976  EFC3  F014         	goto	l3768
  6878   00297A                     l3766:
  6879                           
  6880                           ;dc_motor.c: 378:             {;dc_motor.c: 379:                 tempTimer = getTimerVal
      +                          ue();
  6881   00297A  EC48  F024         	call	_getTimerValue	;wreg free
  6882   00297E  C001  F034         	movff	?_getTimerValue,White@tempTimer
  6883   002982  C002  F035         	movff	?_getTimerValue+1,White@tempTimer+1
  6884   002986                     l3768:
  6885                           
  6886                           ;dc_motor.c: 377:             while(tempTimer<timerMemory[i])
  6887   002986  90D8               	bcf	status,0,c
  6888   002988  3436               	rlcf	White@i^0,w,c
  6889   00298A  6ED9               	movwf	fsr2l,c
  6890   00298C  3437               	rlcf	(White@i+1)^0,w,c
  6891   00298E  6EDA               	movwf	fsr2h,c
  6892   002990  5030               	movf	White@timerMemory^0,w,c
  6893   002992  26D9               	addwf	fsr2l,f,c
  6894   002994  5031               	movf	(White@timerMemory+1)^0,w,c
  6895   002996  22DA               	addwfc	fsr2h,f,c
  6896   002998  50DE               	movf	postinc2,w,c
  6897   00299A  5C34               	subwf	White@tempTimer^0,w,c
  6898   00299C  50DE               	movf	postinc2,w,c
  6899   00299E  5835               	subwfb	(White@tempTimer+1)^0,w,c
  6900   0029A0  A0D8               	btfss	status,0,c
  6901   0029A2  EFD5  F014         	goto	u3291
  6902   0029A6  EFD7  F014         	goto	u3290
  6903   0029AA                     u3291:
  6904   0029AA  EFBD  F014         	goto	l3766
  6905   0029AE                     u3290:
  6906   0029AE                     
  6907                           ;dc_motor.c: 381:             stop(mL,mR);
  6908   0029AE  C028  F014         	movff	White@mL,stop@mL
  6909   0029B2  C029  F015         	movff	White@mL+1,stop@mL+1
  6910   0029B6  C02A  F016         	movff	White@mR,stop@mR
  6911   0029BA  C02B  F017         	movff	White@mR+1,stop@mR+1
  6912   0029BE  EC82  F01D         	call	_stop	;wreg free
  6913   0029C2                     
  6914                           ;dc_motor.c: 382:         }
  6915   0029C2  0636               	decf	White@i^0,f,c
  6916   0029C4  A0D8               	btfss	status,0,c
  6917   0029C6  0637               	decf	(White@i+1)^0,f,c
  6918   0029C8  EF9E  F013         	goto	l3720
  6919   0029CC                     l3776:
  6920                           
  6921                           ;dc_motor.c: 345:     while (!retracingDone){
  6922   0029CC  0100               	movlb	0	; () banked
  6923   0029CE  51DE               	movf	_retracingDone& (0+255),w,b	;volatile
  6924   0029D0  11DF               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  6925   0029D2  B4D8               	btfsc	status,2,c
  6926   0029D4  EFEE  F014         	goto	u3301
  6927   0029D8  EFF0  F014         	goto	u3300
  6928   0029DC                     u3301:
  6929   0029DC  EF67  F013         	goto	l3708
  6930   0029E0                     u3300:
  6931   0029E0                     
  6932                           ; BSR set to: 0
  6933                           ;dc_motor.c: 384:     stop(mL,mR);
  6934   0029E0  C028  F014         	movff	White@mL,stop@mL
  6935   0029E4  C029  F015         	movff	White@mL+1,stop@mL+1
  6936   0029E8  C02A  F016         	movff	White@mR,stop@mR
  6937   0029EC  C02B  F017         	movff	White@mR+1,stop@mR+1
  6938   0029F0  EC82  F01D         	call	_stop	;wreg free
  6939   0029F4                     
  6940                           ;dc_motor.c: 385:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6941   0029F4  0E52               	movlw	82
  6942   0029F6  6E33               	movwf	(??_White+1)^0,c
  6943   0029F8  0E2B               	movlw	43
  6944   0029FA  6E32               	movwf	??_White^0,c
  6945   0029FC  0E00               	movlw	0
  6946   0029FE                     u4287:
  6947   0029FE  2EE8               	decfsz	wreg,f,c
  6948   002A00  D7FE               	bra	u4287
  6949   002A02  2E32               	decfsz	??_White^0,f,c
  6950   002A04  D7FC               	bra	u4287
  6951   002A06  2E33               	decfsz	(??_White+1)^0,f,c
  6952   002A08  D7FA               	bra	u4287
  6953   002A0A  D000               	nop2	
  6954   002A0C                     
  6955                           ;dc_motor.c: 386:     LATDbits.LATD4 = 0;;
  6956   002A0C  987C               	bcf	124,4,c	;volatile
  6957   002A0E  0012               	return		;funcret
  6958   002A10                     __end_of_White:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _getTimerValue *****************
  6962 ;; Defined at:
  6963 ;;		line 28 in file "timer.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;		None
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  timerCount      2    4[COMRAM] unsigned int 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[COMRAM] unsigned int 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        6 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_White
  6988 ;;		_memoryUpdate
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text31
  6993   004890                     __ptext31:
  6994                           	callstack 0
  6995   004890                     _getTimerValue:
  6996                           	callstack 28
  6997   004890                     
  6998                           ;timer.c: 30:     unsigned int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6999   004890  CFD3 F005          	movff	4051,getTimerValue@timerCount	;volatile
  7000   004894  6A06               	clrf	(getTimerValue@timerCount+1)^0,c
  7001   004896                     
  7002                           ;timer.c: 34:     timerCount |= (unsigned int)(TMR0H << 8);
  7003   004896  50D4               	movf	212,w,c	;volatile
  7004   004898  6E04               	movwf	(??_getTimerValue+1)^0,c
  7005   00489A  6A03               	clrf	??_getTimerValue^0,c
  7006   00489C  5003               	movf	??_getTimerValue^0,w,c
  7007   00489E  1205               	iorwf	getTimerValue@timerCount^0,f,c
  7008   0048A0  5004               	movf	(??_getTimerValue+1)^0,w,c
  7009   0048A2  1206               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  7010   0048A4                     
  7011                           ;timer.c: 35:     return timerCount;
  7012   0048A4  C005  F001         	movff	getTimerValue@timerCount,?_getTimerValue
  7013   0048A8  C006  F002         	movff	getTimerValue@timerCount+1,?_getTimerValue+1
  7014   0048AC  0012               	return		;funcret
  7015   0048AE                     __end_of_getTimerValue:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _Yellow_rev1_R90 *****************
  7019 ;; Defined at:
  7020 ;;		line 266 in file "dc_motor.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7023 ;;		 -> motorL(9), 
  7024 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7025 ;;		 -> motorR(9), 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:        6 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 5
  7044 ;; This function calls:
  7045 ;;		_Left45
  7046 ;;		_Right45
  7047 ;;		_fullSpeedAhead
  7048 ;;		_fullSpeedReverse
  7049 ;;		_reverseHalfSquare
  7050 ;;		_stop
  7051 ;; This function is called by:
  7052 ;;		_White
  7053 ;;		_Colour2Action
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text32
  7058   0036E2                     __ptext32:
  7059                           	callstack 0
  7060   0036E2                     _Yellow_rev1_R90:
  7061                           	callstack 24
  7062   0036E2                     
  7063                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7064   0036E2  0100               	movlb	0	; () banked
  7065   0036E4  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7066   0036E6  B4D8               	btfsc	status,2,c
  7067   0036E8  EF78  F01B         	goto	u2541
  7068   0036EC  EF7A  F01B         	goto	u2540
  7069   0036F0                     u2541:
  7070   0036F0  EFB0  F01B         	goto	l3344
  7071   0036F4                     u2540:
  7072   0036F4                     
  7073                           ; BSR set to: 0
  7074                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7075   0036F4  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7076   0036F8  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7077   0036FC  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7078   003700  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7079   003704  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7080                           
  7081                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7082   003708  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7083   00370C  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7084   003710  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7085   003714  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7086   003718  EC63  F020         	call	_fullSpeedReverse	;wreg free
  7087   00371C                     
  7088                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7089   00371C  0E39               	movlw	57
  7090   00371E  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7091   003720  0ED2               	movlw	210
  7092   003722  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7093   003724  0E4C               	movlw	76
  7094   003726                     u4297:
  7095   003726  2EE8               	decfsz	wreg,f,c
  7096   003728  D7FE               	bra	u4297
  7097   00372A  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7098   00372C  D7FC               	bra	u4297
  7099   00372E  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7100   003730  D7FA               	bra	u4297
  7101   003732  D000               	nop2	
  7102   003734                     
  7103                           ;dc_motor.c: 274:         Right45(mL,mR);
  7104   003734  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7105   003738  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7106   00373C  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7107   003740  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7108   003744  EC9C  F01F         	call	_Right45	;wreg free
  7109   003748                     
  7110                           ;dc_motor.c: 275:         Right45(mL,mR);
  7111   003748  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7112   00374C  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7113   003750  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7114   003754  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7115   003758  EC9C  F01F         	call	_Right45	;wreg free
  7116                           
  7117                           ;dc_motor.c: 276:     }
  7118   00375C  EFE4  F01B         	goto	l299
  7119   003760                     l3344:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;dc_motor.c: 279:         Left45(mL,mR);
  7123   003760  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7124   003764  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7125   003768  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7126   00376C  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7127   003770  EC57  F01F         	call	_Left45	;wreg free
  7128                           
  7129                           ;dc_motor.c: 280:         Left45(mL,mR);
  7130   003774  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7131   003778  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7132   00377C  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7133   003780  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7134   003784  EC57  F01F         	call	_Left45	;wreg free
  7135                           
  7136                           ;dc_motor.c: 281:         fullSpeedAhead(mL,mR);
  7137   003788  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  7138   00378C  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  7139   003790  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  7140   003794  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  7141   003798  EC23  F020         	call	_fullSpeedAhead	;wreg free
  7142   00379C                     
  7143                           ;dc_motor.c: 282:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7144   00379C  0E39               	movlw	57
  7145   00379E  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7146   0037A0  0ED2               	movlw	210
  7147   0037A2  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7148   0037A4  0E4C               	movlw	76
  7149   0037A6                     u4307:
  7150   0037A6  2EE8               	decfsz	wreg,f,c
  7151   0037A8  D7FE               	bra	u4307
  7152   0037AA  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7153   0037AC  D7FC               	bra	u4307
  7154   0037AE  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7155   0037B0  D7FA               	bra	u4307
  7156   0037B2  D000               	nop2	
  7157   0037B4                     
  7158                           ;dc_motor.c: 283:         stop(mL,mR);
  7159   0037B4  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  7160   0037B8  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  7161   0037BC  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  7162   0037C0  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  7163   0037C4  EC82  F01D         	call	_stop	;wreg free
  7164   0037C8                     l299:
  7165   0037C8  0012               	return		;funcret
  7166   0037CA                     __end_of_Yellow_rev1_R90:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _TimerReset *****************
  7170 ;; Defined at:
  7171 ;;		line 23 in file "timer.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 1
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_main
  7196 ;;		_White
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text33
  7201   00490A                     __ptext33:
  7202                           	callstack 0
  7203   00490A                     _TimerReset:
  7204                           	callstack 29
  7205   00490A                     
  7206                           ;timer.c: 25:     TMR0L = 0;
  7207   00490A  0E00               	movlw	0
  7208   00490C  6ED3               	movwf	211,c	;volatile
  7209                           
  7210                           ;timer.c: 26:     TMR0H = 0;
  7211   00490E  0E00               	movlw	0
  7212   004910  6ED4               	movwf	212,c	;volatile
  7213   004912  0012               	return		;funcret
  7214   004914                     __end_of_TimerReset:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _Red_R90 *****************
  7218 ;; Defined at:
  7219 ;;		line 226 in file "dc_motor.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7222 ;;		 -> motorL(9), 
  7223 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7224 ;;		 -> motorR(9), 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;Total ram usage:        4 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 5
  7243 ;; This function calls:
  7244 ;;		_Left45
  7245 ;;		_Right45
  7246 ;;		_reverseHalfSquare
  7247 ;; This function is called by:
  7248 ;;		_White
  7249 ;;		_Colour2Action
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text34
  7254   004146                     __ptext34:
  7255                           	callstack 0
  7256   004146                     _Red_R90:
  7257                           	callstack 23
  7258   004146                     
  7259                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7260   004146  0100               	movlb	0	; () banked
  7261   004148  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7262   00414A  B4D8               	btfsc	status,2,c
  7263   00414C  EFAA  F020         	goto	u2511
  7264   004150  EFAC  F020         	goto	u2510
  7265   004154                     u2511:
  7266   004154  EFCC  F020         	goto	l3320
  7267   004158                     u2510:
  7268   004158                     
  7269                           ; BSR set to: 0
  7270                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7271   004158  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7272   00415C  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7273   004160  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7274   004164  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7275   004168  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7276                           
  7277                           ;dc_motor.c: 230:         Right45(mL,mR);
  7278   00416C  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7279   004170  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7280   004174  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7281   004178  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7282   00417C  EC9C  F01F         	call	_Right45	;wreg free
  7283                           
  7284                           ;dc_motor.c: 231:         Right45(mL,mR);
  7285   004180  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7286   004184  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7287   004188  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7288   00418C  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7289   004190  EC9C  F01F         	call	_Right45	;wreg free
  7290                           
  7291                           ;dc_motor.c: 232:     }
  7292   004194  EFE0  F020         	goto	l284
  7293   004198                     l3320:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;dc_motor.c: 235:         Left45(mL,mR);
  7297   004198  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7298   00419C  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7299   0041A0  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7300   0041A4  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7301   0041A8  EC57  F01F         	call	_Left45	;wreg free
  7302                           
  7303                           ;dc_motor.c: 236:         Left45(mL,mR);
  7304   0041AC  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7305   0041B0  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7306   0041B4  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7307   0041B8  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7308   0041BC  EC57  F01F         	call	_Left45	;wreg free
  7309   0041C0                     l284:
  7310   0041C0  0012               	return		;funcret
  7311   0041C2                     __end_of_Red_R90:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _Pink_rev1_L90 *****************
  7315 ;; Defined at:
  7316 ;;		line 286 in file "dc_motor.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7319 ;;		 -> motorL(9), 
  7320 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7321 ;;		 -> motorR(9), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        6 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 5
  7340 ;; This function calls:
  7341 ;;		_Left45
  7342 ;;		_Right45
  7343 ;;		_fullSpeedAhead
  7344 ;;		_fullSpeedReverse
  7345 ;;		_reverseHalfSquare
  7346 ;;		_stop
  7347 ;; This function is called by:
  7348 ;;		_White
  7349 ;;		_Colour2Action
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text35
  7354   0037CA                     __ptext35:
  7355                           	callstack 0
  7356   0037CA                     _Pink_rev1_L90:
  7357                           	callstack 23
  7358   0037CA                     
  7359                           ;dc_motor.c: 286: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 287: {;dc_motor.c: 288:     if (ForwardFlag){
  7360   0037CA  0100               	movlb	0	; () banked
  7361   0037CC  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7362   0037CE  B4D8               	btfsc	status,2,c
  7363   0037D0  EFEC  F01B         	goto	u2551
  7364   0037D4  EFEE  F01B         	goto	u2550
  7365   0037D8                     u2551:
  7366   0037D8  EF24  F01C         	goto	l3360
  7367   0037DC                     u2550:
  7368   0037DC                     
  7369                           ; BSR set to: 0
  7370                           ;dc_motor.c: 289:         reverseHalfSquare(mL,mR);
  7371   0037DC  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7372   0037E0  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7373   0037E4  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7374   0037E8  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7375   0037EC  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7376                           
  7377                           ;dc_motor.c: 291:         fullSpeedReverse(mL,mR);
  7378   0037F0  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7379   0037F4  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7380   0037F8  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7381   0037FC  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7382   003800  EC63  F020         	call	_fullSpeedReverse	;wreg free
  7383   003804                     
  7384                           ;dc_motor.c: 292:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7385   003804  0E39               	movlw	57
  7386   003806  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7387   003808  0ED2               	movlw	210
  7388   00380A  6E25               	movwf	??_Pink_rev1_L90^0,c
  7389   00380C  0E4C               	movlw	76
  7390   00380E                     u4317:
  7391   00380E  2EE8               	decfsz	wreg,f,c
  7392   003810  D7FE               	bra	u4317
  7393   003812  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7394   003814  D7FC               	bra	u4317
  7395   003816  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7396   003818  D7FA               	bra	u4317
  7397   00381A  D000               	nop2	
  7398   00381C                     
  7399                           ;dc_motor.c: 293:         Left45(mL,mR);
  7400   00381C  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7401   003820  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7402   003824  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7403   003828  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7404   00382C  EC57  F01F         	call	_Left45	;wreg free
  7405   003830                     
  7406                           ;dc_motor.c: 294:         Left45(mL,mR);
  7407   003830  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7408   003834  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7409   003838  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7410   00383C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7411   003840  EC57  F01F         	call	_Left45	;wreg free
  7412                           
  7413                           ;dc_motor.c: 295:     }
  7414   003844  EF58  F01C         	goto	l304
  7415   003848                     l3360:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;dc_motor.c: 298:         Right45(mL,mR);
  7419   003848  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7420   00384C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7421   003850  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7422   003854  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7423   003858  EC9C  F01F         	call	_Right45	;wreg free
  7424                           
  7425                           ;dc_motor.c: 299:         Right45(mL,mR);
  7426   00385C  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7427   003860  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7428   003864  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7429   003868  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7430   00386C  EC9C  F01F         	call	_Right45	;wreg free
  7431                           
  7432                           ;dc_motor.c: 300:         fullSpeedAhead(mL,mR);
  7433   003870  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  7434   003874  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  7435   003878  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  7436   00387C  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  7437   003880  EC23  F020         	call	_fullSpeedAhead	;wreg free
  7438   003884                     
  7439                           ;dc_motor.c: 301:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7440   003884  0E39               	movlw	57
  7441   003886  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7442   003888  0ED2               	movlw	210
  7443   00388A  6E25               	movwf	??_Pink_rev1_L90^0,c
  7444   00388C  0E4C               	movlw	76
  7445   00388E                     u4327:
  7446   00388E  2EE8               	decfsz	wreg,f,c
  7447   003890  D7FE               	bra	u4327
  7448   003892  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7449   003894  D7FC               	bra	u4327
  7450   003896  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7451   003898  D7FA               	bra	u4327
  7452   00389A  D000               	nop2	
  7453   00389C                     
  7454                           ;dc_motor.c: 302:         stop(mL,mR);
  7455   00389C  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  7456   0038A0  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  7457   0038A4  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  7458   0038A8  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  7459   0038AC  EC82  F01D         	call	_stop	;wreg free
  7460   0038B0                     l304:
  7461   0038B0  0012               	return		;funcret
  7462   0038B2                     __end_of_Pink_rev1_L90:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function _fullSpeedAhead *****************
  7466 ;; Defined at:
  7467 ;;		line 149 in file "dc_motor.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7470 ;;		 -> motorL(9), 
  7471 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7472 ;;		 -> motorR(9), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  i               2   24[COMRAM] unsigned int 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;Total ram usage:        7 bytes
  7489 ;; Hardware stack levels used: 1
  7490 ;; Hardware stack levels required when called: 3
  7491 ;; This function calls:
  7492 ;;		_setMotorPWM
  7493 ;; This function is called by:
  7494 ;;		_main
  7495 ;;		_Yellow_rev1_R90
  7496 ;;		_Pink_rev1_L90
  7497 ;;		_White
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text36
  7502   004046                     __ptext36:
  7503                           	callstack 0
  7504   004046                     _fullSpeedAhead:
  7505                           	callstack 27
  7506   004046                     
  7507                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  7508   004046  EE20 F001          	lfsr	2,1
  7509   00404A  5014               	movf	fullSpeedAhead@mL^0,w,c
  7510   00404C  26D9               	addwf	fsr2l,f,c
  7511   00404E  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7512   004050  22DA               	addwfc	fsr2h,f,c
  7513   004052  0E01               	movlw	1
  7514   004054  6EDF               	movwf	indf2,c
  7515                           
  7516                           ;dc_motor.c: 152:  (mR->direction) = 1;
  7517   004056  EE20 F001          	lfsr	2,1
  7518   00405A  5016               	movf	fullSpeedAhead@mR^0,w,c
  7519   00405C  26D9               	addwf	fsr2l,f,c
  7520   00405E  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7521   004060  22DA               	addwfc	fsr2h,f,c
  7522   004062  0E01               	movlw	1
  7523   004064  6EDF               	movwf	indf2,c
  7524   004066                     
  7525                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  7526   004066  0E00               	movlw	0
  7527   004068  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7528   00406A  0E00               	movlw	0
  7529   00406C  6E19               	movwf	fullSpeedAhead@i^0,c
  7530   00406E                     l3212:
  7531                           
  7532                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  7533   00406E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7534   004072  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7535   004076  2ADF               	incf	indf2,f,c
  7536                           
  7537                           ;dc_motor.c: 157:         (mR->power)++;
  7538   004078  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7539   00407C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7540   004080  2ADF               	incf	indf2,f,c
  7541   004082                     
  7542                           ;dc_motor.c: 158:         setMotorPWM(mL);
  7543   004082  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7544   004086  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7545   00408A  ECE8  F017         	call	_setMotorPWM	;wreg free
  7546   00408E                     
  7547                           ;dc_motor.c: 159:         setMotorPWM(mR);
  7548   00408E  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7549   004092  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7550   004096  ECE8  F017         	call	_setMotorPWM	;wreg free
  7551   00409A                     
  7552                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7553   00409A  0E09               	movlw	9
  7554   00409C  6E18               	movwf	??_fullSpeedAhead^0,c
  7555   00409E  0E4E               	movlw	78
  7556   0040A0                     u4337:
  7557   0040A0  2EE8               	decfsz	wreg,f,c
  7558   0040A2  D7FE               	bra	u4337
  7559   0040A4  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7560   0040A6  D7FC               	bra	u4337
  7561   0040A8  D000               	nop2	
  7562   0040AA                     
  7563                           ;dc_motor.c: 161:     }
  7564   0040AA  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7565   0040AC  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7566   0040AE  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7567   0040B0  E109               	bnz	u2440
  7568   0040B2  0E32               	movlw	50
  7569   0040B4  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7570   0040B6  A0D8               	btfss	status,0,c
  7571   0040B8  EF60  F020         	goto	u2441
  7572   0040BC  EF62  F020         	goto	u2440
  7573   0040C0                     u2441:
  7574   0040C0  EF37  F020         	goto	l3212
  7575   0040C4                     u2440:
  7576   0040C4  0012               	return		;funcret
  7577   0040C6                     __end_of_fullSpeedAhead:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function _Orange_R135 *****************
  7581 ;; Defined at:
  7582 ;;		line 305 in file "dc_motor.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7585 ;;		 -> motorL(9), 
  7586 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7587 ;;		 -> motorR(9), 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;Total ram usage:        4 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; Hardware stack levels required when called: 5
  7606 ;; This function calls:
  7607 ;;		_Left45
  7608 ;;		_Right45
  7609 ;;		_reverseHalfSquare
  7610 ;; This function is called by:
  7611 ;;		_White
  7612 ;;		_Colour2Action
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text37
  7617   003BAA                     __ptext37:
  7618                           	callstack 0
  7619   003BAA                     _Orange_R135:
  7620                           	callstack 23
  7621   003BAA                     
  7622                           ;dc_motor.c: 305: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           306: {;dc_motor.c: 307:     if (ForwardFlag){
  7623   003BAA  0100               	movlb	0	; () banked
  7624   003BAC  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7625   003BAE  B4D8               	btfsc	status,2,c
  7626   003BB0  EFDC  F01D         	goto	u2561
  7627   003BB4  EFDE  F01D         	goto	u2560
  7628   003BB8                     u2561:
  7629   003BB8  EF08  F01E         	goto	l3370
  7630   003BBC                     u2560:
  7631   003BBC                     
  7632                           ; BSR set to: 0
  7633                           ;dc_motor.c: 308:         reverseHalfSquare(mL,mR);
  7634   003BBC  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7635   003BC0  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7636   003BC4  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7637   003BC8  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7638   003BCC  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7639                           
  7640                           ;dc_motor.c: 310:         Right45(mL,mR);
  7641   003BD0  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7642   003BD4  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7643   003BD8  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7644   003BDC  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7645   003BE0  EC9C  F01F         	call	_Right45	;wreg free
  7646                           
  7647                           ;dc_motor.c: 311:         Right45(mL,mR);
  7648   003BE4  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7649   003BE8  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7650   003BEC  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7651   003BF0  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7652   003BF4  EC9C  F01F         	call	_Right45	;wreg free
  7653                           
  7654                           ;dc_motor.c: 312:         Right45(mL,mR);
  7655   003BF8  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7656   003BFC  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7657   003C00  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7658   003C04  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7659   003C08  EC9C  F01F         	call	_Right45	;wreg free
  7660                           
  7661                           ;dc_motor.c: 315:     }
  7662   003C0C  EF26  F01E         	goto	l309
  7663   003C10                     l3370:
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;dc_motor.c: 318:         Left45(mL,mR);
  7667   003C10  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7668   003C14  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7669   003C18  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7670   003C1C  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7671   003C20  EC57  F01F         	call	_Left45	;wreg free
  7672                           
  7673                           ;dc_motor.c: 319:         Left45(mL,mR);
  7674   003C24  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7675   003C28  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7676   003C2C  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7677   003C30  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7678   003C34  EC57  F01F         	call	_Left45	;wreg free
  7679                           
  7680                           ;dc_motor.c: 320:         Left45(mL,mR);
  7681   003C38  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7682   003C3C  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7683   003C40  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7684   003C44  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7685   003C48  EC57  F01F         	call	_Left45	;wreg free
  7686   003C4C                     l309:
  7687   003C4C  0012               	return		;funcret
  7688   003C4E                     __end_of_Orange_R135:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _LightBlue_L135 *****************
  7692 ;; Defined at:
  7693 ;;		line 323 in file "dc_motor.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7696 ;;		 -> motorL(9), 
  7697 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7698 ;;		 -> motorR(9), 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;Total ram usage:        4 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 5
  7717 ;; This function calls:
  7718 ;;		_Left45
  7719 ;;		_Right45
  7720 ;;		_reverseHalfSquare
  7721 ;; This function is called by:
  7722 ;;		_White
  7723 ;;		_Colour2Action
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text38
  7728   003C4E                     __ptext38:
  7729                           	callstack 0
  7730   003C4E                     _LightBlue_L135:
  7731                           	callstack 23
  7732   003C4E                     
  7733                           ;dc_motor.c: 323: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 324: {;dc_motor.c: 326:      if (ForwardFlag){
  7734   003C4E  0100               	movlb	0	; () banked
  7735   003C50  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7736   003C52  B4D8               	btfsc	status,2,c
  7737   003C54  EF2E  F01E         	goto	u2571
  7738   003C58  EF30  F01E         	goto	u2570
  7739   003C5C                     u2571:
  7740   003C5C  EF5A  F01E         	goto	l3376
  7741   003C60                     u2570:
  7742   003C60                     
  7743                           ; BSR set to: 0
  7744                           ;dc_motor.c: 327:         reverseHalfSquare(mL,mR);
  7745   003C60  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7746   003C64  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7747   003C68  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7748   003C6C  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7749   003C70  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7750                           
  7751                           ;dc_motor.c: 329:         Left45(mL,mR);
  7752   003C74  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7753   003C78  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7754   003C7C  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7755   003C80  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7756   003C84  EC57  F01F         	call	_Left45	;wreg free
  7757                           
  7758                           ;dc_motor.c: 330:         Left45(mL,mR);
  7759   003C88  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7760   003C8C  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7761   003C90  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7762   003C94  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7763   003C98  EC57  F01F         	call	_Left45	;wreg free
  7764                           
  7765                           ;dc_motor.c: 331:         Left45(mL,mR);
  7766   003C9C  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7767   003CA0  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7768   003CA4  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7769   003CA8  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7770   003CAC  EC57  F01F         	call	_Left45	;wreg free
  7771                           
  7772                           ;dc_motor.c: 333:     }
  7773   003CB0  EF78  F01E         	goto	l314
  7774   003CB4                     l3376:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;dc_motor.c: 336:         Right45(mL,mR);
  7778   003CB4  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7779   003CB8  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7780   003CBC  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7781   003CC0  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7782   003CC4  EC9C  F01F         	call	_Right45	;wreg free
  7783                           
  7784                           ;dc_motor.c: 337:         Right45(mL,mR);
  7785   003CC8  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7786   003CCC  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7787   003CD0  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7788   003CD4  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7789   003CD8  EC9C  F01F         	call	_Right45	;wreg free
  7790                           
  7791                           ;dc_motor.c: 338:         Right45(mL,mR);
  7792   003CDC  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7793   003CE0  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7794   003CE4  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7795   003CE8  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7796   003CEC  EC9C  F01F         	call	_Right45	;wreg free
  7797   003CF0                     l314:
  7798   003CF0  0012               	return		;funcret
  7799   003CF2                     __end_of_LightBlue_L135:
  7800                           	callstack 0
  7801                           
  7802 ;; *************** function _Green_L90 *****************
  7803 ;; Defined at:
  7804 ;;		line 240 in file "dc_motor.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7807 ;;		 -> motorL(9), 
  7808 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7809 ;;		 -> motorR(9), 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;Total ram usage:        4 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; Hardware stack levels required when called: 5
  7828 ;; This function calls:
  7829 ;;		_Left45
  7830 ;;		_Right45
  7831 ;;		_reverseHalfSquare
  7832 ;; This function is called by:
  7833 ;;		_White
  7834 ;;		_Colour2Action
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text39
  7839   0041C2                     __ptext39:
  7840                           	callstack 0
  7841   0041C2                     _Green_L90:
  7842                           	callstack 23
  7843   0041C2                     
  7844                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  7845   0041C2  0100               	movlb	0	; () banked
  7846   0041C4  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7847   0041C6  B4D8               	btfsc	status,2,c
  7848   0041C8  EFE8  F020         	goto	u2521
  7849   0041CC  EFEA  F020         	goto	u2520
  7850   0041D0                     u2521:
  7851   0041D0  EF0A  F021         	goto	l3326
  7852   0041D4                     u2520:
  7853   0041D4                     
  7854                           ; BSR set to: 0
  7855                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  7856   0041D4  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  7857   0041D8  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  7858   0041DC  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  7859   0041E0  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  7860   0041E4  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  7861                           
  7862                           ;dc_motor.c: 245:         Left45(mL,mR);
  7863   0041E8  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7864   0041EC  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7865   0041F0  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7866   0041F4  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7867   0041F8  EC57  F01F         	call	_Left45	;wreg free
  7868                           
  7869                           ;dc_motor.c: 246:         Left45(mL,mR);
  7870   0041FC  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7871   004200  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7872   004204  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7873   004208  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7874   00420C  EC57  F01F         	call	_Left45	;wreg free
  7875                           
  7876                           ;dc_motor.c: 247:     }
  7877   004210  EF1E  F021         	goto	l289
  7878   004214                     l3326:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;dc_motor.c: 250:         Right45(mL,mR);
  7882   004214  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7883   004218  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7884   00421C  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7885   004220  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7886   004224  EC9C  F01F         	call	_Right45	;wreg free
  7887                           
  7888                           ;dc_motor.c: 251:         Right45(mL,mR);
  7889   004228  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7890   00422C  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7891   004230  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7892   004234  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7893   004238  EC9C  F01F         	call	_Right45	;wreg free
  7894   00423C                     l289:
  7895   00423C  0012               	return		;funcret
  7896   00423E                     __end_of_Green_L90:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function _Right45 *****************
  7900 ;; Defined at:
  7901 ;;		line 193 in file "dc_motor.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7904 ;;		 -> motorL(9), 
  7905 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7906 ;;		 -> motorR(9), 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;Total ram usage:        6 bytes
  7923 ;; Hardware stack levels used: 1
  7924 ;; Hardware stack levels required when called: 4
  7925 ;; This function calls:
  7926 ;;		_stop
  7927 ;;		_turnRight
  7928 ;; This function is called by:
  7929 ;;		_Red_R90
  7930 ;;		_Green_L90
  7931 ;;		_Yellow_rev1_R90
  7932 ;;		_Pink_rev1_L90
  7933 ;;		_Orange_R135
  7934 ;;		_LightBlue_L135
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text40
  7939   003F38                     __ptext40:
  7940                           	callstack 0
  7941   003F38                     _Right45:
  7942                           	callstack 24
  7943   003F38                     
  7944                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7945   003F38  8080               	bsf	128,0,c	;volatile
  7946   003F3A                     
  7947                           ;dc_motor.c: 197:     stop(mL,mR);
  7948   003F3A  C01A  F014         	movff	Right45@mL,stop@mL
  7949   003F3E  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7950   003F42  C01C  F016         	movff	Right45@mR,stop@mR
  7951   003F46  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7952   003F4A  EC82  F01D         	call	_stop	;wreg free
  7953   003F4E                     
  7954                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7955   003F4E  0E05               	movlw	5
  7956   003F50  6E1F               	movwf	(??_Right45+1)^0,c
  7957   003F52  0E0F               	movlw	15
  7958   003F54  6E1E               	movwf	??_Right45^0,c
  7959   003F56  0EF1               	movlw	241
  7960   003F58                     u4347:
  7961   003F58  2EE8               	decfsz	wreg,f,c
  7962   003F5A  D7FE               	bra	u4347
  7963   003F5C  2E1E               	decfsz	??_Right45^0,f,c
  7964   003F5E  D7FC               	bra	u4347
  7965   003F60  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7966   003F62  D7FA               	bra	u4347
  7967   003F64  F000               	nop	
  7968   003F66                     
  7969                           ;dc_motor.c: 199:     turnRight(mL,mR);
  7970   003F66  C01A  F014         	movff	Right45@mL,turnRight@mL
  7971   003F6A  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  7972   003F6E  C01C  F016         	movff	Right45@mR,turnRight@mR
  7973   003F72  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  7974   003F76  EC79  F01E         	call	_turnRight	;wreg free
  7975                           
  7976                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  7977   003F7A  0E0D               	movlw	13
  7978   003F7C  6E1F               	movwf	(??_Right45+1)^0,c
  7979   003F7E  0E19               	movlw	25
  7980   003F80  6E1E               	movwf	??_Right45^0,c
  7981   003F82  0E10               	movlw	16
  7982   003F84                     u4357:
  7983   003F84  2EE8               	decfsz	wreg,f,c
  7984   003F86  D7FE               	bra	u4357
  7985   003F88  2E1E               	decfsz	??_Right45^0,f,c
  7986   003F8A  D7FC               	bra	u4357
  7987   003F8C  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7988   003F8E  D7FA               	bra	u4357
  7989   003F90                     
  7990                           ;dc_motor.c: 201:     stop(mL,mR);
  7991   003F90  C01A  F014         	movff	Right45@mL,stop@mL
  7992   003F94  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7993   003F98  C01C  F016         	movff	Right45@mR,stop@mR
  7994   003F9C  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7995   003FA0  EC82  F01D         	call	_stop	;wreg free
  7996   003FA4                     
  7997                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7998   003FA4  0E05               	movlw	5
  7999   003FA6  6E1F               	movwf	(??_Right45+1)^0,c
  8000   003FA8  0E0F               	movlw	15
  8001   003FAA  6E1E               	movwf	??_Right45^0,c
  8002   003FAC  0EF1               	movlw	241
  8003   003FAE                     u4367:
  8004   003FAE  2EE8               	decfsz	wreg,f,c
  8005   003FB0  D7FE               	bra	u4367
  8006   003FB2  2E1E               	decfsz	??_Right45^0,f,c
  8007   003FB4  D7FC               	bra	u4367
  8008   003FB6  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8009   003FB8  D7FA               	bra	u4367
  8010   003FBA  F000               	nop	
  8011   003FBC                     
  8012                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8013   003FBC  9080               	bcf	128,0,c	;volatile
  8014   003FBE  0012               	return		;funcret
  8015   003FC0                     __end_of_Right45:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function _turnRight *****************
  8019 ;; Defined at:
  8020 ;;		line 132 in file "dc_motor.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8023 ;;		 -> motorL(9), 
  8024 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8025 ;;		 -> motorR(9), 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;  i               2   23[COMRAM] unsigned int 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8041 ;;Total ram usage:        6 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 3
  8044 ;; This function calls:
  8045 ;;		_setMotorPWM
  8046 ;; This function is called by:
  8047 ;;		_Right45
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text41
  8052   003CF2                     __ptext41:
  8053                           	callstack 0
  8054   003CF2                     _turnRight:
  8055                           	callstack 24
  8056   003CF2                     
  8057                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8058   003CF2  EE20 F001          	lfsr	2,1
  8059   003CF6  5014               	movf	turnRight@mL^0,w,c
  8060   003CF8  26D9               	addwf	fsr2l,f,c
  8061   003CFA  5015               	movf	(turnRight@mL+1)^0,w,c
  8062   003CFC  22DA               	addwfc	fsr2h,f,c
  8063   003CFE  0E01               	movlw	1
  8064   003D00  6EDF               	movwf	indf2,c
  8065                           
  8066                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8067   003D02  EE20 F001          	lfsr	2,1
  8068   003D06  5016               	movf	turnRight@mR^0,w,c
  8069   003D08  26D9               	addwf	fsr2l,f,c
  8070   003D0A  5017               	movf	(turnRight@mR+1)^0,w,c
  8071   003D0C  22DA               	addwfc	fsr2h,f,c
  8072   003D0E  0E00               	movlw	0
  8073   003D10  6EDF               	movwf	indf2,c
  8074   003D12                     
  8075                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8076   003D12  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8077   003D16  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8078   003D1A  ECE8  F017         	call	_setMotorPWM	;wreg free
  8079   003D1E                     
  8080                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8081   003D1E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8082   003D22  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8083   003D26  ECE8  F017         	call	_setMotorPWM	;wreg free
  8084   003D2A                     
  8085                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8086   003D2A  0E00               	movlw	0
  8087   003D2C  6E19               	movwf	(turnRight@i+1)^0,c
  8088   003D2E  0E00               	movlw	0
  8089   003D30  6E18               	movwf	turnRight@i^0,c
  8090   003D32                     l3102:
  8091                           
  8092                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8093   003D32  C014  FFD9         	movff	turnRight@mL,fsr2l
  8094   003D36  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8095   003D3A  2ADF               	incf	indf2,f,c
  8096                           
  8097                           ;dc_motor.c: 141:         mR->power++;
  8098   003D3C  C016  FFD9         	movff	turnRight@mR,fsr2l
  8099   003D40  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8100   003D44  2ADF               	incf	indf2,f,c
  8101   003D46                     
  8102                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8103   003D46  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8104   003D4A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8105   003D4E  ECE8  F017         	call	_setMotorPWM	;wreg free
  8106   003D52                     
  8107                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8108   003D52  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8109   003D56  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8110   003D5A  ECE8  F017         	call	_setMotorPWM	;wreg free
  8111   003D5E                     
  8112                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8113   003D5E  0EE4               	movlw	228
  8114   003D60                     u4377:
  8115   003D60  D000               	nop2	
  8116   003D62  D000               	nop2	
  8117   003D64  2EE8               	decfsz	wreg,f,c
  8118   003D66  D7FC               	bra	u4377
  8119   003D68  D000               	nop2	
  8120   003D6A  D000               	nop2	
  8121   003D6C                     
  8122                           ;dc_motor.c: 145:     }
  8123   003D6C  4A18               	infsnz	turnRight@i^0,f,c
  8124   003D6E  2A19               	incf	(turnRight@i+1)^0,f,c
  8125   003D70  5019               	movf	(turnRight@i+1)^0,w,c
  8126   003D72  E109               	bnz	u2280
  8127   003D74  0E32               	movlw	50
  8128   003D76  5C18               	subwf	turnRight@i^0,w,c
  8129   003D78  A0D8               	btfss	status,0,c
  8130   003D7A  EFC1  F01E         	goto	u2281
  8131   003D7E  EFC3  F01E         	goto	u2280
  8132   003D82                     u2281:
  8133   003D82  EF99  F01E         	goto	l3102
  8134   003D86                     u2280:
  8135   003D86  0012               	return		;funcret
  8136   003D88                     __end_of_turnRight:
  8137                           	callstack 0
  8138                           
  8139 ;; *************** function _Blue_T180 *****************
  8140 ;; Defined at:
  8141 ;;		line 255 in file "dc_motor.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8144 ;;		 -> motorL(9), 
  8145 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8146 ;;		 -> motorR(9), 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8162 ;;Total ram usage:        4 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 6
  8165 ;; This function calls:
  8166 ;;		_reverseHalfSquare
  8167 ;;		_rotate180left
  8168 ;; This function is called by:
  8169 ;;		_White
  8170 ;;		_Colour2Action
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text42
  8175   00436E                     __ptext42:
  8176                           	callstack 0
  8177   00436E                     _Blue_T180:
  8178                           	callstack 22
  8179   00436E                     
  8180                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8181   00436E  0100               	movlb	0	; () banked
  8182   004370  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8183   004372  B4D8               	btfsc	status,2,c
  8184   004374  EFBE  F021         	goto	u2531
  8185   004378  EFC0  F021         	goto	u2530
  8186   00437C                     u2531:
  8187   00437C  EFD6  F021         	goto	l3332
  8188   004380                     u2530:
  8189   004380                     
  8190                           ; BSR set to: 0
  8191                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8192   004380  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8193   004384  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8194   004388  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8195   00438C  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8196   004390  ECE0  F01F         	call	_reverseHalfSquare	;wreg free
  8197                           
  8198                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8199   004394  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8200   004398  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8201   00439C  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8202   0043A0  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8203   0043A4  ECE1  F021         	call	_rotate180left	;wreg free
  8204                           
  8205                           ;dc_motor.c: 261:     }else{
  8206   0043A8  EFE0  F021         	goto	l294
  8207   0043AC                     l3332:
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8211   0043AC  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8212   0043B0  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8213   0043B4  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8214   0043B8  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8215   0043BC  ECE1  F021         	call	_rotate180left	;wreg free
  8216   0043C0                     l294:
  8217   0043C0  0012               	return		;funcret
  8218   0043C2                     __end_of_Blue_T180:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function _rotate180left *****************
  8222 ;; Defined at:
  8223 ;;		line 207 in file "dc_motor.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8226 ;;		 -> motorL(9), 
  8227 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8228 ;;		 -> motorR(9), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;Total ram usage:        4 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 5
  8247 ;; This function calls:
  8248 ;;		_Left45
  8249 ;; This function is called by:
  8250 ;;		_Blue_T180
  8251 ;;		_White
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text43
  8256   0043C2                     __ptext43:
  8257                           	callstack 0
  8258   0043C2                     _rotate180left:
  8259                           	callstack 23
  8260   0043C2                     
  8261                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8262   0043C2  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8263   0043C6  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8264   0043CA  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8265   0043CE  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8266   0043D2  EC57  F01F         	call	_Left45	;wreg free
  8267                           
  8268                           ;dc_motor.c: 211:     Left45(mL,mR);
  8269   0043D6  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8270   0043DA  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8271   0043DE  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8272   0043E2  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8273   0043E6  EC57  F01F         	call	_Left45	;wreg free
  8274                           
  8275                           ;dc_motor.c: 212:     Left45(mL,mR);
  8276   0043EA  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8277   0043EE  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8278   0043F2  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8279   0043F6  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8280   0043FA  EC57  F01F         	call	_Left45	;wreg free
  8281                           
  8282                           ;dc_motor.c: 213:     Left45(mL,mR);
  8283   0043FE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8284   004402  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8285   004406  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8286   00440A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8287   00440E  EC57  F01F         	call	_Left45	;wreg free
  8288   004412  0012               	return		;funcret
  8289   004414                     __end_of_rotate180left:
  8290                           	callstack 0
  8291                           
  8292 ;; *************** function _Left45 *****************
  8293 ;; Defined at:
  8294 ;;		line 179 in file "dc_motor.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8297 ;;		 -> motorL(9), 
  8298 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8299 ;;		 -> motorR(9), 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;Total ram usage:        6 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 4
  8318 ;; This function calls:
  8319 ;;		_stop
  8320 ;;		_turnLeft
  8321 ;; This function is called by:
  8322 ;;		_rotate180left
  8323 ;;		_Red_R90
  8324 ;;		_Green_L90
  8325 ;;		_Yellow_rev1_R90
  8326 ;;		_Pink_rev1_L90
  8327 ;;		_Orange_R135
  8328 ;;		_LightBlue_L135
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text44
  8333   003EAE                     __ptext44:
  8334                           	callstack 0
  8335   003EAE                     _Left45:
  8336                           	callstack 24
  8337   003EAE                     
  8338                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8339   003EAE  807E               	bsf	126,0,c	;volatile
  8340   003EB0                     
  8341                           ;dc_motor.c: 183:     stop(mL,mR);
  8342   003EB0  C01A  F014         	movff	Left45@mL,stop@mL
  8343   003EB4  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8344   003EB8  C01C  F016         	movff	Left45@mR,stop@mR
  8345   003EBC  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8346   003EC0  EC82  F01D         	call	_stop	;wreg free
  8347   003EC4                     
  8348                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8349   003EC4  0E05               	movlw	5
  8350   003EC6  6E1F               	movwf	(??_Left45+1)^0,c
  8351   003EC8  0E0F               	movlw	15
  8352   003ECA  6E1E               	movwf	??_Left45^0,c
  8353   003ECC  0EF1               	movlw	241
  8354   003ECE                     u4387:
  8355   003ECE  2EE8               	decfsz	wreg,f,c
  8356   003ED0  D7FE               	bra	u4387
  8357   003ED2  2E1E               	decfsz	??_Left45^0,f,c
  8358   003ED4  D7FC               	bra	u4387
  8359   003ED6  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8360   003ED8  D7FA               	bra	u4387
  8361   003EDA  F000               	nop	
  8362   003EDC                     
  8363                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8364   003EDC  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8365   003EE0  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8366   003EE4  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8367   003EE8  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8368   003EEC  ECC4  F01E         	call	_turnLeft	;wreg free
  8369                           
  8370                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8371   003EF0  0E0C               	movlw	12
  8372   003EF2  6E1F               	movwf	(??_Left45+1)^0,c
  8373   003EF4  0EDA               	movlw	218
  8374   003EF6  6E1E               	movwf	??_Left45^0,c
  8375   003EF8  0EBA               	movlw	186
  8376   003EFA                     u4397:
  8377   003EFA  2EE8               	decfsz	wreg,f,c
  8378   003EFC  D7FE               	bra	u4397
  8379   003EFE  2E1E               	decfsz	??_Left45^0,f,c
  8380   003F00  D7FC               	bra	u4397
  8381   003F02  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8382   003F04  D7FA               	bra	u4397
  8383   003F06  D000               	nop2	
  8384   003F08                     
  8385                           ;dc_motor.c: 187:     stop(mL,mR);
  8386   003F08  C01A  F014         	movff	Left45@mL,stop@mL
  8387   003F0C  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8388   003F10  C01C  F016         	movff	Left45@mR,stop@mR
  8389   003F14  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8390   003F18  EC82  F01D         	call	_stop	;wreg free
  8391   003F1C                     
  8392                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8393   003F1C  0E05               	movlw	5
  8394   003F1E  6E1F               	movwf	(??_Left45+1)^0,c
  8395   003F20  0E0F               	movlw	15
  8396   003F22  6E1E               	movwf	??_Left45^0,c
  8397   003F24  0EF1               	movlw	241
  8398   003F26                     u4407:
  8399   003F26  2EE8               	decfsz	wreg,f,c
  8400   003F28  D7FE               	bra	u4407
  8401   003F2A  2E1E               	decfsz	??_Left45^0,f,c
  8402   003F2C  D7FC               	bra	u4407
  8403   003F2E  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8404   003F30  D7FA               	bra	u4407
  8405   003F32  F000               	nop	
  8406   003F34                     
  8407                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8408   003F34  907E               	bcf	126,0,c	;volatile
  8409   003F36  0012               	return		;funcret
  8410   003F38                     __end_of_Left45:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _turnLeft *****************
  8414 ;; Defined at:
  8415 ;;		line 113 in file "dc_motor.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8418 ;;		 -> motorL(9), 
  8419 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8420 ;;		 -> motorR(9), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  i               2   23[COMRAM] unsigned int 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;Total ram usage:        6 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 3
  8439 ;; This function calls:
  8440 ;;		_setMotorPWM
  8441 ;; This function is called by:
  8442 ;;		_Left45
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text45
  8447   003D88                     __ptext45:
  8448                           	callstack 0
  8449   003D88                     _turnLeft:
  8450                           	callstack 24
  8451   003D88                     
  8452                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8453   003D88  EE20 F001          	lfsr	2,1
  8454   003D8C  5014               	movf	turnLeft@mL^0,w,c
  8455   003D8E  26D9               	addwf	fsr2l,f,c
  8456   003D90  5015               	movf	(turnLeft@mL+1)^0,w,c
  8457   003D92  22DA               	addwfc	fsr2h,f,c
  8458   003D94  0E00               	movlw	0
  8459   003D96  6EDF               	movwf	indf2,c
  8460                           
  8461                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8462   003D98  EE20 F001          	lfsr	2,1
  8463   003D9C  5016               	movf	turnLeft@mR^0,w,c
  8464   003D9E  26D9               	addwf	fsr2l,f,c
  8465   003DA0  5017               	movf	(turnLeft@mR+1)^0,w,c
  8466   003DA2  22DA               	addwfc	fsr2h,f,c
  8467   003DA4  0E01               	movlw	1
  8468   003DA6  6EDF               	movwf	indf2,c
  8469   003DA8                     
  8470                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8471   003DA8  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8472   003DAC  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8473   003DB0  ECE8  F017         	call	_setMotorPWM	;wreg free
  8474   003DB4                     
  8475                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8476   003DB4  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8477   003DB8  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8478   003DBC  ECE8  F017         	call	_setMotorPWM	;wreg free
  8479   003DC0                     
  8480                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8481   003DC0  0E00               	movlw	0
  8482   003DC2  6E19               	movwf	(turnLeft@i+1)^0,c
  8483   003DC4  0E00               	movlw	0
  8484   003DC6  6E18               	movwf	turnLeft@i^0,c
  8485   003DC8                     l3054:
  8486                           
  8487                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8488   003DC8  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8489   003DCC  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8490   003DD0  2ADF               	incf	indf2,f,c
  8491                           
  8492                           ;dc_motor.c: 123:         mR->power++;
  8493   003DD2  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8494   003DD6  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8495   003DDA  2ADF               	incf	indf2,f,c
  8496   003DDC                     
  8497                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8498   003DDC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8499   003DE0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8500   003DE4  ECE8  F017         	call	_setMotorPWM	;wreg free
  8501   003DE8                     
  8502                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8503   003DE8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8504   003DEC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8505   003DF0  ECE8  F017         	call	_setMotorPWM	;wreg free
  8506   003DF4                     
  8507                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8508   003DF4  0EE4               	movlw	228
  8509   003DF6                     u4417:
  8510   003DF6  D000               	nop2	
  8511   003DF8  D000               	nop2	
  8512   003DFA  2EE8               	decfsz	wreg,f,c
  8513   003DFC  D7FC               	bra	u4417
  8514   003DFE  D000               	nop2	
  8515   003E00  D000               	nop2	
  8516   003E02                     
  8517                           ;dc_motor.c: 127:     }
  8518   003E02  4A18               	infsnz	turnLeft@i^0,f,c
  8519   003E04  2A19               	incf	(turnLeft@i+1)^0,f,c
  8520   003E06  5019               	movf	(turnLeft@i+1)^0,w,c
  8521   003E08  E109               	bnz	u2210
  8522   003E0A  0E32               	movlw	50
  8523   003E0C  5C18               	subwf	turnLeft@i^0,w,c
  8524   003E0E  A0D8               	btfss	status,0,c
  8525   003E10  EF0C  F01F         	goto	u2211
  8526   003E14  EF0E  F01F         	goto	u2210
  8527   003E18                     u2211:
  8528   003E18  EFE4  F01E         	goto	l3054
  8529   003E1C                     u2210:
  8530   003E1C  0012               	return		;funcret
  8531   003E1E                     __end_of_turnLeft:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _reverseHalfSquare *****************
  8535 ;; Defined at:
  8536 ;;		line 216 in file "dc_motor.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8539 ;;		 -> motorL(9), 
  8540 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8541 ;;		 -> motorR(9), 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8553 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;Total ram usage:        6 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 4
  8560 ;; This function calls:
  8561 ;;		_fullSpeedReverse
  8562 ;;		_stop
  8563 ;; This function is called by:
  8564 ;;		_Red_R90
  8565 ;;		_Green_L90
  8566 ;;		_Blue_T180
  8567 ;;		_Yellow_rev1_R90
  8568 ;;		_Pink_rev1_L90
  8569 ;;		_Orange_R135
  8570 ;;		_LightBlue_L135
  8571 ;;		_White
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text46
  8576   003FC0                     __ptext46:
  8577                           	callstack 0
  8578   003FC0                     _reverseHalfSquare:
  8579                           	callstack 24
  8580   003FC0                     
  8581                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8582   003FC0  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8583   003FC4  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8584   003FC8  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8585   003FCC  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8586   003FD0  EC82  F01D         	call	_stop	;wreg free
  8587   003FD4                     
  8588                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8589   003FD4  0E09               	movlw	9
  8590   003FD6  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8591   003FD8  0E1E               	movlw	30
  8592   003FDA  6E1F               	movwf	??_reverseHalfSquare^0,c
  8593   003FDC  0EE4               	movlw	228
  8594   003FDE                     u4427:
  8595   003FDE  2EE8               	decfsz	wreg,f,c
  8596   003FE0  D7FE               	bra	u4427
  8597   003FE2  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8598   003FE4  D7FC               	bra	u4427
  8599   003FE6  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8600   003FE8  D7FA               	bra	u4427
  8601   003FEA  D000               	nop2	
  8602   003FEC                     
  8603                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8604   003FEC  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8605   003FF0  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8606   003FF4  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8607   003FF8  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8608   003FFC  EC63  F020         	call	_fullSpeedReverse	;wreg free
  8609                           
  8610                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8611   004000  0E1D               	movlw	29
  8612   004002  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8613   004004  0E69               	movlw	105
  8614   004006  6E1F               	movwf	??_reverseHalfSquare^0,c
  8615   004008  0EA5               	movlw	165
  8616   00400A                     u4437:
  8617   00400A  2EE8               	decfsz	wreg,f,c
  8618   00400C  D7FE               	bra	u4437
  8619   00400E  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8620   004010  D7FC               	bra	u4437
  8621   004012  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8622   004014  D7FA               	bra	u4437
  8623   004016  F000               	nop	
  8624   004018                     
  8625                           ;dc_motor.c: 222:     stop(mL,mR);
  8626   004018  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8627   00401C  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8628   004020  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8629   004024  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8630   004028  EC82  F01D         	call	_stop	;wreg free
  8631   00402C                     
  8632                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8633   00402C  0E09               	movlw	9
  8634   00402E  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8635   004030  0E1E               	movlw	30
  8636   004032  6E1F               	movwf	??_reverseHalfSquare^0,c
  8637   004034  0EE4               	movlw	228
  8638   004036                     u4447:
  8639   004036  2EE8               	decfsz	wreg,f,c
  8640   004038  D7FE               	bra	u4447
  8641   00403A  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8642   00403C  D7FC               	bra	u4447
  8643   00403E  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8644   004040  D7FA               	bra	u4447
  8645   004042  D000               	nop2	
  8646   004044  0012               	return		;funcret
  8647   004046                     __end_of_reverseHalfSquare:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function _stop *****************
  8651 ;; Defined at:
  8652 ;;		line 93 in file "dc_motor.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8655 ;;		 -> motorL(9), 
  8656 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8657 ;;		 -> motorR(9), 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;		None
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      void 
  8662 ;; Registers used:
  8663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8673 ;;Total ram usage:        5 bytes
  8674 ;; Hardware stack levels used: 1
  8675 ;; Hardware stack levels required when called: 3
  8676 ;; This function calls:
  8677 ;;		_setMotorPWM
  8678 ;; This function is called by:
  8679 ;;		_main
  8680 ;;		_Left45
  8681 ;;		_Right45
  8682 ;;		_reverseHalfSquare
  8683 ;;		_Yellow_rev1_R90
  8684 ;;		_Pink_rev1_L90
  8685 ;;		_White
  8686 ;;		_maxTimeReturn
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text47
  8691   003B04                     __ptext47:
  8692                           	callstack 0
  8693   003B04                     _stop:
  8694                           	callstack 27
  8695   003B04                     
  8696                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8697   003B04  887C               	bsf	124,4,c	;volatile
  8698                           
  8699                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8700   003B06  EFBB  F01D         	goto	l3038
  8701   003B0A                     l3024:
  8702                           
  8703                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8704   003B0A  C014  FFD9         	movff	stop@mL,fsr2l
  8705   003B0E  C015  FFDA         	movff	stop@mL+1,fsr2h
  8706   003B12  50DF               	movf	indf2,w,c
  8707   003B14  B4D8               	btfsc	status,2,c
  8708   003B16  EF8F  F01D         	goto	u2171
  8709   003B1A  EF91  F01D         	goto	u2170
  8710   003B1E                     u2171:
  8711   003B1E  EF96  F01D         	goto	l3028
  8712   003B22                     u2170:
  8713   003B22                     
  8714                           ;dc_motor.c: 100:             mL->power--;
  8715   003B22  C014  FFD9         	movff	stop@mL,fsr2l
  8716   003B26  C015  FFDA         	movff	stop@mL+1,fsr2h
  8717   003B2A  06DF               	decf	indf2,f,c
  8718   003B2C                     l3028:
  8719                           
  8720                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8721   003B2C  C016  FFD9         	movff	stop@mR,fsr2l
  8722   003B30  C017  FFDA         	movff	stop@mR+1,fsr2h
  8723   003B34  50DF               	movf	indf2,w,c
  8724   003B36  B4D8               	btfsc	status,2,c
  8725   003B38  EFA0  F01D         	goto	u2181
  8726   003B3C  EFA2  F01D         	goto	u2180
  8727   003B40                     u2181:
  8728   003B40  EFA7  F01D         	goto	l3032
  8729   003B44                     u2180:
  8730   003B44                     
  8731                           ;dc_motor.c: 103:             mR->power--;
  8732   003B44  C016  FFD9         	movff	stop@mR,fsr2l
  8733   003B48  C017  FFDA         	movff	stop@mR+1,fsr2h
  8734   003B4C  06DF               	decf	indf2,f,c
  8735   003B4E                     l3032:
  8736                           
  8737                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8738   003B4E  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8739   003B52  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8740   003B56  ECE8  F017         	call	_setMotorPWM	;wreg free
  8741   003B5A                     
  8742                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8743   003B5A  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8744   003B5E  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8745   003B62  ECE8  F017         	call	_setMotorPWM	;wreg free
  8746   003B66                     
  8747                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8748   003B66  0E09               	movlw	9
  8749   003B68  6E18               	movwf	??_stop^0,c
  8750   003B6A  0E4E               	movlw	78
  8751   003B6C                     u4457:
  8752   003B6C  2EE8               	decfsz	wreg,f,c
  8753   003B6E  D7FE               	bra	u4457
  8754   003B70  2E18               	decfsz	??_stop^0,f,c
  8755   003B72  D7FC               	bra	u4457
  8756   003B74  D000               	nop2	
  8757   003B76                     l3038:
  8758                           
  8759                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8760   003B76  C014  FFD9         	movff	stop@mL,fsr2l
  8761   003B7A  C015  FFDA         	movff	stop@mL+1,fsr2h
  8762   003B7E  50DF               	movf	indf2,w,c
  8763   003B80  B4D8               	btfsc	status,2,c
  8764   003B82  EFC5  F01D         	goto	u2191
  8765   003B86  EFC7  F01D         	goto	u2190
  8766   003B8A                     u2191:
  8767   003B8A  EFD3  F01D         	goto	l246
  8768   003B8E                     u2190:
  8769   003B8E  C016  FFD9         	movff	stop@mR,fsr2l
  8770   003B92  C017  FFDA         	movff	stop@mR+1,fsr2h
  8771   003B96  50DF               	movf	indf2,w,c
  8772   003B98  A4D8               	btfss	status,2,c
  8773   003B9A  EFD1  F01D         	goto	u2201
  8774   003B9E  EFD3  F01D         	goto	u2200
  8775   003BA2                     u2201:
  8776   003BA2  EF85  F01D         	goto	l3024
  8777   003BA6                     u2200:
  8778   003BA6                     l246:
  8779                           
  8780                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8781   003BA6  987C               	bcf	124,4,c	;volatile
  8782   003BA8  0012               	return		;funcret
  8783   003BAA                     __end_of_stop:
  8784                           	callstack 0
  8785                           
  8786 ;; *************** function _fullSpeedReverse *****************
  8787 ;; Defined at:
  8788 ;;		line 163 in file "dc_motor.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8791 ;;		 -> motorL(9), 
  8792 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8793 ;;		 -> motorR(9), 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  i               2   24[COMRAM] unsigned int 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;Total ram usage:        7 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 3
  8812 ;; This function calls:
  8813 ;;		_setMotorPWM
  8814 ;; This function is called by:
  8815 ;;		_reverseHalfSquare
  8816 ;;		_Yellow_rev1_R90
  8817 ;;		_Pink_rev1_L90
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text48
  8822   0040C6                     __ptext48:
  8823                           	callstack 0
  8824   0040C6                     _fullSpeedReverse:
  8825                           	callstack 24
  8826   0040C6                     
  8827                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  8828   0040C6  EE20 F001          	lfsr	2,1
  8829   0040CA  5014               	movf	fullSpeedReverse@mL^0,w,c
  8830   0040CC  26D9               	addwf	fsr2l,f,c
  8831   0040CE  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  8832   0040D0  22DA               	addwfc	fsr2h,f,c
  8833   0040D2  0E00               	movlw	0
  8834   0040D4  6EDF               	movwf	indf2,c
  8835                           
  8836                           ;dc_motor.c: 166:  (mR->direction) = 0;
  8837   0040D6  EE20 F001          	lfsr	2,1
  8838   0040DA  5016               	movf	fullSpeedReverse@mR^0,w,c
  8839   0040DC  26D9               	addwf	fsr2l,f,c
  8840   0040DE  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  8841   0040E0  22DA               	addwfc	fsr2h,f,c
  8842   0040E2  0E00               	movlw	0
  8843   0040E4  6EDF               	movwf	indf2,c
  8844   0040E6                     
  8845                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  8846   0040E6  0E00               	movlw	0
  8847   0040E8  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  8848   0040EA  0E00               	movlw	0
  8849   0040EC  6E19               	movwf	fullSpeedReverse@i^0,c
  8850   0040EE                     l3122:
  8851                           
  8852                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  8853   0040EE  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  8854   0040F2  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  8855   0040F6  2ADF               	incf	indf2,f,c
  8856                           
  8857                           ;dc_motor.c: 171:         (mR->power)++;
  8858   0040F8  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  8859   0040FC  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  8860   004100  2ADF               	incf	indf2,f,c
  8861   004102                     
  8862                           ;dc_motor.c: 172:         setMotorPWM(mL);
  8863   004102  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  8864   004106  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  8865   00410A  ECE8  F017         	call	_setMotorPWM	;wreg free
  8866   00410E                     
  8867                           ;dc_motor.c: 173:         setMotorPWM(mR);
  8868   00410E  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  8869   004112  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  8870   004116  ECE8  F017         	call	_setMotorPWM	;wreg free
  8871   00411A                     
  8872                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8873   00411A  0E09               	movlw	9
  8874   00411C  6E18               	movwf	??_fullSpeedReverse^0,c
  8875   00411E  0E4E               	movlw	78
  8876   004120                     u4467:
  8877   004120  2EE8               	decfsz	wreg,f,c
  8878   004122  D7FE               	bra	u4467
  8879   004124  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  8880   004126  D7FC               	bra	u4467
  8881   004128  D000               	nop2	
  8882   00412A                     
  8883                           ;dc_motor.c: 175:     }
  8884   00412A  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  8885   00412C  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  8886   00412E  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  8887   004130  E109               	bnz	u2290
  8888   004132  0E32               	movlw	50
  8889   004134  5C19               	subwf	fullSpeedReverse@i^0,w,c
  8890   004136  A0D8               	btfss	status,0,c
  8891   004138  EFA0  F020         	goto	u2291
  8892   00413C  EFA2  F020         	goto	u2290
  8893   004140                     u2291:
  8894   004140  EF77  F020         	goto	l3122
  8895   004144                     u2290:
  8896   004144  0012               	return		;funcret
  8897   004146                     __end_of_fullSpeedReverse:
  8898                           	callstack 0
  8899                           
  8900 ;; *************** function _setMotorPWM *****************
  8901 ;; Defined at:
  8902 ;;		line 70 in file "dc_motor.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8905 ;;		 -> motorR(9), motorL(9), 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  negDuty         1   18[COMRAM] unsigned char 
  8908 ;;  posDuty         1   17[COMRAM] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8922 ;;Total ram usage:        6 bytes
  8923 ;; Hardware stack levels used: 1
  8924 ;; Hardware stack levels required when called: 2
  8925 ;; This function calls:
  8926 ;;		___lwdiv
  8927 ;;		___wmul
  8928 ;; This function is called by:
  8929 ;;		_stop
  8930 ;;		_turnLeft
  8931 ;;		_turnRight
  8932 ;;		_fullSpeedAhead
  8933 ;;		_fullSpeedReverse
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text49
  8938   002FD0                     __ptext49:
  8939                           	callstack 0
  8940   002FD0                     _setMotorPWM:
  8941                           	callstack 27
  8942   002FD0                     
  8943                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8944   002FD0  EE20 F002          	lfsr	2,2
  8945   002FD4  500E               	movf	setMotorPWM@m^0,w,c
  8946   002FD6  26D9               	addwf	fsr2l,f,c
  8947   002FD8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8948   002FDA  22DA               	addwfc	fsr2h,f,c
  8949   002FDC  50DF               	movf	indf2,w,c
  8950   002FDE  B4D8               	btfsc	status,2,c
  8951   002FE0  EFF4  F017         	goto	u2151
  8952   002FE4  EFF6  F017         	goto	u2150
  8953   002FE8                     u2151:
  8954   002FE8  EF2A  F018         	goto	l3012
  8955   002FEC                     u2150:
  8956   002FEC                     
  8957                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  8958   002FEC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8959   002FF0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8960   002FF4  50DF               	movf	indf2,w,c
  8961   002FF6  6E10               	movwf	??_setMotorPWM^0,c
  8962   002FF8  5010               	movf	??_setMotorPWM^0,w,c
  8963   002FFA  6E01               	movwf	___wmul@multiplier^0,c
  8964   002FFC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8965   002FFE  EE20 F003          	lfsr	2,3
  8966   003002  500E               	movf	setMotorPWM@m^0,w,c
  8967   003004  26D9               	addwf	fsr2l,f,c
  8968   003006  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8969   003008  22DA               	addwfc	fsr2h,f,c
  8970   00300A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8971   00300E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8972   003012  EC02  F024         	call	___wmul	;wreg free
  8973   003016  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8974   00301A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8975   00301E  0E00               	movlw	0
  8976   003020  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8977   003022  0E64               	movlw	100
  8978   003024  6E09               	movwf	___lwdiv@divisor^0,c
  8979   003026  EC1F  F021         	call	___lwdiv	;wreg free
  8980   00302A  EE20 F003          	lfsr	2,3
  8981   00302E  500E               	movf	setMotorPWM@m^0,w,c
  8982   003030  26D9               	addwf	fsr2l,f,c
  8983   003032  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8984   003034  22DA               	addwfc	fsr2h,f,c
  8985   003036  50DF               	movf	indf2,w,c
  8986   003038  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8987   00303A  5007               	movf	?___lwdiv^0,w,c
  8988   00303C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8989   00303E  6E12               	movwf	setMotorPWM@posDuty^0,c
  8990   003040                     
  8991                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  8992   003040  EE20 F003          	lfsr	2,3
  8993   003044  500E               	movf	setMotorPWM@m^0,w,c
  8994   003046  26D9               	addwf	fsr2l,f,c
  8995   003048  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8996   00304A  22DA               	addwfc	fsr2h,f,c
  8997   00304C  50DF               	movf	indf2,w,c
  8998   00304E  6E13               	movwf	setMotorPWM@negDuty^0,c
  8999                           
  9000                           ;dc_motor.c: 77:     }
  9001   003050  EF4D  F018         	goto	l3016
  9002   003054                     l3012:
  9003                           
  9004                           ;dc_motor.c: 79:         posDuty=0;
  9005   003054  0E00               	movlw	0
  9006   003056  6E12               	movwf	setMotorPWM@posDuty^0,c
  9007   003058                     
  9008                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9009   003058  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9010   00305C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9011   003060  50DF               	movf	indf2,w,c
  9012   003062  6E10               	movwf	??_setMotorPWM^0,c
  9013   003064  5010               	movf	??_setMotorPWM^0,w,c
  9014   003066  6E01               	movwf	___wmul@multiplier^0,c
  9015   003068  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9016   00306A  EE20 F003          	lfsr	2,3
  9017   00306E  500E               	movf	setMotorPWM@m^0,w,c
  9018   003070  26D9               	addwf	fsr2l,f,c
  9019   003072  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9020   003074  22DA               	addwfc	fsr2h,f,c
  9021   003076  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9022   00307A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9023   00307E  EC02  F024         	call	___wmul	;wreg free
  9024   003082  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9025   003086  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9026   00308A  0E00               	movlw	0
  9027   00308C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9028   00308E  0E64               	movlw	100
  9029   003090  6E09               	movwf	___lwdiv@divisor^0,c
  9030   003092  EC1F  F021         	call	___lwdiv	;wreg free
  9031   003096  5007               	movf	?___lwdiv^0,w,c
  9032   003098  6E13               	movwf	setMotorPWM@negDuty^0,c
  9033   00309A                     l3016:
  9034                           
  9035                           ;dc_motor.c: 83:     if (m->direction) {
  9036   00309A  EE20 F001          	lfsr	2,1
  9037   00309E  500E               	movf	setMotorPWM@m^0,w,c
  9038   0030A0  26D9               	addwf	fsr2l,f,c
  9039   0030A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9040   0030A4  22DA               	addwfc	fsr2h,f,c
  9041   0030A6  50DF               	movf	indf2,w,c
  9042   0030A8  B4D8               	btfsc	status,2,c
  9043   0030AA  EF59  F018         	goto	u2161
  9044   0030AE  EF5B  F018         	goto	u2160
  9045   0030B2                     u2161:
  9046   0030B2  EF7D  F018         	goto	l3020
  9047   0030B6                     u2160:
  9048   0030B6                     
  9049                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9050   0030B6  EE20 F005          	lfsr	2,5
  9051   0030BA  500E               	movf	setMotorPWM@m^0,w,c
  9052   0030BC  26D9               	addwf	fsr2l,f,c
  9053   0030BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9054   0030C0  22DA               	addwfc	fsr2h,f,c
  9055   0030C2  CFDE F010          	movff	postinc2,??_setMotorPWM
  9056   0030C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9057   0030CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9058   0030CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9059   0030D2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9060                           
  9061                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9062   0030D6  EE20 F007          	lfsr	2,7
  9063   0030DA  500E               	movf	setMotorPWM@m^0,w,c
  9064   0030DC  26D9               	addwf	fsr2l,f,c
  9065   0030DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9066   0030E0  22DA               	addwfc	fsr2h,f,c
  9067   0030E2  CFDE F010          	movff	postinc2,??_setMotorPWM
  9068   0030E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9069   0030EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9070   0030EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9071   0030F2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9072                           
  9073                           ;dc_motor.c: 86:     } else {
  9074   0030F6  EF9D  F018         	goto	l237
  9075   0030FA                     l3020:
  9076                           
  9077                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9078   0030FA  EE20 F005          	lfsr	2,5
  9079   0030FE  500E               	movf	setMotorPWM@m^0,w,c
  9080   003100  26D9               	addwf	fsr2l,f,c
  9081   003102  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9082   003104  22DA               	addwfc	fsr2h,f,c
  9083   003106  CFDE F010          	movff	postinc2,??_setMotorPWM
  9084   00310A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9085   00310E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9086   003112  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9087   003116  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9088                           
  9089                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9090   00311A  EE20 F007          	lfsr	2,7
  9091   00311E  500E               	movf	setMotorPWM@m^0,w,c
  9092   003120  26D9               	addwf	fsr2l,f,c
  9093   003122  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9094   003124  22DA               	addwfc	fsr2h,f,c
  9095   003126  CFDE F010          	movff	postinc2,??_setMotorPWM
  9096   00312A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9097   00312E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9098   003132  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9099   003136  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9100   00313A                     l237:
  9101   00313A  0012               	return		;funcret
  9102   00313C                     __end_of_setMotorPWM:
  9103                           	callstack 0
  9104                           
  9105 ;; *************** function ___wmul *****************
  9106 ;; Defined at:
  9107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  multiplier      2    0[COMRAM] unsigned int 
  9110 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  product         2    4[COMRAM] unsigned int 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  2    0[COMRAM] unsigned int 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0, prodl, prodh
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;Total ram usage:        6 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 1
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_setMotorPWM
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text50
  9137   004804                     __ptext50:
  9138                           	callstack 0
  9139   004804                     ___wmul:
  9140                           	callstack 27
  9141   004804  5001               	movf	___wmul@multiplier^0,w,c
  9142   004806  0203               	mulwf	___wmul@multiplicand^0,c
  9143   004808  CFF3 F005          	movff	prodl,___wmul@product
  9144   00480C  CFF4 F006          	movff	prodh,___wmul@product+1
  9145   004810  5001               	movf	___wmul@multiplier^0,w,c
  9146   004812  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9147   004814  50F3               	movf	243,w,c
  9148   004816  2606               	addwf	(___wmul@product+1)^0,f,c
  9149   004818  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9150   00481A  0203               	mulwf	___wmul@multiplicand^0,c
  9151   00481C  50F3               	movf	243,w,c
  9152   00481E  2606               	addwf	(___wmul@product+1)^0,f,c
  9153   004820  C005  F001         	movff	___wmul@product,?___wmul
  9154   004824  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9155   004828  0012               	return		;funcret
  9156   00482A                     __end_of___wmul:
  9157                           	callstack 0
  9158                           
  9159 ;; *************** function ___lwdiv *****************
  9160 ;; Defined at:
  9161 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  dividend        2    6[COMRAM] unsigned int 
  9164 ;;  divisor         2    8[COMRAM] unsigned int 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  quotient        2   10[COMRAM] unsigned int 
  9167 ;;  counter         1   12[COMRAM] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2    6[COMRAM] unsigned int 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;Total ram usage:        7 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 1
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_setMotorPWM
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text51
  9192   00423E                     __ptext51:
  9193                           	callstack 0
  9194   00423E                     ___lwdiv:
  9195                           	callstack 27
  9196   00423E  0E00               	movlw	0
  9197   004240  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9198   004242  0E00               	movlw	0
  9199   004244  6E0B               	movwf	___lwdiv@quotient^0,c
  9200   004246  5009               	movf	___lwdiv@divisor^0,w,c
  9201   004248  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9202   00424A  B4D8               	btfsc	status,2,c
  9203   00424C  EF2A  F021         	goto	u2121
  9204   004250  EF2C  F021         	goto	u2120
  9205   004254                     u2121:
  9206   004254  EF54  F021         	goto	l1156
  9207   004258                     u2120:
  9208   004258  0E01               	movlw	1
  9209   00425A  6E0D               	movwf	___lwdiv@counter^0,c
  9210   00425C  EF34  F021         	goto	l2992
  9211   004260                     l2990:
  9212   004260  90D8               	bcf	status,0,c
  9213   004262  3609               	rlcf	___lwdiv@divisor^0,f,c
  9214   004264  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9215   004266  2A0D               	incf	___lwdiv@counter^0,f,c
  9216   004268                     l2992:
  9217   004268  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9218   00426A  EF39  F021         	goto	u2131
  9219   00426E  EF3B  F021         	goto	u2130
  9220   004272                     u2131:
  9221   004272  EF30  F021         	goto	l2990
  9222   004276                     u2130:
  9223   004276                     l2994:
  9224   004276  90D8               	bcf	status,0,c
  9225   004278  360B               	rlcf	___lwdiv@quotient^0,f,c
  9226   00427A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9227   00427C  5009               	movf	___lwdiv@divisor^0,w,c
  9228   00427E  5C07               	subwf	___lwdiv@dividend^0,w,c
  9229   004280  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9230   004282  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9231   004284  A0D8               	btfss	status,0,c
  9232   004286  EF47  F021         	goto	u2141
  9233   00428A  EF49  F021         	goto	u2140
  9234   00428E                     u2141:
  9235   00428E  EF4E  F021         	goto	l3002
  9236   004292                     u2140:
  9237   004292  5009               	movf	___lwdiv@divisor^0,w,c
  9238   004294  5E07               	subwf	___lwdiv@dividend^0,f,c
  9239   004296  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9240   004298  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9241   00429A  800B               	bsf	___lwdiv@quotient^0,0,c
  9242   00429C                     l3002:
  9243   00429C  90D8               	bcf	status,0,c
  9244   00429E  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9245   0042A0  3209               	rrcf	___lwdiv@divisor^0,f,c
  9246   0042A2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9247   0042A4  EF3B  F021         	goto	l2994
  9248   0042A8                     l1156:
  9249   0042A8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9250   0042AC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9251   0042B0  0012               	return		;funcret
  9252   0042B2                     __end_of___lwdiv:
  9253                           	callstack 0
  9254                           
  9255 ;; *************** function _Color2String *****************
  9256 ;; Defined at:
  9257 ;;		line 39 in file "serial.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  buf             2   68[COMRAM] PTR unsigned char 
  9260 ;;		 -> main@data(100), 
  9261 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  9262 ;;		 -> colorf(22), 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  9265 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9266 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9267 ;;		 -> STR_2(1), 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;Total ram usage:        6 bytes
  9282 ;; Hardware stack levels used: 1
  9283 ;; Hardware stack levels required when called: 7
  9284 ;; This function calls:
  9285 ;;		_Hue2Colour
  9286 ;;		_sendStringSerial4
  9287 ;;		_sprintf
  9288 ;; This function is called by:
  9289 ;;		_main
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text52
  9294   004708                     __ptext52:
  9295                           	callstack 0
  9296   004708                     _Color2String:
  9297                           	callstack 23
  9298   004708                     
  9299                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9300   004708  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  9301   00470C  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9302   004710  ECAA  F00A         	call	_Hue2Colour	;wreg free
  9303   004714  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  9304   004718  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9305   00471C                     
  9306                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9307   00471C  C045  F032         	movff	Color2String@buf,sprintf@s
  9308   004720  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  9309   004724  0E01               	movlw	low STR_1
  9310   004726  6E34               	movwf	sprintf@fmt^0,c
  9311   004728  0E0E               	movlw	high STR_1
  9312   00472A  6E35               	movwf	(sprintf@fmt+1)^0,c
  9313   00472C  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  9314   004730  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9315   004734  ECD2  F022         	call	_sprintf	;wreg free
  9316   004738                     
  9317                           ;serial.c: 45:     sendStringSerial4(buf);
  9318   004738  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  9319   00473C  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9320   004740  ECA3  F023         	call	_sendStringSerial4	;wreg free
  9321   004744  0012               	return		;funcret
  9322   004746                     __end_of_Color2String:
  9323                           	callstack 0
  9324                           
  9325 ;; *************** function _sprintf *****************
  9326 ;; Defined at:
  9327 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  s               2   49[COMRAM] PTR unsigned char 
  9330 ;;		 -> main@data(100), 
  9331 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9332 ;;		 -> STR_1(16), 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  f              11   57[COMRAM] struct _IO_FILE
  9335 ;;  ap              2   55[COMRAM] PTR void [1]
  9336 ;;		 -> ?_sprintf(2), 
  9337 ;;  ret             2    0        int 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  2   49[COMRAM] int 
  9340 ;; Registers used:
  9341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9347 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9348 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9351 ;;Total ram usage:       19 bytes
  9352 ;; Hardware stack levels used: 1
  9353 ;; Hardware stack levels required when called: 6
  9354 ;; This function calls:
  9355 ;;		_vfprintf
  9356 ;; This function is called by:
  9357 ;;		_Color2String
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text53
  9362   0045A4                     __ptext53:
  9363                           	callstack 0
  9364   0045A4                     _sprintf:
  9365                           	callstack 23
  9366   0045A4  0E36               	movlw	low (?_sprintf+4)
  9367   0045A6  6E38               	movwf	sprintf@ap^0,c
  9368   0045A8  0E00               	movlw	high (?_sprintf+4)
  9369   0045AA  6E39               	movwf	(sprintf@ap+1)^0,c
  9370   0045AC  C032  F03A         	movff	sprintf@s,sprintf@f
  9371   0045B0  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9372   0045B4  0E00               	movlw	0
  9373   0045B6  6E3E               	movwf	(sprintf@f+4)^0,c
  9374   0045B8  0E00               	movlw	0
  9375   0045BA  6E3D               	movwf	(sprintf@f+3)^0,c
  9376   0045BC  0E00               	movlw	0
  9377   0045BE  6E44               	movwf	(sprintf@f+10)^0,c
  9378   0045C0  0E00               	movlw	0
  9379   0045C2  6E43               	movwf	(sprintf@f+9)^0,c
  9380   0045C4  0E3A               	movlw	low sprintf@f
  9381   0045C6  6E2A               	movwf	vfprintf@fp^0,c
  9382   0045C8  0E00               	movlw	high sprintf@f
  9383   0045CA  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9384   0045CC  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9385   0045D0  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9386   0045D4  0E38               	movlw	low sprintf@ap
  9387   0045D6  6E2E               	movwf	vfprintf@ap^0,c
  9388   0045D8  0E00               	movlw	high sprintf@ap
  9389   0045DA  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9390   0045DC  ECF9  F022         	call	_vfprintf	;wreg free
  9391   0045E0  503D               	movf	(sprintf@f+3)^0,w,c
  9392   0045E2  2432               	addwf	sprintf@s^0,w,c
  9393   0045E4  6ED9               	movwf	fsr2l,c
  9394   0045E6  503E               	movf	(sprintf@f+4)^0,w,c
  9395   0045E8  2033               	addwfc	(sprintf@s+1)^0,w,c
  9396   0045EA  6EDA               	movwf	fsr2h,c
  9397   0045EC  0E00               	movlw	0
  9398   0045EE  6EDF               	movwf	indf2,c
  9399   0045F0  0012               	return		;funcret
  9400   0045F2                     __end_of_sprintf:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function _vfprintf *****************
  9404 ;; Defined at:
  9405 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9408 ;;		 -> sprintf@f(11), 
  9409 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9410 ;;		 -> STR_1(16), 
  9411 ;;  ap              2   45[COMRAM] PTR PTR void 
  9412 ;;		 -> sprintf@ap(2), 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9415 ;;		 -> STR_1(16), 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2   41[COMRAM] int 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9425 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9429 ;;Total ram usage:        8 bytes
  9430 ;; Hardware stack levels used: 1
  9431 ;; Hardware stack levels required when called: 5
  9432 ;; This function calls:
  9433 ;;		_vfpfcnvrt
  9434 ;; This function is called by:
  9435 ;;		_sprintf
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text54
  9440   0045F2                     __ptext54:
  9441                           	callstack 0
  9442   0045F2                     _vfprintf:
  9443                           	callstack 23
  9444   0045F2                     
  9445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9446   0045F2  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9447   0045F6  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9448                           
  9449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9450   0045FA  EF0D  F023         	goto	l3618
  9451   0045FE                     l3616:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9454   0045FE  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9455   004602  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9456   004606  0E30               	movlw	low vfprintf@cfmt
  9457   004608  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9458   00460A  0E00               	movlw	high vfprintf@cfmt
  9459   00460C  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9460   00460E  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9461   004612  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9462   004616  EC9E  F018         	call	_vfpfcnvrt	;wreg free
  9463   00461A                     l3618:
  9464                           
  9465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9466   00461A  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9467   00461E  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9468   004622                     	if	0	;tblptru may be non-zero
  9469   004622                     	endif
  9470   004622                     	if	0	;tblptru may be non-zero
  9471   004622                     	endif
  9472   004622  0008               	tblrd		*
  9473   004624  50F5               	movf	tablat,w,c
  9474   004626  0900               	iorlw	0
  9475   004628  A4D8               	btfss	status,2,c
  9476   00462A  EF19  F023         	goto	u3031
  9477   00462E  EF1B  F023         	goto	u3030
  9478   004632                     u3031:
  9479   004632  EFFF  F022         	goto	l3616
  9480   004636                     u3030:
  9481   004636                     
  9482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9483   004636  0E00               	movlw	0
  9484   004638  6E2B               	movwf	(?_vfprintf+1)^0,c
  9485   00463A  0E00               	movlw	0
  9486   00463C  6E2A               	movwf	?_vfprintf^0,c
  9487   00463E  0012               	return		;funcret
  9488   004640                     __end_of_vfprintf:
  9489                           	callstack 0
  9490                           
  9491 ;; *************** function _vfpfcnvrt *****************
  9492 ;; Defined at:
  9493 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9496 ;;		 -> sprintf@f(11), 
  9497 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9498 ;;		 -> vfprintf@cfmt(2), 
  9499 ;;  ap              2   35[COMRAM] PTR PTR void 
  9500 ;;		 -> sprintf@ap(2), 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  convarg         8    0        struct .
  9503 ;;  cp              3    0        PTR unsigned char 
  9504 ;;  i               2    0        int 
  9505 ;;  done            2    0        int 
  9506 ;;  c               1    0        unsigned char 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;Total ram usage:       10 bytes
  9521 ;; Hardware stack levels used: 1
  9522 ;; Hardware stack levels required when called: 4
  9523 ;; This function calls:
  9524 ;;		_fputc
  9525 ;;		_stoa
  9526 ;;		_strncmp
  9527 ;; This function is called by:
  9528 ;;		_vfprintf
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text55
  9533   00313C                     __ptext55:
  9534                           	callstack 0
  9535   00313C                     _vfpfcnvrt:
  9536                           	callstack 23
  9537   00313C                     
  9538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9539   00313C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9540   003140  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9541   003144  CFDE FFF6          	movff	postinc2,tblptrl
  9542   003148  CFDD FFF7          	movff	postdec2,tblptrh
  9543   00314C                     	if	0	;tblptru may be non-zero
  9544   00314C                     	endif
  9545   00314C                     	if	0	;tblptru may be non-zero
  9546   00314C                     	endif
  9547   00314C  0008               	tblrd		*
  9548   00314E  50F5               	movf	tablat,w,c
  9549   003150  0A25               	xorlw	37
  9550   003152  A4D8               	btfss	status,2,c
  9551   003154  EFAE  F018         	goto	u2451
  9552   003158  EFB0  F018         	goto	u2450
  9553   00315C                     u2451:
  9554   00315C  EF36  F019         	goto	l3278
  9555   003160                     u2450:
  9556   003160                     
  9557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9558   003160  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9559   003164  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9560   003168  2ADE               	incf	postinc2,f,c
  9561   00316A  0E00               	movlw	0
  9562   00316C  22DD               	addwfc	postdec2,f,c
  9563   00316E                     
  9564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9565   00316E  0E00               	movlw	0
  9566   003170  0100               	movlb	0	; () banked
  9567   003172  6FDB               	movwf	(_width+1)& (0+255),b
  9568   003174  0E00               	movlw	0
  9569   003176  6FDA               	movwf	_width& (0+255),b
  9570   003178  C0DA  F0E4         	movff	_width,_flags
  9571   00317C                     
  9572                           ; BSR set to: 0
  9573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9574   00317C  69DC               	setf	_prec& (0+255),b
  9575   00317E  69DD               	setf	(_prec+1)& (0+255),b
  9576   003180                     
  9577                           ; BSR set to: 0
  9578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9579   003180  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9580   003184  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9581   003188  CFDE FFF6          	movff	postinc2,tblptrl
  9582   00318C  CFDD FFF7          	movff	postdec2,tblptrh
  9583   003190                     	if	0	;tblptru may be non-zero
  9584   003190                     	endif
  9585   003190                     	if	0	;tblptru may be non-zero
  9586   003190                     	endif
  9587   003190  0008               	tblrd		*
  9588   003192  50F5               	movf	tablat,w,c
  9589   003194  0A73               	xorlw	115
  9590   003196  B4D8               	btfsc	status,2,c
  9591   003198  EFD0  F018         	goto	u2461
  9592   00319C  EFD2  F018         	goto	u2460
  9593   0031A0                     u2461:
  9594   0031A0  EFED  F018         	goto	l3262
  9595   0031A4                     u2460:
  9596   0031A4                     
  9597                           ; BSR set to: 0
  9598   0031A4  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9599   0031A8  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9600   0031AC  CFDE F001          	movff	postinc2,strncmp@_l
  9601   0031B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  9602   0031B4  0E48               	movlw	low STR_11
  9603   0031B6  6E03               	movwf	strncmp@_r^0,c
  9604   0031B8  0E0E               	movlw	high STR_11
  9605   0031BA  6E04               	movwf	(strncmp@_r+1)^0,c
  9606   0031BC  0E00               	movlw	0
  9607   0031BE  6E06               	movwf	(strncmp@n+1)^0,c
  9608   0031C0  0E03               	movlw	3
  9609   0031C2  6E05               	movwf	strncmp@n^0,c
  9610   0031C4  EC59  F01C         	call	_strncmp	;wreg free
  9611   0031C8  5001               	movf	?_strncmp^0,w,c
  9612   0031CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  9613   0031CC  A4D8               	btfss	status,2,c
  9614   0031CE  EFEB  F018         	goto	u2471
  9615   0031D2  EFED  F018         	goto	u2470
  9616   0031D6                     u2471:
  9617   0031D6  EF2D  F019         	goto	l3274
  9618   0031DA                     u2470:
  9619   0031DA                     l3262:
  9620                           
  9621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9622   0031DA  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9623   0031DE  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9624   0031E2  CFDE FFF6          	movff	postinc2,tblptrl
  9625   0031E6  CFDD FFF7          	movff	postdec2,tblptrh
  9626   0031EA                     	if	0	;tblptru may be non-zero
  9627   0031EA                     	endif
  9628   0031EA                     	if	0	;tblptru may be non-zero
  9629   0031EA                     	endif
  9630   0031EA  0008               	tblrd		*
  9631   0031EC  50F5               	movf	tablat,w,c
  9632   0031EE  0A73               	xorlw	115
  9633   0031F0  B4D8               	btfsc	status,2,c
  9634   0031F2  EFFD  F018         	goto	u2481
  9635   0031F6  EFFF  F018         	goto	u2480
  9636   0031FA                     u2481:
  9637   0031FA  EF05  F019         	goto	l3266
  9638   0031FE                     u2480:
  9639   0031FE  0E00               	movlw	0
  9640   003200  6E29               	movwf	(_vfpfcnvrt$2847+1)^0,c
  9641   003202  0E03               	movlw	3
  9642   003204  6E28               	movwf	_vfpfcnvrt$2847^0,c
  9643   003206  EF09  F019         	goto	l3268
  9644   00320A                     l3266:
  9645   00320A  0E00               	movlw	0
  9646   00320C  6E29               	movwf	(_vfpfcnvrt$2847+1)^0,c
  9647   00320E  0E01               	movlw	1
  9648   003210  6E28               	movwf	_vfpfcnvrt$2847^0,c
  9649   003212                     l3268:
  9650   003212  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9651   003216  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9652   00321A  5028               	movf	_vfpfcnvrt$2847^0,w,c
  9653   00321C  26DE               	addwf	postinc2,f,c
  9654   00321E  5029               	movf	(_vfpfcnvrt$2847+1)^0,w,c
  9655   003220  22DD               	addwfc	postdec2,f,c
  9656   003222                     
  9657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9658   003222  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9659   003226  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9660   00322A  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9661   00322E  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9662   003232  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9663   003236  0E02               	movlw	2
  9664   003238  26DE               	addwf	postinc2,f,c
  9665   00323A  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9666   00323E  0E00               	movlw	0
  9667   003240  22DD               	addwfc	postdec2,f,c
  9668   003242  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9669   003246  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9670   00324A  CFDE F00C          	movff	postinc2,stoa@s
  9671   00324E  CFDD F00D          	movff	postdec2,stoa@s+1
  9672   003252  EC4B  F019         	call	_stoa	;wreg free
  9673   003256  EF4A  F019         	goto	l1400
  9674   00325A                     l3274:
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9677   00325A  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9678   00325E  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9679   003262  2ADE               	incf	postinc2,f,c
  9680   003264  0E00               	movlw	0
  9681   003266  22DD               	addwfc	postdec2,f,c
  9682   003268  EF4A  F019         	goto	l1400
  9683   00326C                     l3278:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9686   00326C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9687   003270  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9688   003274  CFDE FFF6          	movff	postinc2,tblptrl
  9689   003278  CFDD FFF7          	movff	postdec2,tblptrh
  9690   00327C                     	if	0	;tblptru may be non-zero
  9691   00327C                     	endif
  9692   00327C                     	if	0	;tblptru may be non-zero
  9693   00327C                     	endif
  9694   00327C  0008               	tblrd		*
  9695   00327E  50F5               	movf	tablat,w,c
  9696   003280  6E01               	movwf	fputc@c^0,c
  9697   003282  6A02               	clrf	(fputc@c+1)^0,c
  9698   003284  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9699   003288  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9700   00328C  ECC8  F01C         	call	_fputc	;wreg free
  9701   003290  EF2D  F019         	goto	l3274
  9702   003294                     l1400:
  9703   003294  0012               	return		;funcret
  9704   003296                     __end_of_vfpfcnvrt:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _strncmp *****************
  9708 ;; Defined at:
  9709 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9712 ;;		 -> STR_1(16), 
  9713 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9714 ;;		 -> STR_13(4), 
  9715 ;;  n               2    4[COMRAM] unsigned int 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9718 ;;		 -> STR_13(4), 
  9719 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9720 ;;		 -> STR_1(16), 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  2    0[COMRAM] int 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9730 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9733 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9734 ;;Total ram usage:       11 bytes
  9735 ;; Hardware stack levels used: 1
  9736 ;; Hardware stack levels required when called: 1
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_vfpfcnvrt
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text56
  9745   0038B2                     __ptext56:
  9746                           	callstack 0
  9747   0038B2                     _strncmp:
  9748                           	callstack 25
  9749   0038B2  C001  F008         	movff	strncmp@_l,strncmp@l
  9750   0038B6  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9751   0038BA  C003  F00A         	movff	strncmp@_r,strncmp@r
  9752   0038BE  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9753   0038C2  0605               	decf	strncmp@n^0,f,c
  9754   0038C4  A0D8               	btfss	status,0,c
  9755   0038C6  0606               	decf	(strncmp@n+1)^0,f,c
  9756   0038C8  2805               	incf	strncmp@n^0,w,c
  9757   0038CA  E106               	bnz	u2371
  9758   0038CC  2806               	incf	(strncmp@n+1)^0,w,c
  9759   0038CE  A4D8               	btfss	status,2,c
  9760   0038D0  EF6C  F01C         	goto	u2371
  9761   0038D4  EF6E  F01C         	goto	u2370
  9762   0038D8                     u2371:
  9763   0038D8  EF7B  F01C         	goto	l3188
  9764   0038DC                     u2370:
  9765   0038DC  0E00               	movlw	0
  9766   0038DE  6E02               	movwf	(?_strncmp+1)^0,c
  9767   0038E0  0E00               	movlw	0
  9768   0038E2  6E01               	movwf	?_strncmp^0,c
  9769   0038E4  EFC7  F01C         	goto	l1439
  9770   0038E8                     l3186:
  9771   0038E8  4A08               	infsnz	strncmp@l^0,f,c
  9772   0038EA  2A09               	incf	(strncmp@l+1)^0,f,c
  9773   0038EC  4A0A               	infsnz	strncmp@r^0,f,c
  9774   0038EE  2A0B               	incf	(strncmp@r+1)^0,f,c
  9775   0038F0  0605               	decf	strncmp@n^0,f,c
  9776   0038F2  A0D8               	btfss	status,0,c
  9777   0038F4  0606               	decf	(strncmp@n+1)^0,f,c
  9778   0038F6                     l3188:
  9779   0038F6  C008  FFF6         	movff	strncmp@l,tblptrl
  9780   0038FA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9781   0038FE                     	if	0	;tblptru may be non-zero
  9782   0038FE                     	endif
  9783   0038FE                     	if	0	;tblptru may be non-zero
  9784   0038FE                     	endif
  9785   0038FE  0008               	tblrd		*
  9786   003900  50F5               	movf	tablat,w,c
  9787   003902  0900               	iorlw	0
  9788   003904  B4D8               	btfsc	status,2,c
  9789   003906  EF87  F01C         	goto	u2381
  9790   00390A  EF89  F01C         	goto	u2380
  9791   00390E                     u2381:
  9792   00390E  EFB5  F01C         	goto	l3196
  9793   003912                     u2380:
  9794   003912  C00A  FFF6         	movff	strncmp@r,tblptrl
  9795   003916  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9796   00391A                     	if	0	;tblptru may be non-zero
  9797   00391A                     	endif
  9798   00391A                     	if	0	;tblptru may be non-zero
  9799   00391A                     	endif
  9800   00391A  0008               	tblrd		*
  9801   00391C  50F5               	movf	tablat,w,c
  9802   00391E  0900               	iorlw	0
  9803   003920  B4D8               	btfsc	status,2,c
  9804   003922  EF95  F01C         	goto	u2391
  9805   003926  EF97  F01C         	goto	u2390
  9806   00392A                     u2391:
  9807   00392A  EFB5  F01C         	goto	l3196
  9808   00392E                     u2390:
  9809   00392E  5005               	movf	strncmp@n^0,w,c
  9810   003930  1006               	iorwf	(strncmp@n+1)^0,w,c
  9811   003932  B4D8               	btfsc	status,2,c
  9812   003934  EF9E  F01C         	goto	u2401
  9813   003938  EFA0  F01C         	goto	u2400
  9814   00393C                     u2401:
  9815   00393C  EFB5  F01C         	goto	l3196
  9816   003940                     u2400:
  9817   003940  C008  FFF6         	movff	strncmp@l,tblptrl
  9818   003944  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9819   003948                     	if	0	;tblptru may be non-zero
  9820   003948                     	endif
  9821   003948                     	if	0	;tblptru may be non-zero
  9822   003948                     	endif
  9823   003948  0008               	tblrd		*
  9824   00394A  CFF5 F007          	movff	tablat,??_strncmp
  9825   00394E  C00A  FFF6         	movff	strncmp@r,tblptrl
  9826   003952  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9827   003956                     	if	0	;tblptru may be non-zero
  9828   003956                     	endif
  9829   003956                     	if	0	;tblptru may be non-zero
  9830   003956                     	endif
  9831   003956  0008               	tblrd		*
  9832   003958  50F5               	movf	tablat,w,c
  9833   00395A  1807               	xorwf	??_strncmp^0,w,c
  9834   00395C  B4D8               	btfsc	status,2,c
  9835   00395E  EFB3  F01C         	goto	u2411
  9836   003962  EFB5  F01C         	goto	u2410
  9837   003966                     u2411:
  9838   003966  EF74  F01C         	goto	l3186
  9839   00396A                     u2410:
  9840   00396A                     l3196:
  9841   00396A  C008  FFF6         	movff	strncmp@l,tblptrl
  9842   00396E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9843   003972                     	if	0	;tblptru may be non-zero
  9844   003972                     	endif
  9845   003972                     	if	0	;tblptru may be non-zero
  9846   003972                     	endif
  9847   003972  0008               	tblrd		*
  9848   003974  CFF5 F007          	movff	tablat,??_strncmp
  9849   003978  C00A  FFF6         	movff	strncmp@r,tblptrl
  9850   00397C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9851   003980                     	if	0	;tblptru may be non-zero
  9852   003980                     	endif
  9853   003980                     	if	0	;tblptru may be non-zero
  9854   003980                     	endif
  9855   003980  0008               	tblrd		*
  9856   003982  50F5               	movf	tablat,w,c
  9857   003984  5C07               	subwf	??_strncmp^0,w,c
  9858   003986  6E01               	movwf	?_strncmp^0,c
  9859   003988  6A02               	clrf	(?_strncmp+1)^0,c
  9860   00398A  A0D8               	btfss	status,0,c
  9861   00398C  0602               	decf	(?_strncmp+1)^0,f,c
  9862   00398E                     l1439:
  9863   00398E  0012               	return		;funcret
  9864   003990                     __end_of_strncmp:
  9865                           	callstack 0
  9866                           
  9867 ;; *************** function _stoa *****************
  9868 ;; Defined at:
  9869 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9872 ;;		 -> sprintf@f(11), 
  9873 ;;  s               2   11[COMRAM] PTR unsigned char 
  9874 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
  9875 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
  9876 ;;		 -> STR_3(4), STR_2(1), 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9879 ;;  p               2   29[COMRAM] int 
  9880 ;;  l               2   27[COMRAM] int 
  9881 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9882 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9883 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9884 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9885 ;;  i               2   23[COMRAM] int 
  9886 ;;  w               2   21[COMRAM] int 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9900 ;;Total ram usage:       22 bytes
  9901 ;; Hardware stack levels used: 1
  9902 ;; Hardware stack levels required when called: 3
  9903 ;; This function calls:
  9904 ;;		_fputc
  9905 ;;		_strlen
  9906 ;; This function is called by:
  9907 ;;		_vfpfcnvrt
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text57
  9912   003296                     __ptext57:
  9913                           	callstack 0
  9914   003296                     _stoa:
  9915                           	callstack 23
  9916   003296                     
  9917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9918   003296  EE21  F086         	lfsr	2,stoa@F1144
  9919   00329A  EE10  F00F         	lfsr	1,stoa@nuls
  9920   00329E  0E06               	movlw	6
  9921   0032A0                     u2301:
  9922   0032A0  CFDB FFE3          	movff	plusw2,plusw1
  9923   0032A4  06E8               	decf	wreg,f,c
  9924   0032A6  E2FC               	bc	u2301
  9925   0032A8                     
  9926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9927   0032A8  C00C  F01A         	movff	stoa@s,stoa@cp
  9928   0032AC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9929   0032B0                     
  9930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9931   0032B0  501A               	movf	stoa@cp^0,w,c
  9932   0032B2  101B               	iorwf	(stoa@cp+1)^0,w,c
  9933   0032B4  A4D8               	btfss	status,2,c
  9934   0032B6  EF5F  F019         	goto	u2311
  9935   0032BA  EF61  F019         	goto	u2310
  9936   0032BE                     u2311:
  9937   0032BE  EF65  F019         	goto	l3156
  9938   0032C2                     u2310:
  9939   0032C2                     
  9940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9941   0032C2  0E0F               	movlw	low stoa@nuls
  9942   0032C4  6E1A               	movwf	stoa@cp^0,c
  9943   0032C6  0E00               	movlw	high stoa@nuls
  9944   0032C8  6E1B               	movwf	(stoa@cp+1)^0,c
  9945   0032CA                     l3156:
  9946                           
  9947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9948   0032CA  C01A  F001         	movff	stoa@cp,strlen@s
  9949   0032CE  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9950   0032D2  ECAA  F022         	call	_strlen	;wreg free
  9951   0032D6  C001  F01C         	movff	?_strlen,stoa@l
  9952   0032DA  C002  F01D         	movff	?_strlen+1,stoa@l+1
  9953   0032DE                     
  9954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  9955   0032DE  C0DC  F01E         	movff	_prec,stoa@p
  9956   0032E2  C0DD  F01F         	movff	_prec+1,stoa@p+1
  9957   0032E6                     
  9958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  9959   0032E6  BE1F               	btfsc	(stoa@p+1)^0,7,c
  9960   0032E8  EF78  F019         	goto	u2321
  9961   0032EC  EF7A  F019         	goto	u2320
  9962   0032F0                     u2321:
  9963   0032F0  EF8F  F019         	goto	l1380
  9964   0032F4                     u2320:
  9965   0032F4  501C               	movf	stoa@l^0,w,c
  9966   0032F6  5C1E               	subwf	stoa@p^0,w,c
  9967   0032F8  501F               	movf	(stoa@p+1)^0,w,c
  9968   0032FA  0A80               	xorlw	128
  9969   0032FC  6E0E               	movwf	??_stoa^0,c
  9970   0032FE  501D               	movf	(stoa@l+1)^0,w,c
  9971   003300  0A80               	xorlw	128
  9972   003302  580E               	subwfb	??_stoa^0,w,c
  9973   003304  A0D8               	btfss	status,0,c
  9974   003306  EF87  F019         	goto	u2331
  9975   00330A  EF89  F019         	goto	u2330
  9976   00330E                     u2331:
  9977   00330E  EF8B  F019         	goto	l1378
  9978   003312                     u2330:
  9979   003312  EF8F  F019         	goto	l1380
  9980   003316                     l1378:
  9981   003316  C01E  F01C         	movff	stoa@p,stoa@l
  9982   00331A  C01F  F01D         	movff	stoa@p+1,stoa@l+1
  9983   00331E                     l1380:
  9984                           
  9985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  9986   00331E  C01C  F01E         	movff	stoa@l,stoa@p
  9987   003322  C01D  F01F         	movff	stoa@l+1,stoa@p+1
  9988                           
  9989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  9990   003326  C0DA  F016         	movff	_width,stoa@w
  9991   00332A  C0DB  F017         	movff	_width+1,stoa@w+1
  9992                           
  9993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9994   00332E  EFA5  F019         	goto	l3168
  9995   003332                     l3164:
  9996                           
  9997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  9998   003332  0E00               	movlw	0
  9999   003334  6E02               	movwf	(fputc@c+1)^0,c
 10000   003336  0E20               	movlw	32
 10001   003338  6E01               	movwf	fputc@c^0,c
 10002   00333A  C00A  F003         	movff	stoa@fp,fputc@fp
 10003   00333E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10004   003342  ECC8  F01C         	call	_fputc	;wreg free
 10005   003346                     
 10006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10007   003346  4A1C               	infsnz	stoa@l^0,f,c
 10008   003348  2A1D               	incf	(stoa@l+1)^0,f,c
 10009   00334A                     l3168:
 10010                           
 10011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10012   00334A  5016               	movf	stoa@w^0,w,c
 10013   00334C  5C1C               	subwf	stoa@l^0,w,c
 10014   00334E  501D               	movf	(stoa@l+1)^0,w,c
 10015   003350  0A80               	xorlw	128
 10016   003352  6E0E               	movwf	??_stoa^0,c
 10017   003354  5017               	movf	(stoa@w+1)^0,w,c
 10018   003356  0A80               	xorlw	128
 10019   003358  580E               	subwfb	??_stoa^0,w,c
 10020   00335A  A0D8               	btfss	status,0,c
 10021   00335C  EFB2  F019         	goto	u2341
 10022   003360  EFB4  F019         	goto	u2340
 10023   003364                     u2341:
 10024   003364  EF99  F019         	goto	l3164
 10025   003368                     u2340:
 10026   003368                     
 10027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10028   003368  0E00               	movlw	0
 10029   00336A  6E19               	movwf	(stoa@i+1)^0,c
 10030   00336C  0E00               	movlw	0
 10031   00336E  6E18               	movwf	stoa@i^0,c
 10032                           
 10033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10034   003370  EFD9  F019         	goto	l3178
 10035   003374                     l3172:
 10036                           
 10037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10038   003374  C01A  FFF6         	movff	stoa@cp,tblptrl
 10039   003378  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10040   00337C  0E00               	movlw	low (__smallconst shr (0+16))
 10041   00337E  6EF8               	movwf	tblptru,c
 10042   003380  0E0D               	movlw	(high __ramtop+-1)
 10043   003382  64F7               	cpfsgt	tblptrh,c
 10044   003384  D003               	bra	u2357
 10045   003386  0008               	tblrd		*
 10046   003388  50F5               	movf	tablat,w,c
 10047   00338A  D005               	bra	u2350
 10048   00338C                     u2357:
 10049   00338C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10050   003390  CFF7 FFE2          	movff	tblptrh,fsr1h
 10051   003394  50E7               	movf	indf1,w,c
 10052   003396                     u2350:
 10053   003396  6E0E               	movwf	??_stoa^0,c
 10054   003398  500E               	movf	??_stoa^0,w,c
 10055   00339A  6E01               	movwf	fputc@c^0,c
 10056   00339C  6A02               	clrf	(fputc@c+1)^0,c
 10057   00339E  C00A  F003         	movff	stoa@fp,fputc@fp
 10058   0033A2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10059   0033A6  ECC8  F01C         	call	_fputc	;wreg free
 10060   0033AA                     
 10061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10062   0033AA  4A1A               	infsnz	stoa@cp^0,f,c
 10063   0033AC  2A1B               	incf	(stoa@cp+1)^0,f,c
 10064   0033AE                     
 10065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10066   0033AE  4A18               	infsnz	stoa@i^0,f,c
 10067   0033B0  2A19               	incf	(stoa@i+1)^0,f,c
 10068   0033B2                     l3178:
 10069                           
 10070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10071   0033B2  501E               	movf	stoa@p^0,w,c
 10072   0033B4  5C18               	subwf	stoa@i^0,w,c
 10073   0033B6  5019               	movf	(stoa@i+1)^0,w,c
 10074   0033B8  0A80               	xorlw	128
 10075   0033BA  6E0E               	movwf	??_stoa^0,c
 10076   0033BC  501F               	movf	(stoa@p+1)^0,w,c
 10077   0033BE  0A80               	xorlw	128
 10078   0033C0  580E               	subwfb	??_stoa^0,w,c
 10079   0033C2  A0D8               	btfss	status,0,c
 10080   0033C4  EFE6  F019         	goto	u2361
 10081   0033C8  EFE8  F019         	goto	u2360
 10082   0033CC                     u2361:
 10083   0033CC  EFBA  F019         	goto	l3172
 10084   0033D0                     u2360:
 10085   0033D0  0012               	return		;funcret
 10086   0033D2                     __end_of_stoa:
 10087                           	callstack 0
 10088                           
 10089 ;; *************** function _strlen *****************
 10090 ;; Defined at:
 10091 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10094 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10095 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10096 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10099 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10100 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10101 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  2    0[COMRAM] unsigned int 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10115 ;;Total ram usage:        4 bytes
 10116 ;; Hardware stack levels used: 1
 10117 ;; Hardware stack levels required when called: 1
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_stoa
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text58
 10126   004554                     __ptext58:
 10127                           	callstack 0
 10128   004554                     _strlen:
 10129                           	callstack 24
 10130   004554  C001  F003         	movff	strlen@s,strlen@a
 10131   004558  C002  F004         	movff	strlen@s+1,strlen@a+1
 10132   00455C  EFB2  F022         	goto	l3084
 10133   004560                     l3082:
 10134   004560  4A01               	infsnz	strlen@s^0,f,c
 10135   004562  2A02               	incf	(strlen@s+1)^0,f,c
 10136   004564                     l3084:
 10137   004564  C001  FFF6         	movff	strlen@s,tblptrl
 10138   004568  C002  FFF7         	movff	strlen@s+1,tblptrh
 10139   00456C  0E00               	movlw	low (__smallconst shr (0+16))
 10140   00456E  6EF8               	movwf	tblptru,c
 10141   004570  0E0D               	movlw	(high __ramtop+-1)
 10142   004572  64F7               	cpfsgt	tblptrh,c
 10143   004574  D003               	bra	u2267
 10144   004576  0008               	tblrd		*
 10145   004578  50F5               	movf	tablat,w,c
 10146   00457A  D005               	bra	u2260
 10147   00457C                     u2267:
 10148   00457C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10149   004580  CFF7 FFE2          	movff	tblptrh,fsr1h
 10150   004584  50E7               	movf	indf1,w,c
 10151   004586                     u2260:
 10152   004586  0900               	iorlw	0
 10153   004588  A4D8               	btfss	status,2,c
 10154   00458A  EFC9  F022         	goto	u2271
 10155   00458E  EFCB  F022         	goto	u2270
 10156   004592                     u2271:
 10157   004592  EFB0  F022         	goto	l3082
 10158   004596                     u2270:
 10159   004596  5003               	movf	strlen@a^0,w,c
 10160   004598  5C01               	subwf	strlen@s^0,w,c
 10161   00459A  6E01               	movwf	?_strlen^0,c
 10162   00459C  5004               	movf	(strlen@a+1)^0,w,c
 10163   00459E  5802               	subwfb	(strlen@s+1)^0,w,c
 10164   0045A0  6E02               	movwf	(?_strlen+1)^0,c
 10165   0045A2  0012               	return		;funcret
 10166   0045A4                     __end_of_strlen:
 10167                           	callstack 0
 10168                           
 10169 ;; *************** function _fputc *****************
 10170 ;; Defined at:
 10171 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10172 ;; Parameters:    Size  Location     Type
 10173 ;;  c               2    0[COMRAM] int 
 10174 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10175 ;;		 -> sprintf@f(11), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  2    0[COMRAM] int 
 10180 ;; Registers used:
 10181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10190 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10191 ;;Total ram usage:        9 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 2
 10194 ;; This function calls:
 10195 ;;		_putch
 10196 ;; This function is called by:
 10197 ;;		_stoa
 10198 ;;		_vfpfcnvrt
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text59
 10203   003990                     __ptext59:
 10204                           	callstack 0
 10205   003990                     _fputc:
 10206                           	callstack 23
 10207   003990  5003               	movf	fputc@fp^0,w,c
 10208   003992  1004               	iorwf	(fputc@fp+1)^0,w,c
 10209   003994  B4D8               	btfsc	status,2,c
 10210   003996  EFCF  F01C         	goto	u2221
 10211   00399A  EFD1  F01C         	goto	u2220
 10212   00399E                     u2221:
 10213   00399E  EFDA  F01C         	goto	l3070
 10214   0039A2                     u2220:
 10215   0039A2  5003               	movf	fputc@fp^0,w,c
 10216   0039A4  1004               	iorwf	(fputc@fp+1)^0,w,c
 10217   0039A6  A4D8               	btfss	status,2,c
 10218   0039A8  EFD8  F01C         	goto	u2231
 10219   0039AC  EFDA  F01C         	goto	u2230
 10220   0039B0                     u2231:
 10221   0039B0  EFDF  F01C         	goto	l3072
 10222   0039B4                     u2230:
 10223   0039B4                     l3070:
 10224   0039B4  5001               	movf	fputc@c^0,w,c
 10225   0039B6  EC92  F024         	call	_putch
 10226   0039BA  EF2C  F01D         	goto	l1418
 10227   0039BE                     l3072:
 10228   0039BE  EE20 F009          	lfsr	2,9
 10229   0039C2  5003               	movf	fputc@fp^0,w,c
 10230   0039C4  26D9               	addwf	fsr2l,f,c
 10231   0039C6  5004               	movf	(fputc@fp+1)^0,w,c
 10232   0039C8  22DA               	addwfc	fsr2h,f,c
 10233   0039CA  50DE               	movf	postinc2,w,c
 10234   0039CC  10DE               	iorwf	postinc2,w,c
 10235   0039CE  B4D8               	btfsc	status,2,c
 10236   0039D0  EFEC  F01C         	goto	u2241
 10237   0039D4  EFEE  F01C         	goto	u2240
 10238   0039D8                     u2241:
 10239   0039D8  EF09  F01D         	goto	l3076
 10240   0039DC                     u2240:
 10241   0039DC  EE20 F009          	lfsr	2,9
 10242   0039E0  5003               	movf	fputc@fp^0,w,c
 10243   0039E2  26D9               	addwf	fsr2l,f,c
 10244   0039E4  5004               	movf	(fputc@fp+1)^0,w,c
 10245   0039E6  22DA               	addwfc	fsr2h,f,c
 10246   0039E8  EE10 F003          	lfsr	1,3
 10247   0039EC  5003               	movf	fputc@fp^0,w,c
 10248   0039EE  26E1               	addwf	fsr1l,f,c
 10249   0039F0  5004               	movf	(fputc@fp+1)^0,w,c
 10250   0039F2  22E2               	addwfc	fsr1h,f,c
 10251   0039F4  50DE               	movf	postinc2,w,c
 10252   0039F6  5CE6               	subwf	postinc1,w,c
 10253   0039F8  50E6               	movf	postinc1,w,c
 10254   0039FA  0A80               	xorlw	128
 10255   0039FC  6E09               	movwf	(??_fputc+4)^0,c
 10256   0039FE  50DE               	movf	postinc2,w,c
 10257   003A00  0A80               	xorlw	128
 10258   003A02  5809               	subwfb	(??_fputc+4)^0,w,c
 10259   003A04  B0D8               	btfsc	status,0,c
 10260   003A06  EF07  F01D         	goto	u2251
 10261   003A0A  EF09  F01D         	goto	u2250
 10262   003A0E                     u2251:
 10263   003A0E  EF2C  F01D         	goto	l1418
 10264   003A12                     u2250:
 10265   003A12                     l3076:
 10266   003A12  EE20 F003          	lfsr	2,3
 10267   003A16  5003               	movf	fputc@fp^0,w,c
 10268   003A18  26D9               	addwf	fsr2l,f,c
 10269   003A1A  5004               	movf	(fputc@fp+1)^0,w,c
 10270   003A1C  22DA               	addwfc	fsr2h,f,c
 10271   003A1E  CFDE F005          	movff	postinc2,??_fputc
 10272   003A22  CFDD F006          	movff	postdec2,??_fputc+1
 10273   003A26  C003  FFD9         	movff	fputc@fp,fsr2l
 10274   003A2A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10275   003A2E  CFDE F007          	movff	postinc2,??_fputc+2
 10276   003A32  CFDD F008          	movff	postdec2,??_fputc+3
 10277   003A36  5005               	movf	??_fputc^0,w,c
 10278   003A38  2407               	addwf	(??_fputc+2)^0,w,c
 10279   003A3A  6ED9               	movwf	fsr2l,c
 10280   003A3C  5006               	movf	(??_fputc+1)^0,w,c
 10281   003A3E  2008               	addwfc	(??_fputc+3)^0,w,c
 10282   003A40  6EDA               	movwf	fsr2h,c
 10283   003A42  C001  FFDF         	movff	fputc@c,indf2
 10284   003A46  EE20 F003          	lfsr	2,3
 10285   003A4A  5003               	movf	fputc@fp^0,w,c
 10286   003A4C  26D9               	addwf	fsr2l,f,c
 10287   003A4E  5004               	movf	(fputc@fp+1)^0,w,c
 10288   003A50  22DA               	addwfc	fsr2h,f,c
 10289   003A52  2ADE               	incf	postinc2,f,c
 10290   003A54  0E00               	movlw	0
 10291   003A56  22DD               	addwfc	postdec2,f,c
 10292   003A58                     l1418:
 10293   003A58  0012               	return		;funcret
 10294   003A5A                     __end_of_fputc:
 10295                           	callstack 0
 10296                           
 10297 ;; *************** function _putch *****************
 10298 ;; Defined at:
 10299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;  c               1    wreg     unsigned char 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  c               1    0[COMRAM] unsigned char 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10317 ;;Total ram usage:        0 bytes
 10318 ;; Hardware stack levels used: 1
 10319 ;; Hardware stack levels required when called: 1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_fputc
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text60
 10328   004924                     __ptext60:
 10329                           	callstack 0
 10330   004924                     _putch:
 10331                           	callstack 23
 10332   004924  0012               	return		;funcret
 10333   004926                     __end_of_putch:
 10334                           	callstack 0
 10335                           
 10336 ;; *************** function _sendStringSerial4 *****************
 10337 ;; Defined at:
 10338 ;;		line 48 in file "serial.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  string          2    1[COMRAM] PTR unsigned char 
 10341 ;;		 -> main@data(100), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;Total ram usage:        2 bytes
 10358 ;; Hardware stack levels used: 1
 10359 ;; Hardware stack levels required when called: 2
 10360 ;; This function calls:
 10361 ;;		_sendCharSerial4
 10362 ;; This function is called by:
 10363 ;;		_Color2String
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text61
 10368   004746                     __ptext61:
 10369                           	callstack 0
 10370   004746                     _sendStringSerial4:
 10371                           	callstack 27
 10372   004746                     
 10373                           ;serial.c: 51:     while(*string != 0){
 10374   004746  EFB2  F023         	goto	l3804
 10375   00474A                     l3798:
 10376                           
 10377                           ;serial.c: 53:   sendCharSerial4(*string++);
 10378   00474A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10379   00474E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10380   004752  50DF               	movf	indf2,w,c
 10381   004754  EC57  F024         	call	_sendCharSerial4
 10382   004758  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10383   00475A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10384   00475C                     
 10385                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10386   00475C  0E6A               	movlw	106
 10387   00475E                     u4477:
 10388   00475E  2EE8               	decfsz	wreg,f,c
 10389   004760  D7FE               	bra	u4477
 10390   004762  D000               	nop2	
 10391   004764                     l3804:
 10392                           
 10393                           ;serial.c: 51:     while(*string != 0){
 10394   004764  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10395   004768  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10396   00476C  50DF               	movf	indf2,w,c
 10397   00476E  A4D8               	btfss	status,2,c
 10398   004770  EFBC  F023         	goto	u3311
 10399   004774  EFBE  F023         	goto	u3310
 10400   004778                     u3311:
 10401   004778  EFA5  F023         	goto	l3798
 10402   00477C                     u3310:
 10403   00477C  0012               	return		;funcret
 10404   00477E                     __end_of_sendStringSerial4:
 10405                           	callstack 0
 10406                           
 10407 ;; *************** function _sendCharSerial4 *****************
 10408 ;; Defined at:
 10409 ;;		line 34 in file "serial.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  charToSend      1    wreg     unsigned char 
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;  charToSend      1    0[COMRAM] unsigned char 
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  1    wreg      void 
 10416 ;; Registers used:
 10417 ;;		wreg
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10427 ;;Total ram usage:        1 bytes
 10428 ;; Hardware stack levels used: 1
 10429 ;; Hardware stack levels required when called: 1
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_sendStringSerial4
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           	psect	text62
 10438   0048AE                     __ptext62:
 10439                           	callstack 0
 10440   0048AE                     _sendCharSerial4:
 10441                           	callstack 27
 10442                           
 10443                           ;incstack = 0
 10444                           ;sendCharSerial4@charToSend stored from wreg
 10445   0048AE  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10446   0048B0                     l384:
 10447   0048B0  010E               	movlb	14	; () banked
 10448   0048B2  A537               	btfss	55,2,b	;volatile
 10449   0048B4  EF5E  F024         	goto	u2581
 10450   0048B8  EF60  F024         	goto	u2580
 10451   0048BC                     u2581:
 10452   0048BC  EF58  F024         	goto	l384
 10453   0048C0                     u2580:
 10454   0048C0                     
 10455                           ; BSR set to: 14
 10456                           ;serial.c: 36:     TX4REG = charToSend;
 10457   0048C0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10458   0048C4                     
 10459                           ; BSR set to: 14
 10460   0048C4  0012               	return		;funcret
 10461   0048C6                     __end_of_sendCharSerial4:
 10462                           	callstack 0
 10463                           
 10464 ;; *************** function _Hue2Colour *****************
 10465 ;; Defined at:
 10466 ;;		line 56 in file "colorfunctions.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
 10469 ;;		 -> colorf(22), 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;  colourname      2   14[COMRAM] PTR unsigned char 
 10472 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
 10473 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
 10474 ;;		 -> STR_2(1), 
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  2   12[COMRAM] PTR unsigned char 
 10477 ;; Registers used:
 10478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10488 ;;Total ram usage:        4 bytes
 10489 ;; Hardware stack levels used: 1
 10490 ;; Hardware stack levels required when called: 2
 10491 ;; This function calls:
 10492 ;;		___flge
 10493 ;; This function is called by:
 10494 ;;		_main
 10495 ;;		_Color2String
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text63
 10500   001554                     __ptext63:
 10501                           	callstack 0
 10502   001554                     _Hue2Colour:
 10503                           	callstack 28
 10504   001554                     
 10505                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10506   001554  0E10               	movlw	low (STR_1+15)
 10507   001556  6E0F               	movwf	Hue2Colour@colourname^0,c
 10508   001558  0E0E               	movlw	high (STR_1+15)
 10509   00155A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10510   00155C                     
 10511                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
 10512   00155C  0E00               	movlw	0
 10513   00155E  6E01               	movwf	___flge@ff1^0,c
 10514   001560  0E00               	movlw	0
 10515   001562  6E02               	movwf	(___flge@ff1+1)^0,c
 10516   001564  0EB0               	movlw	176
 10517   001566  6E03               	movwf	(___flge@ff1+2)^0,c
 10518   001568  0E43               	movlw	67
 10519   00156A  6E04               	movwf	(___flge@ff1+3)^0,c
 10520   00156C  EE20 F010          	lfsr	2,16
 10521   001570  500D               	movf	Hue2Colour@cf^0,w,c
 10522   001572  26D9               	addwf	fsr2l,f,c
 10523   001574  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10524   001576  22DA               	addwfc	fsr2h,f,c
 10525   001578  CFDE F005          	movff	postinc2,___flge@ff2
 10526   00157C  CFDE F006          	movff	postinc2,___flge@ff2+1
 10527   001580  CFDE F007          	movff	postinc2,___flge@ff2+2
 10528   001584  CFDE F008          	movff	postinc2,___flge@ff2+3
 10529   001588  ECEF  F01A         	call	___flge	;wreg free
 10530   00158C  B0D8               	btfsc	status,0,c
 10531   00158E  EFCB  F00A         	goto	u3041
 10532   001592  EFCD  F00A         	goto	u3040
 10533   001596                     u3041:
 10534   001596  EFFA  F00A         	goto	l3646
 10535   00159A                     u3040:
 10536   00159A  EE20 F010          	lfsr	2,16
 10537   00159E  500D               	movf	Hue2Colour@cf^0,w,c
 10538   0015A0  26D9               	addwf	fsr2l,f,c
 10539   0015A2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10540   0015A4  22DA               	addwfc	fsr2h,f,c
 10541   0015A6  CFDE F001          	movff	postinc2,___flge@ff1
 10542   0015AA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10543   0015AE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10544   0015B2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10545   0015B6  0E00               	movlw	0
 10546   0015B8  6E05               	movwf	___flge@ff2^0,c
 10547   0015BA  0E00               	movlw	0
 10548   0015BC  6E06               	movwf	(___flge@ff2+1)^0,c
 10549   0015BE  0EB4               	movlw	180
 10550   0015C0  6E07               	movwf	(___flge@ff2+2)^0,c
 10551   0015C2  0E43               	movlw	67
 10552   0015C4  6E08               	movwf	(___flge@ff2+3)^0,c
 10553   0015C6  ECEF  F01A         	call	___flge	;wreg free
 10554   0015CA  B0D8               	btfsc	status,0,c
 10555   0015CC  EFEA  F00A         	goto	u3051
 10556   0015D0  EFEC  F00A         	goto	u3050
 10557   0015D4                     u3051:
 10558   0015D4  EFFA  F00A         	goto	l3646
 10559   0015D8                     u3050:
 10560   0015D8                     
 10561                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10562   0015D8  0E4C               	movlw	low STR_3
 10563   0015DA  6E0F               	movwf	Hue2Colour@colourname^0,c
 10564   0015DC  0E0E               	movlw	high STR_3
 10565   0015DE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10566   0015E0                     
 10567                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10568   0015E0  EE20 F014          	lfsr	2,20
 10569   0015E4  500D               	movf	Hue2Colour@cf^0,w,c
 10570   0015E6  26D9               	addwf	fsr2l,f,c
 10571   0015E8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10572   0015EA  22DA               	addwfc	fsr2h,f,c
 10573   0015EC  0E00               	movlw	0
 10574   0015EE  6EDE               	movwf	postinc2,c
 10575   0015F0  0E00               	movlw	0
 10576   0015F2  6EDD               	movwf	postdec2,c
 10577   0015F4                     l3646:
 10578                           
 10579                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
 10580   0015F4  0E00               	movlw	0
 10581   0015F6  6E01               	movwf	___flge@ff1^0,c
 10582   0015F8  0E00               	movlw	0
 10583   0015FA  6E02               	movwf	(___flge@ff1+1)^0,c
 10584   0015FC  0E96               	movlw	150
 10585   0015FE  6E03               	movwf	(___flge@ff1+2)^0,c
 10586   001600  0E42               	movlw	66
 10587   001602  6E04               	movwf	(___flge@ff1+3)^0,c
 10588   001604  EE20 F010          	lfsr	2,16
 10589   001608  500D               	movf	Hue2Colour@cf^0,w,c
 10590   00160A  26D9               	addwf	fsr2l,f,c
 10591   00160C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10592   00160E  22DA               	addwfc	fsr2h,f,c
 10593   001610  CFDE F005          	movff	postinc2,___flge@ff2
 10594   001614  CFDE F006          	movff	postinc2,___flge@ff2+1
 10595   001618  CFDE F007          	movff	postinc2,___flge@ff2+2
 10596   00161C  CFDE F008          	movff	postinc2,___flge@ff2+3
 10597   001620  ECEF  F01A         	call	___flge	;wreg free
 10598   001624  B0D8               	btfsc	status,0,c
 10599   001626  EF17  F00B         	goto	u3061
 10600   00162A  EF19  F00B         	goto	u3060
 10601   00162E                     u3061:
 10602   00162E  EF48  F00B         	goto	l3654
 10603   001632                     u3060:
 10604   001632  EE20 F010          	lfsr	2,16
 10605   001636  500D               	movf	Hue2Colour@cf^0,w,c
 10606   001638  26D9               	addwf	fsr2l,f,c
 10607   00163A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10608   00163C  22DA               	addwfc	fsr2h,f,c
 10609   00163E  CFDE F001          	movff	postinc2,___flge@ff1
 10610   001642  CFDE F002          	movff	postinc2,___flge@ff1+1
 10611   001646  CFDE F003          	movff	postinc2,___flge@ff1+2
 10612   00164A  CFDE F004          	movff	postinc2,___flge@ff1+3
 10613   00164E  0E00               	movlw	0
 10614   001650  6E05               	movwf	___flge@ff2^0,c
 10615   001652  0E00               	movlw	0
 10616   001654  6E06               	movwf	(___flge@ff2+1)^0,c
 10617   001656  0E9E               	movlw	158
 10618   001658  6E07               	movwf	(___flge@ff2+2)^0,c
 10619   00165A  0E42               	movlw	66
 10620   00165C  6E08               	movwf	(___flge@ff2+3)^0,c
 10621   00165E  ECEF  F01A         	call	___flge	;wreg free
 10622   001662  B0D8               	btfsc	status,0,c
 10623   001664  EF36  F00B         	goto	u3071
 10624   001668  EF38  F00B         	goto	u3070
 10625   00166C                     u3071:
 10626   00166C  EF48  F00B         	goto	l3654
 10627   001670                     u3070:
 10628   001670                     
 10629                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10630   001670  0E3D               	movlw	low STR_4
 10631   001672  6E0F               	movwf	Hue2Colour@colourname^0,c
 10632   001674  0E0E               	movlw	high STR_4
 10633   001676  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10634   001678                     
 10635                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10636   001678  EE20 F014          	lfsr	2,20
 10637   00167C  500D               	movf	Hue2Colour@cf^0,w,c
 10638   00167E  26D9               	addwf	fsr2l,f,c
 10639   001680  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10640   001682  22DA               	addwfc	fsr2h,f,c
 10641   001684  0E01               	movlw	1
 10642   001686  6EDE               	movwf	postinc2,c
 10643   001688  0E00               	movlw	0
 10644   00168A  6EDD               	movwf	postdec2,c
 10645                           
 10646                           ;colorfunctions.c: 71:     }
 10647   00168C  EF1C  F00D         	goto	l3702
 10648   001690                     l3654:
 10649   001690  0E00               	movlw	0
 10650   001692  6E01               	movwf	___flge@ff1^0,c
 10651   001694  0E00               	movlw	0
 10652   001696  6E02               	movwf	(___flge@ff1+1)^0,c
 10653   001698  0E11               	movlw	17
 10654   00169A  6E03               	movwf	(___flge@ff1+2)^0,c
 10655   00169C  0E43               	movlw	67
 10656   00169E  6E04               	movwf	(___flge@ff1+3)^0,c
 10657   0016A0  EE20 F010          	lfsr	2,16
 10658   0016A4  500D               	movf	Hue2Colour@cf^0,w,c
 10659   0016A6  26D9               	addwf	fsr2l,f,c
 10660   0016A8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10661   0016AA  22DA               	addwfc	fsr2h,f,c
 10662   0016AC  CFDE F005          	movff	postinc2,___flge@ff2
 10663   0016B0  CFDE F006          	movff	postinc2,___flge@ff2+1
 10664   0016B4  CFDE F007          	movff	postinc2,___flge@ff2+2
 10665   0016B8  CFDE F008          	movff	postinc2,___flge@ff2+3
 10666   0016BC  ECEF  F01A         	call	___flge	;wreg free
 10667   0016C0  B0D8               	btfsc	status,0,c
 10668   0016C2  EF65  F00B         	goto	u3081
 10669   0016C6  EF67  F00B         	goto	u3080
 10670   0016CA                     u3081:
 10671   0016CA  EF96  F00B         	goto	l3662
 10672   0016CE                     u3080:
 10673   0016CE  EE20 F010          	lfsr	2,16
 10674   0016D2  500D               	movf	Hue2Colour@cf^0,w,c
 10675   0016D4  26D9               	addwf	fsr2l,f,c
 10676   0016D6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10677   0016D8  22DA               	addwfc	fsr2h,f,c
 10678   0016DA  CFDE F001          	movff	postinc2,___flge@ff1
 10679   0016DE  CFDE F002          	movff	postinc2,___flge@ff1+1
 10680   0016E2  CFDE F003          	movff	postinc2,___flge@ff1+2
 10681   0016E6  CFDE F004          	movff	postinc2,___flge@ff1+3
 10682   0016EA  0E00               	movlw	0
 10683   0016EC  6E05               	movwf	___flge@ff2^0,c
 10684   0016EE  0E00               	movlw	0
 10685   0016F0  6E06               	movwf	(___flge@ff2+1)^0,c
 10686   0016F2  0E24               	movlw	36
 10687   0016F4  6E07               	movwf	(___flge@ff2+2)^0,c
 10688   0016F6  0E43               	movlw	67
 10689   0016F8  6E08               	movwf	(___flge@ff2+3)^0,c
 10690   0016FA  ECEF  F01A         	call	___flge	;wreg free
 10691   0016FE  B0D8               	btfsc	status,0,c
 10692   001700  EF84  F00B         	goto	u3091
 10693   001704  EF86  F00B         	goto	u3090
 10694   001708                     u3091:
 10695   001708  EF96  F00B         	goto	l3662
 10696   00170C                     u3090:
 10697   00170C                     
 10698                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10699   00170C  0E1C               	movlw	low STR_5
 10700   00170E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10701   001710  0E0E               	movlw	high STR_5
 10702   001712  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10703   001714                     
 10704                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10705   001714  EE20 F014          	lfsr	2,20
 10706   001718  500D               	movf	Hue2Colour@cf^0,w,c
 10707   00171A  26D9               	addwf	fsr2l,f,c
 10708   00171C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10709   00171E  22DA               	addwfc	fsr2h,f,c
 10710   001720  0E02               	movlw	2
 10711   001722  6EDE               	movwf	postinc2,c
 10712   001724  0E00               	movlw	0
 10713   001726  6EDD               	movwf	postdec2,c
 10714                           
 10715                           ;colorfunctions.c: 76:     }
 10716   001728  EF1C  F00D         	goto	l3702
 10717   00172C                     l3662:
 10718   00172C  0E00               	movlw	0
 10719   00172E  6E01               	movwf	___flge@ff1^0,c
 10720   001730  0E00               	movlw	0
 10721   001732  6E02               	movwf	(___flge@ff1+1)^0,c
 10722   001734  0EA8               	movlw	168
 10723   001736  6E03               	movwf	(___flge@ff1+2)^0,c
 10724   001738  0E41               	movlw	65
 10725   00173A  6E04               	movwf	(___flge@ff1+3)^0,c
 10726   00173C  EE20 F010          	lfsr	2,16
 10727   001740  500D               	movf	Hue2Colour@cf^0,w,c
 10728   001742  26D9               	addwf	fsr2l,f,c
 10729   001744  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10730   001746  22DA               	addwfc	fsr2h,f,c
 10731   001748  CFDE F005          	movff	postinc2,___flge@ff2
 10732   00174C  CFDE F006          	movff	postinc2,___flge@ff2+1
 10733   001750  CFDE F007          	movff	postinc2,___flge@ff2+2
 10734   001754  CFDE F008          	movff	postinc2,___flge@ff2+3
 10735   001758  ECEF  F01A         	call	___flge	;wreg free
 10736   00175C  B0D8               	btfsc	status,0,c
 10737   00175E  EFB3  F00B         	goto	u3101
 10738   001762  EFB5  F00B         	goto	u3100
 10739   001766                     u3101:
 10740   001766  EFE4  F00B         	goto	l3670
 10741   00176A                     u3100:
 10742   00176A  EE20 F010          	lfsr	2,16
 10743   00176E  500D               	movf	Hue2Colour@cf^0,w,c
 10744   001770  26D9               	addwf	fsr2l,f,c
 10745   001772  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10746   001774  22DA               	addwfc	fsr2h,f,c
 10747   001776  CFDE F001          	movff	postinc2,___flge@ff1
 10748   00177A  CFDE F002          	movff	postinc2,___flge@ff1+1
 10749   00177E  CFDE F003          	movff	postinc2,___flge@ff1+2
 10750   001782  CFDE F004          	movff	postinc2,___flge@ff1+3
 10751   001786  0E00               	movlw	0
 10752   001788  6E05               	movwf	___flge@ff2^0,c
 10753   00178A  0E00               	movlw	0
 10754   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
 10755   00178E  0EC8               	movlw	200
 10756   001790  6E07               	movwf	(___flge@ff2+2)^0,c
 10757   001792  0E41               	movlw	65
 10758   001794  6E08               	movwf	(___flge@ff2+3)^0,c
 10759   001796  ECEF  F01A         	call	___flge	;wreg free
 10760   00179A  B0D8               	btfsc	status,0,c
 10761   00179C  EFD2  F00B         	goto	u3111
 10762   0017A0  EFD4  F00B         	goto	u3110
 10763   0017A4                     u3111:
 10764   0017A4  EFE4  F00B         	goto	l3670
 10765   0017A8                     u3110:
 10766   0017A8                     
 10767                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10768   0017A8  0E36               	movlw	low STR_6
 10769   0017AA  6E0F               	movwf	Hue2Colour@colourname^0,c
 10770   0017AC  0E0E               	movlw	high STR_6
 10771   0017AE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10772   0017B0                     
 10773                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10774   0017B0  EE20 F014          	lfsr	2,20
 10775   0017B4  500D               	movf	Hue2Colour@cf^0,w,c
 10776   0017B6  26D9               	addwf	fsr2l,f,c
 10777   0017B8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10778   0017BA  22DA               	addwfc	fsr2h,f,c
 10779   0017BC  0E03               	movlw	3
 10780   0017BE  6EDE               	movwf	postinc2,c
 10781   0017C0  0E00               	movlw	0
 10782   0017C2  6EDD               	movwf	postdec2,c
 10783                           
 10784                           ;colorfunctions.c: 81:     }
 10785   0017C4  EF1C  F00D         	goto	l3702
 10786   0017C8                     l3670:
 10787   0017C8  0E00               	movlw	0
 10788   0017CA  6E01               	movwf	___flge@ff1^0,c
 10789   0017CC  0E00               	movlw	0
 10790   0017CE  6E02               	movwf	(___flge@ff1+1)^0,c
 10791   0017D0  0E70               	movlw	112
 10792   0017D2  6E03               	movwf	(___flge@ff1+2)^0,c
 10793   0017D4  0E41               	movlw	65
 10794   0017D6  6E04               	movwf	(___flge@ff1+3)^0,c
 10795   0017D8  EE20 F010          	lfsr	2,16
 10796   0017DC  500D               	movf	Hue2Colour@cf^0,w,c
 10797   0017DE  26D9               	addwf	fsr2l,f,c
 10798   0017E0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10799   0017E2  22DA               	addwfc	fsr2h,f,c
 10800   0017E4  CFDE F005          	movff	postinc2,___flge@ff2
 10801   0017E8  CFDE F006          	movff	postinc2,___flge@ff2+1
 10802   0017EC  CFDE F007          	movff	postinc2,___flge@ff2+2
 10803   0017F0  CFDE F008          	movff	postinc2,___flge@ff2+3
 10804   0017F4  ECEF  F01A         	call	___flge	;wreg free
 10805   0017F8  B0D8               	btfsc	status,0,c
 10806   0017FA  EF01  F00C         	goto	u3121
 10807   0017FE  EF03  F00C         	goto	u3120
 10808   001802                     u3121:
 10809   001802  EF32  F00C         	goto	l3678
 10810   001806                     u3120:
 10811   001806  EE20 F010          	lfsr	2,16
 10812   00180A  500D               	movf	Hue2Colour@cf^0,w,c
 10813   00180C  26D9               	addwf	fsr2l,f,c
 10814   00180E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10815   001810  22DA               	addwfc	fsr2h,f,c
 10816   001812  CFDE F001          	movff	postinc2,___flge@ff1
 10817   001816  CFDE F002          	movff	postinc2,___flge@ff1+1
 10818   00181A  CFDE F003          	movff	postinc2,___flge@ff1+2
 10819   00181E  CFDE F004          	movff	postinc2,___flge@ff1+3
 10820   001822  0E00               	movlw	0
 10821   001824  6E05               	movwf	___flge@ff2^0,c
 10822   001826  0E00               	movlw	0
 10823   001828  6E06               	movwf	(___flge@ff2+1)^0,c
 10824   00182A  0E98               	movlw	152
 10825   00182C  6E07               	movwf	(___flge@ff2+2)^0,c
 10826   00182E  0E41               	movlw	65
 10827   001830  6E08               	movwf	(___flge@ff2+3)^0,c
 10828   001832  ECEF  F01A         	call	___flge	;wreg free
 10829   001836  B0D8               	btfsc	status,0,c
 10830   001838  EF20  F00C         	goto	u3131
 10831   00183C  EF22  F00C         	goto	u3130
 10832   001840                     u3131:
 10833   001840  EF32  F00C         	goto	l3678
 10834   001844                     u3130:
 10835   001844                     
 10836                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 10837   001844  0E43               	movlw	low STR_7
 10838   001846  6E0F               	movwf	Hue2Colour@colourname^0,c
 10839   001848  0E0E               	movlw	high STR_7
 10840   00184A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10841   00184C                     
 10842                           ;colorfunctions.c: 85:         cf->colourindex=4;
 10843   00184C  EE20 F014          	lfsr	2,20
 10844   001850  500D               	movf	Hue2Colour@cf^0,w,c
 10845   001852  26D9               	addwf	fsr2l,f,c
 10846   001854  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10847   001856  22DA               	addwfc	fsr2h,f,c
 10848   001858  0E04               	movlw	4
 10849   00185A  6EDE               	movwf	postinc2,c
 10850   00185C  0E00               	movlw	0
 10851   00185E  6EDD               	movwf	postdec2,c
 10852                           
 10853                           ;colorfunctions.c: 86:     }
 10854   001860  EF1C  F00D         	goto	l3702
 10855   001864                     l3678:
 10856   001864  0E00               	movlw	0
 10857   001866  6E01               	movwf	___flge@ff1^0,c
 10858   001868  0E00               	movlw	0
 10859   00186A  6E02               	movwf	(___flge@ff1+1)^0,c
 10860   00186C  0EE0               	movlw	224
 10861   00186E  6E03               	movwf	(___flge@ff1+2)^0,c
 10862   001870  0E40               	movlw	64
 10863   001872  6E04               	movwf	(___flge@ff1+3)^0,c
 10864   001874  EE20 F010          	lfsr	2,16
 10865   001878  500D               	movf	Hue2Colour@cf^0,w,c
 10866   00187A  26D9               	addwf	fsr2l,f,c
 10867   00187C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10868   00187E  22DA               	addwfc	fsr2h,f,c
 10869   001880  CFDE F005          	movff	postinc2,___flge@ff2
 10870   001884  CFDE F006          	movff	postinc2,___flge@ff2+1
 10871   001888  CFDE F007          	movff	postinc2,___flge@ff2+2
 10872   00188C  CFDE F008          	movff	postinc2,___flge@ff2+3
 10873   001890  ECEF  F01A         	call	___flge	;wreg free
 10874   001894  B0D8               	btfsc	status,0,c
 10875   001896  EF4F  F00C         	goto	u3141
 10876   00189A  EF51  F00C         	goto	u3140
 10877   00189E                     u3141:
 10878   00189E  EF80  F00C         	goto	l3686
 10879   0018A2                     u3140:
 10880   0018A2  EE20 F010          	lfsr	2,16
 10881   0018A6  500D               	movf	Hue2Colour@cf^0,w,c
 10882   0018A8  26D9               	addwf	fsr2l,f,c
 10883   0018AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10884   0018AC  22DA               	addwfc	fsr2h,f,c
 10885   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
 10886   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
 10887   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
 10888   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
 10889   0018BE  0E00               	movlw	0
 10890   0018C0  6E05               	movwf	___flge@ff2^0,c
 10891   0018C2  0E00               	movlw	0
 10892   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
 10893   0018C6  0E10               	movlw	16
 10894   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
 10895   0018CA  0E41               	movlw	65
 10896   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
 10897   0018CE  ECEF  F01A         	call	___flge	;wreg free
 10898   0018D2  B0D8               	btfsc	status,0,c
 10899   0018D4  EF6E  F00C         	goto	u3151
 10900   0018D8  EF70  F00C         	goto	u3150
 10901   0018DC                     u3151:
 10902   0018DC  EF80  F00C         	goto	l3686
 10903   0018E0                     u3150:
 10904   0018E0                     
 10905                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10906   0018E0  0E2F               	movlw	low STR_8
 10907   0018E2  6E0F               	movwf	Hue2Colour@colourname^0,c
 10908   0018E4  0E0E               	movlw	high STR_8
 10909   0018E6  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10910   0018E8                     
 10911                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10912   0018E8  EE20 F014          	lfsr	2,20
 10913   0018EC  500D               	movf	Hue2Colour@cf^0,w,c
 10914   0018EE  26D9               	addwf	fsr2l,f,c
 10915   0018F0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10916   0018F2  22DA               	addwfc	fsr2h,f,c
 10917   0018F4  0E05               	movlw	5
 10918   0018F6  6EDE               	movwf	postinc2,c
 10919   0018F8  0E00               	movlw	0
 10920   0018FA  6EDD               	movwf	postdec2,c
 10921                           
 10922                           ;colorfunctions.c: 91:     }
 10923   0018FC  EF1C  F00D         	goto	l3702
 10924   001900                     l3686:
 10925   001900  0E00               	movlw	0
 10926   001902  6E01               	movwf	___flge@ff1^0,c
 10927   001904  0E00               	movlw	0
 10928   001906  6E02               	movwf	(___flge@ff1+1)^0,c
 10929   001908  0EAA               	movlw	170
 10930   00190A  6E03               	movwf	(___flge@ff1+2)^0,c
 10931   00190C  0E42               	movlw	66
 10932   00190E  6E04               	movwf	(___flge@ff1+3)^0,c
 10933   001910  EE20 F010          	lfsr	2,16
 10934   001914  500D               	movf	Hue2Colour@cf^0,w,c
 10935   001916  26D9               	addwf	fsr2l,f,c
 10936   001918  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10937   00191A  22DA               	addwfc	fsr2h,f,c
 10938   00191C  CFDE F005          	movff	postinc2,___flge@ff2
 10939   001920  CFDE F006          	movff	postinc2,___flge@ff2+1
 10940   001924  CFDE F007          	movff	postinc2,___flge@ff2+2
 10941   001928  CFDE F008          	movff	postinc2,___flge@ff2+3
 10942   00192C  ECEF  F01A         	call	___flge	;wreg free
 10943   001930  B0D8               	btfsc	status,0,c
 10944   001932  EF9D  F00C         	goto	u3161
 10945   001936  EF9F  F00C         	goto	u3160
 10946   00193A                     u3161:
 10947   00193A  EFCE  F00C         	goto	l3694
 10948   00193E                     u3160:
 10949   00193E  EE20 F010          	lfsr	2,16
 10950   001942  500D               	movf	Hue2Colour@cf^0,w,c
 10951   001944  26D9               	addwf	fsr2l,f,c
 10952   001946  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10953   001948  22DA               	addwfc	fsr2h,f,c
 10954   00194A  CFDE F001          	movff	postinc2,___flge@ff1
 10955   00194E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10956   001952  CFDE F003          	movff	postinc2,___flge@ff1+2
 10957   001956  CFDE F004          	movff	postinc2,___flge@ff1+3
 10958   00195A  0E00               	movlw	0
 10959   00195C  6E05               	movwf	___flge@ff2^0,c
 10960   00195E  0E00               	movlw	0
 10961   001960  6E06               	movwf	(___flge@ff2+1)^0,c
 10962   001962  0EBC               	movlw	188
 10963   001964  6E07               	movwf	(___flge@ff2+2)^0,c
 10964   001966  0E42               	movlw	66
 10965   001968  6E08               	movwf	(___flge@ff2+3)^0,c
 10966   00196A  ECEF  F01A         	call	___flge	;wreg free
 10967   00196E  B0D8               	btfsc	status,0,c
 10968   001970  EFBC  F00C         	goto	u3171
 10969   001974  EFBE  F00C         	goto	u3170
 10970   001978                     u3171:
 10971   001978  EFCE  F00C         	goto	l3694
 10972   00197C                     u3170:
 10973   00197C                     
 10974                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 10975   00197C  0E11               	movlw	low STR_9
 10976   00197E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10977   001980  0E0E               	movlw	high STR_9
 10978   001982  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10979   001984                     
 10980                           ;colorfunctions.c: 95:         cf->colourindex=6;
 10981   001984  EE20 F014          	lfsr	2,20
 10982   001988  500D               	movf	Hue2Colour@cf^0,w,c
 10983   00198A  26D9               	addwf	fsr2l,f,c
 10984   00198C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10985   00198E  22DA               	addwfc	fsr2h,f,c
 10986   001990  0E06               	movlw	6
 10987   001992  6EDE               	movwf	postinc2,c
 10988   001994  0E00               	movlw	0
 10989   001996  6EDD               	movwf	postdec2,c
 10990                           
 10991                           ;colorfunctions.c: 96:     }
 10992   001998  EF1C  F00D         	goto	l3702
 10993   00199C                     l3694:
 10994   00199C  0E00               	movlw	0
 10995   00199E  6E01               	movwf	___flge@ff1^0,c
 10996   0019A0  0E00               	movlw	0
 10997   0019A2  6E02               	movwf	(___flge@ff1+1)^0,c
 10998   0019A4  0ED0               	movlw	208
 10999   0019A6  6E03               	movwf	(___flge@ff1+2)^0,c
 11000   0019A8  0E41               	movlw	65
 11001   0019AA  6E04               	movwf	(___flge@ff1+3)^0,c
 11002   0019AC  EE20 F010          	lfsr	2,16
 11003   0019B0  500D               	movf	Hue2Colour@cf^0,w,c
 11004   0019B2  26D9               	addwf	fsr2l,f,c
 11005   0019B4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11006   0019B6  22DA               	addwfc	fsr2h,f,c
 11007   0019B8  CFDE F005          	movff	postinc2,___flge@ff2
 11008   0019BC  CFDE F006          	movff	postinc2,___flge@ff2+1
 11009   0019C0  CFDE F007          	movff	postinc2,___flge@ff2+2
 11010   0019C4  CFDE F008          	movff	postinc2,___flge@ff2+3
 11011   0019C8  ECEF  F01A         	call	___flge	;wreg free
 11012   0019CC  B0D8               	btfsc	status,0,c
 11013   0019CE  EFEB  F00C         	goto	u3181
 11014   0019D2  EFED  F00C         	goto	u3180
 11015   0019D6                     u3181:
 11016   0019D6  EF1C  F00D         	goto	l596
 11017   0019DA                     u3180:
 11018   0019DA  EE20 F010          	lfsr	2,16
 11019   0019DE  500D               	movf	Hue2Colour@cf^0,w,c
 11020   0019E0  26D9               	addwf	fsr2l,f,c
 11021   0019E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11022   0019E4  22DA               	addwfc	fsr2h,f,c
 11023   0019E6  CFDE F001          	movff	postinc2,___flge@ff1
 11024   0019EA  CFDE F002          	movff	postinc2,___flge@ff1+1
 11025   0019EE  CFDE F003          	movff	postinc2,___flge@ff1+2
 11026   0019F2  CFDE F004          	movff	postinc2,___flge@ff1+3
 11027   0019F6  0E00               	movlw	0
 11028   0019F8  6E05               	movwf	___flge@ff2^0,c
 11029   0019FA  0E00               	movlw	0
 11030   0019FC  6E06               	movwf	(___flge@ff2+1)^0,c
 11031   0019FE  0EE8               	movlw	232
 11032   001A00  6E07               	movwf	(___flge@ff2+2)^0,c
 11033   001A02  0E41               	movlw	65
 11034   001A04  6E08               	movwf	(___flge@ff2+3)^0,c
 11035   001A06  ECEF  F01A         	call	___flge	;wreg free
 11036   001A0A  B0D8               	btfsc	status,0,c
 11037   001A0C  EF0A  F00D         	goto	u3191
 11038   001A10  EF0C  F00D         	goto	u3190
 11039   001A14                     u3191:
 11040   001A14  EF1C  F00D         	goto	l596
 11041   001A18                     u3190:
 11042   001A18                     
 11043                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11044   001A18  0E26               	movlw	low STR_10
 11045   001A1A  6E0F               	movwf	Hue2Colour@colourname^0,c
 11046   001A1C  0E0E               	movlw	high STR_10
 11047   001A1E  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11048   001A20                     
 11049                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11050   001A20  EE20 F014          	lfsr	2,20
 11051   001A24  500D               	movf	Hue2Colour@cf^0,w,c
 11052   001A26  26D9               	addwf	fsr2l,f,c
 11053   001A28  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11054   001A2A  22DA               	addwfc	fsr2h,f,c
 11055   001A2C  0E07               	movlw	7
 11056   001A2E  6EDE               	movwf	postinc2,c
 11057   001A30  0E00               	movlw	0
 11058   001A32  6EDD               	movwf	postdec2,c
 11059   001A34  EF1C  F00D         	goto	l3702
 11060   001A38                     l596:
 11061   001A38                     l3702:
 11062                           
 11063                           ;colorfunctions.c: 102:     return colourname;
 11064   001A38  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 11065   001A3C  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11066   001A40  0012               	return		;funcret
 11067   001A42                     __end_of_Hue2Colour:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function ___flge *****************
 11071 ;; Defined at:
 11072 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 11075 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;		None               void
 11080 ;; Registers used:
 11081 ;;		wreg, status,2, status,0
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11087 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11090 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11091 ;;Total ram usage:       12 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 1
 11094 ;; This function calls:
 11095 ;;		Nothing
 11096 ;; This function is called by:
 11097 ;;		_main
 11098 ;;		_RGB2Hue
 11099 ;;		_Hue2Colour
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text64
 11104   0035DE                     __ptext64:
 11105                           	callstack 0
 11106   0035DE                     ___flge:
 11107                           	callstack 29
 11108   0035DE  0E00               	movlw	0
 11109   0035E0  1401               	andwf	___flge@ff1^0,w,c
 11110   0035E2  6E09               	movwf	??___flge^0,c
 11111   0035E4  0E00               	movlw	0
 11112   0035E6  1402               	andwf	(___flge@ff1+1)^0,w,c
 11113   0035E8  6E0A               	movwf	(??___flge+1)^0,c
 11114   0035EA  0E80               	movlw	128
 11115   0035EC  1403               	andwf	(___flge@ff1+2)^0,w,c
 11116   0035EE  6E0B               	movwf	(??___flge+2)^0,c
 11117   0035F0  0E7F               	movlw	127
 11118   0035F2  1404               	andwf	(___flge@ff1+3)^0,w,c
 11119   0035F4  6E0C               	movwf	(??___flge+3)^0,c
 11120   0035F6  5009               	movf	??___flge^0,w,c
 11121   0035F8  100A               	iorwf	(??___flge+1)^0,w,c
 11122   0035FA  100B               	iorwf	(??___flge+2)^0,w,c
 11123   0035FC  100C               	iorwf	(??___flge+3)^0,w,c
 11124   0035FE  A4D8               	btfss	status,2,c
 11125   003600  EF04  F01B         	goto	u2981
 11126   003604  EF06  F01B         	goto	u2980
 11127   003608                     u2981:
 11128   003608  EF0E  F01B         	goto	l3596
 11129   00360C                     u2980:
 11130   00360C  0E00               	movlw	0
 11131   00360E  6E01               	movwf	___flge@ff1^0,c
 11132   003610  0E00               	movlw	0
 11133   003612  6E02               	movwf	(___flge@ff1+1)^0,c
 11134   003614  0E00               	movlw	0
 11135   003616  6E03               	movwf	(___flge@ff1+2)^0,c
 11136   003618  0E00               	movlw	0
 11137   00361A  6E04               	movwf	(___flge@ff1+3)^0,c
 11138   00361C                     l3596:
 11139   00361C  0E00               	movlw	0
 11140   00361E  1405               	andwf	___flge@ff2^0,w,c
 11141   003620  6E09               	movwf	??___flge^0,c
 11142   003622  0E00               	movlw	0
 11143   003624  1406               	andwf	(___flge@ff2+1)^0,w,c
 11144   003626  6E0A               	movwf	(??___flge+1)^0,c
 11145   003628  0E80               	movlw	128
 11146   00362A  1407               	andwf	(___flge@ff2+2)^0,w,c
 11147   00362C  6E0B               	movwf	(??___flge+2)^0,c
 11148   00362E  0E7F               	movlw	127
 11149   003630  1408               	andwf	(___flge@ff2+3)^0,w,c
 11150   003632  6E0C               	movwf	(??___flge+3)^0,c
 11151   003634  5009               	movf	??___flge^0,w,c
 11152   003636  100A               	iorwf	(??___flge+1)^0,w,c
 11153   003638  100B               	iorwf	(??___flge+2)^0,w,c
 11154   00363A  100C               	iorwf	(??___flge+3)^0,w,c
 11155   00363C  A4D8               	btfss	status,2,c
 11156   00363E  EF23  F01B         	goto	u2991
 11157   003642  EF25  F01B         	goto	u2990
 11158   003646                     u2991:
 11159   003646  EF2D  F01B         	goto	l3600
 11160   00364A                     u2990:
 11161   00364A  0E00               	movlw	0
 11162   00364C  6E05               	movwf	___flge@ff2^0,c
 11163   00364E  0E00               	movlw	0
 11164   003650  6E06               	movwf	(___flge@ff2+1)^0,c
 11165   003652  0E00               	movlw	0
 11166   003654  6E07               	movwf	(___flge@ff2+2)^0,c
 11167   003656  0E00               	movlw	0
 11168   003658  6E08               	movwf	(___flge@ff2+3)^0,c
 11169   00365A                     l3600:
 11170   00365A  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11171   00365C  EF32  F01B         	goto	u3001
 11172   003660  EF34  F01B         	goto	u3000
 11173   003664                     u3001:
 11174   003664  EF3D  F01B         	goto	l3604
 11175   003668                     u3000:
 11176   003668  6C01               	negf	___flge@ff1^0,c
 11177   00366A  1E02               	comf	(___flge@ff1+1)^0,f,c
 11178   00366C  B0D8               	btfsc	status,0,c
 11179   00366E  2A02               	incf	(___flge@ff1+1)^0,f,c
 11180   003670  1E03               	comf	(___flge@ff1+2)^0,f,c
 11181   003672  B0D8               	btfsc	status,0,c
 11182   003674  2A03               	incf	(___flge@ff1+2)^0,f,c
 11183   003676  0E80               	movlw	128
 11184   003678  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11185   00367A                     l3604:
 11186   00367A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11187   00367C  EF42  F01B         	goto	u3011
 11188   003680  EF44  F01B         	goto	u3010
 11189   003684                     u3011:
 11190   003684  EF4D  F01B         	goto	l930
 11191   003688                     u3010:
 11192   003688  6C05               	negf	___flge@ff2^0,c
 11193   00368A  1E06               	comf	(___flge@ff2+1)^0,f,c
 11194   00368C  B0D8               	btfsc	status,0,c
 11195   00368E  2A06               	incf	(___flge@ff2+1)^0,f,c
 11196   003690  1E07               	comf	(___flge@ff2+2)^0,f,c
 11197   003692  B0D8               	btfsc	status,0,c
 11198   003694  2A07               	incf	(___flge@ff2+2)^0,f,c
 11199   003696  0E80               	movlw	128
 11200   003698  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11201   00369A                     l930:
 11202   00369A  0E00               	movlw	0
 11203   00369C  1A01               	xorwf	___flge@ff1^0,f,c
 11204   00369E  0E00               	movlw	0
 11205   0036A0  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11206   0036A2  0E00               	movlw	0
 11207   0036A4  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11208   0036A6  0E80               	movlw	128
 11209   0036A8  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11210   0036AA  0E00               	movlw	0
 11211   0036AC  1A05               	xorwf	___flge@ff2^0,f,c
 11212   0036AE  0E00               	movlw	0
 11213   0036B0  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11214   0036B2  0E00               	movlw	0
 11215   0036B4  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11216   0036B6  0E80               	movlw	128
 11217   0036B8  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11218   0036BA  5005               	movf	___flge@ff2^0,w,c
 11219   0036BC  5C01               	subwf	___flge@ff1^0,w,c
 11220   0036BE  5006               	movf	(___flge@ff2+1)^0,w,c
 11221   0036C0  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11222   0036C2  5007               	movf	(___flge@ff2+2)^0,w,c
 11223   0036C4  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11224   0036C6  5008               	movf	(___flge@ff2+3)^0,w,c
 11225   0036C8  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11226   0036CA  B0D8               	btfsc	status,0,c
 11227   0036CC  EF6A  F01B         	goto	u3021
 11228   0036D0  EF6C  F01B         	goto	u3020
 11229   0036D4                     u3021:
 11230   0036D4  EF6F  F01B         	goto	l3610
 11231   0036D8                     u3020:
 11232   0036D8  90D8               	bcf	status,0,c
 11233   0036DA  EF70  F01B         	goto	l935
 11234   0036DE                     l3610:
 11235   0036DE  80D8               	bsf	status,0,c
 11236   0036E0                     l935:
 11237   0036E0  0012               	return		;funcret
 11238   0036E2                     __end_of___flge:
 11239                           	callstack 0
 11240                           
 11241 ;; *************** function _ClickLEDOn *****************
 11242 ;; Defined at:
 11243 ;;		line 93 in file "colorclick.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  power           1    wreg     unsigned char 
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  power           1    0[COMRAM] unsigned char 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      void 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;Total ram usage:        1 bytes
 11262 ;; Hardware stack levels used: 1
 11263 ;; Hardware stack levels required when called: 1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_main
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text65
 11272   00477E                     __ptext65:
 11273                           	callstack 0
 11274   00477E                     _ClickLEDOn:
 11275                           	callstack 29
 11276                           
 11277                           ;incstack = 0
 11278                           ;ClickLEDOn@power stored from wreg
 11279   00477E  6E01               	movwf	ClickLEDOn@power^0,c
 11280   004780                     
 11281                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11282   004780  5001               	movf	ClickLEDOn@power^0,w,c
 11283   004782  B4D8               	btfsc	status,2,c
 11284   004784  EFC6  F023         	goto	u3941
 11285   004788  EFC8  F023         	goto	u3940
 11286   00478C                     u3941:
 11287   00478C  EFCD  F023         	goto	l4290
 11288   004790                     u3940:
 11289   004790                     
 11290                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11291   004790  827F               	bsf	127,1,c	;volatile
 11292                           
 11293                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11294   004792  8879               	bsf	121,4,c	;volatile
 11295                           
 11296                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11297   004794  8E7E               	bsf	126,7,c	;volatile
 11298                           
 11299                           ;colorclick.c: 99:     }
 11300   004796  EFD8  F023         	goto	l448
 11301   00479A                     l4290:
 11302   00479A  5001               	movf	ClickLEDOn@power^0,w,c
 11303   00479C  A4D8               	btfss	status,2,c
 11304   00479E  EFD3  F023         	goto	u3951
 11305   0047A2  EFD5  F023         	goto	u3950
 11306   0047A6                     u3951:
 11307   0047A6  EFD8  F023         	goto	l448
 11308   0047AA                     u3950:
 11309   0047AA                     
 11310                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11311   0047AA  927F               	bcf	127,1,c	;volatile
 11312                           
 11313                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11314   0047AC  9879               	bcf	121,4,c	;volatile
 11315                           
 11316                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11317   0047AE  9E7E               	bcf	126,7,c	;volatile
 11318   0047B0                     l448:
 11319   0047B0  0012               	return		;funcret
 11320   0047B2                     __end_of_ClickLEDOn:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function _HighISR *****************
 11324 ;; Defined at:
 11325 ;;		line 25 in file "interrupts.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; This function calls:
 11346 ;;		Nothing
 11347 ;; This function is called by:
 11348 ;;		Interrupt level 2
 11349 ;; This function uses a non-reentrant model
 11350 ;;
 11351                           
 11352                           	psect	intcode
 11353   000008                     __pintcode:
 11354                           	callstack 0
 11355   000008                     _HighISR:
 11356                           	callstack 22
 11357                           
 11358                           ;incstack = 0
 11359   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11360   00000A                     
 11361                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11362   00000A  010E               	movlb	14	; () banked
 11363   00000C  AB33               	btfss	51,5,b	;volatile
 11364   00000E  EF0B  F000         	goto	i2u421_41
 11365   000012  EF0D  F000         	goto	i2u421_40
 11366   000016                     i2u421_41:
 11367   000016  EF14  F000         	goto	i2l662
 11368   00001A                     i2u421_40:
 11369   00001A                     
 11370                           ; BSR set to: 14
 11371                           ;interrupts.c: 29:     maxTime = 1;
 11372   00001A  0E00               	movlw	0
 11373   00001C  0100               	movlb	0	; () banked
 11374   00001E  6FE3               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11375   000020  0E01               	movlw	1
 11376   000022  6FE2               	movwf	_maxTime& (0+255),b	;volatile
 11377   000024                     
 11378                           ; BSR set to: 0
 11379                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11380   000024  010E               	movlb	14	; () banked
 11381   000026  9B33               	bcf	51,5,b	;volatile
 11382   000028                     i2l662:
 11383                           
 11384                           ; BSR set to: 14
 11385   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11386   00002A  0011               	retfie		f
 11387   00002C                     __end_of_HighISR:
 11388                           	callstack 0
 11389                           
 11390                           	psect	rparam
 11391   000000                     
 11392                           	psect	temp
 11393   00005F                     btemp:
 11394                           	callstack 0
 11395   00005F                     	ds	1
 11396   000000                     int$flags	set	btemp
 11397   000000                     wtemp8	set	btemp+1
 11398   000000                     ttemp5	set	btemp+1
 11399   000000                     ttemp6	set	btemp+4
 11400   000000                     ttemp7	set	btemp+8
 11401                           
 11402                           	psect	idloc
 11403                           
 11404                           ;Config register IDLOC0 @ 0x200000
 11405                           ;	unspecified, using default values
 11406   200000                     	org	2097152
 11407   200000  0FFF               	dw	4095
 11408                           
 11409                           ;Config register IDLOC1 @ 0x200002
 11410                           ;	unspecified, using default values
 11411   200002                     	org	2097154
 11412   200002  0FFF               	dw	4095
 11413                           
 11414                           ;Config register IDLOC2 @ 0x200004
 11415                           ;	unspecified, using default values
 11416   200004                     	org	2097156
 11417   200004  0FFF               	dw	4095
 11418                           
 11419                           ;Config register IDLOC3 @ 0x200006
 11420                           ;	unspecified, using default values
 11421   200006                     	org	2097158
 11422   200006  0FFF               	dw	4095
 11423                           
 11424                           ;Config register IDLOC4 @ 0x200008
 11425                           ;	unspecified, using default values
 11426   200008                     	org	2097160
 11427   200008  0FFF               	dw	4095
 11428                           
 11429                           ;Config register IDLOC5 @ 0x20000A
 11430                           ;	unspecified, using default values
 11431   20000A                     	org	2097162
 11432   20000A  0FFF               	dw	4095
 11433                           
 11434                           ;Config register IDLOC6 @ 0x20000C
 11435                           ;	unspecified, using default values
 11436   20000C                     	org	2097164
 11437   20000C  0FFF               	dw	4095
 11438                           
 11439                           ;Config register IDLOC7 @ 0x20000E
 11440                           ;	unspecified, using default values
 11441   20000E                     	org	2097166
 11442   20000E  0FFF               	dw	4095
 11443                           
 11444                           	psect	config
 11445                           
 11446                           ;Config register CONFIG1L @ 0x300000
 11447                           ;	External Oscillator mode Selection bits
 11448                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11449                           ;	Power-up default value for COSC bits
 11450                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11451   300000                     	org	3145728
 11452   300000  AA                 	db	170
 11453                           
 11454                           ;Config register CONFIG1H @ 0x300001
 11455                           ;	unspecified, using default values
 11456                           ;	Clock Out Enable bit
 11457                           ;	CLKOUTEN = 0x1, unprogrammed default
 11458                           ;	Clock Switch Enable bit
 11459                           ;	CSWEN = 0x1, unprogrammed default
 11460                           ;	Fail-Safe Clock Monitor Enable bit
 11461                           ;	FCMEN = 0x1, unprogrammed default
 11462   300001                     	org	3145729
 11463   300001  FF                 	db	255
 11464                           
 11465                           ;Config register CONFIG2L @ 0x300002
 11466                           ;	unspecified, using default values
 11467                           ;	Master Clear Enable bit
 11468                           ;	MCLRE = 0x1, unprogrammed default
 11469                           ;	Power-up Timer Enable bit
 11470                           ;	PWRTE = 0x1, unprogrammed default
 11471                           ;	Low-power BOR enable bit
 11472                           ;	LPBOREN = 0x1, unprogrammed default
 11473                           ;	Brown-out Reset Enable bits
 11474                           ;	BOREN = 0x3, unprogrammed default
 11475   300002                     	org	3145730
 11476   300002  FF                 	db	255
 11477                           
 11478                           ;Config register CONFIG2H @ 0x300003
 11479                           ;	unspecified, using default values
 11480                           ;	Brown Out Reset Voltage selection bits
 11481                           ;	BORV = 0x3, unprogrammed default
 11482                           ;	ZCD Disable bit
 11483                           ;	ZCD = 0x1, unprogrammed default
 11484                           ;	PPSLOCK bit One-Way Set Enable bit
 11485                           ;	PPS1WAY = 0x1, unprogrammed default
 11486                           ;	Stack Full/Underflow Reset Enable bit
 11487                           ;	STVREN = 0x1, unprogrammed default
 11488                           ;	Debugger Enable bit
 11489                           ;	DEBUG = 0x1, unprogrammed default
 11490                           ;	Extended Instruction Set Enable bit
 11491                           ;	XINST = 0x1, unprogrammed default
 11492   300003                     	org	3145731
 11493   300003  FF                 	db	255
 11494                           
 11495                           ;Config register CONFIG3L @ 0x300004
 11496                           ;	WDT Period Select bits
 11497                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11498                           ;	WDT operating mode
 11499                           ;	WDTE = OFF, WDT Disabled
 11500   300004                     	org	3145732
 11501   300004  9F                 	db	159
 11502                           
 11503                           ;Config register CONFIG3H @ 0x300005
 11504                           ;	unspecified, using default values
 11505                           ;	WDT Window Select bits
 11506                           ;	WDTCWS = 0x7, unprogrammed default
 11507                           ;	WDT input clock selector
 11508                           ;	WDTCCS = 0x7, unprogrammed default
 11509   300005                     	org	3145733
 11510   300005  FF                 	db	255
 11511                           
 11512                           ;Config register CONFIG4L @ 0x300006
 11513                           ;	unspecified, using default values
 11514                           ;	Write Protection Block 0
 11515                           ;	WRT0 = 0x1, unprogrammed default
 11516                           ;	Write Protection Block 1
 11517                           ;	WRT1 = 0x1, unprogrammed default
 11518                           ;	Write Protection Block 2
 11519                           ;	WRT2 = 0x1, unprogrammed default
 11520                           ;	Write Protection Block 3
 11521                           ;	WRT3 = 0x1, unprogrammed default
 11522                           ;	Write Protection Block 3
 11523                           ;	WRT4 = 0x1, unprogrammed default
 11524                           ;	Write Protection Block 3
 11525                           ;	WRT5 = 0x1, unprogrammed default
 11526                           ;	Write Protection Block 3
 11527                           ;	WRT6 = 0x1, unprogrammed default
 11528                           ;	Write Protection Block 3
 11529                           ;	WRT7 = 0x1, unprogrammed default
 11530   300006                     	org	3145734
 11531   300006  FF                 	db	255
 11532                           
 11533                           ;Config register CONFIG4H @ 0x300007
 11534                           ;	unspecified, using default values
 11535                           ;	Configuration Register Write Protection bit
 11536                           ;	WRTC = 0x1, unprogrammed default
 11537                           ;	Boot Block Write Protection bit
 11538                           ;	WRTB = 0x1, unprogrammed default
 11539                           ;	Data EEPROM Write Protection bit
 11540                           ;	WRTD = 0x1, unprogrammed default
 11541                           ;	Scanner Enable bit
 11542                           ;	SCANE = 0x1, unprogrammed default
 11543                           ;	Low Voltage Programming Enable bit
 11544                           ;	LVP = 0x1, unprogrammed default
 11545   300007                     	org	3145735
 11546   300007  FF                 	db	255
 11547                           
 11548                           ;Config register CONFIG5L @ 0x300008
 11549                           ;	unspecified, using default values
 11550                           ;	UserNVM Program Memory Code Protection bit
 11551                           ;	CP = 0x1, unprogrammed default
 11552                           ;	DataNVM Memory Code Protection bit
 11553                           ;	CPD = 0x1, unprogrammed default
 11554   300008                     	org	3145736
 11555   300008  FF                 	db	255
 11556                           
 11557                           ;Config register CONFIG5H @ 0x300009
 11558                           ;	unspecified, using default values
 11559   300009                     	org	3145737
 11560   300009  FF                 	db	255
 11561                           
 11562                           ;Config register CONFIG6L @ 0x30000A
 11563                           ;	unspecified, using default values
 11564                           ;	Table Read Protection Block 0
 11565                           ;	EBTR0 = 0x1, unprogrammed default
 11566                           ;	Table Read Protection Block 1
 11567                           ;	EBTR1 = 0x1, unprogrammed default
 11568                           ;	Table Read Protection Block 2
 11569                           ;	EBTR2 = 0x1, unprogrammed default
 11570                           ;	Table Read Protection Block 3
 11571                           ;	EBTR3 = 0x1, unprogrammed default
 11572                           ;	Table Read Protection Block 4
 11573                           ;	EBTR4 = 0x1, unprogrammed default
 11574                           ;	Table Read Protection Block 5
 11575                           ;	EBTR5 = 0x1, unprogrammed default
 11576                           ;	Table Read Protection Block 6
 11577                           ;	EBTR6 = 0x1, unprogrammed default
 11578                           ;	Table Read Protection Block 7
 11579                           ;	EBTR7 = 0x1, unprogrammed default
 11580   30000A                     	org	3145738
 11581   30000A  FF                 	db	255
 11582                           
 11583                           ;Config register CONFIG6H @ 0x30000B
 11584                           ;	unspecified, using default values
 11585                           ;	Boot Block Table Read Protection bit
 11586                           ;	EBTRB = 0x1, unprogrammed default
 11587   30000B                     	org	3145739
 11588   30000B  FF                 	db	255
 11589                           tosu	equ	0xFFF
 11590                           tosh	equ	0xFFE
 11591                           tosl	equ	0xFFD
 11592                           stkptr	equ	0xFFC
 11593                           pclatu	equ	0xFFB
 11594                           pclath	equ	0xFFA
 11595                           pcl	equ	0xFF9
 11596                           tblptru	equ	0xFF8
 11597                           tblptrh	equ	0xFF7
 11598                           tblptrl	equ	0xFF6
 11599                           tablat	equ	0xFF5
 11600                           prodh	equ	0xFF4
 11601                           prodl	equ	0xFF3
 11602                           indf0	equ	0xFEF
 11603                           postinc0	equ	0xFEE
 11604                           postdec0	equ	0xFED
 11605                           preinc0	equ	0xFEC
 11606                           plusw0	equ	0xFEB
 11607                           fsr0h	equ	0xFEA
 11608                           fsr0l	equ	0xFE9
 11609                           wreg	equ	0xFE8
 11610                           indf1	equ	0xFE7
 11611                           postinc1	equ	0xFE6
 11612                           postdec1	equ	0xFE5
 11613                           preinc1	equ	0xFE4
 11614                           plusw1	equ	0xFE3
 11615                           fsr1h	equ	0xFE2
 11616                           fsr1l	equ	0xFE1
 11617                           bsr	equ	0xFE0
 11618                           indf2	equ	0xFDF
 11619                           postinc2	equ	0xFDE
 11620                           postdec2	equ	0xFDD
 11621                           preinc2	equ	0xFDC
 11622                           plusw2	equ	0xFDB
 11623                           fsr2h	equ	0xFDA
 11624                           fsr2l	equ	0xFD9
 11625                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    122     160
    BANK1           256      0     141
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2793$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2740$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2740$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    memoryUpdate@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdate@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    memoryUpdate@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    White@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_RGB2Hue
    _memoryUpdate->_getTimerValue
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _Colour2Action->_White
    _White->_Blue_T180
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___flmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  491037
                                             92 COMRAM     2     2      0
                                             21 BANK0    101   101      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                       _memoryUpdate
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdate                                        12     4      8     484
                                              6 COMRAM    12     4      8
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16629
                                             86 COMRAM     6     4      2
                                             13 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     999
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2838
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  449604
                                             55 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               16     6     10  238730
                                             39 COMRAM    16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   38719
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   28340
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   38719
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   28428
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   28428
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   28340
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9236
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19648
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10476
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9844
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8736
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4377
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8157
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedAhead
         _fullSpeedReverse
         _reverseHalfSquare
         _stop
       _fullSpeedAhead
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdate
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8D       7       55.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      62        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 21:14:15 2023

               _color_read_Red 4414                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 4504                             l30 47DC  
                           l33 4802                             l42 48FE                             l27 47DA  
                           l36 4908                             l45 48DE                             l39 48F4  
                           l48 46C6                ??_getTimerValue 0003            ___wmul@multiplicand 0003  
               ?_rotate180left 0020               _color_read_Clear 44B4               _color_read_Green 4464  
            ??_Interrupts_init 0001                    Green_L90@mL 0021                    Green_L90@mR 0023  
                          l230 3EAC                            l143 2C46                            l304 38B0  
                          l129 2A84                            l314 3CF0                            l330 2954  
                          l252 3E1C                            l340 2A0E                            l237 313A  
                          l309 3C4C                            l246 3BA6                            l270 3F36  
                          l262 40C4                            l430 488E                            l247 3BA8  
                          l319 274E                            l512 484C                            l257 3D86  
                          l273 3FBE                            l433 4462                            l602 1A40  
                          l442 4502                            l267 4144                            l515 4912  
                          l427 4706                            l276 4412                            l284 41C0  
                          l612 2DCE                            l436 44B2                            l390 4744  
                          l294 43C0                            l518 48AC                            l279 4044  
                          l463 48D2                            l439 4552                            l375 486E  
                          l448 47B0                            l384 48B0                            l289 423C  
                          l387 48C4                            l299 37C8                            l619 2E1A  
                          l571 34D6                            l396 477C                            l656 48EA  
                          l496 436C                            l665 4828                            l577 10A0  
                          l585 1552                            l930 369A                            l596 1A38  
                          l924 3B02                            l935 36E0                            l962 35DC  
                          wreg 000FE8                   ___flmul@aexp 0065                   ___flmul@bexp 0066  
                 ___flmul@sign 0060                   ___flmul@temp 006B                   ___flmul@prod 0067  
              __end_of_RGB2Hue 1554                   ___fltol@exp1 000A                           l1210 1D4A  
                         l1202 1F00                           l1220 1E08                           l1400 3294  
                         l3000 429A                           l1320 2E72                           l3002 429C  
                         l3010 3040                           l1163 42B0                           l1219 1E1A  
                         l1235 4684                           l1323 2FCE                           l3004 42A2  
                         l1156 42A8                           l3020 30FA                           l3012 3054  
                         l1260 25E4                           l1252 24EA                           l1261 25D2  
                         l1406 463E                           l3014 3058                           l3006 2FD0  
                         l3030 3B44                           l3022 3B04                           l3110 3D6C  
                         l3102 3D32                           l1334 2F66                           l1343 45F0  
                         l1247 26C6                           l1327 2F0A                           l3016 309A  
                         l3008 2FEC                           l3040 3B8E                           l3032 3B4E  
                         l3024 3B0A                           l3112 3D70                           l3104 3D46  
                         l4000 1FB2                           l3200 47DC                           l1249 2526  
                         l1193 1C30                           l1418 3A58                           l3018 30B6  
                         l3130 412A                           l3122 40EE                           l3114 40C6  
                         l3034 3B5A                           l3026 3B22                           l3042 3D88  
                         l3106 3D52                           l1258 256C                           l4010 1FFC  
                         l4002 1FB8                           l1194 1C1E                           l3202 47EC  
                         l1435 45A2                           l1283 232C                           l1195 1BE4  
                         l1380 331E                           l3132 412E                           l3124 4102  
                         l3116 40E6                           l3036 3B66                           l3028 3B2C  
                         l3060 3DF4                           l3044 3DA8                           l3140 3EDC  
                         l3108 3D5E                           l3220 40AA                           l3212 406E  
                         l3204 4046                           l4020 204C                           l4012 2008  
                         l4004 1FD8                           l4100 4640                           l3300 4688  
                         l1429 4924                           l3070 39B4                           l3150 32A8  
                         l3126 410E                           l3038 3B76                           l3062 3E02  
                         l3054 3DC8                           l3046 3DB4                           l3142 3F08  
                         l3134 3EAE                           l3230 3F66                           l3222 40AE  
                         l3214 4082                           l3206 4066                           l4110 3A98  
                         l1286 21BE                           l4030 208E                           l4022 2058  
                         l4014 2012                           l4006 1FE8                           l4102 4650  
                         l3310 46C4                           l3302 468C                           l1439 398E  
                         l1279 1FC8                           l3072 39BE                           l3080 4554  
                         l3160 32E6                           l3152 32B0                           l3128 411A  
                         l3240 3FC0                           l3064 3E06                           l3056 3DDC  
                         l3048 3DC0                           l3144 3F1C                           l3136 3EB0  
                         l3232 3F90                           l3224 3F38                           l3216 408E  
                         l3320 4198                           l4112 3AC6                           l1296 22EE  
                         l1288 2236                           l4040 20F0                           l4032 209A  
                         l4024 2064                           l4016 2028                           l3400 1A7E  
                         l4200 2F7A                           l3304 4694                           l1289 2224  
                         l3074 39DC                           l3066 3990                           l3082 4560  
                         l3170 3368                           l1378 3316                           l3162 32F4  
                         l3154 32C2                           l3250 313C                           l3242 3FD4  
                         l3058 3DE8                           l3146 3F34                           l3138 3EC4  
                         l3330 4380                           l3090 3CF2                           l3234 3FA4  
                         l3226 3F3A                           l3322 41C2                           l3218 409A  
                         l3314 490A                           l4114 3AD6                           l4106 3A5A  
                         l4050 2186                           l4042 20FC                           l4034 20AA  
                         l4026 2072                           l4018 2034                           l3410 1AAE  
                         l3402 1A8E                           l4130 352C                           l4122 34D8  
                         l4202 2F9E                           l3306 469C                           l3076 3A12  
                         l3068 39A2                           l3084 4564                           l3172 3374  
                         l3164 3332                           l3156 32CA                           l3148 3296  
                         l3180 38B2                           l3260 31A4                           l3252 3160  
                         l3244 3FEC                           l3332 43AC                           l3092 3D12  
                         l3236 3FBC                           l3228 3F4E                           l3324 41D4  
                         l3316 4146                           l3340 3734                           l4116 3AFA  
                         l4108 3A88                           l4060 21DC                           l4052 21A4  
                         l4044 2118                           l4036 20C4                           l4028 207E  
                         l3500 1C80                           l3420 1AD8                           l3412 1AC0  
                         l3404 1A90                           l4132 352E                           l4124 34EE  
                         l4204 2FAE                           l3308 46C2                           l4300 349E  
                         l4220 4868                           l4212 484E                           l1389 33D0  
                         l3086 4596                           l3174 33AA                           l3166 3346  
                         l3158 32DE                           l3190 3912                           l3182 38DC  
                         l3270 3222                           l3262 31DA                           l3254 316E  
                         l3246 4018                           l3238 43C2                           l3094 3D1E  
                         l3326 4214                           l3350 37CA                           l3318 4158  
                         l3342 3748                           l3334 36E2                           l4118 3B00  
                         l4070 2246                           l4062 21E0                           l4054 21AE  
                         l4046 2142                           l4038 20D4                           l3510 1CAE  
                         l3502 1C8E                           l3422 1AE8                           l3430 1B12  
                         l3414 1AC2                           l3406 1A98                           l4134 353E  
                         l4206 2FBC                           l4310 0E52                           l4230 46D6  
                         l4302 34BA                           l4222 486A                           l4214 4852  
                         l3600 365A                           l3176 33AE                           l3168 334A  
                         l3192 392E                           l3264 31FE                           l3256 317C  
                         l4304 4708                           l3248 402C                           l3328 436E  
                         l3096 3D2A                           l3352 37DC                           l3360 3848  
                         l3336 36F4                           l3344 3760                           l4080 22A8  
                         l4072 2252                           l4064 21EE                           l4056 21BC  
                         l4048 2178                           l3520 1D1A                           l3512 1CB8  
                         l3504 1C9A                           l3440 1B4A                           l3432 1B22  
                         l3424 1AF8                           l3416 1AC8                           l3408 1AA8  
                         l4160 35BC                           l4144 3568                           l4136 3542  
                         l4128 3502                           l4208 2FBE                           l4320 0F4E  
                         l4312 0E98                           l4240 46FE                           l4232 46E6  
                         l4224 486C                           l4216 485C                           l4400 2A1C  
                         l3610 36DE                           l3602 3668                           l3178 33B2  
                         l3194 3940                           l3186 38E8                           l3266 320A  
                         l3274 325A                           l3258 3180                           l4306 471C  
                         l3370 3C10                           l3362 3884                           l3354 3804  
                         l3346 379C                           l3338 371C                           l4250 48E0  
                         l4090 2310                           l4082 22BC                           l4074 2260  
                         l4066 221C                           l4058 21CE                           l3522 1D2A  
                         l3506 1C9E                           l3514 1CBE                           l3450 1B5E  
                         l3442 1B4E                           l3434 1B34                           l3426 1B08  
                         l3418 1AD6                           l4162 35CC                           l4154 3590  
                         l4146 3572                           l4138 3550                           l4170 2E3C  
                         l4330 1078                           l4322 0F94                           l4314 0EDE  
                         l4242 4700                           l4234 46F0                           l4226 46C8  
                         l3290 48F0                           l4218 485E                           l4410 2A34  
                         l4402 2A20                           l3604 367A                           l3700 1A20  
                         l3196 396A                           l3188 38F6                           l3268 3212  
                         l3620 4636                           l4308 4738                           l3372 3C4E  
                         l3364 389C                           l3356 381C                           l3348 37B4  
                         l3380 4896                           l4092 2312                           l4084 22D6  
                         l4076 228A                           l3540 1DAC                           l3532 1D84  
                         l3516 1CE4                           l3524 1D3A                           l3508 1CAC  
                         l3460 1B72                           l3452 1B62                           l3444 1B52  
                         l3436 1B42                           l3428 1B0A                           l4156 359C  
                         l4148 357C                           l4180 2EB4                           l4172 2E82  
                         l4340 1260                           l4332 10E6                           l4324 0FBC  
                         l4316 0EFE                           l4260 484A                           l4252 482A  
                         l3284 4900                           l3292 48F6                           l4244 4702  
                         l4236 46FA                           l4228 46CC                           l4420 2A52  
                         l4412 2A3A                           l4404 2A24                           l3606 3688  
                         l3702 1A38                           l3278 326C                           l3614 45F2  
                         l3374 3C60                           l3366 3BAA                           l3358 3830  
                         l3382 48A4                           l3710 26F6                           l4086 22F2  
                         l4094 2318                           l4078 228E                           l3542 1DB4  
                         l3534 1D8E                           l3526 1D60                           l3518 1D18  
                         l3550 1DD8                           l3470 1B86                           l3462 1B76  
                         l3454 1B66                           l3446 1B56                           l3438 1B46  
                         l3390 1A42                           l4158 35AC                           l4190 2F3C  
                         l4182 2EC0                           l4174 2E98                           l4166 2E1E  
                         l4342 12AA                           l4350 14EA                           l4334 112C  
                         l4326 1002                           l4318 0F08                           l4254 4832  
                         l3630 47C4                           l3286 4904                           l3294 48FA  
                         l4246 4704                           l4238 46FC                           l4270 3E7C  
                         l4262 3E1E                           l4430 2A6E                           l4422 2A5A  
                         l4414 2A3E                           l4406 2A28                           l3608 36D8  
                         l3640 159A                           l3800 4758                           l3616 45FE  
                         l3376 3CB4                           l3368 3BBC                           l3720 273C  
                         l3712 270E                           l4248 48C6                           l4096 231C  
                         l4088 2302                           l3560 1E2A                           l3552 1DDC  
                         l3544 1DB8                           l3536 1D9C                           l3528 1D70  
                         l3480 1BFE                           l3472 1BB0                           l3464 1B7A  
                         l3456 1B6A                           l3448 1B5A                           l3392 1A4E  
                         l4192 2F48                           l4184 2EF2                           l4168 2E2E  
                         l4352 1506                           l4344 1364                           l4336 1150  
                         l4328 104C                           l4256 483C                           l3632 47C6  
                         l3624 47B2                           l3296 48D6                           l3288 48EC  
                         l4280 3E9E                           l4272 3E86                           l4264 3E2E  
                         l4360 4352                           l4440 2AAA                           l4432 2A76  
                         l4424 2A5E                           l4416 2A42                           l4408 2A28  
                         l4290 479A                           l3650 1670                           l3642 15D8  
                         l3386 48B0                           l3802 475C                           l3618 461A  
                         l3378 4890                           l3730 27A4                           l3714 2722  
                         l3706 26C8                           l4370 2CB6                           l4362 2C4A  
                         l3570 1E90                           l3562 1E36                           l3554 1DEA  
                         l3546 1DC8                           l3538 1D9E                           l3490 1C3E  
                         l3482 1C02                           l3474 1BCC                           l3466 1B7E  
                         l3458 1B6E                           l3394 1A5C                           l4194 2F56  
                         l4186 2EF4                           l4178 2EAC                           l4346 13CC  
                         l4338 121A                           l4258 483E                           l3634 47C8  
                         l3626 47BC                           l3298 48DA                           l3810 445A  
                         l4282 3EA0                           l4274 3E88                           l4266 3E54  
                         l4354 4318                           l4450 2AE2                           l4442 2AAE  
                         l4434 2A7E                           l4426 2A62                           l4418 2A4A  
                         l4292 47AA                           l3660 1714                           l3652 1678  
                         l3644 15E0                           l3636 1554                           l3388 48C0  
                         l3804 4764                           l3740 2844                           l3732 27C8  
                         l3724 2750                           l3716 2728                           l3708 26CE  
                         l4380 2D46                           l4372 2CD6                           l4364 2C68  
                         l3900 24B6                           l3580 1ED8                           l3572 1EA0  
                         l3564 1E44                           l3556 1E00                           l3548 1DCA  
                         l3492 1C4E                           l3484 1C10                           l3476 1BDC  
                         l3468 1B82                           l3396 1A5E                           l4196 2F74  
                         l4188 2F00                           l4348 1486                           l3628 47C2  
                         l3820 4504                           l4284 3EAA                           l4276 3E92  
                         l4268 3E58                           l4356 432C                           l4460 2B48  
                         l4452 2AF6                           l4444 2AB4                           l4436 2A80  
                         l4428 2A66                           l4286 4780                           l3670 17C8  
                         l3662 172C                           l3654 1690                           l3646 15F4  
                         l3638 155C                           l3750 28D8                           l3742 285C  
                         l3734 27E0                           l3726 2768                           l3718 2730  
                         l4382 2D5E                           l4374 2CEE                           l4390 2DCE  
                         l4366 2C80                           l3910 2512                           l3902 24C6  
                         l3582 1EDA                           l3574 1EC0                           l3566 1E7E  
                         l3486 1C12                           l3478 1BF2                           l3398 1A6E  
                         l4198 2F76                           l3806 4872                           l3822 454A  
                         l3814 4464                           l4294 33D2                           l4278 3E94  
                         l4358 4338                           l4470 2B8A                           l4454 2B28  
                         l4462 2B60                           l4446 2ABE                           l4438 2A92  
                         l4288 4790                           l3592 35DE                           l3680 18A2  
                         l3672 1806                           l3664 176A                           l3656 16CE  
                         l3648 1632                           l3760 2956                           l3752 28FE  
                         l3744 2882                           l3736 2806                           l3728 278C  
                         l4392 2DEE                           l4384 2D7E                           l4376 2D0E  
                         l4368 2C9E                           l3920 2552                           l3912 2514  
                         l3904 24DA                           l3840 235A                           l3832 232E  
                         l3584 1EE0                           l3576 1EC4                           l3568 1E80  
                         l3496 1C62                           l3488 1C1C                           l3816 44AA  
                         l3808 4414                           l4296 346A                           l4472 2B96  
                         l4464 2B72                           l4456 2B2E                           l4448 2AD6  
                         l3594 360C                           l3690 197C                           l3682 18E0  
                         l3674 1844                           l3666 17A8                           l3658 170C  
                         l3770 29AE                           l3762 295E                           l3754 2916  
                         l3746 289A                           l3738 281E                           l4386 2D96  
                         l4378 2D26                           l3930 258E                           l3922 255C  
                         l3914 2524                           l3906 24E8                           l3850 2394  
                         l3842 236A                           l3834 233A                           l3586 1EEE  
                         l3578 1ED2                           l3498 1C72                           l3826 44B4  
                         l4298 3482                           l4490 2C1A                           l4482 2BE8  
                         l4474 2BA2                           l4466 2B7E                           l4458 2B34  
                         l4394 2A10                           l3596 361C                           l3692 1984  
                         l3684 18E8                           l3676 184C                           l3668 17B0  
                         l2980 4820                           l3780 29F4                           l3772 29C2  
                         l3764 2962                           l3756 293C                           l3748 28C0  
                         l4388 2DB6                           l3940 2600                           l3932 259C  
                         l3924 256A                           l3916 2536                           l3908 24F4  
                         l3860 23C0                           l3852 239A                           l3844 237A  
                         l3836 2348                           l3588 1EF0                           l3828 44FA  
                         l4484 2BFC                           l4476 2BC6                           l4468 2B84  
                         l4492 2C32                           l4396 2A14                           l3598 364A  
                         l3694 199C                           l3686 1900                           l3678 1864  
                         l3790 45C4                           l2990 4260                           l3782 2A0C  
                         l3766 297A                           l3758 2954                           l3950 266C  
                         l3942 260E                           l3934 25CA                           l3918 254C  
                         l3926 257C                           l3870 23FA                           l3862 23D0  
                         l3854 23A0                           l3846 237C                           l3838 234A  
                         l4486 2C00                           l4478 2BD2                           l4398 2A18  
                         l3696 19DA                           l3688 193E                           l3792 45E0  
                         l3784 45A4                           l2992 4268                           l2984 423E  
                         l3768 2986                           l3776 29CC                           l3960 26BA  
                         l3952 2686                           l3944 2638                           l3928 258A  
                         l3872 2410                           l3864 23E0                           l3856 23AE  
                         l3848 2384                           l4488 2C06                           l3698 1A18  
                         l3786 45B4                           l2994 4276                           l2986 4246  
                         l2978 4804                           l3778 29E0                           l3962 26BC  
                         l3954 26A2                           l3938 25F4                           l3946 263C  
                         l3890 2464                           l3874 2420                           l3882 2440  
                         l3866 23E2                           l3858 23B0                           l3970 1F02  
                         l3796 4746                           l3788 45BC                           l2996 427C  
                         l2988 4258                           l3956 26A6                           l3948 2656  
                         l3892 247E                           l3884 2450                           l3876 2428  
                         l3868 23EA                           l3980 1F40                           l3972 1F10  
                         l3798 474A                           l2998 4292                           l3958 26B4  
                         l3894 248E                           l3886 2450                           l3878 242C  
                         l3990 1F72                           l3982 1F50                           l3974 1F1E  
                         l3896 249E                           l3992 1F80                           l3984 1F56  
                         l3976 1F20                           l3898 24AE                           l3994 1F82  
                         l3986 1F66                           l3978 1F30                           l3996 1F92  
                         l3988 1F6C                           l3998 1FA2                           STR_1 0E01  
                         STR_2 0E10                           STR_3 0E4C                           STR_4 0E3D  
                         STR_5 0E1C                           STR_6 0E36                           STR_7 0E43  
                         STR_8 0E2F                           STR_9 0E11                           u3000 3668  
                         u2120 4258                           u2200 3BA6                           u3001 3664  
                         u2121 4254                           u2201 3BA2                           u3010 3688  
                         u2130 4276                           u2210 3E1C                           u3011 3684  
                         u2131 4272                           u2211 3E18                           u3020 36D8  
                         u3100 176A                           u2220 39A2                           u2140 4292  
                         u3021 36D4                           u3101 1766                           u2221 399E  
                         u2301 32A0                           u2141 428E                           u3110 17A8  
                         u2230 39B4                           u2310 32C2                           u3030 4636  
                         u2150 2FEC                           u3111 17A4                           u2231 39B0  
                         u2311 32BE                           u3031 4632                           u2151 2FE8  
                         u3120 1806                           u3040 159A                           u2240 39DC  
                         u2320 32F4                           u2400 3940                           u2160 30B6  
                         u3200 274A                           u4000 1002                   _BAUD4CONbits 000EE9  
                         u3121 1802                           u3041 1596                           u2241 39D8  
                         u2321 32F0                           u2401 393C                           u2161 30B2  
                         u3201 2746                           u4001 0FFE                           u3130 1844  
                         u3050 15D8                           u2250 3A12                           u2330 3312  
                         u2410 396A                           u2170 3B22                           u3210 278C  
                         u4010 104C                           u3131 1840                           u3051 15D4  
                         u2251 3A0E                           u2331 330E                           u2411 3966  
                         u2171 3B1E                           u3211 2788                           u4011 1048  
                         u3140 18A2                           u3060 1632                           u2260 4586  
                         u2340 3368                           u2180 3B44                           u3300 29E0  
                         u3220 27C8                           u4100 2D0E                           u4020 10E6  
                         u2420 47EC                           u3141 189E                           u3061 162E  
                         u2341 3364                           u2181 3B40                           u3301 29DC  
                         u3221 27C4                           u4101 2D0A                           u4021 10E2  
                         u2421 47E8                           u3150 18E0                           u3070 1670  
                         u3310 477C                           u2270 4596                           u2350 3396  
                         u2190 3B8E                           u2510 4158                           u3230 2806  
                         u4110 2D46                           u4030 112C                           u2430 4802  
                         u3151 18DC                           u3071 166C                           u3311 4778  
                         u2271 4592                           u2191 3B8A                           u2511 4154  
                         u3231 2802                           u4111 2D42                           u4031 1128  
                         u2431 47FE                           u3160 193E                           u3080 16CE  
                         u2360 33D0                           u2280 3D86                           u2520 41D4  
                         u2440 40C4                           u3240 2844                           u4120 2D7E  
                         u3400 24C6                           u3320 2348                           u2600 1A6E  
                         u4040 1260                           u4200 2C46                           u3161 193A  
                         u3081 16CA                           u2361 33CC                           u2281 3D82  
                         u2521 41D0                           u2441 40C0                           u3241 2840  
                         u4121 2D7A                           u3401 24C2                           u3321 2344  
                         u2601 1A6A                           u4041 125C                           u4201 2C42  
                         u3170 197C                           u3090 170C                           u2370 38DC  
                         u2450 3160                           u2290 4144                           u2530 4380  
                         u3250 2882                           u4130 2DB6                           u3410 24E8  
                         u3330 235A                           u2610 1A7E                           u4050 12AA  
                         _T2PR 000FBC                           u3171 1978                           u3091 1708  
                         u2267 457C                           u2371 38D8                           u2451 315C  
                         u2291 4140                           u2531 437C                           u3251 287E  
                         u4131 2DB2                           u3411 24E4                           u3331 2356  
                         u2611 1A7A                           u4051 12A6                           u3180 19DA  
                         u2380 3912                           u2460 31A4                           u2540 36F4  
                         u3260 28C0                           u4140 2DEE                           u3500 25F4  
                         u3420 2512                           u3340 236A                           u2700 1BCA  
                         u2620 1AC0                           u4060 1506                           u2508 46B2  
                         u3181 19D6                           u2357 338C                           u2381 390E  
                         u2461 31A0                           u2541 36F0                           u3261 28BC  
                         u4141 2DEA                           u3501 25F0                           u3421 250E  
                         u3341 2366                           u2621 1ABC                           u4061 1502  
                         u3190 1A18                           u2390 392E                           u2470 31DA  
                         u2550 37DC                           u3270 28FE                           u4070 2C68  
                         u3510 260E                           u3430 2536                           u3350 23AE  
                         u2710 1BF2                           u2630 1AD6                           u4150 2A92  
                         u3191 1A14                           u2391 392A                           u2471 31D6  
                         u2551 37D8                           u3271 28FA                           u4071 2C64  
                         u3511 260A                           u3431 2532                           u3351 23AA  
                         u2711 1BEE                           u2631 1AD2                           u4151 2A8E  
                         u2480 31FE                           u2560 3BBC                           u3280 293C  
                         u4080 2C9E                           u3520 2656                           u3440 254C  
                         u3360 23C0                           u3600 1FA2                           u2800 1D2A  
                         u2720 1C10                           u2640 1AE8                           u4160 2B28  
                         u2481 31FA                           u2561 3BB8                           u3281 2938  
                         u4081 2C9A                           u3521 2652                           u3441 2548  
                         u3361 23BC                           u3601 1F9E                           u2801 1D26  
                         u2721 1C0C                           u2641 1AE4                           u4161 2B24  
                         u2570 3C60                           u3290 29AE                           u4090 2CD6  
                         u3530 2686                           u3450 256A                           u3370 23D0  
                         u3610 1FD8                           u2810 1D60                           u2730 1C30  
                         u2650 1AF8                           u2490 46B0                           u4170 2B72  
                         u2571 3C5C                           u4307 37A6                           u3291 29AA  
                         u4091 2CD2                           u3531 2682                           u3451 2566  
                         u3371 23CC                           u3611 1FD4                           u2811 1D5C  
                         u2731 1C2C                           u2651 1AF4                           u2491 46A8  
                         u4171 2B6E                           u4227 2A9C                           u2580 48C0  
                         u3540 26B4                           u3460 258A                           u3380 2410  
                         u3700 2260                           u3620 1FE8                           u2900 1E2A  
                         u2820 1D70                           u2740 1C3E                           u2660 1B34  
                         u4180 2BE8                           u2581 48BC                           u4317 380E  
                         u3541 26B0                           u3461 2586                           u3381 240C  
                         u3701 225C                           u3621 1FE4                           u2901 1E26  
                         u2821 1D6C                           u2741 1C3A                           u2661 1B30  
                         u4181 2BE4                           u4237 2B52                           u3470 259C  
                         u3390 2450                           u3710 22A8                           u3630 2162  
                         u3550 1F1E                           u2910 1E44                           u2830 1D9C  
                         u2750 1C4E                           u2670 1B42                           u2590 1A5C  
                         u4190 2BFC                           u4407 3F26                           u4327 388E  
                         u3471 2598                           u3391 244C                           u3711 22A4  
                         u3551 1F1A                           u2911 1E40                           u2831 1D98  
                         u2751 1C4A                           u2671 1B3E                           u2591 1A58  
                         u4247 2C24                           u4191 2BF8                           u3480 25CA  
                         u3720 22D6                           u3640 21BC                           u3560 1F30  
                         u2920 1E7E                           u2840 1DAC                           u2760 1C80  
                         u2680 1BB0                           u3800 3564                           u4417 3DF6  
                         u4337 40A0                           u3481 25C6                           u3721 22D2  
                         u3641 21B8                           u3561 1F2C                           u2921 1E7A  
                         u2841 1DA8                           u2761 1C7C                           u2681 1BAC  
                         u3801 3560                           u4257 46DC                           u3490 25E0  
                         u3730 2310                           u3650 21DC                           u3570 1F40  
                         u2930 1E90                           u2850 1DC8                           u2770 1C8E  
                         u2690 1BC8                           u3810 358C                           u4427 3FDE  
                         u4347 3F58                           u4267 2700                           u3491 25DC  
                         u3731 230C                           u3651 21D8                           u3635 2158  
                         u3571 1F3C                           u2931 1E8C                           u2851 1DC4  
                         u2771 1C8A                           u2691 1BC2                           u3811 3588  
                         u3740 3A88                           u3660 21EE                           u3580 1F80  
                         u2940 1EA0                           u2860 1DD8                           u2780 1CAC  
                         u3820 35AC                           u3900 2F66                           u4437 400A  
                         u4357 3F84                           u4277 275A                           u3741 3A84  
                         u3661 21EA                           u3581 1F7C                           u2941 1E9C  
                         u2861 1DD4                           u2781 1CA8                           u3821 35A8  
                         u3901 2F62                           u3750 3AC6                           u3670 221C  
                         u3590 1F92                           u2950 1EC0                           u2870 1DEA  
                         u2790 1CE4                           u3830 35BC                           u3910 2F74  
                         u4447 4036                           u4367 3FAE                           u4287 29FE  
                         u3751 3AC2                           u3671 2218                           u3591 1F8E  
                         u2951 1EBC                           u2871 1DE6                           u2791 1CE0  
                         u3831 35B8                           u3911 2F70                           u3760 3AFA  
                         u3680 2232                           u2960 1ED2                           u2880 1E00  
                         u3920 2FAE                           u3840 2E2E                           u4457 3B6C  
                         u4377 3D60                           u4297 3726                           u3761 3AF6  
                         u3681 222E                           u2961 1ECE                           u2881 1DFC  
                         u3921 2FAA                           u3841 2E2A                           u3690 2246  
                         u2970 1EEE                           u2890 1E16                           u3770 34EE  
                         u3930 2FBC                           u3850 2E3C                           u4467 4120  
                         u4387 3ECE                           u3691 2242                           u2971 1EEA  
                         u2891 1E12                           u3771 34EA                           u3931 2FB8  
                         u3851 2E38                           u3940 4790                           u2980 360C  
                         u3780 3522                           u3860 2E98                           u3941 478C  
                         u2981 3608                           u4477 475E                           u4397 3EFA  
                         u3861 2E94                           u3950 47AA                           u2990 364A  
                         u3790 3550                           u3870 2EEE                           u3951 47A6  
                         u2991 3646                           u3791 354C                           u3871 2EEA  
                         u3880 2F38                           u3960 0E98                           u3785 3518  
                         u3881 2F34                           u3961 0E94                           u3890 2F56  
                         u3970 0EDE                           u3891 2F52                           u3971 0EDA  
                         u3980 0F4E                           u3981 0F4A                           u3990 0F94  
                         u3991 0F90            reverseHalfSquare@mL 001B            reverseHalfSquare@mR 001D  
                         _dbuf 0100                           _main 2A10                           _prec 00DC  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         _stoa 3296                           btemp 005F                           _stop 3B04  
                   _ClickLEDOn 477E                           prodh 000FF4                           prodl 000FF3  
                         start 002C                ___fldiv@new_exp 0043        __end_of_Yellow_rev1_R90 37CA  
       __end_of_color_read_Red 4464                __end_of_HighISR 002C                   ___param_bank 000000  
              __end_of_Red_R90 41C2                     _Hue2Colour 1554                __end_of_Right45 3FC0  
             __end_of_LED_init 48D4                  ___fltol@sign1 0009                __end_of___fladd 1F02  
                        ?_main 0001                __end_of___fldiv 26C8                          STR_10 0E26  
                        STR_11 0E48                          STR_13 0E48                __end_of___flmul 232E  
              __end_of___flsub 4686                __end_of___fltol 35DE                          ?_stoa 000A  
               _LightBlue_L135 3C4E                          ?_stop 0014                __end_of___lwdiv 42B2  
                        i2l662 0028                   vfpfcnvrt@fmt 0022                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 48C6                 memoryUpdate@cf 0007  
   __end_of_I2C_2_Master_Start 490A                          _White 26C8     __end_of_I2C_2_Master_Write 48E0  
                        _flags 00E4                          _fputc 3990              fullSpeedReverse@i 0019  
                        _width 00DA                          _putch 4924                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          stoa@i 0018  
                        stoa@l 001C                          stoa@p 001E                          stoa@s 000C  
                        stoa@w 0016                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 45F2                __end_of_strncmp 3990           __end_of_Color2String 4746  
      __end_of_color_read_Blue 4554          _I2C_2_Master_RepStart 48EC                ?_color_read_Red 0005  
              __initialization 42B2                   __end_of_main 2C4A                   __end_of_stoa 33D2  
                 __end_of_stop 3BAA                ??_rotate180left 0024         __end_of_LightBlue_L135 3CF2  
                       ??_main 005D                         ??_stoa 000E                         ??_stop 0018  
                __activetblptr 000002                      ??_RGB2Hue 0059                  ??_Orange_R135 0025  
                       ?_White 0028                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                _colour_read_all 33D2                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l4500 001A                         i2l4502 0024  
                       _RG6PPS 000E88                         i2l4498 000A                      ??_HighISR 0001  
     __end_of_color_click_init 4708                         _RX4PPS 000E15                         _TX4REG 000EE4  
                  ?_ClickLEDOn 0001               __end_of___xxtofl 2FD0                      ??_Red_R90 0025  
                       _Left45 3EAE                      ??_Right45 001E               _fullSpeedReverse 40C6  
             ?_Yellow_rev1_R90 0021                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0030                         White@i 0036                         ___flge 35DE  
                       ___fleq 3A5A                      ??___fladd 0022                    ?_Hue2Colour 000D  
                       ___wmul 4804                      ??___fldiv 003A                  Orange_R135@mL 0021  
                    ??___flmul 0053                  Orange_R135@mR 0023                      ??___flsub 0032  
                    ??___fltol 0005                      ??___lwdiv 000B                     _TimerReset 490A  
                       _colorf 0170                ?_LightBlue_L135 0021                         clear_0 42F8  
                       clear_1 4304             fullSpeedReverse@mL 0014             fullSpeedReverse@mR 0016  
                       _motorL 00EE                         _motorR 00E5                         isa$std 000001  
                       _strlen 4554                         fputc@c 0001                  ?_memoryUpdate 0007  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         stoa@cp 001A  
                       stoa@fp 000A                         putch@c 0001               __end_of_vfprintf 4640  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0038                      ??_strncmp 0007               __end_of_turnLeft 3E1E  
                   ___flge@ff1 0001                     ___flge@ff2 0005                   ___xxtofl@arg 0016  
                 ___xxtofl@exp 0015                   ___xxtofl@val 000C                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005            __end_of_Orange_R135 3C4E                     __accesstop 0060  
      __end_of__initialization 430A       __end_of_color_read_Clear 4504                fullSpeedAhead@i 0019  
            __end_of_Blue_T180 43C2       __end_of_color_read_Green 44B4         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                      ?_LED_init 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 48E0                 __pcstackCOMRAM 0001  
                __end_of_White 2A10                   __pidataBANK0 4914                   __pidataBANK1 491D  
                __end_of_fputc 3A5A              __end_of_Green_L90 423E                  __end_of_putch 4926  
                    RGB2Hue@cf 0057            __end_of_Timer0_init 484E                    _ForwardFlag 00FF  
               ??_memoryUpdate 000F        __end_of_colour_read_all 34D8                        ??_White 0032  
                      ??_fputc 0005                        ??_putch 0001                     __pbssBANK0 00DA  
                   __pbssBANK1 0100                     ??_LED_init 0001                        ?_Left45 001A  
            _color_writetoaddr 4870                   _T2CLKCONbits 000FBF          __end_of_Colour2Action 2E1C  
                      ?___flge 0001                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001                    ?_TimerReset 0001            ??_color_writetoaddr 0004  
                      ?_strlen 0001          __end_of_getTimerValue 48AE                   _Color2String 4708  
                      _RGB2Hue 0E52                      ?___xxtofl 000C                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                    _Orange_R135 3BAA                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 48EC         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008     memoryUpdate@movementMemory 000B  
    __end_of_color_writetoaddr 4890                        _Red_R90 4146             _I2C_2_Master_Start 4900  
                   _initUSART4 484E             _I2C_2_Master_Write 48D4                        _Right45 3F38  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 482A        sendStringSerial4@string 0002                        White@mL 0028  
                      White@mR 002A                        ___fladd 1A42                        ___fldiv 232E  
                      ___flmul 1F02                        ___flsub 4640                        ___fltol 34D8  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 423E            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 002A                   __psmallconst 0E00                        __pcinit 42B2  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 2A10  
                      __ptext1 4318                        __ptext2 484E                        __ptext3 3E1E  
                      __ptext4 33D2                        __ptext5 4414                        __ptext6 4464  
                      __ptext7 44B4                        __ptext8 4504                        __ptext9 48EC  
                      _maxTime 00E2                      _T2CONbits 000FBD               ?_colour_read_all 001A  
                   ??___xxtofl 0010                 Color2String@cf 0047       __end_of_fullSpeedReverse 4146  
                    _T2HLTbits 000FBE                        _sprintf 45A4           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002                        _strncmp 38B2           end_of_initialization 430A  
         memoryUpdate@timerVal 0011                        fputc@fp 0003                  _Pink_rev1_L90 37CA  
                __Lmediumconst 0000                   ??_ClickLEDOn 0001              ?_color_click_init 0001  
               __45drightdelay 00FB           __end_of_memoryUpdate 436E             ??_color_click_init 0005  
             ??_LightBlue_L135 0025              __end_of_vfpfcnvrt 3296              _reverseHalfSquare 3FC0  
                      postdec1 000FE5                        postdec2 000FDD                   ??_Hue2Colour 000F  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0030             ?_reverseHalfSquare 001B                        strlen@a 0003  
                      strlen@s 0001          __end_of_rotate180left 4414                _initDCmotorsPWM 3E1E  
                   ??_turnLeft 0018               White@timerMemory 0030                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3D88                    ___fladd@grs 0029  
          ??_reverseHalfSquare 001F             __end_of_ClickLEDOn 47B2                  ___xxtofl@sign 0014  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
     color_writetoaddr@address 0004                      Red_R90@mL 0021                      Red_R90@mR 0023  
      ??_I2C_2_Master_RepStart 0002                 _movementMemory 0148             __end_of_Hue2Colour 1A42  
               ?_Pink_rev1_L90 0021               ?_Interrupts_init 0001                    ___flmul@grs 0061  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                Colour2Action@cf 0038  
    __end_of_reverseHalfSquare 4046             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                    _Blue_T180 436E                 __end_of_Left45 3F38                   _RGB2Hue$3148 006D  
               __end_of___flge 36E2                 __end_of___fleq 3B04                 _fullSpeedAhead 4046  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@fp 0020                 __end_of___wmul 482A  
                    _Green_L90 41C2                      Right45@mL 001A                      Right45@mR 001C  
               __end_of_strlen 45A4                     RGB2Hue@max 0071                     RGB2Hue@min 0073  
          color_read_Clear@tmp 000A            start_initialization 42B2                    __halfsquare 00F7  
                     ??_Left45 001E            color_read_Green@tmp 000A        memoryUpdate@timerMemory 000D  
                   ?_Blue_T180 0024        __end_of_initDCmotorsPWM 3EAE                    vfprintf@fmt 002C  
       __end_of_fullSpeedAhead 40C6                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                   ??_TimerReset 0001                    __pdataBANK0 00F7  
                  __pdataBANK1 0186                       ??_strlen 0003                      ___fladd@a 001E  
                    ___fladd@b 001A                ClickLEDOn@power 0001                     ?_Green_L90 0021  
                    ___fldiv@a 0036                      ___fldiv@b 0032                       ?_RGB2Hue 0057  
                    ___flmul@a 004F                      ___flmul@b 004B                      ___flsub@a 002E  
                    ___flsub@b 002A                  __pcstackBANK0 0060                   ?_Orange_R135 0021  
              ??_Pink_rev1_L90 0025                       ?_HighISR 0001             __end_of_TimerReset 4914  
                     ?_Red_R90 0021         Color2String@colourname 0049                       ?_Right45 001A  
             ___lwdiv@dividend 0007                   ?_Timer0_init 0001                ?_fullSpeedAhead 0014  
                    __pintcode 0008                       ?___fladd 001A                       ?___fldiv 0032  
                     ?___flmul 004B                       ?___flsub 002A                       ?___fltol 0001  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
              Pink_rev1_L90@mL 0021                Pink_rev1_L90@mR 0023                    __smallconst 0E00  
            _I2C_2_Master_Idle 47DC              _I2C_2_Master_Init 47B2              _I2C_2_Master_Read 4686  
                __45dleftdelay 00FD                   _memoryUpdate 4318              _I2C_2_Master_Stop 48F6  
       memoryUpdate@colourcode 000F              ?_fullSpeedReverse 0014              ??_Yellow_rev1_R90 0025  
           ?_I2C_2_Master_Idle 0001                rotate180left@mL 0020                rotate180left@mR 0022  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B            White@movementMemory 002E  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0032             ??_fullSpeedReverse 0018  
                     ?_strncmp 0001           Hue2Colour@colourname 000F              colour_read_all@cf 001A  
                 Hue2Colour@cf 000D              _sendStringSerial4 4746            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
                     _LED_init 48C6             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
                  turnRight@mL 0014                    turnRight@mR 0016                       i2u421_40 001A  
                     i2u421_41 0016                       _PIR0bits 000E33                    ??_Blue_T180 0028  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001                       Left45@mL 001A  
                     Left45@mR 001C              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 313C  
    __end_of_I2C_2_Master_Idle 4804      __end_of_I2C_2_Master_Init 47DC      __end_of_I2C_2_Master_Read 46C8  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4900                  _movementCount 00E0  
                  ??_Green_L90 0025                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                      _turnRight 3CF2                  _retracingDone 00DE  
                     __1square 00F9                      copy_data0 42C6                      copy_data1 42E6  
    __end_of_sendStringSerial4 477E  __end_of_I2C_2_Master_RepStart 48F6             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 313C                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 002E                       __Lrparam 0000                     vfprintf@fp 002A  
                _Colour2Action 2C4A                     ?_vfpfcnvrt 0020                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                  _getTimerValue 4890                     sprintf@fmt 0034  
                  Blue_T180@mL 0024                    Blue_T180@mR 0026                       ___xxtofl 2E1C  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4870                ___lwdiv@counter 000D                     ?_turnRight 0014  
                     __ptext10 4686                       __ptext11 46C8                       __ptext20 2E1C  
                     __ptext12 4870                       __ptext21 34D8                       __ptext13 48D4  
                     __ptext30 26C8                       __ptext22 4640                       __ptext14 48F6  
                     __ptext31 4890                       __ptext23 1A42                       __ptext15 4900  
                     __ptext40 3F38                       __ptext32 36E2                       __ptext24 1F02  
                     __ptext16 47DC                       __ptext41 3CF2                       __ptext33 490A  
                     __ptext25 3A5A                       __ptext17 47B2                       __ptext50 4804  
                     __ptext42 436E                       __ptext34 4146                       __ptext26 232E  
                     __ptext18 482A                       __ptext51 423E                       __ptext43 43C2  
                     __ptext35 37CA                       __ptext27 48C6                       __ptext19 0E52  
                     __ptext60 4924                       __ptext52 4708                       __ptext44 3EAE  
                     __ptext36 4046                       __ptext28 48E0                       __ptext61 4746  
                     __ptext53 45A4                       __ptext45 3D88                       __ptext37 3BAA  
                     __ptext29 2C4A                       __ptext62 48AE                       __ptext54 45F2  
                     __ptext46 3FC0                       __ptext38 3C4E                       __ptext63 1554  
                     __ptext55 313C                       __ptext47 3B04                       __ptext39 41C2  
                     __ptext64 35DE                       __ptext56 38B2                       __ptext48 40C6  
                     __ptext65 477E                       __ptext57 3296                       __ptext49 2FD0  
                     __ptext58 4554                       __ptext59 3990                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA             White@movementCount 002C                     turnLeft@mL 0014  
                   turnLeft@mR 0016                Color2String@buf 0045               colour_read_all@B 0024  
             colour_read_all@C 0028               colour_read_all@G 0020               colour_read_all@R 001C  
               White@tempTimer 0034                     turnRight@i 0018               LightBlue_L135@mL 0021  
             LightBlue_L135@mR 0023                      stoa@F1144 0186                 ?_Colour2Action 0038  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 45F2                       main@data 0075              Yellow_rev1_R90@mL 0021  
            Yellow_rev1_R90@mR 0023                       main@wall 00D9                       _turnLeft 3D88  
               ?_getTimerValue 0001                  ?_Color2String 0045                 _vfpfcnvrt$2847 0028  
                   _INTCONbits 000FF2      memoryUpdate@movementCount 0009                    _setMotorPWM 2FD0  
                     intlevel2 0000                      sprintf@ap 0038               ??_fullSpeedAhead 0018  
                    turnLeft@i 0018                      strncmp@_l 0001                      strncmp@_r 0003  
            ??_colour_read_all 001C        getTimerValue@timerCount 0005                _Yellow_rev1_R90 36E2  
                  ??_vfpfcnvrt 0026                       stoa@nuls 000F               _color_click_init 46C8  
                _rotate180left 43C2                 ??_Color2String 0049                       sprintf@f 003A  
                     sprintf@s 0032                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                  _timerMemory 0120                       strncmp@l 0008                       strncmp@n 0005  
                     strncmp@r 000A                    ??_turnRight 0018                  ___fladd@signs 0026  
                   _TX4STAbits 000EE8          __end_of_Pink_rev1_L90 38B2                _sendCharSerial4 48AE  
                 ___fladd@aexp 0027                   ___fladd@bexp 0028                ??_Colour2Action 003A  
