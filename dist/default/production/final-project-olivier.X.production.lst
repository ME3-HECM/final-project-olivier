

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 15:38:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88   000000                     
    89                           ; Generated 06/04/2022 GMT
    90                           ; 
    91                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18LF67K40 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123   000000                     
   124                           	psect	idataBANK0
   125   004A76                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _ForwardFlag
   129   004A76  01                 	db	1
   130                           
   131                           	psect	idataBANK1
   132   004A14                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for stoa@F1144
   136   004A14  28                 	db	40
   137   004A15  6E                 	db	110
   138   004A16  75                 	db	117
   139   004A17  6C                 	db	108
   140   004A18  6C                 	db	108
   141   004A19  29                 	db	41
   142   004A1A  00                 	db	0
   143                           
   144                           ;initializer for __recogniseColour
   145   004A1B  028A               	dw	650
   146                           
   147                           ;initializer for __halfsquare
   148   004A1D  015E               	dw	350
   149                           
   150                           ;initializer for __1square
   151   004A1F  02BC               	dw	700
   152                           
   153                           ;initializer for __45drightdelay
   154   004A21  009B               	dw	155
   155                           
   156                           ;initializer for __45dleftdelay
   157   004A23  0092               	dw	146
   158   000000                     _TX4REG	set	3812
   159   000000                     _RC4STAbits	set	3815
   160   000000                     _SP4BRGH	set	3814
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATDbits	set	3964
   163   000000                     _LATGbits	set	3967
   164   000000                     _TRISEbits	set	3973
   165   000000                     _TRISFbits	set	3974
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _SSP2CON2bits	set	3802
   169   000000                     _RX4PPS	set	3605
   170   000000                     _SSP2CLKPPS	set	3612
   171   000000                     _SSP2DATPPS	set	3613
   172   000000                     _ANSELDbits	set	3751
   173   000000                     _SSP2ADD	set	3798
   174   000000                     _SSP2CON1bits	set	3801
   175   000000                     _RC4REG	set	3811
   176   000000                     _SP4BRGL	set	3813
   177   000000                     _TX4STAbits	set	3816
   178   000000                     _BAUD4CONbits	set	3817
   179   000000                     _SSP2CON2	set	3802
   180   000000                     _TRISDbits	set	3972
   181   000000                     _CCPR4H	set	3873
   182   000000                     _CCPR3H	set	3877
   183   000000                     _SSP2STAT	set	3800
   184   000000                     _ANSELFbits	set	3764
   185   000000                     _SSP2BUF	set	3797
   186   000000                     _PIE0bits	set	3625
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189   000000                     _RC7PPS	set	3689
   190   000000                     _RD5PPS	set	3695
   191   000000                     _RE2PPS	set	3700
   192   000000                     _RD6PPS	set	3696
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _CCP2CONbits	set	4007
   198   000000                     _LATAbits	set	3961
   199   000000                     _CCP3CONbits	set	3878
   200   000000                     _LATCbits	set	3963
   201   000000                     _LATEbits	set	3965
   202   000000                     _TRISCbits	set	3971
   203   000000                     _CCP4CONbits	set	3874
   204   000000                     _TRISHbits	set	3976
   205   000000                     _TRISGbits	set	3975
   206   000000                     _PORTFbits	set	3982
   207   000000                     _TRISAbits	set	3969
   208   000000                     _LATHbits	set	3968
   209   000000                     _RE4PPS	set	3702
   210   000000                     _RG6PPS	set	3720
   211   000000                     _TMR0L	set	4051
   212   000000                     _TMR0H	set	4052
   213   000000                     _T0CON0bits	set	4053
   214   000000                     _T0CON1bits	set	4054
   215   000000                     _T2CLKCONbits	set	4031
   216   000000                     _T2HLTbits	set	4030
   217   000000                     _INTCONbits	set	4082
   218   000000                     _PIE4bits	set	3629
   219   000000                     _PIR0bits	set	3635
   220                           
   221                           	psect	smallconst
   222   000E00                     __psmallconst:
   223                           	callstack 0
   224   000E00  00                 	db	0
   225   000E01                     STR_1:
   226                           
   227                           ; BSR set to: 14
   228   000E01  43                 	db	67	;'C'
   229   000E02  6F                 	db	111	;'o'
   230   000E03  6C                 	db	108	;'l'
   231   000E04  6F                 	db	111	;'o'
   232   000E05  75                 	db	117	;'u'
   233   000E06  72                 	db	114	;'r'
   234   000E07  20                 	db	32
   235   000E08  69                 	db	105	;'i'
   236   000E09  73                 	db	115	;'s'
   237   000E0A  20                 	db	32
   238   000E0B  25                 	db	37
   239   000E0C  73                 	db	115	;'s'
   240   000E0D  20                 	db	32
   241   000E0E  20                 	db	32
   242   000E0F  0D                 	db	13
   243   000E10  00                 	db	0
   244   000E11                     STR_9:
   245                           
   246                           ; BSR set to: 14
   247   000E11  4C                 	db	76	;'L'
   248   000E12  69                 	db	105	;'i'
   249   000E13  67                 	db	103	;'g'
   250   000E14  68                 	db	104	;'h'
   251   000E15  74                 	db	116	;'t'
   252   000E16  20                 	db	32
   253   000E17  42                 	db	66	;'B'
   254   000E18  6C                 	db	108	;'l'
   255   000E19  75                 	db	117	;'u'
   256   000E1A  65                 	db	101	;'e'
   257   000E1B  00                 	db	0
   258   000E1C                     STR_5:
   259                           
   260                           ; BSR set to: 14
   261   000E1C  44                 	db	68	;'D'
   262   000E1D  61                 	db	97	;'a'
   263   000E1E  72                 	db	114	;'r'
   264   000E1F  6B                 	db	107	;'k'
   265   000E20  20                 	db	32
   266   000E21  42                 	db	66	;'B'
   267   000E22  6C                 	db	108	;'l'
   268   000E23  75                 	db	117	;'u'
   269   000E24  65                 	db	101	;'e'
   270   000E25  00                 	db	0
   271   000E26                     STR_10:
   272                           
   273                           ; BSR set to: 14
   274   000E26  45                 	db	69	;'E'
   275   000E27  67                 	db	103	;'g'
   276   000E28  67                 	db	103	;'g'
   277   000E29  73                 	db	115	;'s'
   278   000E2A  68                 	db	104	;'h'
   279   000E2B  65                 	db	101	;'e'
   280   000E2C  6C                 	db	108	;'l'
   281   000E2D  6C                 	db	108	;'l'
   282   000E2E  00                 	db	0
   283   000E2F                     STR_8:
   284                           
   285                           ; BSR set to: 14
   286   000E2F  4F                 	db	79	;'O'
   287   000E30  72                 	db	114	;'r'
   288   000E31  61                 	db	97	;'a'
   289   000E32  6E                 	db	110	;'n'
   290   000E33  67                 	db	103	;'g'
   291   000E34  65                 	db	101	;'e'
   292   000E35  00                 	db	0
   293   000E36                     STR_6:
   294                           
   295                           ; BSR set to: 14
   296   000E36  59                 	db	89	;'Y'
   297   000E37  65                 	db	101	;'e'
   298   000E38  6C                 	db	108	;'l'
   299   000E39  6C                 	db	108	;'l'
   300   000E3A  6F                 	db	111	;'o'
   301   000E3B  77                 	db	119	;'w'
   302   000E3C  00                 	db	0
   303   000E3D                     STR_4:
   304                           
   305                           ; BSR set to: 14
   306   000E3D  47                 	db	71	;'G'
   307   000E3E  72                 	db	114	;'r'
   308   000E3F  65                 	db	101	;'e'
   309   000E40  65                 	db	101	;'e'
   310   000E41  6E                 	db	110	;'n'
   311   000E42  00                 	db	0
   312   000E43                     STR_7:
   313                           
   314                           ; BSR set to: 14
   315   000E43  50                 	db	80	;'P'
   316   000E44  69                 	db	105	;'i'
   317   000E45  6E                 	db	110	;'n'
   318   000E46  6B                 	db	107	;'k'
   319   000E47  00                 	db	0
   320   000E48                     STR_11:
   321                           
   322                           ; BSR set to: 14
   323   000E48  6C                 	db	108	;'l'
   324   000E49  6C                 	db	108	;'l'
   325   000E4A  73                 	db	115	;'s'
   326   000E4B  00                 	db	0
   327   000E4C                     STR_3:
   328                           
   329                           ; BSR set to: 14
   330   000E4C  52                 	db	82	;'R'
   331   000E4D  65                 	db	101	;'e'
   332   000E4E  64                 	db	100	;'d'
   333   000E4F  00                 	db	0
   334   000E50  00                 	db	0	; dummy byte at the end
   335   000000                     
   336                           ; #config settings
   337                           
   338                           	psect	cinit
   339   004452                     __pcinit:
   340                           	callstack 0
   341   004452                     start_initialization:
   342                           	callstack 0
   343   004452                     __initialization:
   344                           	callstack 0
   345                           
   346                           ; Initialize objects allocated to BANK1 (17 bytes)
   347                           ; load TBLPTR registers with __pidataBANK1
   348   004452  0E14               	movlw	low __pidataBANK1
   349   004454  6EF6               	movwf	tblptrl,c
   350   004456  0E4A               	movlw	high __pidataBANK1
   351   004458  6EF7               	movwf	tblptrh,c
   352   00445A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   353   00445C  6EF8               	movwf	tblptru,c
   354   00445E  EE01  F0AE         	lfsr	0,__pdataBANK1
   355   004462  EE10 F011          	lfsr	1,17
   356   004466                     copy_data0:
   357   004466  0009               	tblrd		*+
   358   004468  CFF5 FFEE          	movff	tablat,postinc0
   359   00446C  50E5               	movf	postdec1,w,c
   360   00446E  50E1               	movf	fsr1l,w,c
   361   004470  E1FA               	bnz	copy_data0
   362                           
   363                           ; Initialize objects allocated to BANK0 (1 bytes)
   364                           ; load TBLPTR registers with __pidataBANK0
   365   004472  0E76               	movlw	low __pidataBANK0
   366   004474  6EF6               	movwf	tblptrl,c
   367   004476  0E4A               	movlw	high __pidataBANK0
   368   004478  6EF7               	movwf	tblptrh,c
   369   00447A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   370   00447C  6EF8               	movwf	tblptru,c
   371   00447E  0009               	tblrd		*+	;fetch initializer
   372   004480  CFF5 F0FF          	movff	tablat,__pdataBANK0
   373                           
   374                           ; Clear objects allocated to BANK1 (174 bytes)
   375   004484  EE01  F000         	lfsr	0,__pbssBANK1
   376   004488  0EAE               	movlw	174
   377   00448A                     clear_0:
   378   00448A  6AEE               	clrf	postinc0,c
   379   00448C  06E8               	decf	wreg,f,c
   380   00448E  E1FD               	bnz	clear_0
   381                           
   382                           ; Clear objects allocated to BANK0 (29 bytes)
   383   004490  EE00  F0E2         	lfsr	0,__pbssBANK0
   384   004494  0E1D               	movlw	29
   385   004496                     clear_1:
   386   004496  6AEE               	clrf	postinc0,c
   387   004498  06E8               	decf	wreg,f,c
   388   00449A  E1FD               	bnz	clear_1
   389   00449C                     end_of_initialization:
   390                           	callstack 0
   391   00449C                     __end_of__initialization:
   392                           	callstack 0
   393   00449C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394   00449E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395   0044A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   396   0044A2  6EF8               	movwf	tblptru,c
   397   0044A4  0100               	movlb	0
   398   0044A6  EFB8  F015         	goto	_main	;jump to C main() function
   399                           
   400                           	psect	bssBANK0
   401   0000E2                     __pbssBANK0:
   402                           	callstack 0
   403   0000E2                     _width:
   404                           	callstack 0
   405   0000E2                     	ds	2
   406   0000E4                     _prec:
   407                           	callstack 0
   408   0000E4                     	ds	2
   409   0000E6                     _retracingDone:
   410                           	callstack 0
   411   0000E6                     	ds	2
   412   0000E8                     _movementCount:
   413                           	callstack 0
   414   0000E8                     	ds	2
   415   0000EA                     _maxTime:
   416                           	callstack 0
   417   0000EA                     	ds	2
   418   0000EC                     _flags:
   419                           	callstack 0
   420   0000EC                     	ds	1
   421   0000ED                     _motorR:
   422                           	callstack 0
   423   0000ED                     	ds	9
   424   0000F6                     _motorL:
   425                           	callstack 0
   426   0000F6                     	ds	9
   427                           
   428                           	psect	dataBANK0
   429   0000FF                     __pdataBANK0:
   430                           	callstack 0
   431   0000FF                     _ForwardFlag:
   432                           	callstack 0
   433   0000FF                     	ds	1
   434                           
   435                           	psect	bssBANK1
   436   000100                     __pbssBANK1:
   437                           	callstack 0
   438   000100                     	ds	32
   439   000120                     _timerMemory:
   440                           	callstack 0
   441   000120                     	ds	80
   442   000170                     _movementMemory:
   443                           	callstack 0
   444   000170                     	ds	40
   445   000198                     _colorf:
   446                           	callstack 0
   447   000198                     	ds	22
   448                           
   449                           	psect	dataBANK1
   450   0001AE                     __pdataBANK1:
   451                           	callstack 0
   452   0001AE                     stoa@F1144:
   453                           	callstack 0
   454   0001AE                     	ds	7
   455   0001B5                     __recogniseColour:
   456                           	callstack 0
   457   0001B5                     	ds	2
   458   0001B7                     __halfsquare:
   459                           	callstack 0
   460   0001B7                     	ds	2
   461   0001B9                     __1square:
   462                           	callstack 0
   463   0001B9                     	ds	2
   464   0001BB                     __45drightdelay:
   465                           	callstack 0
   466   0001BB                     	ds	2
   467   0001BD                     __45dleftdelay:
   468                           	callstack 0
   469   0001BD                     	ds	2
   470                           
   471                           	psect	cstackBANK0
   472   000060                     __pcstackBANK0:
   473                           	callstack 0
   474   000060                     White@mL:
   475                           	callstack 0
   476   000060                     Color2String@colourname:
   477                           	callstack 0
   478   000060                     ___fldiv@rem:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x0
   482   000060                     	ds	2
   483   000062                     White@mR:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x2
   487   000062                     	ds	2
   488   000064                     ___fldiv@sign:
   489                           	callstack 0
   490   000064                     White@movementCount:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x4
   494   000064                     	ds	1
   495   000065                     ___fldiv@new_exp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x5
   499   000065                     	ds	1
   500   000066                     White@movementMemory:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504   000066                     	ds	1
   505   000067                     ___fldiv@grs:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x7
   509   000067                     	ds	1
   510   000068                     White@timerMemory:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x8
   514   000068                     	ds	2
   515   00006A                     White@tempTimer:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0xA
   519   00006A                     	ds	1
   520   00006B                     ___fldiv@bexp:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xB
   524   00006B                     	ds	1
   525   00006C                     ___fldiv@aexp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0xC
   529   00006C                     	ds	1
   530   00006D                     RGB2Hue@cf:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xD
   534   00006D                     	ds	1
   535   00006E                     White@i:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xE
   539   00006E                     	ds	1
   540   00006F                     ??_RGB2Hue:
   541                           
   542                           ; 1 bytes @ 0xF
   543   00006F                     	ds	4
   544   000073                     _RGB2Hue$3160:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x13
   548   000073                     	ds	4
   549   000077                     RGB2Hue@max:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x17
   553   000077                     	ds	2
   554   000079                     RGB2Hue@min:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x19
   558   000079                     	ds	2
   559   00007B                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x1B
   562   00007B                     	ds	2
   563   00007D                     main@data:
   564                           	callstack 0
   565                           
   566                           ; 100 bytes @ 0x1D
   567   00007D                     	ds	100
   568   0000E1                     main@wall:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x81
   572   0000E1                     	ds	1
   573                           
   574                           	psect	cstackCOMRAM
   575   000001                     __pcstackCOMRAM:
   576                           	callstack 0
   577   000001                     ??_I2C_2_Master_Idle:
   578   000001                     ?_strlen:
   579                           	callstack 0
   580   000001                     ?_strncmp:
   581                           	callstack 0
   582   000001                     ?___wmul:
   583                           	callstack 0
   584   000001                     ?___fltol:
   585                           	callstack 0
   586   000001                     sendCharSerial4@charToSend:
   587                           	callstack 0
   588   000001                     ClickLEDOn@power:
   589                           	callstack 0
   590   000001                     initDCmotorsPWM@PWMperiod:
   591                           	callstack 0
   592   000001                     memoryUpdateMovement@cf:
   593                           	callstack 0
   594   000001                     ___wmul@multiplier:
   595                           	callstack 0
   596   000001                     fputc@c:
   597                           	callstack 0
   598   000001                     strlen@s:
   599                           	callstack 0
   600   000001                     strncmp@_l:
   601                           	callstack 0
   602   000001                     ___fleq@ff1:
   603                           	callstack 0
   604   000001                     ___fltol@f1:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x0
   608   000001                     	ds	1
   609   000002                     ??_I2C_2_Master_Read:
   610   000002                     I2C_2_Master_Write@data_byte:
   611                           	callstack 0
   612   000002                     sendStringSerial4@string:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x1
   616   000002                     	ds	1
   617   000003                     I2C_2_Master_Read@ack:
   618                           	callstack 0
   619   000003                     color_writetoaddr@value:
   620                           	callstack 0
   621   000003                     memoryUpdateMovement@movementCount:
   622                           	callstack 0
   623   000003                     ___wmul@multiplicand:
   624                           	callstack 0
   625   000003                     fputc@fp:
   626                           	callstack 0
   627   000003                     strlen@a:
   628                           	callstack 0
   629   000003                     strncmp@_r:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2
   633   000003                     	ds	1
   634   000004                     I2C_2_Master_Read@tmp:
   635                           	callstack 0
   636   000004                     color_writetoaddr@address:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x3
   640   000004                     	ds	1
   641   000005                     ??_color_click_init:
   642   000005                     ??_fputc:
   643   000005                     ??___fltol:
   644   000005                     ?_color_read_Red:
   645                           	callstack 0
   646   000005                     ?_color_read_Green:
   647                           	callstack 0
   648   000005                     ?_color_read_Blue:
   649                           	callstack 0
   650   000005                     ?_color_read_Clear:
   651                           	callstack 0
   652   000005                     memoryUpdateMovement@movementMemory:
   653                           	callstack 0
   654   000005                     ___wmul@product:
   655                           	callstack 0
   656   000005                     strncmp@n:
   657                           	callstack 0
   658   000005                     ___fleq@ff2:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x4
   662   000005                     	ds	2
   663   000007                     ??_strncmp:
   664   000007                     ??_color_read_Red:
   665   000007                     ??_color_read_Green:
   666   000007                     ??_color_read_Blue:
   667   000007                     ??_color_read_Clear:
   668   000007                     ?___lwdiv:
   669                           	callstack 0
   670   000007                     memoryUpdateMovement@colourcode:
   671                           	callstack 0
   672   000007                     ___lwdiv@dividend:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676   000007                     	ds	1
   677   000008                     strncmp@l:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x7
   681   000008                     	ds	1
   682   000009                     ??___fleq:
   683   000009                     ___fltol@sign1:
   684                           	callstack 0
   685   000009                     ___lwdiv@divisor:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689   000009                     	ds	1
   690   00000A                     ___fltol@exp1:
   691                           	callstack 0
   692   00000A                     color_read_Red@tmp:
   693                           	callstack 0
   694   00000A                     color_read_Green@tmp:
   695                           	callstack 0
   696   00000A                     color_read_Blue@tmp:
   697                           	callstack 0
   698   00000A                     color_read_Clear@tmp:
   699                           	callstack 0
   700   00000A                     stoa@fp:
   701                           	callstack 0
   702   00000A                     strncmp@r:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x9
   706   00000A                     	ds	1
   707   00000B                     ___lwdiv@quotient:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xA
   711   00000B                     	ds	1
   712   00000C                     ?___xxtofl:
   713                           	callstack 0
   714   00000C                     stoa@s:
   715                           	callstack 0
   716   00000C                     ___xxtofl@val:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0xB
   720   00000C                     	ds	1
   721   00000D                     ___lwdiv@counter:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0xC
   725   00000D                     	ds	1
   726   00000E                     ??_stoa:
   727   00000E                     setMotorPWM@m:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xD
   731   00000E                     	ds	1
   732   00000F                     stoa@nuls:
   733                           	callstack 0
   734                           
   735                           ; 7 bytes @ 0xE
   736   00000F                     	ds	1
   737   000010                     ??_setMotorPWM:
   738   000010                     ??___xxtofl:
   739                           
   740                           ; 1 bytes @ 0xF
   741   000010                     	ds	2
   742   000012                     setMotorPWM@posDuty:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x11
   746   000012                     	ds	1
   747   000013                     setMotorPWM@negDuty:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x12
   751   000013                     	ds	1
   752   000014                     ___xxtofl@sign:
   753                           	callstack 0
   754   000014                     stop@mL:
   755                           	callstack 0
   756   000014                     turnLeft@mL:
   757                           	callstack 0
   758   000014                     turnRight@mL:
   759                           	callstack 0
   760   000014                     fullSpeedAhead@mL:
   761                           	callstack 0
   762   000014                     fullSpeedReverse@mL:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x13
   766   000014                     	ds	1
   767   000015                     ___xxtofl@exp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x14
   771   000015                     	ds	1
   772   000016                     stop@mR:
   773                           	callstack 0
   774   000016                     turnLeft@mR:
   775                           	callstack 0
   776   000016                     turnRight@mR:
   777                           	callstack 0
   778   000016                     fullSpeedAhead@mR:
   779                           	callstack 0
   780   000016                     fullSpeedReverse@mR:
   781                           	callstack 0
   782   000016                     stoa@w:
   783                           	callstack 0
   784   000016                     ___xxtofl@arg:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x15
   788   000016                     	ds	2
   789   000018                     ??_fullSpeedAhead:
   790   000018                     ??_stop:
   791   000018                     ??_fullSpeedReverse:
   792   000018                     turnLeft@i:
   793                           	callstack 0
   794   000018                     turnRight@i:
   795                           	callstack 0
   796   000018                     stoa@i:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x17
   800   000018                     	ds	1
   801   000019                     fullSpeedAhead@i:
   802                           	callstack 0
   803   000019                     fullSpeedReverse@i:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x18
   807   000019                     	ds	1
   808   00001A                     ?___flmul:
   809                           	callstack 0
   810   00001A                     Left45@mL:
   811                           	callstack 0
   812   00001A                     Right45@mL:
   813                           	callstack 0
   814   00001A                     colour_read_all@cf:
   815                           	callstack 0
   816   00001A                     stoa@cp:
   817                           	callstack 0
   818   00001A                     ___flmul@b:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x19
   822   00001A                     	ds	1
   823   00001B                     reverseHalfSquare@mL:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x1A
   827   00001B                     	ds	1
   828   00001C                     Left45@mR:
   829                           	callstack 0
   830   00001C                     Right45@mR:
   831                           	callstack 0
   832   00001C                     stoa@l:
   833                           	callstack 0
   834   00001C                     colour_read_all@R:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x1B
   838   00001C                     	ds	1
   839   00001D                     reverseHalfSquare@mR:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x1C
   843   00001D                     	ds	1
   844   00001E                     ??_Left45:
   845   00001E                     ??_Right45:
   846   00001E                     stoa@p:
   847                           	callstack 0
   848   00001E                     ___flmul@a:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x1D
   852   00001E                     	ds	1
   853   00001F                     ??_reverseHalfSquare:
   854                           
   855                           ; 1 bytes @ 0x1E
   856   00001F                     	ds	1
   857   000020                     rotate180left@mL:
   858                           	callstack 0
   859   000020                     vfpfcnvrt@fp:
   860                           	callstack 0
   861   000020                     colour_read_all@G:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x1F
   865   000020                     	ds	1
   866   000021                     Red_R90@mL:
   867                           	callstack 0
   868   000021                     Green_L90@mL:
   869                           	callstack 0
   870   000021                     Yellow_rev1_R90@mL:
   871                           	callstack 0
   872   000021                     Pink_rev1_L90@mL:
   873                           	callstack 0
   874   000021                     Orange_R135@mL:
   875                           	callstack 0
   876   000021                     LightBlue_L135@mL:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x20
   880   000021                     	ds	1
   881   000022                     ??___flmul:
   882   000022                     rotate180left@mR:
   883                           	callstack 0
   884   000022                     vfpfcnvrt@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	1
   889   000023                     Red_R90@mR:
   890                           	callstack 0
   891   000023                     Green_L90@mR:
   892                           	callstack 0
   893   000023                     Yellow_rev1_R90@mR:
   894                           	callstack 0
   895   000023                     Pink_rev1_L90@mR:
   896                           	callstack 0
   897   000023                     Orange_R135@mR:
   898                           	callstack 0
   899   000023                     LightBlue_L135@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x22
   903   000023                     	ds	1
   904   000024                     Blue_T180@mL:
   905                           	callstack 0
   906   000024                     vfpfcnvrt@ap:
   907                           	callstack 0
   908   000024                     colour_read_all@B:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x23
   912   000024                     	ds	1
   913   000025                     ??_Yellow_rev1_R90:
   914   000025                     ??_Pink_rev1_L90:
   915   000025                     
   916                           ; 1 bytes @ 0x24
   917   000025                     	ds	1
   918   000026                     ??_vfpfcnvrt:
   919   000026                     ___flmul@sign:
   920                           	callstack 0
   921   000026                     Blue_T180@mR:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x25
   925   000026                     	ds	1
   926   000027                     ___flmul@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x26
   930   000027                     	ds	1
   931   000028                     _vfpfcnvrt$2859:
   932                           	callstack 0
   933   000028                     colour_read_all@C:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x27
   937   000028                     	ds	2
   938   00002A                     ?_vfprintf:
   939                           	callstack 0
   940   00002A                     vfprintf@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x29
   944   00002A                     	ds	1
   945   00002B                     ___flmul@aexp:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x2A
   949   00002B                     	ds	1
   950   00002C                     ___flmul@bexp:
   951                           	callstack 0
   952   00002C                     vfprintf@fmt:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2B
   956   00002C                     	ds	1
   957   00002D                     ___flmul@prod:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x2C
   961   00002D                     	ds	1
   962   00002E                     vfprintf@ap:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2D
   966   00002E                     	ds	2
   967   000030                     vfprintf@cfmt:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x2F
   971   000030                     	ds	1
   972   000031                     ___flmul@temp:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x30
   976   000031                     	ds	1
   977   000032                     ?_sprintf:
   978                           	callstack 0
   979   000032                     sprintf@s:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x31
   983   000032                     	ds	1
   984   000033                     ?_getTimerValue:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x32
   988   000033                     	ds	1
   989   000034                     sprintf@fmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x33
   993   000034                     	ds	3
   994   000037                     ??_getTimerValue:
   995                           
   996                           ; 1 bytes @ 0x36
   997   000037                     	ds	1
   998   000038                     sprintf@ap:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x37
  1002   000038                     	ds	1
  1003   000039                     getTimerValue@timerCount:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x38
  1007   000039                     	ds	1
  1008   00003A                     sprintf@f:
  1009                           	callstack 0
  1010                           
  1011                           ; 11 bytes @ 0x39
  1012   00003A                     	ds	1
  1013   00003B                     ?___fladd:
  1014                           	callstack 0
  1015   00003B                     ___fladd@b:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x3A
  1019   00003B                     	ds	4
  1020   00003F                     ___fladd@a:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x3E
  1024   00003F                     	ds	4
  1025   000043                     ??___fladd:
  1026                           
  1027                           ; 1 bytes @ 0x42
  1028   000043                     	ds	4
  1029   000047                     ___fladd@signs:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x46
  1033   000047                     	ds	1
  1034   000048                     ___fladd@aexp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x47
  1038   000048                     	ds	1
  1039   000049                     ___fladd@bexp:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x48
  1043   000049                     	ds	1
  1044   00004A                     ___fladd@grs:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x49
  1048   00004A                     	ds	1
  1049   00004B                     ?___flsub:
  1050                           	callstack 0
  1051   00004B                     memoryUpdateTime@movementCount:
  1052                           	callstack 0
  1053   00004B                     ___flge@ff1:
  1054                           	callstack 0
  1055   00004B                     ___flsub@b:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x4A
  1059   00004B                     	ds	2
  1060   00004D                     memoryUpdateTime@timerMemory:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4C
  1064   00004D                     	ds	2
  1065   00004F                     ___flge@ff2:
  1066                           	callstack 0
  1067   00004F                     ___flsub@a:
  1068                           	callstack 0
  1069   00004F                     _memoryUpdateTime$3162:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x4E
  1073   00004F                     	ds	4
  1074   000053                     ??___flge:
  1075   000053                     ?___fldiv:
  1076                           	callstack 0
  1077   000053                     memoryUpdateTime@timerVal:
  1078                           	callstack 0
  1079   000053                     ___fldiv@b:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x52
  1083   000053                     	ds	4
  1084   000057                     ??_White:
  1085   000057                     ?_Hue2Colour:
  1086                           	callstack 0
  1087   000057                     Hue2Colour@cf:
  1088                           	callstack 0
  1089   000057                     ___fldiv@a:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x56
  1093   000057                     	ds	2
  1094   000059                     Hue2Colour@colourname:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x58
  1098   000059                     	ds	2
  1099   00005B                     ??___fldiv:
  1100   00005B                     Color2String@buf:
  1101                           	callstack 0
  1102   00005B                     Colour2Action@cf:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x5A
  1106   00005B                     	ds	2
  1107   00005D                     Color2String@cf:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x5C
  1111   00005D                     	ds	2
  1112   00005F                     
  1113                           ; 1 bytes @ 0x5E
  1114 ;;
  1115 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1116 ;;
  1117 ;; *************** function _main *****************
  1118 ;; Defined at:
  1119 ;;		line 19 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  data          100   29[BANK0 ] unsigned char [100]
  1124 ;;  buf            20    0        unsigned char [20]
  1125 ;;  PWMcycle        2    0        unsigned int 
  1126 ;;  wall            1  129[BANK0 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1139 ;;      Totals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;Total ram usage:      103 bytes
  1141 ;; Hardware stack levels required when called: 9
  1142 ;; This function calls:
  1143 ;;		_ClickLEDOn
  1144 ;;		_Color2String
  1145 ;;		_Colour2Action
  1146 ;;		_Hue2Colour
  1147 ;;		_I2C_2_Master_Init
  1148 ;;		_Interrupts_init
  1149 ;;		_LED_init
  1150 ;;		_RGB2Hue
  1151 ;;		_Timer0_init
  1152 ;;		_TimerReset
  1153 ;;		___flge
  1154 ;;		_color_click_init
  1155 ;;		_colour_read_all
  1156 ;;		_fullSpeedAhead
  1157 ;;		_initDCmotorsPWM
  1158 ;;		_initUSART4
  1159 ;;		_memoryUpdateMovement
  1160 ;;		_memoryUpdateTime
  1161 ;;		_stop
  1162 ;; This function is called by:
  1163 ;;		Startup code after reset
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text0
  1168   002B70                     __ptext0:
  1169                           	callstack 0
  1170   002B70                     _main:
  1171                           	callstack 22
  1172   002B70                     
  1173                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1174   002B70  ECDD  F024         	call	_initUSART4	;wreg free
  1175   002B74                     
  1176                           ;main.c: 23:     color_click_init();
  1177   002B74  EC02  F024         	call	_color_click_init	;wreg free
  1178   002B78                     
  1179                           ;main.c: 24:     I2C_2_Master_Init();
  1180   002B78  EC8F  F024         	call	_I2C_2_Master_Init	;wreg free
  1181   002B7C                     
  1182                           ;main.c: 25:     LED_init();
  1183   002B7C  EC13  F025         	call	_LED_init	;wreg free
  1184   002B80                     
  1185                           ;main.c: 26:     Interrupts_init();
  1186   002B80  EC20  F025         	call	_Interrupts_init	;wreg free
  1187   002B84                     
  1188                           ;main.c: 27:     Timer0_init();
  1189   002B84  ECCB  F024         	call	_Timer0_init	;wreg free
  1190   002B88                     
  1191                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1192   002B88  0E00               	movlw	0
  1193   002B8A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1194   002B8C  0E63               	movlw	99
  1195   002B8E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1196   002B90  ECAD  F01F         	call	_initDCmotorsPWM	;wreg free
  1197   002B94                     
  1198                           ;main.c: 31:     motorL.power=0;
  1199   002B94  0E00               	movlw	0
  1200   002B96  0100               	movlb	0	; () banked
  1201   002B98  6FF6               	movwf	_motorL& (0+255),b
  1202   002B9A                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 32:     motorL.direction=1;
  1205   002B9A  0E01               	movlw	1
  1206   002B9C  6FF7               	movwf	(_motorL+1)& (0+255),b
  1207   002B9E                     
  1208                           ; BSR set to: 0
  1209                           ;main.c: 33:     motorL.brakemode=1;
  1210   002B9E  0E01               	movlw	1
  1211   002BA0  6FF8               	movwf	(_motorL+2)& (0+255),b
  1212   002BA2                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1215   002BA2  0EAA               	movlw	170
  1216   002BA4  6FFB               	movwf	(_motorL+5)& (0+255),b
  1217   002BA6  0E0F               	movlw	15
  1218   002BA8  6FFC               	movwf	(_motorL+6)& (0+255),b
  1219   002BAA                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1222   002BAA  0EA6               	movlw	166
  1223   002BAC  6FFD               	movwf	(_motorL+7)& (0+255),b
  1224   002BAE  0E0F               	movlw	15
  1225   002BB0  6FFE               	movwf	(_motorL+8)& (0+255),b
  1226   002BB2                     
  1227                           ; BSR set to: 0
  1228                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1229   002BB2  0E00               	movlw	0
  1230   002BB4  6FFA               	movwf	(_motorL+4)& (0+255),b
  1231   002BB6  0E63               	movlw	99
  1232   002BB8  6FF9               	movwf	(_motorL+3)& (0+255),b
  1233   002BBA                     
  1234                           ; BSR set to: 0
  1235                           ;main.c: 38:     motorR.power=0;
  1236   002BBA  0E00               	movlw	0
  1237   002BBC  6FED               	movwf	_motorR& (0+255),b
  1238   002BBE                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 39:     motorR.direction=1;
  1241   002BBE  0E01               	movlw	1
  1242   002BC0  6FEE               	movwf	(_motorR+1)& (0+255),b
  1243   002BC2                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 40:     motorR.brakemode=1;
  1246   002BC2  0E01               	movlw	1
  1247   002BC4  6FEF               	movwf	(_motorR+2)& (0+255),b
  1248   002BC6                     
  1249                           ; BSR set to: 0
  1250                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1251   002BC6  0E25               	movlw	37
  1252   002BC8  6FF2               	movwf	(_motorR+5)& (0+255),b
  1253   002BCA  0E0F               	movlw	15
  1254   002BCC  6FF3               	movwf	(_motorR+6)& (0+255),b
  1255   002BCE                     
  1256                           ; BSR set to: 0
  1257                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1258   002BCE  0E21               	movlw	33
  1259   002BD0  6FF4               	movwf	(_motorR+7)& (0+255),b
  1260   002BD2  0E0F               	movlw	15
  1261   002BD4  6FF5               	movwf	(_motorR+8)& (0+255),b
  1262   002BD6                     
  1263                           ; BSR set to: 0
  1264                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1265   002BD6  0E00               	movlw	0
  1266   002BD8  6FF1               	movwf	(_motorR+4)& (0+255),b
  1267   002BDA  0E63               	movlw	99
  1268   002BDC  6FF0               	movwf	(_motorR+3)& (0+255),b
  1269   002BDE                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1272   002BDE  8486               	bsf	134,2,c	;volatile
  1273   002BE0                     
  1274                           ; BSR set to: 0
  1275                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1276   002BE0  010E               	movlb	14	; () banked
  1277   002BE2  95B4               	bcf	180,2,b	;volatile
  1278   002BE4                     l133:
  1279                           
  1280                           ;main.c: 47:     while(PORTFbits.RF2){
  1281   002BE4  B48E               	btfsc	142,2,c	;volatile
  1282   002BE6  EFF7  F015         	goto	u4191
  1283   002BEA  EFF9  F015         	goto	u4190
  1284   002BEE                     u4191:
  1285   002BEE  EFF2  F015         	goto	l133
  1286   002BF2                     u4190:
  1287   002BF2                     
  1288                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1289   002BF2  0E29               	movlw	41
  1290   002BF4  0100               	movlb	0	; () banked
  1291   002BF6  6F7C               	movwf	(??_main+1)& (0+255),b
  1292   002BF8  0E96               	movlw	150
  1293   002BFA  6F7B               	movwf	??_main& (0+255),b
  1294   002BFC  0E7F               	movlw	127
  1295   002BFE                     u4267:
  1296   002BFE  2EE8               	decfsz	wreg,f,c
  1297   002C00  D7FE               	bra	u4267
  1298   002C02  2F7B               	decfsz	??_main& (0+255),f,b
  1299   002C04  D7FC               	bra	u4267
  1300   002C06  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1301   002C08  D7FA               	bra	u4267
  1302   002C0A                     
  1303                           ;main.c: 50:     TimerReset();
  1304   002C0A  EC35  F025         	call	_TimerReset	;wreg free
  1305   002C0E                     
  1306                           ;main.c: 51:     char wall=0;
  1307   002C0E  0E00               	movlw	0
  1308   002C10  0100               	movlb	0	; () banked
  1309   002C12  6FE1               	movwf	main@wall& (0+255),b
  1310   002C14                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 53:     ClickLEDOn(0);
  1313   002C14  0E00               	movlw	0
  1314   002C16  EC5D  F024         	call	_ClickLEDOn
  1315                           
  1316                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1317   002C1A  EFBB  F016         	goto	l4524
  1318   002C1E                     l4480:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1322   002C1E  0EF6               	movlw	low _motorL
  1323   002C20  6E14               	movwf	fullSpeedAhead@mL^0,c
  1324   002C22  0E00               	movlw	high _motorL
  1325   002C24  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1326   002C26  0EED               	movlw	low _motorR
  1327   002C28  6E16               	movwf	fullSpeedAhead@mR^0,c
  1328   002C2A  0E00               	movlw	high _motorR
  1329   002C2C  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1330   002C2E  ECC2  F020         	call	_fullSpeedAhead	;wreg free
  1331                           
  1332                           ;main.c: 59:         while (!wall){
  1333   002C32  EF6B  F016         	goto	l4498
  1334   002C36                     l4482:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 60:             colour_read_all(&colorf);
  1338   002C36  0E98               	movlw	low _colorf
  1339   002C38  6E1A               	movwf	colour_read_all@cf^0,c
  1340   002C3A  0E01               	movlw	high _colorf
  1341   002C3C  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1342   002C3E  EC7C  F01A         	call	_colour_read_all	;wreg free
  1343   002C42                     
  1344                           ;main.c: 61:             Color2String(data,&colorf);
  1345   002C42  0E7D               	movlw	low main@data
  1346   002C44  6E5B               	movwf	Color2String@buf^0,c
  1347   002C46  0E00               	movlw	high main@data
  1348   002C48  6E5C               	movwf	(Color2String@buf+1)^0,c
  1349   002C4A  0E98               	movlw	low _colorf
  1350   002C4C  6E5D               	movwf	Color2String@cf^0,c
  1351   002C4E  0E01               	movlw	high _colorf
  1352   002C50  6E5E               	movwf	(Color2String@cf+1)^0,c
  1353   002C52  EC22  F024         	call	_Color2String	;wreg free
  1354   002C56                     
  1355                           ;main.c: 64:              if (colorf.Cf<100)
  1356   002C56  C1A4  F04B         	movff	_colorf+12,___flge@ff1
  1357   002C5A  C1A5  F04C         	movff	_colorf+13,___flge@ff1+1
  1358   002C5E  C1A6  F04D         	movff	_colorf+14,___flge@ff1+2
  1359   002C62  C1A7  F04E         	movff	_colorf+15,___flge@ff1+3
  1360   002C66  0E00               	movlw	0
  1361   002C68  6E4F               	movwf	___flge@ff2^0,c
  1362   002C6A  0E00               	movlw	0
  1363   002C6C  6E50               	movwf	(___flge@ff2+1)^0,c
  1364   002C6E  0EC8               	movlw	200
  1365   002C70  6E51               	movwf	(___flge@ff2+2)^0,c
  1366   002C72  0E42               	movlw	66
  1367   002C74  6E52               	movwf	(___flge@ff2+3)^0,c
  1368   002C76  EC82  F01B         	call	___flge	;wreg free
  1369   002C7A  B0D8               	btfsc	status,0,c
  1370   002C7C  EF42  F016         	goto	u4201
  1371   002C80  EF44  F016         	goto	u4200
  1372   002C84                     u4201:
  1373   002C84  EF6B  F016         	goto	l4498
  1374   002C88                     u4200:
  1375   002C88                     
  1376                           ;main.c: 65:              {;main.c: 72:             memoryUpdateTime(movementCount,timer
      +                          Memory);
  1377   002C88  C0E8  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1378   002C8C  C0E9  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1379   002C90  0E20               	movlw	low _timerMemory
  1380   002C92  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1381   002C94  0E01               	movlw	high _timerMemory
  1382   002C96  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1383   002C98  ECCC  F01E         	call	_memoryUpdateTime	;wreg free
  1384   002C9C                     
  1385                           ;main.c: 74:             wall=1;
  1386   002C9C  0E01               	movlw	1
  1387   002C9E  0100               	movlb	0	; () banked
  1388   002CA0  6FE1               	movwf	main@wall& (0+255),b
  1389   002CA2                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 75:             ClickLEDOn(1);
  1392   002CA2  0E01               	movlw	1
  1393   002CA4  EC5D  F024         	call	_ClickLEDOn
  1394   002CA8                     
  1395                           ;main.c: 76:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1396   002CA8  0EA3               	movlw	163
  1397   002CAA  0100               	movlb	0	; () banked
  1398   002CAC  6F7C               	movwf	(??_main+1)& (0+255),b
  1399   002CAE  0E57               	movlw	87
  1400   002CB0  6F7B               	movwf	??_main& (0+255),b
  1401   002CB2  0E02               	movlw	2
  1402   002CB4                     u4277:
  1403   002CB4  2EE8               	decfsz	wreg,f,c
  1404   002CB6  D7FE               	bra	u4277
  1405   002CB8  2F7B               	decfsz	??_main& (0+255),f,b
  1406   002CBA  D7FC               	bra	u4277
  1407   002CBC  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1408   002CBE  D7FA               	bra	u4277
  1409   002CC0  F000               	nop	
  1410   002CC2                     
  1411                           ;main.c: 77:             stop(&motorL,&motorR);
  1412   002CC2  0EF6               	movlw	low _motorL
  1413   002CC4  6E14               	movwf	stop@mL^0,c
  1414   002CC6  0E00               	movlw	high _motorL
  1415   002CC8  6E15               	movwf	(stop@mL+1)^0,c
  1416   002CCA  0EED               	movlw	low _motorR
  1417   002CCC  6E16               	movwf	stop@mR^0,c
  1418   002CCE  0E00               	movlw	high _motorR
  1419   002CD0  6E17               	movwf	(stop@mR+1)^0,c
  1420   002CD2  ECD5  F01D         	call	_stop	;wreg free
  1421   002CD6                     l4498:
  1422                           
  1423                           ;main.c: 59:         while (!wall){
  1424   002CD6  0100               	movlb	0	; () banked
  1425   002CD8  51E1               	movf	main@wall& (0+255),w,b
  1426   002CDA  B4D8               	btfsc	status,2,c
  1427   002CDC  EF72  F016         	goto	u4211
  1428   002CE0  EF74  F016         	goto	u4210
  1429   002CE4                     u4211:
  1430   002CE4  EF1B  F016         	goto	l4482
  1431   002CE8                     u4210:
  1432   002CE8                     
  1433                           ; BSR set to: 0
  1434                           ;main.c: 80:         colour_read_all(&colorf);
  1435   002CE8  0E98               	movlw	low _colorf
  1436   002CEA  6E1A               	movwf	colour_read_all@cf^0,c
  1437   002CEC  0E01               	movlw	high _colorf
  1438   002CEE  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1439   002CF0  EC7C  F01A         	call	_colour_read_all	;wreg free
  1440   002CF4                     
  1441                           ;main.c: 81:         wall=0;
  1442   002CF4  0E00               	movlw	0
  1443   002CF6  0100               	movlb	0	; () banked
  1444   002CF8  6FE1               	movwf	main@wall& (0+255),b
  1445   002CFA                     
  1446                           ; BSR set to: 0
  1447                           ;main.c: 82:         ClickLEDOn(0);
  1448   002CFA  0E00               	movlw	0
  1449   002CFC  EC5D  F024         	call	_ClickLEDOn
  1450   002D00                     
  1451                           ;main.c: 83:         RGB2Hue(&colorf);
  1452   002D00  0E98               	movlw	low _colorf
  1453   002D02  0100               	movlb	0	; () banked
  1454   002D04  6F6D               	movwf	RGB2Hue@cf& (0+255),b
  1455   002D06  0E01               	movlw	high _colorf
  1456   002D08  6F6E               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1457   002D0A  EC29  F007         	call	_RGB2Hue	;wreg free
  1458   002D0E                     
  1459                           ;main.c: 84:         Hue2Colour(&colorf);
  1460   002D0E  0E98               	movlw	low _colorf
  1461   002D10  6E57               	movwf	Hue2Colour@cf^0,c
  1462   002D12  0E01               	movlw	high _colorf
  1463   002D14  6E58               	movwf	(Hue2Colour@cf+1)^0,c
  1464   002D16  ECBF  F00A         	call	_Hue2Colour	;wreg free
  1465   002D1A                     
  1466                           ;main.c: 85:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1467   002D1A  0E98               	movlw	low _colorf
  1468   002D1C  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1469   002D1E  0E01               	movlw	high _colorf
  1470   002D20  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1471   002D22  C0E8  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1472   002D26  C0E9  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1473   002D2A  0E70               	movlw	low _movementMemory
  1474   002D2C  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1475   002D2E  0E01               	movlw	high _movementMemory
  1476   002D30  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1477   002D32  EC77  F024         	call	_memoryUpdateMovement	;wreg free
  1478   002D36                     
  1479                           ;main.c: 86:         Colour2Action(&colorf);
  1480   002D36  0E98               	movlw	low _colorf
  1481   002D38  6E5B               	movwf	Colour2Action@cf^0,c
  1482   002D3A  0E01               	movlw	high _colorf
  1483   002D3C  6E5C               	movwf	(Colour2Action@cf+1)^0,c
  1484   002D3E  ECC7  F016         	call	_Colour2Action	;wreg free
  1485   002D42                     
  1486                           ;main.c: 87:         if (colorf.colourindex == 7)
  1487   002D42  0E07               	movlw	7
  1488   002D44  0101               	movlb	1	; () banked
  1489   002D46  19AC               	xorwf	(_colorf+20)& (0+255),w,b
  1490   002D48  11AD               	iorwf	(_colorf+21)& (0+255),w,b
  1491   002D4A  A4D8               	btfss	status,2,c
  1492   002D4C  EFAA  F016         	goto	u4221
  1493   002D50  EFAC  F016         	goto	u4220
  1494   002D54                     u4221:
  1495   002D54  EFB6  F016         	goto	l4520
  1496   002D58                     u4220:
  1497   002D58                     l4518:
  1498   002D58  0100               	movlb	0	; () banked
  1499   002D5A  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1500   002D5C  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1501   002D5E  B4D8               	btfsc	status,2,c
  1502   002D60  EFB4  F016         	goto	u4231
  1503   002D64  EFB6  F016         	goto	u4230
  1504   002D68                     u4231:
  1505   002D68  EFAC  F016         	goto	l4518
  1506   002D6C                     u4230:
  1507   002D6C                     l4520:
  1508                           
  1509                           ;main.c: 91:         TimerReset();
  1510   002D6C  EC35  F025         	call	_TimerReset	;wreg free
  1511   002D70                     
  1512                           ;main.c: 92:         movementCount++;
  1513   002D70  0100               	movlb	0	; () banked
  1514   002D72  4BE8               	infsnz	_movementCount& (0+255),f,b	;volatile
  1515   002D74  2BE9               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1516   002D76                     l4524:
  1517                           
  1518                           ;main.c: 56:     while (!retracingDone){
  1519   002D76  0100               	movlb	0	; () banked
  1520   002D78  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1521   002D7A  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1522   002D7C  B4D8               	btfsc	status,2,c
  1523   002D7E  EFC3  F016         	goto	u4241
  1524   002D82  EFC5  F016         	goto	u4240
  1525   002D86                     u4241:
  1526   002D86  EF0F  F016         	goto	l4480
  1527   002D8A                     u4240:
  1528   002D8A                     
  1529                           ; BSR set to: 0
  1530   002D8A  EF16  F000         	goto	start
  1531   002D8E                     __end_of_main:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _memoryUpdateTime *****************
  1535 ;; Defined at:
  1536 ;;		line 16 in file "memory.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  movementCoun    2   74[COMRAM] volatile unsigned int 
  1539 ;;  timerMemory     2   76[COMRAM] PTR volatile float 
  1540 ;;		 -> timerMemory(80), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  timerVal        4   82[COMRAM] float 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:       12 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 3
  1559 ;; This function calls:
  1560 ;;		___fladd
  1561 ;;		_getTimerValue
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text1
  1568   003D98                     __ptext1:
  1569                           	callstack 0
  1570   003D98                     _memoryUpdateTime:
  1571                           	callstack 27
  1572   003D98                     
  1573                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1574   003D98  0E00               	movlw	0
  1575   003D9A  6E3F               	movwf	___fladd@a^0,c
  1576   003D9C  0E00               	movlw	0
  1577   003D9E  6E40               	movwf	(___fladd@a+1)^0,c
  1578   003DA0  0EAF               	movlw	175
  1579   003DA2  6E41               	movwf	(___fladd@a+2)^0,c
  1580   003DA4  0EC3               	movlw	195
  1581   003DA6  6E42               	movwf	(___fladd@a+3)^0,c
  1582   003DA8  ECF8  F021         	call	_getTimerValue	;wreg free
  1583   003DAC  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1584   003DB0  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1585   003DB4  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1586   003DB8  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1587   003DBC  EC40  F00D         	call	___fladd	;wreg free
  1588   003DC0  C03B  F04F         	movff	?___fladd,_memoryUpdateTime$3162
  1589   003DC4  C03C  F050         	movff	?___fladd+1,_memoryUpdateTime$3162+1
  1590   003DC8  C03D  F051         	movff	?___fladd+2,_memoryUpdateTime$3162+2
  1591   003DCC  C03E  F052         	movff	?___fladd+3,_memoryUpdateTime$3162+3
  1592   003DD0                     
  1593                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1594   003DD0  C04F  F03B         	movff	_memoryUpdateTime$3162,___fladd@b
  1595   003DD4  C050  F03C         	movff	_memoryUpdateTime$3162+1,___fladd@b+1
  1596   003DD8  C051  F03D         	movff	_memoryUpdateTime$3162+2,___fladd@b+2
  1597   003DDC  C052  F03E         	movff	_memoryUpdateTime$3162+3,___fladd@b+3
  1598   003DE0  0E00               	movlw	0
  1599   003DE2  6E3F               	movwf	___fladd@a^0,c
  1600   003DE4  0E80               	movlw	128
  1601   003DE6  6E40               	movwf	(___fladd@a+1)^0,c
  1602   003DE8  0E22               	movlw	34
  1603   003DEA  6E41               	movwf	(___fladd@a+2)^0,c
  1604   003DEC  0EC4               	movlw	196
  1605   003DEE  6E42               	movwf	(___fladd@a+3)^0,c
  1606   003DF0  EC40  F00D         	call	___fladd	;wreg free
  1607   003DF4  C03B  F053         	movff	?___fladd,memoryUpdateTime@timerVal
  1608   003DF8  C03C  F054         	movff	?___fladd+1,memoryUpdateTime@timerVal+1
  1609   003DFC  C03D  F055         	movff	?___fladd+2,memoryUpdateTime@timerVal+2
  1610   003E00  C03E  F056         	movff	?___fladd+3,memoryUpdateTime@timerVal+3
  1611   003E04                     
  1612                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1613   003E04  90D8               	bcf	status,0,c
  1614   003E06  344B               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1615   003E08  6ED9               	movwf	fsr2l,c
  1616   003E0A  344C               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1617   003E0C  6EDA               	movwf	fsr2h,c
  1618   003E0E  90D8               	bcf	status,0,c
  1619   003E10  36D9               	rlcf	fsr2l,f,c
  1620   003E12  36DA               	rlcf	fsr2h,f,c
  1621   003E14  504D               	movf	memoryUpdateTime@timerMemory^0,w,c
  1622   003E16  26D9               	addwf	fsr2l,f,c
  1623   003E18  504E               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1624   003E1A  22DA               	addwfc	fsr2h,f,c
  1625   003E1C  C053  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1626   003E20  C054  FFDE         	movff	memoryUpdateTime@timerVal+1,postinc2
  1627   003E24  C055  FFDE         	movff	memoryUpdateTime@timerVal+2,postinc2
  1628   003E28  C056  FFDE         	movff	memoryUpdateTime@timerVal+3,postinc2
  1629   003E2C  0012               	return		;funcret
  1630   003E2E                     __end_of_memoryUpdateTime:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _memoryUpdateMovement *****************
  1634 ;; Defined at:
  1635 ;;		line 10 in file "memory.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  cf              2    0[COMRAM] PTR struct RGBC_rel
  1638 ;;		 -> colorf(22), 
  1639 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1640 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1641 ;;		 -> movementMemory(40), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  colourcode      2    6[COMRAM] int 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:        8 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text2
  1668   0048EE                     __ptext2:
  1669                           	callstack 0
  1670   0048EE                     _memoryUpdateMovement:
  1671                           	callstack 29
  1672   0048EE                     
  1673                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC_rel *cf, volatile unsigned int move
      +                          mentCount, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int 
      +                          colourcode = cf->colourindex;
  1674   0048EE  EE20 F014          	lfsr	2,20
  1675   0048F2  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1676   0048F4  26D9               	addwf	fsr2l,f,c
  1677   0048F6  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1678   0048F8  22DA               	addwfc	fsr2h,f,c
  1679   0048FA  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1680   0048FE  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1681                           
  1682                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1683   004902  90D8               	bcf	status,0,c
  1684   004904  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1685   004906  6ED9               	movwf	fsr2l,c
  1686   004908  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1687   00490A  6EDA               	movwf	fsr2h,c
  1688   00490C  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1689   00490E  26D9               	addwf	fsr2l,f,c
  1690   004910  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1691   004912  22DA               	addwfc	fsr2h,f,c
  1692   004914  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1693   004918  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1694   00491C  0012               	return		;funcret
  1695   00491E                     __end_of_memoryUpdateMovement:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _initUSART4 *****************
  1699 ;; Defined at:
  1700 ;;		line 7 in file "serial.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text3
  1729   0049BA                     __ptext3:
  1730                           	callstack 0
  1731   0049BA                     _initUSART4:
  1732                           	callstack 29
  1733   0049BA                     
  1734                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1735   0049BA  8883               	bsf	131,4,c	;volatile
  1736                           
  1737                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1738   0049BC  8283               	bsf	131,1,c	;volatile
  1739   0049BE                     
  1740                           ;serial.c: 10:     RC0PPS = 0x12;
  1741   0049BE  0E12               	movlw	18
  1742   0049C0  010E               	movlb	14	; () banked
  1743   0049C2  6F62               	movwf	98,b	;volatile
  1744                           
  1745                           ;serial.c: 11:     RX4PPS = 0x11;
  1746   0049C4  0E11               	movlw	17
  1747   0049C6  6F15               	movwf	21,b	;volatile
  1748   0049C8                     
  1749                           ; BSR set to: 14
  1750                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1751   0049C8  97E9               	bcf	233,3,b	;volatile
  1752   0049CA                     
  1753                           ; BSR set to: 14
  1754                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1755   0049CA  95E8               	bcf	232,2,b	;volatile
  1756                           
  1757                           ;serial.c: 15:     SP4BRGL = 51;
  1758   0049CC  0E33               	movlw	51
  1759   0049CE  6FE5               	movwf	229,b	;volatile
  1760                           
  1761                           ;serial.c: 16:     SP4BRGH = 0;
  1762   0049D0  0E00               	movlw	0
  1763   0049D2  6FE6               	movwf	230,b	;volatile
  1764   0049D4                     
  1765                           ; BSR set to: 14
  1766                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1767   0049D4  89E7               	bsf	231,4,b	;volatile
  1768   0049D6                     
  1769                           ; BSR set to: 14
  1770                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1771   0049D6  8BE8               	bsf	232,5,b	;volatile
  1772   0049D8                     
  1773                           ; BSR set to: 14
  1774                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1775   0049D8  8FE7               	bsf	231,7,b	;volatile
  1776   0049DA                     
  1777                           ; BSR set to: 14
  1778   0049DA  0012               	return		;funcret
  1779   0049DC                     __end_of_initUSART4:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _initDCmotorsPWM *****************
  1783 ;; Defined at:
  1784 ;;		line 11 in file "dc_motor.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;Total ram usage:        2 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813   003F5A                     __ptext4:
  1814                           	callstack 0
  1815   003F5A                     _initDCmotorsPWM:
  1816                           	callstack 29
  1817   003F5A                     
  1818                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1819   003F5A  9485               	bcf	133,2,c	;volatile
  1820                           
  1821                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1822   003F5C  9E83               	bcf	131,7,c	;volatile
  1823                           
  1824                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1825   003F5E  9885               	bcf	133,4,c	;volatile
  1826                           
  1827                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1828   003F60  9C87               	bcf	135,6,c	;volatile
  1829                           
  1830                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1831   003F62  947D               	bcf	125,2,c	;volatile
  1832                           
  1833                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1834   003F64  9E7B               	bcf	123,7,c	;volatile
  1835                           
  1836                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1837   003F66  987D               	bcf	125,4,c	;volatile
  1838                           
  1839                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1840   003F68  9C7F               	bcf	127,6,c	;volatile
  1841   003F6A                     
  1842                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1843   003F6A  0E05               	movlw	5
  1844   003F6C  010E               	movlb	14	; () banked
  1845   003F6E  6F74               	movwf	116,b	;volatile
  1846                           
  1847                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1848   003F70  0E06               	movlw	6
  1849   003F72  6F76               	movwf	118,b	;volatile
  1850                           
  1851                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1852   003F74  0E07               	movlw	7
  1853   003F76  6F69               	movwf	105,b	;volatile
  1854                           
  1855                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1856   003F78  0E08               	movlw	8
  1857   003F7A  6F88               	movwf	136,b	;volatile
  1858                           
  1859                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1860   003F7C  50BD               	movf	189,w,c	;volatile
  1861   003F7E  0B8F               	andlw	-113
  1862   003F80  0940               	iorlw	64
  1863   003F82  6EBD               	movwf	189,c	;volatile
  1864                           
  1865                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1866   003F84  0EE0               	movlw	-32
  1867   003F86  16BE               	andwf	190,f,c	;volatile
  1868                           
  1869                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1870   003F88  50BF               	movf	191,w,c	;volatile
  1871   003F8A  0BF0               	andlw	-16
  1872   003F8C  0901               	iorlw	1
  1873   003F8E  6EBF               	movwf	191,c	;volatile
  1874   003F90                     
  1875                           ; BSR set to: 14
  1876                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1877   003F90  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1878   003F94                     
  1879                           ; BSR set to: 14
  1880                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1881   003F94  8EBD               	bsf	189,7,c	;volatile
  1882                           
  1883                           ;dc_motor.c: 40:     CCPR1H=0;
  1884   003F96  0E00               	movlw	0
  1885   003F98  6EAA               	movwf	170,c	;volatile
  1886                           
  1887                           ;dc_motor.c: 41:     CCPR2H=0;
  1888   003F9A  0E00               	movlw	0
  1889   003F9C  6EA6               	movwf	166,c	;volatile
  1890                           
  1891                           ;dc_motor.c: 42:     CCPR3H=0;
  1892   003F9E  0E00               	movlw	0
  1893   003FA0  010F               	movlb	15	; () banked
  1894   003FA2  6F25               	movwf	37,b	;volatile
  1895                           
  1896                           ;dc_motor.c: 43:     CCPR4H=0;
  1897   003FA4  0E00               	movlw	0
  1898   003FA6  6F21               	movwf	33,b	;volatile
  1899                           
  1900                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1901   003FA8  0EFC               	movlw	-4
  1902   003FAA  16AD               	andwf	173,f,c	;volatile
  1903                           
  1904                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1905   003FAC  0EF3               	movlw	-13
  1906   003FAE  16AD               	andwf	173,f,c	;volatile
  1907                           
  1908                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1909   003FB0  0ECF               	movlw	-49
  1910   003FB2  16AD               	andwf	173,f,c	;volatile
  1911                           
  1912                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1913   003FB4  0E3F               	movlw	-193
  1914   003FB6  16AD               	andwf	173,f,c	;volatile
  1915   003FB8                     
  1916                           ; BSR set to: 15
  1917                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1918   003FB8  88AB               	bsf	171,4,c	;volatile
  1919                           
  1920                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1921   003FBA  50AB               	movf	171,w,c	;volatile
  1922   003FBC  0BF0               	andlw	-16
  1923   003FBE  090C               	iorlw	12
  1924   003FC0  6EAB               	movwf	171,c	;volatile
  1925   003FC2                     
  1926                           ; BSR set to: 15
  1927                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1928   003FC2  8EAB               	bsf	171,7,c	;volatile
  1929   003FC4                     
  1930                           ; BSR set to: 15
  1931                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1932   003FC4  88A7               	bsf	167,4,c	;volatile
  1933                           
  1934                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1935   003FC6  50A7               	movf	167,w,c	;volatile
  1936   003FC8  0BF0               	andlw	-16
  1937   003FCA  090C               	iorlw	12
  1938   003FCC  6EA7               	movwf	167,c	;volatile
  1939   003FCE                     
  1940                           ; BSR set to: 15
  1941                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1942   003FCE  8EA7               	bsf	167,7,c	;volatile
  1943   003FD0                     
  1944                           ; BSR set to: 15
  1945                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1946   003FD0  8926               	bsf	38,4,b	;volatile
  1947                           
  1948                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1949   003FD2  5126               	movf	38,w,b	;volatile
  1950   003FD4  0BF0               	andlw	-16
  1951   003FD6  090C               	iorlw	12
  1952   003FD8  6F26               	movwf	38,b	;volatile
  1953   003FDA                     
  1954                           ; BSR set to: 15
  1955                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1956   003FDA  8F26               	bsf	38,7,b	;volatile
  1957   003FDC                     
  1958                           ; BSR set to: 15
  1959                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1960   003FDC  8922               	bsf	34,4,b	;volatile
  1961                           
  1962                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1963   003FDE  5122               	movf	34,w,b	;volatile
  1964   003FE0  0BF0               	andlw	-16
  1965   003FE2  090C               	iorlw	12
  1966   003FE4  6F22               	movwf	34,b	;volatile
  1967   003FE6                     
  1968                           ; BSR set to: 15
  1969                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1970   003FE6  8F22               	bsf	34,7,b	;volatile
  1971   003FE8                     
  1972                           ; BSR set to: 15
  1973   003FE8  0012               	return		;funcret
  1974   003FEA                     __end_of_initDCmotorsPWM:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _colour_read_all *****************
  1978 ;; Defined at:
  1979 ;;		line 8 in file "colorfunctions.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1982 ;;		 -> colorf(22), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  C               4   39[COMRAM] float 
  1985 ;;  B               4   35[COMRAM] float 
  1986 ;;  G               4   31[COMRAM] float 
  1987 ;;  R               4   27[COMRAM] float 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:       18 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 4
  2004 ;; This function calls:
  2005 ;;		___xxtofl
  2006 ;;		_color_read_Blue
  2007 ;;		_color_read_Clear
  2008 ;;		_color_read_Green
  2009 ;;		_color_read_Red
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text5
  2016   0034F8                     __ptext5:
  2017                           	callstack 0
  2018   0034F8                     _colour_read_all:
  2019                           	callstack 26
  2020   0034F8                     
  2021                           ;colorfunctions.c: 10:     float R = color_read_Red();
  2022   0034F8  ECA8  F022         	call	_color_read_Red	;wreg free
  2023   0034FC  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2024   003500  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2025   003504  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2026   003506  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2027   003508  0E00               	movlw	0
  2028   00350A  ECA1  F017         	call	___xxtofl
  2029   00350E  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  2030   003512  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  2031   003516  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  2032   00351A  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  2033                           
  2034                           ;colorfunctions.c: 11:     float G= color_read_Green();
  2035   00351E  ECD0  F022         	call	_color_read_Green	;wreg free
  2036   003522  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2037   003526  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2038   00352A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2039   00352C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2040   00352E  0E00               	movlw	0
  2041   003530  ECA1  F017         	call	___xxtofl
  2042   003534  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  2043   003538  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  2044   00353C  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  2045   003540  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  2046                           
  2047                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  2048   003544  EC20  F023         	call	_color_read_Blue	;wreg free
  2049   003548  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2050   00354C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2051   003550  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2052   003552  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2053   003554  0E00               	movlw	0
  2054   003556  ECA1  F017         	call	___xxtofl
  2055   00355A  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  2056   00355E  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  2057   003562  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  2058   003566  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  2059                           
  2060                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  2061   00356A  ECF8  F022         	call	_color_read_Clear	;wreg free
  2062   00356E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2063   003572  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2064   003576  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2065   003578  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2066   00357A  0E00               	movlw	0
  2067   00357C  ECA1  F017         	call	___xxtofl
  2068   003580  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  2069   003584  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  2070   003588  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  2071   00358C  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  2072   003590                     
  2073                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  2074   003590  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  2075   003594  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  2076   003598  C01C  FFDE         	movff	colour_read_all@R,postinc2
  2077   00359C  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  2078   0035A0  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  2079   0035A4  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  2080   0035A8                     
  2081                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2082   0035A8  EE20 F008          	lfsr	2,8
  2083   0035AC  501A               	movf	colour_read_all@cf^0,w,c
  2084   0035AE  26D9               	addwf	fsr2l,f,c
  2085   0035B0  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2086   0035B2  22DA               	addwfc	fsr2h,f,c
  2087   0035B4  C024  FFDE         	movff	colour_read_all@B,postinc2
  2088   0035B8  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  2089   0035BC  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  2090   0035C0  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  2091   0035C4                     
  2092                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2093   0035C4  EE20 F004          	lfsr	2,4
  2094   0035C8  501A               	movf	colour_read_all@cf^0,w,c
  2095   0035CA  26D9               	addwf	fsr2l,f,c
  2096   0035CC  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2097   0035CE  22DA               	addwfc	fsr2h,f,c
  2098   0035D0  C020  FFDE         	movff	colour_read_all@G,postinc2
  2099   0035D4  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  2100   0035D8  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  2101   0035DC  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  2102   0035E0                     
  2103                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2104   0035E0  EE20 F00C          	lfsr	2,12
  2105   0035E4  501A               	movf	colour_read_all@cf^0,w,c
  2106   0035E6  26D9               	addwf	fsr2l,f,c
  2107   0035E8  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2108   0035EA  22DA               	addwfc	fsr2h,f,c
  2109   0035EC  C028  FFDE         	movff	colour_read_all@C,postinc2
  2110   0035F0  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2111   0035F4  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2112   0035F8  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2113   0035FC  0012               	return		;funcret
  2114   0035FE                     __end_of_colour_read_all:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _color_read_Red *****************
  2118 ;; Defined at:
  2119 ;;		line 38 in file "colorclick.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  tmp             2    9[COMRAM] unsigned int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    4[COMRAM] unsigned int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;Total ram usage:        7 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 3
  2140 ;; This function calls:
  2141 ;;		_I2C_2_Master_Read
  2142 ;;		_I2C_2_Master_RepStart
  2143 ;;		_I2C_2_Master_Start
  2144 ;;		_I2C_2_Master_Stop
  2145 ;;		_I2C_2_Master_Write
  2146 ;; This function is called by:
  2147 ;;		_colour_read_all
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text6
  2152   004550                     __ptext6:
  2153                           	callstack 0
  2154   004550                     _color_read_Red:
  2155                           	callstack 26
  2156   004550                     
  2157                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2158   004550  EC30  F025         	call	_I2C_2_Master_Start	;wreg free
  2159                           
  2160                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2161   004554  0E52               	movlw	82
  2162   004556  EC1A  F025         	call	_I2C_2_Master_Write
  2163                           
  2164                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2165   00455A  0EB6               	movlw	182
  2166   00455C  EC1A  F025         	call	_I2C_2_Master_Write
  2167                           
  2168                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2169   004560  EC26  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2170                           
  2171                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2172   004564  0E53               	movlw	83
  2173   004566  EC1A  F025         	call	_I2C_2_Master_Write
  2174                           
  2175                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2176   00456A  0E01               	movlw	1
  2177   00456C  ECE1  F023         	call	_I2C_2_Master_Read
  2178   004570  6E07               	movwf	??_color_read_Red^0,c
  2179   004572  5007               	movf	??_color_read_Red^0,w,c
  2180   004574  6E0A               	movwf	color_read_Red@tmp^0,c
  2181   004576  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2182                           
  2183                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2184   004578  0E00               	movlw	0
  2185   00457A  ECE1  F023         	call	_I2C_2_Master_Read
  2186   00457E  6E07               	movwf	??_color_read_Red^0,c
  2187   004580  5007               	movf	??_color_read_Red^0,w,c
  2188   004582  6E09               	movwf	(??_color_read_Red+2)^0,c
  2189   004584  6A08               	clrf	(??_color_read_Red+1)^0,c
  2190   004586  500A               	movf	color_read_Red@tmp^0,w,c
  2191   004588  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2192   00458A  6E0A               	movwf	color_read_Red@tmp^0,c
  2193   00458C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2194   00458E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2195   004590  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2196                           
  2197                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2198   004592  EC2B  F025         	call	_I2C_2_Master_Stop	;wreg free
  2199   004596                     
  2200                           ;colorclick.c: 49:  return tmp;
  2201   004596  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2202   00459A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2203   00459E  0012               	return		;funcret
  2204   0045A0                     __end_of_color_read_Red:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _color_read_Green *****************
  2208 ;; Defined at:
  2209 ;;		line 51 in file "colorclick.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  tmp             2    9[COMRAM] unsigned int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2    4[COMRAM] unsigned int 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;Total ram usage:        7 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 3
  2230 ;; This function calls:
  2231 ;;		_I2C_2_Master_Read
  2232 ;;		_I2C_2_Master_RepStart
  2233 ;;		_I2C_2_Master_Start
  2234 ;;		_I2C_2_Master_Stop
  2235 ;;		_I2C_2_Master_Write
  2236 ;; This function is called by:
  2237 ;;		_colour_read_all
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text7
  2242   0045A0                     __ptext7:
  2243                           	callstack 0
  2244   0045A0                     _color_read_Green:
  2245                           	callstack 26
  2246   0045A0                     
  2247                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2248   0045A0  EC30  F025         	call	_I2C_2_Master_Start	;wreg free
  2249                           
  2250                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2251   0045A4  0E52               	movlw	82
  2252   0045A6  EC1A  F025         	call	_I2C_2_Master_Write
  2253                           
  2254                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2255   0045AA  0EB8               	movlw	184
  2256   0045AC  EC1A  F025         	call	_I2C_2_Master_Write
  2257                           
  2258                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2259   0045B0  EC26  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2260                           
  2261                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2262   0045B4  0E53               	movlw	83
  2263   0045B6  EC1A  F025         	call	_I2C_2_Master_Write
  2264                           
  2265                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2266   0045BA  0E01               	movlw	1
  2267   0045BC  ECE1  F023         	call	_I2C_2_Master_Read
  2268   0045C0  6E07               	movwf	??_color_read_Green^0,c
  2269   0045C2  5007               	movf	??_color_read_Green^0,w,c
  2270   0045C4  6E0A               	movwf	color_read_Green@tmp^0,c
  2271   0045C6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2272                           
  2273                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2274   0045C8  0E00               	movlw	0
  2275   0045CA  ECE1  F023         	call	_I2C_2_Master_Read
  2276   0045CE  6E07               	movwf	??_color_read_Green^0,c
  2277   0045D0  5007               	movf	??_color_read_Green^0,w,c
  2278   0045D2  6E09               	movwf	(??_color_read_Green+2)^0,c
  2279   0045D4  6A08               	clrf	(??_color_read_Green+1)^0,c
  2280   0045D6  500A               	movf	color_read_Green@tmp^0,w,c
  2281   0045D8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2282   0045DA  6E0A               	movwf	color_read_Green@tmp^0,c
  2283   0045DC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2284   0045DE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2285   0045E0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2286                           
  2287                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2288   0045E2  EC2B  F025         	call	_I2C_2_Master_Stop	;wreg free
  2289   0045E6                     
  2290                           ;colorclick.c: 62:     return tmp;
  2291   0045E6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2292   0045EA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2293   0045EE  0012               	return		;funcret
  2294   0045F0                     __end_of_color_read_Green:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _color_read_Clear *****************
  2298 ;; Defined at:
  2299 ;;		line 80 in file "colorclick.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  tmp             2    9[COMRAM] unsigned int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    4[COMRAM] unsigned int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2317 ;;Total ram usage:        7 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 3
  2320 ;; This function calls:
  2321 ;;		_I2C_2_Master_Read
  2322 ;;		_I2C_2_Master_RepStart
  2323 ;;		_I2C_2_Master_Start
  2324 ;;		_I2C_2_Master_Stop
  2325 ;;		_I2C_2_Master_Write
  2326 ;; This function is called by:
  2327 ;;		_colour_read_all
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text8
  2332   0045F0                     __ptext8:
  2333                           	callstack 0
  2334   0045F0                     _color_read_Clear:
  2335                           	callstack 26
  2336   0045F0                     
  2337                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2338   0045F0  EC30  F025         	call	_I2C_2_Master_Start	;wreg free
  2339                           
  2340                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2341   0045F4  0E52               	movlw	82
  2342   0045F6  EC1A  F025         	call	_I2C_2_Master_Write
  2343                           
  2344                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2345   0045FA  0EB4               	movlw	180
  2346   0045FC  EC1A  F025         	call	_I2C_2_Master_Write
  2347                           
  2348                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2349   004600  EC26  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2350                           
  2351                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2352   004604  0E53               	movlw	83
  2353   004606  EC1A  F025         	call	_I2C_2_Master_Write
  2354                           
  2355                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2356   00460A  0E01               	movlw	1
  2357   00460C  ECE1  F023         	call	_I2C_2_Master_Read
  2358   004610  6E07               	movwf	??_color_read_Clear^0,c
  2359   004612  5007               	movf	??_color_read_Clear^0,w,c
  2360   004614  6E0A               	movwf	color_read_Clear@tmp^0,c
  2361   004616  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2362                           
  2363                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2364   004618  0E00               	movlw	0
  2365   00461A  ECE1  F023         	call	_I2C_2_Master_Read
  2366   00461E  6E07               	movwf	??_color_read_Clear^0,c
  2367   004620  5007               	movf	??_color_read_Clear^0,w,c
  2368   004622  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2369   004624  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2370   004626  500A               	movf	color_read_Clear@tmp^0,w,c
  2371   004628  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2372   00462A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2373   00462C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2374   00462E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2375   004630  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2376                           
  2377                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2378   004632  EC2B  F025         	call	_I2C_2_Master_Stop	;wreg free
  2379   004636                     
  2380                           ;colorclick.c: 91:     return tmp;
  2381   004636  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2382   00463A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2383   00463E  0012               	return		;funcret
  2384   004640                     __end_of_color_read_Clear:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _color_read_Blue *****************
  2388 ;; Defined at:
  2389 ;;		line 65 in file "colorclick.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  tmp             2    9[COMRAM] unsigned int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    4[COMRAM] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;Total ram usage:        7 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 3
  2410 ;; This function calls:
  2411 ;;		_I2C_2_Master_Read
  2412 ;;		_I2C_2_Master_RepStart
  2413 ;;		_I2C_2_Master_Start
  2414 ;;		_I2C_2_Master_Stop
  2415 ;;		_I2C_2_Master_Write
  2416 ;; This function is called by:
  2417 ;;		_colour_read_all
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text9
  2422   004640                     __ptext9:
  2423                           	callstack 0
  2424   004640                     _color_read_Blue:
  2425                           	callstack 26
  2426   004640                     
  2427                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2428   004640  EC30  F025         	call	_I2C_2_Master_Start	;wreg free
  2429                           
  2430                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2431   004644  0E52               	movlw	82
  2432   004646  EC1A  F025         	call	_I2C_2_Master_Write
  2433                           
  2434                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2435   00464A  0EBA               	movlw	186
  2436   00464C  EC1A  F025         	call	_I2C_2_Master_Write
  2437                           
  2438                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2439   004650  EC26  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2440                           
  2441                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2442   004654  0E53               	movlw	83
  2443   004656  EC1A  F025         	call	_I2C_2_Master_Write
  2444                           
  2445                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2446   00465A  0E01               	movlw	1
  2447   00465C  ECE1  F023         	call	_I2C_2_Master_Read
  2448   004660  6E07               	movwf	??_color_read_Blue^0,c
  2449   004662  5007               	movf	??_color_read_Blue^0,w,c
  2450   004664  6E0A               	movwf	color_read_Blue@tmp^0,c
  2451   004666  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2452                           
  2453                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2454   004668  0E00               	movlw	0
  2455   00466A  ECE1  F023         	call	_I2C_2_Master_Read
  2456   00466E  6E07               	movwf	??_color_read_Blue^0,c
  2457   004670  5007               	movf	??_color_read_Blue^0,w,c
  2458   004672  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2459   004674  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2460   004676  500A               	movf	color_read_Blue@tmp^0,w,c
  2461   004678  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2462   00467A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2463   00467C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2464   00467E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2465   004680  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2466                           
  2467                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2468   004682  EC2B  F025         	call	_I2C_2_Master_Stop	;wreg free
  2469   004686                     
  2470                           ;colorclick.c: 76:     return tmp;
  2471   004686  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2472   00468A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2473   00468E  0012               	return		;funcret
  2474   004690                     __end_of_color_read_Blue:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _I2C_2_Master_RepStart *****************
  2478 ;; Defined at:
  2479 ;;		line 33 in file "i2c.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 2
  2500 ;; This function calls:
  2501 ;;		_I2C_2_Master_Idle
  2502 ;; This function is called by:
  2503 ;;		_color_read_Red
  2504 ;;		_color_read_Green
  2505 ;;		_color_read_Blue
  2506 ;;		_color_read_Clear
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text10
  2511   004A4C                     __ptext10:
  2512                           	callstack 0
  2513   004A4C                     _I2C_2_Master_RepStart:
  2514                           	callstack 26
  2515   004A4C                     
  2516                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2517   004A4C  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2518   004A50                     
  2519                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2520   004A50  010E               	movlb	14	; () banked
  2521   004A52  83DA               	bsf	218,1,b	;volatile
  2522   004A54                     
  2523                           ; BSR set to: 14
  2524   004A54  0012               	return		;funcret
  2525   004A56                     __end_of_I2C_2_Master_RepStart:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _I2C_2_Master_Read *****************
  2529 ;; Defined at:
  2530 ;;		line 51 in file "i2c.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  ack             1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  ack             1    2[COMRAM] unsigned char 
  2535 ;;  tmp             1    3[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      unsigned char 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;Total ram usage:        3 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		_I2C_2_Master_Idle
  2554 ;; This function is called by:
  2555 ;;		_color_read_Red
  2556 ;;		_color_read_Green
  2557 ;;		_color_read_Blue
  2558 ;;		_color_read_Clear
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text11
  2563   0047C2                     __ptext11:
  2564                           	callstack 0
  2565   0047C2                     _I2C_2_Master_Read:
  2566                           	callstack 26
  2567                           
  2568                           ; BSR set to: 14
  2569                           ;incstack = 0
  2570                           ;I2C_2_Master_Read@ack stored from wreg
  2571   0047C2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2572   0047C4                     
  2573                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2574   0047C4  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2575   0047C8                     
  2576                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2577   0047C8  010E               	movlb	14	; () banked
  2578   0047CA  87DA               	bsf	218,3,b	;volatile
  2579                           
  2580                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2581   0047CC  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2582   0047D0                     
  2583                           ;i2c.c: 57:   tmp = SSP2BUF;
  2584   0047D0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2585                           
  2586                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2587   0047D4  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2588   0047D8                     
  2589                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2590   0047D8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2591   0047DA  B4D8               	btfsc	status,2,c
  2592   0047DC  EFF2  F023         	goto	u2791
  2593   0047E0  EFF6  F023         	goto	u2790
  2594   0047E4                     u2791:
  2595   0047E4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2596   0047E6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2597   0047E8  EFF7  F023         	goto	u2808
  2598   0047EC                     u2790:
  2599   0047EC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2600   0047EE                     u2808:
  2601   0047EE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2602   0047F0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2603   0047F2  010E               	movlb	14	; () banked
  2604   0047F4  51DA               	movf	218,w,b	;volatile
  2605   0047F6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2606   0047F8  0BDF               	andlw	-33
  2607   0047FA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2608   0047FC  6FDA               	movwf	218,b	;volatile
  2609   0047FE                     
  2610                           ; BSR set to: 14
  2611                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2612   0047FE  89DA               	bsf	218,4,b	;volatile
  2613   004800                     
  2614                           ; BSR set to: 14
  2615                           ;i2c.c: 61:   return tmp;
  2616   004800  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2617   004802                     
  2618                           ; BSR set to: 14
  2619   004802  0012               	return		;funcret
  2620   004804                     __end_of_I2C_2_Master_Read:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _color_click_init *****************
  2624 ;; Defined at:
  2625 ;;		line 6 in file "colorclick.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 4
  2646 ;; This function calls:
  2647 ;;		_I2C_2_Master_Init
  2648 ;;		_color_writetoaddr
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text12
  2655   004804                     __ptext12:
  2656                           	callstack 0
  2657   004804                     _color_click_init:
  2658                           	callstack 26
  2659   004804                     
  2660                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2661   004804  EC8F  F024         	call	_I2C_2_Master_Init	;wreg free
  2662   004808                     
  2663                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2664   004808  0E01               	movlw	1
  2665   00480A  6E03               	movwf	color_writetoaddr@value^0,c
  2666   00480C  0E00               	movlw	0
  2667   00480E  ECEE  F024         	call	_color_writetoaddr
  2668   004812                     
  2669                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2670   004812  0E3F               	movlw	63
  2671   004814  6E05               	movwf	??_color_click_init^0,c
  2672   004816  0E55               	movlw	85
  2673   004818                     u4287:
  2674   004818  2EE8               	decfsz	wreg,f,c
  2675   00481A  D7FE               	bra	u4287
  2676   00481C  2E05               	decfsz	??_color_click_init^0,f,c
  2677   00481E  D7FC               	bra	u4287
  2678   004820  F000               	nop	
  2679   004822                     
  2680                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2681   004822  0E03               	movlw	3
  2682   004824  6E03               	movwf	color_writetoaddr@value^0,c
  2683   004826  0E00               	movlw	0
  2684   004828  ECEE  F024         	call	_color_writetoaddr
  2685   00482C                     
  2686                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2687   00482C  0ED6               	movlw	214
  2688   00482E  6E03               	movwf	color_writetoaddr@value^0,c
  2689   004830  0E01               	movlw	1
  2690   004832  ECEE  F024         	call	_color_writetoaddr
  2691   004836                     
  2692                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2693   004836  927F               	bcf	127,1,c	;volatile
  2694   004838                     
  2695                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2696   004838  9287               	bcf	135,1,c	;volatile
  2697   00483A                     
  2698                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2699   00483A  9879               	bcf	121,4,c	;volatile
  2700   00483C                     
  2701                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2702   00483C  9881               	bcf	129,4,c	;volatile
  2703   00483E                     
  2704                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2705   00483E  9E7E               	bcf	126,7,c	;volatile
  2706   004840                     
  2707                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2708   004840  9E86               	bcf	134,7,c	;volatile
  2709   004842  0012               	return		;funcret
  2710   004844                     __end_of_color_click_init:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _color_writetoaddr *****************
  2714 ;; Defined at:
  2715 ;;		line 30 in file "colorclick.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  address         1    wreg     unsigned char 
  2718 ;;  value           1    2[COMRAM] unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  address         1    3[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2730 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;Total ram usage:        2 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 3
  2737 ;; This function calls:
  2738 ;;		_I2C_2_Master_Start
  2739 ;;		_I2C_2_Master_Stop
  2740 ;;		_I2C_2_Master_Write
  2741 ;; This function is called by:
  2742 ;;		_color_click_init
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text13
  2747   0049DC                     __ptext13:
  2748                           	callstack 0
  2749   0049DC                     _color_writetoaddr:
  2750                           	callstack 26
  2751                           
  2752                           ;incstack = 0
  2753                           ;color_writetoaddr@address stored from wreg
  2754   0049DC  6E04               	movwf	color_writetoaddr@address^0,c
  2755   0049DE                     
  2756                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2757   0049DE  EC30  F025         	call	_I2C_2_Master_Start	;wreg free
  2758                           
  2759                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2760   0049E2  0E52               	movlw	82
  2761   0049E4  EC1A  F025         	call	_I2C_2_Master_Write
  2762                           
  2763                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2764   0049E8  5004               	movf	color_writetoaddr@address^0,w,c
  2765   0049EA  0980               	iorlw	128
  2766   0049EC  EC1A  F025         	call	_I2C_2_Master_Write
  2767                           
  2768                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2769   0049F0  5003               	movf	color_writetoaddr@value^0,w,c
  2770   0049F2  EC1A  F025         	call	_I2C_2_Master_Write
  2771                           
  2772                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2773   0049F6  EC2B  F025         	call	_I2C_2_Master_Stop	;wreg free
  2774   0049FA  0012               	return		;funcret
  2775   0049FC                     __end_of_color_writetoaddr:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _I2C_2_Master_Write *****************
  2779 ;; Defined at:
  2780 ;;		line 45 in file "i2c.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  data_byte       1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  data_byte       1    1[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 2
  2801 ;; This function calls:
  2802 ;;		_I2C_2_Master_Idle
  2803 ;; This function is called by:
  2804 ;;		_color_writetoaddr
  2805 ;;		_color_read_Red
  2806 ;;		_color_read_Green
  2807 ;;		_color_read_Blue
  2808 ;;		_color_read_Clear
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text14
  2813   004A34                     __ptext14:
  2814                           	callstack 0
  2815   004A34                     _I2C_2_Master_Write:
  2816                           	callstack 26
  2817                           
  2818                           ;incstack = 0
  2819                           ;I2C_2_Master_Write@data_byte stored from wreg
  2820   004A34  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2821   004A36                     
  2822                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2823   004A36  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2824   004A3A                     
  2825                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2826   004A3A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2827   004A3E  0012               	return		;funcret
  2828   004A40                     __end_of_I2C_2_Master_Write:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _I2C_2_Master_Stop *****************
  2832 ;; Defined at:
  2833 ;;		line 39 in file "i2c.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 2
  2854 ;; This function calls:
  2855 ;;		_I2C_2_Master_Idle
  2856 ;; This function is called by:
  2857 ;;		_color_writetoaddr
  2858 ;;		_color_read_Red
  2859 ;;		_color_read_Green
  2860 ;;		_color_read_Blue
  2861 ;;		_color_read_Clear
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text15
  2866   004A56                     __ptext15:
  2867                           	callstack 0
  2868   004A56                     _I2C_2_Master_Stop:
  2869                           	callstack 26
  2870   004A56                     
  2871                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2872   004A56  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2873   004A5A                     
  2874                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2875   004A5A  010E               	movlb	14	; () banked
  2876   004A5C  85DA               	bsf	218,2,b	;volatile
  2877   004A5E                     
  2878                           ; BSR set to: 14
  2879   004A5E  0012               	return		;funcret
  2880   004A60                     __end_of_I2C_2_Master_Stop:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _I2C_2_Master_Start *****************
  2884 ;; Defined at:
  2885 ;;		line 27 in file "i2c.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 2
  2906 ;; This function calls:
  2907 ;;		_I2C_2_Master_Idle
  2908 ;; This function is called by:
  2909 ;;		_color_writetoaddr
  2910 ;;		_color_read_Red
  2911 ;;		_color_read_Green
  2912 ;;		_color_read_Blue
  2913 ;;		_color_read_Clear
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text16
  2918   004A60                     __ptext16:
  2919                           	callstack 0
  2920   004A60                     _I2C_2_Master_Start:
  2921                           	callstack 26
  2922   004A60                     
  2923                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2924   004A60  ECA4  F024         	call	_I2C_2_Master_Idle	;wreg free
  2925   004A64                     
  2926                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2927   004A64  010E               	movlb	14	; () banked
  2928   004A66  81DA               	bsf	218,0,b	;volatile
  2929   004A68                     
  2930                           ; BSR set to: 14
  2931   004A68  0012               	return		;funcret
  2932   004A6A                     __end_of_I2C_2_Master_Start:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _I2C_2_Master_Idle *****************
  2936 ;; Defined at:
  2937 ;;		line 22 in file "i2c.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_I2C_2_Master_Start
  2962 ;;		_I2C_2_Master_RepStart
  2963 ;;		_I2C_2_Master_Stop
  2964 ;;		_I2C_2_Master_Write
  2965 ;;		_I2C_2_Master_Read
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text17
  2970   004948                     __ptext17:
  2971                           	callstack 0
  2972   004948                     _I2C_2_Master_Idle:
  2973                           	callstack 26
  2974   004948                     l30:
  2975   004948  010E               	movlb	14	; () banked
  2976   00494A  B5D8               	btfsc	216,2,b	;volatile
  2977   00494C  EFAA  F024         	goto	u2441
  2978   004950  EFAC  F024         	goto	u2440
  2979   004954                     u2441:
  2980   004954  EFA4  F024         	goto	l30
  2981   004958                     u2440:
  2982   004958                     
  2983                           ; BSR set to: 14
  2984   004958  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2985   00495C  0E1F               	movlw	31
  2986   00495E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2987   004960  A4D8               	btfss	status,2,c
  2988   004962  EFB5  F024         	goto	u2451
  2989   004966  EFB7  F024         	goto	u2450
  2990   00496A                     u2451:
  2991   00496A  EFA4  F024         	goto	l30
  2992   00496E                     u2450:
  2993   00496E                     
  2994                           ; BSR set to: 14
  2995   00496E  0012               	return		;funcret
  2996   004970                     __end_of_I2C_2_Master_Idle:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _I2C_2_Master_Init *****************
  3000 ;; Defined at:
  3001 ;;		line 4 in file "i2c.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;;		_color_click_init
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text18
  3031   00491E                     __ptext18:
  3032                           	callstack 0
  3033   00491E                     _I2C_2_Master_Init:
  3034                           	callstack 28
  3035   00491E                     
  3036                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3037   00491E  010E               	movlb	14	; () banked
  3038   004920  51D9               	movf	217,w,b	;volatile
  3039   004922  0BF0               	andlw	-16
  3040   004924  0908               	iorlw	8
  3041   004926  6FD9               	movwf	217,b	;volatile
  3042   004928                     
  3043                           ; BSR set to: 14
  3044                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3045   004928  8BD9               	bsf	217,5,b	;volatile
  3046                           
  3047                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3048   00492A  0E9F               	movlw	159
  3049   00492C  6FD6               	movwf	214,b	;volatile
  3050   00492E                     
  3051                           ; BSR set to: 14
  3052                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3053   00492E  8A84               	bsf	132,5,c	;volatile
  3054   004930                     
  3055                           ; BSR set to: 14
  3056                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3057   004930  8C84               	bsf	132,6,c	;volatile
  3058   004932                     
  3059                           ; BSR set to: 14
  3060                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3061   004932  9BA7               	bcf	167,5,b	;volatile
  3062   004934                     
  3063                           ; BSR set to: 14
  3064                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3065   004934  9DA7               	bcf	167,6,b	;volatile
  3066                           
  3067                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3068   004936  0E1D               	movlw	29
  3069   004938  6F1D               	movwf	29,b	;volatile
  3070                           
  3071                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3072   00493A  0E1E               	movlw	30
  3073   00493C  6F1C               	movwf	28,b	;volatile
  3074                           
  3075                           ;i2c.c: 18:   RD5PPS=0x1C;
  3076   00493E  0E1C               	movlw	28
  3077   004940  6F6F               	movwf	111,b	;volatile
  3078                           
  3079                           ;i2c.c: 19:   RD6PPS=0x1B;
  3080   004942  0E1B               	movlw	27
  3081   004944  6F70               	movwf	112,b	;volatile
  3082   004946                     
  3083                           ; BSR set to: 14
  3084   004946  0012               	return		;funcret
  3085   004948                     __end_of_I2C_2_Master_Init:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _Timer0_init *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "timer.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text19
  3119   004996                     __ptext19:
  3120                           	callstack 0
  3121   004996                     _Timer0_init:
  3122                           	callstack 29
  3123   004996                     
  3124                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3125   004996  50D6               	movf	214,w,c	;volatile
  3126   004998  0B1F               	andlw	-225
  3127   00499A  0940               	iorlw	64
  3128   00499C  6ED6               	movwf	214,c	;volatile
  3129   00499E                     
  3130                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3131   00499E  88D6               	bsf	214,4,c	;volatile
  3132                           
  3133                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3134   0049A0  50D6               	movf	214,w,c	;volatile
  3135   0049A2  0BF0               	andlw	-16
  3136   0049A4  090D               	iorlw	13
  3137   0049A6  6ED6               	movwf	214,c	;volatile
  3138   0049A8                     
  3139                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3140   0049A8  88D5               	bsf	213,4,c	;volatile
  3141   0049AA                     
  3142                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3143   0049AA  010E               	movlb	14	; () banked
  3144   0049AC  8B29               	bsf	41,5,b	;volatile
  3145                           
  3146                           ;timer.c: 17:     TMR0H=0;
  3147   0049AE  0E00               	movlw	0
  3148   0049B0  6ED4               	movwf	212,c	;volatile
  3149                           
  3150                           ;timer.c: 18:     TMR0L=0;
  3151   0049B2  0E00               	movlw	0
  3152   0049B4  6ED3               	movwf	211,c	;volatile
  3153   0049B6                     
  3154                           ; BSR set to: 14
  3155                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3156   0049B6  8ED5               	bsf	213,7,c	;volatile
  3157   0049B8                     
  3158                           ; BSR set to: 14
  3159   0049B8  0012               	return		;funcret
  3160   0049BA                     __end_of_Timer0_init:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _RGB2Hue *****************
  3164 ;; Defined at:
  3165 ;;		line 23 in file "colorfunctions.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  cf              2   13[BANK0 ] PTR struct RGBC_rel
  3168 ;;		 -> colorf(22), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  min             2   25[BANK0 ] int 
  3171 ;;  max             2   23[BANK0 ] int 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;Total ram usage:       14 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 3
  3188 ;; This function calls:
  3189 ;;		___fladd
  3190 ;;		___fldiv
  3191 ;;		___fleq
  3192 ;;		___flge
  3193 ;;		___flmul
  3194 ;;		___flsub
  3195 ;;		___fltol
  3196 ;;		___xxtofl
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text20
  3203   000E52                     __ptext20:
  3204                           	callstack 0
  3205   000E52                     _RGB2Hue:
  3206                           	callstack 27
  3207   000E52                     
  3208                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3209   000E52  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3210   000E56  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3211   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3212   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3213   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3214   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3215   000E6A  0100               	movlb	0	; () banked
  3216   000E6C  EE20 F004          	lfsr	2,4
  3217   000E70  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3218   000E72  26D9               	addwf	fsr2l,f,c
  3219   000E74  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3220   000E76  22DA               	addwfc	fsr2h,f,c
  3221   000E78  CFDE F005          	movff	postinc2,___fleq@ff2
  3222   000E7C  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3223   000E80  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3224   000E84  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3225   000E88  ECD8  F01C         	call	___fleq	;wreg free
  3226   000E8C  A0D8               	btfss	status,0,c
  3227   000E8E  EF4B  F007         	goto	u4011
  3228   000E92  EF4D  F007         	goto	u4010
  3229   000E96                     u4011:
  3230   000E96  EF82  F007         	goto	l4354
  3231   000E9A                     u4010:
  3232   000E9A  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3233   000E9E  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3234   000EA2  CFDE F001          	movff	postinc2,___fleq@ff1
  3235   000EA6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3236   000EAA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3237   000EAE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3238   000EB2  0100               	movlb	0	; () banked
  3239   000EB4  EE20 F008          	lfsr	2,8
  3240   000EB8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3241   000EBA  26D9               	addwf	fsr2l,f,c
  3242   000EBC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3243   000EBE  22DA               	addwfc	fsr2h,f,c
  3244   000EC0  CFDE F005          	movff	postinc2,___fleq@ff2
  3245   000EC4  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3246   000EC8  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3247   000ECC  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3248   000ED0  ECD8  F01C         	call	___fleq	;wreg free
  3249   000ED4  A0D8               	btfss	status,0,c
  3250   000ED6  EF6F  F007         	goto	u4021
  3251   000EDA  EF71  F007         	goto	u4020
  3252   000EDE                     u4021:
  3253   000EDE  EF82  F007         	goto	l4354
  3254   000EE2                     u4020:
  3255   000EE2                     
  3256                           ;colorfunctions.c: 25:         cf->h=0;
  3257   000EE2  0100               	movlb	0	; () banked
  3258   000EE4  EE20 F010          	lfsr	2,16
  3259   000EE8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3260   000EEA  26D9               	addwf	fsr2l,f,c
  3261   000EEC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3262   000EEE  22DA               	addwfc	fsr2h,f,c
  3263   000EF0  0E00               	movlw	0
  3264   000EF2  6EDE               	movwf	postinc2,c
  3265   000EF4  0E00               	movlw	0
  3266   000EF6  6EDE               	movwf	postinc2,c
  3267   000EF8  0E00               	movlw	0
  3268   000EFA  6EDE               	movwf	postinc2,c
  3269   000EFC  0E00               	movlw	0
  3270   000EFE  6EDD               	movwf	postdec2,c
  3271                           
  3272                           ;colorfunctions.c: 26:     } else{
  3273   000F00  EFBE  F00A         	goto	l563
  3274   000F04                     l4354:
  3275                           
  3276                           ;colorfunctions.c: 28:         signed int min=0;
  3277   000F04  0E00               	movlw	0
  3278   000F06  0100               	movlb	0	; () banked
  3279   000F08  6F7A               	movwf	(RGB2Hue@min+1)& (0+255),b
  3280   000F0A  0E00               	movlw	0
  3281   000F0C  6F79               	movwf	RGB2Hue@min& (0+255),b
  3282   000F0E                     
  3283                           ; BSR set to: 0
  3284                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3285   000F0E  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3286   000F12  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3287   000F16  CFDE F04B          	movff	postinc2,___flge@ff1
  3288   000F1A  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3289   000F1E  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3290   000F22  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3291   000F26  EE20 F004          	lfsr	2,4
  3292   000F2A  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3293   000F2C  26D9               	addwf	fsr2l,f,c
  3294   000F2E  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3295   000F30  22DA               	addwfc	fsr2h,f,c
  3296   000F32  CFDE F04F          	movff	postinc2,___flge@ff2
  3297   000F36  CFDE F050          	movff	postinc2,___flge@ff2+1
  3298   000F3A  CFDE F051          	movff	postinc2,___flge@ff2+2
  3299   000F3E  CFDE F052          	movff	postinc2,___flge@ff2+3
  3300   000F42  EC82  F01B         	call	___flge	;wreg free
  3301   000F46  B0D8               	btfsc	status,0,c
  3302   000F48  EFA8  F007         	goto	u4031
  3303   000F4C  EFAA  F007         	goto	u4030
  3304   000F50                     u4031:
  3305   000F50  EFE2  F007         	goto	l4362
  3306   000F54                     u4030:
  3307   000F54  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3308   000F58  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3309   000F5C  CFDE F04B          	movff	postinc2,___flge@ff1
  3310   000F60  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3311   000F64  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3312   000F68  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3313   000F6C  0100               	movlb	0	; () banked
  3314   000F6E  EE20 F008          	lfsr	2,8
  3315   000F72  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3316   000F74  26D9               	addwf	fsr2l,f,c
  3317   000F76  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3318   000F78  22DA               	addwfc	fsr2h,f,c
  3319   000F7A  CFDE F04F          	movff	postinc2,___flge@ff2
  3320   000F7E  CFDE F050          	movff	postinc2,___flge@ff2+1
  3321   000F82  CFDE F051          	movff	postinc2,___flge@ff2+2
  3322   000F86  CFDE F052          	movff	postinc2,___flge@ff2+3
  3323   000F8A  EC82  F01B         	call	___flge	;wreg free
  3324   000F8E  B0D8               	btfsc	status,0,c
  3325   000F90  EFCC  F007         	goto	u4041
  3326   000F94  EFCE  F007         	goto	u4040
  3327   000F98                     u4041:
  3328   000F98  EFE2  F007         	goto	l4362
  3329   000F9C                     u4040:
  3330   000F9C                     
  3331                           ;colorfunctions.c: 31:             min=cf->Rf;
  3332   000F9C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3333   000FA0  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3334   000FA4  CFDE F001          	movff	postinc2,___fltol@f1
  3335   000FA8  CFDE F002          	movff	postinc2,___fltol@f1+1
  3336   000FAC  CFDE F003          	movff	postinc2,___fltol@f1+2
  3337   000FB0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3338   000FB4  ECFF  F01A         	call	___fltol	;wreg free
  3339   000FB8  C001  F079         	movff	?___fltol,RGB2Hue@min
  3340   000FBC  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3341                           
  3342                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3343   000FC0  EF58  F008         	goto	l555
  3344   000FC4                     l4362:
  3345   000FC4  0100               	movlb	0	; () banked
  3346   000FC6  EE20 F004          	lfsr	2,4
  3347   000FCA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3348   000FCC  26D9               	addwf	fsr2l,f,c
  3349   000FCE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3350   000FD0  22DA               	addwfc	fsr2h,f,c
  3351   000FD2  CFDE F04B          	movff	postinc2,___flge@ff1
  3352   000FD6  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3353   000FDA  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3354   000FDE  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3355   000FE2  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3356   000FE6  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3357   000FEA  CFDE F04F          	movff	postinc2,___flge@ff2
  3358   000FEE  CFDE F050          	movff	postinc2,___flge@ff2+1
  3359   000FF2  CFDE F051          	movff	postinc2,___flge@ff2+2
  3360   000FF6  CFDE F052          	movff	postinc2,___flge@ff2+3
  3361   000FFA  EC82  F01B         	call	___flge	;wreg free
  3362   000FFE  B0D8               	btfsc	status,0,c
  3363   001000  EF04  F008         	goto	u4051
  3364   001004  EF06  F008         	goto	u4050
  3365   001008                     u4051:
  3366   001008  EF43  F008         	goto	l4368
  3367   00100C                     u4050:
  3368   00100C  0100               	movlb	0	; () banked
  3369   00100E  EE20 F004          	lfsr	2,4
  3370   001012  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3371   001014  26D9               	addwf	fsr2l,f,c
  3372   001016  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3373   001018  22DA               	addwfc	fsr2h,f,c
  3374   00101A  CFDE F04B          	movff	postinc2,___flge@ff1
  3375   00101E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3376   001022  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3377   001026  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3378   00102A  EE20 F008          	lfsr	2,8
  3379   00102E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3380   001030  26D9               	addwf	fsr2l,f,c
  3381   001032  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3382   001034  22DA               	addwfc	fsr2h,f,c
  3383   001036  CFDE F04F          	movff	postinc2,___flge@ff2
  3384   00103A  CFDE F050          	movff	postinc2,___flge@ff2+1
  3385   00103E  CFDE F051          	movff	postinc2,___flge@ff2+2
  3386   001042  CFDE F052          	movff	postinc2,___flge@ff2+3
  3387   001046  EC82  F01B         	call	___flge	;wreg free
  3388   00104A  B0D8               	btfsc	status,0,c
  3389   00104C  EF2A  F008         	goto	u4061
  3390   001050  EF2C  F008         	goto	u4060
  3391   001054                     u4061:
  3392   001054  EF43  F008         	goto	l4368
  3393   001058                     u4060:
  3394   001058                     
  3395                           ;colorfunctions.c: 33:             min=cf->Gf;
  3396   001058  0100               	movlb	0	; () banked
  3397   00105A  EE20 F004          	lfsr	2,4
  3398   00105E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3399   001060  26D9               	addwf	fsr2l,f,c
  3400   001062  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3401   001064  22DA               	addwfc	fsr2h,f,c
  3402   001066  CFDE F001          	movff	postinc2,___fltol@f1
  3403   00106A  CFDE F002          	movff	postinc2,___fltol@f1+1
  3404   00106E  CFDE F003          	movff	postinc2,___fltol@f1+2
  3405   001072  CFDE F004          	movff	postinc2,___fltol@f1+3
  3406   001076  ECFF  F01A         	call	___fltol	;wreg free
  3407   00107A  C001  F079         	movff	?___fltol,RGB2Hue@min
  3408   00107E  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3409                           
  3410                           ;colorfunctions.c: 34:         } else{
  3411   001082  EF58  F008         	goto	l555
  3412   001086                     l4368:
  3413                           
  3414                           ;colorfunctions.c: 35:             min=cf->Bf;
  3415   001086  0100               	movlb	0	; () banked
  3416   001088  EE20 F008          	lfsr	2,8
  3417   00108C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3418   00108E  26D9               	addwf	fsr2l,f,c
  3419   001090  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3420   001092  22DA               	addwfc	fsr2h,f,c
  3421   001094  CFDE F001          	movff	postinc2,___fltol@f1
  3422   001098  CFDE F002          	movff	postinc2,___fltol@f1+1
  3423   00109C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3424   0010A0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3425   0010A4  ECFF  F01A         	call	___fltol	;wreg free
  3426   0010A8  C001  F079         	movff	?___fltol,RGB2Hue@min
  3427   0010AC  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3428   0010B0                     l555:
  3429                           
  3430                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3431   0010B0  0100               	movlb	0	; () banked
  3432   0010B2  EE20 F004          	lfsr	2,4
  3433   0010B6  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3434   0010B8  26D9               	addwf	fsr2l,f,c
  3435   0010BA  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3436   0010BC  22DA               	addwfc	fsr2h,f,c
  3437   0010BE  CFDE F04B          	movff	postinc2,___flge@ff1
  3438   0010C2  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3439   0010C6  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3440   0010CA  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3441   0010CE  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3442   0010D2  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3443   0010D6  CFDE F04F          	movff	postinc2,___flge@ff2
  3444   0010DA  CFDE F050          	movff	postinc2,___flge@ff2+1
  3445   0010DE  CFDE F051          	movff	postinc2,___flge@ff2+2
  3446   0010E2  CFDE F052          	movff	postinc2,___flge@ff2+3
  3447   0010E6  EC82  F01B         	call	___flge	;wreg free
  3448   0010EA  B0D8               	btfsc	status,0,c
  3449   0010EC  EF7A  F008         	goto	u4071
  3450   0010F0  EF7C  F008         	goto	u4070
  3451   0010F4                     u4071:
  3452   0010F4  EF19  F009         	goto	l4376
  3453   0010F8                     u4070:
  3454   0010F8  0100               	movlb	0	; () banked
  3455   0010FA  EE20 F008          	lfsr	2,8
  3456   0010FE  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3457   001100  26D9               	addwf	fsr2l,f,c
  3458   001102  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3459   001104  22DA               	addwfc	fsr2h,f,c
  3460   001106  CFDE F04B          	movff	postinc2,___flge@ff1
  3461   00110A  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3462   00110E  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3463   001112  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3464   001116  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3465   00111A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3466   00111E  CFDE F04F          	movff	postinc2,___flge@ff2
  3467   001122  CFDE F050          	movff	postinc2,___flge@ff2+1
  3468   001126  CFDE F051          	movff	postinc2,___flge@ff2+2
  3469   00112A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3470   00112E  EC82  F01B         	call	___flge	;wreg free
  3471   001132  B0D8               	btfsc	status,0,c
  3472   001134  EF9E  F008         	goto	u4081
  3473   001138  EFA0  F008         	goto	u4080
  3474   00113C                     u4081:
  3475   00113C  EF19  F009         	goto	l4376
  3476   001140                     u4080:
  3477   001140                     
  3478                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3479   001140  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3480   001144  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3481   001148  CFDE F001          	movff	postinc2,___fltol@f1
  3482   00114C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3483   001150  CFDE F003          	movff	postinc2,___fltol@f1+2
  3484   001154  CFDE F004          	movff	postinc2,___fltol@f1+3
  3485   001158  ECFF  F01A         	call	___fltol	;wreg free
  3486   00115C  C001  F077         	movff	?___fltol,RGB2Hue@max
  3487   001160  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3488   001164                     
  3489                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3490   001164  0100               	movlb	0	; () banked
  3491   001166  5179               	movf	RGB2Hue@min& (0+255),w,b
  3492   001168  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3493   00116A  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3494   00116C  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3495   00116E  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3496   001170  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3497   001172  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3498   001176  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3499   00117A  0E00               	movlw	0
  3500   00117C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3501   00117E  0EFF               	movlw	-1
  3502   001180  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3503   001182  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3504   001184  0E01               	movlw	1
  3505   001186  ECA1  F017         	call	___xxtofl
  3506   00118A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3507   00118E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3508   001192  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3509   001196  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3510   00119A  0100               	movlb	0	; () banked
  3511   00119C  EE20 F008          	lfsr	2,8
  3512   0011A0  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3513   0011A2  26D9               	addwf	fsr2l,f,c
  3514   0011A4  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3515   0011A6  22DA               	addwfc	fsr2h,f,c
  3516   0011A8  CFDE F04F          	movff	postinc2,___flsub@a
  3517   0011AC  CFDE F050          	movff	postinc2,___flsub@a+1
  3518   0011B0  CFDE F051          	movff	postinc2,___flsub@a+2
  3519   0011B4  CFDE F052          	movff	postinc2,___flsub@a+3
  3520   0011B8  EE20 F004          	lfsr	2,4
  3521   0011BC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3522   0011BE  26D9               	addwf	fsr2l,f,c
  3523   0011C0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3524   0011C2  22DA               	addwfc	fsr2h,f,c
  3525   0011C4  CFDE F04B          	movff	postinc2,___flsub@b
  3526   0011C8  CFDE F04C          	movff	postinc2,___flsub@b+1
  3527   0011CC  CFDE F04D          	movff	postinc2,___flsub@b+2
  3528   0011D0  CFDE F04E          	movff	postinc2,___flsub@b+3
  3529   0011D4  ECBE  F023         	call	___flsub	;wreg free
  3530   0011D8  C04B  F053         	movff	?___flsub,___fldiv@b
  3531   0011DC  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3532   0011E0  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3533   0011E4  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3534   0011E8  ECEA  F013         	call	___fldiv	;wreg free
  3535   0011EC  C053  F01A         	movff	?___fldiv,___flmul@b
  3536   0011F0  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3537   0011F4  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3538   0011F8  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3539   0011FC  0E00               	movlw	0
  3540   0011FE  6E1E               	movwf	___flmul@a^0,c
  3541   001200  0E00               	movlw	0
  3542   001202  6E1F               	movwf	(___flmul@a+1)^0,c
  3543   001204  0E70               	movlw	112
  3544   001206  6E20               	movwf	(___flmul@a+2)^0,c
  3545   001208  0E42               	movlw	66
  3546   00120A  6E21               	movwf	(___flmul@a+3)^0,c
  3547   00120C  ECD5  F011         	call	___flmul	;wreg free
  3548   001210  0100               	movlb	0	; () banked
  3549   001212  EE20 F010          	lfsr	2,16
  3550   001216  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3551   001218  26D9               	addwf	fsr2l,f,c
  3552   00121A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3553   00121C  22DA               	addwfc	fsr2h,f,c
  3554   00121E  C01A  FFDE         	movff	?___flmul,postinc2
  3555   001222  C01B  FFDE         	movff	?___flmul+1,postinc2
  3556   001226  C01C  FFDE         	movff	?___flmul+2,postinc2
  3557   00122A  C01D  FFDE         	movff	?___flmul+3,postinc2
  3558                           
  3559                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3560   00122E  EF89  F00A         	goto	l4388
  3561   001232                     l4376:
  3562   001232  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3563   001236  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3564   00123A  CFDE F04B          	movff	postinc2,___flge@ff1
  3565   00123E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3566   001242  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3567   001246  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3568   00124A  0100               	movlb	0	; () banked
  3569   00124C  EE20 F004          	lfsr	2,4
  3570   001250  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3571   001252  26D9               	addwf	fsr2l,f,c
  3572   001254  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3573   001256  22DA               	addwfc	fsr2h,f,c
  3574   001258  CFDE F04F          	movff	postinc2,___flge@ff2
  3575   00125C  CFDE F050          	movff	postinc2,___flge@ff2+1
  3576   001260  CFDE F051          	movff	postinc2,___flge@ff2+2
  3577   001264  CFDE F052          	movff	postinc2,___flge@ff2+3
  3578   001268  EC82  F01B         	call	___flge	;wreg free
  3579   00126C  B0D8               	btfsc	status,0,c
  3580   00126E  EF3B  F009         	goto	u4091
  3581   001272  EF3D  F009         	goto	u4090
  3582   001276                     u4091:
  3583   001276  EFF7  F009         	goto	l4384
  3584   00127A                     u4090:
  3585   00127A  0100               	movlb	0	; () banked
  3586   00127C  EE20 F008          	lfsr	2,8
  3587   001280  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3588   001282  26D9               	addwf	fsr2l,f,c
  3589   001284  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3590   001286  22DA               	addwfc	fsr2h,f,c
  3591   001288  CFDE F04B          	movff	postinc2,___flge@ff1
  3592   00128C  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3593   001290  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3594   001294  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3595   001298  EE20 F004          	lfsr	2,4
  3596   00129C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3597   00129E  26D9               	addwf	fsr2l,f,c
  3598   0012A0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3599   0012A2  22DA               	addwfc	fsr2h,f,c
  3600   0012A4  CFDE F04F          	movff	postinc2,___flge@ff2
  3601   0012A8  CFDE F050          	movff	postinc2,___flge@ff2+1
  3602   0012AC  CFDE F051          	movff	postinc2,___flge@ff2+2
  3603   0012B0  CFDE F052          	movff	postinc2,___flge@ff2+3
  3604   0012B4  EC82  F01B         	call	___flge	;wreg free
  3605   0012B8  B0D8               	btfsc	status,0,c
  3606   0012BA  EF61  F009         	goto	u4101
  3607   0012BE  EF63  F009         	goto	u4100
  3608   0012C2                     u4101:
  3609   0012C2  EFF7  F009         	goto	l4384
  3610   0012C6                     u4100:
  3611   0012C6                     
  3612                           ;colorfunctions.c: 44:             max=cf->Gf;
  3613   0012C6  0100               	movlb	0	; () banked
  3614   0012C8  EE20 F004          	lfsr	2,4
  3615   0012CC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3616   0012CE  26D9               	addwf	fsr2l,f,c
  3617   0012D0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3618   0012D2  22DA               	addwfc	fsr2h,f,c
  3619   0012D4  CFDE F001          	movff	postinc2,___fltol@f1
  3620   0012D8  CFDE F002          	movff	postinc2,___fltol@f1+1
  3621   0012DC  CFDE F003          	movff	postinc2,___fltol@f1+2
  3622   0012E0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3623   0012E4  ECFF  F01A         	call	___fltol	;wreg free
  3624   0012E8  C001  F077         	movff	?___fltol,RGB2Hue@max
  3625   0012EC  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3626                           
  3627                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3628   0012F0  0100               	movlb	0	; () banked
  3629   0012F2  5179               	movf	RGB2Hue@min& (0+255),w,b
  3630   0012F4  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3631   0012F6  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3632   0012F8  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3633   0012FA  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3634   0012FC  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3635   0012FE  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3636   001302  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3637   001306  0E00               	movlw	0
  3638   001308  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3639   00130A  0EFF               	movlw	-1
  3640   00130C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3641   00130E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3642   001310  0E01               	movlw	1
  3643   001312  ECA1  F017         	call	___xxtofl
  3644   001316  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3645   00131A  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3646   00131E  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3647   001322  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3648   001326  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3649   00132A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3650   00132E  CFDE F04F          	movff	postinc2,___flsub@a
  3651   001332  CFDE F050          	movff	postinc2,___flsub@a+1
  3652   001336  CFDE F051          	movff	postinc2,___flsub@a+2
  3653   00133A  CFDE F052          	movff	postinc2,___flsub@a+3
  3654   00133E  0100               	movlb	0	; () banked
  3655   001340  EE20 F008          	lfsr	2,8
  3656   001344  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3657   001346  26D9               	addwf	fsr2l,f,c
  3658   001348  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3659   00134A  22DA               	addwfc	fsr2h,f,c
  3660   00134C  CFDE F04B          	movff	postinc2,___flsub@b
  3661   001350  CFDE F04C          	movff	postinc2,___flsub@b+1
  3662   001354  CFDE F04D          	movff	postinc2,___flsub@b+2
  3663   001358  CFDE F04E          	movff	postinc2,___flsub@b+3
  3664   00135C  ECBE  F023         	call	___flsub	;wreg free
  3665   001360  C04B  F053         	movff	?___flsub,___fldiv@b
  3666   001364  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3667   001368  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3668   00136C  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3669   001370  ECEA  F013         	call	___fldiv	;wreg free
  3670   001374  C053  F073         	movff	?___fldiv,_RGB2Hue$3160
  3671   001378  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3160+1
  3672   00137C  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3160+2
  3673   001380  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3160+3
  3674   001384                     
  3675                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3676   001384  0E00               	movlw	0
  3677   001386  6E3F               	movwf	___fladd@a^0,c
  3678   001388  0E00               	movlw	0
  3679   00138A  6E40               	movwf	(___fladd@a+1)^0,c
  3680   00138C  0E00               	movlw	0
  3681   00138E  6E41               	movwf	(___fladd@a+2)^0,c
  3682   001390  0E40               	movlw	64
  3683   001392  6E42               	movwf	(___fladd@a+3)^0,c
  3684   001394  C073  F03B         	movff	_RGB2Hue$3160,___fladd@b
  3685   001398  C074  F03C         	movff	_RGB2Hue$3160+1,___fladd@b+1
  3686   00139C  C075  F03D         	movff	_RGB2Hue$3160+2,___fladd@b+2
  3687   0013A0  C076  F03E         	movff	_RGB2Hue$3160+3,___fladd@b+3
  3688   0013A4  EC40  F00D         	call	___fladd	;wreg free
  3689   0013A8  C03B  F01A         	movff	?___fladd,___flmul@b
  3690   0013AC  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3691   0013B0  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3692   0013B4  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3693   0013B8  0E00               	movlw	0
  3694   0013BA  6E1E               	movwf	___flmul@a^0,c
  3695   0013BC  0E00               	movlw	0
  3696   0013BE  6E1F               	movwf	(___flmul@a+1)^0,c
  3697   0013C0  0E70               	movlw	112
  3698   0013C2  6E20               	movwf	(___flmul@a+2)^0,c
  3699   0013C4  0E42               	movlw	66
  3700   0013C6  6E21               	movwf	(___flmul@a+3)^0,c
  3701   0013C8  ECD5  F011         	call	___flmul	;wreg free
  3702   0013CC  0100               	movlb	0	; () banked
  3703   0013CE  EE20 F010          	lfsr	2,16
  3704   0013D2  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3705   0013D4  26D9               	addwf	fsr2l,f,c
  3706   0013D6  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3707   0013D8  22DA               	addwfc	fsr2h,f,c
  3708   0013DA  C01A  FFDE         	movff	?___flmul,postinc2
  3709   0013DE  C01B  FFDE         	movff	?___flmul+1,postinc2
  3710   0013E2  C01C  FFDE         	movff	?___flmul+2,postinc2
  3711   0013E6  C01D  FFDE         	movff	?___flmul+3,postinc2
  3712                           
  3713                           ;colorfunctions.c: 46:         }else{
  3714   0013EA  EF89  F00A         	goto	l4388
  3715   0013EE                     l4384:
  3716                           
  3717                           ;colorfunctions.c: 47:             max=cf->Bf;
  3718   0013EE  0100               	movlb	0	; () banked
  3719   0013F0  EE20 F008          	lfsr	2,8
  3720   0013F4  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3721   0013F6  26D9               	addwf	fsr2l,f,c
  3722   0013F8  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3723   0013FA  22DA               	addwfc	fsr2h,f,c
  3724   0013FC  CFDE F001          	movff	postinc2,___fltol@f1
  3725   001400  CFDE F002          	movff	postinc2,___fltol@f1+1
  3726   001404  CFDE F003          	movff	postinc2,___fltol@f1+2
  3727   001408  CFDE F004          	movff	postinc2,___fltol@f1+3
  3728   00140C  ECFF  F01A         	call	___fltol	;wreg free
  3729   001410  C001  F077         	movff	?___fltol,RGB2Hue@max
  3730   001414  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3731                           
  3732                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3733   001418  0100               	movlb	0	; () banked
  3734   00141A  5179               	movf	RGB2Hue@min& (0+255),w,b
  3735   00141C  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3736   00141E  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3737   001420  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3738   001422  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3739   001424  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3740   001426  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3741   00142A  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3742   00142E  0E00               	movlw	0
  3743   001430  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3744   001432  0EFF               	movlw	-1
  3745   001434  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3746   001436  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3747   001438  0E01               	movlw	1
  3748   00143A  ECA1  F017         	call	___xxtofl
  3749   00143E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3750   001442  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3751   001446  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3752   00144A  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3753   00144E  0100               	movlb	0	; () banked
  3754   001450  EE20 F004          	lfsr	2,4
  3755   001454  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3756   001456  26D9               	addwf	fsr2l,f,c
  3757   001458  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3758   00145A  22DA               	addwfc	fsr2h,f,c
  3759   00145C  CFDE F04F          	movff	postinc2,___flsub@a
  3760   001460  CFDE F050          	movff	postinc2,___flsub@a+1
  3761   001464  CFDE F051          	movff	postinc2,___flsub@a+2
  3762   001468  CFDE F052          	movff	postinc2,___flsub@a+3
  3763   00146C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3764   001470  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3765   001474  CFDE F04B          	movff	postinc2,___flsub@b
  3766   001478  CFDE F04C          	movff	postinc2,___flsub@b+1
  3767   00147C  CFDE F04D          	movff	postinc2,___flsub@b+2
  3768   001480  CFDE F04E          	movff	postinc2,___flsub@b+3
  3769   001484  ECBE  F023         	call	___flsub	;wreg free
  3770   001488  C04B  F053         	movff	?___flsub,___fldiv@b
  3771   00148C  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3772   001490  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3773   001494  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3774   001498  ECEA  F013         	call	___fldiv	;wreg free
  3775   00149C  C053  F073         	movff	?___fldiv,_RGB2Hue$3160
  3776   0014A0  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3160+1
  3777   0014A4  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3160+2
  3778   0014A8  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3160+3
  3779   0014AC                     
  3780                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3781   0014AC  0E00               	movlw	0
  3782   0014AE  6E3F               	movwf	___fladd@a^0,c
  3783   0014B0  0E00               	movlw	0
  3784   0014B2  6E40               	movwf	(___fladd@a+1)^0,c
  3785   0014B4  0E80               	movlw	128
  3786   0014B6  6E41               	movwf	(___fladd@a+2)^0,c
  3787   0014B8  0E40               	movlw	64
  3788   0014BA  6E42               	movwf	(___fladd@a+3)^0,c
  3789   0014BC  C073  F03B         	movff	_RGB2Hue$3160,___fladd@b
  3790   0014C0  C074  F03C         	movff	_RGB2Hue$3160+1,___fladd@b+1
  3791   0014C4  C075  F03D         	movff	_RGB2Hue$3160+2,___fladd@b+2
  3792   0014C8  C076  F03E         	movff	_RGB2Hue$3160+3,___fladd@b+3
  3793   0014CC  EC40  F00D         	call	___fladd	;wreg free
  3794   0014D0  C03B  F01A         	movff	?___fladd,___flmul@b
  3795   0014D4  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3796   0014D8  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3797   0014DC  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3798   0014E0  0E00               	movlw	0
  3799   0014E2  6E1E               	movwf	___flmul@a^0,c
  3800   0014E4  0E00               	movlw	0
  3801   0014E6  6E1F               	movwf	(___flmul@a+1)^0,c
  3802   0014E8  0E70               	movlw	112
  3803   0014EA  6E20               	movwf	(___flmul@a+2)^0,c
  3804   0014EC  0E42               	movlw	66
  3805   0014EE  6E21               	movwf	(___flmul@a+3)^0,c
  3806   0014F0  ECD5  F011         	call	___flmul	;wreg free
  3807   0014F4  0100               	movlb	0	; () banked
  3808   0014F6  EE20 F010          	lfsr	2,16
  3809   0014FA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3810   0014FC  26D9               	addwf	fsr2l,f,c
  3811   0014FE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3812   001500  22DA               	addwfc	fsr2h,f,c
  3813   001502  C01A  FFDE         	movff	?___flmul,postinc2
  3814   001506  C01B  FFDE         	movff	?___flmul+1,postinc2
  3815   00150A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3816   00150E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3817   001512                     l4388:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3821   001512  EE20 F010          	lfsr	2,16
  3822   001516  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3823   001518  26D9               	addwf	fsr2l,f,c
  3824   00151A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3825   00151C  22DA               	addwfc	fsr2h,f,c
  3826   00151E  0E03               	movlw	3
  3827   001520  BEDB               	btfsc	plusw2,7,c
  3828   001522  EF97  F00A         	goto	u4110
  3829   001526  EF95  F00A         	goto	u4111
  3830   00152A                     u4111:
  3831   00152A  EFBE  F00A         	goto	l563
  3832   00152E                     u4110:
  3833   00152E                     
  3834                           ; BSR set to: 0
  3835                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3836   00152E  EE20 F010          	lfsr	2,16
  3837   001532  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3838   001534  26D9               	addwf	fsr2l,f,c
  3839   001536  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3840   001538  22DA               	addwfc	fsr2h,f,c
  3841   00153A  CFDE F03B          	movff	postinc2,___fladd@b
  3842   00153E  CFDE F03C          	movff	postinc2,___fladd@b+1
  3843   001542  CFDE F03D          	movff	postinc2,___fladd@b+2
  3844   001546  CFDE F03E          	movff	postinc2,___fladd@b+3
  3845   00154A  0E00               	movlw	0
  3846   00154C  6E3F               	movwf	___fladd@a^0,c
  3847   00154E  0E00               	movlw	0
  3848   001550  6E40               	movwf	(___fladd@a+1)^0,c
  3849   001552  0EB4               	movlw	180
  3850   001554  6E41               	movwf	(___fladd@a+2)^0,c
  3851   001556  0E43               	movlw	67
  3852   001558  6E42               	movwf	(___fladd@a+3)^0,c
  3853   00155A  EC40  F00D         	call	___fladd	;wreg free
  3854   00155E  0100               	movlb	0	; () banked
  3855   001560  EE20 F010          	lfsr	2,16
  3856   001564  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3857   001566  26D9               	addwf	fsr2l,f,c
  3858   001568  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3859   00156A  22DA               	addwfc	fsr2h,f,c
  3860   00156C  C03B  FFDE         	movff	?___fladd,postinc2
  3861   001570  C03C  FFDE         	movff	?___fladd+1,postinc2
  3862   001574  C03D  FFDE         	movff	?___fladd+2,postinc2
  3863   001578  C03E  FFDE         	movff	?___fladd+3,postinc2
  3864   00157C                     l563:
  3865                           
  3866                           ; BSR set to: 0
  3867   00157C  0012               	return		;funcret
  3868   00157E                     __end_of_RGB2Hue:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function ___fltol *****************
  3872 ;; Defined at:
  3873 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  f1              4    0[COMRAM] void 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  exp1            1    9[COMRAM] unsigned char 
  3878 ;;  sign1           1    8[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  4    0[COMRAM] long 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;Total ram usage:       10 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_Left45
  3899 ;;		_Right45
  3900 ;;		_reverseHalfSquare
  3901 ;;		_Yellow_rev1_R90
  3902 ;;		_Pink_rev1_L90
  3903 ;;		_RGB2Hue
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text21
  3908   0035FE                     __ptext21:
  3909                           	callstack 0
  3910   0035FE                     ___fltol:
  3911                           	callstack 28
  3912   0035FE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3913   003600  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3914   003602  6E0A               	movwf	___fltol@exp1^0,c
  3915   003604  500A               	movf	___fltol@exp1^0,w,c
  3916   003606  A4D8               	btfss	status,2,c
  3917   003608  EF08  F01B         	goto	u3921
  3918   00360C  EF0A  F01B         	goto	u3920
  3919   003610                     u3921:
  3920   003610  EF14  F01B         	goto	l4206
  3921   003614                     u3920:
  3922   003614                     l4202:
  3923   003614  0E00               	movlw	0
  3924   003616  6E01               	movwf	?___fltol^0,c
  3925   003618  0E00               	movlw	0
  3926   00361A  6E02               	movwf	(?___fltol+1)^0,c
  3927   00361C  0E00               	movlw	0
  3928   00361E  6E03               	movwf	(?___fltol+2)^0,c
  3929   003620  0E00               	movlw	0
  3930   003622  6E04               	movwf	(?___fltol+3)^0,c
  3931   003624  EF81  F01B         	goto	l986
  3932   003628                     l4206:
  3933   003628  C001  F005         	movff	___fltol@f1,??___fltol
  3934   00362C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3935   003630  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3936   003634  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3937   003638  0E20               	movlw	32
  3938   00363A  EF24  F01B         	goto	u3930
  3939   00363E                     u3935:
  3940   00363E  90D8               	bcf	status,0,c
  3941   003640  3208               	rrcf	(??___fltol+3)^0,f,c
  3942   003642  3207               	rrcf	(??___fltol+2)^0,f,c
  3943   003644  3206               	rrcf	(??___fltol+1)^0,f,c
  3944   003646  3205               	rrcf	??___fltol^0,f,c
  3945   003648                     u3930:
  3946   003648  2EE8               	decfsz	wreg,f,c
  3947   00364A  EF1F  F01B         	goto	u3935
  3948   00364E  5005               	movf	??___fltol^0,w,c
  3949   003650  6E09               	movwf	___fltol@sign1^0,c
  3950   003652  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3951   003654  0EFF               	movlw	255
  3952   003656  1601               	andwf	___fltol@f1^0,f,c
  3953   003658  0EFF               	movlw	255
  3954   00365A  1602               	andwf	(___fltol@f1+1)^0,f,c
  3955   00365C  0EFF               	movlw	255
  3956   00365E  1603               	andwf	(___fltol@f1+2)^0,f,c
  3957   003660  0E00               	movlw	0
  3958   003662  1604               	andwf	(___fltol@f1+3)^0,f,c
  3959   003664  0E96               	movlw	150
  3960   003666  5E0A               	subwf	___fltol@exp1^0,f,c
  3961   003668  BE0A               	btfsc	___fltol@exp1^0,7,c
  3962   00366A  EF3B  F01B         	goto	u3940
  3963   00366E  EF39  F01B         	goto	u3941
  3964   003672                     u3941:
  3965   003672  EF51  F01B         	goto	l4226
  3966   003676                     u3940:
  3967   003676  500A               	movf	___fltol@exp1^0,w,c
  3968   003678  0A80               	xorlw	128
  3969   00367A  0F97               	addlw	151
  3970   00367C  B0D8               	btfsc	status,0,c
  3971   00367E  EF43  F01B         	goto	u3951
  3972   003682  EF45  F01B         	goto	u3950
  3973   003686                     u3951:
  3974   003686  EF47  F01B         	goto	l4222
  3975   00368A                     u3950:
  3976   00368A  EF0A  F01B         	goto	l4202
  3977   00368E                     l4222:
  3978   00368E  90D8               	bcf	status,0,c
  3979   003690  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3980   003692  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3981   003694  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3982   003696  3201               	rrcf	___fltol@f1^0,f,c
  3983   003698  3E0A               	incfsz	___fltol@exp1^0,f,c
  3984   00369A  EF47  F01B         	goto	l4222
  3985   00369E  EF69  F01B         	goto	l4236
  3986   0036A2                     l4226:
  3987   0036A2  0E1F               	movlw	31
  3988   0036A4  640A               	cpfsgt	___fltol@exp1^0,c
  3989   0036A6  EF57  F01B         	goto	u3961
  3990   0036AA  EF59  F01B         	goto	u3960
  3991   0036AE                     u3961:
  3992   0036AE  EF61  F01B         	goto	l4234
  3993   0036B2                     u3960:
  3994   0036B2  EF0A  F01B         	goto	l4202
  3995   0036B6                     l4232:
  3996   0036B6  90D8               	bcf	status,0,c
  3997   0036B8  3601               	rlcf	___fltol@f1^0,f,c
  3998   0036BA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3999   0036BC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4000   0036BE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4001   0036C0  060A               	decf	___fltol@exp1^0,f,c
  4002   0036C2                     l4234:
  4003   0036C2  500A               	movf	___fltol@exp1^0,w,c
  4004   0036C4  A4D8               	btfss	status,2,c
  4005   0036C6  EF67  F01B         	goto	u3971
  4006   0036CA  EF69  F01B         	goto	u3970
  4007   0036CE                     u3971:
  4008   0036CE  EF5B  F01B         	goto	l4232
  4009   0036D2                     u3970:
  4010   0036D2                     l4236:
  4011   0036D2  5009               	movf	___fltol@sign1^0,w,c
  4012   0036D4  B4D8               	btfsc	status,2,c
  4013   0036D6  EF6F  F01B         	goto	u3981
  4014   0036DA  EF71  F01B         	goto	u3980
  4015   0036DE                     u3981:
  4016   0036DE  EF79  F01B         	goto	l4240
  4017   0036E2                     u3980:
  4018   0036E2  1E04               	comf	(___fltol@f1+3)^0,f,c
  4019   0036E4  1E03               	comf	(___fltol@f1+2)^0,f,c
  4020   0036E6  1E02               	comf	(___fltol@f1+1)^0,f,c
  4021   0036E8  6C01               	negf	___fltol@f1^0,c
  4022   0036EA  0E00               	movlw	0
  4023   0036EC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4024   0036EE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4025   0036F0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4026   0036F2                     l4240:
  4027   0036F2  C001  F001         	movff	___fltol@f1,?___fltol
  4028   0036F6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4029   0036FA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4030   0036FE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4031   003702                     l986:
  4032   003702  0012               	return		;funcret
  4033   003704                     __end_of___fltol:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function ___flsub *****************
  4037 ;; Defined at:
  4038 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  b               4   74[COMRAM] long 
  4041 ;;  a               4   78[COMRAM] long 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  4   74[COMRAM] long 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;Total ram usage:        8 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 2
  4060 ;; This function calls:
  4061 ;;		___fladd
  4062 ;; This function is called by:
  4063 ;;		_RGB2Hue
  4064 ;;		_memoryUpdateTime
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text22
  4069   00477C                     __ptext22:
  4070                           	callstack 0
  4071   00477C                     ___flsub:
  4072                           	callstack 27
  4073   00477C  0E00               	movlw	0
  4074   00477E  1A4F               	xorwf	___flsub@a^0,f,c
  4075   004780  0E00               	movlw	0
  4076   004782  1A50               	xorwf	(___flsub@a+1)^0,f,c
  4077   004784  0E00               	movlw	0
  4078   004786  1A51               	xorwf	(___flsub@a+2)^0,f,c
  4079   004788  0E80               	movlw	128
  4080   00478A  1A52               	xorwf	(___flsub@a+3)^0,f,c
  4081   00478C  C04B  F03B         	movff	___flsub@b,___fladd@b
  4082   004790  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  4083   004794  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  4084   004798  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  4085   00479C  C04F  F03F         	movff	___flsub@a,___fladd@a
  4086   0047A0  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  4087   0047A4  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  4088   0047A8  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  4089   0047AC  EC40  F00D         	call	___fladd	;wreg free
  4090   0047B0  C03B  F04B         	movff	?___fladd,?___flsub
  4091   0047B4  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  4092   0047B8  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  4093   0047BC  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  4094   0047C0  0012               	return		;funcret
  4095   0047C2                     __end_of___flsub:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function ___fleq *****************
  4099 ;; Defined at:
  4100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  ff1             4    0[COMRAM] long 
  4103 ;;  ff2             4    4[COMRAM] long 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;		None               void
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4115 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;Total ram usage:       12 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_RGB2Hue
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text23
  4130   0039B0                     __ptext23:
  4131                           	callstack 0
  4132   0039B0                     ___fleq:
  4133                           	callstack 28
  4134   0039B0  0E00               	movlw	0
  4135   0039B2  1401               	andwf	___fleq@ff1^0,w,c
  4136   0039B4  6E09               	movwf	??___fleq^0,c
  4137   0039B6  0E00               	movlw	0
  4138   0039B8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4139   0039BA  6E0A               	movwf	(??___fleq+1)^0,c
  4140   0039BC  0E80               	movlw	128
  4141   0039BE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4142   0039C0  6E0B               	movwf	(??___fleq+2)^0,c
  4143   0039C2  0E7F               	movlw	127
  4144   0039C4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4145   0039C6  6E0C               	movwf	(??___fleq+3)^0,c
  4146   0039C8  5009               	movf	??___fleq^0,w,c
  4147   0039CA  100A               	iorwf	(??___fleq+1)^0,w,c
  4148   0039CC  100B               	iorwf	(??___fleq+2)^0,w,c
  4149   0039CE  100C               	iorwf	(??___fleq+3)^0,w,c
  4150   0039D0  A4D8               	btfss	status,2,c
  4151   0039D2  EFED  F01C         	goto	u3891
  4152   0039D6  EFEF  F01C         	goto	u3890
  4153   0039DA                     u3891:
  4154   0039DA  EFF7  F01C         	goto	l4188
  4155   0039DE                     u3890:
  4156   0039DE  0E00               	movlw	0
  4157   0039E0  6E01               	movwf	___fleq@ff1^0,c
  4158   0039E2  0E00               	movlw	0
  4159   0039E4  6E02               	movwf	(___fleq@ff1+1)^0,c
  4160   0039E6  0E00               	movlw	0
  4161   0039E8  6E03               	movwf	(___fleq@ff1+2)^0,c
  4162   0039EA  0E00               	movlw	0
  4163   0039EC  6E04               	movwf	(___fleq@ff1+3)^0,c
  4164   0039EE                     l4188:
  4165   0039EE  0E00               	movlw	0
  4166   0039F0  1405               	andwf	___fleq@ff2^0,w,c
  4167   0039F2  6E09               	movwf	??___fleq^0,c
  4168   0039F4  0E00               	movlw	0
  4169   0039F6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4170   0039F8  6E0A               	movwf	(??___fleq+1)^0,c
  4171   0039FA  0E80               	movlw	128
  4172   0039FC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4173   0039FE  6E0B               	movwf	(??___fleq+2)^0,c
  4174   003A00  0E7F               	movlw	127
  4175   003A02  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4176   003A04  6E0C               	movwf	(??___fleq+3)^0,c
  4177   003A06  5009               	movf	??___fleq^0,w,c
  4178   003A08  100A               	iorwf	(??___fleq+1)^0,w,c
  4179   003A0A  100B               	iorwf	(??___fleq+2)^0,w,c
  4180   003A0C  100C               	iorwf	(??___fleq+3)^0,w,c
  4181   003A0E  A4D8               	btfss	status,2,c
  4182   003A10  EF0C  F01D         	goto	u3901
  4183   003A14  EF0E  F01D         	goto	u3900
  4184   003A18                     u3901:
  4185   003A18  EF16  F01D         	goto	l4192
  4186   003A1C                     u3900:
  4187   003A1C  0E00               	movlw	0
  4188   003A1E  6E05               	movwf	___fleq@ff2^0,c
  4189   003A20  0E00               	movlw	0
  4190   003A22  6E06               	movwf	(___fleq@ff2+1)^0,c
  4191   003A24  0E00               	movlw	0
  4192   003A26  6E07               	movwf	(___fleq@ff2+2)^0,c
  4193   003A28  0E00               	movlw	0
  4194   003A2A  6E08               	movwf	(___fleq@ff2+3)^0,c
  4195   003A2C                     l4192:
  4196   003A2C  5005               	movf	___fleq@ff2^0,w,c
  4197   003A2E  1801               	xorwf	___fleq@ff1^0,w,c
  4198   003A30  E10F               	bnz	u3910
  4199   003A32  5006               	movf	(___fleq@ff2+1)^0,w,c
  4200   003A34  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4201   003A36  E10C               	bnz	u3910
  4202   003A38  5007               	movf	(___fleq@ff2+2)^0,w,c
  4203   003A3A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4204   003A3C  E109               	bnz	u3910
  4205   003A3E  5008               	movf	(___fleq@ff2+3)^0,w,c
  4206   003A40  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4207   003A42  B4D8               	btfsc	status,2,c
  4208   003A44  EF26  F01D         	goto	u3911
  4209   003A48  EF28  F01D         	goto	u3910
  4210   003A4C                     u3911:
  4211   003A4C  EF2B  F01D         	goto	l4196
  4212   003A50                     u3910:
  4213   003A50  90D8               	bcf	status,0,c
  4214   003A52  EF2C  F01D         	goto	l948
  4215   003A56                     l4196:
  4216   003A56  80D8               	bsf	status,0,c
  4217   003A58                     l948:
  4218   003A58  0012               	return		;funcret
  4219   003A5A                     __end_of___fleq:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function ___fldiv *****************
  4223 ;; Defined at:
  4224 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  b               4   82[COMRAM] long 
  4227 ;;  a               4   86[COMRAM] long 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  grs             4    7[BANK0 ] unsigned long 
  4230 ;;  rem             4    0[BANK0 ] unsigned long 
  4231 ;;  new_exp         2    5[BANK0 ] short 
  4232 ;;  aexp            1   12[BANK0 ] unsigned char 
  4233 ;;  bexp            1   11[BANK0 ] unsigned char 
  4234 ;;  sign            1    4[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4   82[COMRAM] unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;Total ram usage:       25 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_RGB2Hue
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text24
  4259   0027D4                     __ptext24:
  4260                           	callstack 0
  4261   0027D4                     ___fldiv:
  4262                           	callstack 28
  4263   0027D4  5056               	movf	(___fldiv@b+3)^0,w,c
  4264   0027D6  0B80               	andlw	128
  4265   0027D8  0100               	movlb	0	; () banked
  4266   0027DA  6F64               	movwf	___fldiv@sign& (0+255),b
  4267   0027DC  5056               	movf	(___fldiv@b+3)^0,w,c
  4268   0027DE  2456               	addwf	(___fldiv@b+3)^0,w,c
  4269   0027E0  6F6B               	movwf	___fldiv@bexp& (0+255),b
  4270   0027E2                     
  4271                           ; BSR set to: 0
  4272   0027E2  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4273   0027E4  EFF6  F013         	goto	u3661
  4274   0027E8  EFF8  F013         	goto	u3660
  4275   0027EC                     u3661:
  4276   0027EC  EFF9  F013         	goto	l4046
  4277   0027F0                     u3660:
  4278   0027F0                     
  4279                           ; BSR set to: 0
  4280   0027F0  816B               	bsf	___fldiv@bexp& (0+255),0,b
  4281   0027F2                     l4046:
  4282                           
  4283                           ; BSR set to: 0
  4284   0027F2  516B               	movf	___fldiv@bexp& (0+255),w,b
  4285   0027F4  B4D8               	btfsc	status,2,c
  4286   0027F6  EFFF  F013         	goto	u3671
  4287   0027FA  EF01  F014         	goto	u3670
  4288   0027FE                     u3671:
  4289   0027FE  EF16  F014         	goto	l4056
  4290   002802                     u3670:
  4291   002802                     
  4292                           ; BSR set to: 0
  4293   002802  296B               	incf	___fldiv@bexp& (0+255),w,b
  4294   002804  A4D8               	btfss	status,2,c
  4295   002806  EF07  F014         	goto	u3681
  4296   00280A  EF09  F014         	goto	u3680
  4297   00280E                     u3681:
  4298   00280E  EF11  F014         	goto	l4052
  4299   002812                     u3680:
  4300   002812                     
  4301                           ; BSR set to: 0
  4302   002812  0E00               	movlw	0
  4303   002814  6E53               	movwf	___fldiv@b^0,c
  4304   002816  0E00               	movlw	0
  4305   002818  6E54               	movwf	(___fldiv@b+1)^0,c
  4306   00281A  0E00               	movlw	0
  4307   00281C  6E55               	movwf	(___fldiv@b+2)^0,c
  4308   00281E  0E00               	movlw	0
  4309   002820  6E56               	movwf	(___fldiv@b+3)^0,c
  4310   002822                     l4052:
  4311                           
  4312                           ; BSR set to: 0
  4313   002822  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4314   002824                     
  4315                           ; BSR set to: 0
  4316   002824  0E00               	movlw	0
  4317   002826  6E56               	movwf	(___fldiv@b+3)^0,c
  4318   002828  EF1E  F014         	goto	l4058
  4319   00282C                     l4056:
  4320                           
  4321                           ; BSR set to: 0
  4322   00282C  0E00               	movlw	0
  4323   00282E  6E53               	movwf	___fldiv@b^0,c
  4324   002830  0E00               	movlw	0
  4325   002832  6E54               	movwf	(___fldiv@b+1)^0,c
  4326   002834  0E00               	movlw	0
  4327   002836  6E55               	movwf	(___fldiv@b+2)^0,c
  4328   002838  0E00               	movlw	0
  4329   00283A  6E56               	movwf	(___fldiv@b+3)^0,c
  4330   00283C                     l4058:
  4331                           
  4332                           ; BSR set to: 0
  4333   00283C  505A               	movf	(___fldiv@a+3)^0,w,c
  4334   00283E  0B80               	andlw	128
  4335   002840  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  4336   002842                     
  4337                           ; BSR set to: 0
  4338   002842  505A               	movf	(___fldiv@a+3)^0,w,c
  4339   002844  245A               	addwf	(___fldiv@a+3)^0,w,c
  4340   002846  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4341   002848                     
  4342                           ; BSR set to: 0
  4343   002848  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4344   00284A  EF29  F014         	goto	u3691
  4345   00284E  EF2B  F014         	goto	u3690
  4346   002852                     u3691:
  4347   002852  EF2C  F014         	goto	l4066
  4348   002856                     u3690:
  4349   002856                     
  4350                           ; BSR set to: 0
  4351   002856  816C               	bsf	___fldiv@aexp& (0+255),0,b
  4352   002858                     l4066:
  4353                           
  4354                           ; BSR set to: 0
  4355   002858  516C               	movf	___fldiv@aexp& (0+255),w,b
  4356   00285A  B4D8               	btfsc	status,2,c
  4357   00285C  EF32  F014         	goto	u3701
  4358   002860  EF34  F014         	goto	u3700
  4359   002864                     u3701:
  4360   002864  EF49  F014         	goto	l4076
  4361   002868                     u3700:
  4362   002868                     
  4363                           ; BSR set to: 0
  4364   002868  296C               	incf	___fldiv@aexp& (0+255),w,b
  4365   00286A  A4D8               	btfss	status,2,c
  4366   00286C  EF3A  F014         	goto	u3711
  4367   002870  EF3C  F014         	goto	u3710
  4368   002874                     u3711:
  4369   002874  EF44  F014         	goto	l4072
  4370   002878                     u3710:
  4371   002878                     
  4372                           ; BSR set to: 0
  4373   002878  0E00               	movlw	0
  4374   00287A  6E57               	movwf	___fldiv@a^0,c
  4375   00287C  0E00               	movlw	0
  4376   00287E  6E58               	movwf	(___fldiv@a+1)^0,c
  4377   002880  0E00               	movlw	0
  4378   002882  6E59               	movwf	(___fldiv@a+2)^0,c
  4379   002884  0E00               	movlw	0
  4380   002886  6E5A               	movwf	(___fldiv@a+3)^0,c
  4381   002888                     l4072:
  4382                           
  4383                           ; BSR set to: 0
  4384   002888  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4385   00288A                     
  4386                           ; BSR set to: 0
  4387   00288A  0E00               	movlw	0
  4388   00288C  6E5A               	movwf	(___fldiv@a+3)^0,c
  4389   00288E  EF51  F014         	goto	l4078
  4390   002892                     l4076:
  4391                           
  4392                           ; BSR set to: 0
  4393   002892  0E00               	movlw	0
  4394   002894  6E57               	movwf	___fldiv@a^0,c
  4395   002896  0E00               	movlw	0
  4396   002898  6E58               	movwf	(___fldiv@a+1)^0,c
  4397   00289A  0E00               	movlw	0
  4398   00289C  6E59               	movwf	(___fldiv@a+2)^0,c
  4399   00289E  0E00               	movlw	0
  4400   0028A0  6E5A               	movwf	(___fldiv@a+3)^0,c
  4401   0028A2                     l4078:
  4402                           
  4403                           ; BSR set to: 0
  4404   0028A2  5057               	movf	___fldiv@a^0,w,c
  4405   0028A4  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4406   0028A6  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4407   0028A8  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4408   0028AA  A4D8               	btfss	status,2,c
  4409   0028AC  EF5A  F014         	goto	u3721
  4410   0028B0  EF5C  F014         	goto	u3720
  4411   0028B4                     u3721:
  4412   0028B4  EF74  F014         	goto	l4090
  4413   0028B8                     u3720:
  4414   0028B8                     
  4415                           ; BSR set to: 0
  4416   0028B8  0E00               	movlw	0
  4417   0028BA  6E53               	movwf	___fldiv@b^0,c
  4418   0028BC  0E00               	movlw	0
  4419   0028BE  6E54               	movwf	(___fldiv@b+1)^0,c
  4420   0028C0  0E00               	movlw	0
  4421   0028C2  6E55               	movwf	(___fldiv@b+2)^0,c
  4422   0028C4  0E00               	movlw	0
  4423   0028C6  6E56               	movwf	(___fldiv@b+3)^0,c
  4424   0028C8                     
  4425                           ; BSR set to: 0
  4426   0028C8  0E80               	movlw	128
  4427   0028CA  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4428   0028CC  0E7F               	movlw	127
  4429   0028CE  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4430   0028D0                     l4084:
  4431                           
  4432                           ; BSR set to: 0
  4433   0028D0  5164               	movf	___fldiv@sign& (0+255),w,b
  4434   0028D2  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4435   0028D4                     
  4436                           ; BSR set to: 0
  4437   0028D4  C053  F053         	movff	___fldiv@b,?___fldiv
  4438   0028D8  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4439   0028DC  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4440   0028E0  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4441   0028E4  EFB7  F015         	goto	l1271
  4442   0028E8                     l4090:
  4443                           
  4444                           ; BSR set to: 0
  4445   0028E8  516B               	movf	___fldiv@bexp& (0+255),w,b
  4446   0028EA  A4D8               	btfss	status,2,c
  4447   0028EC  EF7A  F014         	goto	u3731
  4448   0028F0  EF7C  F014         	goto	u3730
  4449   0028F4                     u3731:
  4450   0028F4  EF86  F014         	goto	l4098
  4451   0028F8                     u3730:
  4452   0028F8                     
  4453                           ; BSR set to: 0
  4454   0028F8  0E00               	movlw	0
  4455   0028FA  6E53               	movwf	?___fldiv^0,c
  4456   0028FC  0E00               	movlw	0
  4457   0028FE  6E54               	movwf	(?___fldiv+1)^0,c
  4458   002900  0E00               	movlw	0
  4459   002902  6E55               	movwf	(?___fldiv+2)^0,c
  4460   002904  0E00               	movlw	0
  4461   002906  6E56               	movwf	(?___fldiv+3)^0,c
  4462   002908  EFB7  F015         	goto	l1271
  4463   00290C                     l4098:
  4464                           
  4465                           ; BSR set to: 0
  4466   00290C  516C               	movf	___fldiv@aexp& (0+255),w,b
  4467   00290E  C06B  F05B         	movff	___fldiv@bexp,??___fldiv
  4468   002912  6A5C               	clrf	(??___fldiv+1)^0,c
  4469   002914  5E5B               	subwf	??___fldiv^0,f,c
  4470   002916  0E00               	movlw	0
  4471   002918  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4472   00291A  0E7F               	movlw	127
  4473   00291C  245B               	addwf	??___fldiv^0,w,c
  4474   00291E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  4475   002920  0E00               	movlw	0
  4476   002922  205C               	addwfc	(??___fldiv+1)^0,w,c
  4477   002924  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4478   002926                     
  4479                           ; BSR set to: 0
  4480   002926  C053  F060         	movff	___fldiv@b,___fldiv@rem
  4481   00292A  C054  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  4482   00292E  C055  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  4483   002932  C056  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  4484   002936                     
  4485                           ; BSR set to: 0
  4486   002936  0E00               	movlw	0
  4487   002938  6E53               	movwf	___fldiv@b^0,c
  4488   00293A  0E00               	movlw	0
  4489   00293C  6E54               	movwf	(___fldiv@b+1)^0,c
  4490   00293E  0E00               	movlw	0
  4491   002940  6E55               	movwf	(___fldiv@b+2)^0,c
  4492   002942  0E00               	movlw	0
  4493   002944  6E56               	movwf	(___fldiv@b+3)^0,c
  4494   002946                     
  4495                           ; BSR set to: 0
  4496   002946  0E00               	movlw	0
  4497   002948  6F67               	movwf	___fldiv@grs& (0+255),b
  4498   00294A  0E00               	movlw	0
  4499   00294C  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  4500   00294E  0E00               	movlw	0
  4501   002950  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  4502   002952  0E00               	movlw	0
  4503   002954  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  4504   002956                     
  4505                           ; BSR set to: 0
  4506   002956  0E00               	movlw	0
  4507   002958  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4508   00295A  EFE7  F014         	goto	l1273
  4509   00295E                     l4108:
  4510                           
  4511                           ; BSR set to: 0
  4512   00295E  516C               	movf	___fldiv@aexp& (0+255),w,b
  4513   002960  B4D8               	btfsc	status,2,c
  4514   002962  EFB5  F014         	goto	u3741
  4515   002966  EFB7  F014         	goto	u3740
  4516   00296A                     u3741:
  4517   00296A  EFCE  F014         	goto	l4116
  4518   00296E                     u3740:
  4519   00296E                     
  4520                           ; BSR set to: 0
  4521   00296E  90D8               	bcf	status,0,c
  4522   002970  3760               	rlcf	___fldiv@rem& (0+255),f,b
  4523   002972  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4524   002974  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4525   002976  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4526   002978  90D8               	bcf	status,0,c
  4527   00297A  3653               	rlcf	___fldiv@b^0,f,c
  4528   00297C  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4529   00297E  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4530   002980  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4531   002982                     
  4532                           ; BSR set to: 0
  4533   002982  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4534   002984  EFC6  F014         	goto	u3751
  4535   002988  EFC8  F014         	goto	u3750
  4536   00298C                     u3751:
  4537   00298C  EFC9  F014         	goto	l1276
  4538   002990                     u3750:
  4539   002990                     
  4540                           ; BSR set to: 0
  4541   002990  8053               	bsf	___fldiv@b^0,0,c
  4542   002992                     l1276:
  4543                           
  4544                           ; BSR set to: 0
  4545   002992  90D8               	bcf	status,0,c
  4546   002994  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4547   002996  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4548   002998  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4549   00299A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4550   00299C                     l4116:
  4551                           
  4552                           ; BSR set to: 0
  4553   00299C  5057               	movf	___fldiv@a^0,w,c
  4554   00299E  5D60               	subwf	___fldiv@rem& (0+255),w,b
  4555   0029A0  5058               	movf	(___fldiv@a+1)^0,w,c
  4556   0029A2  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4557   0029A4  5059               	movf	(___fldiv@a+2)^0,w,c
  4558   0029A6  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4559   0029A8  505A               	movf	(___fldiv@a+3)^0,w,c
  4560   0029AA  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4561   0029AC  A0D8               	btfss	status,0,c
  4562   0029AE  EFDB  F014         	goto	u3761
  4563   0029B2  EFDD  F014         	goto	u3760
  4564   0029B6                     u3761:
  4565   0029B6  EFE6  F014         	goto	l4122
  4566   0029BA                     u3760:
  4567   0029BA                     
  4568                           ; BSR set to: 0
  4569   0029BA  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4570   0029BC                     
  4571                           ; BSR set to: 0
  4572   0029BC  5057               	movf	___fldiv@a^0,w,c
  4573   0029BE  5F60               	subwf	___fldiv@rem& (0+255),f,b
  4574   0029C0  5058               	movf	(___fldiv@a+1)^0,w,c
  4575   0029C2  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4576   0029C4  5059               	movf	(___fldiv@a+2)^0,w,c
  4577   0029C6  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4578   0029C8  505A               	movf	(___fldiv@a+3)^0,w,c
  4579   0029CA  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4580   0029CC                     l4122:
  4581                           
  4582                           ; BSR set to: 0
  4583   0029CC  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  4584   0029CE                     l1273:
  4585                           
  4586                           ; BSR set to: 0
  4587   0029CE  0E19               	movlw	25
  4588   0029D0  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  4589   0029D2  EFED  F014         	goto	u3771
  4590   0029D6  EFEF  F014         	goto	u3770
  4591   0029DA                     u3771:
  4592   0029DA  EFAF  F014         	goto	l4108
  4593   0029DE                     u3770:
  4594   0029DE                     
  4595                           ; BSR set to: 0
  4596   0029DE  5160               	movf	___fldiv@rem& (0+255),w,b
  4597   0029E0  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4598   0029E2  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4599   0029E4  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4600   0029E6  B4D8               	btfsc	status,2,c
  4601   0029E8  EFF8  F014         	goto	u3781
  4602   0029EC  EFFA  F014         	goto	u3780
  4603   0029F0                     u3781:
  4604   0029F0  EF12  F015         	goto	l4134
  4605   0029F4                     u3780:
  4606   0029F4                     
  4607                           ; BSR set to: 0
  4608   0029F4  8167               	bsf	___fldiv@grs& (0+255),0,b
  4609   0029F6  EF12  F015         	goto	l4134
  4610   0029FA                     l4128:
  4611                           
  4612                           ; BSR set to: 0
  4613   0029FA  90D8               	bcf	status,0,c
  4614   0029FC  3653               	rlcf	___fldiv@b^0,f,c
  4615   0029FE  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4616   002A00  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4617   002A02  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4618   002A04                     
  4619                           ; BSR set to: 0
  4620   002A04  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4621   002A06  EF07  F015         	goto	u3791
  4622   002A0A  EF09  F015         	goto	u3790
  4623   002A0E                     u3791:
  4624   002A0E  EF0A  F015         	goto	l1282
  4625   002A12                     u3790:
  4626   002A12                     
  4627                           ; BSR set to: 0
  4628   002A12  8053               	bsf	___fldiv@b^0,0,c
  4629   002A14                     l1282:
  4630                           
  4631                           ; BSR set to: 0
  4632   002A14  90D8               	bcf	status,0,c
  4633   002A16  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4634   002A18  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4635   002A1A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4636   002A1C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4637   002A1E  0765               	decf	___fldiv@new_exp& (0+255),f,b
  4638   002A20  A0D8               	btfss	status,0,c
  4639   002A22  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4640   002A24                     l4134:
  4641                           
  4642                           ; BSR set to: 0
  4643   002A24  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4644   002A26  EF17  F015         	goto	u3801
  4645   002A2A  EF19  F015         	goto	u3800
  4646   002A2E                     u3801:
  4647   002A2E  EFFD  F014         	goto	l4128
  4648   002A32                     u3800:
  4649   002A32                     
  4650                           ; BSR set to: 0
  4651   002A32  0E00               	movlw	0
  4652   002A34  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4653   002A36                     
  4654                           ; BSR set to: 0
  4655   002A36  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4656   002A38  EF20  F015         	goto	u3811
  4657   002A3C  EF22  F015         	goto	u3810
  4658   002A40                     u3811:
  4659   002A40  EF46  F015         	goto	l1284
  4660   002A44                     u3810:
  4661   002A44                     
  4662                           ; BSR set to: 0
  4663   002A44  0EFF               	movlw	255
  4664   002A46  1567               	andwf	___fldiv@grs& (0+255),w,b
  4665   002A48  6E5B               	movwf	??___fldiv^0,c
  4666   002A4A  0EFF               	movlw	255
  4667   002A4C  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4668   002A4E  6E5C               	movwf	(??___fldiv+1)^0,c
  4669   002A50  0EFF               	movlw	255
  4670   002A52  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4671   002A54  6E5D               	movwf	(??___fldiv+2)^0,c
  4672   002A56  0E7F               	movlw	127
  4673   002A58  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4674   002A5A  6E5E               	movwf	(??___fldiv+3)^0,c
  4675   002A5C  505B               	movf	??___fldiv^0,w,c
  4676   002A5E  105C               	iorwf	(??___fldiv+1)^0,w,c
  4677   002A60  105D               	iorwf	(??___fldiv+2)^0,w,c
  4678   002A62  105E               	iorwf	(??___fldiv+3)^0,w,c
  4679   002A64  B4D8               	btfsc	status,2,c
  4680   002A66  EF37  F015         	goto	u3821
  4681   002A6A  EF39  F015         	goto	u3820
  4682   002A6E                     u3821:
  4683   002A6E  EF3D  F015         	goto	l1285
  4684   002A72                     u3820:
  4685   002A72                     l4142:
  4686                           
  4687                           ; BSR set to: 0
  4688   002A72  0E01               	movlw	1
  4689   002A74  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4690   002A76  EF46  F015         	goto	l1284
  4691   002A7A                     l1285:
  4692                           
  4693                           ; BSR set to: 0
  4694   002A7A  A053               	btfss	___fldiv@b^0,0,c
  4695   002A7C  EF42  F015         	goto	u3831
  4696   002A80  EF44  F015         	goto	u3830
  4697   002A84                     u3831:
  4698   002A84  EF46  F015         	goto	l1284
  4699   002A88                     u3830:
  4700   002A88  EF39  F015         	goto	l4142
  4701   002A8C                     l1284:
  4702                           
  4703                           ; BSR set to: 0
  4704   002A8C  516C               	movf	___fldiv@aexp& (0+255),w,b
  4705   002A8E  B4D8               	btfsc	status,2,c
  4706   002A90  EF4C  F015         	goto	u3841
  4707   002A94  EF4E  F015         	goto	u3840
  4708   002A98                     u3841:
  4709   002A98  EF72  F015         	goto	l4154
  4710   002A9C                     u3840:
  4711   002A9C                     
  4712                           ; BSR set to: 0
  4713   002A9C  0E01               	movlw	1
  4714   002A9E  2653               	addwf	___fldiv@b^0,f,c
  4715   002AA0  0E00               	movlw	0
  4716   002AA2  2254               	addwfc	(___fldiv@b+1)^0,f,c
  4717   002AA4  2255               	addwfc	(___fldiv@b+2)^0,f,c
  4718   002AA6  2256               	addwfc	(___fldiv@b+3)^0,f,c
  4719   002AA8                     
  4720                           ; BSR set to: 0
  4721   002AA8  A056               	btfss	(___fldiv@b+3)^0,0,c
  4722   002AAA  EF59  F015         	goto	u3851
  4723   002AAE  EF5B  F015         	goto	u3850
  4724   002AB2                     u3851:
  4725   002AB2  EF72  F015         	goto	l4154
  4726   002AB6                     u3850:
  4727   002AB6                     
  4728                           ; BSR set to: 0
  4729   002AB6  C053  F05B         	movff	___fldiv@b,??___fldiv
  4730   002ABA  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  4731   002ABE  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  4732   002AC2  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  4733   002AC6  345E               	rlcf	(??___fldiv+3)^0,w,c
  4734   002AC8  325E               	rrcf	(??___fldiv+3)^0,f,c
  4735   002ACA  325D               	rrcf	(??___fldiv+2)^0,f,c
  4736   002ACC  325C               	rrcf	(??___fldiv+1)^0,f,c
  4737   002ACE  325B               	rrcf	??___fldiv^0,f,c
  4738   002AD0  C05B  F053         	movff	??___fldiv,___fldiv@b
  4739   002AD4  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  4740   002AD8  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  4741   002ADC  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  4742   002AE0                     
  4743                           ; BSR set to: 0
  4744   002AE0  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  4745   002AE2  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4746   002AE4                     l4154:
  4747                           
  4748                           ; BSR set to: 0
  4749   002AE4  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4750   002AE6  EF7D  F015         	goto	u3861
  4751   002AEA  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4752   002AEC  E108               	bnz	u3860
  4753   002AEE  2965               	incf	___fldiv@new_exp& (0+255),w,b
  4754   002AF0  A0D8               	btfss	status,0,c
  4755   002AF2  EF7D  F015         	goto	u3861
  4756   002AF6  EF7F  F015         	goto	u3860
  4757   002AFA                     u3861:
  4758   002AFA  EF8A  F015         	goto	l4158
  4759   002AFE                     u3860:
  4760   002AFE                     
  4761                           ; BSR set to: 0
  4762   002AFE  0E00               	movlw	0
  4763   002B00  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4764   002B02  6965               	setf	___fldiv@new_exp& (0+255),b
  4765   002B04  0E00               	movlw	0
  4766   002B06  6E53               	movwf	___fldiv@b^0,c
  4767   002B08  0E00               	movlw	0
  4768   002B0A  6E54               	movwf	(___fldiv@b+1)^0,c
  4769   002B0C  0E00               	movlw	0
  4770   002B0E  6E55               	movwf	(___fldiv@b+2)^0,c
  4771   002B10  0E00               	movlw	0
  4772   002B12  6E56               	movwf	(___fldiv@b+3)^0,c
  4773   002B14                     l4158:
  4774                           
  4775                           ; BSR set to: 0
  4776   002B14  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4777   002B16  EF97  F015         	goto	u3870
  4778   002B1A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4779   002B1C  E106               	bnz	u3871
  4780   002B1E  0565               	decf	___fldiv@new_exp& (0+255),w,b
  4781   002B20  B0D8               	btfsc	status,0,c
  4782   002B22  EF95  F015         	goto	u3871
  4783   002B26  EF97  F015         	goto	u3870
  4784   002B2A                     u3871:
  4785   002B2A  EFA5  F015         	goto	l4162
  4786   002B2E                     u3870:
  4787   002B2E                     
  4788                           ; BSR set to: 0
  4789   002B2E  0E00               	movlw	0
  4790   002B30  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4791   002B32  0E00               	movlw	0
  4792   002B34  6F65               	movwf	___fldiv@new_exp& (0+255),b
  4793   002B36  0E00               	movlw	0
  4794   002B38  6E53               	movwf	___fldiv@b^0,c
  4795   002B3A  0E00               	movlw	0
  4796   002B3C  6E54               	movwf	(___fldiv@b+1)^0,c
  4797   002B3E  0E00               	movlw	0
  4798   002B40  6E55               	movwf	(___fldiv@b+2)^0,c
  4799   002B42  0E00               	movlw	0
  4800   002B44  6E56               	movwf	(___fldiv@b+3)^0,c
  4801   002B46  0E00               	movlw	0
  4802   002B48  6F64               	movwf	___fldiv@sign& (0+255),b
  4803   002B4A                     l4162:
  4804                           
  4805                           ; BSR set to: 0
  4806   002B4A  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  4807   002B4E                     
  4808                           ; BSR set to: 0
  4809   002B4E  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  4810   002B50  EFAC  F015         	goto	u3881
  4811   002B54  EFAE  F015         	goto	u3880
  4812   002B58                     u3881:
  4813   002B58  EFB1  F015         	goto	l4168
  4814   002B5C                     u3880:
  4815   002B5C                     
  4816                           ; BSR set to: 0
  4817   002B5C  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4818   002B5E  EFB2  F015         	goto	l4170
  4819   002B62                     l4168:
  4820                           
  4821                           ; BSR set to: 0
  4822   002B62  9E55               	bcf	(___fldiv@b+2)^0,7,c
  4823   002B64                     l4170:
  4824                           
  4825                           ; BSR set to: 0
  4826   002B64  90D8               	bcf	status,0,c
  4827   002B66  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  4828   002B68  6E56               	movwf	(___fldiv@b+3)^0,c
  4829   002B6A  EF68  F014         	goto	l4084
  4830   002B6E                     l1271:
  4831                           
  4832                           ; BSR set to: 0
  4833   002B6E  0012               	return		;funcret
  4834   002B70                     __end_of___fldiv:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _LED_init *****************
  4838 ;; Defined at:
  4839 ;;		line 4 in file "LED.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		None
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:        0 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text25
  4868   004A26                     __ptext25:
  4869                           	callstack 0
  4870   004A26                     _LED_init:
  4871                           	callstack 29
  4872   004A26                     
  4873                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  4874   004A26  9884               	bcf	132,4,c	;volatile
  4875                           
  4876                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  4877   004A28  9088               	bcf	136,0,c	;volatile
  4878                           
  4879                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  4880   004A2A  9086               	bcf	134,0,c	;volatile
  4881                           
  4882                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  4883   004A2C  987C               	bcf	124,4,c	;volatile
  4884                           
  4885                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  4886   004A2E  9080               	bcf	128,0,c	;volatile
  4887                           
  4888                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  4889   004A30  907E               	bcf	126,0,c	;volatile
  4890   004A32  0012               	return		;funcret
  4891   004A34                     __end_of_LED_init:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _Interrupts_init *****************
  4895 ;; Defined at:
  4896 ;;		line 5 in file "interrupts.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		None
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; Hardware stack levels required when called: 1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text26
  4925   004A40                     __ptext26:
  4926                           	callstack 0
  4927   004A40                     _Interrupts_init:
  4928                           	callstack 29
  4929   004A40                     
  4930                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  4931   004A40  010E               	movlb	14	; () banked
  4932   004A42  872D               	bsf	45,3,b	;volatile
  4933                           
  4934                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  4935   004A44  8AF2               	bsf	242,5,c	;volatile
  4936                           
  4937                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  4938   004A46  8CF2               	bsf	242,6,c	;volatile
  4939                           
  4940                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  4941   004A48  8EF2               	bsf	242,7,c	;volatile
  4942   004A4A                     
  4943                           ; BSR set to: 14
  4944   004A4A  0012               	return		;funcret
  4945   004A4C                     __end_of_Interrupts_init:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _Colour2Action *****************
  4949 ;; Defined at:
  4950 ;;		line 106 in file "colorfunctions.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  cf              2   90[COMRAM] PTR struct RGBC_rel
  4953 ;;		 -> colorf(22), 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 8
  4972 ;; This function calls:
  4973 ;;		_Blue_T180
  4974 ;;		_Green_L90
  4975 ;;		_LightBlue_L135
  4976 ;;		_Orange_R135
  4977 ;;		_Pink_rev1_L90
  4978 ;;		_Red_R90
  4979 ;;		_White
  4980 ;;		_Yellow_rev1_R90
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text27
  4987   002D8E                     __ptext27:
  4988                           	callstack 0
  4989   002D8E                     _Colour2Action:
  4990                           	callstack 22
  4991   002D8E                     
  4992                           ;colorfunctions.c: 106: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 107: {
      +                          ;colorfunctions.c: 108:     if (cf->colourindex == 0)
  4993   002D8E  EE20 F014          	lfsr	2,20
  4994   002D92  505B               	movf	Colour2Action@cf^0,w,c
  4995   002D94  26D9               	addwf	fsr2l,f,c
  4996   002D96  505C               	movf	(Colour2Action@cf+1)^0,w,c
  4997   002D98  22DA               	addwfc	fsr2h,f,c
  4998   002D9A  50DE               	movf	postinc2,w,c
  4999   002D9C  10DE               	iorwf	postinc2,w,c
  5000   002D9E  A4D8               	btfss	status,2,c
  5001   002DA0  EFD4  F016         	goto	u4121
  5002   002DA4  EFD6  F016         	goto	u4120
  5003   002DA8                     u4121:
  5004   002DA8  EFE2  F016         	goto	l4398
  5005   002DAC                     u4120:
  5006   002DAC                     
  5007                           ;colorfunctions.c: 109:     {;colorfunctions.c: 110:         Red_R90(&motorL,&motorR);
  5008   002DAC  0EF6               	movlw	low _motorL
  5009   002DAE  6E21               	movwf	Red_R90@mL^0,c
  5010   002DB0  0E00               	movlw	high _motorL
  5011   002DB2  6E22               	movwf	(Red_R90@mL+1)^0,c
  5012   002DB4  0EED               	movlw	low _motorR
  5013   002DB6  6E23               	movwf	Red_R90@mR^0,c
  5014   002DB8  0E00               	movlw	high _motorR
  5015   002DBA  6E24               	movwf	(Red_R90@mR+1)^0,c
  5016   002DBC  EC42  F021         	call	_Red_R90	;wreg free
  5017                           
  5018                           ;colorfunctions.c: 111:     }
  5019   002DC0  EFA0  F017         	goto	l600
  5020   002DC4                     l4398:
  5021   002DC4  EE20 F014          	lfsr	2,20
  5022   002DC8  505B               	movf	Colour2Action@cf^0,w,c
  5023   002DCA  26D9               	addwf	fsr2l,f,c
  5024   002DCC  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5025   002DCE  22DA               	addwfc	fsr2h,f,c
  5026   002DD0  04DE               	decf	postinc2,w,c
  5027   002DD2  10DE               	iorwf	postinc2,w,c
  5028   002DD4  A4D8               	btfss	status,2,c
  5029   002DD6  EFEF  F016         	goto	u4131
  5030   002DDA  EFF1  F016         	goto	u4130
  5031   002DDE                     u4131:
  5032   002DDE  EFFD  F016         	goto	l4402
  5033   002DE2                     u4130:
  5034   002DE2                     
  5035                           ;colorfunctions.c: 113:     {;colorfunctions.c: 114:         Green_L90(&motorL,&motorR);
  5036   002DE2  0EF6               	movlw	low _motorL
  5037   002DE4  6E21               	movwf	Green_L90@mL^0,c
  5038   002DE6  0E00               	movlw	high _motorL
  5039   002DE8  6E22               	movwf	(Green_L90@mL+1)^0,c
  5040   002DEA  0EED               	movlw	low _motorR
  5041   002DEC  6E23               	movwf	Green_L90@mR^0,c
  5042   002DEE  0E00               	movlw	high _motorR
  5043   002DF0  6E24               	movwf	(Green_L90@mR+1)^0,c
  5044   002DF2  EC80  F021         	call	_Green_L90	;wreg free
  5045                           
  5046                           ;colorfunctions.c: 115:     }
  5047   002DF6  EFA0  F017         	goto	l600
  5048   002DFA                     l4402:
  5049   002DFA  EE20 F014          	lfsr	2,20
  5050   002DFE  505B               	movf	Colour2Action@cf^0,w,c
  5051   002E00  26D9               	addwf	fsr2l,f,c
  5052   002E02  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5053   002E04  22DA               	addwfc	fsr2h,f,c
  5054   002E06  0E02               	movlw	2
  5055   002E08  18DE               	xorwf	postinc2,w,c
  5056   002E0A  10DE               	iorwf	postinc2,w,c
  5057   002E0C  A4D8               	btfss	status,2,c
  5058   002E0E  EF0B  F017         	goto	u4141
  5059   002E12  EF0D  F017         	goto	u4140
  5060   002E16                     u4141:
  5061   002E16  EF19  F017         	goto	l4406
  5062   002E1A                     u4140:
  5063   002E1A                     
  5064                           ;colorfunctions.c: 117:     {;colorfunctions.c: 118:         Blue_T180(&motorL,&motorR);
  5065   002E1A  0EF6               	movlw	low _motorL
  5066   002E1C  6E24               	movwf	Blue_T180@mL^0,c
  5067   002E1E  0E00               	movlw	high _motorL
  5068   002E20  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5069   002E22  0EED               	movlw	low _motorR
  5070   002E24  6E26               	movwf	Blue_T180@mR^0,c
  5071   002E26  0E00               	movlw	high _motorR
  5072   002E28  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5073   002E2A  EC55  F022         	call	_Blue_T180	;wreg free
  5074                           
  5075                           ;colorfunctions.c: 119:     }
  5076   002E2E  EFA0  F017         	goto	l600
  5077   002E32                     l4406:
  5078   002E32  EE20 F014          	lfsr	2,20
  5079   002E36  505B               	movf	Colour2Action@cf^0,w,c
  5080   002E38  26D9               	addwf	fsr2l,f,c
  5081   002E3A  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5082   002E3C  22DA               	addwfc	fsr2h,f,c
  5083   002E3E  0E03               	movlw	3
  5084   002E40  18DE               	xorwf	postinc2,w,c
  5085   002E42  10DE               	iorwf	postinc2,w,c
  5086   002E44  A4D8               	btfss	status,2,c
  5087   002E46  EF27  F017         	goto	u4151
  5088   002E4A  EF29  F017         	goto	u4150
  5089   002E4E                     u4151:
  5090   002E4E  EF35  F017         	goto	l4410
  5091   002E52                     u4150:
  5092   002E52                     
  5093                           ;colorfunctions.c: 121:     {;colorfunctions.c: 122:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5094   002E52  0EF6               	movlw	low _motorL
  5095   002E54  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5096   002E56  0E00               	movlw	high _motorL
  5097   002E58  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5098   002E5A  0EED               	movlw	low _motorR
  5099   002E5C  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5100   002E5E  0E00               	movlw	high _motorR
  5101   002E60  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5102   002E62  EC2D  F01D         	call	_Yellow_rev1_R90	;wreg free
  5103                           
  5104                           ;colorfunctions.c: 123:     }
  5105   002E66  EFA0  F017         	goto	l600
  5106   002E6A                     l4410:
  5107   002E6A  EE20 F014          	lfsr	2,20
  5108   002E6E  505B               	movf	Colour2Action@cf^0,w,c
  5109   002E70  26D9               	addwf	fsr2l,f,c
  5110   002E72  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5111   002E74  22DA               	addwfc	fsr2h,f,c
  5112   002E76  0E04               	movlw	4
  5113   002E78  18DE               	xorwf	postinc2,w,c
  5114   002E7A  10DE               	iorwf	postinc2,w,c
  5115   002E7C  A4D8               	btfss	status,2,c
  5116   002E7E  EF43  F017         	goto	u4161
  5117   002E82  EF45  F017         	goto	u4160
  5118   002E86                     u4161:
  5119   002E86  EF51  F017         	goto	l4414
  5120   002E8A                     u4160:
  5121   002E8A                     
  5122                           ;colorfunctions.c: 125:     {;colorfunctions.c: 126:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5123   002E8A  0EF6               	movlw	low _motorL
  5124   002E8C  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5125   002E8E  0E00               	movlw	high _motorL
  5126   002E90  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5127   002E92  0EED               	movlw	low _motorR
  5128   002E94  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5129   002E96  0E00               	movlw	high _motorR
  5130   002E98  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5131   002E9A  EC81  F01D         	call	_Pink_rev1_L90	;wreg free
  5132                           
  5133                           ;colorfunctions.c: 127:     }
  5134   002E9E  EFA0  F017         	goto	l600
  5135   002EA2                     l4414:
  5136   002EA2  EE20 F014          	lfsr	2,20
  5137   002EA6  505B               	movf	Colour2Action@cf^0,w,c
  5138   002EA8  26D9               	addwf	fsr2l,f,c
  5139   002EAA  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5140   002EAC  22DA               	addwfc	fsr2h,f,c
  5141   002EAE  0E05               	movlw	5
  5142   002EB0  18DE               	xorwf	postinc2,w,c
  5143   002EB2  10DE               	iorwf	postinc2,w,c
  5144   002EB4  A4D8               	btfss	status,2,c
  5145   002EB6  EF5F  F017         	goto	u4171
  5146   002EBA  EF61  F017         	goto	u4170
  5147   002EBE                     u4171:
  5148   002EBE  EF6D  F017         	goto	l4418
  5149   002EC2                     u4170:
  5150   002EC2                     
  5151                           ;colorfunctions.c: 129:     {;colorfunctions.c: 130:         Orange_R135(&motorL,&motorR
      +                          );
  5152   002EC2  0EF6               	movlw	low _motorL
  5153   002EC4  6E21               	movwf	Orange_R135@mL^0,c
  5154   002EC6  0E00               	movlw	high _motorL
  5155   002EC8  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5156   002ECA  0EED               	movlw	low _motorR
  5157   002ECC  6E23               	movwf	Orange_R135@mR^0,c
  5158   002ECE  0E00               	movlw	high _motorR
  5159   002ED0  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5160   002ED2  EC28  F01E         	call	_Orange_R135	;wreg free
  5161                           
  5162                           ;colorfunctions.c: 131:     }
  5163   002ED6  EFA0  F017         	goto	l600
  5164   002EDA                     l4418:
  5165   002EDA  EE20 F014          	lfsr	2,20
  5166   002EDE  505B               	movf	Colour2Action@cf^0,w,c
  5167   002EE0  26D9               	addwf	fsr2l,f,c
  5168   002EE2  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5169   002EE4  22DA               	addwfc	fsr2h,f,c
  5170   002EE6  0E06               	movlw	6
  5171   002EE8  18DE               	xorwf	postinc2,w,c
  5172   002EEA  10DE               	iorwf	postinc2,w,c
  5173   002EEC  A4D8               	btfss	status,2,c
  5174   002EEE  EF7B  F017         	goto	u4181
  5175   002EF2  EF7D  F017         	goto	u4180
  5176   002EF6                     u4181:
  5177   002EF6  EF89  F017         	goto	l4422
  5178   002EFA                     u4180:
  5179   002EFA                     
  5180                           ;colorfunctions.c: 133:     {;colorfunctions.c: 134:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5181   002EFA  0EF6               	movlw	low _motorL
  5182   002EFC  6E21               	movwf	LightBlue_L135@mL^0,c
  5183   002EFE  0E00               	movlw	high _motorL
  5184   002F00  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5185   002F02  0EED               	movlw	low _motorR
  5186   002F04  6E23               	movwf	LightBlue_L135@mR^0,c
  5187   002F06  0E00               	movlw	high _motorR
  5188   002F08  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5189   002F0A  EC7A  F01E         	call	_LightBlue_L135	;wreg free
  5190                           
  5191                           ;colorfunctions.c: 135:     }
  5192   002F0E  EFA0  F017         	goto	l600
  5193   002F12                     l4422:
  5194   002F12                     
  5195                           ;colorfunctions.c: 137:     {;colorfunctions.c: 138:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5196   002F12  0EF6               	movlw	low _motorL
  5197   002F14  0100               	movlb	0	; () banked
  5198   002F16  6F60               	movwf	White@mL& (0+255),b
  5199   002F18  0E00               	movlw	high _motorL
  5200   002F1A  6F61               	movwf	(White@mL+1)& (0+255),b
  5201   002F1C  0EED               	movlw	low _motorR
  5202   002F1E  6F62               	movwf	White@mR& (0+255),b
  5203   002F20  0E00               	movlw	high _motorR
  5204   002F22  6F63               	movwf	(White@mR+1)& (0+255),b
  5205   002F24  C0E8  F064         	movff	_movementCount,White@movementCount	;volatile
  5206   002F28  C0E9  F065         	movff	_movementCount+1,White@movementCount+1	;volatile
  5207   002F2C  0E70               	movlw	low _movementMemory
  5208   002F2E  6F66               	movwf	White@movementMemory& (0+255),b
  5209   002F30  0E01               	movlw	high _movementMemory
  5210   002F32  6F67               	movwf	(White@movementMemory+1)& (0+255),b
  5211   002F34  0E20               	movlw	low _timerMemory
  5212   002F36  6F68               	movwf	White@timerMemory& (0+255),b
  5213   002F38  0E01               	movlw	high _timerMemory
  5214   002F3A  6F69               	movwf	(White@timerMemory+1)& (0+255),b
  5215   002F3C  ECA0  F00F         	call	_White	;wreg free
  5216   002F40                     l600:
  5217   002F40  0012               	return		;funcret
  5218   002F42                     __end_of_Colour2Action:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _White *****************
  5222 ;; Defined at:
  5223 ;;		line 334 in file "dc_motor.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  5226 ;;		 -> motorL(9), 
  5227 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  5228 ;;		 -> motorR(9), 
  5229 ;;  movementCoun    2    4[BANK0 ] unsigned int 
  5230 ;;  movementMemo    2    6[BANK0 ] PTR volatile unsigned in
  5231 ;;		 -> movementMemory(40), 
  5232 ;;  timerMemory     2    8[BANK0 ] PTR volatile float 
  5233 ;;		 -> timerMemory(80), 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  tempTimer       4   10[BANK0 ] float 
  5236 ;;  i               2   14[BANK0 ] int 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5246 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;Total ram usage:       20 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 7
  5253 ;; This function calls:
  5254 ;;		_Blue_T180
  5255 ;;		_Green_L90
  5256 ;;		_LightBlue_L135
  5257 ;;		_Orange_R135
  5258 ;;		_Pink_rev1_L90
  5259 ;;		_Red_R90
  5260 ;;		_TimerReset
  5261 ;;		_Yellow_rev1_R90
  5262 ;;		___fladd
  5263 ;;		___flge
  5264 ;;		_fullSpeedAhead
  5265 ;;		_getTimerValue
  5266 ;;		_reverseHalfSquare
  5267 ;;		_rotate180left
  5268 ;;		_stop
  5269 ;; This function is called by:
  5270 ;;		_Colour2Action
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text28
  5275   001F40                     __ptext28:
  5276                           	callstack 0
  5277   001F40                     _White:
  5278                           	callstack 22
  5279   001F40                     
  5280                           ;dc_motor.c: 334: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile float *timerMemory);dc_motor.c
      +                          : 335: {;dc_motor.c: 336:     LATDbits.LATD4 = 1;;
  5281   001F40  887C               	bsf	124,4,c	;volatile
  5282                           
  5283                           ;dc_motor.c: 338:     while (!retracingDone){
  5284   001F42  EFB3  F011         	goto	l3984
  5285   001F46                     l3906:
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;dc_motor.c: 339:         reverseHalfSquare(mL,mR);
  5289   001F46  C060  F01B         	movff	White@mL,reverseHalfSquare@mL
  5290   001F4A  C061  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5291   001F4E  C062  F01D         	movff	White@mR,reverseHalfSquare@mR
  5292   001F52  C063  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5293   001F56  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  5294                           
  5295                           ;dc_motor.c: 340:         rotate180left(mL,mR);
  5296   001F5A  C060  F020         	movff	White@mL,rotate180left@mL
  5297   001F5E  C061  F021         	movff	White@mL+1,rotate180left@mL+1
  5298   001F62  C062  F022         	movff	White@mR,rotate180left@mR
  5299   001F66  C063  F023         	movff	White@mR+1,rotate180left@mR+1
  5300   001F6A  EC7F  F022         	call	_rotate180left	;wreg free
  5301   001F6E                     
  5302                           ;dc_motor.c: 341:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5303   001F6E  0E29               	movlw	41
  5304   001F70  6E58               	movwf	(??_White+1)^0,c
  5305   001F72  0E96               	movlw	150
  5306   001F74  6E57               	movwf	??_White^0,c
  5307   001F76  0E7F               	movlw	127
  5308   001F78                     u4297:
  5309   001F78  2EE8               	decfsz	wreg,f,c
  5310   001F7A  D7FE               	bra	u4297
  5311   001F7C  2E57               	decfsz	??_White^0,f,c
  5312   001F7E  D7FC               	bra	u4297
  5313   001F80  2E58               	decfsz	(??_White+1)^0,f,c
  5314   001F82  D7FA               	bra	u4297
  5315   001F84  F000               	nop	
  5316   001F86                     
  5317                           ;dc_motor.c: 342:         ForwardFlag = 0;
  5318   001F86  0E00               	movlw	0
  5319   001F88  0100               	movlb	0	; () banked
  5320   001F8A  6FFF               	movwf	_ForwardFlag& (0+255),b	;volatile
  5321   001F8C                     
  5322                           ; BSR set to: 0
  5323                           ;dc_motor.c: 343:         retracingDone = 1;
  5324   001F8C  0E00               	movlw	0
  5325   001F8E  6FE7               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5326   001F90  0E01               	movlw	1
  5327   001F92  6FE6               	movwf	_retracingDone& (0+255),b	;volatile
  5328   001F94                     
  5329                           ; BSR set to: 0
  5330                           ;dc_motor.c: 345:         for (int i=movementCount; i>=0;i--){
  5331   001F94  C064  F06E         	movff	White@movementCount,White@i
  5332   001F98  C065  F06F         	movff	White@movementCount+1,White@i+1
  5333   001F9C                     l3916:
  5334                           
  5335                           ; BSR set to: 0
  5336   001F9C  BF6F               	btfsc	(White@i+1)& (0+255),7,b
  5337   001F9E  EFD5  F00F         	goto	u3510
  5338   001FA2  EFD3  F00F         	goto	u3511
  5339   001FA6                     u3511:
  5340   001FA6  EFD7  F00F         	goto	l325
  5341   001FAA                     u3510:
  5342   001FAA  EFB3  F011         	goto	l3984
  5343   001FAE                     l325:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;dc_motor.c: 346:             LATDbits.LATD4 = 1;;
  5347   001FAE  887C               	bsf	124,4,c	;volatile
  5348   001FB0                     
  5349                           ; BSR set to: 0
  5350                           ;dc_motor.c: 347:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5351   001FB0  0E11               	movlw	17
  5352   001FB2  6E58               	movwf	(??_White+1)^0,c
  5353   001FB4  0E3C               	movlw	60
  5354   001FB6  6E57               	movwf	??_White^0,c
  5355   001FB8  0ECB               	movlw	203
  5356   001FBA                     u4307:
  5357   001FBA  2EE8               	decfsz	wreg,f,c
  5358   001FBC  D7FE               	bra	u4307
  5359   001FBE  2E57               	decfsz	??_White^0,f,c
  5360   001FC0  D7FC               	bra	u4307
  5361   001FC2  2E58               	decfsz	(??_White+1)^0,f,c
  5362   001FC4  D7FA               	bra	u4307
  5363   001FC6  F000               	nop	
  5364   001FC8                     
  5365                           ;dc_motor.c: 348:             if (movementMemory[i]==0){
  5366   001FC8  90D8               	bcf	status,0,c
  5367   001FCA  0100               	movlb	0	; () banked
  5368   001FCC  356E               	rlcf	White@i& (0+255),w,b
  5369   001FCE  6ED9               	movwf	fsr2l,c
  5370   001FD0  356F               	rlcf	(White@i+1)& (0+255),w,b
  5371   001FD2  6EDA               	movwf	fsr2h,c
  5372   001FD4  5166               	movf	White@movementMemory& (0+255),w,b
  5373   001FD6  26D9               	addwf	fsr2l,f,c
  5374   001FD8  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5375   001FDA  22DA               	addwfc	fsr2h,f,c
  5376   001FDC  50DE               	movf	postinc2,w,c
  5377   001FDE  10DE               	iorwf	postinc2,w,c
  5378   001FE0  A4D8               	btfss	status,2,c
  5379   001FE2  EFF5  F00F         	goto	u3521
  5380   001FE6  EFF7  F00F         	goto	u3520
  5381   001FEA                     u3521:
  5382   001FEA  EF03  F010         	goto	l3926
  5383   001FEE                     u3520:
  5384   001FEE                     
  5385                           ; BSR set to: 0
  5386                           ;dc_motor.c: 349:                 Red_R90(mL,mR);}
  5387   001FEE  C060  F021         	movff	White@mL,Red_R90@mL
  5388   001FF2  C061  F022         	movff	White@mL+1,Red_R90@mL+1
  5389   001FF6  C062  F023         	movff	White@mR,Red_R90@mR
  5390   001FFA  C063  F024         	movff	White@mR+1,Red_R90@mR+1
  5391   001FFE  EC42  F021         	call	_Red_R90	;wreg free
  5392   002002  EFDB  F010         	goto	l3954
  5393   002006                     l3926:
  5394                           
  5395                           ; BSR set to: 0
  5396   002006  90D8               	bcf	status,0,c
  5397   002008  356E               	rlcf	White@i& (0+255),w,b
  5398   00200A  6ED9               	movwf	fsr2l,c
  5399   00200C  356F               	rlcf	(White@i+1)& (0+255),w,b
  5400   00200E  6EDA               	movwf	fsr2h,c
  5401   002010  5166               	movf	White@movementMemory& (0+255),w,b
  5402   002012  26D9               	addwf	fsr2l,f,c
  5403   002014  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5404   002016  22DA               	addwfc	fsr2h,f,c
  5405   002018  04DE               	decf	postinc2,w,c
  5406   00201A  10DE               	iorwf	postinc2,w,c
  5407   00201C  A4D8               	btfss	status,2,c
  5408   00201E  EF13  F010         	goto	u3531
  5409   002022  EF15  F010         	goto	u3530
  5410   002026                     u3531:
  5411   002026  EF21  F010         	goto	l3930
  5412   00202A                     u3530:
  5413   00202A                     
  5414                           ; BSR set to: 0
  5415                           ;dc_motor.c: 351:                 Green_L90(mL,mR);}
  5416   00202A  C060  F021         	movff	White@mL,Green_L90@mL
  5417   00202E  C061  F022         	movff	White@mL+1,Green_L90@mL+1
  5418   002032  C062  F023         	movff	White@mR,Green_L90@mR
  5419   002036  C063  F024         	movff	White@mR+1,Green_L90@mR+1
  5420   00203A  EC80  F021         	call	_Green_L90	;wreg free
  5421   00203E  EFDB  F010         	goto	l3954
  5422   002042                     l3930:
  5423                           
  5424                           ; BSR set to: 0
  5425   002042  90D8               	bcf	status,0,c
  5426   002044  356E               	rlcf	White@i& (0+255),w,b
  5427   002046  6ED9               	movwf	fsr2l,c
  5428   002048  356F               	rlcf	(White@i+1)& (0+255),w,b
  5429   00204A  6EDA               	movwf	fsr2h,c
  5430   00204C  5166               	movf	White@movementMemory& (0+255),w,b
  5431   00204E  26D9               	addwf	fsr2l,f,c
  5432   002050  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5433   002052  22DA               	addwfc	fsr2h,f,c
  5434   002054  0E02               	movlw	2
  5435   002056  18DE               	xorwf	postinc2,w,c
  5436   002058  10DE               	iorwf	postinc2,w,c
  5437   00205A  A4D8               	btfss	status,2,c
  5438   00205C  EF32  F010         	goto	u3541
  5439   002060  EF34  F010         	goto	u3540
  5440   002064                     u3541:
  5441   002064  EF40  F010         	goto	l3934
  5442   002068                     u3540:
  5443   002068                     
  5444                           ; BSR set to: 0
  5445                           ;dc_motor.c: 353:                 Blue_T180(mL,mR);}
  5446   002068  C060  F024         	movff	White@mL,Blue_T180@mL
  5447   00206C  C061  F025         	movff	White@mL+1,Blue_T180@mL+1
  5448   002070  C062  F026         	movff	White@mR,Blue_T180@mR
  5449   002074  C063  F027         	movff	White@mR+1,Blue_T180@mR+1
  5450   002078  EC55  F022         	call	_Blue_T180	;wreg free
  5451   00207C  EFDB  F010         	goto	l3954
  5452   002080                     l3934:
  5453                           
  5454                           ; BSR set to: 0
  5455   002080  90D8               	bcf	status,0,c
  5456   002082  356E               	rlcf	White@i& (0+255),w,b
  5457   002084  6ED9               	movwf	fsr2l,c
  5458   002086  356F               	rlcf	(White@i+1)& (0+255),w,b
  5459   002088  6EDA               	movwf	fsr2h,c
  5460   00208A  5166               	movf	White@movementMemory& (0+255),w,b
  5461   00208C  26D9               	addwf	fsr2l,f,c
  5462   00208E  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5463   002090  22DA               	addwfc	fsr2h,f,c
  5464   002092  0E03               	movlw	3
  5465   002094  18DE               	xorwf	postinc2,w,c
  5466   002096  10DE               	iorwf	postinc2,w,c
  5467   002098  A4D8               	btfss	status,2,c
  5468   00209A  EF51  F010         	goto	u3551
  5469   00209E  EF53  F010         	goto	u3550
  5470   0020A2                     u3551:
  5471   0020A2  EF5F  F010         	goto	l3938
  5472   0020A6                     u3550:
  5473   0020A6                     
  5474                           ; BSR set to: 0
  5475                           ;dc_motor.c: 355:                 Yellow_rev1_R90(mL,mR);}
  5476   0020A6  C060  F021         	movff	White@mL,Yellow_rev1_R90@mL
  5477   0020AA  C061  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  5478   0020AE  C062  F023         	movff	White@mR,Yellow_rev1_R90@mR
  5479   0020B2  C063  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  5480   0020B6  EC2D  F01D         	call	_Yellow_rev1_R90	;wreg free
  5481   0020BA  EFDB  F010         	goto	l3954
  5482   0020BE                     l3938:
  5483                           
  5484                           ; BSR set to: 0
  5485   0020BE  90D8               	bcf	status,0,c
  5486   0020C0  356E               	rlcf	White@i& (0+255),w,b
  5487   0020C2  6ED9               	movwf	fsr2l,c
  5488   0020C4  356F               	rlcf	(White@i+1)& (0+255),w,b
  5489   0020C6  6EDA               	movwf	fsr2h,c
  5490   0020C8  5166               	movf	White@movementMemory& (0+255),w,b
  5491   0020CA  26D9               	addwf	fsr2l,f,c
  5492   0020CC  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5493   0020CE  22DA               	addwfc	fsr2h,f,c
  5494   0020D0  0E04               	movlw	4
  5495   0020D2  18DE               	xorwf	postinc2,w,c
  5496   0020D4  10DE               	iorwf	postinc2,w,c
  5497   0020D6  A4D8               	btfss	status,2,c
  5498   0020D8  EF70  F010         	goto	u3561
  5499   0020DC  EF72  F010         	goto	u3560
  5500   0020E0                     u3561:
  5501   0020E0  EF7E  F010         	goto	l3942
  5502   0020E4                     u3560:
  5503   0020E4                     
  5504                           ; BSR set to: 0
  5505                           ;dc_motor.c: 357:                 Pink_rev1_L90(mL,mR);}
  5506   0020E4  C060  F021         	movff	White@mL,Pink_rev1_L90@mL
  5507   0020E8  C061  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  5508   0020EC  C062  F023         	movff	White@mR,Pink_rev1_L90@mR
  5509   0020F0  C063  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  5510   0020F4  EC81  F01D         	call	_Pink_rev1_L90	;wreg free
  5511   0020F8  EFDB  F010         	goto	l3954
  5512   0020FC                     l3942:
  5513                           
  5514                           ; BSR set to: 0
  5515   0020FC  90D8               	bcf	status,0,c
  5516   0020FE  356E               	rlcf	White@i& (0+255),w,b
  5517   002100  6ED9               	movwf	fsr2l,c
  5518   002102  356F               	rlcf	(White@i+1)& (0+255),w,b
  5519   002104  6EDA               	movwf	fsr2h,c
  5520   002106  5166               	movf	White@movementMemory& (0+255),w,b
  5521   002108  26D9               	addwf	fsr2l,f,c
  5522   00210A  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5523   00210C  22DA               	addwfc	fsr2h,f,c
  5524   00210E  0E05               	movlw	5
  5525   002110  18DE               	xorwf	postinc2,w,c
  5526   002112  10DE               	iorwf	postinc2,w,c
  5527   002114  A4D8               	btfss	status,2,c
  5528   002116  EF8F  F010         	goto	u3571
  5529   00211A  EF91  F010         	goto	u3570
  5530   00211E                     u3571:
  5531   00211E  EF9D  F010         	goto	l3946
  5532   002122                     u3570:
  5533   002122                     
  5534                           ; BSR set to: 0
  5535                           ;dc_motor.c: 359:                 Orange_R135(mL,mR);}
  5536   002122  C060  F021         	movff	White@mL,Orange_R135@mL
  5537   002126  C061  F022         	movff	White@mL+1,Orange_R135@mL+1
  5538   00212A  C062  F023         	movff	White@mR,Orange_R135@mR
  5539   00212E  C063  F024         	movff	White@mR+1,Orange_R135@mR+1
  5540   002132  EC28  F01E         	call	_Orange_R135	;wreg free
  5541   002136  EFDB  F010         	goto	l3954
  5542   00213A                     l3946:
  5543                           
  5544                           ; BSR set to: 0
  5545   00213A  90D8               	bcf	status,0,c
  5546   00213C  356E               	rlcf	White@i& (0+255),w,b
  5547   00213E  6ED9               	movwf	fsr2l,c
  5548   002140  356F               	rlcf	(White@i+1)& (0+255),w,b
  5549   002142  6EDA               	movwf	fsr2h,c
  5550   002144  5166               	movf	White@movementMemory& (0+255),w,b
  5551   002146  26D9               	addwf	fsr2l,f,c
  5552   002148  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5553   00214A  22DA               	addwfc	fsr2h,f,c
  5554   00214C  0E06               	movlw	6
  5555   00214E  18DE               	xorwf	postinc2,w,c
  5556   002150  10DE               	iorwf	postinc2,w,c
  5557   002152  A4D8               	btfss	status,2,c
  5558   002154  EFAE  F010         	goto	u3581
  5559   002158  EFB0  F010         	goto	u3580
  5560   00215C                     u3581:
  5561   00215C  EFBC  F010         	goto	l3950
  5562   002160                     u3580:
  5563   002160                     
  5564                           ; BSR set to: 0
  5565                           ;dc_motor.c: 361:                 LightBlue_L135(mL,mR);}
  5566   002160  C060  F021         	movff	White@mL,LightBlue_L135@mL
  5567   002164  C061  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  5568   002168  C062  F023         	movff	White@mR,LightBlue_L135@mR
  5569   00216C  C063  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  5570   002170  EC7A  F01E         	call	_LightBlue_L135	;wreg free
  5571   002174  EFDB  F010         	goto	l3954
  5572   002178                     l3950:
  5573                           
  5574                           ; BSR set to: 0
  5575   002178  90D8               	bcf	status,0,c
  5576   00217A  356E               	rlcf	White@i& (0+255),w,b
  5577   00217C  6ED9               	movwf	fsr2l,c
  5578   00217E  356F               	rlcf	(White@i+1)& (0+255),w,b
  5579   002180  6EDA               	movwf	fsr2h,c
  5580   002182  5166               	movf	White@movementMemory& (0+255),w,b
  5581   002184  26D9               	addwf	fsr2l,f,c
  5582   002186  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5583   002188  22DA               	addwfc	fsr2h,f,c
  5584   00218A  0E07               	movlw	7
  5585   00218C  18DE               	xorwf	postinc2,w,c
  5586   00218E  10DE               	iorwf	postinc2,w,c
  5587   002190  A4D8               	btfss	status,2,c
  5588   002192  EFCD  F010         	goto	u3591
  5589   002196  EFCF  F010         	goto	u3590
  5590   00219A                     u3591:
  5591   00219A  EFDB  F010         	goto	l336
  5592   00219E                     u3590:
  5593   00219E                     
  5594                           ; BSR set to: 0
  5595                           ;dc_motor.c: 363:                 stop(mL,mR);}
  5596   00219E  C060  F014         	movff	White@mL,stop@mL
  5597   0021A2  C061  F015         	movff	White@mL+1,stop@mL+1
  5598   0021A6  C062  F016         	movff	White@mR,stop@mR
  5599   0021AA  C063  F017         	movff	White@mR+1,stop@mR+1
  5600   0021AE  ECD5  F01D         	call	_stop	;wreg free
  5601   0021B2  EFDB  F010         	goto	l3954
  5602   0021B6                     l336:
  5603   0021B6                     l3954:
  5604                           
  5605                           ;dc_motor.c: 364:             LATDbits.LATD4 = 1;;
  5606   0021B6  887C               	bsf	124,4,c	;volatile
  5607   0021B8                     
  5608                           ;dc_motor.c: 366:             float tempTimer = 0;
  5609   0021B8  0E00               	movlw	0
  5610   0021BA  0100               	movlb	0	; () banked
  5611   0021BC  6F6A               	movwf	White@tempTimer& (0+255),b
  5612   0021BE  0E00               	movlw	0
  5613   0021C0  6F6B               	movwf	(White@tempTimer+1)& (0+255),b
  5614   0021C2  0E00               	movlw	0
  5615   0021C4  6F6C               	movwf	(White@tempTimer+2)& (0+255),b
  5616   0021C6  0E00               	movlw	0
  5617   0021C8  6F6D               	movwf	(White@tempTimer+3)& (0+255),b
  5618   0021CA                     
  5619                           ; BSR set to: 0
  5620                           ;dc_motor.c: 367:             TimerReset();
  5621   0021CA  EC35  F025         	call	_TimerReset	;wreg free
  5622   0021CE                     
  5623                           ;dc_motor.c: 368:             fullSpeedAhead(mL,mR);
  5624   0021CE  C060  F014         	movff	White@mL,fullSpeedAhead@mL
  5625   0021D2  C061  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  5626   0021D6  C062  F016         	movff	White@mR,fullSpeedAhead@mR
  5627   0021DA  C063  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  5628   0021DE  ECC2  F020         	call	_fullSpeedAhead	;wreg free
  5629   0021E2                     
  5630                           ;dc_motor.c: 369:             if (timerMemory[i]<0)
  5631   0021E2  90D8               	bcf	status,0,c
  5632   0021E4  0100               	movlb	0	; () banked
  5633   0021E6  356E               	rlcf	White@i& (0+255),w,b
  5634   0021E8  6ED9               	movwf	fsr2l,c
  5635   0021EA  356F               	rlcf	(White@i+1)& (0+255),w,b
  5636   0021EC  6EDA               	movwf	fsr2h,c
  5637   0021EE  90D8               	bcf	status,0,c
  5638   0021F0  36D9               	rlcf	fsr2l,f,c
  5639   0021F2  36DA               	rlcf	fsr2h,f,c
  5640   0021F4  5168               	movf	White@timerMemory& (0+255),w,b
  5641   0021F6  26D9               	addwf	fsr2l,f,c
  5642   0021F8  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5643   0021FA  22DA               	addwfc	fsr2h,f,c
  5644   0021FC  0E03               	movlw	3
  5645   0021FE  BEDB               	btfsc	plusw2,7,c
  5646   002200  EF06  F011         	goto	u3600
  5647   002204  EF04  F011         	goto	u3601
  5648   002208                     u3601:
  5649   002208  EF4C  F011         	goto	l3970
  5650   00220C                     u3600:
  5651   00220C  EF12  F011         	goto	l3968
  5652   002210                     l3966:
  5653                           
  5654                           ;dc_motor.c: 372:                 {;dc_motor.c: 373:                     tempTimer = get
      +                          TimerValue();
  5655   002210  ECF8  F021         	call	_getTimerValue	;wreg free
  5656   002214  C033  F06A         	movff	?_getTimerValue,White@tempTimer
  5657   002218  C034  F06B         	movff	?_getTimerValue+1,White@tempTimer+1
  5658   00221C  C035  F06C         	movff	?_getTimerValue+2,White@tempTimer+2
  5659   002220  C036  F06D         	movff	?_getTimerValue+3,White@tempTimer+3
  5660   002224                     l3968:
  5661                           
  5662                           ;dc_motor.c: 371:                 while(tempTimer <(timerMemory[i]+_recogniseColour))
  5663   002224  C06A  F04B         	movff	White@tempTimer,___flge@ff1
  5664   002228  C06B  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  5665   00222C  C06C  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  5666   002230  C06D  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  5667   002234  0E00               	movlw	0
  5668   002236  6E3F               	movwf	___fladd@a^0,c
  5669   002238  0E80               	movlw	128
  5670   00223A  6E40               	movwf	(___fladd@a+1)^0,c
  5671   00223C  0E22               	movlw	34
  5672   00223E  6E41               	movwf	(___fladd@a+2)^0,c
  5673   002240  0E44               	movlw	68
  5674   002242  6E42               	movwf	(___fladd@a+3)^0,c
  5675   002244  90D8               	bcf	status,0,c
  5676   002246  0100               	movlb	0	; () banked
  5677   002248  356E               	rlcf	White@i& (0+255),w,b
  5678   00224A  6ED9               	movwf	fsr2l,c
  5679   00224C  356F               	rlcf	(White@i+1)& (0+255),w,b
  5680   00224E  6EDA               	movwf	fsr2h,c
  5681   002250  90D8               	bcf	status,0,c
  5682   002252  36D9               	rlcf	fsr2l,f,c
  5683   002254  36DA               	rlcf	fsr2h,f,c
  5684   002256  5168               	movf	White@timerMemory& (0+255),w,b
  5685   002258  26D9               	addwf	fsr2l,f,c
  5686   00225A  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5687   00225C  22DA               	addwfc	fsr2h,f,c
  5688   00225E  CFDE F03B          	movff	postinc2,___fladd@b
  5689   002262  CFDE F03C          	movff	postinc2,___fladd@b+1
  5690   002266  CFDE F03D          	movff	postinc2,___fladd@b+2
  5691   00226A  CFDE F03E          	movff	postinc2,___fladd@b+3
  5692   00226E  EC40  F00D         	call	___fladd	;wreg free
  5693   002272  C03B  F04F         	movff	?___fladd,___flge@ff2
  5694   002276  C03C  F050         	movff	?___fladd+1,___flge@ff2+1
  5695   00227A  C03D  F051         	movff	?___fladd+2,___flge@ff2+2
  5696   00227E  C03E  F052         	movff	?___fladd+3,___flge@ff2+3
  5697   002282  EC82  F01B         	call	___flge	;wreg free
  5698   002286  A0D8               	btfss	status,0,c
  5699   002288  EF48  F011         	goto	u3611
  5700   00228C  EF4A  F011         	goto	u3610
  5701   002290                     u3611:
  5702   002290  EF08  F011         	goto	l3966
  5703   002294                     u3610:
  5704   002294  EFA3  F011         	goto	l3978
  5705   002298                     l3970:
  5706                           
  5707                           ; BSR set to: 0
  5708   002298  0E00               	movlw	0
  5709   00229A  6E4B               	movwf	___flge@ff1^0,c
  5710   00229C  0E00               	movlw	0
  5711   00229E  6E4C               	movwf	(___flge@ff1+1)^0,c
  5712   0022A0  0E00               	movlw	0
  5713   0022A2  6E4D               	movwf	(___flge@ff1+2)^0,c
  5714   0022A4  0E00               	movlw	0
  5715   0022A6  6E4E               	movwf	(___flge@ff1+3)^0,c
  5716   0022A8  90D8               	bcf	status,0,c
  5717   0022AA  356E               	rlcf	White@i& (0+255),w,b
  5718   0022AC  6ED9               	movwf	fsr2l,c
  5719   0022AE  356F               	rlcf	(White@i+1)& (0+255),w,b
  5720   0022B0  6EDA               	movwf	fsr2h,c
  5721   0022B2  90D8               	bcf	status,0,c
  5722   0022B4  36D9               	rlcf	fsr2l,f,c
  5723   0022B6  36DA               	rlcf	fsr2h,f,c
  5724   0022B8  5168               	movf	White@timerMemory& (0+255),w,b
  5725   0022BA  26D9               	addwf	fsr2l,f,c
  5726   0022BC  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5727   0022BE  22DA               	addwfc	fsr2h,f,c
  5728   0022C0  CFDE F04F          	movff	postinc2,___flge@ff2
  5729   0022C4  CFDE F050          	movff	postinc2,___flge@ff2+1
  5730   0022C8  CFDE F051          	movff	postinc2,___flge@ff2+2
  5731   0022CC  CFDE F052          	movff	postinc2,___flge@ff2+3
  5732   0022D0  EC82  F01B         	call	___flge	;wreg free
  5733   0022D4  B0D8               	btfsc	status,0,c
  5734   0022D6  EF6F  F011         	goto	u3621
  5735   0022DA  EF71  F011         	goto	u3620
  5736   0022DE                     u3621:
  5737   0022DE  EFA3  F011         	goto	l3978
  5738   0022E2                     u3620:
  5739   0022E2  EF7D  F011         	goto	l3976
  5740   0022E6                     l3974:
  5741                           
  5742                           ;dc_motor.c: 377:                 {;dc_motor.c: 378:                     tempTimer = get
      +                          TimerValue();
  5743   0022E6  ECF8  F021         	call	_getTimerValue	;wreg free
  5744   0022EA  C033  F06A         	movff	?_getTimerValue,White@tempTimer
  5745   0022EE  C034  F06B         	movff	?_getTimerValue+1,White@tempTimer+1
  5746   0022F2  C035  F06C         	movff	?_getTimerValue+2,White@tempTimer+2
  5747   0022F6  C036  F06D         	movff	?_getTimerValue+3,White@tempTimer+3
  5748   0022FA                     l3976:
  5749                           
  5750                           ;dc_motor.c: 376:                 while(tempTimer<timerMemory[i])
  5751   0022FA  C06A  F04B         	movff	White@tempTimer,___flge@ff1
  5752   0022FE  C06B  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  5753   002302  C06C  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  5754   002306  C06D  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  5755   00230A  90D8               	bcf	status,0,c
  5756   00230C  0100               	movlb	0	; () banked
  5757   00230E  356E               	rlcf	White@i& (0+255),w,b
  5758   002310  6ED9               	movwf	fsr2l,c
  5759   002312  356F               	rlcf	(White@i+1)& (0+255),w,b
  5760   002314  6EDA               	movwf	fsr2h,c
  5761   002316  90D8               	bcf	status,0,c
  5762   002318  36D9               	rlcf	fsr2l,f,c
  5763   00231A  36DA               	rlcf	fsr2h,f,c
  5764   00231C  5168               	movf	White@timerMemory& (0+255),w,b
  5765   00231E  26D9               	addwf	fsr2l,f,c
  5766   002320  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5767   002322  22DA               	addwfc	fsr2h,f,c
  5768   002324  CFDE F04F          	movff	postinc2,___flge@ff2
  5769   002328  CFDE F050          	movff	postinc2,___flge@ff2+1
  5770   00232C  CFDE F051          	movff	postinc2,___flge@ff2+2
  5771   002330  CFDE F052          	movff	postinc2,___flge@ff2+3
  5772   002334  EC82  F01B         	call	___flge	;wreg free
  5773   002338  A0D8               	btfss	status,0,c
  5774   00233A  EFA1  F011         	goto	u3631
  5775   00233E  EFA3  F011         	goto	u3630
  5776   002342                     u3631:
  5777   002342  EF73  F011         	goto	l3974
  5778   002346                     u3630:
  5779   002346                     l3978:
  5780                           
  5781                           ;dc_motor.c: 381:             stop(mL,mR);
  5782   002346  C060  F014         	movff	White@mL,stop@mL
  5783   00234A  C061  F015         	movff	White@mL+1,stop@mL+1
  5784   00234E  C062  F016         	movff	White@mR,stop@mR
  5785   002352  C063  F017         	movff	White@mR+1,stop@mR+1
  5786   002356  ECD5  F01D         	call	_stop	;wreg free
  5787   00235A                     
  5788                           ;dc_motor.c: 382:         }
  5789   00235A  0100               	movlb	0	; () banked
  5790   00235C  076E               	decf	White@i& (0+255),f,b
  5791   00235E  A0D8               	btfss	status,0,c
  5792   002360  076F               	decf	(White@i+1)& (0+255),f,b
  5793   002362  EFCE  F00F         	goto	l3916
  5794   002366                     l3984:
  5795                           
  5796                           ;dc_motor.c: 338:     while (!retracingDone){
  5797   002366  0100               	movlb	0	; () banked
  5798   002368  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  5799   00236A  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  5800   00236C  B4D8               	btfsc	status,2,c
  5801   00236E  EFBB  F011         	goto	u3641
  5802   002372  EFBD  F011         	goto	u3640
  5803   002376                     u3641:
  5804   002376  EFA3  F00F         	goto	l3906
  5805   00237A                     u3640:
  5806   00237A                     
  5807                           ; BSR set to: 0
  5808                           ;dc_motor.c: 384:     stop(mL,mR);
  5809   00237A  C060  F014         	movff	White@mL,stop@mL
  5810   00237E  C061  F015         	movff	White@mL+1,stop@mL+1
  5811   002382  C062  F016         	movff	White@mR,stop@mR
  5812   002386  C063  F017         	movff	White@mR+1,stop@mR+1
  5813   00238A  ECD5  F01D         	call	_stop	;wreg free
  5814   00238E                     
  5815                           ;dc_motor.c: 385:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5816   00238E  0E52               	movlw	82
  5817   002390  6E58               	movwf	(??_White+1)^0,c
  5818   002392  0E2B               	movlw	43
  5819   002394  6E57               	movwf	??_White^0,c
  5820   002396  0E00               	movlw	0
  5821   002398                     u4317:
  5822   002398  2EE8               	decfsz	wreg,f,c
  5823   00239A  D7FE               	bra	u4317
  5824   00239C  2E57               	decfsz	??_White^0,f,c
  5825   00239E  D7FC               	bra	u4317
  5826   0023A0  2E58               	decfsz	(??_White+1)^0,f,c
  5827   0023A2  D7FA               	bra	u4317
  5828   0023A4  D000               	nop2	
  5829   0023A6                     
  5830                           ;dc_motor.c: 386:     LATDbits.LATD4 = 0;;
  5831   0023A6  987C               	bcf	124,4,c	;volatile
  5832   0023A8  0012               	return		;funcret
  5833   0023AA                     __end_of_White:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _getTimerValue *****************
  5837 ;; Defined at:
  5838 ;;		line 28 in file "timer.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  timerCount      2   56[COMRAM] int 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  4   50[COMRAM] float 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;Total ram usage:        8 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 2
  5859 ;; This function calls:
  5860 ;;		___flmul
  5861 ;;		___xxtofl
  5862 ;; This function is called by:
  5863 ;;		_White
  5864 ;;		_memoryUpdateTime
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text29
  5869   0043F0                     __ptext29:
  5870                           	callstack 0
  5871   0043F0                     _getTimerValue:
  5872                           	callstack 27
  5873   0043F0                     
  5874                           ;timer.c: 30:     int timerCount;;timer.c: 32:     timerCount = TMR0L;
  5875   0043F0  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  5876   0043F4  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  5877   0043F6                     
  5878                           ;timer.c: 34:     timerCount |= (int)(TMR0H << 8);
  5879   0043F6  50D4               	movf	212,w,c	;volatile
  5880   0043F8  6E38               	movwf	(??_getTimerValue+1)^0,c
  5881   0043FA  6A37               	clrf	??_getTimerValue^0,c
  5882   0043FC  5037               	movf	??_getTimerValue^0,w,c
  5883   0043FE  1239               	iorwf	getTimerValue@timerCount^0,f,c
  5884   004400  5038               	movf	(??_getTimerValue+1)^0,w,c
  5885   004402  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  5886   004404                     
  5887                           ;timer.c: 35:     return timerCount*1.048576;
  5888   004404  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  5889   004408  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  5890   00440C  0E00               	movlw	0
  5891   00440E  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  5892   004410  0EFF               	movlw	-1
  5893   004412  6E0E               	movwf	(___xxtofl@val+2)^0,c
  5894   004414  6E0F               	movwf	(___xxtofl@val+3)^0,c
  5895   004416  0E01               	movlw	1
  5896   004418  ECA1  F017         	call	___xxtofl
  5897   00441C  C00C  F01A         	movff	?___xxtofl,___flmul@b
  5898   004420  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  5899   004424  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  5900   004428  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  5901   00442C  0EBD               	movlw	189
  5902   00442E  6E1E               	movwf	___flmul@a^0,c
  5903   004430  0E37               	movlw	55
  5904   004432  6E1F               	movwf	(___flmul@a+1)^0,c
  5905   004434  0E86               	movlw	134
  5906   004436  6E20               	movwf	(___flmul@a+2)^0,c
  5907   004438  0E3F               	movlw	63
  5908   00443A  6E21               	movwf	(___flmul@a+3)^0,c
  5909   00443C  ECD5  F011         	call	___flmul	;wreg free
  5910   004440  C01A  F033         	movff	?___flmul,?_getTimerValue
  5911   004444  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  5912   004448  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  5913   00444C  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  5914   004450  0012               	return		;funcret
  5915   004452                     __end_of_getTimerValue:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function ___xxtofl *****************
  5919 ;; Defined at:
  5920 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  sign            1    wreg     unsigned char 
  5923 ;;  val             4   11[COMRAM] long 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  sign            1   19[COMRAM] unsigned char 
  5926 ;;  arg             4   21[COMRAM] unsigned long 
  5927 ;;  exp             1   20[COMRAM] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  4   11[COMRAM] unsigned char 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5941 ;;Total ram usage:       14 bytes
  5942 ;; Hardware stack levels used: 1
  5943 ;; Hardware stack levels required when called: 1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_Left45
  5948 ;;		_Right45
  5949 ;;		_reverseHalfSquare
  5950 ;;		_Yellow_rev1_R90
  5951 ;;		_Pink_rev1_L90
  5952 ;;		_White
  5953 ;;		_getTimerValue
  5954 ;;		_colour_read_all
  5955 ;;		_RGB2Hue
  5956 ;;		_memoryUpdateTime
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text30
  5961   002F42                     __ptext30:
  5962                           	callstack 0
  5963   002F42                     ___xxtofl:
  5964                           	callstack 27
  5965                           
  5966                           ;incstack = 0
  5967                           ;___xxtofl@sign stored from wreg
  5968   002F42  6E14               	movwf	___xxtofl@sign^0,c
  5969   002F44  5014               	movf	___xxtofl@sign^0,w,c
  5970   002F46  B4D8               	btfsc	status,2,c
  5971   002F48  EFA8  F017         	goto	u2651
  5972   002F4C  EFAA  F017         	goto	u2650
  5973   002F50                     u2651:
  5974   002F50  EFCC  F017         	goto	l1344
  5975   002F54                     u2650:
  5976   002F54  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5977   002F56  EFB1  F017         	goto	u2660
  5978   002F5A  EFAF  F017         	goto	u2661
  5979   002F5E                     u2661:
  5980   002F5E  EFCC  F017         	goto	l1344
  5981   002F62                     u2660:
  5982   002F62  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  5983   002F66  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  5984   002F6A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  5985   002F6E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  5986   002F72  1E10               	comf	??___xxtofl^0,f,c
  5987   002F74  1E11               	comf	(??___xxtofl+1)^0,f,c
  5988   002F76  1E12               	comf	(??___xxtofl+2)^0,f,c
  5989   002F78  1E13               	comf	(??___xxtofl+3)^0,f,c
  5990   002F7A  2A10               	incf	??___xxtofl^0,f,c
  5991   002F7C  0E00               	movlw	0
  5992   002F7E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  5993   002F80  2212               	addwfc	(??___xxtofl+2)^0,f,c
  5994   002F82  2213               	addwfc	(??___xxtofl+3)^0,f,c
  5995   002F84  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  5996   002F88  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  5997   002F8C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  5998   002F90  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  5999   002F94  EFD4  F017         	goto	l3394
  6000   002F98                     l1344:
  6001   002F98  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6002   002F9C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6003   002FA0  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6004   002FA4  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6005   002FA8                     l3394:
  6006   002FA8  500C               	movf	___xxtofl@val^0,w,c
  6007   002FAA  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6008   002FAC  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6009   002FAE  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6010   002FB0  A4D8               	btfss	status,2,c
  6011   002FB2  EFDD  F017         	goto	u2671
  6012   002FB6  EFDF  F017         	goto	u2670
  6013   002FBA                     u2671:
  6014   002FBA  EFE9  F017         	goto	l3400
  6015   002FBE                     u2670:
  6016   002FBE  0E00               	movlw	0
  6017   002FC0  6E0C               	movwf	?___xxtofl^0,c
  6018   002FC2  0E00               	movlw	0
  6019   002FC4  6E0D               	movwf	(?___xxtofl+1)^0,c
  6020   002FC6  0E00               	movlw	0
  6021   002FC8  6E0E               	movwf	(?___xxtofl+2)^0,c
  6022   002FCA  0E00               	movlw	0
  6023   002FCC  6E0F               	movwf	(?___xxtofl+3)^0,c
  6024   002FCE  EF7A  F018         	goto	l1347
  6025   002FD2                     l3400:
  6026   002FD2  0E96               	movlw	150
  6027   002FD4  6E15               	movwf	___xxtofl@exp^0,c
  6028   002FD6  EFF3  F017         	goto	l3404
  6029   002FDA                     l3402:
  6030   002FDA  2A15               	incf	___xxtofl@exp^0,f,c
  6031   002FDC  90D8               	bcf	status,0,c
  6032   002FDE  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6033   002FE0  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6034   002FE2  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6035   002FE4  3216               	rrcf	___xxtofl@arg^0,f,c
  6036   002FE6                     l3404:
  6037   002FE6  0E00               	movlw	0
  6038   002FE8  1416               	andwf	___xxtofl@arg^0,w,c
  6039   002FEA  6E10               	movwf	??___xxtofl^0,c
  6040   002FEC  0E00               	movlw	0
  6041   002FEE  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6042   002FF0  6E11               	movwf	(??___xxtofl+1)^0,c
  6043   002FF2  0E00               	movlw	0
  6044   002FF4  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6045   002FF6  6E12               	movwf	(??___xxtofl+2)^0,c
  6046   002FF8  0EFE               	movlw	254
  6047   002FFA  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6048   002FFC  6E13               	movwf	(??___xxtofl+3)^0,c
  6049   002FFE  5010               	movf	??___xxtofl^0,w,c
  6050   003000  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6051   003002  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6052   003004  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6053   003006  A4D8               	btfss	status,2,c
  6054   003008  EF08  F018         	goto	u2681
  6055   00300C  EF0A  F018         	goto	u2680
  6056   003010                     u2681:
  6057   003010  EFED  F017         	goto	l3402
  6058   003014                     u2680:
  6059   003014  EF18  F018         	goto	l1351
  6060   003018                     l3406:
  6061   003018  2A15               	incf	___xxtofl@exp^0,f,c
  6062   00301A  0E01               	movlw	1
  6063   00301C  2616               	addwf	___xxtofl@arg^0,f,c
  6064   00301E  0E00               	movlw	0
  6065   003020  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6066   003022  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6067   003024  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6068   003026  90D8               	bcf	status,0,c
  6069   003028  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6070   00302A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6071   00302C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6072   00302E  3216               	rrcf	___xxtofl@arg^0,f,c
  6073   003030                     l1351:
  6074   003030  0E00               	movlw	0
  6075   003032  1416               	andwf	___xxtofl@arg^0,w,c
  6076   003034  6E10               	movwf	??___xxtofl^0,c
  6077   003036  0E00               	movlw	0
  6078   003038  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6079   00303A  6E11               	movwf	(??___xxtofl+1)^0,c
  6080   00303C  0E00               	movlw	0
  6081   00303E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6082   003040  6E12               	movwf	(??___xxtofl+2)^0,c
  6083   003042  0EFF               	movlw	255
  6084   003044  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6085   003046  6E13               	movwf	(??___xxtofl+3)^0,c
  6086   003048  5010               	movf	??___xxtofl^0,w,c
  6087   00304A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6088   00304C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6089   00304E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6090   003050  A4D8               	btfss	status,2,c
  6091   003052  EF2D  F018         	goto	u2691
  6092   003056  EF2F  F018         	goto	u2690
  6093   00305A                     u2691:
  6094   00305A  EF0C  F018         	goto	l3406
  6095   00305E                     u2690:
  6096   00305E  EF37  F018         	goto	l3414
  6097   003062                     l3412:
  6098   003062  0615               	decf	___xxtofl@exp^0,f,c
  6099   003064  90D8               	bcf	status,0,c
  6100   003066  3616               	rlcf	___xxtofl@arg^0,f,c
  6101   003068  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6102   00306A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6103   00306C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6104   00306E                     l3414:
  6105   00306E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6106   003070  EF3C  F018         	goto	u2701
  6107   003074  EF3E  F018         	goto	u2700
  6108   003078                     u2701:
  6109   003078  EF46  F018         	goto	l1358
  6110   00307C                     u2700:
  6111   00307C  0E02               	movlw	2
  6112   00307E  6015               	cpfslt	___xxtofl@exp^0,c
  6113   003080  EF44  F018         	goto	u2711
  6114   003084  EF46  F018         	goto	u2710
  6115   003088                     u2711:
  6116   003088  EF31  F018         	goto	l3412
  6117   00308C                     u2710:
  6118   00308C                     l1358:
  6119   00308C  B015               	btfsc	___xxtofl@exp^0,0,c
  6120   00308E  EF4B  F018         	goto	u2721
  6121   003092  EF4D  F018         	goto	u2720
  6122   003096                     u2721:
  6123   003096  EF4E  F018         	goto	l3420
  6124   00309A                     u2720:
  6125   00309A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6126   00309C                     l3420:
  6127   00309C  90D8               	bcf	status,0,c
  6128   00309E  3215               	rrcf	___xxtofl@exp^0,f,c
  6129   0030A0  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6130   0030A4  6A11               	clrf	(??___xxtofl+1)^0,c
  6131   0030A6  6A12               	clrf	(??___xxtofl+2)^0,c
  6132   0030A8  6A13               	clrf	(??___xxtofl+3)^0,c
  6133   0030AA  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6134   0030AE  6A12               	clrf	(??___xxtofl+2)^0,c
  6135   0030B0  6A11               	clrf	(??___xxtofl+1)^0,c
  6136   0030B2  6A10               	clrf	??___xxtofl^0,c
  6137   0030B4  5010               	movf	??___xxtofl^0,w,c
  6138   0030B6  1216               	iorwf	___xxtofl@arg^0,f,c
  6139   0030B8  5011               	movf	(??___xxtofl+1)^0,w,c
  6140   0030BA  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6141   0030BC  5012               	movf	(??___xxtofl+2)^0,w,c
  6142   0030BE  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6143   0030C0  5013               	movf	(??___xxtofl+3)^0,w,c
  6144   0030C2  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6145   0030C4  5014               	movf	___xxtofl@sign^0,w,c
  6146   0030C6  B4D8               	btfsc	status,2,c
  6147   0030C8  EF68  F018         	goto	u2731
  6148   0030CC  EF6A  F018         	goto	u2730
  6149   0030D0                     u2731:
  6150   0030D0  EF72  F018         	goto	l3430
  6151   0030D4                     u2730:
  6152   0030D4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6153   0030D6  EF71  F018         	goto	u2740
  6154   0030DA  EF6F  F018         	goto	u2741
  6155   0030DE                     u2741:
  6156   0030DE  EF72  F018         	goto	l3430
  6157   0030E2                     u2740:
  6158   0030E2  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6159   0030E4                     l3430:
  6160   0030E4  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6161   0030E8  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6162   0030EC  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6163   0030F0  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6164   0030F4                     l1347:
  6165   0030F4  0012               	return		;funcret
  6166   0030F6                     __end_of___xxtofl:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function ___flmul *****************
  6170 ;; Defined at:
  6171 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  b               4   25[COMRAM] unsigned char 
  6174 ;;  a               4   29[COMRAM] unsigned char 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  prod            4   44[COMRAM] struct .
  6177 ;;  grs             4   38[COMRAM] unsigned long 
  6178 ;;  temp            2   48[COMRAM] struct .
  6179 ;;  bexp            1   43[COMRAM] unsigned char 
  6180 ;;  aexp            1   42[COMRAM] unsigned char 
  6181 ;;  sign            1   37[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  4   25[COMRAM] unsigned char 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0, prodl, prodh
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6191 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6192 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6194 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;Total ram usage:       25 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_Left45
  6202 ;;		_Right45
  6203 ;;		_reverseHalfSquare
  6204 ;;		_Yellow_rev1_R90
  6205 ;;		_Pink_rev1_L90
  6206 ;;		_getTimerValue
  6207 ;;		_RGB2Hue
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text31
  6212   0023AA                     __ptext31:
  6213                           	callstack 0
  6214   0023AA                     ___flmul:
  6215                           	callstack 27
  6216   0023AA  501D               	movf	(___flmul@b+3)^0,w,c
  6217   0023AC  0B80               	andlw	128
  6218   0023AE  6E26               	movwf	___flmul@sign^0,c
  6219   0023B0  501D               	movf	(___flmul@b+3)^0,w,c
  6220   0023B2  241D               	addwf	(___flmul@b+3)^0,w,c
  6221   0023B4  6E2C               	movwf	___flmul@bexp^0,c
  6222   0023B6  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6223   0023B8  EFE0  F011         	goto	u2461
  6224   0023BC  EFE2  F011         	goto	u2460
  6225   0023C0                     u2461:
  6226   0023C0  EFE3  F011         	goto	l3264
  6227   0023C4                     u2460:
  6228   0023C4  802C               	bsf	___flmul@bexp^0,0,c
  6229   0023C6                     l3264:
  6230   0023C6  502C               	movf	___flmul@bexp^0,w,c
  6231   0023C8  B4D8               	btfsc	status,2,c
  6232   0023CA  EFE9  F011         	goto	u2471
  6233   0023CE  EFEB  F011         	goto	u2470
  6234   0023D2                     u2471:
  6235   0023D2  EFFE  F011         	goto	l3272
  6236   0023D6                     u2470:
  6237   0023D6  282C               	incf	___flmul@bexp^0,w,c
  6238   0023D8  A4D8               	btfss	status,2,c
  6239   0023DA  EFF1  F011         	goto	u2481
  6240   0023DE  EFF3  F011         	goto	u2480
  6241   0023E2                     u2481:
  6242   0023E2  EFFB  F011         	goto	l3270
  6243   0023E6                     u2480:
  6244   0023E6  0E00               	movlw	0
  6245   0023E8  6E1A               	movwf	___flmul@b^0,c
  6246   0023EA  0E00               	movlw	0
  6247   0023EC  6E1B               	movwf	(___flmul@b+1)^0,c
  6248   0023EE  0E00               	movlw	0
  6249   0023F0  6E1C               	movwf	(___flmul@b+2)^0,c
  6250   0023F2  0E00               	movlw	0
  6251   0023F4  6E1D               	movwf	(___flmul@b+3)^0,c
  6252   0023F6                     l3270:
  6253   0023F6  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6254   0023F8  EF06  F012         	goto	l3274
  6255   0023FC                     l3272:
  6256   0023FC  0E00               	movlw	0
  6257   0023FE  6E1A               	movwf	___flmul@b^0,c
  6258   002400  0E00               	movlw	0
  6259   002402  6E1B               	movwf	(___flmul@b+1)^0,c
  6260   002404  0E00               	movlw	0
  6261   002406  6E1C               	movwf	(___flmul@b+2)^0,c
  6262   002408  0E00               	movlw	0
  6263   00240A  6E1D               	movwf	(___flmul@b+3)^0,c
  6264   00240C                     l3274:
  6265   00240C  5021               	movf	(___flmul@a+3)^0,w,c
  6266   00240E  0B80               	andlw	128
  6267   002410  1A26               	xorwf	___flmul@sign^0,f,c
  6268   002412  5021               	movf	(___flmul@a+3)^0,w,c
  6269   002414  2421               	addwf	(___flmul@a+3)^0,w,c
  6270   002416  6E2B               	movwf	___flmul@aexp^0,c
  6271   002418  AE20               	btfss	(___flmul@a+2)^0,7,c
  6272   00241A  EF11  F012         	goto	u2491
  6273   00241E  EF13  F012         	goto	u2490
  6274   002422                     u2491:
  6275   002422  EF14  F012         	goto	l3282
  6276   002426                     u2490:
  6277   002426  802B               	bsf	___flmul@aexp^0,0,c
  6278   002428                     l3282:
  6279   002428  502B               	movf	___flmul@aexp^0,w,c
  6280   00242A  B4D8               	btfsc	status,2,c
  6281   00242C  EF1A  F012         	goto	u2501
  6282   002430  EF1C  F012         	goto	u2500
  6283   002434                     u2501:
  6284   002434  EF2F  F012         	goto	l3290
  6285   002438                     u2500:
  6286   002438  282B               	incf	___flmul@aexp^0,w,c
  6287   00243A  A4D8               	btfss	status,2,c
  6288   00243C  EF22  F012         	goto	u2511
  6289   002440  EF24  F012         	goto	u2510
  6290   002444                     u2511:
  6291   002444  EF2C  F012         	goto	l3288
  6292   002448                     u2510:
  6293   002448  0E00               	movlw	0
  6294   00244A  6E1E               	movwf	___flmul@a^0,c
  6295   00244C  0E00               	movlw	0
  6296   00244E  6E1F               	movwf	(___flmul@a+1)^0,c
  6297   002450  0E00               	movlw	0
  6298   002452  6E20               	movwf	(___flmul@a+2)^0,c
  6299   002454  0E00               	movlw	0
  6300   002456  6E21               	movwf	(___flmul@a+3)^0,c
  6301   002458                     l3288:
  6302   002458  8E20               	bsf	(___flmul@a+2)^0,7,c
  6303   00245A  EF37  F012         	goto	l1303
  6304   00245E                     l3290:
  6305   00245E  0E00               	movlw	0
  6306   002460  6E1E               	movwf	___flmul@a^0,c
  6307   002462  0E00               	movlw	0
  6308   002464  6E1F               	movwf	(___flmul@a+1)^0,c
  6309   002466  0E00               	movlw	0
  6310   002468  6E20               	movwf	(___flmul@a+2)^0,c
  6311   00246A  0E00               	movlw	0
  6312   00246C  6E21               	movwf	(___flmul@a+3)^0,c
  6313   00246E                     l1303:
  6314   00246E  502B               	movf	___flmul@aexp^0,w,c
  6315   002470  B4D8               	btfsc	status,2,c
  6316   002472  EF3D  F012         	goto	u2521
  6317   002476  EF3F  F012         	goto	u2520
  6318   00247A                     u2521:
  6319   00247A  EF47  F012         	goto	l3294
  6320   00247E                     u2520:
  6321   00247E  502C               	movf	___flmul@bexp^0,w,c
  6322   002480  A4D8               	btfss	status,2,c
  6323   002482  EF45  F012         	goto	u2531
  6324   002486  EF47  F012         	goto	u2530
  6325   00248A                     u2531:
  6326   00248A  EF51  F012         	goto	l3298
  6327   00248E                     u2530:
  6328   00248E                     l3294:
  6329   00248E  0E00               	movlw	0
  6330   002490  6E1A               	movwf	?___flmul^0,c
  6331   002492  0E00               	movlw	0
  6332   002494  6E1B               	movwf	(?___flmul+1)^0,c
  6333   002496  0E00               	movlw	0
  6334   002498  6E1C               	movwf	(?___flmul+2)^0,c
  6335   00249A  0E00               	movlw	0
  6336   00249C  6E1D               	movwf	(?___flmul+3)^0,c
  6337   00249E  EFE9  F013         	goto	l1307
  6338   0024A2                     l3298:
  6339   0024A2  5020               	movf	(___flmul@a+2)^0,w,c
  6340   0024A4  021A               	mulwf	___flmul@b^0,c
  6341   0024A6  CFF3 F031          	movff	prodl,___flmul@temp
  6342   0024AA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6343   0024AE  5031               	movf	___flmul@temp^0,w,c
  6344   0024B0  6E27               	movwf	___flmul@grs^0,c
  6345   0024B2  6A28               	clrf	(___flmul@grs+1)^0,c
  6346   0024B4  6A29               	clrf	(___flmul@grs+2)^0,c
  6347   0024B6  6A2A               	clrf	(___flmul@grs+3)^0,c
  6348   0024B8  5032               	movf	(___flmul@temp+1)^0,w,c
  6349   0024BA  6E2D               	movwf	___flmul@prod^0,c
  6350   0024BC  6A2E               	clrf	(___flmul@prod+1)^0,c
  6351   0024BE  6A2F               	clrf	(___flmul@prod+2)^0,c
  6352   0024C0  6A30               	clrf	(___flmul@prod+3)^0,c
  6353   0024C2  501F               	movf	(___flmul@a+1)^0,w,c
  6354   0024C4  021B               	mulwf	(___flmul@b+1)^0,c
  6355   0024C6  CFF3 F031          	movff	prodl,___flmul@temp
  6356   0024CA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6357   0024CE  5031               	movf	___flmul@temp^0,w,c
  6358   0024D0  2627               	addwf	___flmul@grs^0,f,c
  6359   0024D2  0E00               	movlw	0
  6360   0024D4  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6361   0024D6  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6362   0024D8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6363   0024DA  5032               	movf	(___flmul@temp+1)^0,w,c
  6364   0024DC  262D               	addwf	___flmul@prod^0,f,c
  6365   0024DE  0E00               	movlw	0
  6366   0024E0  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6367   0024E2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6368   0024E4  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6369   0024E6  501E               	movf	___flmul@a^0,w,c
  6370   0024E8  021C               	mulwf	(___flmul@b+2)^0,c
  6371   0024EA  CFF3 F031          	movff	prodl,___flmul@temp
  6372   0024EE  CFF4 F032          	movff	prodh,___flmul@temp+1
  6373   0024F2  5031               	movf	___flmul@temp^0,w,c
  6374   0024F4  2627               	addwf	___flmul@grs^0,f,c
  6375   0024F6  0E00               	movlw	0
  6376   0024F8  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6377   0024FA  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6378   0024FC  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6379   0024FE  5032               	movf	(___flmul@temp+1)^0,w,c
  6380   002500  262D               	addwf	___flmul@prod^0,f,c
  6381   002502  0E00               	movlw	0
  6382   002504  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6383   002506  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6384   002508  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6385   00250A  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6386   00250E  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6387   002512  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6388   002516  6A27               	clrf	___flmul@grs^0,c
  6389   002518  501E               	movf	___flmul@a^0,w,c
  6390   00251A  021B               	mulwf	(___flmul@b+1)^0,c
  6391   00251C  CFF3 F031          	movff	prodl,___flmul@temp
  6392   002520  CFF4 F032          	movff	prodh,___flmul@temp+1
  6393   002524  5031               	movf	___flmul@temp^0,w,c
  6394   002526  2627               	addwf	___flmul@grs^0,f,c
  6395   002528  5032               	movf	(___flmul@temp+1)^0,w,c
  6396   00252A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6397   00252C  0E00               	movlw	0
  6398   00252E  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6399   002530  0E00               	movlw	0
  6400   002532  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6401   002534  501F               	movf	(___flmul@a+1)^0,w,c
  6402   002536  021A               	mulwf	___flmul@b^0,c
  6403   002538  CFF3 F031          	movff	prodl,___flmul@temp
  6404   00253C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6405   002540  5031               	movf	___flmul@temp^0,w,c
  6406   002542  2627               	addwf	___flmul@grs^0,f,c
  6407   002544  5032               	movf	(___flmul@temp+1)^0,w,c
  6408   002546  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6409   002548  0E00               	movlw	0
  6410   00254A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6411   00254C  0E00               	movlw	0
  6412   00254E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6413   002550  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6414   002554  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6415   002558  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6416   00255C  6A27               	clrf	___flmul@grs^0,c
  6417   00255E  501E               	movf	___flmul@a^0,w,c
  6418   002560  021A               	mulwf	___flmul@b^0,c
  6419   002562  CFF3 F031          	movff	prodl,___flmul@temp
  6420   002566  CFF4 F032          	movff	prodh,___flmul@temp+1
  6421   00256A  5031               	movf	___flmul@temp^0,w,c
  6422   00256C  2627               	addwf	___flmul@grs^0,f,c
  6423   00256E  5032               	movf	(___flmul@temp+1)^0,w,c
  6424   002570  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6425   002572  0E00               	movlw	0
  6426   002574  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6427   002576  0E00               	movlw	0
  6428   002578  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6429   00257A  5020               	movf	(___flmul@a+2)^0,w,c
  6430   00257C  021B               	mulwf	(___flmul@b+1)^0,c
  6431   00257E  CFF3 F031          	movff	prodl,___flmul@temp
  6432   002582  CFF4 F032          	movff	prodh,___flmul@temp+1
  6433   002586  5031               	movf	___flmul@temp^0,w,c
  6434   002588  262D               	addwf	___flmul@prod^0,f,c
  6435   00258A  5032               	movf	(___flmul@temp+1)^0,w,c
  6436   00258C  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6437   00258E  0E00               	movlw	0
  6438   002590  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6439   002592  0E00               	movlw	0
  6440   002594  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6441   002596  501F               	movf	(___flmul@a+1)^0,w,c
  6442   002598  021C               	mulwf	(___flmul@b+2)^0,c
  6443   00259A  CFF3 F031          	movff	prodl,___flmul@temp
  6444   00259E  CFF4 F032          	movff	prodh,___flmul@temp+1
  6445   0025A2  5031               	movf	___flmul@temp^0,w,c
  6446   0025A4  262D               	addwf	___flmul@prod^0,f,c
  6447   0025A6  5032               	movf	(___flmul@temp+1)^0,w,c
  6448   0025A8  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6449   0025AA  0E00               	movlw	0
  6450   0025AC  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6451   0025AE  0E00               	movlw	0
  6452   0025B0  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6453   0025B2  5020               	movf	(___flmul@a+2)^0,w,c
  6454   0025B4  021C               	mulwf	(___flmul@b+2)^0,c
  6455   0025B6  CFF3 F031          	movff	prodl,___flmul@temp
  6456   0025BA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6457   0025BE  5031               	movf	___flmul@temp^0,w,c
  6458   0025C0  6E22               	movwf	??___flmul^0,c
  6459   0025C2  5032               	movf	(___flmul@temp+1)^0,w,c
  6460   0025C4  6E23               	movwf	(??___flmul+1)^0,c
  6461   0025C6  6A24               	clrf	(??___flmul+2)^0,c
  6462   0025C8  6A25               	clrf	(??___flmul+3)^0,c
  6463   0025CA  C024  F025         	movff	??___flmul+2,??___flmul+3
  6464   0025CE  C023  F024         	movff	??___flmul+1,??___flmul+2
  6465   0025D2  C022  F023         	movff	??___flmul,??___flmul+1
  6466   0025D6  6A22               	clrf	??___flmul^0,c
  6467   0025D8  5022               	movf	??___flmul^0,w,c
  6468   0025DA  262D               	addwf	___flmul@prod^0,f,c
  6469   0025DC  5023               	movf	(??___flmul+1)^0,w,c
  6470   0025DE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6471   0025E0  5024               	movf	(??___flmul+2)^0,w,c
  6472   0025E2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6473   0025E4  5025               	movf	(??___flmul+3)^0,w,c
  6474   0025E6  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6475   0025E8  C027  F022         	movff	___flmul@grs,??___flmul
  6476   0025EC  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  6477   0025F0  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  6478   0025F4  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  6479   0025F8  0E19               	movlw	25
  6480   0025FA  EF04  F013         	goto	u2540
  6481   0025FE                     u2545:
  6482   0025FE  90D8               	bcf	status,0,c
  6483   002600  3225               	rrcf	(??___flmul+3)^0,f,c
  6484   002602  3224               	rrcf	(??___flmul+2)^0,f,c
  6485   002604  3223               	rrcf	(??___flmul+1)^0,f,c
  6486   002606  3222               	rrcf	??___flmul^0,f,c
  6487   002608                     u2540:
  6488   002608  2EE8               	decfsz	wreg,f,c
  6489   00260A  EFFF  F012         	goto	u2545
  6490   00260E  5022               	movf	??___flmul^0,w,c
  6491   002610  262D               	addwf	___flmul@prod^0,f,c
  6492   002612  5023               	movf	(??___flmul+1)^0,w,c
  6493   002614  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6494   002616  5024               	movf	(??___flmul+2)^0,w,c
  6495   002618  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6496   00261A  5025               	movf	(??___flmul+3)^0,w,c
  6497   00261C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6498   00261E  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6499   002622  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6500   002626  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6501   00262A  6A27               	clrf	___flmul@grs^0,c
  6502   00262C  502B               	movf	___flmul@aexp^0,w,c
  6503   00262E  C02C  F022         	movff	___flmul@bexp,??___flmul
  6504   002632  6A23               	clrf	(??___flmul+1)^0,c
  6505   002634  2622               	addwf	??___flmul^0,f,c
  6506   002636  0E00               	movlw	0
  6507   002638  2223               	addwfc	(??___flmul+1)^0,f,c
  6508   00263A  0E82               	movlw	130
  6509   00263C  2422               	addwf	??___flmul^0,w,c
  6510   00263E  6E31               	movwf	___flmul@temp^0,c
  6511   002640  0EFF               	movlw	255
  6512   002642  2023               	addwfc	(??___flmul+1)^0,w,c
  6513   002644  6E32               	movwf	(___flmul@temp+1)^0,c
  6514   002646  EF3A  F013         	goto	l3346
  6515   00264A                     l3340:
  6516   00264A  90D8               	bcf	status,0,c
  6517   00264C  362D               	rlcf	___flmul@prod^0,f,c
  6518   00264E  362E               	rlcf	(___flmul@prod+1)^0,f,c
  6519   002650  362F               	rlcf	(___flmul@prod+2)^0,f,c
  6520   002652  3630               	rlcf	(___flmul@prod+3)^0,f,c
  6521   002654  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6522   002656  EF2F  F013         	goto	u2551
  6523   00265A  EF31  F013         	goto	u2550
  6524   00265E                     u2551:
  6525   00265E  EF32  F013         	goto	l1310
  6526   002662                     u2550:
  6527   002662  802D               	bsf	___flmul@prod^0,0,c
  6528   002664                     l1310:
  6529   002664  90D8               	bcf	status,0,c
  6530   002666  3627               	rlcf	___flmul@grs^0,f,c
  6531   002668  3628               	rlcf	(___flmul@grs+1)^0,f,c
  6532   00266A  3629               	rlcf	(___flmul@grs+2)^0,f,c
  6533   00266C  362A               	rlcf	(___flmul@grs+3)^0,f,c
  6534   00266E  0631               	decf	___flmul@temp^0,f,c
  6535   002670  A0D8               	btfss	status,0,c
  6536   002672  0632               	decf	(___flmul@temp+1)^0,f,c
  6537   002674                     l3346:
  6538   002674  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  6539   002676  EF3F  F013         	goto	u2561
  6540   00267A  EF41  F013         	goto	u2560
  6541   00267E                     u2561:
  6542   00267E  EF25  F013         	goto	l3340
  6543   002682                     u2560:
  6544   002682  0E00               	movlw	0
  6545   002684  6E2B               	movwf	___flmul@aexp^0,c
  6546   002686  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6547   002688  EF48  F013         	goto	u2571
  6548   00268C  EF4A  F013         	goto	u2570
  6549   002690                     u2571:
  6550   002690  EF6E  F013         	goto	l1312
  6551   002694                     u2570:
  6552   002694  0EFF               	movlw	255
  6553   002696  1427               	andwf	___flmul@grs^0,w,c
  6554   002698  6E22               	movwf	??___flmul^0,c
  6555   00269A  0EFF               	movlw	255
  6556   00269C  1428               	andwf	(___flmul@grs+1)^0,w,c
  6557   00269E  6E23               	movwf	(??___flmul+1)^0,c
  6558   0026A0  0EFF               	movlw	255
  6559   0026A2  1429               	andwf	(___flmul@grs+2)^0,w,c
  6560   0026A4  6E24               	movwf	(??___flmul+2)^0,c
  6561   0026A6  0E7F               	movlw	127
  6562   0026A8  142A               	andwf	(___flmul@grs+3)^0,w,c
  6563   0026AA  6E25               	movwf	(??___flmul+3)^0,c
  6564   0026AC  5022               	movf	??___flmul^0,w,c
  6565   0026AE  1023               	iorwf	(??___flmul+1)^0,w,c
  6566   0026B0  1024               	iorwf	(??___flmul+2)^0,w,c
  6567   0026B2  1025               	iorwf	(??___flmul+3)^0,w,c
  6568   0026B4  B4D8               	btfsc	status,2,c
  6569   0026B6  EF5F  F013         	goto	u2581
  6570   0026BA  EF61  F013         	goto	u2580
  6571   0026BE                     u2581:
  6572   0026BE  EF65  F013         	goto	l1313
  6573   0026C2                     u2580:
  6574   0026C2                     l3354:
  6575   0026C2  0E01               	movlw	1
  6576   0026C4  6E2B               	movwf	___flmul@aexp^0,c
  6577   0026C6  EF6E  F013         	goto	l1312
  6578   0026CA                     l1313:
  6579   0026CA  A02D               	btfss	___flmul@prod^0,0,c
  6580   0026CC  EF6A  F013         	goto	u2591
  6581   0026D0  EF6C  F013         	goto	u2590
  6582   0026D4                     u2591:
  6583   0026D4  EF6E  F013         	goto	l1312
  6584   0026D8                     u2590:
  6585   0026D8  EF61  F013         	goto	l3354
  6586   0026DC                     l1312:
  6587   0026DC  502B               	movf	___flmul@aexp^0,w,c
  6588   0026DE  B4D8               	btfsc	status,2,c
  6589   0026E0  EF74  F013         	goto	u2601
  6590   0026E4  EF76  F013         	goto	u2600
  6591   0026E8                     u2601:
  6592   0026E8  EF9A  F013         	goto	l3366
  6593   0026EC                     u2600:
  6594   0026EC  0E01               	movlw	1
  6595   0026EE  262D               	addwf	___flmul@prod^0,f,c
  6596   0026F0  0E00               	movlw	0
  6597   0026F2  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6598   0026F4  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6599   0026F6  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6600   0026F8  A030               	btfss	(___flmul@prod+3)^0,0,c
  6601   0026FA  EF81  F013         	goto	u2611
  6602   0026FE  EF83  F013         	goto	u2610
  6603   002702                     u2611:
  6604   002702  EF9A  F013         	goto	l3366
  6605   002706                     u2610:
  6606   002706  C02D  F022         	movff	___flmul@prod,??___flmul
  6607   00270A  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  6608   00270E  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  6609   002712  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  6610   002716  3425               	rlcf	(??___flmul+3)^0,w,c
  6611   002718  3225               	rrcf	(??___flmul+3)^0,f,c
  6612   00271A  3224               	rrcf	(??___flmul+2)^0,f,c
  6613   00271C  3223               	rrcf	(??___flmul+1)^0,f,c
  6614   00271E  3222               	rrcf	??___flmul^0,f,c
  6615   002720  C022  F02D         	movff	??___flmul,___flmul@prod
  6616   002724  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  6617   002728  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  6618   00272C  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  6619   002730  4A31               	infsnz	___flmul@temp^0,f,c
  6620   002732  2A32               	incf	(___flmul@temp+1)^0,f,c
  6621   002734                     l3366:
  6622   002734  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6623   002736  EFA5  F013         	goto	u2621
  6624   00273A  5032               	movf	(___flmul@temp+1)^0,w,c
  6625   00273C  E108               	bnz	u2620
  6626   00273E  2831               	incf	___flmul@temp^0,w,c
  6627   002740  A0D8               	btfss	status,0,c
  6628   002742  EFA5  F013         	goto	u2621
  6629   002746  EFA7  F013         	goto	u2620
  6630   00274A                     u2621:
  6631   00274A  EFB1  F013         	goto	l3370
  6632   00274E                     u2620:
  6633   00274E  0E00               	movlw	0
  6634   002750  6E2D               	movwf	___flmul@prod^0,c
  6635   002752  0E00               	movlw	0
  6636   002754  6E2E               	movwf	(___flmul@prod+1)^0,c
  6637   002756  0E80               	movlw	128
  6638   002758  6E2F               	movwf	(___flmul@prod+2)^0,c
  6639   00275A  0E7F               	movlw	127
  6640   00275C  6E30               	movwf	(___flmul@prod+3)^0,c
  6641   00275E  EFDF  F013         	goto	l3382
  6642   002762                     l3370:
  6643   002762  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6644   002764  EFBE  F013         	goto	u2630
  6645   002768  5032               	movf	(___flmul@temp+1)^0,w,c
  6646   00276A  E106               	bnz	u2631
  6647   00276C  0431               	decf	___flmul@temp^0,w,c
  6648   00276E  B0D8               	btfsc	status,0,c
  6649   002770  EFBC  F013         	goto	u2631
  6650   002774  EFBE  F013         	goto	u2630
  6651   002778                     u2631:
  6652   002778  EFCA  F013         	goto	l1320
  6653   00277C                     u2630:
  6654   00277C  0E00               	movlw	0
  6655   00277E  6E2D               	movwf	___flmul@prod^0,c
  6656   002780  0E00               	movlw	0
  6657   002782  6E2E               	movwf	(___flmul@prod+1)^0,c
  6658   002784  0E00               	movlw	0
  6659   002786  6E2F               	movwf	(___flmul@prod+2)^0,c
  6660   002788  0E00               	movlw	0
  6661   00278A  6E30               	movwf	(___flmul@prod+3)^0,c
  6662   00278C  0E00               	movlw	0
  6663   00278E  6E26               	movwf	___flmul@sign^0,c
  6664   002790  EFDF  F013         	goto	l3382
  6665   002794                     l1320:
  6666   002794  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  6667   002798  0EFF               	movlw	255
  6668   00279A  162D               	andwf	___flmul@prod^0,f,c
  6669   00279C  0EFF               	movlw	255
  6670   00279E  162E               	andwf	(___flmul@prod+1)^0,f,c
  6671   0027A0  0E7F               	movlw	127
  6672   0027A2  162F               	andwf	(___flmul@prod+2)^0,f,c
  6673   0027A4  0E00               	movlw	0
  6674   0027A6  1630               	andwf	(___flmul@prod+3)^0,f,c
  6675   0027A8  A02C               	btfss	___flmul@bexp^0,0,c
  6676   0027AA  EFD9  F013         	goto	u2641
  6677   0027AE  EFDB  F013         	goto	u2640
  6678   0027B2                     u2641:
  6679   0027B2  EFDC  F013         	goto	l3380
  6680   0027B6                     u2640:
  6681   0027B6  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  6682   0027B8                     l3380:
  6683   0027B8  90D8               	bcf	status,0,c
  6684   0027BA  302C               	rrcf	___flmul@bexp^0,w,c
  6685   0027BC  6E30               	movwf	(___flmul@prod+3)^0,c
  6686   0027BE                     l3382:
  6687   0027BE  5026               	movf	___flmul@sign^0,w,c
  6688   0027C0  1230               	iorwf	(___flmul@prod+3)^0,f,c
  6689   0027C2  C02D  F01A         	movff	___flmul@prod,?___flmul
  6690   0027C6  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  6691   0027CA  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  6692   0027CE  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  6693   0027D2                     l1307:
  6694   0027D2  0012               	return		;funcret
  6695   0027D4                     __end_of___flmul:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _fullSpeedAhead *****************
  6699 ;; Defined at:
  6700 ;;		line 149 in file "dc_motor.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6703 ;;		 -> motorL(9), 
  6704 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6705 ;;		 -> motorR(9), 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  i               2   24[COMRAM] unsigned int 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;Total ram usage:        7 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; Hardware stack levels required when called: 3
  6724 ;; This function calls:
  6725 ;;		_setMotorPWM
  6726 ;; This function is called by:
  6727 ;;		_main
  6728 ;;		_White
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text32
  6733   004184                     __ptext32:
  6734                           	callstack 0
  6735   004184                     _fullSpeedAhead:
  6736                           	callstack 27
  6737   004184                     
  6738                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6739   004184  EE20 F001          	lfsr	2,1
  6740   004188  5014               	movf	fullSpeedAhead@mL^0,w,c
  6741   00418A  26D9               	addwf	fsr2l,f,c
  6742   00418C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6743   00418E  22DA               	addwfc	fsr2h,f,c
  6744   004190  0E01               	movlw	1
  6745   004192  6EDF               	movwf	indf2,c
  6746                           
  6747                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6748   004194  EE20 F001          	lfsr	2,1
  6749   004198  5016               	movf	fullSpeedAhead@mR^0,w,c
  6750   00419A  26D9               	addwf	fsr2l,f,c
  6751   00419C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6752   00419E  22DA               	addwfc	fsr2h,f,c
  6753   0041A0  0E01               	movlw	1
  6754   0041A2  6EDF               	movwf	indf2,c
  6755   0041A4                     
  6756                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6757   0041A4  0E00               	movlw	0
  6758   0041A6  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6759   0041A8  0E00               	movlw	0
  6760   0041AA  6E19               	movwf	fullSpeedAhead@i^0,c
  6761   0041AC                     l3508:
  6762                           
  6763                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6764   0041AC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6765   0041B0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6766   0041B4  2ADF               	incf	indf2,f,c
  6767                           
  6768                           ;dc_motor.c: 157:         (mR->power)++;
  6769   0041B6  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6770   0041BA  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6771   0041BE  2ADF               	incf	indf2,f,c
  6772   0041C0                     
  6773                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6774   0041C0  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6775   0041C4  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6776   0041C8  EC7B  F018         	call	_setMotorPWM	;wreg free
  6777   0041CC                     
  6778                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6779   0041CC  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6780   0041D0  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6781   0041D4  EC7B  F018         	call	_setMotorPWM	;wreg free
  6782   0041D8                     
  6783                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6784   0041D8  0E09               	movlw	9
  6785   0041DA  6E18               	movwf	??_fullSpeedAhead^0,c
  6786   0041DC  0E4E               	movlw	78
  6787   0041DE                     u4327:
  6788   0041DE  2EE8               	decfsz	wreg,f,c
  6789   0041E0  D7FE               	bra	u4327
  6790   0041E2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6791   0041E4  D7FC               	bra	u4327
  6792   0041E6  D000               	nop2	
  6793   0041E8                     
  6794                           ;dc_motor.c: 161:     }
  6795   0041E8  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6796   0041EA  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6797   0041EC  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6798   0041EE  E109               	bnz	u2810
  6799   0041F0  0E32               	movlw	50
  6800   0041F2  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6801   0041F4  A0D8               	btfss	status,0,c
  6802   0041F6  EFFF  F020         	goto	u2811
  6803   0041FA  EF01  F021         	goto	u2810
  6804   0041FE                     u2811:
  6805   0041FE  EFD6  F020         	goto	l3508
  6806   004202                     u2810:
  6807   004202  0012               	return		;funcret
  6808   004204                     __end_of_fullSpeedAhead:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function ___fladd *****************
  6812 ;; Defined at:
  6813 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  b               4   58[COMRAM] void 
  6816 ;;  a               4   62[COMRAM] void 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  grs             1   73[COMRAM] unsigned char 
  6819 ;;  bexp            1   72[COMRAM] unsigned char 
  6820 ;;  aexp            1   71[COMRAM] unsigned char 
  6821 ;;  signs           1   70[COMRAM] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  4   58[COMRAM] unsigned char 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6831 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6832 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6834 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6835 ;;Total ram usage:       16 bytes
  6836 ;; Hardware stack levels used: 1
  6837 ;; Hardware stack levels required when called: 1
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_White
  6842 ;;		_RGB2Hue
  6843 ;;		___flsub
  6844 ;;		_memoryUpdateTime
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text33
  6849   001A80                     __ptext33:
  6850                           	callstack 0
  6851   001A80                     ___fladd:
  6852                           	callstack 28
  6853   001A80  503E               	movf	(___fladd@b+3)^0,w,c
  6854   001A82  0B80               	andlw	128
  6855   001A84  6E47               	movwf	___fladd@signs^0,c
  6856   001A86  503E               	movf	(___fladd@b+3)^0,w,c
  6857   001A88  243E               	addwf	(___fladd@b+3)^0,w,c
  6858   001A8A  6E49               	movwf	___fladd@bexp^0,c
  6859   001A8C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  6860   001A8E  EF4B  F00D         	goto	u2901
  6861   001A92  EF4D  F00D         	goto	u2900
  6862   001A96                     u2901:
  6863   001A96  EF4E  F00D         	goto	l3592
  6864   001A9A                     u2900:
  6865   001A9A  8049               	bsf	___fladd@bexp^0,0,c
  6866   001A9C                     l3592:
  6867   001A9C  5049               	movf	___fladd@bexp^0,w,c
  6868   001A9E  B4D8               	btfsc	status,2,c
  6869   001AA0  EF54  F00D         	goto	u2911
  6870   001AA4  EF56  F00D         	goto	u2910
  6871   001AA8                     u2911:
  6872   001AA8  EF6B  F00D         	goto	l3602
  6873   001AAC                     u2910:
  6874   001AAC  2849               	incf	___fladd@bexp^0,w,c
  6875   001AAE  A4D8               	btfss	status,2,c
  6876   001AB0  EF5C  F00D         	goto	u2921
  6877   001AB4  EF5E  F00D         	goto	u2920
  6878   001AB8                     u2921:
  6879   001AB8  EF66  F00D         	goto	l3598
  6880   001ABC                     u2920:
  6881   001ABC  0E00               	movlw	0
  6882   001ABE  6E3B               	movwf	___fladd@b^0,c
  6883   001AC0  0E00               	movlw	0
  6884   001AC2  6E3C               	movwf	(___fladd@b+1)^0,c
  6885   001AC4  0E00               	movlw	0
  6886   001AC6  6E3D               	movwf	(___fladd@b+2)^0,c
  6887   001AC8  0E00               	movlw	0
  6888   001ACA  6E3E               	movwf	(___fladd@b+3)^0,c
  6889   001ACC                     l3598:
  6890   001ACC  8E3D               	bsf	(___fladd@b+2)^0,7,c
  6891   001ACE  0E00               	movlw	0
  6892   001AD0  6E3E               	movwf	(___fladd@b+3)^0,c
  6893   001AD2  EF73  F00D         	goto	l3604
  6894   001AD6                     l3602:
  6895   001AD6  0E00               	movlw	0
  6896   001AD8  6E3B               	movwf	___fladd@b^0,c
  6897   001ADA  0E00               	movlw	0
  6898   001ADC  6E3C               	movwf	(___fladd@b+1)^0,c
  6899   001ADE  0E00               	movlw	0
  6900   001AE0  6E3D               	movwf	(___fladd@b+2)^0,c
  6901   001AE2  0E00               	movlw	0
  6902   001AE4  6E3E               	movwf	(___fladd@b+3)^0,c
  6903   001AE6                     l3604:
  6904   001AE6  5042               	movf	(___fladd@a+3)^0,w,c
  6905   001AE8  0B80               	andlw	128
  6906   001AEA  6E48               	movwf	___fladd@aexp^0,c
  6907   001AEC  5047               	movf	___fladd@signs^0,w,c
  6908   001AEE  1848               	xorwf	___fladd@aexp^0,w,c
  6909   001AF0  B4D8               	btfsc	status,2,c
  6910   001AF2  EF7D  F00D         	goto	u2931
  6911   001AF6  EF7F  F00D         	goto	u2930
  6912   001AFA                     u2931:
  6913   001AFA  EF80  F00D         	goto	l3610
  6914   001AFE                     u2930:
  6915   001AFE  8C47               	bsf	___fladd@signs^0,6,c
  6916   001B00                     l3610:
  6917   001B00  5042               	movf	(___fladd@a+3)^0,w,c
  6918   001B02  2442               	addwf	(___fladd@a+3)^0,w,c
  6919   001B04  6E48               	movwf	___fladd@aexp^0,c
  6920   001B06  AE41               	btfss	(___fladd@a+2)^0,7,c
  6921   001B08  EF88  F00D         	goto	u2941
  6922   001B0C  EF8A  F00D         	goto	u2940
  6923   001B10                     u2941:
  6924   001B10  EF8B  F00D         	goto	l3616
  6925   001B14                     u2940:
  6926   001B14  8048               	bsf	___fladd@aexp^0,0,c
  6927   001B16                     l3616:
  6928   001B16  5048               	movf	___fladd@aexp^0,w,c
  6929   001B18  B4D8               	btfsc	status,2,c
  6930   001B1A  EF91  F00D         	goto	u2951
  6931   001B1E  EF93  F00D         	goto	u2950
  6932   001B22                     u2951:
  6933   001B22  EFA8  F00D         	goto	l3626
  6934   001B26                     u2950:
  6935   001B26  2848               	incf	___fladd@aexp^0,w,c
  6936   001B28  A4D8               	btfss	status,2,c
  6937   001B2A  EF99  F00D         	goto	u2961
  6938   001B2E  EF9B  F00D         	goto	u2960
  6939   001B32                     u2961:
  6940   001B32  EFA3  F00D         	goto	l3622
  6941   001B36                     u2960:
  6942   001B36  0E00               	movlw	0
  6943   001B38  6E3F               	movwf	___fladd@a^0,c
  6944   001B3A  0E00               	movlw	0
  6945   001B3C  6E40               	movwf	(___fladd@a+1)^0,c
  6946   001B3E  0E00               	movlw	0
  6947   001B40  6E41               	movwf	(___fladd@a+2)^0,c
  6948   001B42  0E00               	movlw	0
  6949   001B44  6E42               	movwf	(___fladd@a+3)^0,c
  6950   001B46                     l3622:
  6951   001B46  8E41               	bsf	(___fladd@a+2)^0,7,c
  6952   001B48  0E00               	movlw	0
  6953   001B4A  6E42               	movwf	(___fladd@a+3)^0,c
  6954   001B4C  EFB0  F00D         	goto	l3628
  6955   001B50                     l3626:
  6956   001B50  0E00               	movlw	0
  6957   001B52  6E3F               	movwf	___fladd@a^0,c
  6958   001B54  0E00               	movlw	0
  6959   001B56  6E40               	movwf	(___fladd@a+1)^0,c
  6960   001B58  0E00               	movlw	0
  6961   001B5A  6E41               	movwf	(___fladd@a+2)^0,c
  6962   001B5C  0E00               	movlw	0
  6963   001B5E  6E42               	movwf	(___fladd@a+3)^0,c
  6964   001B60                     l3628:
  6965   001B60  5049               	movf	___fladd@bexp^0,w,c
  6966   001B62  5C48               	subwf	___fladd@aexp^0,w,c
  6967   001B64  B0D8               	btfsc	status,0,c
  6968   001B66  EFB7  F00D         	goto	u2971
  6969   001B6A  EFB9  F00D         	goto	u2970
  6970   001B6E                     u2971:
  6971   001B6E  EFE0  F00D         	goto	l3664
  6972   001B72                     u2970:
  6973   001B72  AC47               	btfss	___fladd@signs^0,6,c
  6974   001B74  EFBE  F00D         	goto	u2981
  6975   001B78  EFC0  F00D         	goto	u2980
  6976   001B7C                     u2981:
  6977   001B7C  EFC2  F00D         	goto	l3634
  6978   001B80                     u2980:
  6979   001B80  0E80               	movlw	128
  6980   001B82  1A47               	xorwf	___fladd@signs^0,f,c
  6981   001B84                     l3634:
  6982   001B84  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  6983   001B88  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  6984   001B8C  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  6985   001B90  C03B  F04A         	movff	___fladd@b,___fladd@grs
  6986   001B94  C03F  F03B         	movff	___fladd@a,___fladd@b
  6987   001B98  C04A  F03F         	movff	___fladd@grs,___fladd@a
  6988   001B9C  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  6989   001BA0  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  6990   001BA4  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  6991   001BA8  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  6992   001BAC  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  6993   001BB0  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  6994   001BB4  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  6995   001BB8  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  6996   001BBC  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  6997   001BC0                     l3664:
  6998   001BC0  0E00               	movlw	0
  6999   001BC2  6E4A               	movwf	___fladd@grs^0,c
  7000   001BC4  5049               	movf	___fladd@bexp^0,w,c
  7001   001BC6  C048  F043         	movff	___fladd@aexp,??___fladd
  7002   001BCA  6A44               	clrf	(??___fladd+1)^0,c
  7003   001BCC  5E43               	subwf	??___fladd^0,f,c
  7004   001BCE  0E00               	movlw	0
  7005   001BD0  5A44               	subwfb	(??___fladd+1)^0,f,c
  7006   001BD2  BE44               	btfsc	(??___fladd+1)^0,7,c
  7007   001BD4  EFF5  F00D         	goto	u2991
  7008   001BD8  5044               	movf	(??___fladd+1)^0,w,c
  7009   001BDA  E109               	bnz	u2990
  7010   001BDC  0E1A               	movlw	26
  7011   001BDE  5C43               	subwf	??___fladd^0,w,c
  7012   001BE0  A0D8               	btfss	status,0,c
  7013   001BE2  EFF5  F00D         	goto	u2991
  7014   001BE6  EFF7  F00D         	goto	u2990
  7015   001BEA                     u2991:
  7016   001BEA  EF2E  F00E         	goto	l1218
  7017   001BEE                     u2990:
  7018   001BEE  503B               	movf	___fladd@b^0,w,c
  7019   001BF0  103C               	iorwf	(___fladd@b+1)^0,w,c
  7020   001BF2  103D               	iorwf	(___fladd@b+2)^0,w,c
  7021   001BF4  103E               	iorwf	(___fladd@b+3)^0,w,c
  7022   001BF6  A4D8               	btfss	status,2,c
  7023   001BF8  EF00  F00E         	goto	u3001
  7024   001BFC  EF03  F00E         	goto	u3000
  7025   001C00                     u3001:
  7026   001C00  0E01               	movlw	1
  7027   001C02  EF04  F00E         	goto	u3010
  7028   001C06                     u3000:
  7029   001C06  0E00               	movlw	0
  7030   001C08                     u3010:
  7031   001C08  6E4A               	movwf	___fladd@grs^0,c
  7032   001C0A  0E00               	movlw	0
  7033   001C0C  6E3B               	movwf	___fladd@b^0,c
  7034   001C0E  0E00               	movlw	0
  7035   001C10  6E3C               	movwf	(___fladd@b+1)^0,c
  7036   001C12  0E00               	movlw	0
  7037   001C14  6E3D               	movwf	(___fladd@b+2)^0,c
  7038   001C16  0E00               	movlw	0
  7039   001C18  6E3E               	movwf	(___fladd@b+3)^0,c
  7040   001C1A  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7041   001C1E  EF37  F00E         	goto	l1217
  7042   001C22                     l1219:
  7043   001C22  A04A               	btfss	___fladd@grs^0,0,c
  7044   001C24  EF16  F00E         	goto	u3021
  7045   001C28  EF18  F00E         	goto	u3020
  7046   001C2C                     u3021:
  7047   001C2C  EF1E  F00E         	goto	l3676
  7048   001C30                     u3020:
  7049   001C30  90D8               	bcf	status,0,c
  7050   001C32  304A               	rrcf	___fladd@grs^0,w,c
  7051   001C34  0901               	iorlw	1
  7052   001C36  6E4A               	movwf	___fladd@grs^0,c
  7053   001C38  EF20  F00E         	goto	l3678
  7054   001C3C                     l3676:
  7055   001C3C  90D8               	bcf	status,0,c
  7056   001C3E  324A               	rrcf	___fladd@grs^0,f,c
  7057   001C40                     l3678:
  7058   001C40  A03B               	btfss	___fladd@b^0,0,c
  7059   001C42  EF25  F00E         	goto	u3031
  7060   001C46  EF27  F00E         	goto	u3030
  7061   001C4A                     u3031:
  7062   001C4A  EF28  F00E         	goto	l3682
  7063   001C4E                     u3030:
  7064   001C4E  8E4A               	bsf	___fladd@grs^0,7,c
  7065   001C50                     l3682:
  7066   001C50  343E               	rlcf	(___fladd@b+3)^0,w,c
  7067   001C52  323E               	rrcf	(___fladd@b+3)^0,f,c
  7068   001C54  323D               	rrcf	(___fladd@b+2)^0,f,c
  7069   001C56  323C               	rrcf	(___fladd@b+1)^0,f,c
  7070   001C58  323B               	rrcf	___fladd@b^0,f,c
  7071   001C5A  2A49               	incf	___fladd@bexp^0,f,c
  7072   001C5C                     l1218:
  7073   001C5C  5048               	movf	___fladd@aexp^0,w,c
  7074   001C5E  5C49               	subwf	___fladd@bexp^0,w,c
  7075   001C60  A0D8               	btfss	status,0,c
  7076   001C62  EF35  F00E         	goto	u3041
  7077   001C66  EF37  F00E         	goto	u3040
  7078   001C6A                     u3041:
  7079   001C6A  EF11  F00E         	goto	l1219
  7080   001C6E                     u3040:
  7081   001C6E                     l1217:
  7082   001C6E  BC47               	btfsc	___fladd@signs^0,6,c
  7083   001C70  EF3C  F00E         	goto	u3051
  7084   001C74  EF3E  F00E         	goto	u3050
  7085   001C78                     u3051:
  7086   001C78  EF7E  F00E         	goto	l3710
  7087   001C7C                     u3050:
  7088   001C7C  5049               	movf	___fladd@bexp^0,w,c
  7089   001C7E  A4D8               	btfss	status,2,c
  7090   001C80  EF44  F00E         	goto	u3061
  7091   001C84  EF46  F00E         	goto	u3060
  7092   001C88                     u3061:
  7093   001C88  EF50  F00E         	goto	l3692
  7094   001C8C                     u3060:
  7095   001C8C  0E00               	movlw	0
  7096   001C8E  6E3B               	movwf	?___fladd^0,c
  7097   001C90  0E00               	movlw	0
  7098   001C92  6E3C               	movwf	(?___fladd+1)^0,c
  7099   001C94  0E00               	movlw	0
  7100   001C96  6E3D               	movwf	(?___fladd+2)^0,c
  7101   001C98  0E00               	movlw	0
  7102   001C9A  6E3E               	movwf	(?___fladd+3)^0,c
  7103   001C9C  EF9F  F00F         	goto	l1226
  7104   001CA0                     l3692:
  7105   001CA0  503F               	movf	___fladd@a^0,w,c
  7106   001CA2  263B               	addwf	___fladd@b^0,f,c
  7107   001CA4  5040               	movf	(___fladd@a+1)^0,w,c
  7108   001CA6  223C               	addwfc	(___fladd@b+1)^0,f,c
  7109   001CA8  5041               	movf	(___fladd@a+2)^0,w,c
  7110   001CAA  223D               	addwfc	(___fladd@b+2)^0,f,c
  7111   001CAC  5042               	movf	(___fladd@a+3)^0,w,c
  7112   001CAE  223E               	addwfc	(___fladd@b+3)^0,f,c
  7113   001CB0  A03E               	btfss	(___fladd@b+3)^0,0,c
  7114   001CB2  EF5D  F00E         	goto	u3071
  7115   001CB6  EF5F  F00E         	goto	u3070
  7116   001CBA                     u3071:
  7117   001CBA  EF0B  F00F         	goto	l3746
  7118   001CBE                     u3070:
  7119   001CBE  A04A               	btfss	___fladd@grs^0,0,c
  7120   001CC0  EF64  F00E         	goto	u3081
  7121   001CC4  EF66  F00E         	goto	u3080
  7122   001CC8                     u3081:
  7123   001CC8  EF6C  F00E         	goto	l3700
  7124   001CCC                     u3080:
  7125   001CCC  90D8               	bcf	status,0,c
  7126   001CCE  304A               	rrcf	___fladd@grs^0,w,c
  7127   001CD0  0901               	iorlw	1
  7128   001CD2  6E4A               	movwf	___fladd@grs^0,c
  7129   001CD4  EF6E  F00E         	goto	l3702
  7130   001CD8                     l3700:
  7131   001CD8  90D8               	bcf	status,0,c
  7132   001CDA  324A               	rrcf	___fladd@grs^0,f,c
  7133   001CDC                     l3702:
  7134   001CDC  A03B               	btfss	___fladd@b^0,0,c
  7135   001CDE  EF73  F00E         	goto	u3091
  7136   001CE2  EF75  F00E         	goto	u3090
  7137   001CE6                     u3091:
  7138   001CE6  EF76  F00E         	goto	l3706
  7139   001CEA                     u3090:
  7140   001CEA  8E4A               	bsf	___fladd@grs^0,7,c
  7141   001CEC                     l3706:
  7142   001CEC  343E               	rlcf	(___fladd@b+3)^0,w,c
  7143   001CEE  323E               	rrcf	(___fladd@b+3)^0,f,c
  7144   001CF0  323D               	rrcf	(___fladd@b+2)^0,f,c
  7145   001CF2  323C               	rrcf	(___fladd@b+1)^0,f,c
  7146   001CF4  323B               	rrcf	___fladd@b^0,f,c
  7147   001CF6  2A49               	incf	___fladd@bexp^0,f,c
  7148   001CF8  EF0B  F00F         	goto	l3746
  7149   001CFC                     l3710:
  7150   001CFC  503F               	movf	___fladd@a^0,w,c
  7151   001CFE  5C3B               	subwf	___fladd@b^0,w,c
  7152   001D00  5040               	movf	(___fladd@a+1)^0,w,c
  7153   001D02  583C               	subwfb	(___fladd@b+1)^0,w,c
  7154   001D04  5041               	movf	(___fladd@a+2)^0,w,c
  7155   001D06  583D               	subwfb	(___fladd@b+2)^0,w,c
  7156   001D08  503E               	movf	(___fladd@b+3)^0,w,c
  7157   001D0A  0A80               	xorlw	128
  7158   001D0C  6E43               	movwf	??___fladd^0,c
  7159   001D0E  5042               	movf	(___fladd@a+3)^0,w,c
  7160   001D10  0A80               	xorlw	128
  7161   001D12  5843               	subwfb	??___fladd^0,w,c
  7162   001D14  B0D8               	btfsc	status,0,c
  7163   001D16  EF8F  F00E         	goto	u3101
  7164   001D1A  EF91  F00E         	goto	u3100
  7165   001D1E                     u3101:
  7166   001D1E  EFBC  F00E         	goto	l3720
  7167   001D22                     u3100:
  7168   001D22  503B               	movf	___fladd@b^0,w,c
  7169   001D24  5C3F               	subwf	___fladd@a^0,w,c
  7170   001D26  6E43               	movwf	??___fladd^0,c
  7171   001D28  503C               	movf	(___fladd@b+1)^0,w,c
  7172   001D2A  5840               	subwfb	(___fladd@a+1)^0,w,c
  7173   001D2C  6E44               	movwf	(??___fladd+1)^0,c
  7174   001D2E  503D               	movf	(___fladd@b+2)^0,w,c
  7175   001D30  5841               	subwfb	(___fladd@a+2)^0,w,c
  7176   001D32  6E45               	movwf	(??___fladd+2)^0,c
  7177   001D34  503E               	movf	(___fladd@b+3)^0,w,c
  7178   001D36  5842               	subwfb	(___fladd@a+3)^0,w,c
  7179   001D38  6E46               	movwf	(??___fladd+3)^0,c
  7180   001D3A  0EFF               	movlw	255
  7181   001D3C  2443               	addwf	??___fladd^0,w,c
  7182   001D3E  6E3B               	movwf	___fladd@b^0,c
  7183   001D40  0EFF               	movlw	255
  7184   001D42  2044               	addwfc	(??___fladd+1)^0,w,c
  7185   001D44  6E3C               	movwf	(___fladd@b+1)^0,c
  7186   001D46  0EFF               	movlw	255
  7187   001D48  2045               	addwfc	(??___fladd+2)^0,w,c
  7188   001D4A  6E3D               	movwf	(___fladd@b+2)^0,c
  7189   001D4C  0EFF               	movlw	255
  7190   001D4E  2046               	addwfc	(??___fladd+3)^0,w,c
  7191   001D50  6E3E               	movwf	(___fladd@b+3)^0,c
  7192   001D52  0E80               	movlw	128
  7193   001D54  1A47               	xorwf	___fladd@signs^0,f,c
  7194   001D56  6C4A               	negf	___fladd@grs^0,c
  7195   001D58  504A               	movf	___fladd@grs^0,w,c
  7196   001D5A  A4D8               	btfss	status,2,c
  7197   001D5C  EFB2  F00E         	goto	u3111
  7198   001D60  EFB4  F00E         	goto	u3110
  7199   001D64                     u3111:
  7200   001D64  EFC4  F00E         	goto	l1234
  7201   001D68                     u3110:
  7202   001D68  0E01               	movlw	1
  7203   001D6A  263B               	addwf	___fladd@b^0,f,c
  7204   001D6C  0E00               	movlw	0
  7205   001D6E  223C               	addwfc	(___fladd@b+1)^0,f,c
  7206   001D70  223D               	addwfc	(___fladd@b+2)^0,f,c
  7207   001D72  223E               	addwfc	(___fladd@b+3)^0,f,c
  7208   001D74  EFC4  F00E         	goto	l1234
  7209   001D78                     l3720:
  7210   001D78  503F               	movf	___fladd@a^0,w,c
  7211   001D7A  5E3B               	subwf	___fladd@b^0,f,c
  7212   001D7C  5040               	movf	(___fladd@a+1)^0,w,c
  7213   001D7E  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  7214   001D80  5041               	movf	(___fladd@a+2)^0,w,c
  7215   001D82  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  7216   001D84  5042               	movf	(___fladd@a+3)^0,w,c
  7217   001D86  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  7218   001D88                     l1234:
  7219   001D88  503B               	movf	___fladd@b^0,w,c
  7220   001D8A  103C               	iorwf	(___fladd@b+1)^0,w,c
  7221   001D8C  103D               	iorwf	(___fladd@b+2)^0,w,c
  7222   001D8E  103E               	iorwf	(___fladd@b+3)^0,w,c
  7223   001D90  A4D8               	btfss	status,2,c
  7224   001D92  EFCD  F00E         	goto	u3121
  7225   001D96  EFCF  F00E         	goto	u3120
  7226   001D9A                     u3121:
  7227   001D9A  EF04  F00F         	goto	l3744
  7228   001D9E                     u3120:
  7229   001D9E  504A               	movf	___fladd@grs^0,w,c
  7230   001DA0  A4D8               	btfss	status,2,c
  7231   001DA2  EFD5  F00E         	goto	u3131
  7232   001DA6  EFD7  F00E         	goto	u3130
  7233   001DAA                     u3131:
  7234   001DAA  EF04  F00F         	goto	l3744
  7235   001DAE                     u3130:
  7236   001DAE  0E00               	movlw	0
  7237   001DB0  6E3B               	movwf	?___fladd^0,c
  7238   001DB2  0E00               	movlw	0
  7239   001DB4  6E3C               	movwf	(?___fladd+1)^0,c
  7240   001DB6  0E00               	movlw	0
  7241   001DB8  6E3D               	movwf	(?___fladd+2)^0,c
  7242   001DBA  0E00               	movlw	0
  7243   001DBC  6E3E               	movwf	(?___fladd+3)^0,c
  7244   001DBE  EF9F  F00F         	goto	l1226
  7245   001DC2                     l3728:
  7246   001DC2  90D8               	bcf	status,0,c
  7247   001DC4  363B               	rlcf	___fladd@b^0,f,c
  7248   001DC6  363C               	rlcf	(___fladd@b+1)^0,f,c
  7249   001DC8  363D               	rlcf	(___fladd@b+2)^0,f,c
  7250   001DCA  363E               	rlcf	(___fladd@b+3)^0,f,c
  7251   001DCC  AE4A               	btfss	___fladd@grs^0,7,c
  7252   001DCE  EFEB  F00E         	goto	u3141
  7253   001DD2  EFED  F00E         	goto	u3140
  7254   001DD6                     u3141:
  7255   001DD6  EFEE  F00E         	goto	l3734
  7256   001DDA                     u3140:
  7257   001DDA  803B               	bsf	___fladd@b^0,0,c
  7258   001DDC                     l3734:
  7259   001DDC  A04A               	btfss	___fladd@grs^0,0,c
  7260   001DDE  EFF3  F00E         	goto	u3151
  7261   001DE2  EFF5  F00E         	goto	u3150
  7262   001DE6                     u3151:
  7263   001DE6  EFF9  F00E         	goto	l3738
  7264   001DEA                     u3150:
  7265   001DEA  80D8               	bsf	status,0,c
  7266   001DEC  364A               	rlcf	___fladd@grs^0,f,c
  7267   001DEE  EFFB  F00E         	goto	l3740
  7268   001DF2                     l3738:
  7269   001DF2  90D8               	bcf	status,0,c
  7270   001DF4  364A               	rlcf	___fladd@grs^0,f,c
  7271   001DF6                     l3740:
  7272   001DF6  5049               	movf	___fladd@bexp^0,w,c
  7273   001DF8  B4D8               	btfsc	status,2,c
  7274   001DFA  EF01  F00F         	goto	u3161
  7275   001DFE  EF03  F00F         	goto	u3160
  7276   001E02                     u3161:
  7277   001E02  EF04  F00F         	goto	l3744
  7278   001E06                     u3160:
  7279   001E06  0649               	decf	___fladd@bexp^0,f,c
  7280   001E08                     l3744:
  7281   001E08  AE3D               	btfss	(___fladd@b+2)^0,7,c
  7282   001E0A  EF09  F00F         	goto	u3171
  7283   001E0E  EF0B  F00F         	goto	u3170
  7284   001E12                     u3171:
  7285   001E12  EFE1  F00E         	goto	l3728
  7286   001E16                     u3170:
  7287   001E16                     l3746:
  7288   001E16  0E00               	movlw	0
  7289   001E18  6E48               	movwf	___fladd@aexp^0,c
  7290   001E1A  AE4A               	btfss	___fladd@grs^0,7,c
  7291   001E1C  EF12  F00F         	goto	u3181
  7292   001E20  EF14  F00F         	goto	u3180
  7293   001E24                     u3181:
  7294   001E24  EF2C  F00F         	goto	l1243
  7295   001E28                     u3180:
  7296   001E28  C04A  F043         	movff	___fladd@grs,??___fladd
  7297   001E2C  0E7F               	movlw	127
  7298   001E2E  1643               	andwf	??___fladd^0,f,c
  7299   001E30  B4D8               	btfsc	status,2,c
  7300   001E32  EF1D  F00F         	goto	u3191
  7301   001E36  EF1F  F00F         	goto	u3190
  7302   001E3A                     u3191:
  7303   001E3A  EF23  F00F         	goto	l1244
  7304   001E3E                     u3190:
  7305   001E3E                     l3752:
  7306   001E3E  0E01               	movlw	1
  7307   001E40  6E48               	movwf	___fladd@aexp^0,c
  7308   001E42  EF2C  F00F         	goto	l1243
  7309   001E46                     l1244:
  7310   001E46  A03B               	btfss	___fladd@b^0,0,c
  7311   001E48  EF28  F00F         	goto	u3201
  7312   001E4C  EF2A  F00F         	goto	u3200
  7313   001E50                     u3201:
  7314   001E50  EF2C  F00F         	goto	l1243
  7315   001E54                     u3200:
  7316   001E54  EF1F  F00F         	goto	l3752
  7317   001E58                     l1243:
  7318   001E58  5048               	movf	___fladd@aexp^0,w,c
  7319   001E5A  B4D8               	btfsc	status,2,c
  7320   001E5C  EF32  F00F         	goto	u3211
  7321   001E60  EF34  F00F         	goto	u3210
  7322   001E64                     u3211:
  7323   001E64  EF5F  F00F         	goto	l3764
  7324   001E68                     u3210:
  7325   001E68  0E01               	movlw	1
  7326   001E6A  263B               	addwf	___fladd@b^0,f,c
  7327   001E6C  0E00               	movlw	0
  7328   001E6E  223C               	addwfc	(___fladd@b+1)^0,f,c
  7329   001E70  223D               	addwfc	(___fladd@b+2)^0,f,c
  7330   001E72  223E               	addwfc	(___fladd@b+3)^0,f,c
  7331   001E74  A03E               	btfss	(___fladd@b+3)^0,0,c
  7332   001E76  EF3F  F00F         	goto	u3221
  7333   001E7A  EF41  F00F         	goto	u3220
  7334   001E7E                     u3221:
  7335   001E7E  EF5F  F00F         	goto	l3764
  7336   001E82                     u3220:
  7337   001E82  C03B  F043         	movff	___fladd@b,??___fladd
  7338   001E86  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  7339   001E8A  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  7340   001E8E  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  7341   001E92  3446               	rlcf	(??___fladd+3)^0,w,c
  7342   001E94  3246               	rrcf	(??___fladd+3)^0,f,c
  7343   001E96  3245               	rrcf	(??___fladd+2)^0,f,c
  7344   001E98  3244               	rrcf	(??___fladd+1)^0,f,c
  7345   001E9A  3243               	rrcf	??___fladd^0,f,c
  7346   001E9C  C043  F03B         	movff	??___fladd,___fladd@b
  7347   001EA0  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  7348   001EA4  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  7349   001EA8  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  7350   001EAC  2849               	incf	___fladd@bexp^0,w,c
  7351   001EAE  B4D8               	btfsc	status,2,c
  7352   001EB0  EF5C  F00F         	goto	u3231
  7353   001EB4  EF5E  F00F         	goto	u3230
  7354   001EB8                     u3231:
  7355   001EB8  EF5F  F00F         	goto	l3764
  7356   001EBC                     u3230:
  7357   001EBC  2A49               	incf	___fladd@bexp^0,f,c
  7358   001EBE                     l3764:
  7359   001EBE  2849               	incf	___fladd@bexp^0,w,c
  7360   001EC0  B4D8               	btfsc	status,2,c
  7361   001EC2  EF65  F00F         	goto	u3241
  7362   001EC6  EF67  F00F         	goto	u3240
  7363   001ECA                     u3241:
  7364   001ECA  EF6F  F00F         	goto	l3768
  7365   001ECE                     u3240:
  7366   001ECE  5049               	movf	___fladd@bexp^0,w,c
  7367   001ED0  A4D8               	btfss	status,2,c
  7368   001ED2  EF6D  F00F         	goto	u3251
  7369   001ED6  EF6F  F00F         	goto	u3250
  7370   001EDA                     u3251:
  7371   001EDA  EF81  F00F         	goto	l3772
  7372   001EDE                     u3250:
  7373   001EDE                     l3768:
  7374   001EDE  0E00               	movlw	0
  7375   001EE0  6E3B               	movwf	___fladd@b^0,c
  7376   001EE2  0E00               	movlw	0
  7377   001EE4  6E3C               	movwf	(___fladd@b+1)^0,c
  7378   001EE6  0E00               	movlw	0
  7379   001EE8  6E3D               	movwf	(___fladd@b+2)^0,c
  7380   001EEA  0E00               	movlw	0
  7381   001EEC  6E3E               	movwf	(___fladd@b+3)^0,c
  7382   001EEE  5049               	movf	___fladd@bexp^0,w,c
  7383   001EF0  A4D8               	btfss	status,2,c
  7384   001EF2  EF7D  F00F         	goto	u3261
  7385   001EF6  EF7F  F00F         	goto	u3260
  7386   001EFA                     u3261:
  7387   001EFA  EF81  F00F         	goto	l3772
  7388   001EFE                     u3260:
  7389   001EFE  0E00               	movlw	0
  7390   001F00  6E47               	movwf	___fladd@signs^0,c
  7391   001F02                     l3772:
  7392   001F02  A049               	btfss	___fladd@bexp^0,0,c
  7393   001F04  EF86  F00F         	goto	u3271
  7394   001F08  EF88  F00F         	goto	u3270
  7395   001F0C                     u3271:
  7396   001F0C  EF8B  F00F         	goto	l3776
  7397   001F10                     u3270:
  7398   001F10  8E3D               	bsf	(___fladd@b+2)^0,7,c
  7399   001F12  EF8C  F00F         	goto	l3778
  7400   001F16                     l3776:
  7401   001F16  9E3D               	bcf	(___fladd@b+2)^0,7,c
  7402   001F18                     l3778:
  7403   001F18  90D8               	bcf	status,0,c
  7404   001F1A  3049               	rrcf	___fladd@bexp^0,w,c
  7405   001F1C  6E3E               	movwf	(___fladd@b+3)^0,c
  7406   001F1E  AE47               	btfss	___fladd@signs^0,7,c
  7407   001F20  EF94  F00F         	goto	u3281
  7408   001F24  EF96  F00F         	goto	u3280
  7409   001F28                     u3281:
  7410   001F28  EF97  F00F         	goto	l3784
  7411   001F2C                     u3280:
  7412   001F2C  8E3E               	bsf	(___fladd@b+3)^0,7,c
  7413   001F2E                     l3784:
  7414   001F2E  C03B  F03B         	movff	___fladd@b,?___fladd
  7415   001F32  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  7416   001F36  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  7417   001F3A  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  7418   001F3E                     l1226:
  7419   001F3E  0012               	return		;funcret
  7420   001F40                     __end_of___fladd:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _Yellow_rev1_R90 *****************
  7424 ;; Defined at:
  7425 ;;		line 266 in file "dc_motor.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7428 ;;		 -> motorL(9), 
  7429 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7430 ;;		 -> motorR(9), 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7446 ;;Total ram usage:        6 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 5
  7449 ;; This function calls:
  7450 ;;		_Left45
  7451 ;;		_Right45
  7452 ;;		_fullSpeedReverse
  7453 ;;		_reverseHalfSquare
  7454 ;; This function is called by:
  7455 ;;		_White
  7456 ;;		_Colour2Action
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text34
  7461   003A5A                     __ptext34:
  7462                           	callstack 0
  7463   003A5A                     _Yellow_rev1_R90:
  7464                           	callstack 24
  7465   003A5A                     
  7466                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7467   003A5A  0100               	movlb	0	; () banked
  7468   003A5C  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7469   003A5E  B4D8               	btfsc	status,2,c
  7470   003A60  EF34  F01D         	goto	u2851
  7471   003A64  EF36  F01D         	goto	u2850
  7472   003A68                     u2851:
  7473   003A68  EF6C  F01D         	goto	l3548
  7474   003A6C                     u2850:
  7475   003A6C                     
  7476                           ; BSR set to: 0
  7477                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7478   003A6C  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7479   003A70  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7480   003A74  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7481   003A78  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7482   003A7C  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  7483                           
  7484                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7485   003A80  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7486   003A84  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7487   003A88  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7488   003A8C  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7489   003A90  EC02  F021         	call	_fullSpeedReverse	;wreg free
  7490   003A94                     
  7491                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7492   003A94  0E39               	movlw	57
  7493   003A96  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7494   003A98  0ED2               	movlw	210
  7495   003A9A  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7496   003A9C  0E4C               	movlw	76
  7497   003A9E                     u4337:
  7498   003A9E  2EE8               	decfsz	wreg,f,c
  7499   003AA0  D7FE               	bra	u4337
  7500   003AA2  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7501   003AA4  D7FC               	bra	u4337
  7502   003AA6  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7503   003AA8  D7FA               	bra	u4337
  7504   003AAA  D000               	nop2	
  7505   003AAC                     
  7506                           ;dc_motor.c: 274:         Right45(mL,mR);
  7507   003AAC  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7508   003AB0  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7509   003AB4  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7510   003AB8  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7511   003ABC  ECF5  F01F         	call	_Right45	;wreg free
  7512   003AC0                     
  7513                           ;dc_motor.c: 275:         Right45(mL,mR);
  7514   003AC0  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7515   003AC4  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7516   003AC8  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7517   003ACC  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7518   003AD0  ECF5  F01F         	call	_Right45	;wreg free
  7519                           
  7520                           ;dc_motor.c: 276:     }
  7521   003AD4  EF80  F01D         	goto	l305
  7522   003AD8                     l3548:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;dc_motor.c: 280:         Left45(mL,mR);
  7526   003AD8  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7527   003ADC  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7528   003AE0  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7529   003AE4  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7530   003AE8  EC3A  F020         	call	_Left45	;wreg free
  7531                           
  7532                           ;dc_motor.c: 281:         Left45(mL,mR);
  7533   003AEC  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7534   003AF0  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7535   003AF4  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7536   003AF8  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7537   003AFC  EC3A  F020         	call	_Left45	;wreg free
  7538   003B00                     l305:
  7539   003B00  0012               	return		;funcret
  7540   003B02                     __end_of_Yellow_rev1_R90:
  7541                           	callstack 0
  7542                           
  7543 ;; *************** function _TimerReset *****************
  7544 ;; Defined at:
  7545 ;;		line 23 in file "timer.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;		None
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;		None
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      void 
  7552 ;; Registers used:
  7553 ;;		wreg, status,2
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;Total ram usage:        0 bytes
  7564 ;; Hardware stack levels used: 1
  7565 ;; Hardware stack levels required when called: 1
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_main
  7570 ;;		_White
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text35
  7575   004A6A                     __ptext35:
  7576                           	callstack 0
  7577   004A6A                     _TimerReset:
  7578                           	callstack 29
  7579   004A6A                     
  7580                           ;timer.c: 25:     TMR0L = 0;
  7581   004A6A  0E00               	movlw	0
  7582   004A6C  6ED3               	movwf	211,c	;volatile
  7583                           
  7584                           ;timer.c: 26:     TMR0H = 0;
  7585   004A6E  0E00               	movlw	0
  7586   004A70  6ED4               	movwf	212,c	;volatile
  7587   004A72  0012               	return		;funcret
  7588   004A74                     __end_of_TimerReset:
  7589                           	callstack 0
  7590                           
  7591 ;; *************** function _Red_R90 *****************
  7592 ;; Defined at:
  7593 ;;		line 226 in file "dc_motor.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7596 ;;		 -> motorL(9), 
  7597 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7598 ;;		 -> motorR(9), 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7614 ;;Total ram usage:        4 bytes
  7615 ;; Hardware stack levels used: 1
  7616 ;; Hardware stack levels required when called: 5
  7617 ;; This function calls:
  7618 ;;		_Left45
  7619 ;;		_Right45
  7620 ;;		_reverseHalfSquare
  7621 ;; This function is called by:
  7622 ;;		_White
  7623 ;;		_Colour2Action
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text36
  7628   004284                     __ptext36:
  7629                           	callstack 0
  7630   004284                     _Red_R90:
  7631                           	callstack 23
  7632   004284                     
  7633                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7634   004284  0100               	movlb	0	; () banked
  7635   004286  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7636   004288  B4D8               	btfsc	status,2,c
  7637   00428A  EF49  F021         	goto	u2821
  7638   00428E  EF4B  F021         	goto	u2820
  7639   004292                     u2821:
  7640   004292  EF6B  F021         	goto	l3524
  7641   004296                     u2820:
  7642   004296                     
  7643                           ; BSR set to: 0
  7644                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7645   004296  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7646   00429A  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7647   00429E  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7648   0042A2  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7649   0042A6  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  7650                           
  7651                           ;dc_motor.c: 230:         Right45(mL,mR);
  7652   0042AA  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7653   0042AE  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7654   0042B2  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7655   0042B6  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7656   0042BA  ECF5  F01F         	call	_Right45	;wreg free
  7657                           
  7658                           ;dc_motor.c: 231:         Right45(mL,mR);
  7659   0042BE  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7660   0042C2  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7661   0042C6  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7662   0042CA  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7663   0042CE  ECF5  F01F         	call	_Right45	;wreg free
  7664                           
  7665                           ;dc_motor.c: 232:     }
  7666   0042D2  EF7F  F021         	goto	l290
  7667   0042D6                     l3524:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;dc_motor.c: 235:         Left45(mL,mR);
  7671   0042D6  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7672   0042DA  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7673   0042DE  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7674   0042E2  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7675   0042E6  EC3A  F020         	call	_Left45	;wreg free
  7676                           
  7677                           ;dc_motor.c: 236:         Left45(mL,mR);
  7678   0042EA  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7679   0042EE  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7680   0042F2  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7681   0042F6  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7682   0042FA  EC3A  F020         	call	_Left45	;wreg free
  7683   0042FE                     l290:
  7684   0042FE  0012               	return		;funcret
  7685   004300                     __end_of_Red_R90:
  7686                           	callstack 0
  7687                           
  7688 ;; *************** function _Pink_rev1_L90 *****************
  7689 ;; Defined at:
  7690 ;;		line 284 in file "dc_motor.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7693 ;;		 -> motorL(9), 
  7694 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7695 ;;		 -> motorR(9), 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;Total ram usage:        6 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 5
  7714 ;; This function calls:
  7715 ;;		_Left45
  7716 ;;		_Right45
  7717 ;;		_fullSpeedReverse
  7718 ;;		_reverseHalfSquare
  7719 ;; This function is called by:
  7720 ;;		_White
  7721 ;;		_Colour2Action
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text37
  7726   003B02                     __ptext37:
  7727                           	callstack 0
  7728   003B02                     _Pink_rev1_L90:
  7729                           	callstack 23
  7730   003B02                     
  7731                           ;dc_motor.c: 284: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 285: {;dc_motor.c: 286:     if (ForwardFlag){
  7732   003B02  0100               	movlb	0	; () banked
  7733   003B04  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7734   003B06  B4D8               	btfsc	status,2,c
  7735   003B08  EF88  F01D         	goto	u2861
  7736   003B0C  EF8A  F01D         	goto	u2860
  7737   003B10                     u2861:
  7738   003B10  EFC0  F01D         	goto	l3560
  7739   003B14                     u2860:
  7740   003B14                     
  7741                           ; BSR set to: 0
  7742                           ;dc_motor.c: 287:         reverseHalfSquare(mL,mR);
  7743   003B14  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7744   003B18  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7745   003B1C  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7746   003B20  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7747   003B24  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  7748                           
  7749                           ;dc_motor.c: 289:         fullSpeedReverse(mL,mR);
  7750   003B28  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7751   003B2C  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7752   003B30  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7753   003B34  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7754   003B38  EC02  F021         	call	_fullSpeedReverse	;wreg free
  7755   003B3C                     
  7756                           ;dc_motor.c: 290:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7757   003B3C  0E39               	movlw	57
  7758   003B3E  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7759   003B40  0ED2               	movlw	210
  7760   003B42  6E25               	movwf	??_Pink_rev1_L90^0,c
  7761   003B44  0E4C               	movlw	76
  7762   003B46                     u4347:
  7763   003B46  2EE8               	decfsz	wreg,f,c
  7764   003B48  D7FE               	bra	u4347
  7765   003B4A  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7766   003B4C  D7FC               	bra	u4347
  7767   003B4E  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7768   003B50  D7FA               	bra	u4347
  7769   003B52  D000               	nop2	
  7770   003B54                     
  7771                           ;dc_motor.c: 291:         Left45(mL,mR);
  7772   003B54  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7773   003B58  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7774   003B5C  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7775   003B60  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7776   003B64  EC3A  F020         	call	_Left45	;wreg free
  7777   003B68                     
  7778                           ;dc_motor.c: 292:         Left45(mL,mR);
  7779   003B68  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7780   003B6C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7781   003B70  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7782   003B74  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7783   003B78  EC3A  F020         	call	_Left45	;wreg free
  7784                           
  7785                           ;dc_motor.c: 293:     }
  7786   003B7C  EFD4  F01D         	goto	l310
  7787   003B80                     l3560:
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;dc_motor.c: 296:         Right45(mL,mR);
  7791   003B80  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7792   003B84  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7793   003B88  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7794   003B8C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7795   003B90  ECF5  F01F         	call	_Right45	;wreg free
  7796                           
  7797                           ;dc_motor.c: 297:         Right45(mL,mR);
  7798   003B94  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7799   003B98  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7800   003B9C  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7801   003BA0  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7802   003BA4  ECF5  F01F         	call	_Right45	;wreg free
  7803   003BA8                     l310:
  7804   003BA8  0012               	return		;funcret
  7805   003BAA                     __end_of_Pink_rev1_L90:
  7806                           	callstack 0
  7807                           
  7808 ;; *************** function _Orange_R135 *****************
  7809 ;; Defined at:
  7810 ;;		line 300 in file "dc_motor.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7813 ;;		 -> motorL(9), 
  7814 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7815 ;;		 -> motorR(9), 
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;Total ram usage:        4 bytes
  7832 ;; Hardware stack levels used: 1
  7833 ;; Hardware stack levels required when called: 5
  7834 ;; This function calls:
  7835 ;;		_Left45
  7836 ;;		_Right45
  7837 ;;		_reverseHalfSquare
  7838 ;; This function is called by:
  7839 ;;		_White
  7840 ;;		_Colour2Action
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text38
  7845   003C50                     __ptext38:
  7846                           	callstack 0
  7847   003C50                     _Orange_R135:
  7848                           	callstack 23
  7849   003C50                     
  7850                           ;dc_motor.c: 300: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           301: {;dc_motor.c: 302:     if (ForwardFlag){
  7851   003C50  0100               	movlb	0	; () banked
  7852   003C52  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7853   003C54  B4D8               	btfsc	status,2,c
  7854   003C56  EF2F  F01E         	goto	u2871
  7855   003C5A  EF31  F01E         	goto	u2870
  7856   003C5E                     u2871:
  7857   003C5E  EF5B  F01E         	goto	l3566
  7858   003C62                     u2870:
  7859   003C62                     
  7860                           ; BSR set to: 0
  7861                           ;dc_motor.c: 303:         reverseHalfSquare(mL,mR);
  7862   003C62  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7863   003C66  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7864   003C6A  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7865   003C6E  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7866   003C72  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  7867                           
  7868                           ;dc_motor.c: 305:         Right45(mL,mR);
  7869   003C76  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7870   003C7A  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7871   003C7E  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7872   003C82  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7873   003C86  ECF5  F01F         	call	_Right45	;wreg free
  7874                           
  7875                           ;dc_motor.c: 306:         Right45(mL,mR);
  7876   003C8A  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7877   003C8E  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7878   003C92  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7879   003C96  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7880   003C9A  ECF5  F01F         	call	_Right45	;wreg free
  7881                           
  7882                           ;dc_motor.c: 307:         Right45(mL,mR);
  7883   003C9E  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7884   003CA2  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7885   003CA6  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7886   003CAA  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7887   003CAE  ECF5  F01F         	call	_Right45	;wreg free
  7888                           
  7889                           ;dc_motor.c: 308:     }
  7890   003CB2  EF79  F01E         	goto	l315
  7891   003CB6                     l3566:
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;dc_motor.c: 311:         Left45(mL,mR);
  7895   003CB6  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7896   003CBA  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7897   003CBE  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7898   003CC2  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7899   003CC6  EC3A  F020         	call	_Left45	;wreg free
  7900                           
  7901                           ;dc_motor.c: 312:         Left45(mL,mR);
  7902   003CCA  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7903   003CCE  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7904   003CD2  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7905   003CD6  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7906   003CDA  EC3A  F020         	call	_Left45	;wreg free
  7907                           
  7908                           ;dc_motor.c: 313:         Left45(mL,mR);
  7909   003CDE  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7910   003CE2  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7911   003CE6  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7912   003CEA  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7913   003CEE  EC3A  F020         	call	_Left45	;wreg free
  7914   003CF2                     l315:
  7915   003CF2  0012               	return		;funcret
  7916   003CF4                     __end_of_Orange_R135:
  7917                           	callstack 0
  7918                           
  7919 ;; *************** function _LightBlue_L135 *****************
  7920 ;; Defined at:
  7921 ;;		line 316 in file "dc_motor.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7924 ;;		 -> motorL(9), 
  7925 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7926 ;;		 -> motorR(9), 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;Total ram usage:        4 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; Hardware stack levels required when called: 5
  7945 ;; This function calls:
  7946 ;;		_Left45
  7947 ;;		_Right45
  7948 ;;		_reverseHalfSquare
  7949 ;; This function is called by:
  7950 ;;		_White
  7951 ;;		_Colour2Action
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text39
  7956   003CF4                     __ptext39:
  7957                           	callstack 0
  7958   003CF4                     _LightBlue_L135:
  7959                           	callstack 23
  7960   003CF4                     
  7961                           ;dc_motor.c: 316: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 317: {;dc_motor.c: 319:      if (ForwardFlag){
  7962   003CF4  0100               	movlb	0	; () banked
  7963   003CF6  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7964   003CF8  B4D8               	btfsc	status,2,c
  7965   003CFA  EF81  F01E         	goto	u2881
  7966   003CFE  EF83  F01E         	goto	u2880
  7967   003D02                     u2881:
  7968   003D02  EFAD  F01E         	goto	l3572
  7969   003D06                     u2880:
  7970   003D06                     
  7971                           ; BSR set to: 0
  7972                           ;dc_motor.c: 320:         reverseHalfSquare(mL,mR);
  7973   003D06  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7974   003D0A  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7975   003D0E  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7976   003D12  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7977   003D16  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  7978                           
  7979                           ;dc_motor.c: 322:         Left45(mL,mR);
  7980   003D1A  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7981   003D1E  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7982   003D22  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7983   003D26  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7984   003D2A  EC3A  F020         	call	_Left45	;wreg free
  7985                           
  7986                           ;dc_motor.c: 323:         Left45(mL,mR);
  7987   003D2E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7988   003D32  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7989   003D36  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7990   003D3A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7991   003D3E  EC3A  F020         	call	_Left45	;wreg free
  7992                           
  7993                           ;dc_motor.c: 324:         Left45(mL,mR);
  7994   003D42  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7995   003D46  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7996   003D4A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7997   003D4E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7998   003D52  EC3A  F020         	call	_Left45	;wreg free
  7999                           
  8000                           ;dc_motor.c: 326:     }
  8001   003D56  EFCB  F01E         	goto	l320
  8002   003D5A                     l3572:
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;dc_motor.c: 329:         Right45(mL,mR);
  8006   003D5A  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8007   003D5E  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8008   003D62  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8009   003D66  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8010   003D6A  ECF5  F01F         	call	_Right45	;wreg free
  8011                           
  8012                           ;dc_motor.c: 330:         Right45(mL,mR);
  8013   003D6E  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8014   003D72  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8015   003D76  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8016   003D7A  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8017   003D7E  ECF5  F01F         	call	_Right45	;wreg free
  8018                           
  8019                           ;dc_motor.c: 331:         Right45(mL,mR);
  8020   003D82  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8021   003D86  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8022   003D8A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8023   003D8E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8024   003D92  ECF5  F01F         	call	_Right45	;wreg free
  8025   003D96                     l320:
  8026   003D96  0012               	return		;funcret
  8027   003D98                     __end_of_LightBlue_L135:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _Green_L90 *****************
  8031 ;; Defined at:
  8032 ;;		line 240 in file "dc_motor.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8035 ;;		 -> motorL(9), 
  8036 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8037 ;;		 -> motorR(9), 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;Total ram usage:        4 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 5
  8056 ;; This function calls:
  8057 ;;		_Left45
  8058 ;;		_Right45
  8059 ;;		_reverseHalfSquare
  8060 ;; This function is called by:
  8061 ;;		_White
  8062 ;;		_Colour2Action
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text40
  8067   004300                     __ptext40:
  8068                           	callstack 0
  8069   004300                     _Green_L90:
  8070                           	callstack 23
  8071   004300                     
  8072                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  8073   004300  0100               	movlb	0	; () banked
  8074   004302  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8075   004304  B4D8               	btfsc	status,2,c
  8076   004306  EF87  F021         	goto	u2831
  8077   00430A  EF89  F021         	goto	u2830
  8078   00430E                     u2831:
  8079   00430E  EFA9  F021         	goto	l3530
  8080   004312                     u2830:
  8081   004312                     
  8082                           ; BSR set to: 0
  8083                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  8084   004312  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  8085   004316  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  8086   00431A  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  8087   00431E  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  8088   004322  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  8089                           
  8090                           ;dc_motor.c: 245:         Left45(mL,mR);
  8091   004326  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8092   00432A  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8093   00432E  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8094   004332  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8095   004336  EC3A  F020         	call	_Left45	;wreg free
  8096                           
  8097                           ;dc_motor.c: 246:         Left45(mL,mR);
  8098   00433A  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8099   00433E  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8100   004342  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8101   004346  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8102   00434A  EC3A  F020         	call	_Left45	;wreg free
  8103                           
  8104                           ;dc_motor.c: 247:     }
  8105   00434E  EFBD  F021         	goto	l295
  8106   004352                     l3530:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;dc_motor.c: 250:         Right45(mL,mR);
  8110   004352  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8111   004356  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8112   00435A  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8113   00435E  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8114   004362  ECF5  F01F         	call	_Right45	;wreg free
  8115                           
  8116                           ;dc_motor.c: 251:         Right45(mL,mR);
  8117   004366  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8118   00436A  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8119   00436E  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8120   004372  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8121   004376  ECF5  F01F         	call	_Right45	;wreg free
  8122   00437A                     l295:
  8123   00437A  0012               	return		;funcret
  8124   00437C                     __end_of_Green_L90:
  8125                           	callstack 0
  8126                           
  8127 ;; *************** function _Right45 *****************
  8128 ;; Defined at:
  8129 ;;		line 193 in file "dc_motor.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8132 ;;		 -> motorL(9), 
  8133 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8134 ;;		 -> motorR(9), 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;Total ram usage:        6 bytes
  8151 ;; Hardware stack levels used: 1
  8152 ;; Hardware stack levels required when called: 4
  8153 ;; This function calls:
  8154 ;;		_stop
  8155 ;;		_turnRight
  8156 ;; This function is called by:
  8157 ;;		_Red_R90
  8158 ;;		_Green_L90
  8159 ;;		_Yellow_rev1_R90
  8160 ;;		_Pink_rev1_L90
  8161 ;;		_Orange_R135
  8162 ;;		_LightBlue_L135
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text41
  8167   003FEA                     __ptext41:
  8168                           	callstack 0
  8169   003FEA                     _Right45:
  8170                           	callstack 24
  8171   003FEA                     
  8172                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  8173   003FEA  8080               	bsf	128,0,c	;volatile
  8174   003FEC                     
  8175                           ;dc_motor.c: 197:     stop(mL,mR);
  8176   003FEC  C01A  F014         	movff	Right45@mL,stop@mL
  8177   003FF0  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8178   003FF4  C01C  F016         	movff	Right45@mR,stop@mR
  8179   003FF8  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8180   003FFC  ECD5  F01D         	call	_stop	;wreg free
  8181   004000                     
  8182                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8183   004000  0E05               	movlw	5
  8184   004002  6E1F               	movwf	(??_Right45+1)^0,c
  8185   004004  0E0F               	movlw	15
  8186   004006  6E1E               	movwf	??_Right45^0,c
  8187   004008  0EF1               	movlw	241
  8188   00400A                     u4357:
  8189   00400A  2EE8               	decfsz	wreg,f,c
  8190   00400C  D7FE               	bra	u4357
  8191   00400E  2E1E               	decfsz	??_Right45^0,f,c
  8192   004010  D7FC               	bra	u4357
  8193   004012  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8194   004014  D7FA               	bra	u4357
  8195   004016  F000               	nop	
  8196   004018                     
  8197                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8198   004018  C01A  F014         	movff	Right45@mL,turnRight@mL
  8199   00401C  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8200   004020  C01C  F016         	movff	Right45@mR,turnRight@mR
  8201   004024  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8202   004028  EC17  F01F         	call	_turnRight	;wreg free
  8203                           
  8204                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8205   00402C  0E0D               	movlw	13
  8206   00402E  6E1F               	movwf	(??_Right45+1)^0,c
  8207   004030  0E95               	movlw	149
  8208   004032  6E1E               	movwf	??_Right45^0,c
  8209   004034  0EBD               	movlw	189
  8210   004036                     u4367:
  8211   004036  2EE8               	decfsz	wreg,f,c
  8212   004038  D7FE               	bra	u4367
  8213   00403A  2E1E               	decfsz	??_Right45^0,f,c
  8214   00403C  D7FC               	bra	u4367
  8215   00403E  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8216   004040  D7FA               	bra	u4367
  8217   004042  F000               	nop	
  8218   004044                     
  8219                           ;dc_motor.c: 201:     stop(mL,mR);
  8220   004044  C01A  F014         	movff	Right45@mL,stop@mL
  8221   004048  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8222   00404C  C01C  F016         	movff	Right45@mR,stop@mR
  8223   004050  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8224   004054  ECD5  F01D         	call	_stop	;wreg free
  8225   004058                     
  8226                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8227   004058  0E05               	movlw	5
  8228   00405A  6E1F               	movwf	(??_Right45+1)^0,c
  8229   00405C  0E0F               	movlw	15
  8230   00405E  6E1E               	movwf	??_Right45^0,c
  8231   004060  0EF1               	movlw	241
  8232   004062                     u4377:
  8233   004062  2EE8               	decfsz	wreg,f,c
  8234   004064  D7FE               	bra	u4377
  8235   004066  2E1E               	decfsz	??_Right45^0,f,c
  8236   004068  D7FC               	bra	u4377
  8237   00406A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8238   00406C  D7FA               	bra	u4377
  8239   00406E  F000               	nop	
  8240   004070                     
  8241                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8242   004070  9080               	bcf	128,0,c	;volatile
  8243   004072  0012               	return		;funcret
  8244   004074                     __end_of_Right45:
  8245                           	callstack 0
  8246                           
  8247 ;; *************** function _turnRight *****************
  8248 ;; Defined at:
  8249 ;;		line 132 in file "dc_motor.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8252 ;;		 -> motorL(9), 
  8253 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8254 ;;		 -> motorR(9), 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  i               2   23[COMRAM] unsigned int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;Total ram usage:        6 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 3
  8273 ;; This function calls:
  8274 ;;		_setMotorPWM
  8275 ;; This function is called by:
  8276 ;;		_Right45
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text42
  8281   003E2E                     __ptext42:
  8282                           	callstack 0
  8283   003E2E                     _turnRight:
  8284                           	callstack 24
  8285   003E2E                     
  8286                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8287   003E2E  EE20 F001          	lfsr	2,1
  8288   003E32  5014               	movf	turnRight@mL^0,w,c
  8289   003E34  26D9               	addwf	fsr2l,f,c
  8290   003E36  5015               	movf	(turnRight@mL+1)^0,w,c
  8291   003E38  22DA               	addwfc	fsr2h,f,c
  8292   003E3A  0E01               	movlw	1
  8293   003E3C  6EDF               	movwf	indf2,c
  8294                           
  8295                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8296   003E3E  EE20 F001          	lfsr	2,1
  8297   003E42  5016               	movf	turnRight@mR^0,w,c
  8298   003E44  26D9               	addwf	fsr2l,f,c
  8299   003E46  5017               	movf	(turnRight@mR+1)^0,w,c
  8300   003E48  22DA               	addwfc	fsr2h,f,c
  8301   003E4A  0E00               	movlw	0
  8302   003E4C  6EDF               	movwf	indf2,c
  8303   003E4E                     
  8304                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8305   003E4E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8306   003E52  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8307   003E56  EC7B  F018         	call	_setMotorPWM	;wreg free
  8308   003E5A                     
  8309                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8310   003E5A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8311   003E5E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8312   003E62  EC7B  F018         	call	_setMotorPWM	;wreg free
  8313   003E66                     
  8314                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8315   003E66  0E00               	movlw	0
  8316   003E68  6E19               	movwf	(turnRight@i+1)^0,c
  8317   003E6A  0E00               	movlw	0
  8318   003E6C  6E18               	movwf	turnRight@i^0,c
  8319   003E6E                     l3130:
  8320                           
  8321                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8322   003E6E  C014  FFD9         	movff	turnRight@mL,fsr2l
  8323   003E72  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8324   003E76  2ADF               	incf	indf2,f,c
  8325                           
  8326                           ;dc_motor.c: 141:         mR->power++;
  8327   003E78  C016  FFD9         	movff	turnRight@mR,fsr2l
  8328   003E7C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8329   003E80  2ADF               	incf	indf2,f,c
  8330   003E82                     
  8331                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8332   003E82  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8333   003E86  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8334   003E8A  EC7B  F018         	call	_setMotorPWM	;wreg free
  8335   003E8E                     
  8336                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8337   003E8E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8338   003E92  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8339   003E96  EC7B  F018         	call	_setMotorPWM	;wreg free
  8340   003E9A                     
  8341                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8342   003E9A  0EE4               	movlw	228
  8343   003E9C                     u4387:
  8344   003E9C  D000               	nop2	
  8345   003E9E  D000               	nop2	
  8346   003EA0  2EE8               	decfsz	wreg,f,c
  8347   003EA2  D7FC               	bra	u4387
  8348   003EA4  D000               	nop2	
  8349   003EA6  D000               	nop2	
  8350   003EA8                     
  8351                           ;dc_motor.c: 145:     }
  8352   003EA8  4A18               	infsnz	turnRight@i^0,f,c
  8353   003EAA  2A19               	incf	(turnRight@i+1)^0,f,c
  8354   003EAC  5019               	movf	(turnRight@i+1)^0,w,c
  8355   003EAE  E109               	bnz	u2300
  8356   003EB0  0E32               	movlw	50
  8357   003EB2  5C18               	subwf	turnRight@i^0,w,c
  8358   003EB4  A0D8               	btfss	status,0,c
  8359   003EB6  EF5F  F01F         	goto	u2301
  8360   003EBA  EF61  F01F         	goto	u2300
  8361   003EBE                     u2301:
  8362   003EBE  EF37  F01F         	goto	l3130
  8363   003EC2                     u2300:
  8364   003EC2  0012               	return		;funcret
  8365   003EC4                     __end_of_turnRight:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _Blue_T180 *****************
  8369 ;; Defined at:
  8370 ;;		line 255 in file "dc_motor.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8373 ;;		 -> motorL(9), 
  8374 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8375 ;;		 -> motorR(9), 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;Total ram usage:        4 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 6
  8394 ;; This function calls:
  8395 ;;		_reverseHalfSquare
  8396 ;;		_rotate180left
  8397 ;; This function is called by:
  8398 ;;		_White
  8399 ;;		_Colour2Action
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text43
  8404   0044AA                     __ptext43:
  8405                           	callstack 0
  8406   0044AA                     _Blue_T180:
  8407                           	callstack 22
  8408   0044AA                     
  8409                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8410   0044AA  0100               	movlb	0	; () banked
  8411   0044AC  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8412   0044AE  B4D8               	btfsc	status,2,c
  8413   0044B0  EF5C  F022         	goto	u2841
  8414   0044B4  EF5E  F022         	goto	u2840
  8415   0044B8                     u2841:
  8416   0044B8  EF74  F022         	goto	l3536
  8417   0044BC                     u2840:
  8418   0044BC                     
  8419                           ; BSR set to: 0
  8420                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8421   0044BC  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8422   0044C0  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8423   0044C4  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8424   0044C8  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8425   0044CC  EC7F  F020         	call	_reverseHalfSquare	;wreg free
  8426                           
  8427                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8428   0044D0  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8429   0044D4  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8430   0044D8  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8431   0044DC  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8432   0044E0  EC7F  F022         	call	_rotate180left	;wreg free
  8433                           
  8434                           ;dc_motor.c: 261:     }else{
  8435   0044E4  EF7E  F022         	goto	l300
  8436   0044E8                     l3536:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8440   0044E8  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8441   0044EC  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8442   0044F0  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8443   0044F4  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8444   0044F8  EC7F  F022         	call	_rotate180left	;wreg free
  8445   0044FC                     l300:
  8446   0044FC  0012               	return		;funcret
  8447   0044FE                     __end_of_Blue_T180:
  8448                           	callstack 0
  8449                           
  8450 ;; *************** function _rotate180left *****************
  8451 ;; Defined at:
  8452 ;;		line 207 in file "dc_motor.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8455 ;;		 -> motorL(9), 
  8456 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8457 ;;		 -> motorR(9), 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;Total ram usage:        4 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 5
  8476 ;; This function calls:
  8477 ;;		_Left45
  8478 ;; This function is called by:
  8479 ;;		_Blue_T180
  8480 ;;		_White
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text44
  8485   0044FE                     __ptext44:
  8486                           	callstack 0
  8487   0044FE                     _rotate180left:
  8488                           	callstack 23
  8489   0044FE                     
  8490                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8491   0044FE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8492   004502  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8493   004506  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8494   00450A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8495   00450E  EC3A  F020         	call	_Left45	;wreg free
  8496                           
  8497                           ;dc_motor.c: 211:     Left45(mL,mR);
  8498   004512  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8499   004516  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8500   00451A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8501   00451E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8502   004522  EC3A  F020         	call	_Left45	;wreg free
  8503                           
  8504                           ;dc_motor.c: 212:     Left45(mL,mR);
  8505   004526  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8506   00452A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8507   00452E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8508   004532  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8509   004536  EC3A  F020         	call	_Left45	;wreg free
  8510                           
  8511                           ;dc_motor.c: 213:     Left45(mL,mR);
  8512   00453A  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8513   00453E  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8514   004542  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8515   004546  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8516   00454A  EC3A  F020         	call	_Left45	;wreg free
  8517   00454E  0012               	return		;funcret
  8518   004550                     __end_of_rotate180left:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _Left45 *****************
  8522 ;; Defined at:
  8523 ;;		line 179 in file "dc_motor.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8526 ;;		 -> motorL(9), 
  8527 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8528 ;;		 -> motorR(9), 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8544 ;;Total ram usage:        6 bytes
  8545 ;; Hardware stack levels used: 1
  8546 ;; Hardware stack levels required when called: 4
  8547 ;; This function calls:
  8548 ;;		_stop
  8549 ;;		_turnLeft
  8550 ;; This function is called by:
  8551 ;;		_rotate180left
  8552 ;;		_Red_R90
  8553 ;;		_Green_L90
  8554 ;;		_Yellow_rev1_R90
  8555 ;;		_Pink_rev1_L90
  8556 ;;		_Orange_R135
  8557 ;;		_LightBlue_L135
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text45
  8562   004074                     __ptext45:
  8563                           	callstack 0
  8564   004074                     _Left45:
  8565                           	callstack 24
  8566   004074                     
  8567                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8568   004074  807E               	bsf	126,0,c	;volatile
  8569   004076                     
  8570                           ;dc_motor.c: 183:     stop(mL,mR);
  8571   004076  C01A  F014         	movff	Left45@mL,stop@mL
  8572   00407A  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8573   00407E  C01C  F016         	movff	Left45@mR,stop@mR
  8574   004082  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8575   004086  ECD5  F01D         	call	_stop	;wreg free
  8576   00408A                     
  8577                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8578   00408A  0E05               	movlw	5
  8579   00408C  6E1F               	movwf	(??_Left45+1)^0,c
  8580   00408E  0E0F               	movlw	15
  8581   004090  6E1E               	movwf	??_Left45^0,c
  8582   004092  0EF1               	movlw	241
  8583   004094                     u4397:
  8584   004094  2EE8               	decfsz	wreg,f,c
  8585   004096  D7FE               	bra	u4397
  8586   004098  2E1E               	decfsz	??_Left45^0,f,c
  8587   00409A  D7FC               	bra	u4397
  8588   00409C  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8589   00409E  D7FA               	bra	u4397
  8590   0040A0  F000               	nop	
  8591   0040A2                     
  8592                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8593   0040A2  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8594   0040A6  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8595   0040AA  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8596   0040AE  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8597   0040B2  EC62  F01F         	call	_turnLeft	;wreg free
  8598                           
  8599                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8600   0040B6  0E0C               	movlw	12
  8601   0040B8  6E1F               	movwf	(??_Left45+1)^0,c
  8602   0040BA  0EDA               	movlw	218
  8603   0040BC  6E1E               	movwf	??_Left45^0,c
  8604   0040BE  0EBA               	movlw	186
  8605   0040C0                     u4407:
  8606   0040C0  2EE8               	decfsz	wreg,f,c
  8607   0040C2  D7FE               	bra	u4407
  8608   0040C4  2E1E               	decfsz	??_Left45^0,f,c
  8609   0040C6  D7FC               	bra	u4407
  8610   0040C8  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8611   0040CA  D7FA               	bra	u4407
  8612   0040CC  D000               	nop2	
  8613   0040CE                     
  8614                           ;dc_motor.c: 187:     stop(mL,mR);
  8615   0040CE  C01A  F014         	movff	Left45@mL,stop@mL
  8616   0040D2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8617   0040D6  C01C  F016         	movff	Left45@mR,stop@mR
  8618   0040DA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8619   0040DE  ECD5  F01D         	call	_stop	;wreg free
  8620   0040E2                     
  8621                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8622   0040E2  0E05               	movlw	5
  8623   0040E4  6E1F               	movwf	(??_Left45+1)^0,c
  8624   0040E6  0E0F               	movlw	15
  8625   0040E8  6E1E               	movwf	??_Left45^0,c
  8626   0040EA  0EF1               	movlw	241
  8627   0040EC                     u4417:
  8628   0040EC  2EE8               	decfsz	wreg,f,c
  8629   0040EE  D7FE               	bra	u4417
  8630   0040F0  2E1E               	decfsz	??_Left45^0,f,c
  8631   0040F2  D7FC               	bra	u4417
  8632   0040F4  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8633   0040F6  D7FA               	bra	u4417
  8634   0040F8  F000               	nop	
  8635   0040FA                     
  8636                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8637   0040FA  907E               	bcf	126,0,c	;volatile
  8638   0040FC  0012               	return		;funcret
  8639   0040FE                     __end_of_Left45:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _turnLeft *****************
  8643 ;; Defined at:
  8644 ;;		line 113 in file "dc_motor.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8647 ;;		 -> motorL(9), 
  8648 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8649 ;;		 -> motorR(9), 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  i               2   23[COMRAM] unsigned int 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;Total ram usage:        6 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 3
  8668 ;; This function calls:
  8669 ;;		_setMotorPWM
  8670 ;; This function is called by:
  8671 ;;		_Left45
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text46
  8676   003EC4                     __ptext46:
  8677                           	callstack 0
  8678   003EC4                     _turnLeft:
  8679                           	callstack 24
  8680   003EC4                     
  8681                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8682   003EC4  EE20 F001          	lfsr	2,1
  8683   003EC8  5014               	movf	turnLeft@mL^0,w,c
  8684   003ECA  26D9               	addwf	fsr2l,f,c
  8685   003ECC  5015               	movf	(turnLeft@mL+1)^0,w,c
  8686   003ECE  22DA               	addwfc	fsr2h,f,c
  8687   003ED0  0E00               	movlw	0
  8688   003ED2  6EDF               	movwf	indf2,c
  8689                           
  8690                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8691   003ED4  EE20 F001          	lfsr	2,1
  8692   003ED8  5016               	movf	turnLeft@mR^0,w,c
  8693   003EDA  26D9               	addwf	fsr2l,f,c
  8694   003EDC  5017               	movf	(turnLeft@mR+1)^0,w,c
  8695   003EDE  22DA               	addwfc	fsr2h,f,c
  8696   003EE0  0E01               	movlw	1
  8697   003EE2  6EDF               	movwf	indf2,c
  8698   003EE4                     
  8699                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8700   003EE4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8701   003EE8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8702   003EEC  EC7B  F018         	call	_setMotorPWM	;wreg free
  8703   003EF0                     
  8704                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8705   003EF0  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8706   003EF4  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8707   003EF8  EC7B  F018         	call	_setMotorPWM	;wreg free
  8708   003EFC                     
  8709                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8710   003EFC  0E00               	movlw	0
  8711   003EFE  6E19               	movwf	(turnLeft@i+1)^0,c
  8712   003F00  0E00               	movlw	0
  8713   003F02  6E18               	movwf	turnLeft@i^0,c
  8714   003F04                     l3082:
  8715                           
  8716                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8717   003F04  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8718   003F08  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8719   003F0C  2ADF               	incf	indf2,f,c
  8720                           
  8721                           ;dc_motor.c: 123:         mR->power++;
  8722   003F0E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8723   003F12  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8724   003F16  2ADF               	incf	indf2,f,c
  8725   003F18                     
  8726                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8727   003F18  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8728   003F1C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8729   003F20  EC7B  F018         	call	_setMotorPWM	;wreg free
  8730   003F24                     
  8731                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8732   003F24  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8733   003F28  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8734   003F2C  EC7B  F018         	call	_setMotorPWM	;wreg free
  8735   003F30                     
  8736                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8737   003F30  0EE4               	movlw	228
  8738   003F32                     u4427:
  8739   003F32  D000               	nop2	
  8740   003F34  D000               	nop2	
  8741   003F36  2EE8               	decfsz	wreg,f,c
  8742   003F38  D7FC               	bra	u4427
  8743   003F3A  D000               	nop2	
  8744   003F3C  D000               	nop2	
  8745   003F3E                     
  8746                           ;dc_motor.c: 127:     }
  8747   003F3E  4A18               	infsnz	turnLeft@i^0,f,c
  8748   003F40  2A19               	incf	(turnLeft@i+1)^0,f,c
  8749   003F42  5019               	movf	(turnLeft@i+1)^0,w,c
  8750   003F44  E109               	bnz	u2230
  8751   003F46  0E32               	movlw	50
  8752   003F48  5C18               	subwf	turnLeft@i^0,w,c
  8753   003F4A  A0D8               	btfss	status,0,c
  8754   003F4C  EFAA  F01F         	goto	u2231
  8755   003F50  EFAC  F01F         	goto	u2230
  8756   003F54                     u2231:
  8757   003F54  EF82  F01F         	goto	l3082
  8758   003F58                     u2230:
  8759   003F58  0012               	return		;funcret
  8760   003F5A                     __end_of_turnLeft:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _reverseHalfSquare *****************
  8764 ;; Defined at:
  8765 ;;		line 216 in file "dc_motor.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8768 ;;		 -> motorL(9), 
  8769 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8770 ;;		 -> motorR(9), 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8786 ;;Total ram usage:        6 bytes
  8787 ;; Hardware stack levels used: 1
  8788 ;; Hardware stack levels required when called: 4
  8789 ;; This function calls:
  8790 ;;		_fullSpeedReverse
  8791 ;;		_stop
  8792 ;; This function is called by:
  8793 ;;		_Red_R90
  8794 ;;		_Green_L90
  8795 ;;		_Blue_T180
  8796 ;;		_Yellow_rev1_R90
  8797 ;;		_Pink_rev1_L90
  8798 ;;		_Orange_R135
  8799 ;;		_LightBlue_L135
  8800 ;;		_White
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text47
  8805   0040FE                     __ptext47:
  8806                           	callstack 0
  8807   0040FE                     _reverseHalfSquare:
  8808                           	callstack 24
  8809   0040FE                     
  8810                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8811   0040FE  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8812   004102  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8813   004106  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8814   00410A  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8815   00410E  ECD5  F01D         	call	_stop	;wreg free
  8816   004112                     
  8817                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8818   004112  0E09               	movlw	9
  8819   004114  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8820   004116  0E1E               	movlw	30
  8821   004118  6E1F               	movwf	??_reverseHalfSquare^0,c
  8822   00411A  0EE4               	movlw	228
  8823   00411C                     u4437:
  8824   00411C  2EE8               	decfsz	wreg,f,c
  8825   00411E  D7FE               	bra	u4437
  8826   004120  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8827   004122  D7FC               	bra	u4437
  8828   004124  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8829   004126  D7FA               	bra	u4437
  8830   004128  D000               	nop2	
  8831   00412A                     
  8832                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8833   00412A  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8834   00412E  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8835   004132  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8836   004136  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8837   00413A  EC02  F021         	call	_fullSpeedReverse	;wreg free
  8838                           
  8839                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8840   00413E  0E1D               	movlw	29
  8841   004140  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8842   004142  0E69               	movlw	105
  8843   004144  6E1F               	movwf	??_reverseHalfSquare^0,c
  8844   004146  0EA5               	movlw	165
  8845   004148                     u4447:
  8846   004148  2EE8               	decfsz	wreg,f,c
  8847   00414A  D7FE               	bra	u4447
  8848   00414C  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8849   00414E  D7FC               	bra	u4447
  8850   004150  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8851   004152  D7FA               	bra	u4447
  8852   004154  F000               	nop	
  8853   004156                     
  8854                           ;dc_motor.c: 222:     stop(mL,mR);
  8855   004156  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8856   00415A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8857   00415E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8858   004162  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8859   004166  ECD5  F01D         	call	_stop	;wreg free
  8860   00416A                     
  8861                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8862   00416A  0E09               	movlw	9
  8863   00416C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8864   00416E  0E1E               	movlw	30
  8865   004170  6E1F               	movwf	??_reverseHalfSquare^0,c
  8866   004172  0EE4               	movlw	228
  8867   004174                     u4457:
  8868   004174  2EE8               	decfsz	wreg,f,c
  8869   004176  D7FE               	bra	u4457
  8870   004178  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8871   00417A  D7FC               	bra	u4457
  8872   00417C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8873   00417E  D7FA               	bra	u4457
  8874   004180  D000               	nop2	
  8875   004182  0012               	return		;funcret
  8876   004184                     __end_of_reverseHalfSquare:
  8877                           	callstack 0
  8878                           
  8879 ;; *************** function _stop *****************
  8880 ;; Defined at:
  8881 ;;		line 93 in file "dc_motor.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8884 ;;		 -> motorL(9), 
  8885 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8886 ;;		 -> motorR(9), 
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;		None
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;Total ram usage:        5 bytes
  8903 ;; Hardware stack levels used: 1
  8904 ;; Hardware stack levels required when called: 3
  8905 ;; This function calls:
  8906 ;;		_setMotorPWM
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;;		_Left45
  8910 ;;		_Right45
  8911 ;;		_reverseHalfSquare
  8912 ;;		_White
  8913 ;;		_maxTimeReturn
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text48
  8918   003BAA                     __ptext48:
  8919                           	callstack 0
  8920   003BAA                     _stop:
  8921                           	callstack 27
  8922   003BAA                     
  8923                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8924   003BAA  887C               	bsf	124,4,c	;volatile
  8925                           
  8926                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8927   003BAC  EF0E  F01E         	goto	l3066
  8928   003BB0                     l3052:
  8929                           
  8930                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8931   003BB0  C014  FFD9         	movff	stop@mL,fsr2l
  8932   003BB4  C015  FFDA         	movff	stop@mL+1,fsr2h
  8933   003BB8  50DF               	movf	indf2,w,c
  8934   003BBA  B4D8               	btfsc	status,2,c
  8935   003BBC  EFE2  F01D         	goto	u2191
  8936   003BC0  EFE4  F01D         	goto	u2190
  8937   003BC4                     u2191:
  8938   003BC4  EFE9  F01D         	goto	l3056
  8939   003BC8                     u2190:
  8940   003BC8                     
  8941                           ;dc_motor.c: 100:             mL->power--;
  8942   003BC8  C014  FFD9         	movff	stop@mL,fsr2l
  8943   003BCC  C015  FFDA         	movff	stop@mL+1,fsr2h
  8944   003BD0  06DF               	decf	indf2,f,c
  8945   003BD2                     l3056:
  8946                           
  8947                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8948   003BD2  C016  FFD9         	movff	stop@mR,fsr2l
  8949   003BD6  C017  FFDA         	movff	stop@mR+1,fsr2h
  8950   003BDA  50DF               	movf	indf2,w,c
  8951   003BDC  B4D8               	btfsc	status,2,c
  8952   003BDE  EFF3  F01D         	goto	u2201
  8953   003BE2  EFF5  F01D         	goto	u2200
  8954   003BE6                     u2201:
  8955   003BE6  EFFA  F01D         	goto	l3060
  8956   003BEA                     u2200:
  8957   003BEA                     
  8958                           ;dc_motor.c: 103:             mR->power--;
  8959   003BEA  C016  FFD9         	movff	stop@mR,fsr2l
  8960   003BEE  C017  FFDA         	movff	stop@mR+1,fsr2h
  8961   003BF2  06DF               	decf	indf2,f,c
  8962   003BF4                     l3060:
  8963                           
  8964                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8965   003BF4  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8966   003BF8  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8967   003BFC  EC7B  F018         	call	_setMotorPWM	;wreg free
  8968   003C00                     
  8969                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8970   003C00  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8971   003C04  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8972   003C08  EC7B  F018         	call	_setMotorPWM	;wreg free
  8973   003C0C                     
  8974                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8975   003C0C  0E09               	movlw	9
  8976   003C0E  6E18               	movwf	??_stop^0,c
  8977   003C10  0E4E               	movlw	78
  8978   003C12                     u4467:
  8979   003C12  2EE8               	decfsz	wreg,f,c
  8980   003C14  D7FE               	bra	u4467
  8981   003C16  2E18               	decfsz	??_stop^0,f,c
  8982   003C18  D7FC               	bra	u4467
  8983   003C1A  D000               	nop2	
  8984   003C1C                     l3066:
  8985                           
  8986                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8987   003C1C  C014  FFD9         	movff	stop@mL,fsr2l
  8988   003C20  C015  FFDA         	movff	stop@mL+1,fsr2h
  8989   003C24  50DF               	movf	indf2,w,c
  8990   003C26  B4D8               	btfsc	status,2,c
  8991   003C28  EF18  F01E         	goto	u2211
  8992   003C2C  EF1A  F01E         	goto	u2210
  8993   003C30                     u2211:
  8994   003C30  EF26  F01E         	goto	l252
  8995   003C34                     u2210:
  8996   003C34  C016  FFD9         	movff	stop@mR,fsr2l
  8997   003C38  C017  FFDA         	movff	stop@mR+1,fsr2h
  8998   003C3C  50DF               	movf	indf2,w,c
  8999   003C3E  A4D8               	btfss	status,2,c
  9000   003C40  EF24  F01E         	goto	u2221
  9001   003C44  EF26  F01E         	goto	u2220
  9002   003C48                     u2221:
  9003   003C48  EFD8  F01D         	goto	l3052
  9004   003C4C                     u2220:
  9005   003C4C                     l252:
  9006                           
  9007                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  9008   003C4C  987C               	bcf	124,4,c	;volatile
  9009   003C4E  0012               	return		;funcret
  9010   003C50                     __end_of_stop:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _fullSpeedReverse *****************
  9014 ;; Defined at:
  9015 ;;		line 163 in file "dc_motor.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9018 ;;		 -> motorL(9), 
  9019 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9020 ;;		 -> motorR(9), 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  i               2   24[COMRAM] unsigned int 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9036 ;;Total ram usage:        7 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 3
  9039 ;; This function calls:
  9040 ;;		_setMotorPWM
  9041 ;; This function is called by:
  9042 ;;		_reverseHalfSquare
  9043 ;;		_Yellow_rev1_R90
  9044 ;;		_Pink_rev1_L90
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text49
  9049   004204                     __ptext49:
  9050                           	callstack 0
  9051   004204                     _fullSpeedReverse:
  9052                           	callstack 24
  9053   004204                     
  9054                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  9055   004204  EE20 F001          	lfsr	2,1
  9056   004208  5014               	movf	fullSpeedReverse@mL^0,w,c
  9057   00420A  26D9               	addwf	fsr2l,f,c
  9058   00420C  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9059   00420E  22DA               	addwfc	fsr2h,f,c
  9060   004210  0E00               	movlw	0
  9061   004212  6EDF               	movwf	indf2,c
  9062                           
  9063                           ;dc_motor.c: 166:  (mR->direction) = 0;
  9064   004214  EE20 F001          	lfsr	2,1
  9065   004218  5016               	movf	fullSpeedReverse@mR^0,w,c
  9066   00421A  26D9               	addwf	fsr2l,f,c
  9067   00421C  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9068   00421E  22DA               	addwfc	fsr2h,f,c
  9069   004220  0E00               	movlw	0
  9070   004222  6EDF               	movwf	indf2,c
  9071   004224                     
  9072                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  9073   004224  0E00               	movlw	0
  9074   004226  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9075   004228  0E00               	movlw	0
  9076   00422A  6E19               	movwf	fullSpeedReverse@i^0,c
  9077   00422C                     l3150:
  9078                           
  9079                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  9080   00422C  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  9081   004230  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  9082   004234  2ADF               	incf	indf2,f,c
  9083                           
  9084                           ;dc_motor.c: 171:         (mR->power)++;
  9085   004236  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  9086   00423A  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  9087   00423E  2ADF               	incf	indf2,f,c
  9088   004240                     
  9089                           ;dc_motor.c: 172:         setMotorPWM(mL);
  9090   004240  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  9091   004244  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  9092   004248  EC7B  F018         	call	_setMotorPWM	;wreg free
  9093   00424C                     
  9094                           ;dc_motor.c: 173:         setMotorPWM(mR);
  9095   00424C  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  9096   004250  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  9097   004254  EC7B  F018         	call	_setMotorPWM	;wreg free
  9098   004258                     
  9099                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9100   004258  0E09               	movlw	9
  9101   00425A  6E18               	movwf	??_fullSpeedReverse^0,c
  9102   00425C  0E4E               	movlw	78
  9103   00425E                     u4477:
  9104   00425E  2EE8               	decfsz	wreg,f,c
  9105   004260  D7FE               	bra	u4477
  9106   004262  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  9107   004264  D7FC               	bra	u4477
  9108   004266  D000               	nop2	
  9109   004268                     
  9110                           ;dc_motor.c: 175:     }
  9111   004268  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  9112   00426A  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  9113   00426C  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  9114   00426E  E109               	bnz	u2310
  9115   004270  0E32               	movlw	50
  9116   004272  5C19               	subwf	fullSpeedReverse@i^0,w,c
  9117   004274  A0D8               	btfss	status,0,c
  9118   004276  EF3F  F021         	goto	u2311
  9119   00427A  EF41  F021         	goto	u2310
  9120   00427E                     u2311:
  9121   00427E  EF16  F021         	goto	l3150
  9122   004282                     u2310:
  9123   004282  0012               	return		;funcret
  9124   004284                     __end_of_fullSpeedReverse:
  9125                           	callstack 0
  9126                           
  9127 ;; *************** function _setMotorPWM *****************
  9128 ;; Defined at:
  9129 ;;		line 70 in file "dc_motor.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9132 ;;		 -> motorR(9), motorL(9), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  negDuty         1   18[COMRAM] unsigned char 
  9135 ;;  posDuty         1   17[COMRAM] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;Total ram usage:        6 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 2
  9152 ;; This function calls:
  9153 ;;		___lwdiv
  9154 ;;		___wmul
  9155 ;; This function is called by:
  9156 ;;		_stop
  9157 ;;		_turnLeft
  9158 ;;		_turnRight
  9159 ;;		_fullSpeedAhead
  9160 ;;		_fullSpeedReverse
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text50
  9165   0030F6                     __ptext50:
  9166                           	callstack 0
  9167   0030F6                     _setMotorPWM:
  9168                           	callstack 27
  9169   0030F6                     
  9170                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  9171   0030F6  EE20 F002          	lfsr	2,2
  9172   0030FA  500E               	movf	setMotorPWM@m^0,w,c
  9173   0030FC  26D9               	addwf	fsr2l,f,c
  9174   0030FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9175   003100  22DA               	addwfc	fsr2h,f,c
  9176   003102  50DF               	movf	indf2,w,c
  9177   003104  B4D8               	btfsc	status,2,c
  9178   003106  EF87  F018         	goto	u2171
  9179   00310A  EF89  F018         	goto	u2170
  9180   00310E                     u2171:
  9181   00310E  EFBD  F018         	goto	l3040
  9182   003112                     u2170:
  9183   003112                     
  9184                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9185   003112  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9186   003116  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9187   00311A  50DF               	movf	indf2,w,c
  9188   00311C  6E10               	movwf	??_setMotorPWM^0,c
  9189   00311E  5010               	movf	??_setMotorPWM^0,w,c
  9190   003120  6E01               	movwf	___wmul@multiplier^0,c
  9191   003122  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9192   003124  EE20 F003          	lfsr	2,3
  9193   003128  500E               	movf	setMotorPWM@m^0,w,c
  9194   00312A  26D9               	addwf	fsr2l,f,c
  9195   00312C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9196   00312E  22DA               	addwfc	fsr2h,f,c
  9197   003130  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9198   003134  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9199   003138  ECB8  F024         	call	___wmul	;wreg free
  9200   00313C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9201   003140  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9202   003144  0E00               	movlw	0
  9203   003146  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9204   003148  0E64               	movlw	100
  9205   00314A  6E09               	movwf	___lwdiv@divisor^0,c
  9206   00314C  ECBE  F021         	call	___lwdiv	;wreg free
  9207   003150  EE20 F003          	lfsr	2,3
  9208   003154  500E               	movf	setMotorPWM@m^0,w,c
  9209   003156  26D9               	addwf	fsr2l,f,c
  9210   003158  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9211   00315A  22DA               	addwfc	fsr2h,f,c
  9212   00315C  50DF               	movf	indf2,w,c
  9213   00315E  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9214   003160  5007               	movf	?___lwdiv^0,w,c
  9215   003162  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9216   003164  6E12               	movwf	setMotorPWM@posDuty^0,c
  9217   003166                     
  9218                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9219   003166  EE20 F003          	lfsr	2,3
  9220   00316A  500E               	movf	setMotorPWM@m^0,w,c
  9221   00316C  26D9               	addwf	fsr2l,f,c
  9222   00316E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9223   003170  22DA               	addwfc	fsr2h,f,c
  9224   003172  50DF               	movf	indf2,w,c
  9225   003174  6E13               	movwf	setMotorPWM@negDuty^0,c
  9226                           
  9227                           ;dc_motor.c: 77:     }
  9228   003176  EFE0  F018         	goto	l3044
  9229   00317A                     l3040:
  9230                           
  9231                           ;dc_motor.c: 79:         posDuty=0;
  9232   00317A  0E00               	movlw	0
  9233   00317C  6E12               	movwf	setMotorPWM@posDuty^0,c
  9234   00317E                     
  9235                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9236   00317E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9237   003182  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9238   003186  50DF               	movf	indf2,w,c
  9239   003188  6E10               	movwf	??_setMotorPWM^0,c
  9240   00318A  5010               	movf	??_setMotorPWM^0,w,c
  9241   00318C  6E01               	movwf	___wmul@multiplier^0,c
  9242   00318E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9243   003190  EE20 F003          	lfsr	2,3
  9244   003194  500E               	movf	setMotorPWM@m^0,w,c
  9245   003196  26D9               	addwf	fsr2l,f,c
  9246   003198  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9247   00319A  22DA               	addwfc	fsr2h,f,c
  9248   00319C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9249   0031A0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9250   0031A4  ECB8  F024         	call	___wmul	;wreg free
  9251   0031A8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9252   0031AC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9253   0031B0  0E00               	movlw	0
  9254   0031B2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9255   0031B4  0E64               	movlw	100
  9256   0031B6  6E09               	movwf	___lwdiv@divisor^0,c
  9257   0031B8  ECBE  F021         	call	___lwdiv	;wreg free
  9258   0031BC  5007               	movf	?___lwdiv^0,w,c
  9259   0031BE  6E13               	movwf	setMotorPWM@negDuty^0,c
  9260   0031C0                     l3044:
  9261                           
  9262                           ;dc_motor.c: 83:     if (m->direction) {
  9263   0031C0  EE20 F001          	lfsr	2,1
  9264   0031C4  500E               	movf	setMotorPWM@m^0,w,c
  9265   0031C6  26D9               	addwf	fsr2l,f,c
  9266   0031C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9267   0031CA  22DA               	addwfc	fsr2h,f,c
  9268   0031CC  50DF               	movf	indf2,w,c
  9269   0031CE  B4D8               	btfsc	status,2,c
  9270   0031D0  EFEC  F018         	goto	u2181
  9271   0031D4  EFEE  F018         	goto	u2180
  9272   0031D8                     u2181:
  9273   0031D8  EF10  F019         	goto	l3048
  9274   0031DC                     u2180:
  9275   0031DC                     
  9276                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9277   0031DC  EE20 F005          	lfsr	2,5
  9278   0031E0  500E               	movf	setMotorPWM@m^0,w,c
  9279   0031E2  26D9               	addwf	fsr2l,f,c
  9280   0031E4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9281   0031E6  22DA               	addwfc	fsr2h,f,c
  9282   0031E8  CFDE F010          	movff	postinc2,??_setMotorPWM
  9283   0031EC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9284   0031F0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9285   0031F4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9286   0031F8  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9287                           
  9288                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9289   0031FC  EE20 F007          	lfsr	2,7
  9290   003200  500E               	movf	setMotorPWM@m^0,w,c
  9291   003202  26D9               	addwf	fsr2l,f,c
  9292   003204  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9293   003206  22DA               	addwfc	fsr2h,f,c
  9294   003208  CFDE F010          	movff	postinc2,??_setMotorPWM
  9295   00320C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9296   003210  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9297   003214  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9298   003218  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9299                           
  9300                           ;dc_motor.c: 86:     } else {
  9301   00321C  EF30  F019         	goto	l243
  9302   003220                     l3048:
  9303                           
  9304                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9305   003220  EE20 F005          	lfsr	2,5
  9306   003224  500E               	movf	setMotorPWM@m^0,w,c
  9307   003226  26D9               	addwf	fsr2l,f,c
  9308   003228  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9309   00322A  22DA               	addwfc	fsr2h,f,c
  9310   00322C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9311   003230  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9312   003234  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9313   003238  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9314   00323C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9315                           
  9316                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9317   003240  EE20 F007          	lfsr	2,7
  9318   003244  500E               	movf	setMotorPWM@m^0,w,c
  9319   003246  26D9               	addwf	fsr2l,f,c
  9320   003248  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9321   00324A  22DA               	addwfc	fsr2h,f,c
  9322   00324C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9323   003250  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9324   003254  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9325   003258  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9326   00325C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9327   003260                     l243:
  9328   003260  0012               	return		;funcret
  9329   003262                     __end_of_setMotorPWM:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function ___wmul *****************
  9333 ;; Defined at:
  9334 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  multiplier      2    0[COMRAM] unsigned int 
  9337 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;  product         2    4[COMRAM] unsigned int 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  2    0[COMRAM] unsigned int 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2, status,0, prodl, prodh
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9353 ;;Total ram usage:        6 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 1
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_setMotorPWM
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text51
  9364   004970                     __ptext51:
  9365                           	callstack 0
  9366   004970                     ___wmul:
  9367                           	callstack 27
  9368   004970  5001               	movf	___wmul@multiplier^0,w,c
  9369   004972  0203               	mulwf	___wmul@multiplicand^0,c
  9370   004974  CFF3 F005          	movff	prodl,___wmul@product
  9371   004978  CFF4 F006          	movff	prodh,___wmul@product+1
  9372   00497C  5001               	movf	___wmul@multiplier^0,w,c
  9373   00497E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9374   004980  50F3               	movf	243,w,c
  9375   004982  2606               	addwf	(___wmul@product+1)^0,f,c
  9376   004984  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9377   004986  0203               	mulwf	___wmul@multiplicand^0,c
  9378   004988  50F3               	movf	243,w,c
  9379   00498A  2606               	addwf	(___wmul@product+1)^0,f,c
  9380   00498C  C005  F001         	movff	___wmul@product,?___wmul
  9381   004990  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9382   004994  0012               	return		;funcret
  9383   004996                     __end_of___wmul:
  9384                           	callstack 0
  9385                           
  9386 ;; *************** function ___lwdiv *****************
  9387 ;; Defined at:
  9388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  dividend        2    6[COMRAM] unsigned int 
  9391 ;;  divisor         2    8[COMRAM] unsigned int 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  quotient        2   10[COMRAM] unsigned int 
  9394 ;;  counter         1   12[COMRAM] unsigned char 
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  2    6[COMRAM] unsigned int 
  9397 ;; Registers used:
  9398 ;;		wreg, status,2, status,0
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9408 ;;Total ram usage:        7 bytes
  9409 ;; Hardware stack levels used: 1
  9410 ;; Hardware stack levels required when called: 1
  9411 ;; This function calls:
  9412 ;;		Nothing
  9413 ;; This function is called by:
  9414 ;;		_setMotorPWM
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           	psect	text52
  9419   00437C                     __ptext52:
  9420                           	callstack 0
  9421   00437C                     ___lwdiv:
  9422                           	callstack 27
  9423   00437C  0E00               	movlw	0
  9424   00437E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9425   004380  0E00               	movlw	0
  9426   004382  6E0B               	movwf	___lwdiv@quotient^0,c
  9427   004384  5009               	movf	___lwdiv@divisor^0,w,c
  9428   004386  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9429   004388  B4D8               	btfsc	status,2,c
  9430   00438A  EFC9  F021         	goto	u2141
  9431   00438E  EFCB  F021         	goto	u2140
  9432   004392                     u2141:
  9433   004392  EFF3  F021         	goto	l1180
  9434   004396                     u2140:
  9435   004396  0E01               	movlw	1
  9436   004398  6E0D               	movwf	___lwdiv@counter^0,c
  9437   00439A  EFD3  F021         	goto	l3020
  9438   00439E                     l3018:
  9439   00439E  90D8               	bcf	status,0,c
  9440   0043A0  3609               	rlcf	___lwdiv@divisor^0,f,c
  9441   0043A2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9442   0043A4  2A0D               	incf	___lwdiv@counter^0,f,c
  9443   0043A6                     l3020:
  9444   0043A6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9445   0043A8  EFD8  F021         	goto	u2151
  9446   0043AC  EFDA  F021         	goto	u2150
  9447   0043B0                     u2151:
  9448   0043B0  EFCF  F021         	goto	l3018
  9449   0043B4                     u2150:
  9450   0043B4                     l3022:
  9451   0043B4  90D8               	bcf	status,0,c
  9452   0043B6  360B               	rlcf	___lwdiv@quotient^0,f,c
  9453   0043B8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9454   0043BA  5009               	movf	___lwdiv@divisor^0,w,c
  9455   0043BC  5C07               	subwf	___lwdiv@dividend^0,w,c
  9456   0043BE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9457   0043C0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9458   0043C2  A0D8               	btfss	status,0,c
  9459   0043C4  EFE6  F021         	goto	u2161
  9460   0043C8  EFE8  F021         	goto	u2160
  9461   0043CC                     u2161:
  9462   0043CC  EFED  F021         	goto	l3030
  9463   0043D0                     u2160:
  9464   0043D0  5009               	movf	___lwdiv@divisor^0,w,c
  9465   0043D2  5E07               	subwf	___lwdiv@dividend^0,f,c
  9466   0043D4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9467   0043D6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9468   0043D8  800B               	bsf	___lwdiv@quotient^0,0,c
  9469   0043DA                     l3030:
  9470   0043DA  90D8               	bcf	status,0,c
  9471   0043DC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9472   0043DE  3209               	rrcf	___lwdiv@divisor^0,f,c
  9473   0043E0  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9474   0043E2  EFDA  F021         	goto	l3022
  9475   0043E6                     l1180:
  9476   0043E6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9477   0043EA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9478   0043EE  0012               	return		;funcret
  9479   0043F0                     __end_of___lwdiv:
  9480                           	callstack 0
  9481                           
  9482 ;; *************** function _Color2String *****************
  9483 ;; Defined at:
  9484 ;;		line 39 in file "serial.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  buf             2   90[COMRAM] PTR unsigned char 
  9487 ;;		 -> main@data(100), 
  9488 ;;  cf              2   92[COMRAM] PTR struct RGBC_rel
  9489 ;;		 -> colorf(22), 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  colourname      2    0[BANK0 ] PTR unsigned char 
  9492 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9493 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9494 ;;		 -> STR_2(1), 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;Total ram usage:        6 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 7
  9511 ;; This function calls:
  9512 ;;		_Hue2Colour
  9513 ;;		_sendStringSerial4
  9514 ;;		_sprintf
  9515 ;; This function is called by:
  9516 ;;		_main
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text53
  9521   004844                     __ptext53:
  9522                           	callstack 0
  9523   004844                     _Color2String:
  9524                           	callstack 23
  9525   004844                     
  9526                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9527   004844  C05D  F057         	movff	Color2String@cf,Hue2Colour@cf
  9528   004848  C05E  F058         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9529   00484C  ECBF  F00A         	call	_Hue2Colour	;wreg free
  9530   004850  C057  F060         	movff	?_Hue2Colour,Color2String@colourname
  9531   004854  C058  F061         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9532   004858                     
  9533                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9534   004858  C05B  F032         	movff	Color2String@buf,sprintf@s
  9535   00485C  C05C  F033         	movff	Color2String@buf+1,sprintf@s+1
  9536   004860  0E01               	movlw	low STR_1
  9537   004862  6E34               	movwf	sprintf@fmt^0,c
  9538   004864  0E0E               	movlw	high STR_1
  9539   004866  6E35               	movwf	(sprintf@fmt+1)^0,c
  9540   004868  C060  F036         	movff	Color2String@colourname,?_sprintf+4
  9541   00486C  C061  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9542   004870  EC70  F023         	call	_sprintf	;wreg free
  9543   004874                     
  9544                           ;serial.c: 45:     sendStringSerial4(buf);
  9545   004874  C05B  F002         	movff	Color2String@buf,sendStringSerial4@string
  9546   004878  C05C  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9547   00487C  EC41  F024         	call	_sendStringSerial4	;wreg free
  9548   004880  0012               	return		;funcret
  9549   004882                     __end_of_Color2String:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _sprintf *****************
  9553 ;; Defined at:
  9554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  s               2   49[COMRAM] PTR unsigned char 
  9557 ;;		 -> main@data(100), 
  9558 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9559 ;;		 -> STR_1(16), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  f              11   57[COMRAM] struct _IO_FILE
  9562 ;;  ap              2   55[COMRAM] PTR void [1]
  9563 ;;		 -> ?_sprintf(2), 
  9564 ;;  ret             2    0        int 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  2   49[COMRAM] int 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9574 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9575 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9577 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9578 ;;Total ram usage:       19 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; Hardware stack levels required when called: 6
  9581 ;; This function calls:
  9582 ;;		_vfprintf
  9583 ;; This function is called by:
  9584 ;;		_Color2String
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text54
  9589   0046E0                     __ptext54:
  9590                           	callstack 0
  9591   0046E0                     _sprintf:
  9592                           	callstack 23
  9593   0046E0  0E36               	movlw	low (?_sprintf+4)
  9594   0046E2  6E38               	movwf	sprintf@ap^0,c
  9595   0046E4  0E00               	movlw	high (?_sprintf+4)
  9596   0046E6  6E39               	movwf	(sprintf@ap+1)^0,c
  9597   0046E8  C032  F03A         	movff	sprintf@s,sprintf@f
  9598   0046EC  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9599   0046F0  0E00               	movlw	0
  9600   0046F2  6E3E               	movwf	(sprintf@f+4)^0,c
  9601   0046F4  0E00               	movlw	0
  9602   0046F6  6E3D               	movwf	(sprintf@f+3)^0,c
  9603   0046F8  0E00               	movlw	0
  9604   0046FA  6E44               	movwf	(sprintf@f+10)^0,c
  9605   0046FC  0E00               	movlw	0
  9606   0046FE  6E43               	movwf	(sprintf@f+9)^0,c
  9607   004700  0E3A               	movlw	low sprintf@f
  9608   004702  6E2A               	movwf	vfprintf@fp^0,c
  9609   004704  0E00               	movlw	high sprintf@f
  9610   004706  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9611   004708  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9612   00470C  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9613   004710  0E38               	movlw	low sprintf@ap
  9614   004712  6E2E               	movwf	vfprintf@ap^0,c
  9615   004714  0E00               	movlw	high sprintf@ap
  9616   004716  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9617   004718  EC97  F023         	call	_vfprintf	;wreg free
  9618   00471C  503D               	movf	(sprintf@f+3)^0,w,c
  9619   00471E  2432               	addwf	sprintf@s^0,w,c
  9620   004720  6ED9               	movwf	fsr2l,c
  9621   004722  503E               	movf	(sprintf@f+4)^0,w,c
  9622   004724  2033               	addwfc	(sprintf@s+1)^0,w,c
  9623   004726  6EDA               	movwf	fsr2h,c
  9624   004728  0E00               	movlw	0
  9625   00472A  6EDF               	movwf	indf2,c
  9626   00472C  0012               	return		;funcret
  9627   00472E                     __end_of_sprintf:
  9628                           	callstack 0
  9629                           
  9630 ;; *************** function _vfprintf *****************
  9631 ;; Defined at:
  9632 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9635 ;;		 -> sprintf@f(11), 
  9636 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9637 ;;		 -> STR_1(16), 
  9638 ;;  ap              2   45[COMRAM] PTR PTR void 
  9639 ;;		 -> sprintf@ap(2), 
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9642 ;;		 -> STR_1(16), 
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  2   41[COMRAM] int 
  9645 ;; Registers used:
  9646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9652 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9655 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9656 ;;Total ram usage:        8 bytes
  9657 ;; Hardware stack levels used: 1
  9658 ;; Hardware stack levels required when called: 5
  9659 ;; This function calls:
  9660 ;;		_vfpfcnvrt
  9661 ;; This function is called by:
  9662 ;;		_sprintf
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text55
  9667   00472E                     __ptext55:
  9668                           	callstack 0
  9669   00472E                     _vfprintf:
  9670                           	callstack 23
  9671   00472E                     
  9672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9673   00472E  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9674   004732  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9677   004736  EFAB  F023         	goto	l3814
  9678   00473A                     l3812:
  9679                           
  9680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9681   00473A  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9682   00473E  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9683   004742  0E30               	movlw	low vfprintf@cfmt
  9684   004744  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9685   004746  0E00               	movlw	high vfprintf@cfmt
  9686   004748  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9687   00474A  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9688   00474E  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9689   004752  EC31  F019         	call	_vfpfcnvrt	;wreg free
  9690   004756                     l3814:
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9693   004756  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9694   00475A  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9695   00475E                     	if	0	;tblptru may be non-zero
  9696   00475E                     	endif
  9697   00475E                     	if	0	;tblptru may be non-zero
  9698   00475E                     	endif
  9699   00475E  0008               	tblrd		*
  9700   004760  50F5               	movf	tablat,w,c
  9701   004762  0900               	iorlw	0
  9702   004764  A4D8               	btfss	status,2,c
  9703   004766  EFB7  F023         	goto	u3341
  9704   00476A  EFB9  F023         	goto	u3340
  9705   00476E                     u3341:
  9706   00476E  EF9D  F023         	goto	l3812
  9707   004772                     u3340:
  9708   004772                     
  9709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9710   004772  0E00               	movlw	0
  9711   004774  6E2B               	movwf	(?_vfprintf+1)^0,c
  9712   004776  0E00               	movlw	0
  9713   004778  6E2A               	movwf	?_vfprintf^0,c
  9714   00477A  0012               	return		;funcret
  9715   00477C                     __end_of_vfprintf:
  9716                           	callstack 0
  9717                           
  9718 ;; *************** function _vfpfcnvrt *****************
  9719 ;; Defined at:
  9720 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9723 ;;		 -> sprintf@f(11), 
  9724 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9725 ;;		 -> vfprintf@cfmt(2), 
  9726 ;;  ap              2   35[COMRAM] PTR PTR void 
  9727 ;;		 -> sprintf@ap(2), 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  convarg         8    0        struct .
  9730 ;;  cp              3    0        PTR unsigned char 
  9731 ;;  i               2    0        int 
  9732 ;;  done            2    0        int 
  9733 ;;  c               1    0        unsigned char 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9743 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9746 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9747 ;;Total ram usage:       10 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 4
  9750 ;; This function calls:
  9751 ;;		_fputc
  9752 ;;		_stoa
  9753 ;;		_strncmp
  9754 ;; This function is called by:
  9755 ;;		_vfprintf
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text56
  9760   003262                     __ptext56:
  9761                           	callstack 0
  9762   003262                     _vfpfcnvrt:
  9763                           	callstack 23
  9764   003262                     
  9765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9766   003262  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9767   003266  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9768   00326A  CFDE FFF6          	movff	postinc2,tblptrl
  9769   00326E  CFDD FFF7          	movff	postdec2,tblptrh
  9770   003272                     	if	0	;tblptru may be non-zero
  9771   003272                     	endif
  9772   003272                     	if	0	;tblptru may be non-zero
  9773   003272                     	endif
  9774   003272  0008               	tblrd		*
  9775   003274  50F5               	movf	tablat,w,c
  9776   003276  0A25               	xorlw	37
  9777   003278  A4D8               	btfss	status,2,c
  9778   00327A  EF41  F019         	goto	u2751
  9779   00327E  EF43  F019         	goto	u2750
  9780   003282                     u2751:
  9781   003282  EFC9  F019         	goto	l3462
  9782   003286                     u2750:
  9783   003286                     
  9784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9785   003286  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9786   00328A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9787   00328E  2ADE               	incf	postinc2,f,c
  9788   003290  0E00               	movlw	0
  9789   003292  22DD               	addwfc	postdec2,f,c
  9790   003294                     
  9791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9792   003294  0E00               	movlw	0
  9793   003296  0100               	movlb	0	; () banked
  9794   003298  6FE3               	movwf	(_width+1)& (0+255),b
  9795   00329A  0E00               	movlw	0
  9796   00329C  6FE2               	movwf	_width& (0+255),b
  9797   00329E  C0E2  F0EC         	movff	_width,_flags
  9798   0032A2                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9801   0032A2  69E4               	setf	_prec& (0+255),b
  9802   0032A4  69E5               	setf	(_prec+1)& (0+255),b
  9803   0032A6                     
  9804                           ; BSR set to: 0
  9805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9806   0032A6  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9807   0032AA  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9808   0032AE  CFDE FFF6          	movff	postinc2,tblptrl
  9809   0032B2  CFDD FFF7          	movff	postdec2,tblptrh
  9810   0032B6                     	if	0	;tblptru may be non-zero
  9811   0032B6                     	endif
  9812   0032B6                     	if	0	;tblptru may be non-zero
  9813   0032B6                     	endif
  9814   0032B6  0008               	tblrd		*
  9815   0032B8  50F5               	movf	tablat,w,c
  9816   0032BA  0A73               	xorlw	115
  9817   0032BC  B4D8               	btfsc	status,2,c
  9818   0032BE  EF63  F019         	goto	u2761
  9819   0032C2  EF65  F019         	goto	u2760
  9820   0032C6                     u2761:
  9821   0032C6  EF80  F019         	goto	l3446
  9822   0032CA                     u2760:
  9823   0032CA                     
  9824                           ; BSR set to: 0
  9825   0032CA  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9826   0032CE  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9827   0032D2  CFDE F001          	movff	postinc2,strncmp@_l
  9828   0032D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  9829   0032DA  0E48               	movlw	low STR_11
  9830   0032DC  6E03               	movwf	strncmp@_r^0,c
  9831   0032DE  0E0E               	movlw	high STR_11
  9832   0032E0  6E04               	movwf	(strncmp@_r+1)^0,c
  9833   0032E2  0E00               	movlw	0
  9834   0032E4  6E06               	movwf	(strncmp@n+1)^0,c
  9835   0032E6  0E03               	movlw	3
  9836   0032E8  6E05               	movwf	strncmp@n^0,c
  9837   0032EA  EC04  F01C         	call	_strncmp	;wreg free
  9838   0032EE  5001               	movf	?_strncmp^0,w,c
  9839   0032F0  1002               	iorwf	(?_strncmp+1)^0,w,c
  9840   0032F2  A4D8               	btfss	status,2,c
  9841   0032F4  EF7E  F019         	goto	u2771
  9842   0032F8  EF80  F019         	goto	u2770
  9843   0032FC                     u2771:
  9844   0032FC  EFC0  F019         	goto	l3458
  9845   003300                     u2770:
  9846   003300                     l3446:
  9847                           
  9848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9849   003300  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9850   003304  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9851   003308  CFDE FFF6          	movff	postinc2,tblptrl
  9852   00330C  CFDD FFF7          	movff	postdec2,tblptrh
  9853   003310                     	if	0	;tblptru may be non-zero
  9854   003310                     	endif
  9855   003310                     	if	0	;tblptru may be non-zero
  9856   003310                     	endif
  9857   003310  0008               	tblrd		*
  9858   003312  50F5               	movf	tablat,w,c
  9859   003314  0A73               	xorlw	115
  9860   003316  B4D8               	btfsc	status,2,c
  9861   003318  EF90  F019         	goto	u2781
  9862   00331C  EF92  F019         	goto	u2780
  9863   003320                     u2781:
  9864   003320  EF98  F019         	goto	l3450
  9865   003324                     u2780:
  9866   003324  0E00               	movlw	0
  9867   003326  6E29               	movwf	(_vfpfcnvrt$2859+1)^0,c
  9868   003328  0E03               	movlw	3
  9869   00332A  6E28               	movwf	_vfpfcnvrt$2859^0,c
  9870   00332C  EF9C  F019         	goto	l3452
  9871   003330                     l3450:
  9872   003330  0E00               	movlw	0
  9873   003332  6E29               	movwf	(_vfpfcnvrt$2859+1)^0,c
  9874   003334  0E01               	movlw	1
  9875   003336  6E28               	movwf	_vfpfcnvrt$2859^0,c
  9876   003338                     l3452:
  9877   003338  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9878   00333C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9879   003340  5028               	movf	_vfpfcnvrt$2859^0,w,c
  9880   003342  26DE               	addwf	postinc2,f,c
  9881   003344  5029               	movf	(_vfpfcnvrt$2859+1)^0,w,c
  9882   003346  22DD               	addwfc	postdec2,f,c
  9883   003348                     
  9884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9885   003348  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9886   00334C  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9887   003350  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9888   003354  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9889   003358  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9890   00335C  0E02               	movlw	2
  9891   00335E  26DE               	addwf	postinc2,f,c
  9892   003360  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9893   003364  0E00               	movlw	0
  9894   003366  22DD               	addwfc	postdec2,f,c
  9895   003368  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9896   00336C  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9897   003370  CFDE F00C          	movff	postinc2,stoa@s
  9898   003374  CFDD F00D          	movff	postdec2,stoa@s+1
  9899   003378  ECDE  F019         	call	_stoa	;wreg free
  9900   00337C  EFDD  F019         	goto	l1424
  9901   003380                     l3458:
  9902                           
  9903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9904   003380  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9905   003384  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9906   003388  2ADE               	incf	postinc2,f,c
  9907   00338A  0E00               	movlw	0
  9908   00338C  22DD               	addwfc	postdec2,f,c
  9909   00338E  EFDD  F019         	goto	l1424
  9910   003392                     l3462:
  9911                           
  9912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9913   003392  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9914   003396  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9915   00339A  CFDE FFF6          	movff	postinc2,tblptrl
  9916   00339E  CFDD FFF7          	movff	postdec2,tblptrh
  9917   0033A2                     	if	0	;tblptru may be non-zero
  9918   0033A2                     	endif
  9919   0033A2                     	if	0	;tblptru may be non-zero
  9920   0033A2                     	endif
  9921   0033A2  0008               	tblrd		*
  9922   0033A4  50F5               	movf	tablat,w,c
  9923   0033A6  6E01               	movwf	fputc@c^0,c
  9924   0033A8  6A02               	clrf	(fputc@c+1)^0,c
  9925   0033AA  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9926   0033AE  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9927   0033B2  EC73  F01C         	call	_fputc	;wreg free
  9928   0033B6  EFC0  F019         	goto	l3458
  9929   0033BA                     l1424:
  9930   0033BA  0012               	return		;funcret
  9931   0033BC                     __end_of_vfpfcnvrt:
  9932                           	callstack 0
  9933                           
  9934 ;; *************** function _strncmp *****************
  9935 ;; Defined at:
  9936 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9939 ;;		 -> STR_1(16), 
  9940 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9941 ;;		 -> STR_13(4), 
  9942 ;;  n               2    4[COMRAM] unsigned int 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9945 ;;		 -> STR_13(4), 
  9946 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9947 ;;		 -> STR_1(16), 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  2    0[COMRAM] int 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;Total ram usage:       11 bytes
  9962 ;; Hardware stack levels used: 1
  9963 ;; Hardware stack levels required when called: 1
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_vfpfcnvrt
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text57
  9972   003808                     __ptext57:
  9973                           	callstack 0
  9974   003808                     _strncmp:
  9975                           	callstack 25
  9976   003808  C001  F008         	movff	strncmp@_l,strncmp@l
  9977   00380C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9978   003810  C003  F00A         	movff	strncmp@_r,strncmp@r
  9979   003814  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9980   003818  0605               	decf	strncmp@n^0,f,c
  9981   00381A  A0D8               	btfss	status,0,c
  9982   00381C  0606               	decf	(strncmp@n+1)^0,f,c
  9983   00381E  2805               	incf	strncmp@n^0,w,c
  9984   003820  E106               	bnz	u2391
  9985   003822  2806               	incf	(strncmp@n+1)^0,w,c
  9986   003824  A4D8               	btfss	status,2,c
  9987   003826  EF17  F01C         	goto	u2391
  9988   00382A  EF19  F01C         	goto	u2390
  9989   00382E                     u2391:
  9990   00382E  EF26  F01C         	goto	l3216
  9991   003832                     u2390:
  9992   003832  0E00               	movlw	0
  9993   003834  6E02               	movwf	(?_strncmp+1)^0,c
  9994   003836  0E00               	movlw	0
  9995   003838  6E01               	movwf	?_strncmp^0,c
  9996   00383A  EF72  F01C         	goto	l1463
  9997   00383E                     l3214:
  9998   00383E  4A08               	infsnz	strncmp@l^0,f,c
  9999   003840  2A09               	incf	(strncmp@l+1)^0,f,c
 10000   003842  4A0A               	infsnz	strncmp@r^0,f,c
 10001   003844  2A0B               	incf	(strncmp@r+1)^0,f,c
 10002   003846  0605               	decf	strncmp@n^0,f,c
 10003   003848  A0D8               	btfss	status,0,c
 10004   00384A  0606               	decf	(strncmp@n+1)^0,f,c
 10005   00384C                     l3216:
 10006   00384C  C008  FFF6         	movff	strncmp@l,tblptrl
 10007   003850  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10008   003854                     	if	0	;tblptru may be non-zero
 10009   003854                     	endif
 10010   003854                     	if	0	;tblptru may be non-zero
 10011   003854                     	endif
 10012   003854  0008               	tblrd		*
 10013   003856  50F5               	movf	tablat,w,c
 10014   003858  0900               	iorlw	0
 10015   00385A  B4D8               	btfsc	status,2,c
 10016   00385C  EF32  F01C         	goto	u2401
 10017   003860  EF34  F01C         	goto	u2400
 10018   003864                     u2401:
 10019   003864  EF60  F01C         	goto	l3224
 10020   003868                     u2400:
 10021   003868  C00A  FFF6         	movff	strncmp@r,tblptrl
 10022   00386C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10023   003870                     	if	0	;tblptru may be non-zero
 10024   003870                     	endif
 10025   003870                     	if	0	;tblptru may be non-zero
 10026   003870                     	endif
 10027   003870  0008               	tblrd		*
 10028   003872  50F5               	movf	tablat,w,c
 10029   003874  0900               	iorlw	0
 10030   003876  B4D8               	btfsc	status,2,c
 10031   003878  EF40  F01C         	goto	u2411
 10032   00387C  EF42  F01C         	goto	u2410
 10033   003880                     u2411:
 10034   003880  EF60  F01C         	goto	l3224
 10035   003884                     u2410:
 10036   003884  5005               	movf	strncmp@n^0,w,c
 10037   003886  1006               	iorwf	(strncmp@n+1)^0,w,c
 10038   003888  B4D8               	btfsc	status,2,c
 10039   00388A  EF49  F01C         	goto	u2421
 10040   00388E  EF4B  F01C         	goto	u2420
 10041   003892                     u2421:
 10042   003892  EF60  F01C         	goto	l3224
 10043   003896                     u2420:
 10044   003896  C008  FFF6         	movff	strncmp@l,tblptrl
 10045   00389A  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10046   00389E                     	if	0	;tblptru may be non-zero
 10047   00389E                     	endif
 10048   00389E                     	if	0	;tblptru may be non-zero
 10049   00389E                     	endif
 10050   00389E  0008               	tblrd		*
 10051   0038A0  CFF5 F007          	movff	tablat,??_strncmp
 10052   0038A4  C00A  FFF6         	movff	strncmp@r,tblptrl
 10053   0038A8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10054   0038AC                     	if	0	;tblptru may be non-zero
 10055   0038AC                     	endif
 10056   0038AC                     	if	0	;tblptru may be non-zero
 10057   0038AC                     	endif
 10058   0038AC  0008               	tblrd		*
 10059   0038AE  50F5               	movf	tablat,w,c
 10060   0038B0  1807               	xorwf	??_strncmp^0,w,c
 10061   0038B2  B4D8               	btfsc	status,2,c
 10062   0038B4  EF5E  F01C         	goto	u2431
 10063   0038B8  EF60  F01C         	goto	u2430
 10064   0038BC                     u2431:
 10065   0038BC  EF1F  F01C         	goto	l3214
 10066   0038C0                     u2430:
 10067   0038C0                     l3224:
 10068   0038C0  C008  FFF6         	movff	strncmp@l,tblptrl
 10069   0038C4  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10070   0038C8                     	if	0	;tblptru may be non-zero
 10071   0038C8                     	endif
 10072   0038C8                     	if	0	;tblptru may be non-zero
 10073   0038C8                     	endif
 10074   0038C8  0008               	tblrd		*
 10075   0038CA  CFF5 F007          	movff	tablat,??_strncmp
 10076   0038CE  C00A  FFF6         	movff	strncmp@r,tblptrl
 10077   0038D2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10078   0038D6                     	if	0	;tblptru may be non-zero
 10079   0038D6                     	endif
 10080   0038D6                     	if	0	;tblptru may be non-zero
 10081   0038D6                     	endif
 10082   0038D6  0008               	tblrd		*
 10083   0038D8  50F5               	movf	tablat,w,c
 10084   0038DA  5C07               	subwf	??_strncmp^0,w,c
 10085   0038DC  6E01               	movwf	?_strncmp^0,c
 10086   0038DE  6A02               	clrf	(?_strncmp+1)^0,c
 10087   0038E0  A0D8               	btfss	status,0,c
 10088   0038E2  0602               	decf	(?_strncmp+1)^0,f,c
 10089   0038E4                     l1463:
 10090   0038E4  0012               	return		;funcret
 10091   0038E6                     __end_of_strncmp:
 10092                           	callstack 0
 10093                           
 10094 ;; *************** function _stoa *****************
 10095 ;; Defined at:
 10096 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 10099 ;;		 -> sprintf@f(11), 
 10100 ;;  s               2   11[COMRAM] PTR unsigned char 
 10101 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
 10102 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
 10103 ;;		 -> STR_3(4), STR_2(1), 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  nuls            7   14[COMRAM] unsigned char [7]
 10106 ;;  p               2   29[COMRAM] int 
 10107 ;;  l               2   27[COMRAM] int 
 10108 ;;  cp              2   25[COMRAM] PTR unsigned char 
 10109 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10110 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10111 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10112 ;;  i               2   23[COMRAM] int 
 10113 ;;  w               2   21[COMRAM] int 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1    wreg      void 
 10116 ;; Registers used:
 10117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10124 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;Total ram usage:       22 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; Hardware stack levels required when called: 3
 10130 ;; This function calls:
 10131 ;;		_fputc
 10132 ;;		_strlen
 10133 ;; This function is called by:
 10134 ;;		_vfpfcnvrt
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text58
 10139   0033BC                     __ptext58:
 10140                           	callstack 0
 10141   0033BC                     _stoa:
 10142                           	callstack 23
 10143   0033BC                     
 10144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
 10145   0033BC  EE21  F0AE         	lfsr	2,stoa@F1144
 10146   0033C0  EE10  F00F         	lfsr	1,stoa@nuls
 10147   0033C4  0E06               	movlw	6
 10148   0033C6                     u2321:
 10149   0033C6  CFDB FFE3          	movff	plusw2,plusw1
 10150   0033CA  06E8               	decf	wreg,f,c
 10151   0033CC  E2FC               	bc	u2321
 10152   0033CE                     
 10153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
 10154   0033CE  C00C  F01A         	movff	stoa@s,stoa@cp
 10155   0033D2  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
 10156   0033D6                     
 10157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
 10158   0033D6  501A               	movf	stoa@cp^0,w,c
 10159   0033D8  101B               	iorwf	(stoa@cp+1)^0,w,c
 10160   0033DA  A4D8               	btfss	status,2,c
 10161   0033DC  EFF2  F019         	goto	u2331
 10162   0033E0  EFF4  F019         	goto	u2330
 10163   0033E4                     u2331:
 10164   0033E4  EFF8  F019         	goto	l3184
 10165   0033E8                     u2330:
 10166   0033E8                     
 10167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
 10168   0033E8  0E0F               	movlw	low stoa@nuls
 10169   0033EA  6E1A               	movwf	stoa@cp^0,c
 10170   0033EC  0E00               	movlw	high stoa@nuls
 10171   0033EE  6E1B               	movwf	(stoa@cp+1)^0,c
 10172   0033F0                     l3184:
 10173                           
 10174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
 10175   0033F0  C01A  F001         	movff	stoa@cp,strlen@s
 10176   0033F4  C01B  F002         	movff	stoa@cp+1,strlen@s+1
 10177   0033F8  EC48  F023         	call	_strlen	;wreg free
 10178   0033FC  C001  F01C         	movff	?_strlen,stoa@l
 10179   003400  C002  F01D         	movff	?_strlen+1,stoa@l+1
 10180   003404                     
 10181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 10182   003404  C0E4  F01E         	movff	_prec,stoa@p
 10183   003408  C0E5  F01F         	movff	_prec+1,stoa@p+1
 10184   00340C                     
 10185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 10186   00340C  BE1F               	btfsc	(stoa@p+1)^0,7,c
 10187   00340E  EF0B  F01A         	goto	u2341
 10188   003412  EF0D  F01A         	goto	u2340
 10189   003416                     u2341:
 10190   003416  EF22  F01A         	goto	l1404
 10191   00341A                     u2340:
 10192   00341A  501C               	movf	stoa@l^0,w,c
 10193   00341C  5C1E               	subwf	stoa@p^0,w,c
 10194   00341E  501F               	movf	(stoa@p+1)^0,w,c
 10195   003420  0A80               	xorlw	128
 10196   003422  6E0E               	movwf	??_stoa^0,c
 10197   003424  501D               	movf	(stoa@l+1)^0,w,c
 10198   003426  0A80               	xorlw	128
 10199   003428  580E               	subwfb	??_stoa^0,w,c
 10200   00342A  A0D8               	btfss	status,0,c
 10201   00342C  EF1A  F01A         	goto	u2351
 10202   003430  EF1C  F01A         	goto	u2350
 10203   003434                     u2351:
 10204   003434  EF1E  F01A         	goto	l1402
 10205   003438                     u2350:
 10206   003438  EF22  F01A         	goto	l1404
 10207   00343C                     l1402:
 10208   00343C  C01E  F01C         	movff	stoa@p,stoa@l
 10209   003440  C01F  F01D         	movff	stoa@p+1,stoa@l+1
 10210   003444                     l1404:
 10211                           
 10212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 10213   003444  C01C  F01E         	movff	stoa@l,stoa@p
 10214   003448  C01D  F01F         	movff	stoa@l+1,stoa@p+1
 10215                           
 10216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 10217   00344C  C0E2  F016         	movff	_width,stoa@w
 10218   003450  C0E3  F017         	movff	_width+1,stoa@w+1
 10219                           
 10220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10221   003454  EF38  F01A         	goto	l3196
 10222   003458                     l3192:
 10223                           
 10224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 10225   003458  0E00               	movlw	0
 10226   00345A  6E02               	movwf	(fputc@c+1)^0,c
 10227   00345C  0E20               	movlw	32
 10228   00345E  6E01               	movwf	fputc@c^0,c
 10229   003460  C00A  F003         	movff	stoa@fp,fputc@fp
 10230   003464  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10231   003468  EC73  F01C         	call	_fputc	;wreg free
 10232   00346C                     
 10233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10234   00346C  4A1C               	infsnz	stoa@l^0,f,c
 10235   00346E  2A1D               	incf	(stoa@l+1)^0,f,c
 10236   003470                     l3196:
 10237                           
 10238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10239   003470  5016               	movf	stoa@w^0,w,c
 10240   003472  5C1C               	subwf	stoa@l^0,w,c
 10241   003474  501D               	movf	(stoa@l+1)^0,w,c
 10242   003476  0A80               	xorlw	128
 10243   003478  6E0E               	movwf	??_stoa^0,c
 10244   00347A  5017               	movf	(stoa@w+1)^0,w,c
 10245   00347C  0A80               	xorlw	128
 10246   00347E  580E               	subwfb	??_stoa^0,w,c
 10247   003480  A0D8               	btfss	status,0,c
 10248   003482  EF45  F01A         	goto	u2361
 10249   003486  EF47  F01A         	goto	u2360
 10250   00348A                     u2361:
 10251   00348A  EF2C  F01A         	goto	l3192
 10252   00348E                     u2360:
 10253   00348E                     
 10254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10255   00348E  0E00               	movlw	0
 10256   003490  6E19               	movwf	(stoa@i+1)^0,c
 10257   003492  0E00               	movlw	0
 10258   003494  6E18               	movwf	stoa@i^0,c
 10259                           
 10260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10261   003496  EF6C  F01A         	goto	l3206
 10262   00349A                     l3200:
 10263                           
 10264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10265   00349A  C01A  FFF6         	movff	stoa@cp,tblptrl
 10266   00349E  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10267   0034A2  0E00               	movlw	low (__smallconst shr (0+16))
 10268   0034A4  6EF8               	movwf	tblptru,c
 10269   0034A6  0E0D               	movlw	(high __ramtop+-1)
 10270   0034A8  64F7               	cpfsgt	tblptrh,c
 10271   0034AA  D003               	bra	u2377
 10272   0034AC  0008               	tblrd		*
 10273   0034AE  50F5               	movf	tablat,w,c
 10274   0034B0  D005               	bra	u2370
 10275   0034B2                     u2377:
 10276   0034B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 10277   0034B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 10278   0034BA  50E7               	movf	indf1,w,c
 10279   0034BC                     u2370:
 10280   0034BC  6E0E               	movwf	??_stoa^0,c
 10281   0034BE  500E               	movf	??_stoa^0,w,c
 10282   0034C0  6E01               	movwf	fputc@c^0,c
 10283   0034C2  6A02               	clrf	(fputc@c+1)^0,c
 10284   0034C4  C00A  F003         	movff	stoa@fp,fputc@fp
 10285   0034C8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10286   0034CC  EC73  F01C         	call	_fputc	;wreg free
 10287   0034D0                     
 10288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10289   0034D0  4A1A               	infsnz	stoa@cp^0,f,c
 10290   0034D2  2A1B               	incf	(stoa@cp+1)^0,f,c
 10291   0034D4                     
 10292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10293   0034D4  4A18               	infsnz	stoa@i^0,f,c
 10294   0034D6  2A19               	incf	(stoa@i+1)^0,f,c
 10295   0034D8                     l3206:
 10296                           
 10297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10298   0034D8  501E               	movf	stoa@p^0,w,c
 10299   0034DA  5C18               	subwf	stoa@i^0,w,c
 10300   0034DC  5019               	movf	(stoa@i+1)^0,w,c
 10301   0034DE  0A80               	xorlw	128
 10302   0034E0  6E0E               	movwf	??_stoa^0,c
 10303   0034E2  501F               	movf	(stoa@p+1)^0,w,c
 10304   0034E4  0A80               	xorlw	128
 10305   0034E6  580E               	subwfb	??_stoa^0,w,c
 10306   0034E8  A0D8               	btfss	status,0,c
 10307   0034EA  EF79  F01A         	goto	u2381
 10308   0034EE  EF7B  F01A         	goto	u2380
 10309   0034F2                     u2381:
 10310   0034F2  EF4D  F01A         	goto	l3200
 10311   0034F6                     u2380:
 10312   0034F6  0012               	return		;funcret
 10313   0034F8                     __end_of_stoa:
 10314                           	callstack 0
 10315                           
 10316 ;; *************** function _strlen *****************
 10317 ;; Defined at:
 10318 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10321 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10322 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10323 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10326 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10327 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10328 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  2    0[COMRAM] unsigned int 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10342 ;;Total ram usage:        4 bytes
 10343 ;; Hardware stack levels used: 1
 10344 ;; Hardware stack levels required when called: 1
 10345 ;; This function calls:
 10346 ;;		Nothing
 10347 ;; This function is called by:
 10348 ;;		_stoa
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text59
 10353   004690                     __ptext59:
 10354                           	callstack 0
 10355   004690                     _strlen:
 10356                           	callstack 24
 10357   004690  C001  F003         	movff	strlen@s,strlen@a
 10358   004694  C002  F004         	movff	strlen@s+1,strlen@a+1
 10359   004698  EF50  F023         	goto	l3112
 10360   00469C                     l3110:
 10361   00469C  4A01               	infsnz	strlen@s^0,f,c
 10362   00469E  2A02               	incf	(strlen@s+1)^0,f,c
 10363   0046A0                     l3112:
 10364   0046A0  C001  FFF6         	movff	strlen@s,tblptrl
 10365   0046A4  C002  FFF7         	movff	strlen@s+1,tblptrh
 10366   0046A8  0E00               	movlw	low (__smallconst shr (0+16))
 10367   0046AA  6EF8               	movwf	tblptru,c
 10368   0046AC  0E0D               	movlw	(high __ramtop+-1)
 10369   0046AE  64F7               	cpfsgt	tblptrh,c
 10370   0046B0  D003               	bra	u2287
 10371   0046B2  0008               	tblrd		*
 10372   0046B4  50F5               	movf	tablat,w,c
 10373   0046B6  D005               	bra	u2280
 10374   0046B8                     u2287:
 10375   0046B8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10376   0046BC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10377   0046C0  50E7               	movf	indf1,w,c
 10378   0046C2                     u2280:
 10379   0046C2  0900               	iorlw	0
 10380   0046C4  A4D8               	btfss	status,2,c
 10381   0046C6  EF67  F023         	goto	u2291
 10382   0046CA  EF69  F023         	goto	u2290
 10383   0046CE                     u2291:
 10384   0046CE  EF4E  F023         	goto	l3110
 10385   0046D2                     u2290:
 10386   0046D2  5003               	movf	strlen@a^0,w,c
 10387   0046D4  5C01               	subwf	strlen@s^0,w,c
 10388   0046D6  6E01               	movwf	?_strlen^0,c
 10389   0046D8  5004               	movf	(strlen@a+1)^0,w,c
 10390   0046DA  5802               	subwfb	(strlen@s+1)^0,w,c
 10391   0046DC  6E02               	movwf	(?_strlen+1)^0,c
 10392   0046DE  0012               	return		;funcret
 10393   0046E0                     __end_of_strlen:
 10394                           	callstack 0
 10395                           
 10396 ;; *************** function _fputc *****************
 10397 ;; Defined at:
 10398 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  c               2    0[COMRAM] int 
 10401 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10402 ;;		 -> sprintf@f(11), 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  2    0[COMRAM] int 
 10407 ;; Registers used:
 10408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10416 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10417 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10418 ;;Total ram usage:        9 bytes
 10419 ;; Hardware stack levels used: 1
 10420 ;; Hardware stack levels required when called: 2
 10421 ;; This function calls:
 10422 ;;		_putch
 10423 ;; This function is called by:
 10424 ;;		_stoa
 10425 ;;		_vfpfcnvrt
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text60
 10430   0038E6                     __ptext60:
 10431                           	callstack 0
 10432   0038E6                     _fputc:
 10433                           	callstack 23
 10434   0038E6  5003               	movf	fputc@fp^0,w,c
 10435   0038E8  1004               	iorwf	(fputc@fp+1)^0,w,c
 10436   0038EA  B4D8               	btfsc	status,2,c
 10437   0038EC  EF7A  F01C         	goto	u2241
 10438   0038F0  EF7C  F01C         	goto	u2240
 10439   0038F4                     u2241:
 10440   0038F4  EF85  F01C         	goto	l3098
 10441   0038F8                     u2240:
 10442   0038F8  5003               	movf	fputc@fp^0,w,c
 10443   0038FA  1004               	iorwf	(fputc@fp+1)^0,w,c
 10444   0038FC  A4D8               	btfss	status,2,c
 10445   0038FE  EF83  F01C         	goto	u2251
 10446   003902  EF85  F01C         	goto	u2250
 10447   003906                     u2251:
 10448   003906  EF8A  F01C         	goto	l3100
 10449   00390A                     u2250:
 10450   00390A                     l3098:
 10451   00390A  5001               	movf	fputc@c^0,w,c
 10452   00390C  EC3A  F025         	call	_putch
 10453   003910  EFD7  F01C         	goto	l1442
 10454   003914                     l3100:
 10455   003914  EE20 F009          	lfsr	2,9
 10456   003918  5003               	movf	fputc@fp^0,w,c
 10457   00391A  26D9               	addwf	fsr2l,f,c
 10458   00391C  5004               	movf	(fputc@fp+1)^0,w,c
 10459   00391E  22DA               	addwfc	fsr2h,f,c
 10460   003920  50DE               	movf	postinc2,w,c
 10461   003922  10DE               	iorwf	postinc2,w,c
 10462   003924  B4D8               	btfsc	status,2,c
 10463   003926  EF97  F01C         	goto	u2261
 10464   00392A  EF99  F01C         	goto	u2260
 10465   00392E                     u2261:
 10466   00392E  EFB4  F01C         	goto	l3104
 10467   003932                     u2260:
 10468   003932  EE20 F009          	lfsr	2,9
 10469   003936  5003               	movf	fputc@fp^0,w,c
 10470   003938  26D9               	addwf	fsr2l,f,c
 10471   00393A  5004               	movf	(fputc@fp+1)^0,w,c
 10472   00393C  22DA               	addwfc	fsr2h,f,c
 10473   00393E  EE10 F003          	lfsr	1,3
 10474   003942  5003               	movf	fputc@fp^0,w,c
 10475   003944  26E1               	addwf	fsr1l,f,c
 10476   003946  5004               	movf	(fputc@fp+1)^0,w,c
 10477   003948  22E2               	addwfc	fsr1h,f,c
 10478   00394A  50DE               	movf	postinc2,w,c
 10479   00394C  5CE6               	subwf	postinc1,w,c
 10480   00394E  50E6               	movf	postinc1,w,c
 10481   003950  0A80               	xorlw	128
 10482   003952  6E09               	movwf	(??_fputc+4)^0,c
 10483   003954  50DE               	movf	postinc2,w,c
 10484   003956  0A80               	xorlw	128
 10485   003958  5809               	subwfb	(??_fputc+4)^0,w,c
 10486   00395A  B0D8               	btfsc	status,0,c
 10487   00395C  EFB2  F01C         	goto	u2271
 10488   003960  EFB4  F01C         	goto	u2270
 10489   003964                     u2271:
 10490   003964  EFD7  F01C         	goto	l1442
 10491   003968                     u2270:
 10492   003968                     l3104:
 10493   003968  EE20 F003          	lfsr	2,3
 10494   00396C  5003               	movf	fputc@fp^0,w,c
 10495   00396E  26D9               	addwf	fsr2l,f,c
 10496   003970  5004               	movf	(fputc@fp+1)^0,w,c
 10497   003972  22DA               	addwfc	fsr2h,f,c
 10498   003974  CFDE F005          	movff	postinc2,??_fputc
 10499   003978  CFDD F006          	movff	postdec2,??_fputc+1
 10500   00397C  C003  FFD9         	movff	fputc@fp,fsr2l
 10501   003980  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10502   003984  CFDE F007          	movff	postinc2,??_fputc+2
 10503   003988  CFDD F008          	movff	postdec2,??_fputc+3
 10504   00398C  5005               	movf	??_fputc^0,w,c
 10505   00398E  2407               	addwf	(??_fputc+2)^0,w,c
 10506   003990  6ED9               	movwf	fsr2l,c
 10507   003992  5006               	movf	(??_fputc+1)^0,w,c
 10508   003994  2008               	addwfc	(??_fputc+3)^0,w,c
 10509   003996  6EDA               	movwf	fsr2h,c
 10510   003998  C001  FFDF         	movff	fputc@c,indf2
 10511   00399C  EE20 F003          	lfsr	2,3
 10512   0039A0  5003               	movf	fputc@fp^0,w,c
 10513   0039A2  26D9               	addwf	fsr2l,f,c
 10514   0039A4  5004               	movf	(fputc@fp+1)^0,w,c
 10515   0039A6  22DA               	addwfc	fsr2h,f,c
 10516   0039A8  2ADE               	incf	postinc2,f,c
 10517   0039AA  0E00               	movlw	0
 10518   0039AC  22DD               	addwfc	postdec2,f,c
 10519   0039AE                     l1442:
 10520   0039AE  0012               	return		;funcret
 10521   0039B0                     __end_of_fputc:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _putch *****************
 10525 ;; Defined at:
 10526 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  c               1    wreg     unsigned char 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  c               1    0[COMRAM] unsigned char 
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		wreg
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10544 ;;Total ram usage:        0 bytes
 10545 ;; Hardware stack levels used: 1
 10546 ;; Hardware stack levels required when called: 1
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_fputc
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text61
 10555   004A74                     __ptext61:
 10556                           	callstack 0
 10557   004A74                     _putch:
 10558                           	callstack 23
 10559   004A74  0012               	return		;funcret
 10560   004A76                     __end_of_putch:
 10561                           	callstack 0
 10562                           
 10563 ;; *************** function _sendStringSerial4 *****************
 10564 ;; Defined at:
 10565 ;;		line 48 in file "serial.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  string          2    1[COMRAM] PTR unsigned char 
 10568 ;;		 -> main@data(100), 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;Total ram usage:        2 bytes
 10585 ;; Hardware stack levels used: 1
 10586 ;; Hardware stack levels required when called: 2
 10587 ;; This function calls:
 10588 ;;		_sendCharSerial4
 10589 ;; This function is called by:
 10590 ;;		_Color2String
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text62
 10595   004882                     __ptext62:
 10596                           	callstack 0
 10597   004882                     _sendStringSerial4:
 10598                           	callstack 27
 10599   004882                     
 10600                           ;serial.c: 51:     while(*string != 0){
 10601   004882  EF50  F024         	goto	l4012
 10602   004886                     l4006:
 10603                           
 10604                           ;serial.c: 53:   sendCharSerial4(*string++);
 10605   004886  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10606   00488A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10607   00488E  50DF               	movf	indf2,w,c
 10608   004890  ECFE  F024         	call	_sendCharSerial4
 10609   004894  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10610   004896  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10611   004898                     
 10612                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10613   004898  0E6A               	movlw	106
 10614   00489A                     u4487:
 10615   00489A  2EE8               	decfsz	wreg,f,c
 10616   00489C  D7FE               	bra	u4487
 10617   00489E  D000               	nop2	
 10618   0048A0                     l4012:
 10619                           
 10620                           ;serial.c: 51:     while(*string != 0){
 10621   0048A0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10622   0048A4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10623   0048A8  50DF               	movf	indf2,w,c
 10624   0048AA  A4D8               	btfss	status,2,c
 10625   0048AC  EF5A  F024         	goto	u3651
 10626   0048B0  EF5C  F024         	goto	u3650
 10627   0048B4                     u3651:
 10628   0048B4  EF43  F024         	goto	l4006
 10629   0048B8                     u3650:
 10630   0048B8  0012               	return		;funcret
 10631   0048BA                     __end_of_sendStringSerial4:
 10632                           	callstack 0
 10633                           
 10634 ;; *************** function _sendCharSerial4 *****************
 10635 ;; Defined at:
 10636 ;;		line 34 in file "serial.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  charToSend      1    wreg     unsigned char 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  charToSend      1    0[COMRAM] unsigned char 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;Total ram usage:        1 bytes
 10655 ;; Hardware stack levels used: 1
 10656 ;; Hardware stack levels required when called: 1
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_sendStringSerial4
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text63
 10665   0049FC                     __ptext63:
 10666                           	callstack 0
 10667   0049FC                     _sendCharSerial4:
 10668                           	callstack 27
 10669                           
 10670                           ;incstack = 0
 10671                           ;sendCharSerial4@charToSend stored from wreg
 10672   0049FC  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10673   0049FE                     l396:
 10674   0049FE  010E               	movlb	14	; () banked
 10675   004A00  A537               	btfss	55,2,b	;volatile
 10676   004A02  EF05  F025         	goto	u2891
 10677   004A06  EF07  F025         	goto	u2890
 10678   004A0A                     u2891:
 10679   004A0A  EFFF  F024         	goto	l396
 10680   004A0E                     u2890:
 10681   004A0E                     
 10682                           ; BSR set to: 14
 10683                           ;serial.c: 36:     TX4REG = charToSend;
 10684   004A0E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10685   004A12                     
 10686                           ; BSR set to: 14
 10687   004A12  0012               	return		;funcret
 10688   004A14                     __end_of_sendCharSerial4:
 10689                           	callstack 0
 10690                           
 10691 ;; *************** function _Hue2Colour *****************
 10692 ;; Defined at:
 10693 ;;		line 56 in file "colorfunctions.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
 10696 ;;		 -> colorf(22), 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  colourname      2   88[COMRAM] PTR unsigned char 
 10699 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
 10700 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
 10701 ;;		 -> STR_2(1), 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  2   86[COMRAM] PTR unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;Total ram usage:        4 bytes
 10716 ;; Hardware stack levels used: 1
 10717 ;; Hardware stack levels required when called: 2
 10718 ;; This function calls:
 10719 ;;		___flge
 10720 ;; This function is called by:
 10721 ;;		_main
 10722 ;;		_Color2String
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text64
 10727   00157E                     __ptext64:
 10728                           	callstack 0
 10729   00157E                     _Hue2Colour:
 10730                           	callstack 28
 10731   00157E                     
 10732                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10733   00157E  0E10               	movlw	low (STR_1+15)
 10734   001580  6E59               	movwf	Hue2Colour@colourname^0,c
 10735   001582  0E0E               	movlw	high (STR_1+15)
 10736   001584  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10737   001586                     
 10738                           ;colorfunctions.c: 59:     if (((cf->h)>350)&&((cf->h)<360))
 10739   001586  0E00               	movlw	0
 10740   001588  6E4B               	movwf	___flge@ff1^0,c
 10741   00158A  0E00               	movlw	0
 10742   00158C  6E4C               	movwf	(___flge@ff1+1)^0,c
 10743   00158E  0EAF               	movlw	175
 10744   001590  6E4D               	movwf	(___flge@ff1+2)^0,c
 10745   001592  0E43               	movlw	67
 10746   001594  6E4E               	movwf	(___flge@ff1+3)^0,c
 10747   001596  EE20 F010          	lfsr	2,16
 10748   00159A  5057               	movf	Hue2Colour@cf^0,w,c
 10749   00159C  26D9               	addwf	fsr2l,f,c
 10750   00159E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10751   0015A0  22DA               	addwfc	fsr2h,f,c
 10752   0015A2  CFDE F04F          	movff	postinc2,___flge@ff2
 10753   0015A6  CFDE F050          	movff	postinc2,___flge@ff2+1
 10754   0015AA  CFDE F051          	movff	postinc2,___flge@ff2+2
 10755   0015AE  CFDE F052          	movff	postinc2,___flge@ff2+3
 10756   0015B2  EC82  F01B         	call	___flge	;wreg free
 10757   0015B6  B0D8               	btfsc	status,0,c
 10758   0015B8  EFE0  F00A         	goto	u3351
 10759   0015BC  EFE2  F00A         	goto	u3350
 10760   0015C0                     u3351:
 10761   0015C0  EF0F  F00B         	goto	l3842
 10762   0015C4                     u3350:
 10763   0015C4  EE20 F010          	lfsr	2,16
 10764   0015C8  5057               	movf	Hue2Colour@cf^0,w,c
 10765   0015CA  26D9               	addwf	fsr2l,f,c
 10766   0015CC  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10767   0015CE  22DA               	addwfc	fsr2h,f,c
 10768   0015D0  CFDE F04B          	movff	postinc2,___flge@ff1
 10769   0015D4  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10770   0015D8  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10771   0015DC  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10772   0015E0  0E00               	movlw	0
 10773   0015E2  6E4F               	movwf	___flge@ff2^0,c
 10774   0015E4  0E00               	movlw	0
 10775   0015E6  6E50               	movwf	(___flge@ff2+1)^0,c
 10776   0015E8  0EB4               	movlw	180
 10777   0015EA  6E51               	movwf	(___flge@ff2+2)^0,c
 10778   0015EC  0E43               	movlw	67
 10779   0015EE  6E52               	movwf	(___flge@ff2+3)^0,c
 10780   0015F0  EC82  F01B         	call	___flge	;wreg free
 10781   0015F4  B0D8               	btfsc	status,0,c
 10782   0015F6  EFFF  F00A         	goto	u3361
 10783   0015FA  EF01  F00B         	goto	u3360
 10784   0015FE                     u3361:
 10785   0015FE  EF0F  F00B         	goto	l3842
 10786   001602                     u3360:
 10787   001602                     
 10788                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10789   001602  0E4C               	movlw	low STR_3
 10790   001604  6E59               	movwf	Hue2Colour@colourname^0,c
 10791   001606  0E0E               	movlw	high STR_3
 10792   001608  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10793   00160A                     
 10794                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10795   00160A  EE20 F014          	lfsr	2,20
 10796   00160E  5057               	movf	Hue2Colour@cf^0,w,c
 10797   001610  26D9               	addwf	fsr2l,f,c
 10798   001612  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10799   001614  22DA               	addwfc	fsr2h,f,c
 10800   001616  0E00               	movlw	0
 10801   001618  6EDE               	movwf	postinc2,c
 10802   00161A  0E00               	movlw	0
 10803   00161C  6EDD               	movwf	postdec2,c
 10804   00161E                     l3842:
 10805                           
 10806                           ;colorfunctions.c: 67:      if (((cf->h)>70)&&((cf->h)<79))
 10807   00161E  0E00               	movlw	0
 10808   001620  6E4B               	movwf	___flge@ff1^0,c
 10809   001622  0E00               	movlw	0
 10810   001624  6E4C               	movwf	(___flge@ff1+1)^0,c
 10811   001626  0E8C               	movlw	140
 10812   001628  6E4D               	movwf	(___flge@ff1+2)^0,c
 10813   00162A  0E42               	movlw	66
 10814   00162C  6E4E               	movwf	(___flge@ff1+3)^0,c
 10815   00162E  EE20 F010          	lfsr	2,16
 10816   001632  5057               	movf	Hue2Colour@cf^0,w,c
 10817   001634  26D9               	addwf	fsr2l,f,c
 10818   001636  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10819   001638  22DA               	addwfc	fsr2h,f,c
 10820   00163A  CFDE F04F          	movff	postinc2,___flge@ff2
 10821   00163E  CFDE F050          	movff	postinc2,___flge@ff2+1
 10822   001642  CFDE F051          	movff	postinc2,___flge@ff2+2
 10823   001646  CFDE F052          	movff	postinc2,___flge@ff2+3
 10824   00164A  EC82  F01B         	call	___flge	;wreg free
 10825   00164E  B0D8               	btfsc	status,0,c
 10826   001650  EF2C  F00B         	goto	u3371
 10827   001654  EF2E  F00B         	goto	u3370
 10828   001658                     u3371:
 10829   001658  EF5D  F00B         	goto	l3850
 10830   00165C                     u3370:
 10831   00165C  EE20 F010          	lfsr	2,16
 10832   001660  5057               	movf	Hue2Colour@cf^0,w,c
 10833   001662  26D9               	addwf	fsr2l,f,c
 10834   001664  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10835   001666  22DA               	addwfc	fsr2h,f,c
 10836   001668  CFDE F04B          	movff	postinc2,___flge@ff1
 10837   00166C  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10838   001670  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10839   001674  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10840   001678  0E00               	movlw	0
 10841   00167A  6E4F               	movwf	___flge@ff2^0,c
 10842   00167C  0E00               	movlw	0
 10843   00167E  6E50               	movwf	(___flge@ff2+1)^0,c
 10844   001680  0E9E               	movlw	158
 10845   001682  6E51               	movwf	(___flge@ff2+2)^0,c
 10846   001684  0E42               	movlw	66
 10847   001686  6E52               	movwf	(___flge@ff2+3)^0,c
 10848   001688  EC82  F01B         	call	___flge	;wreg free
 10849   00168C  B0D8               	btfsc	status,0,c
 10850   00168E  EF4B  F00B         	goto	u3381
 10851   001692  EF4D  F00B         	goto	u3380
 10852   001696                     u3381:
 10853   001696  EF5D  F00B         	goto	l3850
 10854   00169A                     u3380:
 10855   00169A                     
 10856                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10857   00169A  0E3D               	movlw	low STR_4
 10858   00169C  6E59               	movwf	Hue2Colour@colourname^0,c
 10859   00169E  0E0E               	movlw	high STR_4
 10860   0016A0  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10861   0016A2                     
 10862                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10863   0016A2  EE20 F014          	lfsr	2,20
 10864   0016A6  5057               	movf	Hue2Colour@cf^0,w,c
 10865   0016A8  26D9               	addwf	fsr2l,f,c
 10866   0016AA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10867   0016AC  22DA               	addwfc	fsr2h,f,c
 10868   0016AE  0E01               	movlw	1
 10869   0016B0  6EDE               	movwf	postinc2,c
 10870   0016B2  0E00               	movlw	0
 10871   0016B4  6EDD               	movwf	postdec2,c
 10872                           
 10873                           ;colorfunctions.c: 71:     }
 10874   0016B6  EF3B  F00D         	goto	l3900
 10875   0016BA                     l3850:
 10876   0016BA  0E00               	movlw	0
 10877   0016BC  6E4B               	movwf	___flge@ff1^0,c
 10878   0016BE  0E00               	movlw	0
 10879   0016C0  6E4C               	movwf	(___flge@ff1+1)^0,c
 10880   0016C2  0E11               	movlw	17
 10881   0016C4  6E4D               	movwf	(___flge@ff1+2)^0,c
 10882   0016C6  0E43               	movlw	67
 10883   0016C8  6E4E               	movwf	(___flge@ff1+3)^0,c
 10884   0016CA  EE20 F010          	lfsr	2,16
 10885   0016CE  5057               	movf	Hue2Colour@cf^0,w,c
 10886   0016D0  26D9               	addwf	fsr2l,f,c
 10887   0016D2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10888   0016D4  22DA               	addwfc	fsr2h,f,c
 10889   0016D6  CFDE F04F          	movff	postinc2,___flge@ff2
 10890   0016DA  CFDE F050          	movff	postinc2,___flge@ff2+1
 10891   0016DE  CFDE F051          	movff	postinc2,___flge@ff2+2
 10892   0016E2  CFDE F052          	movff	postinc2,___flge@ff2+3
 10893   0016E6  EC82  F01B         	call	___flge	;wreg free
 10894   0016EA  B0D8               	btfsc	status,0,c
 10895   0016EC  EF7A  F00B         	goto	u3391
 10896   0016F0  EF7C  F00B         	goto	u3390
 10897   0016F4                     u3391:
 10898   0016F4  EFAB  F00B         	goto	l3858
 10899   0016F8                     u3390:
 10900   0016F8  EE20 F010          	lfsr	2,16
 10901   0016FC  5057               	movf	Hue2Colour@cf^0,w,c
 10902   0016FE  26D9               	addwf	fsr2l,f,c
 10903   001700  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10904   001702  22DA               	addwfc	fsr2h,f,c
 10905   001704  CFDE F04B          	movff	postinc2,___flge@ff1
 10906   001708  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10907   00170C  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10908   001710  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10909   001714  0E00               	movlw	0
 10910   001716  6E4F               	movwf	___flge@ff2^0,c
 10911   001718  0E00               	movlw	0
 10912   00171A  6E50               	movwf	(___flge@ff2+1)^0,c
 10913   00171C  0E34               	movlw	52
 10914   00171E  6E51               	movwf	(___flge@ff2+2)^0,c
 10915   001720  0E43               	movlw	67
 10916   001722  6E52               	movwf	(___flge@ff2+3)^0,c
 10917   001724  EC82  F01B         	call	___flge	;wreg free
 10918   001728  B0D8               	btfsc	status,0,c
 10919   00172A  EF99  F00B         	goto	u3401
 10920   00172E  EF9B  F00B         	goto	u3400
 10921   001732                     u3401:
 10922   001732  EFAB  F00B         	goto	l3858
 10923   001736                     u3400:
 10924   001736                     
 10925                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10926   001736  0E1C               	movlw	low STR_5
 10927   001738  6E59               	movwf	Hue2Colour@colourname^0,c
 10928   00173A  0E0E               	movlw	high STR_5
 10929   00173C  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10930   00173E                     
 10931                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10932   00173E  EE20 F014          	lfsr	2,20
 10933   001742  5057               	movf	Hue2Colour@cf^0,w,c
 10934   001744  26D9               	addwf	fsr2l,f,c
 10935   001746  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10936   001748  22DA               	addwfc	fsr2h,f,c
 10937   00174A  0E02               	movlw	2
 10938   00174C  6EDE               	movwf	postinc2,c
 10939   00174E  0E00               	movlw	0
 10940   001750  6EDD               	movwf	postdec2,c
 10941                           
 10942                           ;colorfunctions.c: 76:     }
 10943   001752  EF3B  F00D         	goto	l3900
 10944   001756                     l3858:
 10945   001756  0E00               	movlw	0
 10946   001758  6E4B               	movwf	___flge@ff1^0,c
 10947   00175A  0E00               	movlw	0
 10948   00175C  6E4C               	movwf	(___flge@ff1+1)^0,c
 10949   00175E  0EA8               	movlw	168
 10950   001760  6E4D               	movwf	(___flge@ff1+2)^0,c
 10951   001762  0E41               	movlw	65
 10952   001764  6E4E               	movwf	(___flge@ff1+3)^0,c
 10953   001766  EE20 F010          	lfsr	2,16
 10954   00176A  5057               	movf	Hue2Colour@cf^0,w,c
 10955   00176C  26D9               	addwf	fsr2l,f,c
 10956   00176E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10957   001770  22DA               	addwfc	fsr2h,f,c
 10958   001772  CFDE F04F          	movff	postinc2,___flge@ff2
 10959   001776  CFDE F050          	movff	postinc2,___flge@ff2+1
 10960   00177A  CFDE F051          	movff	postinc2,___flge@ff2+2
 10961   00177E  CFDE F052          	movff	postinc2,___flge@ff2+3
 10962   001782  EC82  F01B         	call	___flge	;wreg free
 10963   001786  B0D8               	btfsc	status,0,c
 10964   001788  EFC8  F00B         	goto	u3411
 10965   00178C  EFCA  F00B         	goto	u3410
 10966   001790                     u3411:
 10967   001790  EFF9  F00B         	goto	l3866
 10968   001794                     u3410:
 10969   001794  EE20 F010          	lfsr	2,16
 10970   001798  5057               	movf	Hue2Colour@cf^0,w,c
 10971   00179A  26D9               	addwf	fsr2l,f,c
 10972   00179C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10973   00179E  22DA               	addwfc	fsr2h,f,c
 10974   0017A0  CFDE F04B          	movff	postinc2,___flge@ff1
 10975   0017A4  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10976   0017A8  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10977   0017AC  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10978   0017B0  0E00               	movlw	0
 10979   0017B2  6E4F               	movwf	___flge@ff2^0,c
 10980   0017B4  0E00               	movlw	0
 10981   0017B6  6E50               	movwf	(___flge@ff2+1)^0,c
 10982   0017B8  0EC8               	movlw	200
 10983   0017BA  6E51               	movwf	(___flge@ff2+2)^0,c
 10984   0017BC  0E41               	movlw	65
 10985   0017BE  6E52               	movwf	(___flge@ff2+3)^0,c
 10986   0017C0  EC82  F01B         	call	___flge	;wreg free
 10987   0017C4  B0D8               	btfsc	status,0,c
 10988   0017C6  EFE7  F00B         	goto	u3421
 10989   0017CA  EFE9  F00B         	goto	u3420
 10990   0017CE                     u3421:
 10991   0017CE  EFF9  F00B         	goto	l3866
 10992   0017D2                     u3420:
 10993   0017D2                     
 10994                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10995   0017D2  0E36               	movlw	low STR_6
 10996   0017D4  6E59               	movwf	Hue2Colour@colourname^0,c
 10997   0017D6  0E0E               	movlw	high STR_6
 10998   0017D8  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10999   0017DA                     
 11000                           ;colorfunctions.c: 80:         cf->colourindex=3;
 11001   0017DA  EE20 F014          	lfsr	2,20
 11002   0017DE  5057               	movf	Hue2Colour@cf^0,w,c
 11003   0017E0  26D9               	addwf	fsr2l,f,c
 11004   0017E2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11005   0017E4  22DA               	addwfc	fsr2h,f,c
 11006   0017E6  0E03               	movlw	3
 11007   0017E8  6EDE               	movwf	postinc2,c
 11008   0017EA  0E00               	movlw	0
 11009   0017EC  6EDD               	movwf	postdec2,c
 11010                           
 11011                           ;colorfunctions.c: 81:     }
 11012   0017EE  EF3B  F00D         	goto	l3900
 11013   0017F2                     l3866:
 11014   0017F2  0E00               	movlw	0
 11015   0017F4  6E4B               	movwf	___flge@ff1^0,c
 11016   0017F6  0E00               	movlw	0
 11017   0017F8  6E4C               	movwf	(___flge@ff1+1)^0,c
 11018   0017FA  0E70               	movlw	112
 11019   0017FC  6E4D               	movwf	(___flge@ff1+2)^0,c
 11020   0017FE  0E41               	movlw	65
 11021   001800  6E4E               	movwf	(___flge@ff1+3)^0,c
 11022   001802  EE20 F010          	lfsr	2,16
 11023   001806  5057               	movf	Hue2Colour@cf^0,w,c
 11024   001808  26D9               	addwf	fsr2l,f,c
 11025   00180A  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11026   00180C  22DA               	addwfc	fsr2h,f,c
 11027   00180E  CFDE F04F          	movff	postinc2,___flge@ff2
 11028   001812  CFDE F050          	movff	postinc2,___flge@ff2+1
 11029   001816  CFDE F051          	movff	postinc2,___flge@ff2+2
 11030   00181A  CFDE F052          	movff	postinc2,___flge@ff2+3
 11031   00181E  EC82  F01B         	call	___flge	;wreg free
 11032   001822  B0D8               	btfsc	status,0,c
 11033   001824  EF16  F00C         	goto	u3431
 11034   001828  EF18  F00C         	goto	u3430
 11035   00182C                     u3431:
 11036   00182C  EF47  F00C         	goto	l3874
 11037   001830                     u3430:
 11038   001830  EE20 F010          	lfsr	2,16
 11039   001834  5057               	movf	Hue2Colour@cf^0,w,c
 11040   001836  26D9               	addwf	fsr2l,f,c
 11041   001838  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11042   00183A  22DA               	addwfc	fsr2h,f,c
 11043   00183C  CFDE F04B          	movff	postinc2,___flge@ff1
 11044   001840  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11045   001844  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11046   001848  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11047   00184C  0E00               	movlw	0
 11048   00184E  6E4F               	movwf	___flge@ff2^0,c
 11049   001850  0E00               	movlw	0
 11050   001852  6E50               	movwf	(___flge@ff2+1)^0,c
 11051   001854  0E98               	movlw	152
 11052   001856  6E51               	movwf	(___flge@ff2+2)^0,c
 11053   001858  0E41               	movlw	65
 11054   00185A  6E52               	movwf	(___flge@ff2+3)^0,c
 11055   00185C  EC82  F01B         	call	___flge	;wreg free
 11056   001860  B0D8               	btfsc	status,0,c
 11057   001862  EF35  F00C         	goto	u3441
 11058   001866  EF37  F00C         	goto	u3440
 11059   00186A                     u3441:
 11060   00186A  EF47  F00C         	goto	l3874
 11061   00186E                     u3440:
 11062   00186E                     
 11063                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 11064   00186E  0E43               	movlw	low STR_7
 11065   001870  6E59               	movwf	Hue2Colour@colourname^0,c
 11066   001872  0E0E               	movlw	high STR_7
 11067   001874  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11068   001876                     
 11069                           ;colorfunctions.c: 85:         cf->colourindex=4;
 11070   001876  EE20 F014          	lfsr	2,20
 11071   00187A  5057               	movf	Hue2Colour@cf^0,w,c
 11072   00187C  26D9               	addwf	fsr2l,f,c
 11073   00187E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11074   001880  22DA               	addwfc	fsr2h,f,c
 11075   001882  0E04               	movlw	4
 11076   001884  6EDE               	movwf	postinc2,c
 11077   001886  0E00               	movlw	0
 11078   001888  6EDD               	movwf	postdec2,c
 11079                           
 11080                           ;colorfunctions.c: 86:     }
 11081   00188A  EF3B  F00D         	goto	l3900
 11082   00188E                     l3874:
 11083   00188E  0E00               	movlw	0
 11084   001890  6E4B               	movwf	___flge@ff1^0,c
 11085   001892  0E00               	movlw	0
 11086   001894  6E4C               	movwf	(___flge@ff1+1)^0,c
 11087   001896  0E40               	movlw	64
 11088   001898  6E4D               	movwf	(___flge@ff1+2)^0,c
 11089   00189A  0E40               	movlw	64
 11090   00189C  6E4E               	movwf	(___flge@ff1+3)^0,c
 11091   00189E  EE20 F010          	lfsr	2,16
 11092   0018A2  5057               	movf	Hue2Colour@cf^0,w,c
 11093   0018A4  26D9               	addwf	fsr2l,f,c
 11094   0018A6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11095   0018A8  22DA               	addwfc	fsr2h,f,c
 11096   0018AA  CFDE F04F          	movff	postinc2,___flge@ff2
 11097   0018AE  CFDE F050          	movff	postinc2,___flge@ff2+1
 11098   0018B2  CFDE F051          	movff	postinc2,___flge@ff2+2
 11099   0018B6  CFDE F052          	movff	postinc2,___flge@ff2+3
 11100   0018BA  EC82  F01B         	call	___flge	;wreg free
 11101   0018BE  B0D8               	btfsc	status,0,c
 11102   0018C0  EF64  F00C         	goto	u3451
 11103   0018C4  EF66  F00C         	goto	u3450
 11104   0018C8                     u3451:
 11105   0018C8  EF95  F00C         	goto	l3882
 11106   0018CC                     u3450:
 11107   0018CC  EE20 F010          	lfsr	2,16
 11108   0018D0  5057               	movf	Hue2Colour@cf^0,w,c
 11109   0018D2  26D9               	addwf	fsr2l,f,c
 11110   0018D4  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11111   0018D6  22DA               	addwfc	fsr2h,f,c
 11112   0018D8  CFDE F04B          	movff	postinc2,___flge@ff1
 11113   0018DC  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11114   0018E0  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11115   0018E4  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11116   0018E8  0E00               	movlw	0
 11117   0018EA  6E4F               	movwf	___flge@ff2^0,c
 11118   0018EC  0E00               	movlw	0
 11119   0018EE  6E50               	movwf	(___flge@ff2+1)^0,c
 11120   0018F0  0E30               	movlw	48
 11121   0018F2  6E51               	movwf	(___flge@ff2+2)^0,c
 11122   0018F4  0E41               	movlw	65
 11123   0018F6  6E52               	movwf	(___flge@ff2+3)^0,c
 11124   0018F8  EC82  F01B         	call	___flge	;wreg free
 11125   0018FC  B0D8               	btfsc	status,0,c
 11126   0018FE  EF83  F00C         	goto	u3461
 11127   001902  EF85  F00C         	goto	u3460
 11128   001906                     u3461:
 11129   001906  EF95  F00C         	goto	l3882
 11130   00190A                     u3460:
 11131   00190A                     
 11132                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 11133   00190A  0E2F               	movlw	low STR_8
 11134   00190C  6E59               	movwf	Hue2Colour@colourname^0,c
 11135   00190E  0E0E               	movlw	high STR_8
 11136   001910  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11137   001912                     
 11138                           ;colorfunctions.c: 90:         cf->colourindex=5;
 11139   001912  EE20 F014          	lfsr	2,20
 11140   001916  5057               	movf	Hue2Colour@cf^0,w,c
 11141   001918  26D9               	addwf	fsr2l,f,c
 11142   00191A  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11143   00191C  22DA               	addwfc	fsr2h,f,c
 11144   00191E  0E05               	movlw	5
 11145   001920  6EDE               	movwf	postinc2,c
 11146   001922  0E00               	movlw	0
 11147   001924  6EDD               	movwf	postdec2,c
 11148                           
 11149                           ;colorfunctions.c: 91:     }
 11150   001926  EF3B  F00D         	goto	l3900
 11151   00192A                     l3882:
 11152   00192A  0E00               	movlw	0
 11153   00192C  6E4B               	movwf	___flge@ff1^0,c
 11154   00192E  0E00               	movlw	0
 11155   001930  6E4C               	movwf	(___flge@ff1+1)^0,c
 11156   001932  0EAA               	movlw	170
 11157   001934  6E4D               	movwf	(___flge@ff1+2)^0,c
 11158   001936  0E42               	movlw	66
 11159   001938  6E4E               	movwf	(___flge@ff1+3)^0,c
 11160   00193A  EE20 F010          	lfsr	2,16
 11161   00193E  5057               	movf	Hue2Colour@cf^0,w,c
 11162   001940  26D9               	addwf	fsr2l,f,c
 11163   001942  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11164   001944  22DA               	addwfc	fsr2h,f,c
 11165   001946  CFDE F04F          	movff	postinc2,___flge@ff2
 11166   00194A  CFDE F050          	movff	postinc2,___flge@ff2+1
 11167   00194E  CFDE F051          	movff	postinc2,___flge@ff2+2
 11168   001952  CFDE F052          	movff	postinc2,___flge@ff2+3
 11169   001956  EC82  F01B         	call	___flge	;wreg free
 11170   00195A  B0D8               	btfsc	status,0,c
 11171   00195C  EFB2  F00C         	goto	u3471
 11172   001960  EFB4  F00C         	goto	u3470
 11173   001964                     u3471:
 11174   001964  EFE3  F00C         	goto	l3890
 11175   001968                     u3470:
 11176   001968  EE20 F010          	lfsr	2,16
 11177   00196C  5057               	movf	Hue2Colour@cf^0,w,c
 11178   00196E  26D9               	addwf	fsr2l,f,c
 11179   001970  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11180   001972  22DA               	addwfc	fsr2h,f,c
 11181   001974  CFDE F04B          	movff	postinc2,___flge@ff1
 11182   001978  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11183   00197C  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11184   001980  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11185   001984  0E00               	movlw	0
 11186   001986  6E4F               	movwf	___flge@ff2^0,c
 11187   001988  0E00               	movlw	0
 11188   00198A  6E50               	movwf	(___flge@ff2+1)^0,c
 11189   00198C  0ED2               	movlw	210
 11190   00198E  6E51               	movwf	(___flge@ff2+2)^0,c
 11191   001990  0E42               	movlw	66
 11192   001992  6E52               	movwf	(___flge@ff2+3)^0,c
 11193   001994  EC82  F01B         	call	___flge	;wreg free
 11194   001998  B0D8               	btfsc	status,0,c
 11195   00199A  EFD1  F00C         	goto	u3481
 11196   00199E  EFD3  F00C         	goto	u3480
 11197   0019A2                     u3481:
 11198   0019A2  EFE3  F00C         	goto	l3890
 11199   0019A6                     u3480:
 11200   0019A6                     
 11201                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 11202   0019A6  0E11               	movlw	low STR_9
 11203   0019A8  6E59               	movwf	Hue2Colour@colourname^0,c
 11204   0019AA  0E0E               	movlw	high STR_9
 11205   0019AC  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11206   0019AE                     
 11207                           ;colorfunctions.c: 95:         cf->colourindex=6;
 11208   0019AE  EE20 F014          	lfsr	2,20
 11209   0019B2  5057               	movf	Hue2Colour@cf^0,w,c
 11210   0019B4  26D9               	addwf	fsr2l,f,c
 11211   0019B6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11212   0019B8  22DA               	addwfc	fsr2h,f,c
 11213   0019BA  0E06               	movlw	6
 11214   0019BC  6EDE               	movwf	postinc2,c
 11215   0019BE  0E00               	movlw	0
 11216   0019C0  6EDD               	movwf	postdec2,c
 11217                           
 11218                           ;colorfunctions.c: 96:     }
 11219   0019C2  EF3B  F00D         	goto	l3900
 11220   0019C6                     l3890:
 11221   0019C6  0E00               	movlw	0
 11222   0019C8  6E4B               	movwf	___flge@ff1^0,c
 11223   0019CA  0E00               	movlw	0
 11224   0019CC  6E4C               	movwf	(___flge@ff1+1)^0,c
 11225   0019CE  0EC8               	movlw	200
 11226   0019D0  6E4D               	movwf	(___flge@ff1+2)^0,c
 11227   0019D2  0E41               	movlw	65
 11228   0019D4  6E4E               	movwf	(___flge@ff1+3)^0,c
 11229   0019D6  EE20 F010          	lfsr	2,16
 11230   0019DA  5057               	movf	Hue2Colour@cf^0,w,c
 11231   0019DC  26D9               	addwf	fsr2l,f,c
 11232   0019DE  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11233   0019E0  22DA               	addwfc	fsr2h,f,c
 11234   0019E2  CFDE F04F          	movff	postinc2,___flge@ff2
 11235   0019E6  CFDE F050          	movff	postinc2,___flge@ff2+1
 11236   0019EA  CFDE F051          	movff	postinc2,___flge@ff2+2
 11237   0019EE  CFDE F052          	movff	postinc2,___flge@ff2+3
 11238   0019F2  EC82  F01B         	call	___flge	;wreg free
 11239   0019F6  B0D8               	btfsc	status,0,c
 11240   0019F8  EF00  F00D         	goto	u3491
 11241   0019FC  EF02  F00D         	goto	u3490
 11242   001A00                     u3491:
 11243   001A00  EF31  F00D         	goto	l3898
 11244   001A04                     u3490:
 11245   001A04  EE20 F010          	lfsr	2,16
 11246   001A08  5057               	movf	Hue2Colour@cf^0,w,c
 11247   001A0A  26D9               	addwf	fsr2l,f,c
 11248   001A0C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11249   001A0E  22DA               	addwfc	fsr2h,f,c
 11250   001A10  CFDE F04B          	movff	postinc2,___flge@ff1
 11251   001A14  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11252   001A18  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11253   001A1C  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11254   001A20  0E00               	movlw	0
 11255   001A22  6E4F               	movwf	___flge@ff2^0,c
 11256   001A24  0E00               	movlw	0
 11257   001A26  6E50               	movwf	(___flge@ff2+1)^0,c
 11258   001A28  0E04               	movlw	4
 11259   001A2A  6E51               	movwf	(___flge@ff2+2)^0,c
 11260   001A2C  0E42               	movlw	66
 11261   001A2E  6E52               	movwf	(___flge@ff2+3)^0,c
 11262   001A30  EC82  F01B         	call	___flge	;wreg free
 11263   001A34  B0D8               	btfsc	status,0,c
 11264   001A36  EF1F  F00D         	goto	u3501
 11265   001A3A  EF21  F00D         	goto	u3500
 11266   001A3E                     u3501:
 11267   001A3E  EF31  F00D         	goto	l3898
 11268   001A42                     u3500:
 11269   001A42                     
 11270                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11271   001A42  0E26               	movlw	low STR_10
 11272   001A44  6E59               	movwf	Hue2Colour@colourname^0,c
 11273   001A46  0E0E               	movlw	high STR_10
 11274   001A48  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11275   001A4A                     
 11276                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11277   001A4A  EE20 F014          	lfsr	2,20
 11278   001A4E  5057               	movf	Hue2Colour@cf^0,w,c
 11279   001A50  26D9               	addwf	fsr2l,f,c
 11280   001A52  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11281   001A54  22DA               	addwfc	fsr2h,f,c
 11282   001A56  0E07               	movlw	7
 11283   001A58  6EDE               	movwf	postinc2,c
 11284   001A5A  0E00               	movlw	0
 11285   001A5C  6EDD               	movwf	postdec2,c
 11286                           
 11287                           ;colorfunctions.c: 101:     }
 11288   001A5E  EF3B  F00D         	goto	l3900
 11289   001A62                     l3898:
 11290   001A62  EE20 F014          	lfsr	2,20
 11291   001A66  5057               	movf	Hue2Colour@cf^0,w,c
 11292   001A68  26D9               	addwf	fsr2l,f,c
 11293   001A6A  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11294   001A6C  22DA               	addwfc	fsr2h,f,c
 11295   001A6E  0E08               	movlw	8
 11296   001A70  6EDE               	movwf	postinc2,c
 11297   001A72  0E00               	movlw	0
 11298   001A74  6EDD               	movwf	postdec2,c
 11299   001A76                     l3900:
 11300                           
 11301                           ;colorfunctions.c: 103:     return colourname;
 11302   001A76  C059  F057         	movff	Hue2Colour@colourname,?_Hue2Colour
 11303   001A7A  C05A  F058         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11304   001A7E  0012               	return		;funcret
 11305   001A80                     __end_of_Hue2Colour:
 11306                           	callstack 0
 11307                           
 11308 ;; *************** function ___flge *****************
 11309 ;; Defined at:
 11310 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  ff1             4   74[COMRAM] PTR unsigned char 
 11313 ;;  ff2             4   78[COMRAM] PTR unsigned char 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;		None               void
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;Total ram usage:       12 bytes
 11330 ;; Hardware stack levels used: 1
 11331 ;; Hardware stack levels required when called: 1
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_main
 11336 ;;		_White
 11337 ;;		_RGB2Hue
 11338 ;;		_Hue2Colour
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text65
 11343   003704                     __ptext65:
 11344                           	callstack 0
 11345   003704                     ___flge:
 11346                           	callstack 29
 11347   003704  0E00               	movlw	0
 11348   003706  144B               	andwf	___flge@ff1^0,w,c
 11349   003708  6E53               	movwf	??___flge^0,c
 11350   00370A  0E00               	movlw	0
 11351   00370C  144C               	andwf	(___flge@ff1+1)^0,w,c
 11352   00370E  6E54               	movwf	(??___flge+1)^0,c
 11353   003710  0E80               	movlw	128
 11354   003712  144D               	andwf	(___flge@ff1+2)^0,w,c
 11355   003714  6E55               	movwf	(??___flge+2)^0,c
 11356   003716  0E7F               	movlw	127
 11357   003718  144E               	andwf	(___flge@ff1+3)^0,w,c
 11358   00371A  6E56               	movwf	(??___flge+3)^0,c
 11359   00371C  5053               	movf	??___flge^0,w,c
 11360   00371E  1054               	iorwf	(??___flge+1)^0,w,c
 11361   003720  1055               	iorwf	(??___flge+2)^0,w,c
 11362   003722  1056               	iorwf	(??___flge+3)^0,w,c
 11363   003724  A4D8               	btfss	status,2,c
 11364   003726  EF97  F01B         	goto	u3291
 11365   00372A  EF99  F01B         	goto	u3290
 11366   00372E                     u3291:
 11367   00372E  EFA1  F01B         	goto	l3792
 11368   003732                     u3290:
 11369   003732  0E00               	movlw	0
 11370   003734  6E4B               	movwf	___flge@ff1^0,c
 11371   003736  0E00               	movlw	0
 11372   003738  6E4C               	movwf	(___flge@ff1+1)^0,c
 11373   00373A  0E00               	movlw	0
 11374   00373C  6E4D               	movwf	(___flge@ff1+2)^0,c
 11375   00373E  0E00               	movlw	0
 11376   003740  6E4E               	movwf	(___flge@ff1+3)^0,c
 11377   003742                     l3792:
 11378   003742  0E00               	movlw	0
 11379   003744  144F               	andwf	___flge@ff2^0,w,c
 11380   003746  6E53               	movwf	??___flge^0,c
 11381   003748  0E00               	movlw	0
 11382   00374A  1450               	andwf	(___flge@ff2+1)^0,w,c
 11383   00374C  6E54               	movwf	(??___flge+1)^0,c
 11384   00374E  0E80               	movlw	128
 11385   003750  1451               	andwf	(___flge@ff2+2)^0,w,c
 11386   003752  6E55               	movwf	(??___flge+2)^0,c
 11387   003754  0E7F               	movlw	127
 11388   003756  1452               	andwf	(___flge@ff2+3)^0,w,c
 11389   003758  6E56               	movwf	(??___flge+3)^0,c
 11390   00375A  5053               	movf	??___flge^0,w,c
 11391   00375C  1054               	iorwf	(??___flge+1)^0,w,c
 11392   00375E  1055               	iorwf	(??___flge+2)^0,w,c
 11393   003760  1056               	iorwf	(??___flge+3)^0,w,c
 11394   003762  A4D8               	btfss	status,2,c
 11395   003764  EFB6  F01B         	goto	u3301
 11396   003768  EFB8  F01B         	goto	u3300
 11397   00376C                     u3301:
 11398   00376C  EFC0  F01B         	goto	l3796
 11399   003770                     u3300:
 11400   003770  0E00               	movlw	0
 11401   003772  6E4F               	movwf	___flge@ff2^0,c
 11402   003774  0E00               	movlw	0
 11403   003776  6E50               	movwf	(___flge@ff2+1)^0,c
 11404   003778  0E00               	movlw	0
 11405   00377A  6E51               	movwf	(___flge@ff2+2)^0,c
 11406   00377C  0E00               	movlw	0
 11407   00377E  6E52               	movwf	(___flge@ff2+3)^0,c
 11408   003780                     l3796:
 11409   003780  AE4E               	btfss	(___flge@ff1+3)^0,7,c
 11410   003782  EFC5  F01B         	goto	u3311
 11411   003786  EFC7  F01B         	goto	u3310
 11412   00378A                     u3311:
 11413   00378A  EFD0  F01B         	goto	l3800
 11414   00378E                     u3310:
 11415   00378E  6C4B               	negf	___flge@ff1^0,c
 11416   003790  1E4C               	comf	(___flge@ff1+1)^0,f,c
 11417   003792  B0D8               	btfsc	status,0,c
 11418   003794  2A4C               	incf	(___flge@ff1+1)^0,f,c
 11419   003796  1E4D               	comf	(___flge@ff1+2)^0,f,c
 11420   003798  B0D8               	btfsc	status,0,c
 11421   00379A  2A4D               	incf	(___flge@ff1+2)^0,f,c
 11422   00379C  0E80               	movlw	128
 11423   00379E  564E               	subfwb	(___flge@ff1+3)^0,f,c
 11424   0037A0                     l3800:
 11425   0037A0  AE52               	btfss	(___flge@ff2+3)^0,7,c
 11426   0037A2  EFD5  F01B         	goto	u3321
 11427   0037A6  EFD7  F01B         	goto	u3320
 11428   0037AA                     u3321:
 11429   0037AA  EFE0  F01B         	goto	l954
 11430   0037AE                     u3320:
 11431   0037AE  6C4F               	negf	___flge@ff2^0,c
 11432   0037B0  1E50               	comf	(___flge@ff2+1)^0,f,c
 11433   0037B2  B0D8               	btfsc	status,0,c
 11434   0037B4  2A50               	incf	(___flge@ff2+1)^0,f,c
 11435   0037B6  1E51               	comf	(___flge@ff2+2)^0,f,c
 11436   0037B8  B0D8               	btfsc	status,0,c
 11437   0037BA  2A51               	incf	(___flge@ff2+2)^0,f,c
 11438   0037BC  0E80               	movlw	128
 11439   0037BE  5652               	subfwb	(___flge@ff2+3)^0,f,c
 11440   0037C0                     l954:
 11441   0037C0  0E00               	movlw	0
 11442   0037C2  1A4B               	xorwf	___flge@ff1^0,f,c
 11443   0037C4  0E00               	movlw	0
 11444   0037C6  1A4C               	xorwf	(___flge@ff1+1)^0,f,c
 11445   0037C8  0E00               	movlw	0
 11446   0037CA  1A4D               	xorwf	(___flge@ff1+2)^0,f,c
 11447   0037CC  0E80               	movlw	128
 11448   0037CE  1A4E               	xorwf	(___flge@ff1+3)^0,f,c
 11449   0037D0  0E00               	movlw	0
 11450   0037D2  1A4F               	xorwf	___flge@ff2^0,f,c
 11451   0037D4  0E00               	movlw	0
 11452   0037D6  1A50               	xorwf	(___flge@ff2+1)^0,f,c
 11453   0037D8  0E00               	movlw	0
 11454   0037DA  1A51               	xorwf	(___flge@ff2+2)^0,f,c
 11455   0037DC  0E80               	movlw	128
 11456   0037DE  1A52               	xorwf	(___flge@ff2+3)^0,f,c
 11457   0037E0  504F               	movf	___flge@ff2^0,w,c
 11458   0037E2  5C4B               	subwf	___flge@ff1^0,w,c
 11459   0037E4  5050               	movf	(___flge@ff2+1)^0,w,c
 11460   0037E6  584C               	subwfb	(___flge@ff1+1)^0,w,c
 11461   0037E8  5051               	movf	(___flge@ff2+2)^0,w,c
 11462   0037EA  584D               	subwfb	(___flge@ff1+2)^0,w,c
 11463   0037EC  5052               	movf	(___flge@ff2+3)^0,w,c
 11464   0037EE  584E               	subwfb	(___flge@ff1+3)^0,w,c
 11465   0037F0  B0D8               	btfsc	status,0,c
 11466   0037F2  EFFD  F01B         	goto	u3331
 11467   0037F6  EFFF  F01B         	goto	u3330
 11468   0037FA                     u3331:
 11469   0037FA  EF02  F01C         	goto	l3806
 11470   0037FE                     u3330:
 11471   0037FE  90D8               	bcf	status,0,c
 11472   003800  EF03  F01C         	goto	l959
 11473   003804                     l3806:
 11474   003804  80D8               	bsf	status,0,c
 11475   003806                     l959:
 11476   003806  0012               	return		;funcret
 11477   003808                     __end_of___flge:
 11478                           	callstack 0
 11479                           
 11480 ;; *************** function _ClickLEDOn *****************
 11481 ;; Defined at:
 11482 ;;		line 93 in file "colorclick.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;  power           1    wreg     unsigned char 
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;  power           1    0[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;Total ram usage:        1 bytes
 11501 ;; Hardware stack levels used: 1
 11502 ;; Hardware stack levels required when called: 1
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text66
 11511   0048BA                     __ptext66:
 11512                           	callstack 0
 11513   0048BA                     _ClickLEDOn:
 11514                           	callstack 29
 11515                           
 11516                           ;incstack = 0
 11517                           ;ClickLEDOn@power stored from wreg
 11518   0048BA  6E01               	movwf	ClickLEDOn@power^0,c
 11519   0048BC                     
 11520                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11521   0048BC  5001               	movf	ClickLEDOn@power^0,w,c
 11522   0048BE  B4D8               	btfsc	status,2,c
 11523   0048C0  EF64  F024         	goto	u3991
 11524   0048C4  EF66  F024         	goto	u3990
 11525   0048C8                     u3991:
 11526   0048C8  EF6B  F024         	goto	l4322
 11527   0048CC                     u3990:
 11528   0048CC                     
 11529                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11530   0048CC  827F               	bsf	127,1,c	;volatile
 11531                           
 11532                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11533   0048CE  8879               	bsf	121,4,c	;volatile
 11534                           
 11535                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11536   0048D0  8E7E               	bsf	126,7,c	;volatile
 11537                           
 11538                           ;colorclick.c: 99:     }
 11539   0048D2  EF76  F024         	goto	l460
 11540   0048D6                     l4322:
 11541   0048D6  5001               	movf	ClickLEDOn@power^0,w,c
 11542   0048D8  A4D8               	btfss	status,2,c
 11543   0048DA  EF71  F024         	goto	u4001
 11544   0048DE  EF73  F024         	goto	u4000
 11545   0048E2                     u4001:
 11546   0048E2  EF76  F024         	goto	l460
 11547   0048E6                     u4000:
 11548   0048E6                     
 11549                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11550   0048E6  927F               	bcf	127,1,c	;volatile
 11551                           
 11552                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11553   0048E8  9879               	bcf	121,4,c	;volatile
 11554                           
 11555                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11556   0048EA  9E7E               	bcf	126,7,c	;volatile
 11557   0048EC                     l460:
 11558   0048EC  0012               	return		;funcret
 11559   0048EE                     __end_of_ClickLEDOn:
 11560                           	callstack 0
 11561                           
 11562 ;; *************** function _HighISR *****************
 11563 ;; Defined at:
 11564 ;;		line 25 in file "interrupts.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;		None
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;Total ram usage:        0 bytes
 11583 ;; Hardware stack levels used: 1
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		Interrupt level 2
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	intcode
 11592   000008                     __pintcode:
 11593                           	callstack 0
 11594   000008                     _HighISR:
 11595                           	callstack 22
 11596                           
 11597                           ;incstack = 0
 11598   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11599   00000A                     
 11600                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11601   00000A  010E               	movlb	14	; () banked
 11602   00000C  AB33               	btfss	51,5,b	;volatile
 11603   00000E  EF0B  F000         	goto	i2u425_41
 11604   000012  EF0D  F000         	goto	i2u425_40
 11605   000016                     i2u425_41:
 11606   000016  EF14  F000         	goto	i2l686
 11607   00001A                     i2u425_40:
 11608   00001A                     
 11609                           ; BSR set to: 14
 11610                           ;interrupts.c: 29:     maxTime = 1;
 11611   00001A  0E00               	movlw	0
 11612   00001C  0100               	movlb	0	; () banked
 11613   00001E  6FEB               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11614   000020  0E01               	movlw	1
 11615   000022  6FEA               	movwf	_maxTime& (0+255),b	;volatile
 11616   000024                     
 11617                           ; BSR set to: 0
 11618                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11619   000024  010E               	movlb	14	; () banked
 11620   000026  9B33               	bcf	51,5,b	;volatile
 11621   000028                     i2l686:
 11622                           
 11623                           ; BSR set to: 14
 11624   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11625   00002A  0011               	retfie		f
 11626   00002C                     __end_of_HighISR:
 11627                           	callstack 0
 11628                           
 11629                           	psect	rparam
 11630   000000                     
 11631                           	psect	temp
 11632   00005F                     btemp:
 11633                           	callstack 0
 11634   00005F                     	ds	1
 11635   000000                     int$flags	set	btemp
 11636   000000                     wtemp8	set	btemp+1
 11637   000000                     ttemp5	set	btemp+1
 11638   000000                     ttemp6	set	btemp+4
 11639   000000                     ttemp7	set	btemp+8
 11640                           
 11641                           	psect	idloc
 11642                           
 11643                           ;Config register IDLOC0 @ 0x200000
 11644                           ;	unspecified, using default values
 11645   200000                     	org	2097152
 11646   200000  0FFF               	dw	4095
 11647                           
 11648                           ;Config register IDLOC1 @ 0x200002
 11649                           ;	unspecified, using default values
 11650   200002                     	org	2097154
 11651   200002  0FFF               	dw	4095
 11652                           
 11653                           ;Config register IDLOC2 @ 0x200004
 11654                           ;	unspecified, using default values
 11655   200004                     	org	2097156
 11656   200004  0FFF               	dw	4095
 11657                           
 11658                           ;Config register IDLOC3 @ 0x200006
 11659                           ;	unspecified, using default values
 11660   200006                     	org	2097158
 11661   200006  0FFF               	dw	4095
 11662                           
 11663                           ;Config register IDLOC4 @ 0x200008
 11664                           ;	unspecified, using default values
 11665   200008                     	org	2097160
 11666   200008  0FFF               	dw	4095
 11667                           
 11668                           ;Config register IDLOC5 @ 0x20000A
 11669                           ;	unspecified, using default values
 11670   20000A                     	org	2097162
 11671   20000A  0FFF               	dw	4095
 11672                           
 11673                           ;Config register IDLOC6 @ 0x20000C
 11674                           ;	unspecified, using default values
 11675   20000C                     	org	2097164
 11676   20000C  0FFF               	dw	4095
 11677                           
 11678                           ;Config register IDLOC7 @ 0x20000E
 11679                           ;	unspecified, using default values
 11680   20000E                     	org	2097166
 11681   20000E  0FFF               	dw	4095
 11682                           
 11683                           	psect	config
 11684                           
 11685                           ;Config register CONFIG1L @ 0x300000
 11686                           ;	External Oscillator mode Selection bits
 11687                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11688                           ;	Power-up default value for COSC bits
 11689                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11690   300000                     	org	3145728
 11691   300000  AA                 	db	170
 11692                           
 11693                           ;Config register CONFIG1H @ 0x300001
 11694                           ;	unspecified, using default values
 11695                           ;	Clock Out Enable bit
 11696                           ;	CLKOUTEN = 0x1, unprogrammed default
 11697                           ;	Clock Switch Enable bit
 11698                           ;	CSWEN = 0x1, unprogrammed default
 11699                           ;	Fail-Safe Clock Monitor Enable bit
 11700                           ;	FCMEN = 0x1, unprogrammed default
 11701   300001                     	org	3145729
 11702   300001  FF                 	db	255
 11703                           
 11704                           ;Config register CONFIG2L @ 0x300002
 11705                           ;	unspecified, using default values
 11706                           ;	Master Clear Enable bit
 11707                           ;	MCLRE = 0x1, unprogrammed default
 11708                           ;	Power-up Timer Enable bit
 11709                           ;	PWRTE = 0x1, unprogrammed default
 11710                           ;	Low-power BOR enable bit
 11711                           ;	LPBOREN = 0x1, unprogrammed default
 11712                           ;	Brown-out Reset Enable bits
 11713                           ;	BOREN = 0x3, unprogrammed default
 11714   300002                     	org	3145730
 11715   300002  FF                 	db	255
 11716                           
 11717                           ;Config register CONFIG2H @ 0x300003
 11718                           ;	unspecified, using default values
 11719                           ;	Brown Out Reset Voltage selection bits
 11720                           ;	BORV = 0x3, unprogrammed default
 11721                           ;	ZCD Disable bit
 11722                           ;	ZCD = 0x1, unprogrammed default
 11723                           ;	PPSLOCK bit One-Way Set Enable bit
 11724                           ;	PPS1WAY = 0x1, unprogrammed default
 11725                           ;	Stack Full/Underflow Reset Enable bit
 11726                           ;	STVREN = 0x1, unprogrammed default
 11727                           ;	Debugger Enable bit
 11728                           ;	DEBUG = 0x1, unprogrammed default
 11729                           ;	Extended Instruction Set Enable bit
 11730                           ;	XINST = 0x1, unprogrammed default
 11731   300003                     	org	3145731
 11732   300003  FF                 	db	255
 11733                           
 11734                           ;Config register CONFIG3L @ 0x300004
 11735                           ;	WDT Period Select bits
 11736                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11737                           ;	WDT operating mode
 11738                           ;	WDTE = OFF, WDT Disabled
 11739   300004                     	org	3145732
 11740   300004  9F                 	db	159
 11741                           
 11742                           ;Config register CONFIG3H @ 0x300005
 11743                           ;	unspecified, using default values
 11744                           ;	WDT Window Select bits
 11745                           ;	WDTCWS = 0x7, unprogrammed default
 11746                           ;	WDT input clock selector
 11747                           ;	WDTCCS = 0x7, unprogrammed default
 11748   300005                     	org	3145733
 11749   300005  FF                 	db	255
 11750                           
 11751                           ;Config register CONFIG4L @ 0x300006
 11752                           ;	unspecified, using default values
 11753                           ;	Write Protection Block 0
 11754                           ;	WRT0 = 0x1, unprogrammed default
 11755                           ;	Write Protection Block 1
 11756                           ;	WRT1 = 0x1, unprogrammed default
 11757                           ;	Write Protection Block 2
 11758                           ;	WRT2 = 0x1, unprogrammed default
 11759                           ;	Write Protection Block 3
 11760                           ;	WRT3 = 0x1, unprogrammed default
 11761                           ;	Write Protection Block 3
 11762                           ;	WRT4 = 0x1, unprogrammed default
 11763                           ;	Write Protection Block 3
 11764                           ;	WRT5 = 0x1, unprogrammed default
 11765                           ;	Write Protection Block 3
 11766                           ;	WRT6 = 0x1, unprogrammed default
 11767                           ;	Write Protection Block 3
 11768                           ;	WRT7 = 0x1, unprogrammed default
 11769   300006                     	org	3145734
 11770   300006  FF                 	db	255
 11771                           
 11772                           ;Config register CONFIG4H @ 0x300007
 11773                           ;	unspecified, using default values
 11774                           ;	Configuration Register Write Protection bit
 11775                           ;	WRTC = 0x1, unprogrammed default
 11776                           ;	Boot Block Write Protection bit
 11777                           ;	WRTB = 0x1, unprogrammed default
 11778                           ;	Data EEPROM Write Protection bit
 11779                           ;	WRTD = 0x1, unprogrammed default
 11780                           ;	Scanner Enable bit
 11781                           ;	SCANE = 0x1, unprogrammed default
 11782                           ;	Low Voltage Programming Enable bit
 11783                           ;	LVP = 0x1, unprogrammed default
 11784   300007                     	org	3145735
 11785   300007  FF                 	db	255
 11786                           
 11787                           ;Config register CONFIG5L @ 0x300008
 11788                           ;	unspecified, using default values
 11789                           ;	UserNVM Program Memory Code Protection bit
 11790                           ;	CP = 0x1, unprogrammed default
 11791                           ;	DataNVM Memory Code Protection bit
 11792                           ;	CPD = 0x1, unprogrammed default
 11793   300008                     	org	3145736
 11794   300008  FF                 	db	255
 11795                           
 11796                           ;Config register CONFIG5H @ 0x300009
 11797                           ;	unspecified, using default values
 11798   300009                     	org	3145737
 11799   300009  FF                 	db	255
 11800                           
 11801                           ;Config register CONFIG6L @ 0x30000A
 11802                           ;	unspecified, using default values
 11803                           ;	Table Read Protection Block 0
 11804                           ;	EBTR0 = 0x1, unprogrammed default
 11805                           ;	Table Read Protection Block 1
 11806                           ;	EBTR1 = 0x1, unprogrammed default
 11807                           ;	Table Read Protection Block 2
 11808                           ;	EBTR2 = 0x1, unprogrammed default
 11809                           ;	Table Read Protection Block 3
 11810                           ;	EBTR3 = 0x1, unprogrammed default
 11811                           ;	Table Read Protection Block 4
 11812                           ;	EBTR4 = 0x1, unprogrammed default
 11813                           ;	Table Read Protection Block 5
 11814                           ;	EBTR5 = 0x1, unprogrammed default
 11815                           ;	Table Read Protection Block 6
 11816                           ;	EBTR6 = 0x1, unprogrammed default
 11817                           ;	Table Read Protection Block 7
 11818                           ;	EBTR7 = 0x1, unprogrammed default
 11819   30000A                     	org	3145738
 11820   30000A  FF                 	db	255
 11821                           
 11822                           ;Config register CONFIG6H @ 0x30000B
 11823                           ;	unspecified, using default values
 11824                           ;	Boot Block Table Read Protection bit
 11825                           ;	EBTRB = 0x1, unprogrammed default
 11826   30000B                     	org	3145739
 11827   30000B  FF                 	db	255
 11828                           tosu	equ	0xFFF
 11829                           tosh	equ	0xFFE
 11830                           tosl	equ	0xFFD
 11831                           stkptr	equ	0xFFC
 11832                           pclatu	equ	0xFFB
 11833                           pclath	equ	0xFFA
 11834                           pcl	equ	0xFF9
 11835                           tblptru	equ	0xFF8
 11836                           tblptrh	equ	0xFF7
 11837                           tblptrl	equ	0xFF6
 11838                           tablat	equ	0xFF5
 11839                           prodh	equ	0xFF4
 11840                           prodl	equ	0xFF3
 11841                           indf0	equ	0xFEF
 11842                           postinc0	equ	0xFEE
 11843                           postdec0	equ	0xFED
 11844                           preinc0	equ	0xFEC
 11845                           plusw0	equ	0xFEB
 11846                           fsr0h	equ	0xFEA
 11847                           fsr0l	equ	0xFE9
 11848                           wreg	equ	0xFE8
 11849                           indf1	equ	0xFE7
 11850                           postinc1	equ	0xFE6
 11851                           postdec1	equ	0xFE5
 11852                           preinc1	equ	0xFE4
 11853                           plusw1	equ	0xFE3
 11854                           fsr1h	equ	0xFE2
 11855                           fsr1l	equ	0xFE1
 11856                           bsr	equ	0xFE0
 11857                           indf2	equ	0xFDF
 11858                           postinc2	equ	0xFDE
 11859                           postdec2	equ	0xFDD
 11860                           preinc2	equ	0xFDC
 11861                           plusw2	equ	0xFDB
 11862                           fsr2h	equ	0xFDA
 11863                           fsr2l	equ	0xFD9
 11864                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        18
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    130     160
    BANK1           256      0     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2805$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2752$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2752$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    White@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_Color2String
    _main->_Colour2Action
    _memoryUpdateTime->___fladd
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _Colour2Action->_White
    _White->___flge
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    _fullSpeedAhead->_setMotorPWM
    ___fladd->_getTimerValue
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_Hue2Colour
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge
    ___flge->___fladd

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  464823
                                             27 BANK0    103   103      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                    12     8      4    7190
                                             74 COMRAM    12     8      4
                            ___fladd
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2258
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   17613
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     863
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3477
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  414609
                                             90 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               20    10     10  225831
                                             86 COMRAM     4     4      0
                                              0 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fladd
                             ___flge
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4216
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1474
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2718
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    2707
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2740
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   30179
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   30179
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27364
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27364
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    8932
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   18888
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10172
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9540
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8280
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4073
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8483
                                             90 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3875
                                             86 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3142
                                             74 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___xxtofl (ARG)
           _getTimerValue (ARG)
             ___flmul
             ___xxtofl
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedReverse
       _reverseHalfSquare
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedReverse
         _reverseHalfSquare
       ___fladd
       ___flge
       _fullSpeedAhead
         _setMotorPWM
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BF       7       74.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BD      62        0.0%
DATA                 0      0     1BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 15:38:23 2023

                    _color_read_Red 4550                        ___fldiv@aexp 006C  
                      ___fldiv@bexp 006B                        ___fldiv@sign 0064  
                   _color_read_Blue 4640                                  l30 4948  
                                l33 496E                                  l42 4A5E  
                                l27 4946                                  l36 4A68  
                                l45 4A3E                                  l39 4A54  
                                l48 4802                     ??_getTimerValue 0037  
               ___wmul@multiplicand 0003                      ?_rotate180left 0020  
                  _color_read_Clear 45F0                    _color_read_Green 45A0  
                 ??_Interrupts_init 0001                         Green_L90@mL 0021  
                       Green_L90@mR 0023                                 l300 44FC  
                               l133 2BE4                                 l310 3BA8  
                               l320 3D96                                 l305 3B00  
                               l402 4880                                 l243 3260  
                               l315 3CF2                                 l147 2D8A  
                               l252 3C4C                                 l236 3FE8  
                               l253 3C4E                                 l325 1FAE  
                               l263 3EC2                                 l408 48B8  
                               l352 23A8                                 l336 21B6  
                               l600 2F40                                 l273 4282  
                               l258 3F58                                 l282 454E  
                               l290 42FE                                 l442 49FA  
                               l451 468E                                 l460 48EC  
                               l276 40FC                                 l268 4202  
                               l285 4182                                 l445 459E  
                               l454 463E                                 l279 4072  
                               l295 437A                                 l439 4842  
                               l448 45EE                                 l491 4A72  
                               l475 4A32                                 l555 10B0  
                               l563 157C                                 l387 49DA  
                               l635 491C                                 l396 49FE  
                               l581 1A7E                                 l549 35FC  
                               l494 4450                                 l638 3E2C  
                               l399 4A12                                 l680 4A4A  
                               l488 49B8                                 l689 4994  
                               l954 37C0                                 l948 3A58  
                               l959 3806                                 l986 3702  
            memoryUpdateMovement@cf 0001                                 wreg 000FE8  
             ?_memoryUpdateMovement 0001                        ___flmul@aexp 002B  
                      ___flmul@bexp 002C                        ___flmul@sign 0026  
                      ___flmul@temp 0031                        ___flmul@prod 002D  
                   __end_of_RGB2Hue 157E                        ___fltol@exp1 000A  
                              l1310 2664                                l1303 246E  
                              l1320 2794                                l1312 26DC  
                              l1217 1C6E                                l1313 26CA  
                              l1402 343C                                l1234 1D88  
                              l1226 1F3E                                l1218 1C5C  
                              l1243 1E58                                l1219 1C22  
                              l1307 27D2                                l3100 3914  
                              l1404 3444                                l3020 43A6  
                              l1180 43E6                                l3012 437C  
                              l1244 1E46                                l1413 34F6  
                              l3102 3932                                l3110 469C  
                              l1430 477A                                l3030 43DA  
                              l3022 43B4                                l3014 4384  
                              l3006 4970                                l1351 3030  
                              l1271 2B6E                                l3104 3968  
                              l3112 46A0                                l3200 349A  
                              l1424 33BA                                l4000 471C  
                              l3032 43E0                                l3024 43BA  
                              l3016 4396                                l3008 498C  
                              l3040 317A                                l3120 3E4E  
                              l1344 2F98                                l1273 29CE  
                              l4010 4898                                l1442 39AE  
                              l3114 46D2                                l3202 34D0  
                              l3210 3832                                l3026 43D0  
                              l3018 439E                                l3042 317E  
                              l3034 30F6                                l3050 3BAA  
                              l3130 3E6E                                l3122 3E5A  
                              l1282 2A14                                l1187 43EE  
                              l1347 30F4                                l1259 47C0  
                              l4012 48A0                                l4004 4882  
                              l3108 4690                                l3204 34D4  
                              l3220 3884                                l3028 43D8  
                              l3044 31C0                                l3036 3112  
                              l3060 3BF4                                l3052 3BB0  
                              l3140 3EAC                                l3132 3E82  
                              l3124 3E66                                l3300 24AE  
                              l1284 2A8C                                l1276 2992  
                              l4100 2926                                l1453 4A74  
                              l1285 2A7A                                l4006 4886  
                              l3206 34D8                                l3222 3896  
                              l3214 383E                                l3046 31DC  
                              l3038 3166                                l3150 422C  
                              l3142 4204                                l3062 3C00  
                              l3054 3BC8                                l3070 3EC4  
                              l3134 3E8E                                l3118 3E2E  
                              l3310 24FE                                l3302 24B8  
                              l1358 308C                                l4110 296E  
                              l4102 2936                                l3230 4958  
                              l4014 49DE                                l4030 4686  
                              l4022 45A0                                l1463 38E4  
                              l1367 472C                                l4008 4894  
                              l3224 38C0                                l3216 384C  
                              l3208 3808                                l3048 3220  
                              l3160 426C                                l3152 4240  
                              l3144 4224                                l3064 3C0C  
                              l3056 3BD2                                l3072 3EE4  
                              l3136 3E9A                                l3240 4044  
                              l3232 3FEA                                l3320 2540  
                              l3312 250A                                l3304 24CE  
                              l3400 2FD2                                l4120 29BC  
                              l4112 2982                                l4104 2946  
                              l4040 27D4                                l4200 35FE  
                              l4024 45E6                                l4016 4550  
                              l3218 3868                                l3154 424C  
                              l3058 3BEA                                l3066 3C1C  
                              l3250 4112                                l3090 3F3E  
                              l3082 3F04                                l3074 3EF0  
                              l3170 40CE                                l3162 4074  
                              l3138 3EA8                                l3242 4058  
                              l3234 3FEC                                l3330 25A2  
                              l3322 2550                                l3314 2518  
                              l3306 24DA                                l3410 3026  
                              l3402 2FDA                                l4130 2A04  
                              l4122 29CC                                l4114 2990  
                              l4106 2956                                l4050 2812  
                              l4042 27E2                                l4210 3654  
                              l4202 3614                                l4034 45F0  
                              l4018 4596                                l1459 46DE  
                              l3180 33D6                                l3156 4258  
                              l3068 3C34                                l3252 412A  
                              l3092 3F42                                l3084 3F18  
                              l3076 3EFC                                l3172 40E2  
                              l3164 4076                                l3244 4070  
                              l3236 4000                                l3500 4184  
                              l3340 264A                                l3332 25BE  
                              l3324 256A                                l3316 2524  
                              l3308 24F2                                l3260 23B6  
                              l3420 309C                                l3412 3062  
                              l3404 2FE6                                l4140 2A44  
                              l4132 2A12                                l4124 29DE  
                              l4116 299C                                l4108 295E  
                              l4060 2842                                l4052 2822  
                              l4044 27F0                                l4212 3664  
                              l3228 4948                                l4028 4640  
                              l4036 4636                                l4300 3F94  
                              l3094 38E6                                l3190 341A  
                              l3182 33E8                                l3158 4268  
                              l3254 4156                                l3086 3F24  
                              l3174 40FA                                l3166 408A  
                              l3246 44FE                                l3238 4018  
                              l3510 41C0                                l3502 41A4  
                              l3350 2686                                l3342 2654  
                              l3334 25E8                                l3326 257A  
                              l3318 2534                                l3270 23F6  
                              l3262 23C4                                l3430 30E4  
                              l3422 30A0                                l3414 306E  
                              l3406 3018                                l4150 2AB6  
                              l4142 2A72                                l4126 29F4  
                              l4134 2A24                                l4118 29BA  
                              l4070 2878                                l4062 2848  
                              l4054 2824                                l4046 27F2  
                              l4222 368E                                l4214 3668  
                              l4206 3628                                l4310 3FD0  
                              l4302 3FB8                                l4320 48CC  
                              l3096 38F8                                l3192 3458  
                              l3184 33F0                                l3176 33BC  
                              l3440 32A2                                l3256 416A  
                              l3248 40FE                                l3088 3F30  
                              l3168 40A2                                l3520 4284  
                              l3600 1ACE                                l3512 41CC  
                              l3360 26F8                                l3352 2694  
                              l3344 2662                                l3336 261E  
                              l3328 2596                                l3280 2426  
                              l3272 23FC                                l3264 23C6  
                              l3424 30C4                                l3416 307C  
                              l3408 301A                                l4400 2DE2  
                              l4160 2B2E                                l4152 2AE0  
                              l4136 2A32                                l4128 29FA  
                              l4080 28B8                                l4072 2888  
                              l4064 2856                                l4048 2802  
                              l4056 282C                                l4240 36F2  
                              l4232 36B6                                l4224 3698  
                              l4216 3676                                l4208 3652  
                              l4312 3FDA                                l4304 3FC2  
                              l4322 48D6                                l3098 390A  
                              l3194 346C                                l3186 3404  
                              l3178 33CE                                l3450 3330  
                              l3442 32A6                                l3434 3262  
                              l3530 4352                                l3522 4296  
                              l3610 1B00                                l3602 1AD6  
                              l3514 41D8                                l3370 2762  
                              l3362 2706                                l3354 26C2  
                              l3346 2674                                l3338 262C  
                              l3290 245E                                l3282 2428  
                              l3274 240C                                l3266 23D6  
                              l3258 23AA                                l3426 30D4  
                              l3418 309A                                l4410 2E6A  
                              l4402 2DFA                                l4170 2B64  
                              l4162 2B4A                                l4146 2A9C  
                              l4154 2AE4                                l4138 2A36  
                              l4082 28C8                                l4090 28E8  
                              l4074 288A                                l4066 2858  
                              l4058 283C                                l4234 36C2  
                              l4226 36A2                                l4330 35A8  
                              l4314 3FDC                                l4306 3FC4  
                              l4250 49CA                                l4324 48E6  
                              l3196 3470                                l3188 340C  
                              l3452 3338                                l3444 32CA  
                              l3436 3286                                l4340 4874  
                              l3532 44AA                                l3524 42D6  
                              l3540 3A6C                                l3700 1CD8  
                              l3620 1B36                                l3612 1B06  
                              l3604 1AE6                                l3516 41E8  
                              l3508 41AC                                l3380 27B8  
                              l3372 277C                                l3364 2730  
                              l3348 2682                                l3292 247E  
                              l3284 2438                                l3276 2412  
                              l3268 23E6                                l3428 30E2  
                              l4420 2EFA                                l4412 2E8A  
                              l4404 2E1A                                l4164 2B4E  
                              l4156 2AFE                                l4148 2AA8  
                              l4092 28F8                                l4084 28D0  
                              l4068 2868                                l4076 2892  
                              l4180 478C                                l4236 36D2  
                              l4260 4808                                l4332 35C4  
                              l4316 3FE6                                l4308 3FCE  
                              l4252 49D4                                l4244 49BA  
                              l4500 2CE8                                l4318 48BC  
                              l3198 348E                                l3454 3348  
                              l3446 3300                                l3438 3294  
                              l3462 3392                                l3534 44BC  
                              l3526 4300                                l3550 3B02  
                              l3542 3A94                                l3702 1CDC  
                              l3710 1CFC                                l3630 1B72  
                              l3622 1B46                                l3614 1B14  
                              l3606 1AEC                                l3518 41EC  
                              l3374 2798                                l3382 27BE  
                              l3358 26EC                                l3366 2734  
                              l3294 248E                                l3286 2448  
                              l3278 2418                                l3390 2F54  
                              l4422 2F12                                l4414 2EA2  
                              l4406 2E32                                l4166 2B5C  
                              l4158 2B14                                l4094 28F8  
                              l4086 28D4                                l4078 28A2  
                              l4190 3A1C                                l4238 36E2  
                              l4350 0E9A                                l3470 4A64  
                              l4270 4838                                l4262 4812  
                              l4334 35E0                                l4326 34F8  
                              l4254 49D6                                l4246 49BE  
                              l4342 3D98                                l4510 2D1A  
                              l4502 2CF4                                l4430 2B74  
                              l3800 37A0                                l3448 3324  
                              l4336 4844                                l3536 44E8  
                              l3528 4312                                l3552 3B14  
                              l3560 3B80                                l3544 3AAC  
                              l3712 1D22                                l3720 1D78  
                              l3704 1CEA                                l3640 1B90  
                              l3632 1B80                                l3624 1B48  
                              l3616 1B16                                l3608 1AFE  
                              l3384 27C2                                l3376 27A8  
                              l3368 274E                                l3288 2458  
                              l3392 2F62                                l4424 2F12  
                              l4416 2EC2                                l4408 2E52  
                              l4280 4A26                                l4168 2B62  
                              l4192 3A2C                                l4184 39B0  
                              l4360 0F9C                                l4352 0EE2  
                              l3480 4A36                                l4272 483A  
                              l4264 4822                                l3472 4A4C  
                              l4328 3590                                l4256 49D8  
                              l4248 49C8                                l4344 3DD0  
                              l4520 2D6C                                l4512 2D36  
                              l4504 2CFA                                l4440 2B88  
                              l4432 2B78                                l3802 37AE  
                              l3458 3380                                l3810 472E  
                              l4338 4858                                l3570 3D06  
                              l3562 3C50                                l3554 3B3C  
                              l3546 3AC0                                l3538 3A5A  
                              l3730 1DCC                                l3722 1D9E  
                              l3714 1D56                                l3706 1CEC  
                              l3650 1BA4                                l3642 1B94  
                              l3634 1B84                                l3618 1B26  
                              l3626 1B50                                l3378 27B6  
                              l3298 24A2                                l3394 2FA8  
                              l4418 2EDA                                l4282 4A40  
                              l4098 290C                                l4194 3A50  
                              l4186 39DE                                l4178 477C  
                              l4370 10F8                                l4362 0FC4  
                              l4354 0F04                                l4290 49AA  
                              l3482 4A3A                                l4274 483C  
                              l4266 482C                                l4258 4804  
                              l3490 47D8                                l3474 4A50  
                              l4346 3E04                                l4522 2D70  
                              l4514 2D42                                l4506 2D00  
                              l4450 2BA2                                l4442 2B88  
                              l4434 2B7C                                l3804 37FE  
                              l3900 1A76                                l3812 473A  
                              l3572 3D5A                                l3564 3C62  
                              l3556 3B54                                l3548 3AD8  
                              l3740 1DF6                                l3732 1DDA  
                              l3724 1DAE                                l3716 1D58  
                              l3708 1CF6                                l3660 1BB8  
                              l3652 1BA8                                l3644 1B98  
                              l3636 1B88                                l3628 1B60  
                              l3396 2FBE                                l3388 2F44  
                              l4196 3A56                                l4188 39EE  
                              l4380 12C6                                l4372 1140  
                              l4364 100C                                l4356 0F0E  
                              l4348 0E52                                l4292 49B6  
                              l4284 4996                                l3820 491E  
                              l3468 4A60                                l3476 4A56  
                              l4276 483E                                l4268 4836  
                              l3492 47FE                                l3484 47C4  
                              l4508 2D0E                                l4524 2D76  
                              l4460 2BC2                                l4452 2BAA  
                              l4444 2B94                                l4436 2B80  
                              l4428 2B70                                l3806 3804  
                              l3582 49FE                                l3814 4756  
                              l3566 3CB6                                l3558 3B68  
                              l3750 1E28                                l3742 1E06  
                              l3734 1DDC                                l3718 1D68  
                              l3670 1C0A                                l3662 1BBC  
                              l3654 1BAC                                l3646 1B9C  
                              l3638 1B8C                                l3590 1A9A  
                              l3574 43F0                                l3910 1F86  
                              l4390 152E                                l4382 1384  
                              l4374 1164                                l4366 1058  
                              l4358 0F54                                l4286 499E  
                              l3830 4934                                l3822 4928  
                              l3478 4A5A                                l4278 4840  
                              l3494 4800                                l3486 47C8  
                              l4294 3F5A                                l4518 2D58  
                              l4470 2BE0                                l4462 2BC6  
                              l4454 2BB2                                l4446 2B9A  
                              l4438 2B84                                l3840 160A  
                              l3832 157E                                l3584 4A0E  
                              l3816 4772                                l3568 3CF4  
                              l3760 1E82                                l3752 1E3E  
                              l3736 1DEA                                l3728 1DC2  
                              l3744 1E08                                l3680 1C4E  
                              l3672 1C1A                                l3656 1BB0  
                              l3648 1BA0                                l3664 1BC0  
                              l3592 1A9C                                l3576 43F6  
                              l3920 1FB0                                l3912 1F8C  
                              l3904 1F40                                l4384 13EE  
                              l4376 1232                                l4368 1086  
                              l4288 49A8                                l3824 492E  
                              l3488 47D0                                l4296 3F6A  
                              l4392 48EE                                l4480 2C1E  
                              l4472 2BF2                                l4464 2BCE  
                              l4456 2BBA                                l4448 2B9E  
                              l3850 16BA                                l3842 161E  
                              l3834 1586                                l3498 4A6A  
                              l3770 1EFE                                l3762 1EBC  
                              l3738 1DF2                                l3746 1E16  
                              l3682 1C50                                l3674 1C30  
                              l3666 1BC4                                l3658 1BB4  
                              l3594 1AAC                                l3586 1A80  
                              l3578 4404                                l3930 2042  
                              l3922 1FC8                                l3914 1F94  
                              l3906 1F46                                l4394 2D8E  
                              l4386 14AC                                l4378 127A  
                              l3826 4930                                l4298 3F90  
                              l4490 2C9C                                l4482 2C36  
                              l4474 2C0A                                l4466 2BD6  
                              l4458 2BBE                                l3860 1794  
                              l3852 16F8                                l3844 165C  
                              l3836 15C4                                l3780 1F1E  
                              l3772 1F02                                l3756 1E68  
                              l3764 1EBE                                l3748 1E1A  
                              l3692 1CA0                                l3684 1C5A  
                              l3676 1C3C                                l3668 1BEE  
                              l3596 1ABC                                l3588 1A8C  
                              l3940 20E4                                l3932 2068  
                              l3924 1FEE                                l3916 1F9C  
                              l3908 1F6E                                l4396 2DAC  
                              l4388 1512                                l3828 4932  
                              l4492 2CA2                                l4484 2C42  
                              l4476 2C0E                                l4468 2BDE  
                              l3790 3732                                l3870 186E  
                              l3862 17D2                                l3854 1736  
                              l3846 169A                                l3838 1602  
                              l3782 1F2C                                l3774 1F10  
                              l3766 1ECE                                l3758 1E74  
                              l3694 1CB0                                l3686 1C7C  
                              l3678 1C40                                l3598 1ACC  
                              l3950 2178                                l3942 20FC  
                              l3934 2080                                l3926 2006  
                              l4398 2DC4                                l4494 2CA8  
                              l4486 2C56                                l4478 2C14  
                              l3792 3742                                l3880 1912  
                              l3872 1876                                l3864 17DA  
                              l3856 173E                                l3848 16A2  
                              l3784 1F2E                                l3776 1F16  
                              l3768 1EDE                                l3696 1CBE  
                              l3688 1C8C                                l3960 21CE  
                              l3952 219E                                l3944 2122  
                              l3936 20A6                                l3928 202A  
                              l4496 2CC2                                l4488 2C88  
                              l3794 3770                                l3890 19C6  
                              l3882 192A                                l3874 188E  
                              l3866 17F2                                l3858 1756  
                              l3778 1F18                                l3698 1CCC  
                              l3970 2298                                l3962 21E2  
                              l3946 213A                                l3938 20BE  
                              l3954 21B6                                l4498 2CD6  
                              l3796 3780                                l3788 3704  
                              l3892 1A04                                l3884 1968  
                              l3876 18CC                                l3868 1830  
                              l3980 235A                                l3956 21B8  
                              l3948 2160                                l3798 378E  
                              l3894 1A42                                l3886 19A6  
                              l3878 190A                                l3990 23A6  
                              l3974 22E6                                l3966 2210  
                              l3958 21CA                                l3896 1A4A  
                              l3888 19AE                                l3992 46E0  
                              l3976 22FA                                l3968 2224  
                              l3984 2366                                l3898 1A62  
                              l3994 46F0                                l3986 237A  
                              l3978 2346                                l3996 46F8  
                              l3988 238E                                l3998 4700  
                              STR_1 0E01                                STR_2 0E10  
                              STR_3 0E4C                                STR_4 0E3D  
                              STR_5 0E1C                                STR_6 0E36  
                              STR_7 0E43                                STR_8 0E2F  
                              STR_9 0E11                                u2200 3BEA  
                              u3000 1C06                                u2201 3BE6  
                              u3001 1C00                                u2210 3C34  
                              u3010 1C08                                u2211 3C30  
                              u2140 4396                                u2220 3C4C  
                              u2300 3EC2                                u3100 1D22  
                              u3020 1C30                                u2141 4392  
                              u2221 3C48                                u2301 3EBE  
                              u3101 1D1E                                u3021 1C2C  
                              u2150 43B4                                u2310 4282  
                              u2230 3F58                                u3110 1D68  
                              u3030 1C4E                                u2151 43B0  
                              u2311 427E                                u2231 3F54  
                              u3111 1D64                                u3031 1C4A  
                              u4000 48E6                                u2240 38F8  
                              u2400 3868                                u2160 43D0  
                              u3200 1E54                                u3120 1D9E  
                              u3040 1C6E                        _BAUD4CONbits 000EE9  
                              u4001 48E2                                u2241 38F4  
                              u2321 33C6                                u2401 3864  
                              u2161 43CC                                u3201 1E50  
                              u3121 1D9A                                u3041 1C6A  
                              u2250 390A                                u2330 33E8  
                              u2410 3884                                u2170 3112  
                              u3210 1E68                                u3130 1DAE  
                              u3050 1C7C                                u4010 0E9A  
                              u2251 3906                                u2331 33E4  
                              u2411 3880                                u2171 310E  
                              u3211 1E64                                u3131 1DAA  
                              u3051 1C78                                u4011 0E96  
                              u3300 3770                                u2260 3932  
                              u2340 341A                                u2420 3896  
                              u2180 31DC                                u3220 1E82  
                              u3140 1DDA                                u3060 1C8C  
                              u2500 2438                                u4100 12C6  
                              u4020 0EE2                                u3301 376C  
                              u2261 392E                                u2341 3416  
                              u2421 3892                                u2181 31D8  
                              u3221 1E7E                                u3141 1DD6  
                              u3061 1C88                                u2501 2434  
                              u4101 12C2                                u4021 0EDE  
                              u3310 378E                                u2270 3968  
                              u2350 3438                                u2430 38C0  
                              u2190 3BC8                                u3230 1EBC  
                              u3150 1DEA                                u3070 1CBE  
                              u2510 2448                                u4110 152E  
                              u4030 0F54                                u3311 378A  
                              u2271 3964                                u2351 3434  
                              u2431 38BC                                u2191 3BC4  
                              u3231 1EB8                                u3151 1DE6  
                              u3071 1CBA                                u2511 2444  
                              u4111 152A                                u4031 0F50  
                              u3320 37AE                                u3400 1736  
                              u2280 46C2                                u2360 348E  
                              u3240 1ECE                                u3160 1E06  
                              u3080 1CCC                                u2600 26EC  
                              u2520 247E                                u4120 2DAC  
                              u4040 0F9C                                u2440 4958  
                              u4200 2C88                                u3321 37AA  
                              u3401 1732                                u2361 348A  
                              u3241 1ECA                                u3161 1E02  
                              u3081 1CC8                                u2601 26E8  
                              u2521 247A                                u4121 2DA8  
                              u4041 0F98                                u2441 4954  
                              u4201 2C84                                u3330 37FE  
                              u3410 1794                                u2290 46D2  
                              u2370 34BC                                u3250 1EDE  
                              u3170 1E16                                u3090 1CEA  
                              u2610 2706                                u2530 248E  
                              u4130 2DE2                                u4050 100C  
                              u2450 496E                                u4210 2CE8  
                              _T2PR 000FBC                                u3331 37FA  
                              u3411 1790                                u2291 46CE  
                              u3251 1EDA                                u3171 1E12  
                              u3091 1CE6                                u2611 2702  
                              u2531 248A                                u4131 2DDE  
                              u4051 1008                                u2451 496A  
                              u4211 2CE4                                u3500 1A42  
                              u3420 17D2                                u2380 34F6  
                              u3340 4772                                u3260 1EFE  
                              u3180 1E28                                u2620 274E  
                              u2540 2608                                u2460 23C4  
                              u2700 307C                                u4140 2E1A  
                              u4060 1058                                u4220 2D58  
                              u3501 1A3E                                u3421 17CE  
                              u2381 34F2                                u3341 476E  
                              u3261 1EFA                                u3181 1E24  
                              u2621 274A                                u2461 23C0  
                              u2701 3078                                u4141 2E16  
                              u4061 1054                                u4221 2D54  
                              u3430 1830                                u3350 15C4  
                              u2390 3832                                u3270 1F10  
                              u3190 1E3E                                u2630 277C  
                              u2550 2662                                u2470 23D6  
                              u2710 308C                                u3510 1FAA  
                              u4150 2E52                                u4070 10F8  
                              u4230 2D6C                                u3431 182C  
                              u3351 15C0                                u2287 46B8  
                              u2391 382E                                u3271 1F0C  
                              u3191 1E3A                                u2631 2778  
                              u2551 265E                                u2471 23D2  
                              u2711 3088                                u3511 1FA6  
                              u4151 2E4E                                u4071 10F4  
                              u4231 2D68                                u3440 186E  
                              u3360 1602                                u3280 1F2C  
                              u2640 27B6                                u2560 2682  
                              u2480 23E6                                u2720 309A  
                              u3600 220C                                u3520 1FEE  
                              u4160 2E8A                                u4080 1140  
                              u4240 2D8A                                u3441 186A  
                              u3361 15FE                                u2377 34B2  
                              u3281 1F28                                u2641 27B2  
                              u2561 267E                                u2545 25FE  
                              u2481 23E2                                u2721 3096  
                              u3601 2208                                u3521 1FEA  
                              u4161 2E86                                u4081 113C  
                              u4241 2D86                                u3290 3732  
                              u3450 18CC                                u3370 165C  
                              u2810 4202                                u2570 2694  
                              u2490 2426                                u2730 30D4  
                              u2650 2F54                                u3610 2294  
                              u3530 202A                                u4170 2EC2  
                              u4090 127A                                u3291 372E  
                              u3451 18C8                                u3371 1658  
                              u2811 41FE                                u2571 2690  
                              u2491 2422                                u2731 30D0  
                              u2651 2F50                                u3611 2290  
                              u3531 2026                                u4307 1FBA  
                              u4171 2EBE                                u4091 1276  
                              u3460 190A                                u3380 169A  
                              u2820 4296                                u2900 1A9A  
                              u2580 26C2                                u2740 30E2  
                              u2660 2F62                                u3620 22E2  
                              u3540 2068                                u4180 2EFA  
                              u3700 2868                                u3461 1906  
                              u3381 1696                                u2821 4292  
                              u2901 1A96                                u2581 26BE  
                              u2741 30DE                                u2661 2F5E  
                              u4317 2398                                u3621 22DE  
                              u3541 2064                                u4181 2EF6  
                              u3701 2864                                u3470 1968  
                              u3390 16F8                                u2750 3286  
                              u2830 4312                                u2910 1AAC  
                              u2590 26D8                                u2670 2FBE  
                              u3630 2346                                u3550 20A6  
                              u3710 2878                                u4190 2BF2  
                              u3471 1964                                u3391 16F4  
                              u2751 3282                                u4407 40C0  
                              u2831 430E                                u2911 1AA8  
                              u4327 41DE                                u2591 26D4  
                              u2671 2FBA                                u3631 2342  
                              u3551 20A2                                u3711 2874  
                              u4191 2BEE                                u3480 19A6  
                              u2760 32CA                                u2840 44BC  
                              u2920 1ABC                                u2680 3014  
                              u3640 237A                                u3560 20E4  
                              u3800 2A32                                u3720 28B8  
                              u2808 47EE                                u3481 19A2  
                              u2761 32C6                                u4417 40EC  
                              u2841 44B8                                u4337 3A9E  
                              u2921 1AB8                                u2681 3010  
                              u3641 2376                                u3561 20E0  
                              u3801 2A2E                                u3721 28B4  
                              u3490 1A04                                u3650 48B8  
                              u2770 3300                                u2850 3A6C  
                              u2930 1AFE                                u2690 305E  
                              u3570 2122                                u3810 2A44  
                              u3730 28F8                                u3491 1A00  
                              u3651 48B4                                u2771 32FC  
                              u4427 3F32                                u4347 3B46  
                              u2851 3A68                                u2931 1AFA  
                              u2691 305A                                u3571 211E  
                              u3811 2A40                                u3731 28F4  
                              u4267 2BFE                                u2780 3324  
                              u2860 3B14                                u2940 1B14  
                              u3580 2160                                u3820 2A72  
                              u3740 296E                                u3660 27F0  
                              u3900 3A1C                                u2781 3320  
                              u4437 411C                                u4357 400A  
                              u2861 3B10                                u2941 1B10  
                              u3581 215C                                u3821 2A6E  
                              u3741 296A                                u3661 27EC  
                              u3901 3A18                                u4277 2CB4  
                              u2870 3C62                                u2950 1B26  
                              u3590 219E                                u3830 2A88  
                              u3750 2990                                u3670 2802  
                              u3910 3A50                                u2790 47EC  
                              u4447 4148                                u4367 4036  
                              u2871 3C5E                                u2951 1B22  
                              u3591 219A                                u3831 2A84  
                              u3751 298C                                u3671 27FE  
                              u3911 3A4C                                u4287 4818  
                              u2791 47E4                                u2880 3D06  
                              u2960 1B36                                u3840 2A9C  
                              u3760 29BA                                u3680 2812  
                              u3920 3614                                u4457 4174  
                              u4377 4062                                u2881 3D02  
                              u2961 1B32                                u4297 1F78  
                              u3841 2A98                                u3761 29B6  
                              u3681 280E                                u3921 3610  
                              u2890 4A0E                                u2970 1B72  
                              u3850 2AB6                                u3770 29DE  
                              u3690 2856                                u3930 3648  
                              u2891 4A0A                                u4467 3C12  
                              u4387 3E9C                                u2971 1B6E  
                              u3851 2AB2                                u3771 29DA  
                              u3691 2852                                u2980 1B80  
                              u3860 2AFE                                u3780 29F4  
                              u3940 3676                                u4477 425E  
                              u4397 4094                                u2981 1B7C  
                              u3861 2AFA                                u3781 29F0  
                              u3941 3672                                u2990 1BEE  
                              u3870 2B2E                                u3790 2A12  
                              u3950 368A                                u4487 489A  
                              u2991 1BEA                                u3871 2B2A  
                              u3791 2A0E                                u3951 3686  
                              u3935 363E                                u3880 2B5C  
                              u3960 36B2                                u3881 2B58  
                              u3961 36AE                                u3890 39DE  
                              u3970 36D2                                u3891 39DA  
                              u3971 36CE                                u3980 36E2  
                              u3981 36DE                                u3990 48CC  
                              u3991 48C8                 reverseHalfSquare@mL 001B  
               reverseHalfSquare@mR 001D                                _dbuf 0100  
                              _main 2B70                                _prec 00E4  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              _stoa 33BC                                btemp 005F  
                              _stop 3BAA                          _ClickLEDOn 48BA  
          memoryUpdateTime@timerVal 0053                                prodh 000FF4  
                              prodl 000FF3                                start 002C  
                   ___fldiv@new_exp 0065             __end_of_Yellow_rev1_R90 3B02  
     memoryUpdateTime@movementCount 004B              __end_of_color_read_Red 45A0  
                   __end_of_HighISR 002C                        ___param_bank 000000  
                   __end_of_Red_R90 4300                          _Hue2Colour 157E  
                   __end_of_Right45 4074                    __end_of_LED_init 4A34  
                     ___fltol@sign1 0009                     __end_of___fladd 1F40  
                             ?_main 0001                     __end_of___fldiv 2B70  
                             STR_10 0E26                               STR_11 0E48  
                             STR_13 0E48                     __end_of___flmul 27D4  
                   __end_of___flsub 47C2                     __end_of___fltol 3704  
                             ?_stoa 000A                      _LightBlue_L135 3CF4  
                             ?_stop 0014                     __end_of___lwdiv 43F0  
                             i2l686 0028                        vfpfcnvrt@fmt 0022  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
           __end_of_sendCharSerial4 4A14          __end_of_I2C_2_Master_Start 4A6A  
                             _White 1F40          __end_of_I2C_2_Master_Write 4A40  
                             _flags 00EC                               _fputc 38E6  
                 fullSpeedReverse@i 0019                               _width 00E2  
                             _putch 4A74                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             stoa@i 0018                               stoa@l 001C  
                             stoa@p 001E                               stoa@s 000C  
                             stoa@w 0016                               ttemp5 0060  
                             ttemp6 0063                               ttemp7 0067  
                             status 000FD8                               wtemp8 0060  
                   __end_of_sprintf 472E                     __end_of_strncmp 38E6  
                  _memoryUpdateTime 3D98                __end_of_Color2String 4882  
           __end_of_color_read_Blue 4690               _I2C_2_Master_RepStart 4A4C  
                   ?_color_read_Red 0005                     __initialization 4452  
                      __end_of_main 2D8E                        __end_of_stoa 34F8  
                      __end_of_stop 3C50                     ??_rotate180left 0024  
            __end_of_LightBlue_L135 3D98                              ??_main 007B  
                            ??_stoa 000E                              ??_stop 0018  
                     __activetblptr 000002              ??_memoryUpdateMovement 0007  
                         ??_RGB2Hue 006F                       ??_Orange_R135 0025  
                            ?_White 0060                        ?_setMotorPWM 000E  
                            ?_fputc 0001                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                     _colour_read_all 34F8  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RE4PPS 000E76                              _RD6PPS 000E70  
                            i2l4530 000A                              i2l4532 001A  
                            i2l4534 0024                              _RG6PPS 000E88  
                         ??_HighISR 0001            __end_of_color_click_init 4844  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                       ?_ClickLEDOn 0001                    __end_of___xxtofl 30F6  
                         ??_Red_R90 0025                              _Left45 4074  
                         ??_Right45 001E                    _fullSpeedReverse 4204  
                  ?_Yellow_rev1_R90 0021                       ??_Timer0_init 0001  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0030  
                            White@i 006E                              ___flge 3704  
                            ___fleq 39B0                           ??___fladd 0043  
                       ?_Hue2Colour 0057                              ___wmul 4970  
                         ??___fldiv 005B                       Orange_R135@mL 0021  
                         ??___flmul 0022                       Orange_R135@mR 0023  
                         ??___flsub 0053                           ??___fltol 0005  
                         ??___lwdiv 000B                          _TimerReset 4A6A  
                            _colorf 0198                     ?_LightBlue_L135 0021  
                            clear_0 448A                              clear_1 4496  
                fullSpeedReverse@mL 0014                  fullSpeedReverse@mR 0016  
                            _motorL 00F6                              _motorR 00ED  
                            isa$std 000001                              _strlen 4690  
                            fputc@c 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                    ?_sendCharSerial4 0001  
 memoryUpdateMovement@movementCount 0003                              stoa@cp 001A  
                            stoa@fp 000A                              putch@c 0001  
                  __end_of_vfprintf 477C                              stop@mL 0014  
                            stop@mR 0016                   ??_initDCmotorsPWM 0003  
                         ??_sprintf 0038                           ??_strncmp 0007  
                  __end_of_turnLeft 3F5A                          ___flge@ff1 004B  
                        ___flge@ff2 004F                        ___xxtofl@arg 0016  
                      ___xxtofl@exp 0015                        ___xxtofl@val 000C  
                        ___fleq@ff1 0001                          ___fleq@ff2 0005  
               __end_of_Orange_R135 3CF4                          __accesstop 0060  
           __end_of__initialization 449C            __end_of_color_read_Clear 4640  
                   fullSpeedAhead@i 0019                   __end_of_Blue_T180 44FE  
          __end_of_color_read_Green 45F0              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                           ?_LED_init 0001  
                        ___fltol@f1 0001                    ?_color_read_Blue 0005  
                   _Interrupts_init 4A40                      __pcstackCOMRAM 0001  
                     __end_of_White 23AA                        __pidataBANK0 4A76  
                      __pidataBANK1 4A14                       __end_of_fputc 39B0  
                 __end_of_Green_L90 437C                       __end_of_putch 4A76  
                         RGB2Hue@cf 006D                 __end_of_Timer0_init 49BA  
                       _ForwardFlag 00FF             __end_of_colour_read_all 35FE  
                           ??_White 0057                             ??_fputc 0005  
                           ??_putch 0001                          __pbssBANK0 00E2  
                        __pbssBANK1 0100                          ??_LED_init 0001  
                           ?_Left45 001A                   _color_writetoaddr 49DC  
                      _T2CLKCONbits 000FBF               __end_of_Colour2Action 2F42  
                           ?___flge 004B                             ?___fleq 0001  
                ?_color_writetoaddr 0003                             ?___wmul 0001  
                       ?_TimerReset 0001                 ??_color_writetoaddr 0004  
                           ?_strlen 0001               __end_of_getTimerValue 4452  
          __end_of_memoryUpdateTime 3E2E                        _Color2String 4844  
                           _RGB2Hue 0E52                           ?___xxtofl 000C  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                       _Orange_R135 3C50                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5             __end_of_Interrupts_init 4A4C  
            color_writetoaddr@value 0003                    ??_color_read_Red 0007  
                           _HighISR 0008           __end_of_color_writetoaddr 49FC  
                           _Red_R90 4284                  _I2C_2_Master_Start 4A60  
                        _initUSART4 49BA                  _I2C_2_Master_Write 4A34  
                           _Right45 3FEA                             __Hparam 0000  
                           __Lparam 0000                   color_read_Red@tmp 000A  
                       _Timer0_init 4996             sendStringSerial4@string 0002  
                           White@mL 0060                             White@mR 0062  
                           ___fladd 1A80                             ___fldiv 27D4  
                           ___flmul 23AA                             ___flsub 477C  
                           ___fltol 35FE                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 437C                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 002A                        __psmallconst 0E00  
                           __pcinit 4452                             __ramtop 0E00  
                         ?_turnLeft 0014                             __ptext0 2B70  
                           __ptext1 3D98                             __ptext2 48EE  
                           __ptext3 49BA                             __ptext4 3F5A  
                           __ptext5 34F8                             __ptext6 4550  
                           __ptext7 45A0                             __ptext8 45F0  
                           __ptext9 4640                             _maxTime 00EA  
                         _T2CONbits 000FBD                    ?_colour_read_all 001A  
                        ??___xxtofl 0010                      Color2String@cf 005D  
          __end_of_fullSpeedReverse 4284                           _T2HLTbits 000FBE  
                           _sprintf 46E0                ??_I2C_2_Master_Start 0002  
              ??_I2C_2_Master_Write 0002                             _strncmp 3808  
              end_of_initialization 449C      memoryUpdateMovement@colourcode 0007  
                           fputc@fp 0003                       _Pink_rev1_L90 3B02  
                     __Lmediumconst 0000                        ??_ClickLEDOn 0001  
                 ?_color_click_init 0001                      __45drightdelay 01BB  
                ??_color_click_init 0005                    ??_LightBlue_L135 0025  
                 __end_of_vfpfcnvrt 33BC                   _reverseHalfSquare 40FE  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Hue2Colour 0059                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
memoryUpdateMovement@movementMemory 0005                          ??_vfprintf 0030  
                ?_reverseHalfSquare 001B                             strlen@a 0003  
                           strlen@s 0001               __end_of_rotate180left 4550  
                   _initDCmotorsPWM 3F5A                          ??_turnLeft 0018  
                  White@timerMemory 0068                           _PORTFbits 000F8E  
                setMotorPWM@negDuty 0013                   __end_of_turnRight 3EC4  
                       ___fladd@grs 004A                 ??_reverseHalfSquare 001F  
                __end_of_ClickLEDOn 48EE                       ___xxtofl@sign 0014  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0012  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 0067                         ___fldiv@rem 0060  
                  fullSpeedAhead@mL 0014                    fullSpeedAhead@mR 0016  
          color_writetoaddr@address 0004                           Red_R90@mL 0021  
                         Red_R90@mR 0023             ??_I2C_2_Master_RepStart 0002  
                    _movementMemory 0170                  __end_of_Hue2Colour 1A80  
                    ?_Pink_rev1_L90 0021                    ?_Interrupts_init 0001  
                       ___flmul@grs 0027                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0005                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0005                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0001                     Colour2Action@cf 005B  
         __end_of_reverseHalfSquare 4184                  ??_color_read_Clear 0007  
                ??_color_read_Green 0007                           _Blue_T180 44AA  
                    __end_of_Left45 40FE                        _RGB2Hue$3160 0073  
                    __end_of___flge 3808                      __end_of___fleq 3A5A  
                    _fullSpeedAhead 4184                         vfpfcnvrt@ap 0024  
                       vfpfcnvrt@fp 0020                      __end_of___wmul 4996  
                         _Green_L90 4300                           Right45@mL 001A  
                         Right45@mR 001C                      __end_of_strlen 46E0  
                        RGB2Hue@max 0077                          RGB2Hue@min 0079  
               color_read_Clear@tmp 000A                 start_initialization 4452  
                       __halfsquare 01B7                            ??_Left45 001E  
               color_read_Green@tmp 000A                          ?_Blue_T180 0024  
           __end_of_initDCmotorsPWM 3FEA                         vfprintf@fmt 002C  
            __end_of_fullSpeedAhead 4204                            ??___flge 0053  
                          ??___fleq 0009                            ??___wmul 0005  
                      ??_TimerReset 0001                         __pdataBANK0 00FF  
                       __pdataBANK1 01AE                            ??_strlen 0003  
                         ___fladd@a 003F                           ___fladd@b 003B  
                   ClickLEDOn@power 0001                          ?_Green_L90 0021  
                         ___fldiv@a 0057                           ___fldiv@b 0053  
                 ?_memoryUpdateTime 004B                            ?_RGB2Hue 006D  
                         ___flmul@a 001E                           ___flmul@b 001A  
                         ___flsub@a 004F                           ___flsub@b 004B  
                     __pcstackBANK0 0060                        ?_Orange_R135 0021  
                ??_memoryUpdateTime 004F                     ??_Pink_rev1_L90 0025  
                          ?_HighISR 0001                  __end_of_TimerReset 4A74  
                          ?_Red_R90 0021              Color2String@colourname 0060  
                          ?_Right45 001A                    ___lwdiv@dividend 0007  
                      ?_Timer0_init 0001                     ?_fullSpeedAhead 0014  
                         __pintcode 0008                            ?___fladd 003B  
                          ?___fldiv 0053                            ?___flmul 001A  
                          ?___flsub 004B                            ?___fltol 0001  
                          ?___lwdiv 0007                I2C_2_Master_Read@ack 0003  
              I2C_2_Master_Read@tmp 0004                     Pink_rev1_L90@mL 0021  
                   Pink_rev1_L90@mR 0023                         __smallconst 0E00  
                 _I2C_2_Master_Idle 4948                   _I2C_2_Master_Init 491E  
                 _I2C_2_Master_Read 47C2                       __45dleftdelay 01BD  
                 _I2C_2_Master_Stop 4A56                   ?_fullSpeedReverse 0014  
                 ??_Yellow_rev1_R90 0025                  ?_I2C_2_Master_Idle 0001  
                   rotate180left@mL 0020                     rotate180left@mR 0022  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0010                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000B                 White@movementMemory 0066  
          initDCmotorsPWM@PWMperiod 0001                            ?_sprintf 0032  
                ??_fullSpeedReverse 0018                            ?_strncmp 0001  
              Hue2Colour@colourname 0059                   colour_read_all@cf 001A  
                      Hue2Colour@cf 0057                   _sendStringSerial4 4882  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                            _LED_init 4A26  
                ?_sendStringSerial4 0002                            _PIE4bits 000E2D  
                       turnRight@mL 0014                         turnRight@mR 0016  
                          _PIR0bits 000E33                            i2u425_40 001A  
                          i2u425_41 0016                         ??_Blue_T180 0028  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                          Left45@mL 001A                            Left45@mR 001C  
                 ??_sendCharSerial4 0001                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0004                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 3262           __end_of_I2C_2_Master_Idle 4970  
         __end_of_I2C_2_Master_Init 4948           __end_of_I2C_2_Master_Read 4804  
                 ___wmul@multiplier 0001           __end_of_I2C_2_Master_Stop 4A60  
                     _movementCount 00E8                         ??_Green_L90 0025  
                      setMotorPWM@m 000E         I2C_2_Master_Write@data_byte 0002  
                 ??_color_read_Blue 0007                           _turnRight 3E2E  
                     _retracingDone 00E6                            __1square 01B9  
                         copy_data0 4466           __end_of_sendStringSerial4 48BA  
     __end_of_I2C_2_Master_RepStart 4A56                  color_read_Blue@tmp 000A  
               __end_of_setMotorPWM 3262                        ??_initUSART4 0001  
                          __Hrparam 0000        __end_of_memoryUpdateMovement 491E  
                        vfprintf@ap 002E                            __Lrparam 0000  
                        vfprintf@fp 002A                       _Colour2Action 2D8E  
                        ?_vfpfcnvrt 0020                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                       _getTimerValue 43F0  
                        sprintf@fmt 0034                         Blue_T180@mL 0024  
                       Blue_T180@mR 0026                            ___xxtofl 2F42  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                   ___lwdiv@divisor 0009                  __end_of_initUSART4 49DC  
                   ___lwdiv@counter 000D                          ?_turnRight 0014  
                          __ptext10 4A4C                            __ptext11 47C2  
                          __ptext20 0E52                            __ptext12 4804  
                          __ptext21 35FE                            __ptext13 49DC  
                          __ptext30 2F42                            __ptext22 477C  
                          __ptext14 4A34                            __ptext31 23AA  
                          __ptext23 39B0                            __ptext15 4A56  
                          __ptext40 4300                            __ptext32 4184  
                          __ptext24 27D4                            __ptext16 4A60  
                          __ptext41 3FEA                            __ptext33 1A80  
                          __ptext25 4A26                            __ptext17 4948  
                          __ptext50 30F6                            __ptext42 3E2E  
                          __ptext34 3A5A                            __ptext26 4A40  
                          __ptext18 491E                            __ptext51 4970  
                          __ptext43 44AA                            __ptext35 4A6A  
                          __ptext27 2D8E                            __ptext19 4996  
                          __ptext60 38E6                            __ptext52 437C  
                          __ptext44 44FE                            __ptext36 4284  
                          __ptext28 1F40                            __ptext61 4A74  
                          __ptext53 4844                            __ptext45 4074  
                          __ptext37 3B02                            __ptext29 43F0  
                          __ptext62 4882                            __ptext54 46E0  
                          __ptext46 3EC4                            __ptext38 3C50  
                          __ptext63 49FC                            __ptext55 472E  
                          __ptext47 40FE                            __ptext39 3CF4  
                          __ptext64 157E                            __ptext56 3262  
                          __ptext48 3BAA                            __ptext65 3704  
                          __ptext57 3808                            __ptext49 4204  
                          __ptext66 48BA                            __ptext58 33BC  
                          __ptext59 4690                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                  White@movementCount 0064  
                        turnLeft@mL 0014                          turnLeft@mR 0016  
                   Color2String@buf 005B                    colour_read_all@B 0024  
                  colour_read_all@C 0028                    colour_read_all@G 0020  
                  colour_read_all@R 001C                      White@tempTimer 006A  
                        turnRight@i 0018                    LightBlue_L135@mL 0021  
                  LightBlue_L135@mR 0023                           stoa@F1144 01AE  
                    ?_Colour2Action 005B                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005F  
                          _vfprintf 472E                            main@data 007D  
                 Yellow_rev1_R90@mL 0021                   Yellow_rev1_R90@mR 0023  
                          main@wall 00E1                            _turnLeft 3EC4  
                    ?_getTimerValue 0033                       ?_Color2String 005B  
                    _vfpfcnvrt$2859 0028                          _INTCONbits 000FF2  
                       _setMotorPWM 30F6               _memoryUpdateTime$3162 004F  
                          intlevel2 0000                           sprintf@ap 0038  
                  ??_fullSpeedAhead 0018                           turnLeft@i 0018  
                         strncmp@_l 0001                           strncmp@_r 0003  
                 ??_colour_read_all 001C             getTimerValue@timerCount 0039  
                   _Yellow_rev1_R90 3A5A                         ??_vfpfcnvrt 0026  
                          stoa@nuls 000F                    _color_click_init 4804  
                     _rotate180left 44FE                      ??_Color2String 005F  
                          sprintf@f 003A                            sprintf@s 0032  
                  __recogniseColour 01B5                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                         _timerMemory 0120  
                          strncmp@l 0008                            strncmp@n 0005  
                          strncmp@r 000A                _memoryUpdateMovement 48EE  
                       ??_turnRight 0018                       ___fladd@signs 0047  
                        _TX4STAbits 000EE8               __end_of_Pink_rev1_L90 3BAA  
                   _sendCharSerial4 49FC                        ___fladd@aexp 0048  
                      ___fladd@bexp 0049         memoryUpdateTime@timerMemory 004D  
                   ??_Colour2Action 005D  
