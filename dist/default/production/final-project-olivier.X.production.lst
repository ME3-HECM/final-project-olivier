

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 19:53:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Generated 06/04/2022 GMT
    86                           ; 
    87                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18LF67K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120                           	psect	idataBANK0
   121   004512                     __pidataBANK0:
   122                           	callstack 0
   123                           
   124                           ;initializer for __halfsquare
   125   004512  015E               	dw	350
   126                           
   127                           ;initializer for __1square
   128   004514  02BC               	dw	700
   129                           
   130                           ;initializer for __45drightdelay
   131   004516  00AA               	dw	170
   132                           
   133                           ;initializer for __45dleftdelay
   134   004518  00AA               	dw	170
   135                           
   136                           ;initializer for _ForwardFlag
   137   00451A  01                 	db	1
   138                           
   139                           	psect	idataBANK1
   140   00451B                     __pidataBANK1:
   141                           	callstack 0
   142                           
   143                           ;initializer for stoa@F1144
   144   00451B  28                 	db	40
   145   00451C  6E                 	db	110
   146   00451D  75                 	db	117
   147   00451E  6C                 	db	108
   148   00451F  6C                 	db	108
   149   004520  29                 	db	41
   150   004521  00                 	db	0
   151   000000                     _TX4REG	set	3812
   152   000000                     _RC4STAbits	set	3815
   153   000000                     _SP4BRGH	set	3814
   154   000000                     _LATFbits	set	3966
   155   000000                     _LATDbits	set	3964
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISEbits	set	3973
   158   000000                     _TRISFbits	set	3974
   159   000000                     _CCPR2H	set	4006
   160   000000                     _CCPR1H	set	4010
   161   000000                     _SSP2CON2bits	set	3802
   162   000000                     _RX4PPS	set	3605
   163   000000                     _SSP2CLKPPS	set	3612
   164   000000                     _SSP2DATPPS	set	3613
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _RC4REG	set	3811
   169   000000                     _SP4BRGL	set	3813
   170   000000                     _TX4STAbits	set	3816
   171   000000                     _BAUD4CONbits	set	3817
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _TRISDbits	set	3972
   174   000000                     _CCPR4H	set	3873
   175   000000                     _CCPR3H	set	3877
   176   000000                     _SSP2STAT	set	3800
   177   000000                     _ANSELFbits	set	3764
   178   000000                     _SSP2BUF	set	3797
   179   000000                     _PIE0bits	set	3625
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RD5PPS	set	3695
   184   000000                     _RE2PPS	set	3700
   185   000000                     _RD6PPS	set	3696
   186   000000                     _CCP1CONbits	set	4011
   187   000000                     _CCPTMRS0bits	set	4013
   188   000000                     _T2PR	set	4028
   189   000000                     _T2CONbits	set	4029
   190   000000                     _CCP2CONbits	set	4007
   191   000000                     _LATAbits	set	3961
   192   000000                     _CCP3CONbits	set	3878
   193   000000                     _LATCbits	set	3963
   194   000000                     _LATEbits	set	3965
   195   000000                     _TRISCbits	set	3971
   196   000000                     _CCP4CONbits	set	3874
   197   000000                     _TRISHbits	set	3976
   198   000000                     _TRISGbits	set	3975
   199   000000                     _PORTFbits	set	3982
   200   000000                     _TRISAbits	set	3969
   201   000000                     _LATHbits	set	3968
   202   000000                     _RE4PPS	set	3702
   203   000000                     _RG6PPS	set	3720
   204   000000                     _TMR0L	set	4051
   205   000000                     _TMR0H	set	4052
   206   000000                     _T0CON0bits	set	4053
   207   000000                     _T0CON1bits	set	4054
   208   000000                     _T2CLKCONbits	set	4031
   209   000000                     _T2HLTbits	set	4030
   210   000000                     _INTCONbits	set	4082
   211   000000                     _PIE4bits	set	3629
   212   000000                     _PIR0bits	set	3635
   213                           
   214                           	psect	smallconst
   215   000E00                     __psmallconst:
   216                           	callstack 0
   217   000E00  00                 	db	0
   218   000E01                     STR_1:
   219                           
   220                           ; BSR set to: 14
   221   000E01  43                 	db	67	;'C'
   222   000E02  6F                 	db	111	;'o'
   223   000E03  6C                 	db	108	;'l'
   224   000E04  6F                 	db	111	;'o'
   225   000E05  75                 	db	117	;'u'
   226   000E06  72                 	db	114	;'r'
   227   000E07  20                 	db	32
   228   000E08  69                 	db	105	;'i'
   229   000E09  73                 	db	115	;'s'
   230   000E0A  20                 	db	32
   231   000E0B  25                 	db	37
   232   000E0C  73                 	db	115	;'s'
   233   000E0D  20                 	db	32
   234   000E0E  20                 	db	32
   235   000E0F  0D                 	db	13
   236   000E10  00                 	db	0
   237   000E11                     STR_9:
   238                           
   239                           ; BSR set to: 14
   240   000E11  4C                 	db	76	;'L'
   241   000E12  69                 	db	105	;'i'
   242   000E13  67                 	db	103	;'g'
   243   000E14  68                 	db	104	;'h'
   244   000E15  74                 	db	116	;'t'
   245   000E16  20                 	db	32
   246   000E17  42                 	db	66	;'B'
   247   000E18  6C                 	db	108	;'l'
   248   000E19  75                 	db	117	;'u'
   249   000E1A  65                 	db	101	;'e'
   250   000E1B  00                 	db	0
   251   000E1C                     STR_5:
   252                           
   253                           ; BSR set to: 14
   254   000E1C  44                 	db	68	;'D'
   255   000E1D  61                 	db	97	;'a'
   256   000E1E  72                 	db	114	;'r'
   257   000E1F  6B                 	db	107	;'k'
   258   000E20  20                 	db	32
   259   000E21  42                 	db	66	;'B'
   260   000E22  6C                 	db	108	;'l'
   261   000E23  75                 	db	117	;'u'
   262   000E24  65                 	db	101	;'e'
   263   000E25  00                 	db	0
   264   000E26                     STR_10:
   265                           
   266                           ; BSR set to: 14
   267   000E26  45                 	db	69	;'E'
   268   000E27  67                 	db	103	;'g'
   269   000E28  67                 	db	103	;'g'
   270   000E29  73                 	db	115	;'s'
   271   000E2A  68                 	db	104	;'h'
   272   000E2B  65                 	db	101	;'e'
   273   000E2C  6C                 	db	108	;'l'
   274   000E2D  6C                 	db	108	;'l'
   275   000E2E  00                 	db	0
   276   000E2F                     STR_8:
   277                           
   278                           ; BSR set to: 14
   279   000E2F  4F                 	db	79	;'O'
   280   000E30  72                 	db	114	;'r'
   281   000E31  61                 	db	97	;'a'
   282   000E32  6E                 	db	110	;'n'
   283   000E33  67                 	db	103	;'g'
   284   000E34  65                 	db	101	;'e'
   285   000E35  00                 	db	0
   286   000E36                     STR_6:
   287                           
   288                           ; BSR set to: 14
   289   000E36  59                 	db	89	;'Y'
   290   000E37  65                 	db	101	;'e'
   291   000E38  6C                 	db	108	;'l'
   292   000E39  6C                 	db	108	;'l'
   293   000E3A  6F                 	db	111	;'o'
   294   000E3B  77                 	db	119	;'w'
   295   000E3C  00                 	db	0
   296   000E3D                     STR_4:
   297                           
   298                           ; BSR set to: 14
   299   000E3D  47                 	db	71	;'G'
   300   000E3E  72                 	db	114	;'r'
   301   000E3F  65                 	db	101	;'e'
   302   000E40  65                 	db	101	;'e'
   303   000E41  6E                 	db	110	;'n'
   304   000E42  00                 	db	0
   305   000E43                     STR_7:
   306                           
   307                           ; BSR set to: 14
   308   000E43  50                 	db	80	;'P'
   309   000E44  69                 	db	105	;'i'
   310   000E45  6E                 	db	110	;'n'
   311   000E46  6B                 	db	107	;'k'
   312   000E47  00                 	db	0
   313   000E48                     STR_11:
   314                           
   315                           ; BSR set to: 14
   316   000E48  6C                 	db	108	;'l'
   317   000E49  6C                 	db	108	;'l'
   318   000E4A  73                 	db	115	;'s'
   319   000E4B  00                 	db	0
   320   000E4C                     STR_3:
   321                           
   322                           ; BSR set to: 14
   323   000E4C  52                 	db	82	;'R'
   324   000E4D  65                 	db	101	;'e'
   325   000E4E  64                 	db	100	;'d'
   326   000E4F  00                 	db	0
   327   000E50  00                 	db	0	; dummy byte at the end
   328   000000                     
   329                           ; #config settings
   330                           
   331                           	psect	cinit
   332   003F20                     __pcinit:
   333                           	callstack 0
   334   003F20                     start_initialization:
   335                           	callstack 0
   336   003F20                     __initialization:
   337                           	callstack 0
   338                           
   339                           ; Initialize objects allocated to BANK1 (7 bytes)
   340                           ; load TBLPTR registers with __pidataBANK1
   341   003F20  0E1B               	movlw	low __pidataBANK1
   342   003F22  6EF6               	movwf	tblptrl,c
   343   003F24  0E45               	movlw	high __pidataBANK1
   344   003F26  6EF7               	movwf	tblptrh,c
   345   003F28  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   346   003F2A  6EF8               	movwf	tblptru,c
   347   003F2C  EE01  F086         	lfsr	0,__pdataBANK1
   348   003F30  EE10 F007          	lfsr	1,7
   349   003F34                     copy_data0:
   350   003F34  0009               	tblrd		*+
   351   003F36  CFF5 FFEE          	movff	tablat,postinc0
   352   003F3A  50E5               	movf	postdec1,w,c
   353   003F3C  50E1               	movf	fsr1l,w,c
   354   003F3E  E1FA               	bnz	copy_data0
   355                           
   356                           ; Initialize objects allocated to BANK0 (9 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358   003F40  0E12               	movlw	low __pidataBANK0
   359   003F42  6EF6               	movwf	tblptrl,c
   360   003F44  0E45               	movlw	high __pidataBANK0
   361   003F46  6EF7               	movwf	tblptrh,c
   362   003F48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363   003F4A  6EF8               	movwf	tblptru,c
   364   003F4C  EE00  F0F3         	lfsr	0,__pdataBANK0
   365   003F50  EE10 F009          	lfsr	1,9
   366   003F54                     copy_data1:
   367   003F54  0009               	tblrd		*+
   368   003F56  CFF5 FFEE          	movff	tablat,postinc0
   369   003F5A  50E5               	movf	postdec1,w,c
   370   003F5C  50E1               	movf	fsr1l,w,c
   371   003F5E  E1FA               	bnz	copy_data1
   372                           
   373                           ; Clear objects allocated to BANK1 (134 bytes)
   374   003F60  EE01  F000         	lfsr	0,__pbssBANK1
   375   003F64  0E86               	movlw	134
   376   003F66                     clear_0:
   377   003F66  6AEE               	clrf	postinc0,c
   378   003F68  06E8               	decf	wreg,f,c
   379   003F6A  E1FD               	bnz	clear_0
   380                           
   381                           ; Clear objects allocated to BANK0 (25 bytes)
   382   003F6C  EE00  F0DA         	lfsr	0,__pbssBANK0
   383   003F70  0E19               	movlw	25
   384   003F72                     clear_1:
   385   003F72  6AEE               	clrf	postinc0,c
   386   003F74  06E8               	decf	wreg,f,c
   387   003F76  E1FD               	bnz	clear_1
   388   003F78                     end_of_initialization:
   389                           	callstack 0
   390   003F78                     __end_of__initialization:
   391                           	callstack 0
   392   003F78  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   393   003F7A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394   003F7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   395   003F7E  6EF8               	movwf	tblptru,c
   396   003F80  0100               	movlb	0
   397   003F82  EF64  F013         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400   0000DA                     __pbssBANK0:
   401                           	callstack 0
   402   0000DA                     _width:
   403                           	callstack 0
   404   0000DA                     	ds	2
   405   0000DC                     _prec:
   406                           	callstack 0
   407   0000DC                     	ds	2
   408   0000DE                     _maxTime:
   409                           	callstack 0
   410   0000DE                     	ds	2
   411   0000E0                     _flags:
   412                           	callstack 0
   413   0000E0                     	ds	1
   414   0000E1                     _motorR:
   415                           	callstack 0
   416   0000E1                     	ds	9
   417   0000EA                     _motorL:
   418                           	callstack 0
   419   0000EA                     	ds	9
   420                           
   421                           	psect	dataBANK0
   422   0000F3                     __pdataBANK0:
   423                           	callstack 0
   424   0000F3                     __halfsquare:
   425                           	callstack 0
   426   0000F3                     	ds	2
   427   0000F5                     __1square:
   428                           	callstack 0
   429   0000F5                     	ds	2
   430   0000F7                     __45drightdelay:
   431                           	callstack 0
   432   0000F7                     	ds	2
   433   0000F9                     __45dleftdelay:
   434                           	callstack 0
   435   0000F9                     	ds	2
   436   0000FB                     _ForwardFlag:
   437                           	callstack 0
   438   0000FB                     	ds	1
   439                           
   440                           	psect	bssBANK1
   441   000100                     __pbssBANK1:
   442                           	callstack 0
   443   000100                     _timerMemory:
   444                           	callstack 0
   445   000100                     	ds	40
   446   000128                     _movementMemory:
   447                           	callstack 0
   448   000128                     	ds	40
   449   000150                     	ds	32
   450   000170                     _colorf:
   451                           	callstack 0
   452   000170                     	ds	22
   453                           
   454                           	psect	dataBANK1
   455   000186                     __pdataBANK1:
   456                           	callstack 0
   457   000186                     stoa@F1144:
   458                           	callstack 0
   459   000186                     	ds	7
   460                           
   461                           	psect	cstackBANK0
   462   000060                     __pcstackBANK0:
   463                           	callstack 0
   464   000060                     ___flmul@sign:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x0
   468   000060                     	ds	1
   469   000061                     ___flmul@grs:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x1
   473   000061                     	ds	4
   474   000065                     ___flmul@aexp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478   000065                     	ds	1
   479   000066                     ___flmul@bexp:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x6
   483   000066                     	ds	1
   484   000067                     ___flmul@prod:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x7
   488   000067                     	ds	4
   489   00006B                     ___flmul@temp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xB
   493   00006B                     	ds	2
   494   00006D                     _RGB2Hue$3132:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0xD
   498   00006D                     	ds	4
   499   000071                     RGB2Hue@max:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x11
   503   000071                     	ds	2
   504   000073                     RGB2Hue@min:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x13
   508   000073                     	ds	2
   509   000075                     main@data:
   510                           	callstack 0
   511                           
   512                           ; 100 bytes @ 0x15
   513   000075                     	ds	100
   514   0000D9                     main@wall:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x79
   518   0000D9                     	ds	1
   519                           
   520                           	psect	cstackCOMRAM
   521   000001                     __pcstackCOMRAM:
   522                           	callstack 0
   523   000001                     ??_I2C_2_Master_Idle:
   524   000001                     ?_strlen:
   525                           	callstack 0
   526   000001                     ?_strncmp:
   527                           	callstack 0
   528   000001                     ?___wmul:
   529                           	callstack 0
   530   000001                     ?___fltol:
   531                           	callstack 0
   532   000001                     sendCharSerial4@charToSend:
   533                           	callstack 0
   534   000001                     ClickLEDOn@power:
   535                           	callstack 0
   536   000001                     initDCmotorsPWM@PWMperiod:
   537                           	callstack 0
   538   000001                     ___wmul@multiplier:
   539                           	callstack 0
   540   000001                     fputc@c:
   541                           	callstack 0
   542   000001                     strlen@s:
   543                           	callstack 0
   544   000001                     strncmp@_l:
   545                           	callstack 0
   546   000001                     ___fleq@ff1:
   547                           	callstack 0
   548   000001                     ___flge@ff1:
   549                           	callstack 0
   550   000001                     ___fltol@f1:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x0
   554   000001                     	ds	1
   555   000002                     ??_I2C_2_Master_Read:
   556   000002                     I2C_2_Master_Write@data_byte:
   557                           	callstack 0
   558   000002                     sendStringSerial4@string:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1
   562   000002                     	ds	1
   563   000003                     I2C_2_Master_Read@ack:
   564                           	callstack 0
   565   000003                     color_writetoaddr@value:
   566                           	callstack 0
   567   000003                     ___wmul@multiplicand:
   568                           	callstack 0
   569   000003                     fputc@fp:
   570                           	callstack 0
   571   000003                     strlen@a:
   572                           	callstack 0
   573   000003                     strncmp@_r:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2
   577   000003                     	ds	1
   578   000004                     I2C_2_Master_Read@tmp:
   579                           	callstack 0
   580   000004                     color_writetoaddr@address:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x3
   584   000004                     	ds	1
   585   000005                     ??_color_click_init:
   586   000005                     ??_fputc:
   587   000005                     ??___fltol:
   588   000005                     ?_color_read_Red:
   589                           	callstack 0
   590   000005                     ?_color_read_Green:
   591                           	callstack 0
   592   000005                     ?_color_read_Blue:
   593                           	callstack 0
   594   000005                     ?_color_read_Clear:
   595                           	callstack 0
   596   000005                     ___wmul@product:
   597                           	callstack 0
   598   000005                     strncmp@n:
   599                           	callstack 0
   600   000005                     ___fleq@ff2:
   601                           	callstack 0
   602   000005                     ___flge@ff2:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x4
   606   000005                     	ds	2
   607   000007                     ??_strncmp:
   608   000007                     ??_color_read_Red:
   609   000007                     ??_color_read_Green:
   610   000007                     ??_color_read_Blue:
   611   000007                     ??_color_read_Clear:
   612   000007                     ?___lwdiv:
   613                           	callstack 0
   614   000007                     ___lwdiv@dividend:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x6
   618   000007                     	ds	1
   619   000008                     strncmp@l:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x7
   623   000008                     	ds	1
   624   000009                     ??___fleq:
   625   000009                     ??___flge:
   626   000009                     ___fltol@sign1:
   627                           	callstack 0
   628   000009                     ___lwdiv@divisor:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x8
   632   000009                     	ds	1
   633   00000A                     ___fltol@exp1:
   634                           	callstack 0
   635   00000A                     color_read_Red@tmp:
   636                           	callstack 0
   637   00000A                     color_read_Green@tmp:
   638                           	callstack 0
   639   00000A                     color_read_Blue@tmp:
   640                           	callstack 0
   641   00000A                     color_read_Clear@tmp:
   642                           	callstack 0
   643   00000A                     stoa@fp:
   644                           	callstack 0
   645   00000A                     strncmp@r:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x9
   649   00000A                     	ds	1
   650   00000B                     ___lwdiv@quotient:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xA
   654   00000B                     	ds	1
   655   00000C                     ?___xxtofl:
   656                           	callstack 0
   657   00000C                     stoa@s:
   658                           	callstack 0
   659   00000C                     ___xxtofl@val:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0xB
   663   00000C                     	ds	1
   664   00000D                     ?_Hue2Colour:
   665                           	callstack 0
   666   00000D                     ___lwdiv@counter:
   667                           	callstack 0
   668   00000D                     Hue2Colour@cf:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0xC
   672   00000D                     	ds	1
   673   00000E                     ??_stoa:
   674   00000E                     setMotorPWM@m:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xD
   678   00000E                     	ds	1
   679   00000F                     Hue2Colour@colourname:
   680                           	callstack 0
   681   00000F                     stoa@nuls:
   682                           	callstack 0
   683                           
   684                           ; 7 bytes @ 0xE
   685   00000F                     	ds	1
   686   000010                     ??_setMotorPWM:
   687   000010                     ??___xxtofl:
   688                           
   689                           ; 1 bytes @ 0xF
   690   000010                     	ds	2
   691   000012                     setMotorPWM@posDuty:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x11
   695   000012                     	ds	1
   696   000013                     setMotorPWM@negDuty:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x12
   700   000013                     	ds	1
   701   000014                     ___xxtofl@sign:
   702                           	callstack 0
   703   000014                     stop@mL:
   704                           	callstack 0
   705   000014                     turnLeft@mL:
   706                           	callstack 0
   707   000014                     turnRight@mL:
   708                           	callstack 0
   709   000014                     fullSpeedAhead@mL:
   710                           	callstack 0
   711   000014                     fullSpeedReverse@mL:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x13
   715   000014                     	ds	1
   716   000015                     ___xxtofl@exp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x14
   720   000015                     	ds	1
   721   000016                     stop@mR:
   722                           	callstack 0
   723   000016                     turnLeft@mR:
   724                           	callstack 0
   725   000016                     turnRight@mR:
   726                           	callstack 0
   727   000016                     fullSpeedAhead@mR:
   728                           	callstack 0
   729   000016                     fullSpeedReverse@mR:
   730                           	callstack 0
   731   000016                     stoa@w:
   732                           	callstack 0
   733   000016                     ___xxtofl@arg:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x15
   737   000016                     	ds	2
   738   000018                     ??_fullSpeedAhead:
   739   000018                     ??_stop:
   740   000018                     ??_fullSpeedReverse:
   741   000018                     turnLeft@i:
   742                           	callstack 0
   743   000018                     turnRight@i:
   744                           	callstack 0
   745   000018                     stoa@i:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x17
   749   000018                     	ds	1
   750   000019                     fullSpeedAhead@i:
   751                           	callstack 0
   752   000019                     fullSpeedReverse@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x18
   756   000019                     	ds	1
   757   00001A                     ?___fladd:
   758                           	callstack 0
   759   00001A                     Left45@mL:
   760                           	callstack 0
   761   00001A                     Right45@mL:
   762                           	callstack 0
   763   00001A                     colour_read_all@cf:
   764                           	callstack 0
   765   00001A                     stoa@cp:
   766                           	callstack 0
   767   00001A                     ___fladd@b:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x19
   771   00001A                     	ds	1
   772   00001B                     reverseHalfSquare@mL:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x1A
   776   00001B                     	ds	1
   777   00001C                     Left45@mR:
   778                           	callstack 0
   779   00001C                     Right45@mR:
   780                           	callstack 0
   781   00001C                     stoa@l:
   782                           	callstack 0
   783   00001C                     colour_read_all@R:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x1B
   787   00001C                     	ds	1
   788   00001D                     reverseHalfSquare@mR:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x1C
   792   00001D                     	ds	1
   793   00001E                     ??_Left45:
   794   00001E                     ??_Right45:
   795   00001E                     stoa@p:
   796                           	callstack 0
   797   00001E                     ___fladd@a:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x1D
   801   00001E                     	ds	1
   802   00001F                     ??_reverseHalfSquare:
   803                           
   804                           ; 1 bytes @ 0x1E
   805   00001F                     	ds	1
   806   000020                     rotate180left@mL:
   807                           	callstack 0
   808   000020                     vfpfcnvrt@fp:
   809                           	callstack 0
   810   000020                     colour_read_all@G:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x1F
   814   000020                     	ds	1
   815   000021                     Red_R90@mL:
   816                           	callstack 0
   817   000021                     Green_L90@mL:
   818                           	callstack 0
   819   000021                     Yellow_rev1_R90@mL:
   820                           	callstack 0
   821   000021                     Pink_rev1_L90@mL:
   822                           	callstack 0
   823   000021                     Orange_R135@mL:
   824                           	callstack 0
   825   000021                     LightBlue_L135@mL:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x20
   829   000021                     	ds	1
   830   000022                     ??___fladd:
   831   000022                     rotate180left@mR:
   832                           	callstack 0
   833   000022                     vfpfcnvrt@fmt:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x21
   837   000022                     	ds	1
   838   000023                     Red_R90@mR:
   839                           	callstack 0
   840   000023                     Green_L90@mR:
   841                           	callstack 0
   842   000023                     Yellow_rev1_R90@mR:
   843                           	callstack 0
   844   000023                     Pink_rev1_L90@mR:
   845                           	callstack 0
   846   000023                     Orange_R135@mR:
   847                           	callstack 0
   848   000023                     LightBlue_L135@mR:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x22
   852   000023                     	ds	1
   853   000024                     Blue_T180@mL:
   854                           	callstack 0
   855   000024                     vfpfcnvrt@ap:
   856                           	callstack 0
   857   000024                     colour_read_all@B:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x23
   861   000024                     	ds	1
   862   000025                     ??_Yellow_rev1_R90:
   863   000025                     ??_Pink_rev1_L90:
   864   000025                     
   865                           ; 1 bytes @ 0x24
   866   000025                     	ds	1
   867   000026                     ??_vfpfcnvrt:
   868   000026                     ___fladd@signs:
   869                           	callstack 0
   870   000026                     Blue_T180@mR:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x25
   874   000026                     	ds	1
   875   000027                     ___fladd@aexp:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x26
   879   000027                     	ds	1
   880   000028                     ___fladd@bexp:
   881                           	callstack 0
   882   000028                     Colour2Action@cf:
   883                           	callstack 0
   884   000028                     _vfpfcnvrt$2827:
   885                           	callstack 0
   886   000028                     colour_read_all@C:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x27
   890   000028                     	ds	1
   891   000029                     ___fladd@grs:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x28
   895   000029                     	ds	1
   896   00002A                     ?_vfprintf:
   897                           	callstack 0
   898   00002A                     ?___flsub:
   899                           	callstack 0
   900   00002A                     vfprintf@fp:
   901                           	callstack 0
   902   00002A                     ___flsub@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x29
   906   00002A                     	ds	2
   907   00002C                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x2B
   911   00002C                     	ds	2
   912   00002E                     vfprintf@ap:
   913                           	callstack 0
   914   00002E                     ___flsub@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x2D
   918   00002E                     	ds	2
   919   000030                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2F
   923   000030                     	ds	2
   924   000032                     ?_sprintf:
   925                           	callstack 0
   926   000032                     ?___fldiv:
   927                           	callstack 0
   928   000032                     sprintf@s:
   929                           	callstack 0
   930   000032                     ___fldiv@b:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x31
   934   000032                     	ds	2
   935   000034                     sprintf@fmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x33
   939   000034                     	ds	2
   940   000036                     ___fldiv@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x35
   944   000036                     	ds	2
   945   000038                     sprintf@ap:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x37
   949   000038                     	ds	2
   950   00003A                     ??___fldiv:
   951   00003A                     sprintf@f:
   952                           	callstack 0
   953                           
   954                           ; 11 bytes @ 0x39
   955   00003A                     	ds	4
   956   00003E                     ___fldiv@rem:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x3D
   960   00003E                     	ds	4
   961   000042                     ___fldiv@sign:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x41
   965   000042                     	ds	1
   966   000043                     ___fldiv@new_exp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x42
   970   000043                     	ds	2
   971   000045                     Color2String@buf:
   972                           	callstack 0
   973   000045                     ___fldiv@grs:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x44
   977   000045                     	ds	2
   978   000047                     Color2String@cf:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x46
   982   000047                     	ds	2
   983   000049                     ___fldiv@bexp:
   984                           	callstack 0
   985   000049                     Color2String@colourname:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x48
   989   000049                     	ds	1
   990   00004A                     ___fldiv@aexp:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x49
   994   00004A                     	ds	1
   995   00004B                     ?___flmul:
   996                           	callstack 0
   997   00004B                     ___flmul@b:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x4A
  1001   00004B                     	ds	4
  1002   00004F                     ___flmul@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x4E
  1006   00004F                     	ds	4
  1007   000053                     ??___flmul:
  1008                           
  1009                           ; 1 bytes @ 0x52
  1010   000053                     	ds	4
  1011   000057                     RGB2Hue@cf:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x56
  1015   000057                     	ds	2
  1016   000059                     ??_RGB2Hue:
  1017                           
  1018                           ; 1 bytes @ 0x58
  1019   000059                     	ds	4
  1020   00005D                     ??_main:
  1021                           
  1022                           ; 1 bytes @ 0x5C
  1023   00005D                     	ds	2
  1024                           
  1025 ;;
  1026 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1027 ;;
  1028 ;; *************** function _main *****************
  1029 ;; Defined at:
  1030 ;;		line 19 in file "main.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  data          100   21[BANK0 ] unsigned char [100]
  1035 ;;  PWMcycle        2    0        unsigned int 
  1036 ;;  movementCoun    2    0        unsigned int 
  1037 ;;  wall            1  121[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1050 ;;      Totals:         2     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1051 ;;Total ram usage:      103 bytes
  1052 ;; Hardware stack levels required when called: 8
  1053 ;; This function calls:
  1054 ;;		_ClickLEDOn
  1055 ;;		_Color2String
  1056 ;;		_Colour2Action
  1057 ;;		_Hue2Colour
  1058 ;;		_I2C_2_Master_Init
  1059 ;;		_Interrupts_init
  1060 ;;		_LED_init
  1061 ;;		_RGB2Hue
  1062 ;;		_Timer0_init
  1063 ;;		___flge
  1064 ;;		_color_click_init
  1065 ;;		_colour_read_all
  1066 ;;		_fullSpeedAhead
  1067 ;;		_initDCmotorsPWM
  1068 ;;		_initUSART4
  1069 ;;		_stop
  1070 ;; This function is called by:
  1071 ;;		Startup code after reset
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text0
  1076   0026C8                     __ptext0:
  1077                           	callstack 0
  1078   0026C8                     _main:
  1079                           	callstack 23
  1080   0026C8                     
  1081                           ;main.c: 20:     char data[100];;main.c: 21:     initUSART4();
  1082   0026C8  EC35  F022         	call	_initUSART4	;wreg free
  1083   0026CC                     
  1084                           ;main.c: 22:     color_click_init();
  1085   0026CC  EC72  F021         	call	_color_click_init	;wreg free
  1086   0026D0                     
  1087                           ;main.c: 23:     I2C_2_Master_Init();
  1088   0026D0  ECE7  F021         	call	_I2C_2_Master_Init	;wreg free
  1089   0026D4                     
  1090                           ;main.c: 24:     LED_init();
  1091   0026D4  EC62  F022         	call	_LED_init	;wreg free
  1092   0026D8                     
  1093                           ;main.c: 25:     Interrupts_init();
  1094   0026D8  EC6F  F022         	call	_Interrupts_init	;wreg free
  1095   0026DC                     
  1096                           ;main.c: 26:     Timer0_init();
  1097   0026DC  EC23  F022         	call	_Timer0_init	;wreg free
  1098   0026E0                     
  1099                           ;main.c: 28:     initDCmotorsPWM(PWMcycle);
  1100   0026E0  0E00               	movlw	0
  1101   0026E2  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1102   0026E4  0E63               	movlw	99
  1103   0026E6  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1104   0026E8  EC41  F01D         	call	_initDCmotorsPWM	;wreg free
  1105   0026EC                     
  1106                           ;main.c: 30:     motorL.power=0;
  1107   0026EC  0E00               	movlw	0
  1108   0026EE  0100               	movlb	0	; () banked
  1109   0026F0  6FEA               	movwf	_motorL& (0+255),b
  1110   0026F2                     
  1111                           ; BSR set to: 0
  1112                           ;main.c: 31:     motorL.direction=1;
  1113   0026F2  0E01               	movlw	1
  1114   0026F4  6FEB               	movwf	(_motorL+1)& (0+255),b
  1115   0026F6                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 32:     motorL.brakemode=1;
  1118   0026F6  0E01               	movlw	1
  1119   0026F8  6FEC               	movwf	(_motorL+2)& (0+255),b
  1120   0026FA                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 33:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1123   0026FA  0EAA               	movlw	170
  1124   0026FC  6FEF               	movwf	(_motorL+5)& (0+255),b
  1125   0026FE  0E0F               	movlw	15
  1126   002700  6FF0               	movwf	(_motorL+6)& (0+255),b
  1127   002702                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 34:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1130   002702  0EA6               	movlw	166
  1131   002704  6FF1               	movwf	(_motorL+7)& (0+255),b
  1132   002706  0E0F               	movlw	15
  1133   002708  6FF2               	movwf	(_motorL+8)& (0+255),b
  1134   00270A                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 35:     motorL.PWMperiod=PWMcycle;
  1137   00270A  0E00               	movlw	0
  1138   00270C  6FEE               	movwf	(_motorL+4)& (0+255),b
  1139   00270E  0E63               	movlw	99
  1140   002710  6FED               	movwf	(_motorL+3)& (0+255),b
  1141   002712                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 37:     motorR.power=0;
  1144   002712  0E00               	movlw	0
  1145   002714  6FE1               	movwf	_motorR& (0+255),b
  1146   002716                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 38:     motorR.direction=1;
  1149   002716  0E01               	movlw	1
  1150   002718  6FE2               	movwf	(_motorR+1)& (0+255),b
  1151   00271A                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 39:     motorR.brakemode=1;
  1154   00271A  0E01               	movlw	1
  1155   00271C  6FE3               	movwf	(_motorR+2)& (0+255),b
  1156   00271E                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 40:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1159   00271E  0E25               	movlw	37
  1160   002720  6FE6               	movwf	(_motorR+5)& (0+255),b
  1161   002722  0E0F               	movlw	15
  1162   002724  6FE7               	movwf	(_motorR+6)& (0+255),b
  1163   002726                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 41:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1166   002726  0E21               	movlw	33
  1167   002728  6FE8               	movwf	(_motorR+7)& (0+255),b
  1168   00272A  0E0F               	movlw	15
  1169   00272C  6FE9               	movwf	(_motorR+8)& (0+255),b
  1170   00272E                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 42:     motorR.PWMperiod=PWMcycle;
  1173   00272E  0E00               	movlw	0
  1174   002730  6FE5               	movwf	(_motorR+4)& (0+255),b
  1175   002732  0E63               	movlw	99
  1176   002734  6FE4               	movwf	(_motorR+3)& (0+255),b
  1177   002736                     
  1178                           ; BSR set to: 0
  1179                           ;main.c: 44:     TRISFbits.TRISF2=1;
  1180   002736  8486               	bsf	134,2,c	;volatile
  1181   002738                     
  1182                           ; BSR set to: 0
  1183                           ;main.c: 45:     ANSELFbits.ANSELF2=0;
  1184   002738  010E               	movlb	14	; () banked
  1185   00273A  95B4               	bcf	180,2,b	;volatile
  1186   00273C                     l123:
  1187                           
  1188                           ;main.c: 46:     while(PORTFbits.RF2){
  1189   00273C  B48E               	btfsc	142,2,c	;volatile
  1190   00273E  EFA3  F013         	goto	u3971
  1191   002742  EFA5  F013         	goto	u3970
  1192   002746                     u3971:
  1193   002746  EF9E  F013         	goto	l123
  1194   00274A                     u3970:
  1195   00274A                     
  1196                           ;main.c: 48:     char wall=0;
  1197   00274A  0E00               	movlw	0
  1198   00274C  0100               	movlb	0	; () banked
  1199   00274E  6FD9               	movwf	main@wall& (0+255),b
  1200   002750                     
  1201                           ; BSR set to: 0
  1202                           ;main.c: 50:     ClickLEDOn(0);
  1203   002750  0E00               	movlw	0
  1204   002752  ECCD  F021         	call	_ClickLEDOn
  1205   002756                     l4306:
  1206                           
  1207                           ;main.c: 55:         fullSpeedAhead(&motorL,&motorR);
  1208   002756  0EEA               	movlw	low _motorL
  1209   002758  6E14               	movwf	fullSpeedAhead@mL^0,c
  1210   00275A  0E00               	movlw	high _motorL
  1211   00275C  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1212   00275E  0EE1               	movlw	low _motorR
  1213   002760  6E16               	movwf	fullSpeedAhead@mR^0,c
  1214   002762  0E00               	movlw	high _motorR
  1215   002764  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1216   002766  EC96  F01E         	call	_fullSpeedAhead	;wreg free
  1217   00276A                     
  1218                           ;main.c: 56:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1219   00276A  0E52               	movlw	82
  1220   00276C  6E5E               	movwf	(??_main+1)^0,c
  1221   00276E  0E2B               	movlw	43
  1222   002770  6E5D               	movwf	??_main^0,c
  1223   002772  0E00               	movlw	0
  1224   002774                     u4107:
  1225   002774  2EE8               	decfsz	wreg,f,c
  1226   002776  D7FE               	bra	u4107
  1227   002778  2E5D               	decfsz	??_main^0,f,c
  1228   00277A  D7FC               	bra	u4107
  1229   00277C  2E5E               	decfsz	(??_main+1)^0,f,c
  1230   00277E  D7FA               	bra	u4107
  1231   002780  D000               	nop2	
  1232   002782                     
  1233                           ;main.c: 57:         if (maxTime==1){
  1234   002782  0100               	movlb	0	; () banked
  1235   002784  05DE               	decf	_maxTime& (0+255),w,b	;volatile
  1236   002786  11DF               	iorwf	(_maxTime+1)& (0+255),w,b	;volatile
  1237   002788  A4D8               	btfss	status,2,c
  1238   00278A  EFC9  F013         	goto	u3981
  1239   00278E  EFCB  F013         	goto	u3980
  1240   002792                     u3981:
  1241   002792  EF28  F014         	goto	l4330
  1242   002796                     u3980:
  1243   002796                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 58:             stop(&motorL,&motorR);
  1246   002796  0EEA               	movlw	low _motorL
  1247   002798  6E14               	movwf	stop@mL^0,c
  1248   00279A  0E00               	movlw	high _motorL
  1249   00279C  6E15               	movwf	(stop@mL+1)^0,c
  1250   00279E  0EE1               	movlw	low _motorR
  1251   0027A0  6E16               	movwf	stop@mR^0,c
  1252   0027A2  0E00               	movlw	high _motorR
  1253   0027A4  6E17               	movwf	(stop@mR+1)^0,c
  1254   0027A6  EC58  F01C         	call	_stop	;wreg free
  1255   0027AA                     
  1256                           ;main.c: 59:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  1257   0027AA  0EF4               	movlw	244
  1258   0027AC  6E5E               	movwf	(??_main+1)^0,c
  1259   0027AE  0E82               	movlw	130
  1260   0027B0  6E5D               	movwf	??_main^0,c
  1261   0027B2  0E05               	movlw	5
  1262   0027B4                     u4117:
  1263   0027B4  2EE8               	decfsz	wreg,f,c
  1264   0027B6  D7FE               	bra	u4117
  1265   0027B8  2E5D               	decfsz	??_main^0,f,c
  1266   0027BA  D7FC               	bra	u4117
  1267   0027BC  2E5E               	decfsz	(??_main+1)^0,f,c
  1268   0027BE  D7FA               	bra	u4117
  1269   0027C0  F000               	nop	
  1270   0027C2  EF28  F014         	goto	l4330
  1271   0027C6                     l4316:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;main.c: 63:             colour_read_all(&colorf);
  1275   0027C6  0E70               	movlw	low _colorf
  1276   0027C8  6E1A               	movwf	colour_read_all@cf^0,c
  1277   0027CA  0E01               	movlw	high _colorf
  1278   0027CC  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1279   0027CE  EC07  F018         	call	_colour_read_all	;wreg free
  1280   0027D2                     
  1281                           ;main.c: 64:             Color2String(data,&colorf);
  1282   0027D2  0E75               	movlw	low main@data
  1283   0027D4  6E45               	movwf	Color2String@buf^0,c
  1284   0027D6  0E00               	movlw	high main@data
  1285   0027D8  6E46               	movwf	(Color2String@buf+1)^0,c
  1286   0027DA  0E70               	movlw	low _colorf
  1287   0027DC  6E47               	movwf	Color2String@cf^0,c
  1288   0027DE  0E01               	movlw	high _colorf
  1289   0027E0  6E48               	movwf	(Color2String@cf+1)^0,c
  1290   0027E2  EC92  F021         	call	_Color2String	;wreg free
  1291   0027E6                     
  1292                           ;main.c: 67:              if (colorf.Cf<100)
  1293   0027E6  C17C  F001         	movff	_colorf+12,___flge@ff1
  1294   0027EA  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1295   0027EE  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1296   0027F2  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1297   0027F6  0E00               	movlw	0
  1298   0027F8  6E05               	movwf	___flge@ff2^0,c
  1299   0027FA  0E00               	movlw	0
  1300   0027FC  6E06               	movwf	(___flge@ff2+1)^0,c
  1301   0027FE  0EC8               	movlw	200
  1302   002800  6E07               	movwf	(___flge@ff2+2)^0,c
  1303   002802  0E42               	movlw	66
  1304   002804  6E08               	movwf	(___flge@ff2+3)^0,c
  1305   002806  EC0D  F019         	call	___flge	;wreg free
  1306   00280A  B0D8               	btfsc	status,0,c
  1307   00280C  EF0A  F014         	goto	u3991
  1308   002810  EF0C  F014         	goto	u3990
  1309   002814                     u3991:
  1310   002814  EF28  F014         	goto	l4330
  1311   002818                     u3990:
  1312   002818                     
  1313                           ;main.c: 68:              {;main.c: 70:                  wall=1;
  1314   002818  0E01               	movlw	1
  1315   00281A  0100               	movlb	0	; () banked
  1316   00281C  6FD9               	movwf	main@wall& (0+255),b
  1317   00281E                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 71:                  ClickLEDOn(1);
  1320   00281E  0E01               	movlw	1
  1321   002820  ECCD  F021         	call	_ClickLEDOn
  1322   002824                     
  1323                           ;main.c: 72:                  stop(&motorL,&motorR);
  1324   002824  0EEA               	movlw	low _motorL
  1325   002826  6E14               	movwf	stop@mL^0,c
  1326   002828  0E00               	movlw	high _motorL
  1327   00282A  6E15               	movwf	(stop@mL+1)^0,c
  1328   00282C  0EE1               	movlw	low _motorR
  1329   00282E  6E16               	movwf	stop@mR^0,c
  1330   002830  0E00               	movlw	high _motorR
  1331   002832  6E17               	movwf	(stop@mR+1)^0,c
  1332   002834  EC58  F01C         	call	_stop	;wreg free
  1333   002838                     
  1334                           ;main.c: 73:                  _delay((unsigned long)((2000)*(64000000/4000.0)));
  1335   002838  0EA3               	movlw	163
  1336   00283A  6E5E               	movwf	(??_main+1)^0,c
  1337   00283C  0E57               	movlw	87
  1338   00283E  6E5D               	movwf	??_main^0,c
  1339   002840  0E02               	movlw	2
  1340   002842                     u4127:
  1341   002842  2EE8               	decfsz	wreg,f,c
  1342   002844  D7FE               	bra	u4127
  1343   002846  2E5D               	decfsz	??_main^0,f,c
  1344   002848  D7FC               	bra	u4127
  1345   00284A  2E5E               	decfsz	(??_main+1)^0,f,c
  1346   00284C  D7FA               	bra	u4127
  1347   00284E  D000               	nop2	
  1348   002850                     l4330:
  1349                           
  1350                           ;main.c: 62:         while (!wall){
  1351   002850  0100               	movlb	0	; () banked
  1352   002852  51D9               	movf	main@wall& (0+255),w,b
  1353   002854  B4D8               	btfsc	status,2,c
  1354   002856  EF2F  F014         	goto	u4001
  1355   00285A  EF31  F014         	goto	u4000
  1356   00285E                     u4001:
  1357   00285E  EFE3  F013         	goto	l4316
  1358   002862                     u4000:
  1359   002862                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 76:         colour_read_all(&colorf);
  1362   002862  0E70               	movlw	low _colorf
  1363   002864  6E1A               	movwf	colour_read_all@cf^0,c
  1364   002866  0E01               	movlw	high _colorf
  1365   002868  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1366   00286A  EC07  F018         	call	_colour_read_all	;wreg free
  1367   00286E                     
  1368                           ;main.c: 77:         RGB2Hue(&colorf);
  1369   00286E  0E70               	movlw	low _colorf
  1370   002870  6E57               	movwf	RGB2Hue@cf^0,c
  1371   002872  0E01               	movlw	high _colorf
  1372   002874  6E58               	movwf	(RGB2Hue@cf+1)^0,c
  1373   002876  EC29  F007         	call	_RGB2Hue	;wreg free
  1374   00287A                     
  1375                           ;main.c: 78:         Hue2Colour(&colorf);
  1376   00287A  0E70               	movlw	low _colorf
  1377   00287C  6E0D               	movwf	Hue2Colour@cf^0,c
  1378   00287E  0E01               	movlw	high _colorf
  1379   002880  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1380   002882  ECAA  F00A         	call	_Hue2Colour	;wreg free
  1381                           
  1382                           ;main.c: 79:         Colour2Action(&colorf);
  1383   002886  0E70               	movlw	low _colorf
  1384   002888  6E28               	movwf	Colour2Action@cf^0,c
  1385   00288A  0E01               	movlw	high _colorf
  1386   00288C  6E29               	movwf	(Colour2Action@cf+1)^0,c
  1387   00288E  EC43  F015         	call	_Colour2Action	;wreg free
  1388   002892                     
  1389                           ;main.c: 82:         Color2String(data,&colorf);
  1390   002892  0E75               	movlw	low main@data
  1391   002894  6E45               	movwf	Color2String@buf^0,c
  1392   002896  0E00               	movlw	high main@data
  1393   002898  6E46               	movwf	(Color2String@buf+1)^0,c
  1394   00289A  0E70               	movlw	low _colorf
  1395   00289C  6E47               	movwf	Color2String@cf^0,c
  1396   00289E  0E01               	movlw	high _colorf
  1397   0028A0  6E48               	movwf	(Color2String@cf+1)^0,c
  1398   0028A2  EC92  F021         	call	_Color2String	;wreg free
  1399   0028A6                     
  1400                           ;main.c: 83:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1401   0028A6  0E52               	movlw	82
  1402   0028A8  6E5E               	movwf	(??_main+1)^0,c
  1403   0028AA  0E2B               	movlw	43
  1404   0028AC  6E5D               	movwf	??_main^0,c
  1405   0028AE  0E00               	movlw	0
  1406   0028B0                     u4137:
  1407   0028B0  2EE8               	decfsz	wreg,f,c
  1408   0028B2  D7FE               	bra	u4137
  1409   0028B4  2E5D               	decfsz	??_main^0,f,c
  1410   0028B6  D7FC               	bra	u4137
  1411   0028B8  2E5E               	decfsz	(??_main+1)^0,f,c
  1412   0028BA  D7FA               	bra	u4137
  1413   0028BC  D000               	nop2	
  1414   0028BE                     
  1415                           ;main.c: 84:         wall=0;
  1416   0028BE  0E00               	movlw	0
  1417   0028C0  0100               	movlb	0	; () banked
  1418   0028C2  6FD9               	movwf	main@wall& (0+255),b
  1419   0028C4                     
  1420                           ; BSR set to: 0
  1421                           ;main.c: 85:         ClickLEDOn(0);
  1422   0028C4  0E00               	movlw	0
  1423   0028C6  ECCD  F021         	call	_ClickLEDOn
  1424   0028CA  EFAB  F013         	goto	l4306
  1425   0028CE  EF16  F000         	goto	start
  1426   0028D2                     __end_of_main:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _initUSART4 *****************
  1430 ;; Defined at:
  1431 ;;		line 7 in file "serial.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text1
  1460   00446A                     __ptext1:
  1461                           	callstack 0
  1462   00446A                     _initUSART4:
  1463                           	callstack 29
  1464   00446A                     
  1465                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1466   00446A  8883               	bsf	131,4,c	;volatile
  1467                           
  1468                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1469   00446C  8283               	bsf	131,1,c	;volatile
  1470   00446E                     
  1471                           ;serial.c: 10:     RC0PPS = 0x12;
  1472   00446E  0E12               	movlw	18
  1473   004470  010E               	movlb	14	; () banked
  1474   004472  6F62               	movwf	98,b	;volatile
  1475                           
  1476                           ;serial.c: 11:     RX4PPS = 0x11;
  1477   004474  0E11               	movlw	17
  1478   004476  6F15               	movwf	21,b	;volatile
  1479   004478                     
  1480                           ; BSR set to: 14
  1481                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1482   004478  97E9               	bcf	233,3,b	;volatile
  1483   00447A                     
  1484                           ; BSR set to: 14
  1485                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1486   00447A  95E8               	bcf	232,2,b	;volatile
  1487                           
  1488                           ;serial.c: 15:     SP4BRGL = 51;
  1489   00447C  0E33               	movlw	51
  1490   00447E  6FE5               	movwf	229,b	;volatile
  1491                           
  1492                           ;serial.c: 16:     SP4BRGH = 0;
  1493   004480  0E00               	movlw	0
  1494   004482  6FE6               	movwf	230,b	;volatile
  1495   004484                     
  1496                           ; BSR set to: 14
  1497                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1498   004484  89E7               	bsf	231,4,b	;volatile
  1499   004486                     
  1500                           ; BSR set to: 14
  1501                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1502   004486  8BE8               	bsf	232,5,b	;volatile
  1503   004488                     
  1504                           ; BSR set to: 14
  1505                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1506   004488  8FE7               	bsf	231,7,b	;volatile
  1507   00448A                     
  1508                           ; BSR set to: 14
  1509   00448A  0012               	return		;funcret
  1510   00448C                     __end_of_initUSART4:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _initDCmotorsPWM *****************
  1514 ;; Defined at:
  1515 ;;		line 11 in file "dc_motor.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;Total ram usage:        2 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text2
  1544   003A82                     __ptext2:
  1545                           	callstack 0
  1546   003A82                     _initDCmotorsPWM:
  1547                           	callstack 29
  1548   003A82                     
  1549                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1550   003A82  9485               	bcf	133,2,c	;volatile
  1551                           
  1552                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1553   003A84  9E83               	bcf	131,7,c	;volatile
  1554                           
  1555                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1556   003A86  9885               	bcf	133,4,c	;volatile
  1557                           
  1558                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1559   003A88  9C87               	bcf	135,6,c	;volatile
  1560                           
  1561                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1562   003A8A  947D               	bcf	125,2,c	;volatile
  1563                           
  1564                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1565   003A8C  9E7B               	bcf	123,7,c	;volatile
  1566                           
  1567                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1568   003A8E  987D               	bcf	125,4,c	;volatile
  1569                           
  1570                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1571   003A90  9C7F               	bcf	127,6,c	;volatile
  1572   003A92                     
  1573                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1574   003A92  0E05               	movlw	5
  1575   003A94  010E               	movlb	14	; () banked
  1576   003A96  6F74               	movwf	116,b	;volatile
  1577                           
  1578                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1579   003A98  0E06               	movlw	6
  1580   003A9A  6F76               	movwf	118,b	;volatile
  1581                           
  1582                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1583   003A9C  0E07               	movlw	7
  1584   003A9E  6F69               	movwf	105,b	;volatile
  1585                           
  1586                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1587   003AA0  0E08               	movlw	8
  1588   003AA2  6F88               	movwf	136,b	;volatile
  1589                           
  1590                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1591   003AA4  50BD               	movf	189,w,c	;volatile
  1592   003AA6  0B8F               	andlw	-113
  1593   003AA8  0940               	iorlw	64
  1594   003AAA  6EBD               	movwf	189,c	;volatile
  1595                           
  1596                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1597   003AAC  0EE0               	movlw	-32
  1598   003AAE  16BE               	andwf	190,f,c	;volatile
  1599                           
  1600                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1601   003AB0  50BF               	movf	191,w,c	;volatile
  1602   003AB2  0BF0               	andlw	-16
  1603   003AB4  0901               	iorlw	1
  1604   003AB6  6EBF               	movwf	191,c	;volatile
  1605   003AB8                     
  1606                           ; BSR set to: 14
  1607                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1608   003AB8  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1609   003ABC                     
  1610                           ; BSR set to: 14
  1611                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1612   003ABC  8EBD               	bsf	189,7,c	;volatile
  1613                           
  1614                           ;dc_motor.c: 40:     CCPR1H=0;
  1615   003ABE  0E00               	movlw	0
  1616   003AC0  6EAA               	movwf	170,c	;volatile
  1617                           
  1618                           ;dc_motor.c: 41:     CCPR2H=0;
  1619   003AC2  0E00               	movlw	0
  1620   003AC4  6EA6               	movwf	166,c	;volatile
  1621                           
  1622                           ;dc_motor.c: 42:     CCPR3H=0;
  1623   003AC6  0E00               	movlw	0
  1624   003AC8  010F               	movlb	15	; () banked
  1625   003ACA  6F25               	movwf	37,b	;volatile
  1626                           
  1627                           ;dc_motor.c: 43:     CCPR4H=0;
  1628   003ACC  0E00               	movlw	0
  1629   003ACE  6F21               	movwf	33,b	;volatile
  1630                           
  1631                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1632   003AD0  0EFC               	movlw	-4
  1633   003AD2  16AD               	andwf	173,f,c	;volatile
  1634                           
  1635                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1636   003AD4  0EF3               	movlw	-13
  1637   003AD6  16AD               	andwf	173,f,c	;volatile
  1638                           
  1639                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1640   003AD8  0ECF               	movlw	-49
  1641   003ADA  16AD               	andwf	173,f,c	;volatile
  1642                           
  1643                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1644   003ADC  0E3F               	movlw	-193
  1645   003ADE  16AD               	andwf	173,f,c	;volatile
  1646   003AE0                     
  1647                           ; BSR set to: 15
  1648                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1649   003AE0  88AB               	bsf	171,4,c	;volatile
  1650                           
  1651                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1652   003AE2  50AB               	movf	171,w,c	;volatile
  1653   003AE4  0BF0               	andlw	-16
  1654   003AE6  090C               	iorlw	12
  1655   003AE8  6EAB               	movwf	171,c	;volatile
  1656   003AEA                     
  1657                           ; BSR set to: 15
  1658                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1659   003AEA  8EAB               	bsf	171,7,c	;volatile
  1660   003AEC                     
  1661                           ; BSR set to: 15
  1662                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1663   003AEC  88A7               	bsf	167,4,c	;volatile
  1664                           
  1665                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1666   003AEE  50A7               	movf	167,w,c	;volatile
  1667   003AF0  0BF0               	andlw	-16
  1668   003AF2  090C               	iorlw	12
  1669   003AF4  6EA7               	movwf	167,c	;volatile
  1670   003AF6                     
  1671                           ; BSR set to: 15
  1672                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1673   003AF6  8EA7               	bsf	167,7,c	;volatile
  1674   003AF8                     
  1675                           ; BSR set to: 15
  1676                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1677   003AF8  8926               	bsf	38,4,b	;volatile
  1678                           
  1679                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1680   003AFA  5126               	movf	38,w,b	;volatile
  1681   003AFC  0BF0               	andlw	-16
  1682   003AFE  090C               	iorlw	12
  1683   003B00  6F26               	movwf	38,b	;volatile
  1684   003B02                     
  1685                           ; BSR set to: 15
  1686                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1687   003B02  8F26               	bsf	38,7,b	;volatile
  1688   003B04                     
  1689                           ; BSR set to: 15
  1690                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1691   003B04  8922               	bsf	34,4,b	;volatile
  1692                           
  1693                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1694   003B06  5122               	movf	34,w,b	;volatile
  1695   003B08  0BF0               	andlw	-16
  1696   003B0A  090C               	iorlw	12
  1697   003B0C  6F22               	movwf	34,b	;volatile
  1698   003B0E                     
  1699                           ; BSR set to: 15
  1700                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1701   003B0E  8F22               	bsf	34,7,b	;volatile
  1702   003B10                     
  1703                           ; BSR set to: 15
  1704   003B10  0012               	return		;funcret
  1705   003B12                     __end_of_initDCmotorsPWM:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _colour_read_all *****************
  1709 ;; Defined at:
  1710 ;;		line 8 in file "colorfunctions.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1713 ;;		 -> colorf(22), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  C               4   39[COMRAM] float 
  1716 ;;  B               4   35[COMRAM] float 
  1717 ;;  G               4   31[COMRAM] float 
  1718 ;;  R               4   27[COMRAM] float 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1731 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;Total ram usage:       18 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 4
  1735 ;; This function calls:
  1736 ;;		___xxtofl
  1737 ;;		_color_read_Blue
  1738 ;;		_color_read_Clear
  1739 ;;		_color_read_Green
  1740 ;;		_color_read_Red
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text3
  1747   00300E                     __ptext3:
  1748                           	callstack 0
  1749   00300E                     _colour_read_all:
  1750                           	callstack 26
  1751   00300E                     
  1752                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1753   00300E  EC18  F020         	call	_color_read_Red	;wreg free
  1754   003012  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1755   003016  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1756   00301A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1757   00301C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1758   00301E  0E00               	movlw	0
  1759   003020  EC69  F014         	call	___xxtofl
  1760   003024  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1761   003028  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1762   00302C  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1763   003030  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1764                           
  1765                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1766   003034  EC40  F020         	call	_color_read_Green	;wreg free
  1767   003038  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1768   00303C  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1769   003040  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1770   003042  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1771   003044  0E00               	movlw	0
  1772   003046  EC69  F014         	call	___xxtofl
  1773   00304A  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1774   00304E  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1775   003052  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1776   003056  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1777                           
  1778                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1779   00305A  EC90  F020         	call	_color_read_Blue	;wreg free
  1780   00305E  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1781   003062  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1782   003066  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1783   003068  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1784   00306A  0E00               	movlw	0
  1785   00306C  EC69  F014         	call	___xxtofl
  1786   003070  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1787   003074  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1788   003078  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1789   00307C  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1790                           
  1791                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1792   003080  EC68  F020         	call	_color_read_Clear	;wreg free
  1793   003084  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1794   003088  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1795   00308C  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1796   00308E  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1797   003090  0E00               	movlw	0
  1798   003092  EC69  F014         	call	___xxtofl
  1799   003096  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1800   00309A  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1801   00309E  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1802   0030A2  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1803   0030A6                     
  1804                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1805   0030A6  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1806   0030AA  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1807   0030AE  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1808   0030B2  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1809   0030B6  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1810   0030BA  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1811   0030BE                     
  1812                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1813   0030BE  EE20 F008          	lfsr	2,8
  1814   0030C2  501A               	movf	colour_read_all@cf^0,w,c
  1815   0030C4  26D9               	addwf	fsr2l,f,c
  1816   0030C6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1817   0030C8  22DA               	addwfc	fsr2h,f,c
  1818   0030CA  C024  FFDE         	movff	colour_read_all@B,postinc2
  1819   0030CE  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1820   0030D2  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1821   0030D6  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1822   0030DA                     
  1823                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1824   0030DA  EE20 F004          	lfsr	2,4
  1825   0030DE  501A               	movf	colour_read_all@cf^0,w,c
  1826   0030E0  26D9               	addwf	fsr2l,f,c
  1827   0030E2  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1828   0030E4  22DA               	addwfc	fsr2h,f,c
  1829   0030E6  C020  FFDE         	movff	colour_read_all@G,postinc2
  1830   0030EA  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1831   0030EE  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1832   0030F2  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1833   0030F6                     
  1834                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1835   0030F6  EE20 F00C          	lfsr	2,12
  1836   0030FA  501A               	movf	colour_read_all@cf^0,w,c
  1837   0030FC  26D9               	addwf	fsr2l,f,c
  1838   0030FE  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1839   003100  22DA               	addwfc	fsr2h,f,c
  1840   003102  C028  FFDE         	movff	colour_read_all@C,postinc2
  1841   003106  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  1842   00310A  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  1843   00310E  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  1844   003112  0012               	return		;funcret
  1845   003114                     __end_of_colour_read_all:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _color_read_Red *****************
  1849 ;; Defined at:
  1850 ;;		line 38 in file "colorclick.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  tmp             2    9[COMRAM] unsigned int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2    4[COMRAM] unsigned int 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;Total ram usage:        7 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 3
  1871 ;; This function calls:
  1872 ;;		_I2C_2_Master_Read
  1873 ;;		_I2C_2_Master_RepStart
  1874 ;;		_I2C_2_Master_Start
  1875 ;;		_I2C_2_Master_Stop
  1876 ;;		_I2C_2_Master_Write
  1877 ;; This function is called by:
  1878 ;;		_colour_read_all
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text4
  1883   004030                     __ptext4:
  1884                           	callstack 0
  1885   004030                     _color_read_Red:
  1886                           	callstack 26
  1887   004030                     
  1888                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  1889   004030  EC7F  F022         	call	_I2C_2_Master_Start	;wreg free
  1890                           
  1891                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  1892   004034  0E52               	movlw	82
  1893   004036  EC69  F022         	call	_I2C_2_Master_Write
  1894                           
  1895                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  1896   00403A  0EB6               	movlw	182
  1897   00403C  EC69  F022         	call	_I2C_2_Master_Write
  1898                           
  1899                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  1900   004040  EC75  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1901                           
  1902                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  1903   004044  0E53               	movlw	83
  1904   004046  EC69  F022         	call	_I2C_2_Master_Write
  1905                           
  1906                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  1907   00404A  0E01               	movlw	1
  1908   00404C  EC51  F021         	call	_I2C_2_Master_Read
  1909   004050  6E07               	movwf	??_color_read_Red^0,c
  1910   004052  5007               	movf	??_color_read_Red^0,w,c
  1911   004054  6E0A               	movwf	color_read_Red@tmp^0,c
  1912   004056  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1913                           
  1914                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1915   004058  0E00               	movlw	0
  1916   00405A  EC51  F021         	call	_I2C_2_Master_Read
  1917   00405E  6E07               	movwf	??_color_read_Red^0,c
  1918   004060  5007               	movf	??_color_read_Red^0,w,c
  1919   004062  6E09               	movwf	(??_color_read_Red+2)^0,c
  1920   004064  6A08               	clrf	(??_color_read_Red+1)^0,c
  1921   004066  500A               	movf	color_read_Red@tmp^0,w,c
  1922   004068  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1923   00406A  6E0A               	movwf	color_read_Red@tmp^0,c
  1924   00406C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1925   00406E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1926   004070  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1927                           
  1928                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  1929   004072  EC7A  F022         	call	_I2C_2_Master_Stop	;wreg free
  1930   004076                     
  1931                           ;colorclick.c: 49:  return tmp;
  1932   004076  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1933   00407A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1934   00407E  0012               	return		;funcret
  1935   004080                     __end_of_color_read_Red:
  1936                           	callstack 0
  1937                           
  1938 ;; *************** function _color_read_Green *****************
  1939 ;; Defined at:
  1940 ;;		line 51 in file "colorclick.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  tmp             2    9[COMRAM] unsigned int 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2    4[COMRAM] unsigned int 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;Total ram usage:        7 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 3
  1961 ;; This function calls:
  1962 ;;		_I2C_2_Master_Read
  1963 ;;		_I2C_2_Master_RepStart
  1964 ;;		_I2C_2_Master_Start
  1965 ;;		_I2C_2_Master_Stop
  1966 ;;		_I2C_2_Master_Write
  1967 ;; This function is called by:
  1968 ;;		_colour_read_all
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text5
  1973   004080                     __ptext5:
  1974                           	callstack 0
  1975   004080                     _color_read_Green:
  1976                           	callstack 26
  1977   004080                     
  1978                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  1979   004080  EC7F  F022         	call	_I2C_2_Master_Start	;wreg free
  1980                           
  1981                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  1982   004084  0E52               	movlw	82
  1983   004086  EC69  F022         	call	_I2C_2_Master_Write
  1984                           
  1985                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  1986   00408A  0EB8               	movlw	184
  1987   00408C  EC69  F022         	call	_I2C_2_Master_Write
  1988                           
  1989                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  1990   004090  EC75  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1991                           
  1992                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  1993   004094  0E53               	movlw	83
  1994   004096  EC69  F022         	call	_I2C_2_Master_Write
  1995                           
  1996                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  1997   00409A  0E01               	movlw	1
  1998   00409C  EC51  F021         	call	_I2C_2_Master_Read
  1999   0040A0  6E07               	movwf	??_color_read_Green^0,c
  2000   0040A2  5007               	movf	??_color_read_Green^0,w,c
  2001   0040A4  6E0A               	movwf	color_read_Green@tmp^0,c
  2002   0040A6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2003                           
  2004                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2005   0040A8  0E00               	movlw	0
  2006   0040AA  EC51  F021         	call	_I2C_2_Master_Read
  2007   0040AE  6E07               	movwf	??_color_read_Green^0,c
  2008   0040B0  5007               	movf	??_color_read_Green^0,w,c
  2009   0040B2  6E09               	movwf	(??_color_read_Green+2)^0,c
  2010   0040B4  6A08               	clrf	(??_color_read_Green+1)^0,c
  2011   0040B6  500A               	movf	color_read_Green@tmp^0,w,c
  2012   0040B8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2013   0040BA  6E0A               	movwf	color_read_Green@tmp^0,c
  2014   0040BC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2015   0040BE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2016   0040C0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2017                           
  2018                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2019   0040C2  EC7A  F022         	call	_I2C_2_Master_Stop	;wreg free
  2020   0040C6                     
  2021                           ;colorclick.c: 62:     return tmp;
  2022   0040C6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2023   0040CA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2024   0040CE  0012               	return		;funcret
  2025   0040D0                     __end_of_color_read_Green:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function _color_read_Clear *****************
  2029 ;; Defined at:
  2030 ;;		line 80 in file "colorclick.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  tmp             2    9[COMRAM] unsigned int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2    4[COMRAM] unsigned int 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2046 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;Total ram usage:        7 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 3
  2051 ;; This function calls:
  2052 ;;		_I2C_2_Master_Read
  2053 ;;		_I2C_2_Master_RepStart
  2054 ;;		_I2C_2_Master_Start
  2055 ;;		_I2C_2_Master_Stop
  2056 ;;		_I2C_2_Master_Write
  2057 ;; This function is called by:
  2058 ;;		_colour_read_all
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text6
  2063   0040D0                     __ptext6:
  2064                           	callstack 0
  2065   0040D0                     _color_read_Clear:
  2066                           	callstack 26
  2067   0040D0                     
  2068                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2069   0040D0  EC7F  F022         	call	_I2C_2_Master_Start	;wreg free
  2070                           
  2071                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2072   0040D4  0E52               	movlw	82
  2073   0040D6  EC69  F022         	call	_I2C_2_Master_Write
  2074                           
  2075                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2076   0040DA  0EB4               	movlw	180
  2077   0040DC  EC69  F022         	call	_I2C_2_Master_Write
  2078                           
  2079                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2080   0040E0  EC75  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2081                           
  2082                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2083   0040E4  0E53               	movlw	83
  2084   0040E6  EC69  F022         	call	_I2C_2_Master_Write
  2085                           
  2086                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2087   0040EA  0E01               	movlw	1
  2088   0040EC  EC51  F021         	call	_I2C_2_Master_Read
  2089   0040F0  6E07               	movwf	??_color_read_Clear^0,c
  2090   0040F2  5007               	movf	??_color_read_Clear^0,w,c
  2091   0040F4  6E0A               	movwf	color_read_Clear@tmp^0,c
  2092   0040F6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2093                           
  2094                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2095   0040F8  0E00               	movlw	0
  2096   0040FA  EC51  F021         	call	_I2C_2_Master_Read
  2097   0040FE  6E07               	movwf	??_color_read_Clear^0,c
  2098   004100  5007               	movf	??_color_read_Clear^0,w,c
  2099   004102  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2100   004104  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2101   004106  500A               	movf	color_read_Clear@tmp^0,w,c
  2102   004108  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2103   00410A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2104   00410C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2105   00410E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2106   004110  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2107                           
  2108                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2109   004112  EC7A  F022         	call	_I2C_2_Master_Stop	;wreg free
  2110   004116                     
  2111                           ;colorclick.c: 91:     return tmp;
  2112   004116  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2113   00411A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2114   00411E  0012               	return		;funcret
  2115   004120                     __end_of_color_read_Clear:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _color_read_Blue *****************
  2119 ;; Defined at:
  2120 ;;		line 65 in file "colorclick.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  tmp             2    9[COMRAM] unsigned int 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  2    4[COMRAM] unsigned int 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        7 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 3
  2141 ;; This function calls:
  2142 ;;		_I2C_2_Master_Read
  2143 ;;		_I2C_2_Master_RepStart
  2144 ;;		_I2C_2_Master_Start
  2145 ;;		_I2C_2_Master_Stop
  2146 ;;		_I2C_2_Master_Write
  2147 ;; This function is called by:
  2148 ;;		_colour_read_all
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text7
  2153   004120                     __ptext7:
  2154                           	callstack 0
  2155   004120                     _color_read_Blue:
  2156                           	callstack 26
  2157   004120                     
  2158                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2159   004120  EC7F  F022         	call	_I2C_2_Master_Start	;wreg free
  2160                           
  2161                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2162   004124  0E52               	movlw	82
  2163   004126  EC69  F022         	call	_I2C_2_Master_Write
  2164                           
  2165                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2166   00412A  0EBA               	movlw	186
  2167   00412C  EC69  F022         	call	_I2C_2_Master_Write
  2168                           
  2169                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2170   004130  EC75  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2171                           
  2172                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2173   004134  0E53               	movlw	83
  2174   004136  EC69  F022         	call	_I2C_2_Master_Write
  2175                           
  2176                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2177   00413A  0E01               	movlw	1
  2178   00413C  EC51  F021         	call	_I2C_2_Master_Read
  2179   004140  6E07               	movwf	??_color_read_Blue^0,c
  2180   004142  5007               	movf	??_color_read_Blue^0,w,c
  2181   004144  6E0A               	movwf	color_read_Blue@tmp^0,c
  2182   004146  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2183                           
  2184                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2185   004148  0E00               	movlw	0
  2186   00414A  EC51  F021         	call	_I2C_2_Master_Read
  2187   00414E  6E07               	movwf	??_color_read_Blue^0,c
  2188   004150  5007               	movf	??_color_read_Blue^0,w,c
  2189   004152  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2190   004154  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2191   004156  500A               	movf	color_read_Blue@tmp^0,w,c
  2192   004158  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2193   00415A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2194   00415C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2195   00415E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2196   004160  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2197                           
  2198                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2199   004162  EC7A  F022         	call	_I2C_2_Master_Stop	;wreg free
  2200   004166                     
  2201                           ;colorclick.c: 76:     return tmp;
  2202   004166  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2203   00416A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2204   00416E  0012               	return		;funcret
  2205   004170                     __end_of_color_read_Blue:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _I2C_2_Master_RepStart *****************
  2209 ;; Defined at:
  2210 ;;		line 33 in file "i2c.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 2
  2231 ;; This function calls:
  2232 ;;		_I2C_2_Master_Idle
  2233 ;; This function is called by:
  2234 ;;		_color_read_Red
  2235 ;;		_color_read_Green
  2236 ;;		_color_read_Blue
  2237 ;;		_color_read_Clear
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text8
  2242   0044EA                     __ptext8:
  2243                           	callstack 0
  2244   0044EA                     _I2C_2_Master_RepStart:
  2245                           	callstack 26
  2246   0044EA                     
  2247                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2248   0044EA  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2249   0044EE                     
  2250                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2251   0044EE  010E               	movlb	14	; () banked
  2252   0044F0  83DA               	bsf	218,1,b	;volatile
  2253   0044F2                     
  2254                           ; BSR set to: 14
  2255   0044F2  0012               	return		;funcret
  2256   0044F4                     __end_of_I2C_2_Master_RepStart:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _I2C_2_Master_Read *****************
  2260 ;; Defined at:
  2261 ;;		line 51 in file "i2c.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  ack             1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  ack             1    2[COMRAM] unsigned char 
  2266 ;;  tmp             1    3[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;Total ram usage:        3 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 2
  2283 ;; This function calls:
  2284 ;;		_I2C_2_Master_Idle
  2285 ;; This function is called by:
  2286 ;;		_color_read_Red
  2287 ;;		_color_read_Green
  2288 ;;		_color_read_Blue
  2289 ;;		_color_read_Clear
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text9
  2294   0042A2                     __ptext9:
  2295                           	callstack 0
  2296   0042A2                     _I2C_2_Master_Read:
  2297                           	callstack 26
  2298                           
  2299                           ; BSR set to: 14
  2300                           ;incstack = 0
  2301                           ;I2C_2_Master_Read@ack stored from wreg
  2302   0042A2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2303   0042A4                     
  2304                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2305   0042A4  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2306   0042A8                     
  2307                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2308   0042A8  010E               	movlb	14	; () banked
  2309   0042AA  87DA               	bsf	218,3,b	;volatile
  2310                           
  2311                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2312   0042AC  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2313   0042B0                     
  2314                           ;i2c.c: 57:   tmp = SSP2BUF;
  2315   0042B0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2316                           
  2317                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2318   0042B4  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2319   0042B8                     
  2320                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2321   0042B8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2322   0042BA  B4D8               	btfsc	status,2,c
  2323   0042BC  EF62  F021         	goto	u2421
  2324   0042C0  EF66  F021         	goto	u2420
  2325   0042C4                     u2421:
  2326   0042C4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2327   0042C6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2328   0042C8  EF67  F021         	goto	u2438
  2329   0042CC                     u2420:
  2330   0042CC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2331   0042CE                     u2438:
  2332   0042CE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2333   0042D0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2334   0042D2  010E               	movlb	14	; () banked
  2335   0042D4  51DA               	movf	218,w,b	;volatile
  2336   0042D6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2337   0042D8  0BDF               	andlw	-33
  2338   0042DA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2339   0042DC  6FDA               	movwf	218,b	;volatile
  2340   0042DE                     
  2341                           ; BSR set to: 14
  2342                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2343   0042DE  89DA               	bsf	218,4,b	;volatile
  2344   0042E0                     
  2345                           ; BSR set to: 14
  2346                           ;i2c.c: 61:   return tmp;
  2347   0042E0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2348   0042E2                     
  2349                           ; BSR set to: 14
  2350   0042E2  0012               	return		;funcret
  2351   0042E4                     __end_of_I2C_2_Master_Read:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _color_click_init *****************
  2355 ;; Defined at:
  2356 ;;		line 6 in file "colorclick.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 4
  2377 ;; This function calls:
  2378 ;;		_I2C_2_Master_Init
  2379 ;;		_color_writetoaddr
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text10
  2386   0042E4                     __ptext10:
  2387                           	callstack 0
  2388   0042E4                     _color_click_init:
  2389                           	callstack 26
  2390   0042E4                     
  2391                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2392   0042E4  ECE7  F021         	call	_I2C_2_Master_Init	;wreg free
  2393   0042E8                     
  2394                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2395   0042E8  0E01               	movlw	1
  2396   0042EA  6E03               	movwf	color_writetoaddr@value^0,c
  2397   0042EC  0E00               	movlw	0
  2398   0042EE  EC46  F022         	call	_color_writetoaddr
  2399   0042F2                     
  2400                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2401   0042F2  0E3F               	movlw	63
  2402   0042F4  6E05               	movwf	??_color_click_init^0,c
  2403   0042F6  0E55               	movlw	85
  2404   0042F8                     u4147:
  2405   0042F8  2EE8               	decfsz	wreg,f,c
  2406   0042FA  D7FE               	bra	u4147
  2407   0042FC  2E05               	decfsz	??_color_click_init^0,f,c
  2408   0042FE  D7FC               	bra	u4147
  2409   004300  F000               	nop	
  2410   004302                     
  2411                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2412   004302  0E03               	movlw	3
  2413   004304  6E03               	movwf	color_writetoaddr@value^0,c
  2414   004306  0E00               	movlw	0
  2415   004308  EC46  F022         	call	_color_writetoaddr
  2416   00430C                     
  2417                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2418   00430C  0ED6               	movlw	214
  2419   00430E  6E03               	movwf	color_writetoaddr@value^0,c
  2420   004310  0E01               	movlw	1
  2421   004312  EC46  F022         	call	_color_writetoaddr
  2422   004316                     
  2423                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2424   004316  927F               	bcf	127,1,c	;volatile
  2425   004318                     
  2426                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2427   004318  9287               	bcf	135,1,c	;volatile
  2428   00431A                     
  2429                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2430   00431A  9879               	bcf	121,4,c	;volatile
  2431   00431C                     
  2432                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2433   00431C  9881               	bcf	129,4,c	;volatile
  2434   00431E                     
  2435                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2436   00431E  9E7E               	bcf	126,7,c	;volatile
  2437   004320                     
  2438                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2439   004320  9E86               	bcf	134,7,c	;volatile
  2440   004322  0012               	return		;funcret
  2441   004324                     __end_of_color_click_init:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _color_writetoaddr *****************
  2445 ;; Defined at:
  2446 ;;		line 30 in file "colorclick.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  address         1    wreg     unsigned char 
  2449 ;;  value           1    2[COMRAM] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  address         1    3[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:        2 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 3
  2468 ;; This function calls:
  2469 ;;		_I2C_2_Master_Start
  2470 ;;		_I2C_2_Master_Stop
  2471 ;;		_I2C_2_Master_Write
  2472 ;; This function is called by:
  2473 ;;		_color_click_init
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text11
  2478   00448C                     __ptext11:
  2479                           	callstack 0
  2480   00448C                     _color_writetoaddr:
  2481                           	callstack 26
  2482                           
  2483                           ;incstack = 0
  2484                           ;color_writetoaddr@address stored from wreg
  2485   00448C  6E04               	movwf	color_writetoaddr@address^0,c
  2486   00448E                     
  2487                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2488   00448E  EC7F  F022         	call	_I2C_2_Master_Start	;wreg free
  2489                           
  2490                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2491   004492  0E52               	movlw	82
  2492   004494  EC69  F022         	call	_I2C_2_Master_Write
  2493                           
  2494                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2495   004498  5004               	movf	color_writetoaddr@address^0,w,c
  2496   00449A  0980               	iorlw	128
  2497   00449C  EC69  F022         	call	_I2C_2_Master_Write
  2498                           
  2499                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2500   0044A0  5003               	movf	color_writetoaddr@value^0,w,c
  2501   0044A2  EC69  F022         	call	_I2C_2_Master_Write
  2502                           
  2503                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2504   0044A6  EC7A  F022         	call	_I2C_2_Master_Stop	;wreg free
  2505   0044AA  0012               	return		;funcret
  2506   0044AC                     __end_of_color_writetoaddr:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _I2C_2_Master_Write *****************
  2510 ;; Defined at:
  2511 ;;		line 45 in file "i2c.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  data_byte       1    wreg     unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  data_byte       1    1[COMRAM] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;Total ram usage:        1 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 2
  2532 ;; This function calls:
  2533 ;;		_I2C_2_Master_Idle
  2534 ;; This function is called by:
  2535 ;;		_color_writetoaddr
  2536 ;;		_color_read_Red
  2537 ;;		_color_read_Green
  2538 ;;		_color_read_Blue
  2539 ;;		_color_read_Clear
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text12
  2544   0044D2                     __ptext12:
  2545                           	callstack 0
  2546   0044D2                     _I2C_2_Master_Write:
  2547                           	callstack 26
  2548                           
  2549                           ;incstack = 0
  2550                           ;I2C_2_Master_Write@data_byte stored from wreg
  2551   0044D2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2552   0044D4                     
  2553                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2554   0044D4  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2555   0044D8                     
  2556                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2557   0044D8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2558   0044DC  0012               	return		;funcret
  2559   0044DE                     __end_of_I2C_2_Master_Write:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _I2C_2_Master_Stop *****************
  2563 ;; Defined at:
  2564 ;;		line 39 in file "i2c.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 2
  2585 ;; This function calls:
  2586 ;;		_I2C_2_Master_Idle
  2587 ;; This function is called by:
  2588 ;;		_color_writetoaddr
  2589 ;;		_color_read_Red
  2590 ;;		_color_read_Green
  2591 ;;		_color_read_Blue
  2592 ;;		_color_read_Clear
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text13
  2597   0044F4                     __ptext13:
  2598                           	callstack 0
  2599   0044F4                     _I2C_2_Master_Stop:
  2600                           	callstack 26
  2601   0044F4                     
  2602                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2603   0044F4  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2604   0044F8                     
  2605                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2606   0044F8  010E               	movlb	14	; () banked
  2607   0044FA  85DA               	bsf	218,2,b	;volatile
  2608   0044FC                     
  2609                           ; BSR set to: 14
  2610   0044FC  0012               	return		;funcret
  2611   0044FE                     __end_of_I2C_2_Master_Stop:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _I2C_2_Master_Start *****************
  2615 ;; Defined at:
  2616 ;;		line 27 in file "i2c.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 2
  2637 ;; This function calls:
  2638 ;;		_I2C_2_Master_Idle
  2639 ;; This function is called by:
  2640 ;;		_color_writetoaddr
  2641 ;;		_color_read_Red
  2642 ;;		_color_read_Green
  2643 ;;		_color_read_Blue
  2644 ;;		_color_read_Clear
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text14
  2649   0044FE                     __ptext14:
  2650                           	callstack 0
  2651   0044FE                     _I2C_2_Master_Start:
  2652                           	callstack 26
  2653   0044FE                     
  2654                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2655   0044FE  ECFC  F021         	call	_I2C_2_Master_Idle	;wreg free
  2656   004502                     
  2657                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2658   004502  010E               	movlb	14	; () banked
  2659   004504  81DA               	bsf	218,0,b	;volatile
  2660   004506                     
  2661                           ; BSR set to: 14
  2662   004506  0012               	return		;funcret
  2663   004508                     __end_of_I2C_2_Master_Start:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function _I2C_2_Master_Idle *****************
  2667 ;; Defined at:
  2668 ;;		line 22 in file "i2c.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;Total ram usage:        1 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_I2C_2_Master_Start
  2693 ;;		_I2C_2_Master_RepStart
  2694 ;;		_I2C_2_Master_Stop
  2695 ;;		_I2C_2_Master_Write
  2696 ;;		_I2C_2_Master_Read
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text15
  2701   0043F8                     __ptext15:
  2702                           	callstack 0
  2703   0043F8                     _I2C_2_Master_Idle:
  2704                           	callstack 26
  2705   0043F8                     l30:
  2706   0043F8  010E               	movlb	14	; () banked
  2707   0043FA  B5D8               	btfsc	216,2,b	;volatile
  2708   0043FC  EF02  F022         	goto	u2341
  2709   004400  EF04  F022         	goto	u2340
  2710   004404                     u2341:
  2711   004404  EFFC  F021         	goto	l30
  2712   004408                     u2340:
  2713   004408                     
  2714                           ; BSR set to: 14
  2715   004408  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2716   00440C  0E1F               	movlw	31
  2717   00440E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2718   004410  A4D8               	btfss	status,2,c
  2719   004412  EF0D  F022         	goto	u2351
  2720   004416  EF0F  F022         	goto	u2350
  2721   00441A                     u2351:
  2722   00441A  EFFC  F021         	goto	l30
  2723   00441E                     u2350:
  2724   00441E                     
  2725                           ; BSR set to: 14
  2726   00441E  0012               	return		;funcret
  2727   004420                     __end_of_I2C_2_Master_Idle:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _I2C_2_Master_Init *****************
  2731 ;; Defined at:
  2732 ;;		line 4 in file "i2c.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;;		_color_click_init
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text16
  2762   0043CE                     __ptext16:
  2763                           	callstack 0
  2764   0043CE                     _I2C_2_Master_Init:
  2765                           	callstack 28
  2766   0043CE                     
  2767                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2768   0043CE  010E               	movlb	14	; () banked
  2769   0043D0  51D9               	movf	217,w,b	;volatile
  2770   0043D2  0BF0               	andlw	-16
  2771   0043D4  0908               	iorlw	8
  2772   0043D6  6FD9               	movwf	217,b	;volatile
  2773   0043D8                     
  2774                           ; BSR set to: 14
  2775                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2776   0043D8  8BD9               	bsf	217,5,b	;volatile
  2777                           
  2778                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2779   0043DA  0E9F               	movlw	159
  2780   0043DC  6FD6               	movwf	214,b	;volatile
  2781   0043DE                     
  2782                           ; BSR set to: 14
  2783                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2784   0043DE  8A84               	bsf	132,5,c	;volatile
  2785   0043E0                     
  2786                           ; BSR set to: 14
  2787                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2788   0043E0  8C84               	bsf	132,6,c	;volatile
  2789   0043E2                     
  2790                           ; BSR set to: 14
  2791                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2792   0043E2  9BA7               	bcf	167,5,b	;volatile
  2793   0043E4                     
  2794                           ; BSR set to: 14
  2795                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2796   0043E4  9DA7               	bcf	167,6,b	;volatile
  2797                           
  2798                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2799   0043E6  0E1D               	movlw	29
  2800   0043E8  6F1D               	movwf	29,b	;volatile
  2801                           
  2802                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2803   0043EA  0E1E               	movlw	30
  2804   0043EC  6F1C               	movwf	28,b	;volatile
  2805                           
  2806                           ;i2c.c: 18:   RD5PPS=0x1C;
  2807   0043EE  0E1C               	movlw	28
  2808   0043F0  6F6F               	movwf	111,b	;volatile
  2809                           
  2810                           ;i2c.c: 19:   RD6PPS=0x1B;
  2811   0043F2  0E1B               	movlw	27
  2812   0043F4  6F70               	movwf	112,b	;volatile
  2813   0043F6                     
  2814                           ; BSR set to: 14
  2815   0043F6  0012               	return		;funcret
  2816   0043F8                     __end_of_I2C_2_Master_Init:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _Timer0_init *****************
  2820 ;; Defined at:
  2821 ;;		line 7 in file "timer.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text17
  2850   004446                     __ptext17:
  2851                           	callstack 0
  2852   004446                     _Timer0_init:
  2853                           	callstack 29
  2854   004446                     
  2855                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  2856   004446  50D6               	movf	214,w,c	;volatile
  2857   004448  0B1F               	andlw	-225
  2858   00444A  0940               	iorlw	64
  2859   00444C  6ED6               	movwf	214,c	;volatile
  2860   00444E                     
  2861                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  2862   00444E  88D6               	bsf	214,4,c	;volatile
  2863                           
  2864                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  2865   004450  50D6               	movf	214,w,c	;volatile
  2866   004452  0BF0               	andlw	-16
  2867   004454  090D               	iorlw	13
  2868   004456  6ED6               	movwf	214,c	;volatile
  2869   004458                     
  2870                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  2871   004458  88D5               	bsf	213,4,c	;volatile
  2872   00445A                     
  2873                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  2874   00445A  010E               	movlb	14	; () banked
  2875   00445C  8B29               	bsf	41,5,b	;volatile
  2876                           
  2877                           ;timer.c: 17:     TMR0H=0;
  2878   00445E  0E00               	movlw	0
  2879   004460  6ED4               	movwf	212,c	;volatile
  2880                           
  2881                           ;timer.c: 18:     TMR0L=0;
  2882   004462  0E00               	movlw	0
  2883   004464  6ED3               	movwf	211,c	;volatile
  2884   004466                     
  2885                           ; BSR set to: 14
  2886                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  2887   004466  8ED5               	bsf	213,7,c	;volatile
  2888   004468                     
  2889                           ; BSR set to: 14
  2890   004468  0012               	return		;funcret
  2891   00446A                     __end_of_Timer0_init:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _RGB2Hue *****************
  2895 ;; Defined at:
  2896 ;;		line 23 in file "colorfunctions.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
  2899 ;;		 -> colorf(22), 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  min             2   19[BANK0 ] int 
  2902 ;;  max             2   17[BANK0 ] int 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;Total ram usage:       14 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 3
  2919 ;; This function calls:
  2920 ;;		___fladd
  2921 ;;		___fldiv
  2922 ;;		___fleq
  2923 ;;		___flge
  2924 ;;		___flmul
  2925 ;;		___flsub
  2926 ;;		___fltol
  2927 ;;		___xxtofl
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text18
  2934   000E52                     __ptext18:
  2935                           	callstack 0
  2936   000E52                     _RGB2Hue:
  2937                           	callstack 27
  2938   000E52                     
  2939                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2940   000E52  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2941   000E56  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2942   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  2943   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2944   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2945   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2946   000E6A  EE20 F004          	lfsr	2,4
  2947   000E6E  5057               	movf	RGB2Hue@cf^0,w,c
  2948   000E70  26D9               	addwf	fsr2l,f,c
  2949   000E72  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2950   000E74  22DA               	addwfc	fsr2h,f,c
  2951   000E76  CFDE F005          	movff	postinc2,___fleq@ff2
  2952   000E7A  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2953   000E7E  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2954   000E82  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2955   000E86  ECAF  F01B         	call	___fleq	;wreg free
  2956   000E8A  A0D8               	btfss	status,0,c
  2957   000E8C  EF4A  F007         	goto	u3791
  2958   000E90  EF4C  F007         	goto	u3790
  2959   000E94                     u3791:
  2960   000E94  EF7F  F007         	goto	l4188
  2961   000E98                     u3790:
  2962   000E98  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2963   000E9C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2964   000EA0  CFDE F001          	movff	postinc2,___fleq@ff1
  2965   000EA4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2966   000EA8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2967   000EAC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2968   000EB0  EE20 F008          	lfsr	2,8
  2969   000EB4  5057               	movf	RGB2Hue@cf^0,w,c
  2970   000EB6  26D9               	addwf	fsr2l,f,c
  2971   000EB8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2972   000EBA  22DA               	addwfc	fsr2h,f,c
  2973   000EBC  CFDE F005          	movff	postinc2,___fleq@ff2
  2974   000EC0  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2975   000EC4  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2976   000EC8  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2977   000ECC  ECAF  F01B         	call	___fleq	;wreg free
  2978   000ED0  A0D8               	btfss	status,0,c
  2979   000ED2  EF6D  F007         	goto	u3801
  2980   000ED6  EF6F  F007         	goto	u3800
  2981   000EDA                     u3801:
  2982   000EDA  EF7F  F007         	goto	l4188
  2983   000EDE                     u3800:
  2984   000EDE                     
  2985                           ;colorfunctions.c: 25:         cf->h=0;
  2986   000EDE  EE20 F010          	lfsr	2,16
  2987   000EE2  5057               	movf	RGB2Hue@cf^0,w,c
  2988   000EE4  26D9               	addwf	fsr2l,f,c
  2989   000EE6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2990   000EE8  22DA               	addwfc	fsr2h,f,c
  2991   000EEA  0E00               	movlw	0
  2992   000EEC  6EDE               	movwf	postinc2,c
  2993   000EEE  0E00               	movlw	0
  2994   000EF0  6EDE               	movwf	postinc2,c
  2995   000EF2  0E00               	movlw	0
  2996   000EF4  6EDE               	movwf	postinc2,c
  2997   000EF6  0E00               	movlw	0
  2998   000EF8  6EDD               	movwf	postdec2,c
  2999                           
  3000                           ;colorfunctions.c: 26:     } else{
  3001   000EFA  EFA9  F00A         	goto	l557
  3002   000EFE                     l4188:
  3003                           
  3004                           ;colorfunctions.c: 28:         signed int min=0;
  3005   000EFE  0E00               	movlw	0
  3006   000F00  0100               	movlb	0	; () banked
  3007   000F02  6F74               	movwf	(RGB2Hue@min+1)& (0+255),b
  3008   000F04  0E00               	movlw	0
  3009   000F06  6F73               	movwf	RGB2Hue@min& (0+255),b
  3010   000F08                     
  3011                           ; BSR set to: 0
  3012                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3013   000F08  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3014   000F0C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3015   000F10  CFDE F001          	movff	postinc2,___flge@ff1
  3016   000F14  CFDE F002          	movff	postinc2,___flge@ff1+1
  3017   000F18  CFDE F003          	movff	postinc2,___flge@ff1+2
  3018   000F1C  CFDE F004          	movff	postinc2,___flge@ff1+3
  3019   000F20  EE20 F004          	lfsr	2,4
  3020   000F24  5057               	movf	RGB2Hue@cf^0,w,c
  3021   000F26  26D9               	addwf	fsr2l,f,c
  3022   000F28  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3023   000F2A  22DA               	addwfc	fsr2h,f,c
  3024   000F2C  CFDE F005          	movff	postinc2,___flge@ff2
  3025   000F30  CFDE F006          	movff	postinc2,___flge@ff2+1
  3026   000F34  CFDE F007          	movff	postinc2,___flge@ff2+2
  3027   000F38  CFDE F008          	movff	postinc2,___flge@ff2+3
  3028   000F3C  EC0D  F019         	call	___flge	;wreg free
  3029   000F40  B0D8               	btfsc	status,0,c
  3030   000F42  EFA5  F007         	goto	u3811
  3031   000F46  EFA7  F007         	goto	u3810
  3032   000F4A                     u3811:
  3033   000F4A  EFDE  F007         	goto	l4196
  3034   000F4E                     u3810:
  3035   000F4E  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3036   000F52  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3037   000F56  CFDE F001          	movff	postinc2,___flge@ff1
  3038   000F5A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3039   000F5E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3040   000F62  CFDE F004          	movff	postinc2,___flge@ff1+3
  3041   000F66  EE20 F008          	lfsr	2,8
  3042   000F6A  5057               	movf	RGB2Hue@cf^0,w,c
  3043   000F6C  26D9               	addwf	fsr2l,f,c
  3044   000F6E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3045   000F70  22DA               	addwfc	fsr2h,f,c
  3046   000F72  CFDE F005          	movff	postinc2,___flge@ff2
  3047   000F76  CFDE F006          	movff	postinc2,___flge@ff2+1
  3048   000F7A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3049   000F7E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3050   000F82  EC0D  F019         	call	___flge	;wreg free
  3051   000F86  B0D8               	btfsc	status,0,c
  3052   000F88  EFC8  F007         	goto	u3821
  3053   000F8C  EFCA  F007         	goto	u3820
  3054   000F90                     u3821:
  3055   000F90  EFDE  F007         	goto	l4196
  3056   000F94                     u3820:
  3057   000F94                     
  3058                           ;colorfunctions.c: 31:             min=cf->Rf;
  3059   000F94  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3060   000F98  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3061   000F9C  CFDE F001          	movff	postinc2,___fltol@f1
  3062   000FA0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3063   000FA4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3064   000FA8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3065   000FAC  EC8A  F018         	call	___fltol	;wreg free
  3066   000FB0  C001  F073         	movff	?___fltol,RGB2Hue@min
  3067   000FB4  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3068                           
  3069                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3070   000FB8  EF50  F008         	goto	l549
  3071   000FBC                     l4196:
  3072   000FBC  EE20 F004          	lfsr	2,4
  3073   000FC0  5057               	movf	RGB2Hue@cf^0,w,c
  3074   000FC2  26D9               	addwf	fsr2l,f,c
  3075   000FC4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3076   000FC6  22DA               	addwfc	fsr2h,f,c
  3077   000FC8  CFDE F001          	movff	postinc2,___flge@ff1
  3078   000FCC  CFDE F002          	movff	postinc2,___flge@ff1+1
  3079   000FD0  CFDE F003          	movff	postinc2,___flge@ff1+2
  3080   000FD4  CFDE F004          	movff	postinc2,___flge@ff1+3
  3081   000FD8  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3082   000FDC  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3083   000FE0  CFDE F005          	movff	postinc2,___flge@ff2
  3084   000FE4  CFDE F006          	movff	postinc2,___flge@ff2+1
  3085   000FE8  CFDE F007          	movff	postinc2,___flge@ff2+2
  3086   000FEC  CFDE F008          	movff	postinc2,___flge@ff2+3
  3087   000FF0  EC0D  F019         	call	___flge	;wreg free
  3088   000FF4  B0D8               	btfsc	status,0,c
  3089   000FF6  EFFF  F007         	goto	u3831
  3090   000FFA  EF01  F008         	goto	u3830
  3091   000FFE                     u3831:
  3092   000FFE  EF3C  F008         	goto	l4202
  3093   001002                     u3830:
  3094   001002  EE20 F004          	lfsr	2,4
  3095   001006  5057               	movf	RGB2Hue@cf^0,w,c
  3096   001008  26D9               	addwf	fsr2l,f,c
  3097   00100A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3098   00100C  22DA               	addwfc	fsr2h,f,c
  3099   00100E  CFDE F001          	movff	postinc2,___flge@ff1
  3100   001012  CFDE F002          	movff	postinc2,___flge@ff1+1
  3101   001016  CFDE F003          	movff	postinc2,___flge@ff1+2
  3102   00101A  CFDE F004          	movff	postinc2,___flge@ff1+3
  3103   00101E  EE20 F008          	lfsr	2,8
  3104   001022  5057               	movf	RGB2Hue@cf^0,w,c
  3105   001024  26D9               	addwf	fsr2l,f,c
  3106   001026  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3107   001028  22DA               	addwfc	fsr2h,f,c
  3108   00102A  CFDE F005          	movff	postinc2,___flge@ff2
  3109   00102E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3110   001032  CFDE F007          	movff	postinc2,___flge@ff2+2
  3111   001036  CFDE F008          	movff	postinc2,___flge@ff2+3
  3112   00103A  EC0D  F019         	call	___flge	;wreg free
  3113   00103E  B0D8               	btfsc	status,0,c
  3114   001040  EF24  F008         	goto	u3841
  3115   001044  EF26  F008         	goto	u3840
  3116   001048                     u3841:
  3117   001048  EF3C  F008         	goto	l4202
  3118   00104C                     u3840:
  3119   00104C                     
  3120                           ;colorfunctions.c: 33:             min=cf->Gf;
  3121   00104C  EE20 F004          	lfsr	2,4
  3122   001050  5057               	movf	RGB2Hue@cf^0,w,c
  3123   001052  26D9               	addwf	fsr2l,f,c
  3124   001054  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3125   001056  22DA               	addwfc	fsr2h,f,c
  3126   001058  CFDE F001          	movff	postinc2,___fltol@f1
  3127   00105C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3128   001060  CFDE F003          	movff	postinc2,___fltol@f1+2
  3129   001064  CFDE F004          	movff	postinc2,___fltol@f1+3
  3130   001068  EC8A  F018         	call	___fltol	;wreg free
  3131   00106C  C001  F073         	movff	?___fltol,RGB2Hue@min
  3132   001070  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3133                           
  3134                           ;colorfunctions.c: 34:         } else{
  3135   001074  EF50  F008         	goto	l549
  3136   001078                     l4202:
  3137                           
  3138                           ;colorfunctions.c: 35:             min=cf->Bf;
  3139   001078  EE20 F008          	lfsr	2,8
  3140   00107C  5057               	movf	RGB2Hue@cf^0,w,c
  3141   00107E  26D9               	addwf	fsr2l,f,c
  3142   001080  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3143   001082  22DA               	addwfc	fsr2h,f,c
  3144   001084  CFDE F001          	movff	postinc2,___fltol@f1
  3145   001088  CFDE F002          	movff	postinc2,___fltol@f1+1
  3146   00108C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3147   001090  CFDE F004          	movff	postinc2,___fltol@f1+3
  3148   001094  EC8A  F018         	call	___fltol	;wreg free
  3149   001098  C001  F073         	movff	?___fltol,RGB2Hue@min
  3150   00109C  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3151   0010A0                     l549:
  3152                           
  3153                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3154   0010A0  EE20 F004          	lfsr	2,4
  3155   0010A4  5057               	movf	RGB2Hue@cf^0,w,c
  3156   0010A6  26D9               	addwf	fsr2l,f,c
  3157   0010A8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3158   0010AA  22DA               	addwfc	fsr2h,f,c
  3159   0010AC  CFDE F001          	movff	postinc2,___flge@ff1
  3160   0010B0  CFDE F002          	movff	postinc2,___flge@ff1+1
  3161   0010B4  CFDE F003          	movff	postinc2,___flge@ff1+2
  3162   0010B8  CFDE F004          	movff	postinc2,___flge@ff1+3
  3163   0010BC  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3164   0010C0  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3165   0010C4  CFDE F005          	movff	postinc2,___flge@ff2
  3166   0010C8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3167   0010CC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3168   0010D0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3169   0010D4  EC0D  F019         	call	___flge	;wreg free
  3170   0010D8  B0D8               	btfsc	status,0,c
  3171   0010DA  EF71  F008         	goto	u3851
  3172   0010DE  EF73  F008         	goto	u3850
  3173   0010E2                     u3851:
  3174   0010E2  EF0D  F009         	goto	l4210
  3175   0010E6                     u3850:
  3176   0010E6  EE20 F008          	lfsr	2,8
  3177   0010EA  5057               	movf	RGB2Hue@cf^0,w,c
  3178   0010EC  26D9               	addwf	fsr2l,f,c
  3179   0010EE  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3180   0010F0  22DA               	addwfc	fsr2h,f,c
  3181   0010F2  CFDE F001          	movff	postinc2,___flge@ff1
  3182   0010F6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3183   0010FA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3184   0010FE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3185   001102  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3186   001106  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3187   00110A  CFDE F005          	movff	postinc2,___flge@ff2
  3188   00110E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3189   001112  CFDE F007          	movff	postinc2,___flge@ff2+2
  3190   001116  CFDE F008          	movff	postinc2,___flge@ff2+3
  3191   00111A  EC0D  F019         	call	___flge	;wreg free
  3192   00111E  B0D8               	btfsc	status,0,c
  3193   001120  EF94  F008         	goto	u3861
  3194   001124  EF96  F008         	goto	u3860
  3195   001128                     u3861:
  3196   001128  EF0D  F009         	goto	l4210
  3197   00112C                     u3860:
  3198   00112C                     
  3199                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3200   00112C  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3201   001130  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3202   001134  CFDE F001          	movff	postinc2,___fltol@f1
  3203   001138  CFDE F002          	movff	postinc2,___fltol@f1+1
  3204   00113C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3205   001140  CFDE F004          	movff	postinc2,___fltol@f1+3
  3206   001144  EC8A  F018         	call	___fltol	;wreg free
  3207   001148  C001  F071         	movff	?___fltol,RGB2Hue@max
  3208   00114C  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3209   001150                     
  3210                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3211   001150  0100               	movlb	0	; () banked
  3212   001152  5173               	movf	RGB2Hue@min& (0+255),w,b
  3213   001154  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3214   001156  6E59               	movwf	??_RGB2Hue^0,c
  3215   001158  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3216   00115A  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3217   00115C  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3218   00115E  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3219   001162  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3220   001166  0E00               	movlw	0
  3221   001168  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3222   00116A  0EFF               	movlw	-1
  3223   00116C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3224   00116E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3225   001170  0E01               	movlw	1
  3226   001172  EC69  F014         	call	___xxtofl
  3227   001176  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3228   00117A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3229   00117E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3230   001182  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3231   001186  EE20 F008          	lfsr	2,8
  3232   00118A  5057               	movf	RGB2Hue@cf^0,w,c
  3233   00118C  26D9               	addwf	fsr2l,f,c
  3234   00118E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3235   001190  22DA               	addwfc	fsr2h,f,c
  3236   001192  CFDE F02E          	movff	postinc2,___flsub@a
  3237   001196  CFDE F02F          	movff	postinc2,___flsub@a+1
  3238   00119A  CFDE F030          	movff	postinc2,___flsub@a+2
  3239   00119E  CFDE F031          	movff	postinc2,___flsub@a+3
  3240   0011A2  EE20 F004          	lfsr	2,4
  3241   0011A6  5057               	movf	RGB2Hue@cf^0,w,c
  3242   0011A8  26D9               	addwf	fsr2l,f,c
  3243   0011AA  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3244   0011AC  22DA               	addwfc	fsr2h,f,c
  3245   0011AE  CFDE F02A          	movff	postinc2,___flsub@b
  3246   0011B2  CFDE F02B          	movff	postinc2,___flsub@b+1
  3247   0011B6  CFDE F02C          	movff	postinc2,___flsub@b+2
  3248   0011BA  CFDE F02D          	movff	postinc2,___flsub@b+3
  3249   0011BE  EC2E  F021         	call	___flsub	;wreg free
  3250   0011C2  C02A  F032         	movff	?___flsub,___fldiv@b
  3251   0011C6  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3252   0011CA  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3253   0011CE  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3254   0011D2  EC97  F011         	call	___fldiv	;wreg free
  3255   0011D6  C032  F04B         	movff	?___fldiv,___flmul@b
  3256   0011DA  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3257   0011DE  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3258   0011E2  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3259   0011E6  0E00               	movlw	0
  3260   0011E8  6E4F               	movwf	___flmul@a^0,c
  3261   0011EA  0E00               	movlw	0
  3262   0011EC  6E50               	movwf	(___flmul@a+1)^0,c
  3263   0011EE  0E70               	movlw	112
  3264   0011F0  6E51               	movwf	(___flmul@a+2)^0,c
  3265   0011F2  0E42               	movlw	66
  3266   0011F4  6E52               	movwf	(___flmul@a+3)^0,c
  3267   0011F6  EC81  F00F         	call	___flmul	;wreg free
  3268   0011FA  EE20 F010          	lfsr	2,16
  3269   0011FE  5057               	movf	RGB2Hue@cf^0,w,c
  3270   001200  26D9               	addwf	fsr2l,f,c
  3271   001202  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3272   001204  22DA               	addwfc	fsr2h,f,c
  3273   001206  C04B  FFDE         	movff	?___flmul,postinc2
  3274   00120A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3275   00120E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3276   001212  C04E  FFDE         	movff	?___flmul+3,postinc2
  3277                           
  3278                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3279   001216  EF75  F00A         	goto	l4222
  3280   00121A                     l4210:
  3281   00121A  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3282   00121E  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3283   001222  CFDE F001          	movff	postinc2,___flge@ff1
  3284   001226  CFDE F002          	movff	postinc2,___flge@ff1+1
  3285   00122A  CFDE F003          	movff	postinc2,___flge@ff1+2
  3286   00122E  CFDE F004          	movff	postinc2,___flge@ff1+3
  3287   001232  EE20 F004          	lfsr	2,4
  3288   001236  5057               	movf	RGB2Hue@cf^0,w,c
  3289   001238  26D9               	addwf	fsr2l,f,c
  3290   00123A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3291   00123C  22DA               	addwfc	fsr2h,f,c
  3292   00123E  CFDE F005          	movff	postinc2,___flge@ff2
  3293   001242  CFDE F006          	movff	postinc2,___flge@ff2+1
  3294   001246  CFDE F007          	movff	postinc2,___flge@ff2+2
  3295   00124A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3296   00124E  EC0D  F019         	call	___flge	;wreg free
  3297   001252  B0D8               	btfsc	status,0,c
  3298   001254  EF2E  F009         	goto	u3871
  3299   001258  EF30  F009         	goto	u3870
  3300   00125C                     u3871:
  3301   00125C  EFE6  F009         	goto	l4218
  3302   001260                     u3870:
  3303   001260  EE20 F008          	lfsr	2,8
  3304   001264  5057               	movf	RGB2Hue@cf^0,w,c
  3305   001266  26D9               	addwf	fsr2l,f,c
  3306   001268  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3307   00126A  22DA               	addwfc	fsr2h,f,c
  3308   00126C  CFDE F001          	movff	postinc2,___flge@ff1
  3309   001270  CFDE F002          	movff	postinc2,___flge@ff1+1
  3310   001274  CFDE F003          	movff	postinc2,___flge@ff1+2
  3311   001278  CFDE F004          	movff	postinc2,___flge@ff1+3
  3312   00127C  EE20 F004          	lfsr	2,4
  3313   001280  5057               	movf	RGB2Hue@cf^0,w,c
  3314   001282  26D9               	addwf	fsr2l,f,c
  3315   001284  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3316   001286  22DA               	addwfc	fsr2h,f,c
  3317   001288  CFDE F005          	movff	postinc2,___flge@ff2
  3318   00128C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3319   001290  CFDE F007          	movff	postinc2,___flge@ff2+2
  3320   001294  CFDE F008          	movff	postinc2,___flge@ff2+3
  3321   001298  EC0D  F019         	call	___flge	;wreg free
  3322   00129C  B0D8               	btfsc	status,0,c
  3323   00129E  EF53  F009         	goto	u3881
  3324   0012A2  EF55  F009         	goto	u3880
  3325   0012A6                     u3881:
  3326   0012A6  EFE6  F009         	goto	l4218
  3327   0012AA                     u3880:
  3328   0012AA                     
  3329                           ;colorfunctions.c: 44:             max=cf->Gf;
  3330   0012AA  EE20 F004          	lfsr	2,4
  3331   0012AE  5057               	movf	RGB2Hue@cf^0,w,c
  3332   0012B0  26D9               	addwf	fsr2l,f,c
  3333   0012B2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3334   0012B4  22DA               	addwfc	fsr2h,f,c
  3335   0012B6  CFDE F001          	movff	postinc2,___fltol@f1
  3336   0012BA  CFDE F002          	movff	postinc2,___fltol@f1+1
  3337   0012BE  CFDE F003          	movff	postinc2,___fltol@f1+2
  3338   0012C2  CFDE F004          	movff	postinc2,___fltol@f1+3
  3339   0012C6  EC8A  F018         	call	___fltol	;wreg free
  3340   0012CA  C001  F071         	movff	?___fltol,RGB2Hue@max
  3341   0012CE  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3342                           
  3343                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3344   0012D2  0100               	movlb	0	; () banked
  3345   0012D4  5173               	movf	RGB2Hue@min& (0+255),w,b
  3346   0012D6  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3347   0012D8  6E59               	movwf	??_RGB2Hue^0,c
  3348   0012DA  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3349   0012DC  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3350   0012DE  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3351   0012E0  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3352   0012E4  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3353   0012E8  0E00               	movlw	0
  3354   0012EA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3355   0012EC  0EFF               	movlw	-1
  3356   0012EE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3357   0012F0  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3358   0012F2  0E01               	movlw	1
  3359   0012F4  EC69  F014         	call	___xxtofl
  3360   0012F8  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3361   0012FC  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3362   001300  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3363   001304  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3364   001308  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3365   00130C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3366   001310  CFDE F02E          	movff	postinc2,___flsub@a
  3367   001314  CFDE F02F          	movff	postinc2,___flsub@a+1
  3368   001318  CFDE F030          	movff	postinc2,___flsub@a+2
  3369   00131C  CFDE F031          	movff	postinc2,___flsub@a+3
  3370   001320  EE20 F008          	lfsr	2,8
  3371   001324  5057               	movf	RGB2Hue@cf^0,w,c
  3372   001326  26D9               	addwf	fsr2l,f,c
  3373   001328  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3374   00132A  22DA               	addwfc	fsr2h,f,c
  3375   00132C  CFDE F02A          	movff	postinc2,___flsub@b
  3376   001330  CFDE F02B          	movff	postinc2,___flsub@b+1
  3377   001334  CFDE F02C          	movff	postinc2,___flsub@b+2
  3378   001338  CFDE F02D          	movff	postinc2,___flsub@b+3
  3379   00133C  EC2E  F021         	call	___flsub	;wreg free
  3380   001340  C02A  F032         	movff	?___flsub,___fldiv@b
  3381   001344  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3382   001348  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3383   00134C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3384   001350  EC97  F011         	call	___fldiv	;wreg free
  3385   001354  C032  F06D         	movff	?___fldiv,_RGB2Hue$3132
  3386   001358  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3132+1
  3387   00135C  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3132+2
  3388   001360  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3132+3
  3389   001364                     
  3390                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3391   001364  0E00               	movlw	0
  3392   001366  6E1E               	movwf	___fladd@a^0,c
  3393   001368  0E00               	movlw	0
  3394   00136A  6E1F               	movwf	(___fladd@a+1)^0,c
  3395   00136C  0E00               	movlw	0
  3396   00136E  6E20               	movwf	(___fladd@a+2)^0,c
  3397   001370  0E40               	movlw	64
  3398   001372  6E21               	movwf	(___fladd@a+3)^0,c
  3399   001374  C06D  F01A         	movff	_RGB2Hue$3132,___fladd@b
  3400   001378  C06E  F01B         	movff	_RGB2Hue$3132+1,___fladd@b+1
  3401   00137C  C06F  F01C         	movff	_RGB2Hue$3132+2,___fladd@b+2
  3402   001380  C070  F01D         	movff	_RGB2Hue$3132+3,___fladd@b+3
  3403   001384  EC21  F00D         	call	___fladd	;wreg free
  3404   001388  C01A  F04B         	movff	?___fladd,___flmul@b
  3405   00138C  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3406   001390  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3407   001394  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3408   001398  0E00               	movlw	0
  3409   00139A  6E4F               	movwf	___flmul@a^0,c
  3410   00139C  0E00               	movlw	0
  3411   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  3412   0013A0  0E70               	movlw	112
  3413   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  3414   0013A4  0E42               	movlw	66
  3415   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  3416   0013A8  EC81  F00F         	call	___flmul	;wreg free
  3417   0013AC  EE20 F010          	lfsr	2,16
  3418   0013B0  5057               	movf	RGB2Hue@cf^0,w,c
  3419   0013B2  26D9               	addwf	fsr2l,f,c
  3420   0013B4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3421   0013B6  22DA               	addwfc	fsr2h,f,c
  3422   0013B8  C04B  FFDE         	movff	?___flmul,postinc2
  3423   0013BC  C04C  FFDE         	movff	?___flmul+1,postinc2
  3424   0013C0  C04D  FFDE         	movff	?___flmul+2,postinc2
  3425   0013C4  C04E  FFDE         	movff	?___flmul+3,postinc2
  3426                           
  3427                           ;colorfunctions.c: 46:         }else{
  3428   0013C8  EF75  F00A         	goto	l4222
  3429   0013CC                     l4218:
  3430                           
  3431                           ;colorfunctions.c: 47:             max=cf->Bf;
  3432   0013CC  EE20 F008          	lfsr	2,8
  3433   0013D0  5057               	movf	RGB2Hue@cf^0,w,c
  3434   0013D2  26D9               	addwf	fsr2l,f,c
  3435   0013D4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3436   0013D6  22DA               	addwfc	fsr2h,f,c
  3437   0013D8  CFDE F001          	movff	postinc2,___fltol@f1
  3438   0013DC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3439   0013E0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3440   0013E4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3441   0013E8  EC8A  F018         	call	___fltol	;wreg free
  3442   0013EC  C001  F071         	movff	?___fltol,RGB2Hue@max
  3443   0013F0  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3444                           
  3445                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3446   0013F4  0100               	movlb	0	; () banked
  3447   0013F6  5173               	movf	RGB2Hue@min& (0+255),w,b
  3448   0013F8  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3449   0013FA  6E59               	movwf	??_RGB2Hue^0,c
  3450   0013FC  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3451   0013FE  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3452   001400  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3453   001402  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3454   001406  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3455   00140A  0E00               	movlw	0
  3456   00140C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3457   00140E  0EFF               	movlw	-1
  3458   001410  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3459   001412  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3460   001414  0E01               	movlw	1
  3461   001416  EC69  F014         	call	___xxtofl
  3462   00141A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3463   00141E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3464   001422  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3465   001426  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3466   00142A  EE20 F004          	lfsr	2,4
  3467   00142E  5057               	movf	RGB2Hue@cf^0,w,c
  3468   001430  26D9               	addwf	fsr2l,f,c
  3469   001432  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3470   001434  22DA               	addwfc	fsr2h,f,c
  3471   001436  CFDE F02E          	movff	postinc2,___flsub@a
  3472   00143A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3473   00143E  CFDE F030          	movff	postinc2,___flsub@a+2
  3474   001442  CFDE F031          	movff	postinc2,___flsub@a+3
  3475   001446  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3476   00144A  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3477   00144E  CFDE F02A          	movff	postinc2,___flsub@b
  3478   001452  CFDE F02B          	movff	postinc2,___flsub@b+1
  3479   001456  CFDE F02C          	movff	postinc2,___flsub@b+2
  3480   00145A  CFDE F02D          	movff	postinc2,___flsub@b+3
  3481   00145E  EC2E  F021         	call	___flsub	;wreg free
  3482   001462  C02A  F032         	movff	?___flsub,___fldiv@b
  3483   001466  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3484   00146A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3485   00146E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3486   001472  EC97  F011         	call	___fldiv	;wreg free
  3487   001476  C032  F06D         	movff	?___fldiv,_RGB2Hue$3132
  3488   00147A  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$3132+1
  3489   00147E  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$3132+2
  3490   001482  C035  F070         	movff	?___fldiv+3,_RGB2Hue$3132+3
  3491   001486                     
  3492                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3493   001486  0E00               	movlw	0
  3494   001488  6E1E               	movwf	___fladd@a^0,c
  3495   00148A  0E00               	movlw	0
  3496   00148C  6E1F               	movwf	(___fladd@a+1)^0,c
  3497   00148E  0E80               	movlw	128
  3498   001490  6E20               	movwf	(___fladd@a+2)^0,c
  3499   001492  0E40               	movlw	64
  3500   001494  6E21               	movwf	(___fladd@a+3)^0,c
  3501   001496  C06D  F01A         	movff	_RGB2Hue$3132,___fladd@b
  3502   00149A  C06E  F01B         	movff	_RGB2Hue$3132+1,___fladd@b+1
  3503   00149E  C06F  F01C         	movff	_RGB2Hue$3132+2,___fladd@b+2
  3504   0014A2  C070  F01D         	movff	_RGB2Hue$3132+3,___fladd@b+3
  3505   0014A6  EC21  F00D         	call	___fladd	;wreg free
  3506   0014AA  C01A  F04B         	movff	?___fladd,___flmul@b
  3507   0014AE  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3508   0014B2  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3509   0014B6  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3510   0014BA  0E00               	movlw	0
  3511   0014BC  6E4F               	movwf	___flmul@a^0,c
  3512   0014BE  0E00               	movlw	0
  3513   0014C0  6E50               	movwf	(___flmul@a+1)^0,c
  3514   0014C2  0E70               	movlw	112
  3515   0014C4  6E51               	movwf	(___flmul@a+2)^0,c
  3516   0014C6  0E42               	movlw	66
  3517   0014C8  6E52               	movwf	(___flmul@a+3)^0,c
  3518   0014CA  EC81  F00F         	call	___flmul	;wreg free
  3519   0014CE  EE20 F010          	lfsr	2,16
  3520   0014D2  5057               	movf	RGB2Hue@cf^0,w,c
  3521   0014D4  26D9               	addwf	fsr2l,f,c
  3522   0014D6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3523   0014D8  22DA               	addwfc	fsr2h,f,c
  3524   0014DA  C04B  FFDE         	movff	?___flmul,postinc2
  3525   0014DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3526   0014E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3527   0014E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3528   0014EA                     l4222:
  3529                           
  3530                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3531   0014EA  EE20 F010          	lfsr	2,16
  3532   0014EE  5057               	movf	RGB2Hue@cf^0,w,c
  3533   0014F0  26D9               	addwf	fsr2l,f,c
  3534   0014F2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3535   0014F4  22DA               	addwfc	fsr2h,f,c
  3536   0014F6  0E03               	movlw	3
  3537   0014F8  BEDB               	btfsc	plusw2,7,c
  3538   0014FA  EF83  F00A         	goto	u3890
  3539   0014FE  EF81  F00A         	goto	u3891
  3540   001502                     u3891:
  3541   001502  EFA9  F00A         	goto	l557
  3542   001506                     u3890:
  3543   001506                     
  3544                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3545   001506  EE20 F010          	lfsr	2,16
  3546   00150A  5057               	movf	RGB2Hue@cf^0,w,c
  3547   00150C  26D9               	addwf	fsr2l,f,c
  3548   00150E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3549   001510  22DA               	addwfc	fsr2h,f,c
  3550   001512  CFDE F01A          	movff	postinc2,___fladd@b
  3551   001516  CFDE F01B          	movff	postinc2,___fladd@b+1
  3552   00151A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3553   00151E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3554   001522  0E00               	movlw	0
  3555   001524  6E1E               	movwf	___fladd@a^0,c
  3556   001526  0E00               	movlw	0
  3557   001528  6E1F               	movwf	(___fladd@a+1)^0,c
  3558   00152A  0EB4               	movlw	180
  3559   00152C  6E20               	movwf	(___fladd@a+2)^0,c
  3560   00152E  0E43               	movlw	67
  3561   001530  6E21               	movwf	(___fladd@a+3)^0,c
  3562   001532  EC21  F00D         	call	___fladd	;wreg free
  3563   001536  EE20 F010          	lfsr	2,16
  3564   00153A  5057               	movf	RGB2Hue@cf^0,w,c
  3565   00153C  26D9               	addwf	fsr2l,f,c
  3566   00153E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3567   001540  22DA               	addwfc	fsr2h,f,c
  3568   001542  C01A  FFDE         	movff	?___fladd,postinc2
  3569   001546  C01B  FFDE         	movff	?___fladd+1,postinc2
  3570   00154A  C01C  FFDE         	movff	?___fladd+2,postinc2
  3571   00154E  C01D  FFDE         	movff	?___fladd+3,postinc2
  3572   001552                     l557:
  3573   001552  0012               	return		;funcret
  3574   001554                     __end_of_RGB2Hue:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function ___xxtofl *****************
  3578 ;; Defined at:
  3579 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  sign            1    wreg     unsigned char 
  3582 ;;  val             4   11[COMRAM] long 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  sign            1   19[COMRAM] unsigned char 
  3585 ;;  arg             4   21[COMRAM] unsigned long 
  3586 ;;  exp             1   20[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4   11[COMRAM] unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;Total ram usage:       14 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_Left45
  3607 ;;		_Right45
  3608 ;;		_reverseHalfSquare
  3609 ;;		_Yellow_rev1_R90
  3610 ;;		_Pink_rev1_L90
  3611 ;;		_colour_read_all
  3612 ;;		_RGB2Hue
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text19
  3617   0028D2                     __ptext19:
  3618                           	callstack 0
  3619   0028D2                     ___xxtofl:
  3620                           	callstack 28
  3621                           
  3622                           ;incstack = 0
  3623                           ;___xxtofl@sign stored from wreg
  3624   0028D2  6E14               	movwf	___xxtofl@sign^0,c
  3625   0028D4  5014               	movf	___xxtofl@sign^0,w,c
  3626   0028D6  B4D8               	btfsc	status,2,c
  3627   0028D8  EF70  F014         	goto	u3671
  3628   0028DC  EF72  F014         	goto	u3670
  3629   0028E0                     u3671:
  3630   0028E0  EF94  F014         	goto	l1288
  3631   0028E4                     u3670:
  3632   0028E4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3633   0028E6  EF79  F014         	goto	u3680
  3634   0028EA  EF77  F014         	goto	u3681
  3635   0028EE                     u3681:
  3636   0028EE  EF94  F014         	goto	l1288
  3637   0028F2                     u3680:
  3638   0028F2  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3639   0028F6  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3640   0028FA  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3641   0028FE  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3642   002902  1E10               	comf	??___xxtofl^0,f,c
  3643   002904  1E11               	comf	(??___xxtofl+1)^0,f,c
  3644   002906  1E12               	comf	(??___xxtofl+2)^0,f,c
  3645   002908  1E13               	comf	(??___xxtofl+3)^0,f,c
  3646   00290A  2A10               	incf	??___xxtofl^0,f,c
  3647   00290C  0E00               	movlw	0
  3648   00290E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3649   002910  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3650   002912  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3651   002914  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3652   002918  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3653   00291C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3654   002920  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3655   002924  EF9C  F014         	goto	l4044
  3656   002928                     l1288:
  3657   002928  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3658   00292C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3659   002930  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3660   002934  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3661   002938                     l4044:
  3662   002938  500C               	movf	___xxtofl@val^0,w,c
  3663   00293A  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3664   00293C  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3665   00293E  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3666   002940  A4D8               	btfss	status,2,c
  3667   002942  EFA5  F014         	goto	u3691
  3668   002946  EFA7  F014         	goto	u3690
  3669   00294A                     u3691:
  3670   00294A  EFB1  F014         	goto	l4050
  3671   00294E                     u3690:
  3672   00294E  0E00               	movlw	0
  3673   002950  6E0C               	movwf	?___xxtofl^0,c
  3674   002952  0E00               	movlw	0
  3675   002954  6E0D               	movwf	(?___xxtofl+1)^0,c
  3676   002956  0E00               	movlw	0
  3677   002958  6E0E               	movwf	(?___xxtofl+2)^0,c
  3678   00295A  0E00               	movlw	0
  3679   00295C  6E0F               	movwf	(?___xxtofl+3)^0,c
  3680   00295E  EF42  F015         	goto	l1291
  3681   002962                     l4050:
  3682   002962  0E96               	movlw	150
  3683   002964  6E15               	movwf	___xxtofl@exp^0,c
  3684   002966  EFBB  F014         	goto	l4054
  3685   00296A                     l4052:
  3686   00296A  2A15               	incf	___xxtofl@exp^0,f,c
  3687   00296C  90D8               	bcf	status,0,c
  3688   00296E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3689   002970  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3690   002972  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3691   002974  3216               	rrcf	___xxtofl@arg^0,f,c
  3692   002976                     l4054:
  3693   002976  0E00               	movlw	0
  3694   002978  1416               	andwf	___xxtofl@arg^0,w,c
  3695   00297A  6E10               	movwf	??___xxtofl^0,c
  3696   00297C  0E00               	movlw	0
  3697   00297E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3698   002980  6E11               	movwf	(??___xxtofl+1)^0,c
  3699   002982  0E00               	movlw	0
  3700   002984  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3701   002986  6E12               	movwf	(??___xxtofl+2)^0,c
  3702   002988  0EFE               	movlw	254
  3703   00298A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3704   00298C  6E13               	movwf	(??___xxtofl+3)^0,c
  3705   00298E  5010               	movf	??___xxtofl^0,w,c
  3706   002990  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3707   002992  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3708   002994  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3709   002996  A4D8               	btfss	status,2,c
  3710   002998  EFD0  F014         	goto	u3701
  3711   00299C  EFD2  F014         	goto	u3700
  3712   0029A0                     u3701:
  3713   0029A0  EFB5  F014         	goto	l4052
  3714   0029A4                     u3700:
  3715   0029A4  EFE0  F014         	goto	l1295
  3716   0029A8                     l4056:
  3717   0029A8  2A15               	incf	___xxtofl@exp^0,f,c
  3718   0029AA  0E01               	movlw	1
  3719   0029AC  2616               	addwf	___xxtofl@arg^0,f,c
  3720   0029AE  0E00               	movlw	0
  3721   0029B0  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3722   0029B2  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3723   0029B4  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3724   0029B6  90D8               	bcf	status,0,c
  3725   0029B8  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3726   0029BA  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3727   0029BC  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3728   0029BE  3216               	rrcf	___xxtofl@arg^0,f,c
  3729   0029C0                     l1295:
  3730   0029C0  0E00               	movlw	0
  3731   0029C2  1416               	andwf	___xxtofl@arg^0,w,c
  3732   0029C4  6E10               	movwf	??___xxtofl^0,c
  3733   0029C6  0E00               	movlw	0
  3734   0029C8  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3735   0029CA  6E11               	movwf	(??___xxtofl+1)^0,c
  3736   0029CC  0E00               	movlw	0
  3737   0029CE  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3738   0029D0  6E12               	movwf	(??___xxtofl+2)^0,c
  3739   0029D2  0EFF               	movlw	255
  3740   0029D4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3741   0029D6  6E13               	movwf	(??___xxtofl+3)^0,c
  3742   0029D8  5010               	movf	??___xxtofl^0,w,c
  3743   0029DA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3744   0029DC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3745   0029DE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3746   0029E0  A4D8               	btfss	status,2,c
  3747   0029E2  EFF5  F014         	goto	u3711
  3748   0029E6  EFF7  F014         	goto	u3710
  3749   0029EA                     u3711:
  3750   0029EA  EFD4  F014         	goto	l4056
  3751   0029EE                     u3710:
  3752   0029EE  EFFF  F014         	goto	l4064
  3753   0029F2                     l4062:
  3754   0029F2  0615               	decf	___xxtofl@exp^0,f,c
  3755   0029F4  90D8               	bcf	status,0,c
  3756   0029F6  3616               	rlcf	___xxtofl@arg^0,f,c
  3757   0029F8  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3758   0029FA  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3759   0029FC  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3760   0029FE                     l4064:
  3761   0029FE  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3762   002A00  EF04  F015         	goto	u3721
  3763   002A04  EF06  F015         	goto	u3720
  3764   002A08                     u3721:
  3765   002A08  EF0E  F015         	goto	l1302
  3766   002A0C                     u3720:
  3767   002A0C  0E02               	movlw	2
  3768   002A0E  6015               	cpfslt	___xxtofl@exp^0,c
  3769   002A10  EF0C  F015         	goto	u3731
  3770   002A14  EF0E  F015         	goto	u3730
  3771   002A18                     u3731:
  3772   002A18  EFF9  F014         	goto	l4062
  3773   002A1C                     u3730:
  3774   002A1C                     l1302:
  3775   002A1C  B015               	btfsc	___xxtofl@exp^0,0,c
  3776   002A1E  EF13  F015         	goto	u3741
  3777   002A22  EF15  F015         	goto	u3740
  3778   002A26                     u3741:
  3779   002A26  EF16  F015         	goto	l4070
  3780   002A2A                     u3740:
  3781   002A2A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3782   002A2C                     l4070:
  3783   002A2C  90D8               	bcf	status,0,c
  3784   002A2E  3215               	rrcf	___xxtofl@exp^0,f,c
  3785   002A30  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3786   002A34  6A11               	clrf	(??___xxtofl+1)^0,c
  3787   002A36  6A12               	clrf	(??___xxtofl+2)^0,c
  3788   002A38  6A13               	clrf	(??___xxtofl+3)^0,c
  3789   002A3A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3790   002A3E  6A12               	clrf	(??___xxtofl+2)^0,c
  3791   002A40  6A11               	clrf	(??___xxtofl+1)^0,c
  3792   002A42  6A10               	clrf	??___xxtofl^0,c
  3793   002A44  5010               	movf	??___xxtofl^0,w,c
  3794   002A46  1216               	iorwf	___xxtofl@arg^0,f,c
  3795   002A48  5011               	movf	(??___xxtofl+1)^0,w,c
  3796   002A4A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3797   002A4C  5012               	movf	(??___xxtofl+2)^0,w,c
  3798   002A4E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3799   002A50  5013               	movf	(??___xxtofl+3)^0,w,c
  3800   002A52  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3801   002A54  5014               	movf	___xxtofl@sign^0,w,c
  3802   002A56  B4D8               	btfsc	status,2,c
  3803   002A58  EF30  F015         	goto	u3751
  3804   002A5C  EF32  F015         	goto	u3750
  3805   002A60                     u3751:
  3806   002A60  EF3A  F015         	goto	l4080
  3807   002A64                     u3750:
  3808   002A64  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3809   002A66  EF39  F015         	goto	u3760
  3810   002A6A  EF37  F015         	goto	u3761
  3811   002A6E                     u3761:
  3812   002A6E  EF3A  F015         	goto	l4080
  3813   002A72                     u3760:
  3814   002A72  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3815   002A74                     l4080:
  3816   002A74  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3817   002A78  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3818   002A7C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3819   002A80  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3820   002A84                     l1291:
  3821   002A84  0012               	return		;funcret
  3822   002A86                     __end_of___xxtofl:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function ___fltol *****************
  3826 ;; Defined at:
  3827 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  f1              4    0[COMRAM] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  exp1            1    9[COMRAM] unsigned char 
  3832 ;;  sign1           1    8[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  4    0[COMRAM] long 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:       10 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_Left45
  3853 ;;		_Right45
  3854 ;;		_reverseHalfSquare
  3855 ;;		_Yellow_rev1_R90
  3856 ;;		_Pink_rev1_L90
  3857 ;;		_RGB2Hue
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text20
  3862   003114                     __ptext20:
  3863                           	callstack 0
  3864   003114                     ___fltol:
  3865                           	callstack 28
  3866   003114  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3867   003116  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3868   003118  6E0A               	movwf	___fltol@exp1^0,c
  3869   00311A  500A               	movf	___fltol@exp1^0,w,c
  3870   00311C  A4D8               	btfss	status,2,c
  3871   00311E  EF93  F018         	goto	u3601
  3872   003122  EF95  F018         	goto	u3600
  3873   003126                     u3601:
  3874   003126  EF9F  F018         	goto	l4000
  3875   00312A                     u3600:
  3876   00312A                     l3996:
  3877   00312A  0E00               	movlw	0
  3878   00312C  6E01               	movwf	?___fltol^0,c
  3879   00312E  0E00               	movlw	0
  3880   003130  6E02               	movwf	(?___fltol+1)^0,c
  3881   003132  0E00               	movlw	0
  3882   003134  6E03               	movwf	(?___fltol+2)^0,c
  3883   003136  0E00               	movlw	0
  3884   003138  6E04               	movwf	(?___fltol+3)^0,c
  3885   00313A  EF0C  F019         	goto	l930
  3886   00313E                     l4000:
  3887   00313E  C001  F005         	movff	___fltol@f1,??___fltol
  3888   003142  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3889   003146  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3890   00314A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3891   00314E  0E20               	movlw	32
  3892   003150  EFAF  F018         	goto	u3610
  3893   003154                     u3615:
  3894   003154  90D8               	bcf	status,0,c
  3895   003156  3208               	rrcf	(??___fltol+3)^0,f,c
  3896   003158  3207               	rrcf	(??___fltol+2)^0,f,c
  3897   00315A  3206               	rrcf	(??___fltol+1)^0,f,c
  3898   00315C  3205               	rrcf	??___fltol^0,f,c
  3899   00315E                     u3610:
  3900   00315E  2EE8               	decfsz	wreg,f,c
  3901   003160  EFAA  F018         	goto	u3615
  3902   003164  5005               	movf	??___fltol^0,w,c
  3903   003166  6E09               	movwf	___fltol@sign1^0,c
  3904   003168  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3905   00316A  0EFF               	movlw	255
  3906   00316C  1601               	andwf	___fltol@f1^0,f,c
  3907   00316E  0EFF               	movlw	255
  3908   003170  1602               	andwf	(___fltol@f1+1)^0,f,c
  3909   003172  0EFF               	movlw	255
  3910   003174  1603               	andwf	(___fltol@f1+2)^0,f,c
  3911   003176  0E00               	movlw	0
  3912   003178  1604               	andwf	(___fltol@f1+3)^0,f,c
  3913   00317A  0E96               	movlw	150
  3914   00317C  5E0A               	subwf	___fltol@exp1^0,f,c
  3915   00317E  BE0A               	btfsc	___fltol@exp1^0,7,c
  3916   003180  EFC6  F018         	goto	u3620
  3917   003184  EFC4  F018         	goto	u3621
  3918   003188                     u3621:
  3919   003188  EFDC  F018         	goto	l4020
  3920   00318C                     u3620:
  3921   00318C  500A               	movf	___fltol@exp1^0,w,c
  3922   00318E  0A80               	xorlw	128
  3923   003190  0F97               	addlw	151
  3924   003192  B0D8               	btfsc	status,0,c
  3925   003194  EFCE  F018         	goto	u3631
  3926   003198  EFD0  F018         	goto	u3630
  3927   00319C                     u3631:
  3928   00319C  EFD2  F018         	goto	l4016
  3929   0031A0                     u3630:
  3930   0031A0  EF95  F018         	goto	l3996
  3931   0031A4                     l4016:
  3932   0031A4  90D8               	bcf	status,0,c
  3933   0031A6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3934   0031A8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3935   0031AA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3936   0031AC  3201               	rrcf	___fltol@f1^0,f,c
  3937   0031AE  3E0A               	incfsz	___fltol@exp1^0,f,c
  3938   0031B0  EFD2  F018         	goto	l4016
  3939   0031B4  EFF4  F018         	goto	l4030
  3940   0031B8                     l4020:
  3941   0031B8  0E1F               	movlw	31
  3942   0031BA  640A               	cpfsgt	___fltol@exp1^0,c
  3943   0031BC  EFE2  F018         	goto	u3641
  3944   0031C0  EFE4  F018         	goto	u3640
  3945   0031C4                     u3641:
  3946   0031C4  EFEC  F018         	goto	l4028
  3947   0031C8                     u3640:
  3948   0031C8  EF95  F018         	goto	l3996
  3949   0031CC                     l4026:
  3950   0031CC  90D8               	bcf	status,0,c
  3951   0031CE  3601               	rlcf	___fltol@f1^0,f,c
  3952   0031D0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3953   0031D2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3954   0031D4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3955   0031D6  060A               	decf	___fltol@exp1^0,f,c
  3956   0031D8                     l4028:
  3957   0031D8  500A               	movf	___fltol@exp1^0,w,c
  3958   0031DA  A4D8               	btfss	status,2,c
  3959   0031DC  EFF2  F018         	goto	u3651
  3960   0031E0  EFF4  F018         	goto	u3650
  3961   0031E4                     u3651:
  3962   0031E4  EFE6  F018         	goto	l4026
  3963   0031E8                     u3650:
  3964   0031E8                     l4030:
  3965   0031E8  5009               	movf	___fltol@sign1^0,w,c
  3966   0031EA  B4D8               	btfsc	status,2,c
  3967   0031EC  EFFA  F018         	goto	u3661
  3968   0031F0  EFFC  F018         	goto	u3660
  3969   0031F4                     u3661:
  3970   0031F4  EF04  F019         	goto	l4034
  3971   0031F8                     u3660:
  3972   0031F8  1E04               	comf	(___fltol@f1+3)^0,f,c
  3973   0031FA  1E03               	comf	(___fltol@f1+2)^0,f,c
  3974   0031FC  1E02               	comf	(___fltol@f1+1)^0,f,c
  3975   0031FE  6C01               	negf	___fltol@f1^0,c
  3976   003200  0E00               	movlw	0
  3977   003202  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3978   003204  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3979   003206  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3980   003208                     l4034:
  3981   003208  C001  F001         	movff	___fltol@f1,?___fltol
  3982   00320C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3983   003210  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3984   003214  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3985   003218                     l930:
  3986   003218  0012               	return		;funcret
  3987   00321A                     __end_of___fltol:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function ___flsub *****************
  3991 ;; Defined at:
  3992 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  b               4   41[COMRAM] long 
  3995 ;;  a               4   45[COMRAM] long 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  4   41[COMRAM] long 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:        8 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 2
  4014 ;; This function calls:
  4015 ;;		___fladd
  4016 ;; This function is called by:
  4017 ;;		_RGB2Hue
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text21
  4022   00425C                     __ptext21:
  4023                           	callstack 0
  4024   00425C                     ___flsub:
  4025                           	callstack 27
  4026   00425C  0E00               	movlw	0
  4027   00425E  1A2E               	xorwf	___flsub@a^0,f,c
  4028   004260  0E00               	movlw	0
  4029   004262  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  4030   004264  0E00               	movlw	0
  4031   004266  1A30               	xorwf	(___flsub@a+2)^0,f,c
  4032   004268  0E80               	movlw	128
  4033   00426A  1A31               	xorwf	(___flsub@a+3)^0,f,c
  4034   00426C  C02A  F01A         	movff	___flsub@b,___fladd@b
  4035   004270  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  4036   004274  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  4037   004278  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  4038   00427C  C02E  F01E         	movff	___flsub@a,___fladd@a
  4039   004280  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  4040   004284  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  4041   004288  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  4042   00428C  EC21  F00D         	call	___fladd	;wreg free
  4043   004290  C01A  F02A         	movff	?___fladd,?___flsub
  4044   004294  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  4045   004298  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  4046   00429C  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  4047   0042A0  0012               	return		;funcret
  4048   0042A2                     __end_of___flsub:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function ___fladd *****************
  4052 ;; Defined at:
  4053 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  b               4   25[COMRAM] long 
  4056 ;;  a               4   29[COMRAM] long 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  grs             1   40[COMRAM] unsigned char 
  4059 ;;  bexp            1   39[COMRAM] unsigned char 
  4060 ;;  aexp            1   38[COMRAM] unsigned char 
  4061 ;;  signs           1   37[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  4   25[COMRAM] unsigned char 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;Total ram usage:       16 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_RGB2Hue
  4082 ;;		___flsub
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text22
  4087   001A42                     __ptext22:
  4088                           	callstack 0
  4089   001A42                     ___fladd:
  4090                           	callstack 27
  4091   001A42  501D               	movf	(___fladd@b+3)^0,w,c
  4092   001A44  0B80               	andlw	128
  4093   001A46  6E26               	movwf	___fladd@signs^0,c
  4094   001A48  501D               	movf	(___fladd@b+3)^0,w,c
  4095   001A4A  241D               	addwf	(___fladd@b+3)^0,w,c
  4096   001A4C  6E28               	movwf	___fladd@bexp^0,c
  4097   001A4E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4098   001A50  EF2C  F00D         	goto	u2461
  4099   001A54  EF2E  F00D         	goto	u2460
  4100   001A58                     u2461:
  4101   001A58  EF2F  F00D         	goto	l3268
  4102   001A5C                     u2460:
  4103   001A5C  8028               	bsf	___fladd@bexp^0,0,c
  4104   001A5E                     l3268:
  4105   001A5E  5028               	movf	___fladd@bexp^0,w,c
  4106   001A60  B4D8               	btfsc	status,2,c
  4107   001A62  EF35  F00D         	goto	u2471
  4108   001A66  EF37  F00D         	goto	u2470
  4109   001A6A                     u2471:
  4110   001A6A  EF4C  F00D         	goto	l3278
  4111   001A6E                     u2470:
  4112   001A6E  2828               	incf	___fladd@bexp^0,w,c
  4113   001A70  A4D8               	btfss	status,2,c
  4114   001A72  EF3D  F00D         	goto	u2481
  4115   001A76  EF3F  F00D         	goto	u2480
  4116   001A7A                     u2481:
  4117   001A7A  EF47  F00D         	goto	l3274
  4118   001A7E                     u2480:
  4119   001A7E  0E00               	movlw	0
  4120   001A80  6E1A               	movwf	___fladd@b^0,c
  4121   001A82  0E00               	movlw	0
  4122   001A84  6E1B               	movwf	(___fladd@b+1)^0,c
  4123   001A86  0E00               	movlw	0
  4124   001A88  6E1C               	movwf	(___fladd@b+2)^0,c
  4125   001A8A  0E00               	movlw	0
  4126   001A8C  6E1D               	movwf	(___fladd@b+3)^0,c
  4127   001A8E                     l3274:
  4128   001A8E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4129   001A90  0E00               	movlw	0
  4130   001A92  6E1D               	movwf	(___fladd@b+3)^0,c
  4131   001A94  EF54  F00D         	goto	l3280
  4132   001A98                     l3278:
  4133   001A98  0E00               	movlw	0
  4134   001A9A  6E1A               	movwf	___fladd@b^0,c
  4135   001A9C  0E00               	movlw	0
  4136   001A9E  6E1B               	movwf	(___fladd@b+1)^0,c
  4137   001AA0  0E00               	movlw	0
  4138   001AA2  6E1C               	movwf	(___fladd@b+2)^0,c
  4139   001AA4  0E00               	movlw	0
  4140   001AA6  6E1D               	movwf	(___fladd@b+3)^0,c
  4141   001AA8                     l3280:
  4142   001AA8  5021               	movf	(___fladd@a+3)^0,w,c
  4143   001AAA  0B80               	andlw	128
  4144   001AAC  6E27               	movwf	___fladd@aexp^0,c
  4145   001AAE  5026               	movf	___fladd@signs^0,w,c
  4146   001AB0  1827               	xorwf	___fladd@aexp^0,w,c
  4147   001AB2  B4D8               	btfsc	status,2,c
  4148   001AB4  EF5E  F00D         	goto	u2491
  4149   001AB8  EF60  F00D         	goto	u2490
  4150   001ABC                     u2491:
  4151   001ABC  EF61  F00D         	goto	l3286
  4152   001AC0                     u2490:
  4153   001AC0  8C26               	bsf	___fladd@signs^0,6,c
  4154   001AC2                     l3286:
  4155   001AC2  5021               	movf	(___fladd@a+3)^0,w,c
  4156   001AC4  2421               	addwf	(___fladd@a+3)^0,w,c
  4157   001AC6  6E27               	movwf	___fladd@aexp^0,c
  4158   001AC8  AE20               	btfss	(___fladd@a+2)^0,7,c
  4159   001ACA  EF69  F00D         	goto	u2501
  4160   001ACE  EF6B  F00D         	goto	u2500
  4161   001AD2                     u2501:
  4162   001AD2  EF6C  F00D         	goto	l3292
  4163   001AD6                     u2500:
  4164   001AD6  8027               	bsf	___fladd@aexp^0,0,c
  4165   001AD8                     l3292:
  4166   001AD8  5027               	movf	___fladd@aexp^0,w,c
  4167   001ADA  B4D8               	btfsc	status,2,c
  4168   001ADC  EF72  F00D         	goto	u2511
  4169   001AE0  EF74  F00D         	goto	u2510
  4170   001AE4                     u2511:
  4171   001AE4  EF89  F00D         	goto	l3302
  4172   001AE8                     u2510:
  4173   001AE8  2827               	incf	___fladd@aexp^0,w,c
  4174   001AEA  A4D8               	btfss	status,2,c
  4175   001AEC  EF7A  F00D         	goto	u2521
  4176   001AF0  EF7C  F00D         	goto	u2520
  4177   001AF4                     u2521:
  4178   001AF4  EF84  F00D         	goto	l3298
  4179   001AF8                     u2520:
  4180   001AF8  0E00               	movlw	0
  4181   001AFA  6E1E               	movwf	___fladd@a^0,c
  4182   001AFC  0E00               	movlw	0
  4183   001AFE  6E1F               	movwf	(___fladd@a+1)^0,c
  4184   001B00  0E00               	movlw	0
  4185   001B02  6E20               	movwf	(___fladd@a+2)^0,c
  4186   001B04  0E00               	movlw	0
  4187   001B06  6E21               	movwf	(___fladd@a+3)^0,c
  4188   001B08                     l3298:
  4189   001B08  8E20               	bsf	(___fladd@a+2)^0,7,c
  4190   001B0A  0E00               	movlw	0
  4191   001B0C  6E21               	movwf	(___fladd@a+3)^0,c
  4192   001B0E  EF91  F00D         	goto	l3304
  4193   001B12                     l3302:
  4194   001B12  0E00               	movlw	0
  4195   001B14  6E1E               	movwf	___fladd@a^0,c
  4196   001B16  0E00               	movlw	0
  4197   001B18  6E1F               	movwf	(___fladd@a+1)^0,c
  4198   001B1A  0E00               	movlw	0
  4199   001B1C  6E20               	movwf	(___fladd@a+2)^0,c
  4200   001B1E  0E00               	movlw	0
  4201   001B20  6E21               	movwf	(___fladd@a+3)^0,c
  4202   001B22                     l3304:
  4203   001B22  5028               	movf	___fladd@bexp^0,w,c
  4204   001B24  5C27               	subwf	___fladd@aexp^0,w,c
  4205   001B26  B0D8               	btfsc	status,0,c
  4206   001B28  EF98  F00D         	goto	u2531
  4207   001B2C  EF9A  F00D         	goto	u2530
  4208   001B30                     u2531:
  4209   001B30  EFC1  F00D         	goto	l3340
  4210   001B34                     u2530:
  4211   001B34  AC26               	btfss	___fladd@signs^0,6,c
  4212   001B36  EF9F  F00D         	goto	u2541
  4213   001B3A  EFA1  F00D         	goto	u2540
  4214   001B3E                     u2541:
  4215   001B3E  EFA3  F00D         	goto	l3310
  4216   001B42                     u2540:
  4217   001B42  0E80               	movlw	128
  4218   001B44  1A26               	xorwf	___fladd@signs^0,f,c
  4219   001B46                     l3310:
  4220   001B46  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4221   001B4A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4222   001B4E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4223   001B52  C01A  F029         	movff	___fladd@b,___fladd@grs
  4224   001B56  C01E  F01A         	movff	___fladd@a,___fladd@b
  4225   001B5A  C029  F01E         	movff	___fladd@grs,___fladd@a
  4226   001B5E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4227   001B62  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4228   001B66  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4229   001B6A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4230   001B6E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4231   001B72  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4232   001B76  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4233   001B7A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4234   001B7E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4235   001B82                     l3340:
  4236   001B82  0E00               	movlw	0
  4237   001B84  6E29               	movwf	___fladd@grs^0,c
  4238   001B86  5028               	movf	___fladd@bexp^0,w,c
  4239   001B88  C027  F022         	movff	___fladd@aexp,??___fladd
  4240   001B8C  6A23               	clrf	(??___fladd+1)^0,c
  4241   001B8E  5E22               	subwf	??___fladd^0,f,c
  4242   001B90  0E00               	movlw	0
  4243   001B92  5A23               	subwfb	(??___fladd+1)^0,f,c
  4244   001B94  BE23               	btfsc	(??___fladd+1)^0,7,c
  4245   001B96  EFD6  F00D         	goto	u2551
  4246   001B9A  5023               	movf	(??___fladd+1)^0,w,c
  4247   001B9C  E109               	bnz	u2550
  4248   001B9E  0E1A               	movlw	26
  4249   001BA0  5C22               	subwf	??___fladd^0,w,c
  4250   001BA2  A0D8               	btfss	status,0,c
  4251   001BA4  EFD6  F00D         	goto	u2551
  4252   001BA8  EFD8  F00D         	goto	u2550
  4253   001BAC                     u2551:
  4254   001BAC  EF0F  F00E         	goto	l1162
  4255   001BB0                     u2550:
  4256   001BB0  501A               	movf	___fladd@b^0,w,c
  4257   001BB2  101B               	iorwf	(___fladd@b+1)^0,w,c
  4258   001BB4  101C               	iorwf	(___fladd@b+2)^0,w,c
  4259   001BB6  101D               	iorwf	(___fladd@b+3)^0,w,c
  4260   001BB8  A4D8               	btfss	status,2,c
  4261   001BBA  EFE1  F00D         	goto	u2561
  4262   001BBE  EFE4  F00D         	goto	u2560
  4263   001BC2                     u2561:
  4264   001BC2  0E01               	movlw	1
  4265   001BC4  EFE5  F00D         	goto	u2570
  4266   001BC8                     u2560:
  4267   001BC8  0E00               	movlw	0
  4268   001BCA                     u2570:
  4269   001BCA  6E29               	movwf	___fladd@grs^0,c
  4270   001BCC  0E00               	movlw	0
  4271   001BCE  6E1A               	movwf	___fladd@b^0,c
  4272   001BD0  0E00               	movlw	0
  4273   001BD2  6E1B               	movwf	(___fladd@b+1)^0,c
  4274   001BD4  0E00               	movlw	0
  4275   001BD6  6E1C               	movwf	(___fladd@b+2)^0,c
  4276   001BD8  0E00               	movlw	0
  4277   001BDA  6E1D               	movwf	(___fladd@b+3)^0,c
  4278   001BDC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4279   001BE0  EF18  F00E         	goto	l1161
  4280   001BE4                     l1163:
  4281   001BE4  A029               	btfss	___fladd@grs^0,0,c
  4282   001BE6  EFF7  F00D         	goto	u2581
  4283   001BEA  EFF9  F00D         	goto	u2580
  4284   001BEE                     u2581:
  4285   001BEE  EFFF  F00D         	goto	l3352
  4286   001BF2                     u2580:
  4287   001BF2  90D8               	bcf	status,0,c
  4288   001BF4  3029               	rrcf	___fladd@grs^0,w,c
  4289   001BF6  0901               	iorlw	1
  4290   001BF8  6E29               	movwf	___fladd@grs^0,c
  4291   001BFA  EF01  F00E         	goto	l3354
  4292   001BFE                     l3352:
  4293   001BFE  90D8               	bcf	status,0,c
  4294   001C00  3229               	rrcf	___fladd@grs^0,f,c
  4295   001C02                     l3354:
  4296   001C02  A01A               	btfss	___fladd@b^0,0,c
  4297   001C04  EF06  F00E         	goto	u2591
  4298   001C08  EF08  F00E         	goto	u2590
  4299   001C0C                     u2591:
  4300   001C0C  EF09  F00E         	goto	l3358
  4301   001C10                     u2590:
  4302   001C10  8E29               	bsf	___fladd@grs^0,7,c
  4303   001C12                     l3358:
  4304   001C12  341D               	rlcf	(___fladd@b+3)^0,w,c
  4305   001C14  321D               	rrcf	(___fladd@b+3)^0,f,c
  4306   001C16  321C               	rrcf	(___fladd@b+2)^0,f,c
  4307   001C18  321B               	rrcf	(___fladd@b+1)^0,f,c
  4308   001C1A  321A               	rrcf	___fladd@b^0,f,c
  4309   001C1C  2A28               	incf	___fladd@bexp^0,f,c
  4310   001C1E                     l1162:
  4311   001C1E  5027               	movf	___fladd@aexp^0,w,c
  4312   001C20  5C28               	subwf	___fladd@bexp^0,w,c
  4313   001C22  A0D8               	btfss	status,0,c
  4314   001C24  EF16  F00E         	goto	u2601
  4315   001C28  EF18  F00E         	goto	u2600
  4316   001C2C                     u2601:
  4317   001C2C  EFF2  F00D         	goto	l1163
  4318   001C30                     u2600:
  4319   001C30                     l1161:
  4320   001C30  BC26               	btfsc	___fladd@signs^0,6,c
  4321   001C32  EF1D  F00E         	goto	u2611
  4322   001C36  EF1F  F00E         	goto	u2610
  4323   001C3A                     u2611:
  4324   001C3A  EF5F  F00E         	goto	l3386
  4325   001C3E                     u2610:
  4326   001C3E  5028               	movf	___fladd@bexp^0,w,c
  4327   001C40  A4D8               	btfss	status,2,c
  4328   001C42  EF25  F00E         	goto	u2621
  4329   001C46  EF27  F00E         	goto	u2620
  4330   001C4A                     u2621:
  4331   001C4A  EF31  F00E         	goto	l3368
  4332   001C4E                     u2620:
  4333   001C4E  0E00               	movlw	0
  4334   001C50  6E1A               	movwf	?___fladd^0,c
  4335   001C52  0E00               	movlw	0
  4336   001C54  6E1B               	movwf	(?___fladd+1)^0,c
  4337   001C56  0E00               	movlw	0
  4338   001C58  6E1C               	movwf	(?___fladd+2)^0,c
  4339   001C5A  0E00               	movlw	0
  4340   001C5C  6E1D               	movwf	(?___fladd+3)^0,c
  4341   001C5E  EF80  F00F         	goto	l1170
  4342   001C62                     l3368:
  4343   001C62  501E               	movf	___fladd@a^0,w,c
  4344   001C64  261A               	addwf	___fladd@b^0,f,c
  4345   001C66  501F               	movf	(___fladd@a+1)^0,w,c
  4346   001C68  221B               	addwfc	(___fladd@b+1)^0,f,c
  4347   001C6A  5020               	movf	(___fladd@a+2)^0,w,c
  4348   001C6C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4349   001C6E  5021               	movf	(___fladd@a+3)^0,w,c
  4350   001C70  221D               	addwfc	(___fladd@b+3)^0,f,c
  4351   001C72  A01D               	btfss	(___fladd@b+3)^0,0,c
  4352   001C74  EF3E  F00E         	goto	u2631
  4353   001C78  EF40  F00E         	goto	u2630
  4354   001C7C                     u2631:
  4355   001C7C  EFEC  F00E         	goto	l3422
  4356   001C80                     u2630:
  4357   001C80  A029               	btfss	___fladd@grs^0,0,c
  4358   001C82  EF45  F00E         	goto	u2641
  4359   001C86  EF47  F00E         	goto	u2640
  4360   001C8A                     u2641:
  4361   001C8A  EF4D  F00E         	goto	l3376
  4362   001C8E                     u2640:
  4363   001C8E  90D8               	bcf	status,0,c
  4364   001C90  3029               	rrcf	___fladd@grs^0,w,c
  4365   001C92  0901               	iorlw	1
  4366   001C94  6E29               	movwf	___fladd@grs^0,c
  4367   001C96  EF4F  F00E         	goto	l3378
  4368   001C9A                     l3376:
  4369   001C9A  90D8               	bcf	status,0,c
  4370   001C9C  3229               	rrcf	___fladd@grs^0,f,c
  4371   001C9E                     l3378:
  4372   001C9E  A01A               	btfss	___fladd@b^0,0,c
  4373   001CA0  EF54  F00E         	goto	u2651
  4374   001CA4  EF56  F00E         	goto	u2650
  4375   001CA8                     u2651:
  4376   001CA8  EF57  F00E         	goto	l3382
  4377   001CAC                     u2650:
  4378   001CAC  8E29               	bsf	___fladd@grs^0,7,c
  4379   001CAE                     l3382:
  4380   001CAE  341D               	rlcf	(___fladd@b+3)^0,w,c
  4381   001CB0  321D               	rrcf	(___fladd@b+3)^0,f,c
  4382   001CB2  321C               	rrcf	(___fladd@b+2)^0,f,c
  4383   001CB4  321B               	rrcf	(___fladd@b+1)^0,f,c
  4384   001CB6  321A               	rrcf	___fladd@b^0,f,c
  4385   001CB8  2A28               	incf	___fladd@bexp^0,f,c
  4386   001CBA  EFEC  F00E         	goto	l3422
  4387   001CBE                     l3386:
  4388   001CBE  501E               	movf	___fladd@a^0,w,c
  4389   001CC0  5C1A               	subwf	___fladd@b^0,w,c
  4390   001CC2  501F               	movf	(___fladd@a+1)^0,w,c
  4391   001CC4  581B               	subwfb	(___fladd@b+1)^0,w,c
  4392   001CC6  5020               	movf	(___fladd@a+2)^0,w,c
  4393   001CC8  581C               	subwfb	(___fladd@b+2)^0,w,c
  4394   001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  4395   001CCC  0A80               	xorlw	128
  4396   001CCE  6E22               	movwf	??___fladd^0,c
  4397   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
  4398   001CD2  0A80               	xorlw	128
  4399   001CD4  5822               	subwfb	??___fladd^0,w,c
  4400   001CD6  B0D8               	btfsc	status,0,c
  4401   001CD8  EF70  F00E         	goto	u2661
  4402   001CDC  EF72  F00E         	goto	u2660
  4403   001CE0                     u2661:
  4404   001CE0  EF9D  F00E         	goto	l3396
  4405   001CE4                     u2660:
  4406   001CE4  501A               	movf	___fladd@b^0,w,c
  4407   001CE6  5C1E               	subwf	___fladd@a^0,w,c
  4408   001CE8  6E22               	movwf	??___fladd^0,c
  4409   001CEA  501B               	movf	(___fladd@b+1)^0,w,c
  4410   001CEC  581F               	subwfb	(___fladd@a+1)^0,w,c
  4411   001CEE  6E23               	movwf	(??___fladd+1)^0,c
  4412   001CF0  501C               	movf	(___fladd@b+2)^0,w,c
  4413   001CF2  5820               	subwfb	(___fladd@a+2)^0,w,c
  4414   001CF4  6E24               	movwf	(??___fladd+2)^0,c
  4415   001CF6  501D               	movf	(___fladd@b+3)^0,w,c
  4416   001CF8  5821               	subwfb	(___fladd@a+3)^0,w,c
  4417   001CFA  6E25               	movwf	(??___fladd+3)^0,c
  4418   001CFC  0EFF               	movlw	255
  4419   001CFE  2422               	addwf	??___fladd^0,w,c
  4420   001D00  6E1A               	movwf	___fladd@b^0,c
  4421   001D02  0EFF               	movlw	255
  4422   001D04  2023               	addwfc	(??___fladd+1)^0,w,c
  4423   001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  4424   001D08  0EFF               	movlw	255
  4425   001D0A  2024               	addwfc	(??___fladd+2)^0,w,c
  4426   001D0C  6E1C               	movwf	(___fladd@b+2)^0,c
  4427   001D0E  0EFF               	movlw	255
  4428   001D10  2025               	addwfc	(??___fladd+3)^0,w,c
  4429   001D12  6E1D               	movwf	(___fladd@b+3)^0,c
  4430   001D14  0E80               	movlw	128
  4431   001D16  1A26               	xorwf	___fladd@signs^0,f,c
  4432   001D18  6C29               	negf	___fladd@grs^0,c
  4433   001D1A  5029               	movf	___fladd@grs^0,w,c
  4434   001D1C  A4D8               	btfss	status,2,c
  4435   001D1E  EF93  F00E         	goto	u2671
  4436   001D22  EF95  F00E         	goto	u2670
  4437   001D26                     u2671:
  4438   001D26  EFA5  F00E         	goto	l1178
  4439   001D2A                     u2670:
  4440   001D2A  0E01               	movlw	1
  4441   001D2C  261A               	addwf	___fladd@b^0,f,c
  4442   001D2E  0E00               	movlw	0
  4443   001D30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4444   001D32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4445   001D34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4446   001D36  EFA5  F00E         	goto	l1178
  4447   001D3A                     l3396:
  4448   001D3A  501E               	movf	___fladd@a^0,w,c
  4449   001D3C  5E1A               	subwf	___fladd@b^0,f,c
  4450   001D3E  501F               	movf	(___fladd@a+1)^0,w,c
  4451   001D40  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4452   001D42  5020               	movf	(___fladd@a+2)^0,w,c
  4453   001D44  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4454   001D46  5021               	movf	(___fladd@a+3)^0,w,c
  4455   001D48  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4456   001D4A                     l1178:
  4457   001D4A  501A               	movf	___fladd@b^0,w,c
  4458   001D4C  101B               	iorwf	(___fladd@b+1)^0,w,c
  4459   001D4E  101C               	iorwf	(___fladd@b+2)^0,w,c
  4460   001D50  101D               	iorwf	(___fladd@b+3)^0,w,c
  4461   001D52  A4D8               	btfss	status,2,c
  4462   001D54  EFAE  F00E         	goto	u2681
  4463   001D58  EFB0  F00E         	goto	u2680
  4464   001D5C                     u2681:
  4465   001D5C  EFE5  F00E         	goto	l3420
  4466   001D60                     u2680:
  4467   001D60  5029               	movf	___fladd@grs^0,w,c
  4468   001D62  A4D8               	btfss	status,2,c
  4469   001D64  EFB6  F00E         	goto	u2691
  4470   001D68  EFB8  F00E         	goto	u2690
  4471   001D6C                     u2691:
  4472   001D6C  EFE5  F00E         	goto	l3420
  4473   001D70                     u2690:
  4474   001D70  0E00               	movlw	0
  4475   001D72  6E1A               	movwf	?___fladd^0,c
  4476   001D74  0E00               	movlw	0
  4477   001D76  6E1B               	movwf	(?___fladd+1)^0,c
  4478   001D78  0E00               	movlw	0
  4479   001D7A  6E1C               	movwf	(?___fladd+2)^0,c
  4480   001D7C  0E00               	movlw	0
  4481   001D7E  6E1D               	movwf	(?___fladd+3)^0,c
  4482   001D80  EF80  F00F         	goto	l1170
  4483   001D84                     l3404:
  4484   001D84  90D8               	bcf	status,0,c
  4485   001D86  361A               	rlcf	___fladd@b^0,f,c
  4486   001D88  361B               	rlcf	(___fladd@b+1)^0,f,c
  4487   001D8A  361C               	rlcf	(___fladd@b+2)^0,f,c
  4488   001D8C  361D               	rlcf	(___fladd@b+3)^0,f,c
  4489   001D8E  AE29               	btfss	___fladd@grs^0,7,c
  4490   001D90  EFCC  F00E         	goto	u2701
  4491   001D94  EFCE  F00E         	goto	u2700
  4492   001D98                     u2701:
  4493   001D98  EFCF  F00E         	goto	l3410
  4494   001D9C                     u2700:
  4495   001D9C  801A               	bsf	___fladd@b^0,0,c
  4496   001D9E                     l3410:
  4497   001D9E  A029               	btfss	___fladd@grs^0,0,c
  4498   001DA0  EFD4  F00E         	goto	u2711
  4499   001DA4  EFD6  F00E         	goto	u2710
  4500   001DA8                     u2711:
  4501   001DA8  EFDA  F00E         	goto	l3414
  4502   001DAC                     u2710:
  4503   001DAC  80D8               	bsf	status,0,c
  4504   001DAE  3629               	rlcf	___fladd@grs^0,f,c
  4505   001DB0  EFDC  F00E         	goto	l3416
  4506   001DB4                     l3414:
  4507   001DB4  90D8               	bcf	status,0,c
  4508   001DB6  3629               	rlcf	___fladd@grs^0,f,c
  4509   001DB8                     l3416:
  4510   001DB8  5028               	movf	___fladd@bexp^0,w,c
  4511   001DBA  B4D8               	btfsc	status,2,c
  4512   001DBC  EFE2  F00E         	goto	u2721
  4513   001DC0  EFE4  F00E         	goto	u2720
  4514   001DC4                     u2721:
  4515   001DC4  EFE5  F00E         	goto	l3420
  4516   001DC8                     u2720:
  4517   001DC8  0628               	decf	___fladd@bexp^0,f,c
  4518   001DCA                     l3420:
  4519   001DCA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4520   001DCC  EFEA  F00E         	goto	u2731
  4521   001DD0  EFEC  F00E         	goto	u2730
  4522   001DD4                     u2731:
  4523   001DD4  EFC2  F00E         	goto	l3404
  4524   001DD8                     u2730:
  4525   001DD8                     l3422:
  4526   001DD8  0E00               	movlw	0
  4527   001DDA  6E27               	movwf	___fladd@aexp^0,c
  4528   001DDC  AE29               	btfss	___fladd@grs^0,7,c
  4529   001DDE  EFF3  F00E         	goto	u2741
  4530   001DE2  EFF5  F00E         	goto	u2740
  4531   001DE6                     u2741:
  4532   001DE6  EF0D  F00F         	goto	l1187
  4533   001DEA                     u2740:
  4534   001DEA  C029  F022         	movff	___fladd@grs,??___fladd
  4535   001DEE  0E7F               	movlw	127
  4536   001DF0  1622               	andwf	??___fladd^0,f,c
  4537   001DF2  B4D8               	btfsc	status,2,c
  4538   001DF4  EFFE  F00E         	goto	u2751
  4539   001DF8  EF00  F00F         	goto	u2750
  4540   001DFC                     u2751:
  4541   001DFC  EF04  F00F         	goto	l1188
  4542   001E00                     u2750:
  4543   001E00                     l3428:
  4544   001E00  0E01               	movlw	1
  4545   001E02  6E27               	movwf	___fladd@aexp^0,c
  4546   001E04  EF0D  F00F         	goto	l1187
  4547   001E08                     l1188:
  4548   001E08  A01A               	btfss	___fladd@b^0,0,c
  4549   001E0A  EF09  F00F         	goto	u2761
  4550   001E0E  EF0B  F00F         	goto	u2760
  4551   001E12                     u2761:
  4552   001E12  EF0D  F00F         	goto	l1187
  4553   001E16                     u2760:
  4554   001E16  EF00  F00F         	goto	l3428
  4555   001E1A                     l1187:
  4556   001E1A  5027               	movf	___fladd@aexp^0,w,c
  4557   001E1C  B4D8               	btfsc	status,2,c
  4558   001E1E  EF13  F00F         	goto	u2771
  4559   001E22  EF15  F00F         	goto	u2770
  4560   001E26                     u2771:
  4561   001E26  EF40  F00F         	goto	l3440
  4562   001E2A                     u2770:
  4563   001E2A  0E01               	movlw	1
  4564   001E2C  261A               	addwf	___fladd@b^0,f,c
  4565   001E2E  0E00               	movlw	0
  4566   001E30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4567   001E32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4568   001E34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4569   001E36  A01D               	btfss	(___fladd@b+3)^0,0,c
  4570   001E38  EF20  F00F         	goto	u2781
  4571   001E3C  EF22  F00F         	goto	u2780
  4572   001E40                     u2781:
  4573   001E40  EF40  F00F         	goto	l3440
  4574   001E44                     u2780:
  4575   001E44  C01A  F022         	movff	___fladd@b,??___fladd
  4576   001E48  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4577   001E4C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4578   001E50  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4579   001E54  3425               	rlcf	(??___fladd+3)^0,w,c
  4580   001E56  3225               	rrcf	(??___fladd+3)^0,f,c
  4581   001E58  3224               	rrcf	(??___fladd+2)^0,f,c
  4582   001E5A  3223               	rrcf	(??___fladd+1)^0,f,c
  4583   001E5C  3222               	rrcf	??___fladd^0,f,c
  4584   001E5E  C022  F01A         	movff	??___fladd,___fladd@b
  4585   001E62  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4586   001E66  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4587   001E6A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4588   001E6E  2828               	incf	___fladd@bexp^0,w,c
  4589   001E70  B4D8               	btfsc	status,2,c
  4590   001E72  EF3D  F00F         	goto	u2791
  4591   001E76  EF3F  F00F         	goto	u2790
  4592   001E7A                     u2791:
  4593   001E7A  EF40  F00F         	goto	l3440
  4594   001E7E                     u2790:
  4595   001E7E  2A28               	incf	___fladd@bexp^0,f,c
  4596   001E80                     l3440:
  4597   001E80  2828               	incf	___fladd@bexp^0,w,c
  4598   001E82  B4D8               	btfsc	status,2,c
  4599   001E84  EF46  F00F         	goto	u2801
  4600   001E88  EF48  F00F         	goto	u2800
  4601   001E8C                     u2801:
  4602   001E8C  EF50  F00F         	goto	l3444
  4603   001E90                     u2800:
  4604   001E90  5028               	movf	___fladd@bexp^0,w,c
  4605   001E92  A4D8               	btfss	status,2,c
  4606   001E94  EF4E  F00F         	goto	u2811
  4607   001E98  EF50  F00F         	goto	u2810
  4608   001E9C                     u2811:
  4609   001E9C  EF62  F00F         	goto	l3448
  4610   001EA0                     u2810:
  4611   001EA0                     l3444:
  4612   001EA0  0E00               	movlw	0
  4613   001EA2  6E1A               	movwf	___fladd@b^0,c
  4614   001EA4  0E00               	movlw	0
  4615   001EA6  6E1B               	movwf	(___fladd@b+1)^0,c
  4616   001EA8  0E00               	movlw	0
  4617   001EAA  6E1C               	movwf	(___fladd@b+2)^0,c
  4618   001EAC  0E00               	movlw	0
  4619   001EAE  6E1D               	movwf	(___fladd@b+3)^0,c
  4620   001EB0  5028               	movf	___fladd@bexp^0,w,c
  4621   001EB2  A4D8               	btfss	status,2,c
  4622   001EB4  EF5E  F00F         	goto	u2821
  4623   001EB8  EF60  F00F         	goto	u2820
  4624   001EBC                     u2821:
  4625   001EBC  EF62  F00F         	goto	l3448
  4626   001EC0                     u2820:
  4627   001EC0  0E00               	movlw	0
  4628   001EC2  6E26               	movwf	___fladd@signs^0,c
  4629   001EC4                     l3448:
  4630   001EC4  A028               	btfss	___fladd@bexp^0,0,c
  4631   001EC6  EF67  F00F         	goto	u2831
  4632   001ECA  EF69  F00F         	goto	u2830
  4633   001ECE                     u2831:
  4634   001ECE  EF6C  F00F         	goto	l3452
  4635   001ED2                     u2830:
  4636   001ED2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4637   001ED4  EF6D  F00F         	goto	l3454
  4638   001ED8                     l3452:
  4639   001ED8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4640   001EDA                     l3454:
  4641   001EDA  90D8               	bcf	status,0,c
  4642   001EDC  3028               	rrcf	___fladd@bexp^0,w,c
  4643   001EDE  6E1D               	movwf	(___fladd@b+3)^0,c
  4644   001EE0  AE26               	btfss	___fladd@signs^0,7,c
  4645   001EE2  EF75  F00F         	goto	u2841
  4646   001EE6  EF77  F00F         	goto	u2840
  4647   001EEA                     u2841:
  4648   001EEA  EF78  F00F         	goto	l3460
  4649   001EEE                     u2840:
  4650   001EEE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4651   001EF0                     l3460:
  4652   001EF0  C01A  F01A         	movff	___fladd@b,?___fladd
  4653   001EF4  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4654   001EF8  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4655   001EFC  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4656   001F00                     l1170:
  4657   001F00  0012               	return		;funcret
  4658   001F02                     __end_of___fladd:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function ___flmul *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  b               4   74[COMRAM] unsigned char 
  4666 ;;  a               4   78[COMRAM] unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  prod            4    7[BANK0 ] struct .
  4669 ;;  grs             4    1[BANK0 ] unsigned long 
  4670 ;;  temp            2   11[BANK0 ] struct .
  4671 ;;  bexp            1    6[BANK0 ] unsigned char 
  4672 ;;  aexp            1    5[BANK0 ] unsigned char 
  4673 ;;  sign            1    0[BANK0 ] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  4   74[COMRAM] unsigned char 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, prodl, prodh
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:       25 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_Left45
  4694 ;;		_Right45
  4695 ;;		_reverseHalfSquare
  4696 ;;		_Yellow_rev1_R90
  4697 ;;		_Pink_rev1_L90
  4698 ;;		_RGB2Hue
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text23
  4703   001F02                     __ptext23:
  4704                           	callstack 0
  4705   001F02                     ___flmul:
  4706                           	callstack 28
  4707   001F02  504E               	movf	(___flmul@b+3)^0,w,c
  4708   001F04  0B80               	andlw	128
  4709   001F06  0100               	movlb	0	; () banked
  4710   001F08  6F60               	movwf	___flmul@sign& (0+255),b
  4711   001F0A  504E               	movf	(___flmul@b+3)^0,w,c
  4712   001F0C  244E               	addwf	(___flmul@b+3)^0,w,c
  4713   001F0E  6F66               	movwf	___flmul@bexp& (0+255),b
  4714   001F10                     
  4715                           ; BSR set to: 0
  4716   001F10  AE4D               	btfss	(___flmul@b+2)^0,7,c
  4717   001F12  EF8D  F00F         	goto	u3381
  4718   001F16  EF8F  F00F         	goto	u3380
  4719   001F1A                     u3381:
  4720   001F1A  EF90  F00F         	goto	l3848
  4721   001F1E                     u3380:
  4722   001F1E                     
  4723                           ; BSR set to: 0
  4724   001F1E  8166               	bsf	___flmul@bexp& (0+255),0,b
  4725   001F20                     l3848:
  4726                           
  4727                           ; BSR set to: 0
  4728   001F20  5166               	movf	___flmul@bexp& (0+255),w,b
  4729   001F22  B4D8               	btfsc	status,2,c
  4730   001F24  EF96  F00F         	goto	u3391
  4731   001F28  EF98  F00F         	goto	u3390
  4732   001F2C                     u3391:
  4733   001F2C  EFAB  F00F         	goto	l3856
  4734   001F30                     u3390:
  4735   001F30                     
  4736                           ; BSR set to: 0
  4737   001F30  2966               	incf	___flmul@bexp& (0+255),w,b
  4738   001F32  A4D8               	btfss	status,2,c
  4739   001F34  EF9E  F00F         	goto	u3401
  4740   001F38  EFA0  F00F         	goto	u3400
  4741   001F3C                     u3401:
  4742   001F3C  EFA8  F00F         	goto	l3854
  4743   001F40                     u3400:
  4744   001F40                     
  4745                           ; BSR set to: 0
  4746   001F40  0E00               	movlw	0
  4747   001F42  6E4B               	movwf	___flmul@b^0,c
  4748   001F44  0E00               	movlw	0
  4749   001F46  6E4C               	movwf	(___flmul@b+1)^0,c
  4750   001F48  0E00               	movlw	0
  4751   001F4A  6E4D               	movwf	(___flmul@b+2)^0,c
  4752   001F4C  0E00               	movlw	0
  4753   001F4E  6E4E               	movwf	(___flmul@b+3)^0,c
  4754   001F50                     l3854:
  4755                           
  4756                           ; BSR set to: 0
  4757   001F50  8E4D               	bsf	(___flmul@b+2)^0,7,c
  4758   001F52  EFB3  F00F         	goto	l3858
  4759   001F56                     l3856:
  4760                           
  4761                           ; BSR set to: 0
  4762   001F56  0E00               	movlw	0
  4763   001F58  6E4B               	movwf	___flmul@b^0,c
  4764   001F5A  0E00               	movlw	0
  4765   001F5C  6E4C               	movwf	(___flmul@b+1)^0,c
  4766   001F5E  0E00               	movlw	0
  4767   001F60  6E4D               	movwf	(___flmul@b+2)^0,c
  4768   001F62  0E00               	movlw	0
  4769   001F64  6E4E               	movwf	(___flmul@b+3)^0,c
  4770   001F66                     l3858:
  4771                           
  4772                           ; BSR set to: 0
  4773   001F66  5052               	movf	(___flmul@a+3)^0,w,c
  4774   001F68  0B80               	andlw	128
  4775   001F6A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  4776   001F6C                     
  4777                           ; BSR set to: 0
  4778   001F6C  5052               	movf	(___flmul@a+3)^0,w,c
  4779   001F6E  2452               	addwf	(___flmul@a+3)^0,w,c
  4780   001F70  6F65               	movwf	___flmul@aexp& (0+255),b
  4781   001F72                     
  4782                           ; BSR set to: 0
  4783   001F72  AE51               	btfss	(___flmul@a+2)^0,7,c
  4784   001F74  EFBE  F00F         	goto	u3411
  4785   001F78  EFC0  F00F         	goto	u3410
  4786   001F7C                     u3411:
  4787   001F7C  EFC1  F00F         	goto	l3866
  4788   001F80                     u3410:
  4789   001F80                     
  4790                           ; BSR set to: 0
  4791   001F80  8165               	bsf	___flmul@aexp& (0+255),0,b
  4792   001F82                     l3866:
  4793                           
  4794                           ; BSR set to: 0
  4795   001F82  5165               	movf	___flmul@aexp& (0+255),w,b
  4796   001F84  B4D8               	btfsc	status,2,c
  4797   001F86  EFC7  F00F         	goto	u3421
  4798   001F8A  EFC9  F00F         	goto	u3420
  4799   001F8E                     u3421:
  4800   001F8E  EFDC  F00F         	goto	l3874
  4801   001F92                     u3420:
  4802   001F92                     
  4803                           ; BSR set to: 0
  4804   001F92  2965               	incf	___flmul@aexp& (0+255),w,b
  4805   001F94  A4D8               	btfss	status,2,c
  4806   001F96  EFCF  F00F         	goto	u3431
  4807   001F9A  EFD1  F00F         	goto	u3430
  4808   001F9E                     u3431:
  4809   001F9E  EFD9  F00F         	goto	l3872
  4810   001FA2                     u3430:
  4811   001FA2                     
  4812                           ; BSR set to: 0
  4813   001FA2  0E00               	movlw	0
  4814   001FA4  6E4F               	movwf	___flmul@a^0,c
  4815   001FA6  0E00               	movlw	0
  4816   001FA8  6E50               	movwf	(___flmul@a+1)^0,c
  4817   001FAA  0E00               	movlw	0
  4818   001FAC  6E51               	movwf	(___flmul@a+2)^0,c
  4819   001FAE  0E00               	movlw	0
  4820   001FB0  6E52               	movwf	(___flmul@a+3)^0,c
  4821   001FB2                     l3872:
  4822                           
  4823                           ; BSR set to: 0
  4824   001FB2  8E51               	bsf	(___flmul@a+2)^0,7,c
  4825   001FB4  EFE4  F00F         	goto	l1247
  4826   001FB8                     l3874:
  4827                           
  4828                           ; BSR set to: 0
  4829   001FB8  0E00               	movlw	0
  4830   001FBA  6E4F               	movwf	___flmul@a^0,c
  4831   001FBC  0E00               	movlw	0
  4832   001FBE  6E50               	movwf	(___flmul@a+1)^0,c
  4833   001FC0  0E00               	movlw	0
  4834   001FC2  6E51               	movwf	(___flmul@a+2)^0,c
  4835   001FC4  0E00               	movlw	0
  4836   001FC6  6E52               	movwf	(___flmul@a+3)^0,c
  4837   001FC8                     l1247:
  4838                           
  4839                           ; BSR set to: 0
  4840   001FC8  5165               	movf	___flmul@aexp& (0+255),w,b
  4841   001FCA  B4D8               	btfsc	status,2,c
  4842   001FCC  EFEA  F00F         	goto	u3441
  4843   001FD0  EFEC  F00F         	goto	u3440
  4844   001FD4                     u3441:
  4845   001FD4  EFF4  F00F         	goto	l3878
  4846   001FD8                     u3440:
  4847   001FD8                     
  4848                           ; BSR set to: 0
  4849   001FD8  5166               	movf	___flmul@bexp& (0+255),w,b
  4850   001FDA  A4D8               	btfss	status,2,c
  4851   001FDC  EFF2  F00F         	goto	u3451
  4852   001FE0  EFF4  F00F         	goto	u3450
  4853   001FE4                     u3451:
  4854   001FE4  EFFE  F00F         	goto	l3882
  4855   001FE8                     u3450:
  4856   001FE8                     l3878:
  4857                           
  4858                           ; BSR set to: 0
  4859   001FE8  0E00               	movlw	0
  4860   001FEA  6E4B               	movwf	?___flmul^0,c
  4861   001FEC  0E00               	movlw	0
  4862   001FEE  6E4C               	movwf	(?___flmul+1)^0,c
  4863   001FF0  0E00               	movlw	0
  4864   001FF2  6E4D               	movwf	(?___flmul+2)^0,c
  4865   001FF4  0E00               	movlw	0
  4866   001FF6  6E4E               	movwf	(?___flmul+3)^0,c
  4867   001FF8  EF96  F011         	goto	l1251
  4868   001FFC                     l3882:
  4869                           
  4870                           ; BSR set to: 0
  4871   001FFC  5051               	movf	(___flmul@a+2)^0,w,c
  4872   001FFE  024B               	mulwf	___flmul@b^0,c
  4873   002000  CFF3 F06B          	movff	prodl,___flmul@temp
  4874   002004  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4875   002008                     
  4876                           ; BSR set to: 0
  4877   002008  516B               	movf	___flmul@temp& (0+255),w,b
  4878   00200A  6F61               	movwf	___flmul@grs& (0+255),b
  4879   00200C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  4880   00200E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  4881   002010  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  4882   002012                     
  4883                           ; BSR set to: 0
  4884   002012  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4885   002014  6F67               	movwf	___flmul@prod& (0+255),b
  4886   002016  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  4887   002018  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  4888   00201A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  4889   00201C  5050               	movf	(___flmul@a+1)^0,w,c
  4890   00201E  024C               	mulwf	(___flmul@b+1)^0,c
  4891   002020  CFF3 F06B          	movff	prodl,___flmul@temp
  4892   002024  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4893   002028                     
  4894                           ; BSR set to: 0
  4895   002028  516B               	movf	___flmul@temp& (0+255),w,b
  4896   00202A  2761               	addwf	___flmul@grs& (0+255),f,b
  4897   00202C  0E00               	movlw	0
  4898   00202E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4899   002030  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4900   002032  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4901   002034                     
  4902                           ; BSR set to: 0
  4903   002034  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4904   002036  2767               	addwf	___flmul@prod& (0+255),f,b
  4905   002038  0E00               	movlw	0
  4906   00203A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4907   00203C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4908   00203E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4909   002040  504F               	movf	___flmul@a^0,w,c
  4910   002042  024D               	mulwf	(___flmul@b+2)^0,c
  4911   002044  CFF3 F06B          	movff	prodl,___flmul@temp
  4912   002048  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4913   00204C                     
  4914                           ; BSR set to: 0
  4915   00204C  516B               	movf	___flmul@temp& (0+255),w,b
  4916   00204E  2761               	addwf	___flmul@grs& (0+255),f,b
  4917   002050  0E00               	movlw	0
  4918   002052  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4919   002054  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4920   002056  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4921   002058                     
  4922                           ; BSR set to: 0
  4923   002058  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4924   00205A  2767               	addwf	___flmul@prod& (0+255),f,b
  4925   00205C  0E00               	movlw	0
  4926   00205E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4927   002060  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4928   002062  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4929   002064                     
  4930                           ; BSR set to: 0
  4931   002064  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4932   002068  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4933   00206C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4934   002070  6B61               	clrf	___flmul@grs& (0+255),b
  4935   002072                     
  4936                           ; BSR set to: 0
  4937   002072  504F               	movf	___flmul@a^0,w,c
  4938   002074  024C               	mulwf	(___flmul@b+1)^0,c
  4939   002076  CFF3 F06B          	movff	prodl,___flmul@temp
  4940   00207A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4941   00207E                     
  4942                           ; BSR set to: 0
  4943   00207E  516B               	movf	___flmul@temp& (0+255),w,b
  4944   002080  2761               	addwf	___flmul@grs& (0+255),f,b
  4945   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4946   002084  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4947   002086  0E00               	movlw	0
  4948   002088  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4949   00208A  0E00               	movlw	0
  4950   00208C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4951   00208E                     
  4952                           ; BSR set to: 0
  4953   00208E  5050               	movf	(___flmul@a+1)^0,w,c
  4954   002090  024B               	mulwf	___flmul@b^0,c
  4955   002092  CFF3 F06B          	movff	prodl,___flmul@temp
  4956   002096  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4957   00209A                     
  4958                           ; BSR set to: 0
  4959   00209A  516B               	movf	___flmul@temp& (0+255),w,b
  4960   00209C  2761               	addwf	___flmul@grs& (0+255),f,b
  4961   00209E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4962   0020A0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4963   0020A2  0E00               	movlw	0
  4964   0020A4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4965   0020A6  0E00               	movlw	0
  4966   0020A8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4967   0020AA                     
  4968                           ; BSR set to: 0
  4969   0020AA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4970   0020AE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4971   0020B2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4972   0020B6  6B61               	clrf	___flmul@grs& (0+255),b
  4973   0020B8  504F               	movf	___flmul@a^0,w,c
  4974   0020BA  024B               	mulwf	___flmul@b^0,c
  4975   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  4976   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4977   0020C4                     
  4978                           ; BSR set to: 0
  4979   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  4980   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  4981   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4982   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4983   0020CC  0E00               	movlw	0
  4984   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4985   0020D0  0E00               	movlw	0
  4986   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4987   0020D4                     
  4988                           ; BSR set to: 0
  4989   0020D4  5051               	movf	(___flmul@a+2)^0,w,c
  4990   0020D6  024C               	mulwf	(___flmul@b+1)^0,c
  4991   0020D8  CFF3 F06B          	movff	prodl,___flmul@temp
  4992   0020DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4993   0020E0  516B               	movf	___flmul@temp& (0+255),w,b
  4994   0020E2  2767               	addwf	___flmul@prod& (0+255),f,b
  4995   0020E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4996   0020E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4997   0020E8  0E00               	movlw	0
  4998   0020EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4999   0020EC  0E00               	movlw	0
  5000   0020EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5001   0020F0                     
  5002                           ; BSR set to: 0
  5003   0020F0  5050               	movf	(___flmul@a+1)^0,w,c
  5004   0020F2  024D               	mulwf	(___flmul@b+2)^0,c
  5005   0020F4  CFF3 F06B          	movff	prodl,___flmul@temp
  5006   0020F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5007   0020FC                     
  5008                           ; BSR set to: 0
  5009   0020FC  516B               	movf	___flmul@temp& (0+255),w,b
  5010   0020FE  2767               	addwf	___flmul@prod& (0+255),f,b
  5011   002100  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5012   002102  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5013   002104  0E00               	movlw	0
  5014   002106  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5015   002108  0E00               	movlw	0
  5016   00210A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5017   00210C  5051               	movf	(___flmul@a+2)^0,w,c
  5018   00210E  024D               	mulwf	(___flmul@b+2)^0,c
  5019   002110  CFF3 F06B          	movff	prodl,___flmul@temp
  5020   002114  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5021   002118                     
  5022                           ; BSR set to: 0
  5023   002118  516B               	movf	___flmul@temp& (0+255),w,b
  5024   00211A  6E53               	movwf	??___flmul^0,c
  5025   00211C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5026   00211E  6E54               	movwf	(??___flmul+1)^0,c
  5027   002120  6A55               	clrf	(??___flmul+2)^0,c
  5028   002122  6A56               	clrf	(??___flmul+3)^0,c
  5029   002124  C055  F056         	movff	??___flmul+2,??___flmul+3
  5030   002128  C054  F055         	movff	??___flmul+1,??___flmul+2
  5031   00212C  C053  F054         	movff	??___flmul,??___flmul+1
  5032   002130  6A53               	clrf	??___flmul^0,c
  5033   002132  5053               	movf	??___flmul^0,w,c
  5034   002134  2767               	addwf	___flmul@prod& (0+255),f,b
  5035   002136  5054               	movf	(??___flmul+1)^0,w,c
  5036   002138  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5037   00213A  5055               	movf	(??___flmul+2)^0,w,c
  5038   00213C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5039   00213E  5056               	movf	(??___flmul+3)^0,w,c
  5040   002140  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5041   002142                     
  5042                           ; BSR set to: 0
  5043   002142  C061  F053         	movff	___flmul@grs,??___flmul
  5044   002146  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  5045   00214A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  5046   00214E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  5047   002152  0E19               	movlw	25
  5048   002154  EFB1  F010         	goto	u3460
  5049   002158                     u3465:
  5050   002158  90D8               	bcf	status,0,c
  5051   00215A  3256               	rrcf	(??___flmul+3)^0,f,c
  5052   00215C  3255               	rrcf	(??___flmul+2)^0,f,c
  5053   00215E  3254               	rrcf	(??___flmul+1)^0,f,c
  5054   002160  3253               	rrcf	??___flmul^0,f,c
  5055   002162                     u3460:
  5056   002162  2EE8               	decfsz	wreg,f,c
  5057   002164  EFAC  F010         	goto	u3465
  5058   002168  5053               	movf	??___flmul^0,w,c
  5059   00216A  2767               	addwf	___flmul@prod& (0+255),f,b
  5060   00216C  5054               	movf	(??___flmul+1)^0,w,c
  5061   00216E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5062   002170  5055               	movf	(??___flmul+2)^0,w,c
  5063   002172  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5064   002174  5056               	movf	(??___flmul+3)^0,w,c
  5065   002176  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5066   002178                     
  5067                           ; BSR set to: 0
  5068   002178  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  5069   00217C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  5070   002180  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  5071   002184  6B61               	clrf	___flmul@grs& (0+255),b
  5072   002186                     
  5073                           ; BSR set to: 0
  5074   002186  5165               	movf	___flmul@aexp& (0+255),w,b
  5075   002188  C066  F053         	movff	___flmul@bexp,??___flmul
  5076   00218C  6A54               	clrf	(??___flmul+1)^0,c
  5077   00218E  2653               	addwf	??___flmul^0,f,c
  5078   002190  0E00               	movlw	0
  5079   002192  2254               	addwfc	(??___flmul+1)^0,f,c
  5080   002194  0E82               	movlw	130
  5081   002196  2453               	addwf	??___flmul^0,w,c
  5082   002198  6F6B               	movwf	___flmul@temp& (0+255),b
  5083   00219A  0EFF               	movlw	255
  5084   00219C  2054               	addwfc	(??___flmul+1)^0,w,c
  5085   00219E  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  5086   0021A0  EFE7  F010         	goto	l3930
  5087   0021A4                     l3924:
  5088                           
  5089                           ; BSR set to: 0
  5090   0021A4  90D8               	bcf	status,0,c
  5091   0021A6  3767               	rlcf	___flmul@prod& (0+255),f,b
  5092   0021A8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5093   0021AA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5094   0021AC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5095   0021AE                     
  5096                           ; BSR set to: 0
  5097   0021AE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5098   0021B0  EFDC  F010         	goto	u3471
  5099   0021B4  EFDE  F010         	goto	u3470
  5100   0021B8                     u3471:
  5101   0021B8  EFDF  F010         	goto	l1254
  5102   0021BC                     u3470:
  5103   0021BC                     
  5104                           ; BSR set to: 0
  5105   0021BC  8167               	bsf	___flmul@prod& (0+255),0,b
  5106   0021BE                     l1254:
  5107                           
  5108                           ; BSR set to: 0
  5109   0021BE  90D8               	bcf	status,0,c
  5110   0021C0  3761               	rlcf	___flmul@grs& (0+255),f,b
  5111   0021C2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5112   0021C4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5113   0021C6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5114   0021C8  076B               	decf	___flmul@temp& (0+255),f,b
  5115   0021CA  A0D8               	btfss	status,0,c
  5116   0021CC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  5117   0021CE                     l3930:
  5118                           
  5119                           ; BSR set to: 0
  5120   0021CE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  5121   0021D0  EFEC  F010         	goto	u3481
  5122   0021D4  EFEE  F010         	goto	u3480
  5123   0021D8                     u3481:
  5124   0021D8  EFD2  F010         	goto	l3924
  5125   0021DC                     u3480:
  5126   0021DC                     
  5127                           ; BSR set to: 0
  5128   0021DC  0E00               	movlw	0
  5129   0021DE  6F65               	movwf	___flmul@aexp& (0+255),b
  5130   0021E0                     
  5131                           ; BSR set to: 0
  5132   0021E0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5133   0021E2  EFF5  F010         	goto	u3491
  5134   0021E6  EFF7  F010         	goto	u3490
  5135   0021EA                     u3491:
  5136   0021EA  EF1B  F011         	goto	l1256
  5137   0021EE                     u3490:
  5138   0021EE                     
  5139                           ; BSR set to: 0
  5140   0021EE  0EFF               	movlw	255
  5141   0021F0  1561               	andwf	___flmul@grs& (0+255),w,b
  5142   0021F2  6E53               	movwf	??___flmul^0,c
  5143   0021F4  0EFF               	movlw	255
  5144   0021F6  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  5145   0021F8  6E54               	movwf	(??___flmul+1)^0,c
  5146   0021FA  0EFF               	movlw	255
  5147   0021FC  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  5148   0021FE  6E55               	movwf	(??___flmul+2)^0,c
  5149   002200  0E7F               	movlw	127
  5150   002202  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  5151   002204  6E56               	movwf	(??___flmul+3)^0,c
  5152   002206  5053               	movf	??___flmul^0,w,c
  5153   002208  1054               	iorwf	(??___flmul+1)^0,w,c
  5154   00220A  1055               	iorwf	(??___flmul+2)^0,w,c
  5155   00220C  1056               	iorwf	(??___flmul+3)^0,w,c
  5156   00220E  B4D8               	btfsc	status,2,c
  5157   002210  EF0C  F011         	goto	u3501
  5158   002214  EF0E  F011         	goto	u3500
  5159   002218                     u3501:
  5160   002218  EF12  F011         	goto	l1257
  5161   00221C                     u3500:
  5162   00221C                     l3938:
  5163                           
  5164                           ; BSR set to: 0
  5165   00221C  0E01               	movlw	1
  5166   00221E  6F65               	movwf	___flmul@aexp& (0+255),b
  5167   002220  EF1B  F011         	goto	l1256
  5168   002224                     l1257:
  5169                           
  5170                           ; BSR set to: 0
  5171   002224  A167               	btfss	___flmul@prod& (0+255),0,b
  5172   002226  EF17  F011         	goto	u3511
  5173   00222A  EF19  F011         	goto	u3510
  5174   00222E                     u3511:
  5175   00222E  EF1B  F011         	goto	l1256
  5176   002232                     u3510:
  5177   002232  EF0E  F011         	goto	l3938
  5178   002236                     l1256:
  5179                           
  5180                           ; BSR set to: 0
  5181   002236  5165               	movf	___flmul@aexp& (0+255),w,b
  5182   002238  B4D8               	btfsc	status,2,c
  5183   00223A  EF21  F011         	goto	u3521
  5184   00223E  EF23  F011         	goto	u3520
  5185   002242                     u3521:
  5186   002242  EF47  F011         	goto	l3950
  5187   002246                     u3520:
  5188   002246                     
  5189                           ; BSR set to: 0
  5190   002246  0E01               	movlw	1
  5191   002248  2767               	addwf	___flmul@prod& (0+255),f,b
  5192   00224A  0E00               	movlw	0
  5193   00224C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5194   00224E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5195   002250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5196   002252                     
  5197                           ; BSR set to: 0
  5198   002252  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5199   002254  EF2E  F011         	goto	u3531
  5200   002258  EF30  F011         	goto	u3530
  5201   00225C                     u3531:
  5202   00225C  EF47  F011         	goto	l3950
  5203   002260                     u3530:
  5204   002260                     
  5205                           ; BSR set to: 0
  5206   002260  C067  F053         	movff	___flmul@prod,??___flmul
  5207   002264  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  5208   002268  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  5209   00226C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  5210   002270  3456               	rlcf	(??___flmul+3)^0,w,c
  5211   002272  3256               	rrcf	(??___flmul+3)^0,f,c
  5212   002274  3255               	rrcf	(??___flmul+2)^0,f,c
  5213   002276  3254               	rrcf	(??___flmul+1)^0,f,c
  5214   002278  3253               	rrcf	??___flmul^0,f,c
  5215   00227A  C053  F067         	movff	??___flmul,___flmul@prod
  5216   00227E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  5217   002282  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  5218   002286  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  5219   00228A                     
  5220                           ; BSR set to: 0
  5221   00228A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  5222   00228C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  5223   00228E                     l3950:
  5224                           
  5225                           ; BSR set to: 0
  5226   00228E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5227   002290  EF52  F011         	goto	u3541
  5228   002294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5229   002296  E108               	bnz	u3540
  5230   002298  296B               	incf	___flmul@temp& (0+255),w,b
  5231   00229A  A0D8               	btfss	status,0,c
  5232   00229C  EF52  F011         	goto	u3541
  5233   0022A0  EF54  F011         	goto	u3540
  5234   0022A4                     u3541:
  5235   0022A4  EF5E  F011         	goto	l3954
  5236   0022A8                     u3540:
  5237   0022A8                     
  5238                           ; BSR set to: 0
  5239   0022A8  0E00               	movlw	0
  5240   0022AA  6F67               	movwf	___flmul@prod& (0+255),b
  5241   0022AC  0E00               	movlw	0
  5242   0022AE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5243   0022B0  0E80               	movlw	128
  5244   0022B2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5245   0022B4  0E7F               	movlw	127
  5246   0022B6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5247   0022B8  EF8C  F011         	goto	l3966
  5248   0022BC                     l3954:
  5249                           
  5250                           ; BSR set to: 0
  5251   0022BC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5252   0022BE  EF6B  F011         	goto	u3550
  5253   0022C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5254   0022C4  E106               	bnz	u3551
  5255   0022C6  056B               	decf	___flmul@temp& (0+255),w,b
  5256   0022C8  B0D8               	btfsc	status,0,c
  5257   0022CA  EF69  F011         	goto	u3551
  5258   0022CE  EF6B  F011         	goto	u3550
  5259   0022D2                     u3551:
  5260   0022D2  EF77  F011         	goto	l1264
  5261   0022D6                     u3550:
  5262   0022D6                     
  5263                           ; BSR set to: 0
  5264   0022D6  0E00               	movlw	0
  5265   0022D8  6F67               	movwf	___flmul@prod& (0+255),b
  5266   0022DA  0E00               	movlw	0
  5267   0022DC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5268   0022DE  0E00               	movlw	0
  5269   0022E0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5270   0022E2  0E00               	movlw	0
  5271   0022E4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5272   0022E6  0E00               	movlw	0
  5273   0022E8  6F60               	movwf	___flmul@sign& (0+255),b
  5274   0022EA  EF8C  F011         	goto	l3966
  5275   0022EE                     l1264:
  5276                           
  5277                           ; BSR set to: 0
  5278   0022EE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  5279   0022F2                     
  5280                           ; BSR set to: 0
  5281   0022F2  0EFF               	movlw	255
  5282   0022F4  1767               	andwf	___flmul@prod& (0+255),f,b
  5283   0022F6  0EFF               	movlw	255
  5284   0022F8  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  5285   0022FA  0E7F               	movlw	127
  5286   0022FC  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  5287   0022FE  0E00               	movlw	0
  5288   002300  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5289   002302                     
  5290                           ; BSR set to: 0
  5291   002302  A166               	btfss	___flmul@bexp& (0+255),0,b
  5292   002304  EF86  F011         	goto	u3561
  5293   002308  EF88  F011         	goto	u3560
  5294   00230C                     u3561:
  5295   00230C  EF89  F011         	goto	l3964
  5296   002310                     u3560:
  5297   002310                     
  5298                           ; BSR set to: 0
  5299   002310  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  5300   002312                     l3964:
  5301                           
  5302                           ; BSR set to: 0
  5303   002312  90D8               	bcf	status,0,c
  5304   002314  3166               	rrcf	___flmul@bexp& (0+255),w,b
  5305   002316  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5306   002318                     l3966:
  5307                           
  5308                           ; BSR set to: 0
  5309   002318  5160               	movf	___flmul@sign& (0+255),w,b
  5310   00231A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5311   00231C                     
  5312                           ; BSR set to: 0
  5313   00231C  C067  F04B         	movff	___flmul@prod,?___flmul
  5314   002320  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  5315   002324  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  5316   002328  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  5317   00232C                     l1251:
  5318                           
  5319                           ; BSR set to: 0
  5320   00232C  0012               	return		;funcret
  5321   00232E                     __end_of___flmul:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function ___fleq *****************
  5325 ;; Defined at:
  5326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  ff1             4    0[COMRAM] unsigned char 
  5329 ;;  ff2             4    4[COMRAM] unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;		None               void
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;Total ram usage:       12 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; Hardware stack levels required when called: 1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_RGB2Hue
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text24
  5356   00375E                     __ptext24:
  5357                           	callstack 0
  5358   00375E                     ___fleq:
  5359                           	callstack 28
  5360   00375E  0E00               	movlw	0
  5361   003760  1401               	andwf	___fleq@ff1^0,w,c
  5362   003762  6E09               	movwf	??___fleq^0,c
  5363   003764  0E00               	movlw	0
  5364   003766  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5365   003768  6E0A               	movwf	(??___fleq+1)^0,c
  5366   00376A  0E80               	movlw	128
  5367   00376C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5368   00376E  6E0B               	movwf	(??___fleq+2)^0,c
  5369   003770  0E7F               	movlw	127
  5370   003772  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5371   003774  6E0C               	movwf	(??___fleq+3)^0,c
  5372   003776  5009               	movf	??___fleq^0,w,c
  5373   003778  100A               	iorwf	(??___fleq+1)^0,w,c
  5374   00377A  100B               	iorwf	(??___fleq+2)^0,w,c
  5375   00377C  100C               	iorwf	(??___fleq+3)^0,w,c
  5376   00377E  A4D8               	btfss	status,2,c
  5377   003780  EFC4  F01B         	goto	u3571
  5378   003784  EFC6  F01B         	goto	u3570
  5379   003788                     u3571:
  5380   003788  EFCE  F01B         	goto	l3982
  5381   00378C                     u3570:
  5382   00378C  0E00               	movlw	0
  5383   00378E  6E01               	movwf	___fleq@ff1^0,c
  5384   003790  0E00               	movlw	0
  5385   003792  6E02               	movwf	(___fleq@ff1+1)^0,c
  5386   003794  0E00               	movlw	0
  5387   003796  6E03               	movwf	(___fleq@ff1+2)^0,c
  5388   003798  0E00               	movlw	0
  5389   00379A  6E04               	movwf	(___fleq@ff1+3)^0,c
  5390   00379C                     l3982:
  5391   00379C  0E00               	movlw	0
  5392   00379E  1405               	andwf	___fleq@ff2^0,w,c
  5393   0037A0  6E09               	movwf	??___fleq^0,c
  5394   0037A2  0E00               	movlw	0
  5395   0037A4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5396   0037A6  6E0A               	movwf	(??___fleq+1)^0,c
  5397   0037A8  0E80               	movlw	128
  5398   0037AA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5399   0037AC  6E0B               	movwf	(??___fleq+2)^0,c
  5400   0037AE  0E7F               	movlw	127
  5401   0037B0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5402   0037B2  6E0C               	movwf	(??___fleq+3)^0,c
  5403   0037B4  5009               	movf	??___fleq^0,w,c
  5404   0037B6  100A               	iorwf	(??___fleq+1)^0,w,c
  5405   0037B8  100B               	iorwf	(??___fleq+2)^0,w,c
  5406   0037BA  100C               	iorwf	(??___fleq+3)^0,w,c
  5407   0037BC  A4D8               	btfss	status,2,c
  5408   0037BE  EFE3  F01B         	goto	u3581
  5409   0037C2  EFE5  F01B         	goto	u3580
  5410   0037C6                     u3581:
  5411   0037C6  EFED  F01B         	goto	l3986
  5412   0037CA                     u3580:
  5413   0037CA  0E00               	movlw	0
  5414   0037CC  6E05               	movwf	___fleq@ff2^0,c
  5415   0037CE  0E00               	movlw	0
  5416   0037D0  6E06               	movwf	(___fleq@ff2+1)^0,c
  5417   0037D2  0E00               	movlw	0
  5418   0037D4  6E07               	movwf	(___fleq@ff2+2)^0,c
  5419   0037D6  0E00               	movlw	0
  5420   0037D8  6E08               	movwf	(___fleq@ff2+3)^0,c
  5421   0037DA                     l3986:
  5422   0037DA  5005               	movf	___fleq@ff2^0,w,c
  5423   0037DC  1801               	xorwf	___fleq@ff1^0,w,c
  5424   0037DE  E10F               	bnz	u3590
  5425   0037E0  5006               	movf	(___fleq@ff2+1)^0,w,c
  5426   0037E2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5427   0037E4  E10C               	bnz	u3590
  5428   0037E6  5007               	movf	(___fleq@ff2+2)^0,w,c
  5429   0037E8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5430   0037EA  E109               	bnz	u3590
  5431   0037EC  5008               	movf	(___fleq@ff2+3)^0,w,c
  5432   0037EE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5433   0037F0  B4D8               	btfsc	status,2,c
  5434   0037F2  EFFD  F01B         	goto	u3591
  5435   0037F6  EFFF  F01B         	goto	u3590
  5436   0037FA                     u3591:
  5437   0037FA  EF02  F01C         	goto	l3990
  5438   0037FE                     u3590:
  5439   0037FE  90D8               	bcf	status,0,c
  5440   003800  EF03  F01C         	goto	l892
  5441   003804                     l3990:
  5442   003804  80D8               	bsf	status,0,c
  5443   003806                     l892:
  5444   003806  0012               	return		;funcret
  5445   003808                     __end_of___fleq:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function ___fldiv *****************
  5449 ;; Defined at:
  5450 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  b               4   49[COMRAM] unsigned char 
  5453 ;;  a               4   53[COMRAM] unsigned char 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  grs             4   68[COMRAM] unsigned long 
  5456 ;;  rem             4   61[COMRAM] unsigned long 
  5457 ;;  new_exp         2   66[COMRAM] short 
  5458 ;;  aexp            1   73[COMRAM] unsigned char 
  5459 ;;  bexp            1   72[COMRAM] unsigned char 
  5460 ;;  sign            1   65[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  4   49[COMRAM] unsigned char 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;Total ram usage:       25 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_RGB2Hue
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text25
  5485   00232E                     __ptext25:
  5486                           	callstack 0
  5487   00232E                     ___fldiv:
  5488                           	callstack 28
  5489   00232E  5035               	movf	(___fldiv@b+3)^0,w,c
  5490   002330  0B80               	andlw	128
  5491   002332  6E42               	movwf	___fldiv@sign^0,c
  5492   002334  5035               	movf	(___fldiv@b+3)^0,w,c
  5493   002336  2435               	addwf	(___fldiv@b+3)^0,w,c
  5494   002338  6E49               	movwf	___fldiv@bexp^0,c
  5495   00233A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5496   00233C  EFA2  F011         	goto	u3151
  5497   002340  EFA4  F011         	goto	u3150
  5498   002344                     u3151:
  5499   002344  EFA5  F011         	goto	l3710
  5500   002348                     u3150:
  5501   002348  8049               	bsf	___fldiv@bexp^0,0,c
  5502   00234A                     l3710:
  5503   00234A  5049               	movf	___fldiv@bexp^0,w,c
  5504   00234C  B4D8               	btfsc	status,2,c
  5505   00234E  EFAB  F011         	goto	u3161
  5506   002352  EFAD  F011         	goto	u3160
  5507   002356                     u3161:
  5508   002356  EFC2  F011         	goto	l3720
  5509   00235A                     u3160:
  5510   00235A  2849               	incf	___fldiv@bexp^0,w,c
  5511   00235C  A4D8               	btfss	status,2,c
  5512   00235E  EFB3  F011         	goto	u3171
  5513   002362  EFB5  F011         	goto	u3170
  5514   002366                     u3171:
  5515   002366  EFBD  F011         	goto	l3716
  5516   00236A                     u3170:
  5517   00236A  0E00               	movlw	0
  5518   00236C  6E32               	movwf	___fldiv@b^0,c
  5519   00236E  0E00               	movlw	0
  5520   002370  6E33               	movwf	(___fldiv@b+1)^0,c
  5521   002372  0E00               	movlw	0
  5522   002374  6E34               	movwf	(___fldiv@b+2)^0,c
  5523   002376  0E00               	movlw	0
  5524   002378  6E35               	movwf	(___fldiv@b+3)^0,c
  5525   00237A                     l3716:
  5526   00237A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5527   00237C  0E00               	movlw	0
  5528   00237E  6E35               	movwf	(___fldiv@b+3)^0,c
  5529   002380  EFCA  F011         	goto	l3722
  5530   002384                     l3720:
  5531   002384  0E00               	movlw	0
  5532   002386  6E32               	movwf	___fldiv@b^0,c
  5533   002388  0E00               	movlw	0
  5534   00238A  6E33               	movwf	(___fldiv@b+1)^0,c
  5535   00238C  0E00               	movlw	0
  5536   00238E  6E34               	movwf	(___fldiv@b+2)^0,c
  5537   002390  0E00               	movlw	0
  5538   002392  6E35               	movwf	(___fldiv@b+3)^0,c
  5539   002394                     l3722:
  5540   002394  5039               	movf	(___fldiv@a+3)^0,w,c
  5541   002396  0B80               	andlw	128
  5542   002398  1A42               	xorwf	___fldiv@sign^0,f,c
  5543   00239A  5039               	movf	(___fldiv@a+3)^0,w,c
  5544   00239C  2439               	addwf	(___fldiv@a+3)^0,w,c
  5545   00239E  6E4A               	movwf	___fldiv@aexp^0,c
  5546   0023A0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  5547   0023A2  EFD5  F011         	goto	u3181
  5548   0023A6  EFD7  F011         	goto	u3180
  5549   0023AA                     u3181:
  5550   0023AA  EFD8  F011         	goto	l3730
  5551   0023AE                     u3180:
  5552   0023AE  804A               	bsf	___fldiv@aexp^0,0,c
  5553   0023B0                     l3730:
  5554   0023B0  504A               	movf	___fldiv@aexp^0,w,c
  5555   0023B2  B4D8               	btfsc	status,2,c
  5556   0023B4  EFDE  F011         	goto	u3191
  5557   0023B8  EFE0  F011         	goto	u3190
  5558   0023BC                     u3191:
  5559   0023BC  EFF5  F011         	goto	l3740
  5560   0023C0                     u3190:
  5561   0023C0  284A               	incf	___fldiv@aexp^0,w,c
  5562   0023C2  A4D8               	btfss	status,2,c
  5563   0023C4  EFE6  F011         	goto	u3201
  5564   0023C8  EFE8  F011         	goto	u3200
  5565   0023CC                     u3201:
  5566   0023CC  EFF0  F011         	goto	l3736
  5567   0023D0                     u3200:
  5568   0023D0  0E00               	movlw	0
  5569   0023D2  6E36               	movwf	___fldiv@a^0,c
  5570   0023D4  0E00               	movlw	0
  5571   0023D6  6E37               	movwf	(___fldiv@a+1)^0,c
  5572   0023D8  0E00               	movlw	0
  5573   0023DA  6E38               	movwf	(___fldiv@a+2)^0,c
  5574   0023DC  0E00               	movlw	0
  5575   0023DE  6E39               	movwf	(___fldiv@a+3)^0,c
  5576   0023E0                     l3736:
  5577   0023E0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  5578   0023E2  0E00               	movlw	0
  5579   0023E4  6E39               	movwf	(___fldiv@a+3)^0,c
  5580   0023E6  EFFD  F011         	goto	l3742
  5581   0023EA                     l3740:
  5582   0023EA  0E00               	movlw	0
  5583   0023EC  6E36               	movwf	___fldiv@a^0,c
  5584   0023EE  0E00               	movlw	0
  5585   0023F0  6E37               	movwf	(___fldiv@a+1)^0,c
  5586   0023F2  0E00               	movlw	0
  5587   0023F4  6E38               	movwf	(___fldiv@a+2)^0,c
  5588   0023F6  0E00               	movlw	0
  5589   0023F8  6E39               	movwf	(___fldiv@a+3)^0,c
  5590   0023FA                     l3742:
  5591   0023FA  5036               	movf	___fldiv@a^0,w,c
  5592   0023FC  1037               	iorwf	(___fldiv@a+1)^0,w,c
  5593   0023FE  1038               	iorwf	(___fldiv@a+2)^0,w,c
  5594   002400  1039               	iorwf	(___fldiv@a+3)^0,w,c
  5595   002402  A4D8               	btfss	status,2,c
  5596   002404  EF06  F012         	goto	u3211
  5597   002408  EF08  F012         	goto	u3210
  5598   00240C                     u3211:
  5599   00240C  EF20  F012         	goto	l3754
  5600   002410                     u3210:
  5601   002410  0E00               	movlw	0
  5602   002412  6E32               	movwf	___fldiv@b^0,c
  5603   002414  0E00               	movlw	0
  5604   002416  6E33               	movwf	(___fldiv@b+1)^0,c
  5605   002418  0E00               	movlw	0
  5606   00241A  6E34               	movwf	(___fldiv@b+2)^0,c
  5607   00241C  0E00               	movlw	0
  5608   00241E  6E35               	movwf	(___fldiv@b+3)^0,c
  5609   002420  0E80               	movlw	128
  5610   002422  1234               	iorwf	(___fldiv@b+2)^0,f,c
  5611   002424  0E7F               	movlw	127
  5612   002426  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5613   002428                     l3748:
  5614   002428  5042               	movf	___fldiv@sign^0,w,c
  5615   00242A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5616   00242C  C032  F032         	movff	___fldiv@b,?___fldiv
  5617   002430  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  5618   002434  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  5619   002438  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  5620   00243C  EF63  F013         	goto	l1215
  5621   002440                     l3754:
  5622   002440  5049               	movf	___fldiv@bexp^0,w,c
  5623   002442  A4D8               	btfss	status,2,c
  5624   002444  EF26  F012         	goto	u3221
  5625   002448  EF28  F012         	goto	u3220
  5626   00244C                     u3221:
  5627   00244C  EF32  F012         	goto	l3762
  5628   002450                     u3220:
  5629   002450  0E00               	movlw	0
  5630   002452  6E32               	movwf	?___fldiv^0,c
  5631   002454  0E00               	movlw	0
  5632   002456  6E33               	movwf	(?___fldiv+1)^0,c
  5633   002458  0E00               	movlw	0
  5634   00245A  6E34               	movwf	(?___fldiv+2)^0,c
  5635   00245C  0E00               	movlw	0
  5636   00245E  6E35               	movwf	(?___fldiv+3)^0,c
  5637   002460  EF63  F013         	goto	l1215
  5638   002464                     l3762:
  5639   002464  504A               	movf	___fldiv@aexp^0,w,c
  5640   002466  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  5641   00246A  6A3B               	clrf	(??___fldiv+1)^0,c
  5642   00246C  5E3A               	subwf	??___fldiv^0,f,c
  5643   00246E  0E00               	movlw	0
  5644   002470  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  5645   002472  0E7F               	movlw	127
  5646   002474  243A               	addwf	??___fldiv^0,w,c
  5647   002476  6E43               	movwf	___fldiv@new_exp^0,c
  5648   002478  0E00               	movlw	0
  5649   00247A  203B               	addwfc	(??___fldiv+1)^0,w,c
  5650   00247C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5651   00247E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  5652   002482  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  5653   002486  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  5654   00248A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  5655   00248E  0E00               	movlw	0
  5656   002490  6E32               	movwf	___fldiv@b^0,c
  5657   002492  0E00               	movlw	0
  5658   002494  6E33               	movwf	(___fldiv@b+1)^0,c
  5659   002496  0E00               	movlw	0
  5660   002498  6E34               	movwf	(___fldiv@b+2)^0,c
  5661   00249A  0E00               	movlw	0
  5662   00249C  6E35               	movwf	(___fldiv@b+3)^0,c
  5663   00249E  0E00               	movlw	0
  5664   0024A0  6E45               	movwf	___fldiv@grs^0,c
  5665   0024A2  0E00               	movlw	0
  5666   0024A4  6E46               	movwf	(___fldiv@grs+1)^0,c
  5667   0024A6  0E00               	movlw	0
  5668   0024A8  6E47               	movwf	(___fldiv@grs+2)^0,c
  5669   0024AA  0E00               	movlw	0
  5670   0024AC  6E48               	movwf	(___fldiv@grs+3)^0,c
  5671   0024AE  0E00               	movlw	0
  5672   0024B0  6E4A               	movwf	___fldiv@aexp^0,c
  5673   0024B2  EF93  F012         	goto	l1217
  5674   0024B6                     l3772:
  5675   0024B6  504A               	movf	___fldiv@aexp^0,w,c
  5676   0024B8  B4D8               	btfsc	status,2,c
  5677   0024BA  EF61  F012         	goto	u3231
  5678   0024BE  EF63  F012         	goto	u3230
  5679   0024C2                     u3231:
  5680   0024C2  EF7A  F012         	goto	l3780
  5681   0024C6                     u3230:
  5682   0024C6  90D8               	bcf	status,0,c
  5683   0024C8  363E               	rlcf	___fldiv@rem^0,f,c
  5684   0024CA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  5685   0024CC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  5686   0024CE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  5687   0024D0  90D8               	bcf	status,0,c
  5688   0024D2  3632               	rlcf	___fldiv@b^0,f,c
  5689   0024D4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5690   0024D6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5691   0024D8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5692   0024DA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5693   0024DC  EF72  F012         	goto	u3241
  5694   0024E0  EF74  F012         	goto	u3240
  5695   0024E4                     u3241:
  5696   0024E4  EF75  F012         	goto	l1220
  5697   0024E8                     u3240:
  5698   0024E8  8032               	bsf	___fldiv@b^0,0,c
  5699   0024EA                     l1220:
  5700   0024EA  90D8               	bcf	status,0,c
  5701   0024EC  3645               	rlcf	___fldiv@grs^0,f,c
  5702   0024EE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5703   0024F0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5704   0024F2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5705   0024F4                     l3780:
  5706   0024F4  5036               	movf	___fldiv@a^0,w,c
  5707   0024F6  5C3E               	subwf	___fldiv@rem^0,w,c
  5708   0024F8  5037               	movf	(___fldiv@a+1)^0,w,c
  5709   0024FA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  5710   0024FC  5038               	movf	(___fldiv@a+2)^0,w,c
  5711   0024FE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  5712   002500  5039               	movf	(___fldiv@a+3)^0,w,c
  5713   002502  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  5714   002504  A0D8               	btfss	status,0,c
  5715   002506  EF87  F012         	goto	u3251
  5716   00250A  EF89  F012         	goto	u3250
  5717   00250E                     u3251:
  5718   00250E  EF92  F012         	goto	l3786
  5719   002512                     u3250:
  5720   002512  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  5721   002514  5036               	movf	___fldiv@a^0,w,c
  5722   002516  5E3E               	subwf	___fldiv@rem^0,f,c
  5723   002518  5037               	movf	(___fldiv@a+1)^0,w,c
  5724   00251A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  5725   00251C  5038               	movf	(___fldiv@a+2)^0,w,c
  5726   00251E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  5727   002520  5039               	movf	(___fldiv@a+3)^0,w,c
  5728   002522  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  5729   002524                     l3786:
  5730   002524  2A4A               	incf	___fldiv@aexp^0,f,c
  5731   002526                     l1217:
  5732   002526  0E19               	movlw	25
  5733   002528  644A               	cpfsgt	___fldiv@aexp^0,c
  5734   00252A  EF99  F012         	goto	u3261
  5735   00252E  EF9B  F012         	goto	u3260
  5736   002532                     u3261:
  5737   002532  EF5B  F012         	goto	l3772
  5738   002536                     u3260:
  5739   002536  503E               	movf	___fldiv@rem^0,w,c
  5740   002538  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  5741   00253A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  5742   00253C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  5743   00253E  B4D8               	btfsc	status,2,c
  5744   002540  EFA4  F012         	goto	u3271
  5745   002544  EFA6  F012         	goto	u3270
  5746   002548                     u3271:
  5747   002548  EFBE  F012         	goto	l3798
  5748   00254C                     u3270:
  5749   00254C  8045               	bsf	___fldiv@grs^0,0,c
  5750   00254E  EFBE  F012         	goto	l3798
  5751   002552                     l3792:
  5752   002552  90D8               	bcf	status,0,c
  5753   002554  3632               	rlcf	___fldiv@b^0,f,c
  5754   002556  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5755   002558  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5756   00255A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5757   00255C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5758   00255E  EFB3  F012         	goto	u3281
  5759   002562  EFB5  F012         	goto	u3280
  5760   002566                     u3281:
  5761   002566  EFB6  F012         	goto	l1226
  5762   00256A                     u3280:
  5763   00256A  8032               	bsf	___fldiv@b^0,0,c
  5764   00256C                     l1226:
  5765   00256C  90D8               	bcf	status,0,c
  5766   00256E  3645               	rlcf	___fldiv@grs^0,f,c
  5767   002570  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5768   002572  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5769   002574  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5770   002576  0643               	decf	___fldiv@new_exp^0,f,c
  5771   002578  A0D8               	btfss	status,0,c
  5772   00257A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  5773   00257C                     l3798:
  5774   00257C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5775   00257E  EFC3  F012         	goto	u3291
  5776   002582  EFC5  F012         	goto	u3290
  5777   002586                     u3291:
  5778   002586  EFA9  F012         	goto	l3792
  5779   00258A                     u3290:
  5780   00258A  0E00               	movlw	0
  5781   00258C  6E4A               	movwf	___fldiv@aexp^0,c
  5782   00258E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5783   002590  EFCC  F012         	goto	u3301
  5784   002594  EFCE  F012         	goto	u3300
  5785   002598                     u3301:
  5786   002598  EFF2  F012         	goto	l1228
  5787   00259C                     u3300:
  5788   00259C  0EFF               	movlw	255
  5789   00259E  1445               	andwf	___fldiv@grs^0,w,c
  5790   0025A0  6E3A               	movwf	??___fldiv^0,c
  5791   0025A2  0EFF               	movlw	255
  5792   0025A4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  5793   0025A6  6E3B               	movwf	(??___fldiv+1)^0,c
  5794   0025A8  0EFF               	movlw	255
  5795   0025AA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  5796   0025AC  6E3C               	movwf	(??___fldiv+2)^0,c
  5797   0025AE  0E7F               	movlw	127
  5798   0025B0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  5799   0025B2  6E3D               	movwf	(??___fldiv+3)^0,c
  5800   0025B4  503A               	movf	??___fldiv^0,w,c
  5801   0025B6  103B               	iorwf	(??___fldiv+1)^0,w,c
  5802   0025B8  103C               	iorwf	(??___fldiv+2)^0,w,c
  5803   0025BA  103D               	iorwf	(??___fldiv+3)^0,w,c
  5804   0025BC  B4D8               	btfsc	status,2,c
  5805   0025BE  EFE3  F012         	goto	u3311
  5806   0025C2  EFE5  F012         	goto	u3310
  5807   0025C6                     u3311:
  5808   0025C6  EFE9  F012         	goto	l1229
  5809   0025CA                     u3310:
  5810   0025CA                     l3806:
  5811   0025CA  0E01               	movlw	1
  5812   0025CC  6E4A               	movwf	___fldiv@aexp^0,c
  5813   0025CE  EFF2  F012         	goto	l1228
  5814   0025D2                     l1229:
  5815   0025D2  A032               	btfss	___fldiv@b^0,0,c
  5816   0025D4  EFEE  F012         	goto	u3321
  5817   0025D8  EFF0  F012         	goto	u3320
  5818   0025DC                     u3321:
  5819   0025DC  EFF2  F012         	goto	l1228
  5820   0025E0                     u3320:
  5821   0025E0  EFE5  F012         	goto	l3806
  5822   0025E4                     l1228:
  5823   0025E4  504A               	movf	___fldiv@aexp^0,w,c
  5824   0025E6  B4D8               	btfsc	status,2,c
  5825   0025E8  EFF8  F012         	goto	u3331
  5826   0025EC  EFFA  F012         	goto	u3330
  5827   0025F0                     u3331:
  5828   0025F0  EF1E  F013         	goto	l3818
  5829   0025F4                     u3330:
  5830   0025F4  0E01               	movlw	1
  5831   0025F6  2632               	addwf	___fldiv@b^0,f,c
  5832   0025F8  0E00               	movlw	0
  5833   0025FA  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5834   0025FC  2234               	addwfc	(___fldiv@b+2)^0,f,c
  5835   0025FE  2235               	addwfc	(___fldiv@b+3)^0,f,c
  5836   002600  A035               	btfss	(___fldiv@b+3)^0,0,c
  5837   002602  EF05  F013         	goto	u3341
  5838   002606  EF07  F013         	goto	u3340
  5839   00260A                     u3341:
  5840   00260A  EF1E  F013         	goto	l3818
  5841   00260E                     u3340:
  5842   00260E  C032  F03A         	movff	___fldiv@b,??___fldiv
  5843   002612  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  5844   002616  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  5845   00261A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  5846   00261E  343D               	rlcf	(??___fldiv+3)^0,w,c
  5847   002620  323D               	rrcf	(??___fldiv+3)^0,f,c
  5848   002622  323C               	rrcf	(??___fldiv+2)^0,f,c
  5849   002624  323B               	rrcf	(??___fldiv+1)^0,f,c
  5850   002626  323A               	rrcf	??___fldiv^0,f,c
  5851   002628  C03A  F032         	movff	??___fldiv,___fldiv@b
  5852   00262C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  5853   002630  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  5854   002634  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  5855   002638  4A43               	infsnz	___fldiv@new_exp^0,f,c
  5856   00263A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  5857   00263C                     l3818:
  5858   00263C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5859   00263E  EF29  F013         	goto	u3351
  5860   002642  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5861   002644  E108               	bnz	u3350
  5862   002646  2843               	incf	___fldiv@new_exp^0,w,c
  5863   002648  A0D8               	btfss	status,0,c
  5864   00264A  EF29  F013         	goto	u3351
  5865   00264E  EF2B  F013         	goto	u3350
  5866   002652                     u3351:
  5867   002652  EF36  F013         	goto	l3822
  5868   002656                     u3350:
  5869   002656  0E00               	movlw	0
  5870   002658  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5871   00265A  6843               	setf	___fldiv@new_exp^0,c
  5872   00265C  0E00               	movlw	0
  5873   00265E  6E32               	movwf	___fldiv@b^0,c
  5874   002660  0E00               	movlw	0
  5875   002662  6E33               	movwf	(___fldiv@b+1)^0,c
  5876   002664  0E00               	movlw	0
  5877   002666  6E34               	movwf	(___fldiv@b+2)^0,c
  5878   002668  0E00               	movlw	0
  5879   00266A  6E35               	movwf	(___fldiv@b+3)^0,c
  5880   00266C                     l3822:
  5881   00266C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5882   00266E  EF43  F013         	goto	u3360
  5883   002672  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5884   002674  E106               	bnz	u3361
  5885   002676  0443               	decf	___fldiv@new_exp^0,w,c
  5886   002678  B0D8               	btfsc	status,0,c
  5887   00267A  EF41  F013         	goto	u3361
  5888   00267E  EF43  F013         	goto	u3360
  5889   002682                     u3361:
  5890   002682  EF51  F013         	goto	l3826
  5891   002686                     u3360:
  5892   002686  0E00               	movlw	0
  5893   002688  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5894   00268A  0E00               	movlw	0
  5895   00268C  6E43               	movwf	___fldiv@new_exp^0,c
  5896   00268E  0E00               	movlw	0
  5897   002690  6E32               	movwf	___fldiv@b^0,c
  5898   002692  0E00               	movlw	0
  5899   002694  6E33               	movwf	(___fldiv@b+1)^0,c
  5900   002696  0E00               	movlw	0
  5901   002698  6E34               	movwf	(___fldiv@b+2)^0,c
  5902   00269A  0E00               	movlw	0
  5903   00269C  6E35               	movwf	(___fldiv@b+3)^0,c
  5904   00269E  0E00               	movlw	0
  5905   0026A0  6E42               	movwf	___fldiv@sign^0,c
  5906   0026A2                     l3826:
  5907   0026A2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  5908   0026A6  A049               	btfss	___fldiv@bexp^0,0,c
  5909   0026A8  EF58  F013         	goto	u3371
  5910   0026AC  EF5A  F013         	goto	u3370
  5911   0026B0                     u3371:
  5912   0026B0  EF5D  F013         	goto	l3832
  5913   0026B4                     u3370:
  5914   0026B4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5915   0026B6  EF5E  F013         	goto	l3834
  5916   0026BA                     l3832:
  5917   0026BA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  5918   0026BC                     l3834:
  5919   0026BC  90D8               	bcf	status,0,c
  5920   0026BE  3049               	rrcf	___fldiv@bexp^0,w,c
  5921   0026C0  6E35               	movwf	(___fldiv@b+3)^0,c
  5922   0026C2  EF14  F012         	goto	l3748
  5923   0026C6                     l1215:
  5924   0026C6  0012               	return		;funcret
  5925   0026C8                     __end_of___fldiv:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _LED_init *****************
  5929 ;; Defined at:
  5930 ;;		line 4 in file "LED.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		None
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 1
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text26
  5959   0044C4                     __ptext26:
  5960                           	callstack 0
  5961   0044C4                     _LED_init:
  5962                           	callstack 29
  5963   0044C4                     
  5964                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5965   0044C4  9884               	bcf	132,4,c	;volatile
  5966                           
  5967                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5968   0044C6  9088               	bcf	136,0,c	;volatile
  5969                           
  5970                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5971   0044C8  9086               	bcf	134,0,c	;volatile
  5972                           
  5973                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5974   0044CA  987C               	bcf	124,4,c	;volatile
  5975                           
  5976                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5977   0044CC  9080               	bcf	128,0,c	;volatile
  5978                           
  5979                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5980   0044CE  907E               	bcf	126,0,c	;volatile
  5981   0044D0  0012               	return		;funcret
  5982   0044D2                     __end_of_LED_init:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _Interrupts_init *****************
  5986 ;; Defined at:
  5987 ;;		line 5 in file "interrupts.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		None
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;Total ram usage:        0 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 1
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text27
  6016   0044DE                     __ptext27:
  6017                           	callstack 0
  6018   0044DE                     _Interrupts_init:
  6019                           	callstack 29
  6020   0044DE                     
  6021                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  6022   0044DE  010E               	movlb	14	; () banked
  6023   0044E0  872D               	bsf	45,3,b	;volatile
  6024                           
  6025                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  6026   0044E2  8AF2               	bsf	242,5,c	;volatile
  6027                           
  6028                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  6029   0044E4  8CF2               	bsf	242,6,c	;volatile
  6030                           
  6031                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  6032   0044E6  8EF2               	bsf	242,7,c	;volatile
  6033   0044E8                     
  6034                           ; BSR set to: 14
  6035   0044E8  0012               	return		;funcret
  6036   0044EA                     __end_of_Interrupts_init:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _Colour2Action *****************
  6040 ;; Defined at:
  6041 ;;		line 105 in file "colorfunctions.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  cf              2   39[COMRAM] PTR struct RGBC_rel
  6044 ;;		 -> colorf(22), 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        4 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 7
  6063 ;; This function calls:
  6064 ;;		_Blue_T180
  6065 ;;		_Green_L90
  6066 ;;		_LightBlue_L135
  6067 ;;		_Orange_R135
  6068 ;;		_Pink_rev1_L90
  6069 ;;		_Red_R90
  6070 ;;		_Yellow_rev1_R90
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text28
  6077   002A86                     __ptext28:
  6078                           	callstack 0
  6079   002A86                     _Colour2Action:
  6080                           	callstack 23
  6081   002A86                     
  6082                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  6083   002A86  EE20 F014          	lfsr	2,20
  6084   002A8A  5028               	movf	Colour2Action@cf^0,w,c
  6085   002A8C  26D9               	addwf	fsr2l,f,c
  6086   002A8E  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6087   002A90  22DA               	addwfc	fsr2h,f,c
  6088   002A92  50DE               	movf	postinc2,w,c
  6089   002A94  10DE               	iorwf	postinc2,w,c
  6090   002A96  A4D8               	btfss	status,2,c
  6091   002A98  EF50  F015         	goto	u3901
  6092   002A9C  EF52  F015         	goto	u3900
  6093   002AA0                     u3901:
  6094   002AA0  EF5E  F015         	goto	l4230
  6095   002AA4                     u3900:
  6096   002AA4                     
  6097                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  6098   002AA4  0EEA               	movlw	low _motorL
  6099   002AA6  6E21               	movwf	Red_R90@mL^0,c
  6100   002AA8  0E00               	movlw	high _motorL
  6101   002AAA  6E22               	movwf	(Red_R90@mL+1)^0,c
  6102   002AAC  0EE1               	movlw	low _motorR
  6103   002AAE  6E23               	movwf	Red_R90@mR^0,c
  6104   002AB0  0E00               	movlw	high _motorR
  6105   002AB2  6E24               	movwf	(Red_R90@mR+1)^0,c
  6106   002AB4  EC56  F01E         	call	_Red_R90	;wreg free
  6107                           
  6108                           ;colorfunctions.c: 110:     }
  6109   002AB8  EF05  F016         	goto	l591
  6110   002ABC                     l4230:
  6111   002ABC  EE20 F014          	lfsr	2,20
  6112   002AC0  5028               	movf	Colour2Action@cf^0,w,c
  6113   002AC2  26D9               	addwf	fsr2l,f,c
  6114   002AC4  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6115   002AC6  22DA               	addwfc	fsr2h,f,c
  6116   002AC8  04DE               	decf	postinc2,w,c
  6117   002ACA  10DE               	iorwf	postinc2,w,c
  6118   002ACC  A4D8               	btfss	status,2,c
  6119   002ACE  EF6B  F015         	goto	u3911
  6120   002AD2  EF6D  F015         	goto	u3910
  6121   002AD6                     u3911:
  6122   002AD6  EF79  F015         	goto	l4234
  6123   002ADA                     u3910:
  6124   002ADA                     
  6125                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  6126   002ADA  0EEA               	movlw	low _motorL
  6127   002ADC  6E21               	movwf	Green_L90@mL^0,c
  6128   002ADE  0E00               	movlw	high _motorL
  6129   002AE0  6E22               	movwf	(Green_L90@mL+1)^0,c
  6130   002AE2  0EE1               	movlw	low _motorR
  6131   002AE4  6E23               	movwf	Green_L90@mR^0,c
  6132   002AE6  0E00               	movlw	high _motorR
  6133   002AE8  6E24               	movwf	(Green_L90@mR+1)^0,c
  6134   002AEA  ECD6  F01E         	call	_Green_L90	;wreg free
  6135                           
  6136                           ;colorfunctions.c: 114:     }
  6137   002AEE  EF05  F016         	goto	l591
  6138   002AF2                     l4234:
  6139   002AF2  EE20 F014          	lfsr	2,20
  6140   002AF6  5028               	movf	Colour2Action@cf^0,w,c
  6141   002AF8  26D9               	addwf	fsr2l,f,c
  6142   002AFA  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6143   002AFC  22DA               	addwfc	fsr2h,f,c
  6144   002AFE  0E02               	movlw	2
  6145   002B00  18DE               	xorwf	postinc2,w,c
  6146   002B02  10DE               	iorwf	postinc2,w,c
  6147   002B04  A4D8               	btfss	status,2,c
  6148   002B06  EF87  F015         	goto	u3921
  6149   002B0A  EF89  F015         	goto	u3920
  6150   002B0E                     u3921:
  6151   002B0E  EF95  F015         	goto	l4238
  6152   002B12                     u3920:
  6153   002B12                     
  6154                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  6155   002B12  0EEA               	movlw	low _motorL
  6156   002B14  6E24               	movwf	Blue_T180@mL^0,c
  6157   002B16  0E00               	movlw	high _motorL
  6158   002B18  6E25               	movwf	(Blue_T180@mL+1)^0,c
  6159   002B1A  0EE1               	movlw	low _motorR
  6160   002B1C  6E26               	movwf	Blue_T180@mR^0,c
  6161   002B1E  0E00               	movlw	high _motorR
  6162   002B20  6E27               	movwf	(Blue_T180@mR+1)^0,c
  6163   002B22  ECC3  F01F         	call	_Blue_T180	;wreg free
  6164                           
  6165                           ;colorfunctions.c: 118:     }
  6166   002B26  EF05  F016         	goto	l591
  6167   002B2A                     l4238:
  6168   002B2A  EE20 F014          	lfsr	2,20
  6169   002B2E  5028               	movf	Colour2Action@cf^0,w,c
  6170   002B30  26D9               	addwf	fsr2l,f,c
  6171   002B32  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6172   002B34  22DA               	addwfc	fsr2h,f,c
  6173   002B36  0E03               	movlw	3
  6174   002B38  18DE               	xorwf	postinc2,w,c
  6175   002B3A  10DE               	iorwf	postinc2,w,c
  6176   002B3C  A4D8               	btfss	status,2,c
  6177   002B3E  EFA3  F015         	goto	u3931
  6178   002B42  EFA5  F015         	goto	u3930
  6179   002B46                     u3931:
  6180   002B46  EFB1  F015         	goto	l4242
  6181   002B4A                     u3930:
  6182   002B4A                     
  6183                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  6184   002B4A  0EEA               	movlw	low _motorL
  6185   002B4C  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  6186   002B4E  0E00               	movlw	high _motorL
  6187   002B50  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  6188   002B52  0EE1               	movlw	low _motorR
  6189   002B54  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  6190   002B56  0E00               	movlw	high _motorR
  6191   002B58  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  6192   002B5A  EC8F  F019         	call	_Yellow_rev1_R90	;wreg free
  6193                           
  6194                           ;colorfunctions.c: 122:     }
  6195   002B5E  EF05  F016         	goto	l591
  6196   002B62                     l4242:
  6197   002B62  EE20 F014          	lfsr	2,20
  6198   002B66  5028               	movf	Colour2Action@cf^0,w,c
  6199   002B68  26D9               	addwf	fsr2l,f,c
  6200   002B6A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6201   002B6C  22DA               	addwfc	fsr2h,f,c
  6202   002B6E  0E04               	movlw	4
  6203   002B70  18DE               	xorwf	postinc2,w,c
  6204   002B72  10DE               	iorwf	postinc2,w,c
  6205   002B74  A4D8               	btfss	status,2,c
  6206   002B76  EFBF  F015         	goto	u3941
  6207   002B7A  EFC1  F015         	goto	u3940
  6208   002B7E                     u3941:
  6209   002B7E  EFCD  F015         	goto	l4246
  6210   002B82                     u3940:
  6211   002B82                     
  6212                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  6213   002B82  0EEA               	movlw	low _motorL
  6214   002B84  6E21               	movwf	Pink_rev1_L90@mL^0,c
  6215   002B86  0E00               	movlw	high _motorL
  6216   002B88  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  6217   002B8A  0EE1               	movlw	low _motorR
  6218   002B8C  6E23               	movwf	Pink_rev1_L90@mR^0,c
  6219   002B8E  0E00               	movlw	high _motorR
  6220   002B90  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  6221   002B92  EC07  F01A         	call	_Pink_rev1_L90	;wreg free
  6222                           
  6223                           ;colorfunctions.c: 126:     }
  6224   002B96  EF05  F016         	goto	l591
  6225   002B9A                     l4246:
  6226   002B9A  EE20 F014          	lfsr	2,20
  6227   002B9E  5028               	movf	Colour2Action@cf^0,w,c
  6228   002BA0  26D9               	addwf	fsr2l,f,c
  6229   002BA2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6230   002BA4  22DA               	addwfc	fsr2h,f,c
  6231   002BA6  0E05               	movlw	5
  6232   002BA8  18DE               	xorwf	postinc2,w,c
  6233   002BAA  10DE               	iorwf	postinc2,w,c
  6234   002BAC  A4D8               	btfss	status,2,c
  6235   002BAE  EFDB  F015         	goto	u3951
  6236   002BB2  EFDD  F015         	goto	u3950
  6237   002BB6                     u3951:
  6238   002BB6  EFE9  F015         	goto	l4250
  6239   002BBA                     u3950:
  6240   002BBA                     
  6241                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  6242   002BBA  0EEA               	movlw	low _motorL
  6243   002BBC  6E21               	movwf	Orange_R135@mL^0,c
  6244   002BBE  0E00               	movlw	high _motorL
  6245   002BC0  6E22               	movwf	(Orange_R135@mL+1)^0,c
  6246   002BC2  0EE1               	movlw	low _motorR
  6247   002BC4  6E23               	movwf	Orange_R135@mR^0,c
  6248   002BC6  0E00               	movlw	high _motorR
  6249   002BC8  6E24               	movwf	(Orange_R135@mR+1)^0,c
  6250   002BCA  EC51  F01B         	call	_Orange_R135	;wreg free
  6251                           
  6252                           ;colorfunctions.c: 130:     }
  6253   002BCE  EF05  F016         	goto	l591
  6254   002BD2                     l4250:
  6255   002BD2  EE20 F014          	lfsr	2,20
  6256   002BD6  5028               	movf	Colour2Action@cf^0,w,c
  6257   002BD8  26D9               	addwf	fsr2l,f,c
  6258   002BDA  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6259   002BDC  22DA               	addwfc	fsr2h,f,c
  6260   002BDE  0E06               	movlw	6
  6261   002BE0  18DE               	xorwf	postinc2,w,c
  6262   002BE2  10DE               	iorwf	postinc2,w,c
  6263   002BE4  A4D8               	btfss	status,2,c
  6264   002BE6  EFF7  F015         	goto	u3961
  6265   002BEA  EFF9  F015         	goto	u3960
  6266   002BEE                     u3961:
  6267   002BEE  EF05  F016         	goto	l584
  6268   002BF2                     u3960:
  6269   002BF2                     
  6270                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  6271   002BF2  0EEA               	movlw	low _motorL
  6272   002BF4  6E21               	movwf	LightBlue_L135@mL^0,c
  6273   002BF6  0E00               	movlw	high _motorL
  6274   002BF8  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  6275   002BFA  0EE1               	movlw	low _motorR
  6276   002BFC  6E23               	movwf	LightBlue_L135@mR^0,c
  6277   002BFE  0E00               	movlw	high _motorR
  6278   002C00  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  6279   002C02  EC04  F01C         	call	_LightBlue_L135	;wreg free
  6280   002C06  EF05  F016         	goto	l591
  6281   002C0A                     l584:
  6282   002C0A                     l591:
  6283   002C0A  0012               	return		;funcret
  6284   002C0C                     __end_of_Colour2Action:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _Yellow_rev1_R90 *****************
  6288 ;; Defined at:
  6289 ;;		line 269 in file "dc_motor.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6292 ;;		 -> motorL(9), 
  6293 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6294 ;;		 -> motorR(9), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        6 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 5
  6313 ;; This function calls:
  6314 ;;		_Left45
  6315 ;;		_Right45
  6316 ;;		_TimerReset
  6317 ;;		_fullSpeedAhead
  6318 ;;		_fullSpeedReverse
  6319 ;;		_reverseHalfSquare
  6320 ;;		_stop
  6321 ;; This function is called by:
  6322 ;;		_Colour2Action
  6323 ;;		_White
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text29
  6328   00331E                     __ptext29:
  6329                           	callstack 0
  6330   00331E                     _Yellow_rev1_R90:
  6331                           	callstack 24
  6332   00331E                     
  6333                           ;dc_motor.c: 269: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 270: {;dc_motor.c: 271:     if (ForwardFlag){
  6334   00331E  0100               	movlb	0	; () banked
  6335   003320  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6336   003322  B4D8               	btfsc	status,2,c
  6337   003324  EF96  F019         	goto	u3101
  6338   003328  EF98  F019         	goto	u3100
  6339   00332C                     u3101:
  6340   00332C  EFDA  F019         	goto	l3616
  6341   003330                     u3100:
  6342   003330                     
  6343                           ; BSR set to: 0
  6344                           ;dc_motor.c: 272:         reverseHalfSquare(mL,mR);
  6345   003330  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  6346   003334  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  6347   003338  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  6348   00333C  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  6349   003340  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  6350                           
  6351                           ;dc_motor.c: 274:         fullSpeedReverse(mL,mR);
  6352   003344  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  6353   003348  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  6354   00334C  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  6355   003350  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  6356   003354  EC16  F01F         	call	_fullSpeedReverse	;wreg free
  6357   003358                     
  6358                           ;dc_motor.c: 275:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6359   003358  0E39               	movlw	57
  6360   00335A  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6361   00335C  0ED2               	movlw	210
  6362   00335E  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6363   003360  0E4C               	movlw	76
  6364   003362                     u4157:
  6365   003362  2EE8               	decfsz	wreg,f,c
  6366   003364  D7FE               	bra	u4157
  6367   003366  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6368   003368  D7FC               	bra	u4157
  6369   00336A  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6370   00336C  D7FA               	bra	u4157
  6371   00336E  D000               	nop2	
  6372   003370                     
  6373                           ;dc_motor.c: 277:         Right45(mL,mR);
  6374   003370  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6375   003374  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6376   003378  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6377   00337C  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6378   003380  EC89  F01D         	call	_Right45	;wreg free
  6379   003384                     
  6380                           ;dc_motor.c: 278:         Right45(mL,mR);
  6381   003384  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6382   003388  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6383   00338C  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6384   003390  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6385   003394  EC89  F01D         	call	_Right45	;wreg free
  6386   003398                     
  6387                           ;dc_motor.c: 279:         TimerReset();
  6388   003398  EC84  F022         	call	_TimerReset	;wreg free
  6389   00339C                     l3614:
  6390                           
  6391                           ;dc_motor.c: 280:         stop(mL,mR);
  6392   00339C  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  6393   0033A0  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  6394   0033A4  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  6395   0033A8  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  6396   0033AC  EC58  F01C         	call	_stop	;wreg free
  6397                           
  6398                           ;dc_motor.c: 281:     }
  6399   0033B0  EF06  F01A         	goto	l286
  6400   0033B4                     l3616:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;dc_motor.c: 284:         Left45(mL,mR);
  6404   0033B4  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6405   0033B8  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6406   0033BC  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6407   0033C0  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6408   0033C4  ECCE  F01D         	call	_Left45	;wreg free
  6409                           
  6410                           ;dc_motor.c: 285:         Left45(mL,mR);
  6411   0033C8  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6412   0033CC  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6413   0033D0  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6414   0033D4  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6415   0033D8  ECCE  F01D         	call	_Left45	;wreg free
  6416                           
  6417                           ;dc_motor.c: 286:         fullSpeedAhead(mL,mR);
  6418   0033DC  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  6419   0033E0  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  6420   0033E4  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  6421   0033E8  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  6422   0033EC  EC96  F01E         	call	_fullSpeedAhead	;wreg free
  6423   0033F0                     
  6424                           ;dc_motor.c: 287:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6425   0033F0  0E39               	movlw	57
  6426   0033F2  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6427   0033F4  0ED2               	movlw	210
  6428   0033F6  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6429   0033F8  0E4C               	movlw	76
  6430   0033FA                     u4167:
  6431   0033FA  2EE8               	decfsz	wreg,f,c
  6432   0033FC  D7FE               	bra	u4167
  6433   0033FE  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6434   003400  D7FC               	bra	u4167
  6435   003402  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6436   003404  D7FA               	bra	u4167
  6437   003406  D000               	nop2	
  6438   003408  EFCE  F019         	goto	l3614
  6439   00340C                     l286:
  6440   00340C  0012               	return		;funcret
  6441   00340E                     __end_of_Yellow_rev1_R90:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function _Red_R90 *****************
  6445 ;; Defined at:
  6446 ;;		line 226 in file "dc_motor.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6449 ;;		 -> motorL(9), 
  6450 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6451 ;;		 -> motorR(9), 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6467 ;;Total ram usage:        4 bytes
  6468 ;; Hardware stack levels used: 1
  6469 ;; Hardware stack levels required when called: 5
  6470 ;; This function calls:
  6471 ;;		_Left45
  6472 ;;		_Right45
  6473 ;;		_TimerReset
  6474 ;;		_reverseHalfSquare
  6475 ;; This function is called by:
  6476 ;;		_Colour2Action
  6477 ;;		_White
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text30
  6482   003CAC                     __ptext30:
  6483                           	callstack 0
  6484   003CAC                     _Red_R90:
  6485                           	callstack 24
  6486   003CAC                     
  6487                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  6488   003CAC  0100               	movlb	0	; () banked
  6489   003CAE  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6490   003CB0  B4D8               	btfsc	status,2,c
  6491   003CB2  EF5D  F01E         	goto	u3071
  6492   003CB6  EF5F  F01E         	goto	u3070
  6493   003CBA                     u3071:
  6494   003CBA  EF81  F01E         	goto	l3584
  6495   003CBE                     u3070:
  6496   003CBE                     
  6497                           ; BSR set to: 0
  6498                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  6499   003CBE  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  6500   003CC2  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  6501   003CC6  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  6502   003CCA  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  6503   003CCE  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  6504                           
  6505                           ;dc_motor.c: 230:         Right45(mL,mR);
  6506   003CD2  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6507   003CD6  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6508   003CDA  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6509   003CDE  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6510   003CE2  EC89  F01D         	call	_Right45	;wreg free
  6511                           
  6512                           ;dc_motor.c: 231:         Right45(mL,mR);
  6513   003CE6  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6514   003CEA  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6515   003CEE  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6516   003CF2  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6517   003CF6  EC89  F01D         	call	_Right45	;wreg free
  6518   003CFA                     
  6519                           ;dc_motor.c: 232:         TimerReset();
  6520   003CFA  EC84  F022         	call	_TimerReset	;wreg free
  6521                           
  6522                           ;dc_motor.c: 233:     }
  6523   003CFE  EF95  F01E         	goto	l271
  6524   003D02                     l3584:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;dc_motor.c: 236:         Left45(mL,mR);
  6528   003D02  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6529   003D06  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6530   003D0A  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6531   003D0E  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6532   003D12  ECCE  F01D         	call	_Left45	;wreg free
  6533                           
  6534                           ;dc_motor.c: 237:         Left45(mL,mR);
  6535   003D16  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6536   003D1A  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6537   003D1E  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6538   003D22  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6539   003D26  ECCE  F01D         	call	_Left45	;wreg free
  6540   003D2A                     l271:
  6541   003D2A  0012               	return		;funcret
  6542   003D2C                     __end_of_Red_R90:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _Pink_rev1_L90 *****************
  6546 ;; Defined at:
  6547 ;;		line 291 in file "dc_motor.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6550 ;;		 -> motorL(9), 
  6551 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6552 ;;		 -> motorR(9), 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;		None
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      void 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;Total ram usage:        6 bytes
  6569 ;; Hardware stack levels used: 1
  6570 ;; Hardware stack levels required when called: 5
  6571 ;; This function calls:
  6572 ;;		_Left45
  6573 ;;		_Right45
  6574 ;;		_TimerReset
  6575 ;;		_fullSpeedAhead
  6576 ;;		_fullSpeedReverse
  6577 ;;		_reverseHalfSquare
  6578 ;;		_stop
  6579 ;; This function is called by:
  6580 ;;		_Colour2Action
  6581 ;;		_White
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text31
  6586   00340E                     __ptext31:
  6587                           	callstack 0
  6588   00340E                     _Pink_rev1_L90:
  6589                           	callstack 24
  6590   00340E                     
  6591                           ;dc_motor.c: 291: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 292: {;dc_motor.c: 293:     if (ForwardFlag){
  6592   00340E  0100               	movlb	0	; () banked
  6593   003410  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6594   003412  B4D8               	btfsc	status,2,c
  6595   003414  EF0E  F01A         	goto	u3111
  6596   003418  EF10  F01A         	goto	u3110
  6597   00341C                     u3111:
  6598   00341C  EF48  F01A         	goto	l3634
  6599   003420                     u3110:
  6600   003420                     
  6601                           ; BSR set to: 0
  6602                           ;dc_motor.c: 294:         reverseHalfSquare(mL,mR);
  6603   003420  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  6604   003424  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  6605   003428  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  6606   00342C  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  6607   003430  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  6608                           
  6609                           ;dc_motor.c: 296:         fullSpeedReverse(mL,mR);
  6610   003434  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  6611   003438  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  6612   00343C  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  6613   003440  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  6614   003444  EC16  F01F         	call	_fullSpeedReverse	;wreg free
  6615   003448                     
  6616                           ;dc_motor.c: 297:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6617   003448  0E39               	movlw	57
  6618   00344A  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6619   00344C  0ED2               	movlw	210
  6620   00344E  6E25               	movwf	??_Pink_rev1_L90^0,c
  6621   003450  0E4C               	movlw	76
  6622   003452                     u4177:
  6623   003452  2EE8               	decfsz	wreg,f,c
  6624   003454  D7FE               	bra	u4177
  6625   003456  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6626   003458  D7FC               	bra	u4177
  6627   00345A  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6628   00345C  D7FA               	bra	u4177
  6629   00345E  D000               	nop2	
  6630   003460                     
  6631                           ;dc_motor.c: 298:         Left45(mL,mR);
  6632   003460  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6633   003464  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6634   003468  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6635   00346C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6636   003470  ECCE  F01D         	call	_Left45	;wreg free
  6637   003474                     
  6638                           ;dc_motor.c: 299:         Left45(mL,mR);
  6639   003474  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6640   003478  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6641   00347C  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6642   003480  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6643   003484  ECCE  F01D         	call	_Left45	;wreg free
  6644   003488                     
  6645                           ;dc_motor.c: 300:         TimerReset();
  6646   003488  EC84  F022         	call	_TimerReset	;wreg free
  6647                           
  6648                           ;dc_motor.c: 301:     }
  6649   00348C  EF7C  F01A         	goto	l291
  6650   003490                     l3634:
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;dc_motor.c: 304:         Right45(mL,mR);
  6654   003490  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6655   003494  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6656   003498  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6657   00349C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6658   0034A0  EC89  F01D         	call	_Right45	;wreg free
  6659                           
  6660                           ;dc_motor.c: 305:         Right45(mL,mR);
  6661   0034A4  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6662   0034A8  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6663   0034AC  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6664   0034B0  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6665   0034B4  EC89  F01D         	call	_Right45	;wreg free
  6666                           
  6667                           ;dc_motor.c: 306:         fullSpeedAhead(mL,mR);
  6668   0034B8  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  6669   0034BC  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  6670   0034C0  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  6671   0034C4  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  6672   0034C8  EC96  F01E         	call	_fullSpeedAhead	;wreg free
  6673   0034CC                     
  6674                           ;dc_motor.c: 307:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6675   0034CC  0E39               	movlw	57
  6676   0034CE  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6677   0034D0  0ED2               	movlw	210
  6678   0034D2  6E25               	movwf	??_Pink_rev1_L90^0,c
  6679   0034D4  0E4C               	movlw	76
  6680   0034D6                     u4187:
  6681   0034D6  2EE8               	decfsz	wreg,f,c
  6682   0034D8  D7FE               	bra	u4187
  6683   0034DA  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6684   0034DC  D7FC               	bra	u4187
  6685   0034DE  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6686   0034E0  D7FA               	bra	u4187
  6687   0034E2  D000               	nop2	
  6688   0034E4                     
  6689                           ;dc_motor.c: 308:         stop(mL,mR);
  6690   0034E4  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  6691   0034E8  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  6692   0034EC  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  6693   0034F0  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  6694   0034F4  EC58  F01C         	call	_stop	;wreg free
  6695   0034F8                     l291:
  6696   0034F8  0012               	return		;funcret
  6697   0034FA                     __end_of_Pink_rev1_L90:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function _fullSpeedAhead *****************
  6701 ;; Defined at:
  6702 ;;		line 149 in file "dc_motor.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6705 ;;		 -> motorL(9), 
  6706 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6707 ;;		 -> motorR(9), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  i               2   24[COMRAM] unsigned int 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;Total ram usage:        7 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 3
  6726 ;; This function calls:
  6727 ;;		_setMotorPWM
  6728 ;; This function is called by:
  6729 ;;		_main
  6730 ;;		_Yellow_rev1_R90
  6731 ;;		_Pink_rev1_L90
  6732 ;;		_White
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text32
  6737   003D2C                     __ptext32:
  6738                           	callstack 0
  6739   003D2C                     _fullSpeedAhead:
  6740                           	callstack 27
  6741   003D2C                     
  6742                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6743   003D2C  EE20 F001          	lfsr	2,1
  6744   003D30  5014               	movf	fullSpeedAhead@mL^0,w,c
  6745   003D32  26D9               	addwf	fsr2l,f,c
  6746   003D34  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6747   003D36  22DA               	addwfc	fsr2h,f,c
  6748   003D38  0E01               	movlw	1
  6749   003D3A  6EDF               	movwf	indf2,c
  6750                           
  6751                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6752   003D3C  EE20 F001          	lfsr	2,1
  6753   003D40  5016               	movf	fullSpeedAhead@mR^0,w,c
  6754   003D42  26D9               	addwf	fsr2l,f,c
  6755   003D44  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6756   003D46  22DA               	addwfc	fsr2h,f,c
  6757   003D48  0E01               	movlw	1
  6758   003D4A  6EDF               	movwf	indf2,c
  6759   003D4C                     
  6760                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6761   003D4C  0E00               	movlw	0
  6762   003D4E  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6763   003D50  0E00               	movlw	0
  6764   003D52  6E19               	movwf	fullSpeedAhead@i^0,c
  6765   003D54                     l3218:
  6766                           
  6767                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6768   003D54  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6769   003D58  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6770   003D5C  2ADF               	incf	indf2,f,c
  6771                           
  6772                           ;dc_motor.c: 157:         (mR->power)++;
  6773   003D5E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6774   003D62  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6775   003D66  2ADF               	incf	indf2,f,c
  6776   003D68                     
  6777                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6778   003D68  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6779   003D6C  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6780   003D70  EC06  F016         	call	_setMotorPWM	;wreg free
  6781   003D74                     
  6782                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6783   003D74  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6784   003D78  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6785   003D7C  EC06  F016         	call	_setMotorPWM	;wreg free
  6786   003D80                     
  6787                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6788   003D80  0E09               	movlw	9
  6789   003D82  6E18               	movwf	??_fullSpeedAhead^0,c
  6790   003D84  0E4E               	movlw	78
  6791   003D86                     u4197:
  6792   003D86  2EE8               	decfsz	wreg,f,c
  6793   003D88  D7FE               	bra	u4197
  6794   003D8A  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6795   003D8C  D7FC               	bra	u4197
  6796   003D8E  D000               	nop2	
  6797   003D90                     
  6798                           ;dc_motor.c: 161:     }
  6799   003D90  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6800   003D92  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6801   003D94  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6802   003D96  E109               	bnz	u2440
  6803   003D98  0E32               	movlw	50
  6804   003D9A  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6805   003D9C  A0D8               	btfss	status,0,c
  6806   003D9E  EFD3  F01E         	goto	u2441
  6807   003DA2  EFD5  F01E         	goto	u2440
  6808   003DA6                     u2441:
  6809   003DA6  EFAA  F01E         	goto	l3218
  6810   003DAA                     u2440:
  6811   003DAA  0012               	return		;funcret
  6812   003DAC                     __end_of_fullSpeedAhead:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _Orange_R135 *****************
  6816 ;; Defined at:
  6817 ;;		line 311 in file "dc_motor.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6820 ;;		 -> motorL(9), 
  6821 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6822 ;;		 -> motorR(9), 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;Total ram usage:        4 bytes
  6839 ;; Hardware stack levels used: 1
  6840 ;; Hardware stack levels required when called: 5
  6841 ;; This function calls:
  6842 ;;		_Left45
  6843 ;;		_Right45
  6844 ;;		_TimerReset
  6845 ;;		_reverseHalfSquare
  6846 ;;		_stop
  6847 ;; This function is called by:
  6848 ;;		_Colour2Action
  6849 ;;		_White
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text33
  6854   0036A2                     __ptext33:
  6855                           	callstack 0
  6856   0036A2                     _Orange_R135:
  6857                           	callstack 24
  6858   0036A2                     
  6859                           ;dc_motor.c: 311: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           312: {;dc_motor.c: 313:     if (ForwardFlag){
  6860   0036A2  0100               	movlb	0	; () banked
  6861   0036A4  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6862   0036A6  B4D8               	btfsc	status,2,c
  6863   0036A8  EF58  F01B         	goto	u3121
  6864   0036AC  EF5A  F01B         	goto	u3120
  6865   0036B0                     u3121:
  6866   0036B0  EF86  F01B         	goto	l3646
  6867   0036B4                     u3120:
  6868   0036B4                     
  6869                           ; BSR set to: 0
  6870                           ;dc_motor.c: 314:         reverseHalfSquare(mL,mR);
  6871   0036B4  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  6872   0036B8  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  6873   0036BC  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  6874   0036C0  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  6875   0036C4  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  6876                           
  6877                           ;dc_motor.c: 316:         Right45(mL,mR);
  6878   0036C8  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6879   0036CC  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6880   0036D0  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6881   0036D4  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6882   0036D8  EC89  F01D         	call	_Right45	;wreg free
  6883                           
  6884                           ;dc_motor.c: 317:         Right45(mL,mR);
  6885   0036DC  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6886   0036E0  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6887   0036E4  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6888   0036E8  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6889   0036EC  EC89  F01D         	call	_Right45	;wreg free
  6890                           
  6891                           ;dc_motor.c: 318:         Right45(mL,mR);
  6892   0036F0  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6893   0036F4  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6894   0036F8  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6895   0036FC  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6896   003700  EC89  F01D         	call	_Right45	;wreg free
  6897   003704                     
  6898                           ;dc_motor.c: 319:         TimerReset();
  6899   003704  EC84  F022         	call	_TimerReset	;wreg free
  6900                           
  6901                           ;dc_motor.c: 321:     }
  6902   003708  EFAE  F01B         	goto	l296
  6903   00370C                     l3646:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;dc_motor.c: 324:         Left45(mL,mR);
  6907   00370C  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6908   003710  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6909   003714  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6910   003718  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6911   00371C  ECCE  F01D         	call	_Left45	;wreg free
  6912                           
  6913                           ;dc_motor.c: 325:         Left45(mL,mR);
  6914   003720  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6915   003724  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6916   003728  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6917   00372C  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6918   003730  ECCE  F01D         	call	_Left45	;wreg free
  6919                           
  6920                           ;dc_motor.c: 326:         Left45(mL,mR);
  6921   003734  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6922   003738  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6923   00373C  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6924   003740  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6925   003744  ECCE  F01D         	call	_Left45	;wreg free
  6926                           
  6927                           ;dc_motor.c: 327:         stop(mL,mR);
  6928   003748  C021  F014         	movff	Orange_R135@mL,stop@mL
  6929   00374C  C022  F015         	movff	Orange_R135@mL+1,stop@mL+1
  6930   003750  C023  F016         	movff	Orange_R135@mR,stop@mR
  6931   003754  C024  F017         	movff	Orange_R135@mR+1,stop@mR+1
  6932   003758  EC58  F01C         	call	_stop	;wreg free
  6933   00375C                     l296:
  6934   00375C  0012               	return		;funcret
  6935   00375E                     __end_of_Orange_R135:
  6936                           	callstack 0
  6937                           
  6938 ;; *************** function _LightBlue_L135 *****************
  6939 ;; Defined at:
  6940 ;;		line 330 in file "dc_motor.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6943 ;;		 -> motorL(9), 
  6944 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6945 ;;		 -> motorR(9), 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;Total ram usage:        4 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 5
  6964 ;; This function calls:
  6965 ;;		_Left45
  6966 ;;		_Right45
  6967 ;;		_TimerReset
  6968 ;;		_reverseHalfSquare
  6969 ;; This function is called by:
  6970 ;;		_Colour2Action
  6971 ;;		_White
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text34
  6976   003808                     __ptext34:
  6977                           	callstack 0
  6978   003808                     _LightBlue_L135:
  6979                           	callstack 24
  6980   003808                     
  6981                           ;dc_motor.c: 330: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 331: {;dc_motor.c: 333:      if (ForwardFlag){
  6982   003808  0100               	movlb	0	; () banked
  6983   00380A  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  6984   00380C  B4D8               	btfsc	status,2,c
  6985   00380E  EF0B  F01C         	goto	u3131
  6986   003812  EF0D  F01C         	goto	u3130
  6987   003816                     u3131:
  6988   003816  EF39  F01C         	goto	l3654
  6989   00381A                     u3130:
  6990   00381A                     
  6991                           ; BSR set to: 0
  6992                           ;dc_motor.c: 334:         reverseHalfSquare(mL,mR);
  6993   00381A  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  6994   00381E  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  6995   003822  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  6996   003826  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  6997   00382A  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  6998                           
  6999                           ;dc_motor.c: 336:         Left45(mL,mR);
  7000   00382E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7001   003832  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7002   003836  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7003   00383A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7004   00383E  ECCE  F01D         	call	_Left45	;wreg free
  7005                           
  7006                           ;dc_motor.c: 337:         Left45(mL,mR);
  7007   003842  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7008   003846  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7009   00384A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7010   00384E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7011   003852  ECCE  F01D         	call	_Left45	;wreg free
  7012                           
  7013                           ;dc_motor.c: 338:         Left45(mL,mR);
  7014   003856  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7015   00385A  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7016   00385E  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7017   003862  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7018   003866  ECCE  F01D         	call	_Left45	;wreg free
  7019   00386A                     
  7020                           ;dc_motor.c: 339:         TimerReset();
  7021   00386A  EC84  F022         	call	_TimerReset	;wreg free
  7022                           
  7023                           ;dc_motor.c: 340:     }
  7024   00386E  EF57  F01C         	goto	l301
  7025   003872                     l3654:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;dc_motor.c: 343:         Right45(mL,mR);
  7029   003872  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7030   003876  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7031   00387A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7032   00387E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7033   003882  EC89  F01D         	call	_Right45	;wreg free
  7034                           
  7035                           ;dc_motor.c: 344:         Right45(mL,mR);
  7036   003886  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7037   00388A  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7038   00388E  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7039   003892  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7040   003896  EC89  F01D         	call	_Right45	;wreg free
  7041                           
  7042                           ;dc_motor.c: 345:         Right45(mL,mR);
  7043   00389A  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7044   00389E  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7045   0038A2  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7046   0038A6  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7047   0038AA  EC89  F01D         	call	_Right45	;wreg free
  7048   0038AE                     l301:
  7049   0038AE  0012               	return		;funcret
  7050   0038B0                     __end_of_LightBlue_L135:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _Green_L90 *****************
  7054 ;; Defined at:
  7055 ;;		line 241 in file "dc_motor.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7058 ;;		 -> motorL(9), 
  7059 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7060 ;;		 -> motorR(9), 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;Total ram usage:        4 bytes
  7077 ;; Hardware stack levels used: 1
  7078 ;; Hardware stack levels required when called: 5
  7079 ;; This function calls:
  7080 ;;		_Left45
  7081 ;;		_Right45
  7082 ;;		_TimerReset
  7083 ;;		_reverseHalfSquare
  7084 ;; This function is called by:
  7085 ;;		_Colour2Action
  7086 ;;		_White
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text35
  7091   003DAC                     __ptext35:
  7092                           	callstack 0
  7093   003DAC                     _Green_L90:
  7094                           	callstack 24
  7095   003DAC                     
  7096                           ;dc_motor.c: 241: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          42: {;dc_motor.c: 243:     if (ForwardFlag){
  7097   003DAC  0100               	movlb	0	; () banked
  7098   003DAE  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7099   003DB0  B4D8               	btfsc	status,2,c
  7100   003DB2  EFDD  F01E         	goto	u3081
  7101   003DB6  EFDF  F01E         	goto	u3080
  7102   003DBA                     u3081:
  7103   003DBA  EF01  F01F         	goto	l3592
  7104   003DBE                     u3080:
  7105   003DBE                     
  7106                           ; BSR set to: 0
  7107                           ;dc_motor.c: 244:         reverseHalfSquare(mL,mR);
  7108   003DBE  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  7109   003DC2  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  7110   003DC6  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  7111   003DCA  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  7112   003DCE  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  7113                           
  7114                           ;dc_motor.c: 246:         Left45(mL,mR);
  7115   003DD2  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7116   003DD6  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7117   003DDA  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7118   003DDE  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7119   003DE2  ECCE  F01D         	call	_Left45	;wreg free
  7120                           
  7121                           ;dc_motor.c: 247:         Left45(mL,mR);
  7122   003DE6  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7123   003DEA  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7124   003DEE  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7125   003DF2  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7126   003DF6  ECCE  F01D         	call	_Left45	;wreg free
  7127   003DFA                     
  7128                           ;dc_motor.c: 248:         TimerReset();
  7129   003DFA  EC84  F022         	call	_TimerReset	;wreg free
  7130                           
  7131                           ;dc_motor.c: 249:     }
  7132   003DFE  EF15  F01F         	goto	l276
  7133   003E02                     l3592:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;dc_motor.c: 252:         Right45(mL,mR);
  7137   003E02  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7138   003E06  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7139   003E0A  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7140   003E0E  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7141   003E12  EC89  F01D         	call	_Right45	;wreg free
  7142                           
  7143                           ;dc_motor.c: 253:         Right45(mL,mR);
  7144   003E16  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7145   003E1A  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7146   003E1E  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7147   003E22  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7148   003E26  EC89  F01D         	call	_Right45	;wreg free
  7149   003E2A                     l276:
  7150   003E2A  0012               	return		;funcret
  7151   003E2C                     __end_of_Green_L90:
  7152                           	callstack 0
  7153                           
  7154 ;; *************** function _Right45 *****************
  7155 ;; Defined at:
  7156 ;;		line 193 in file "dc_motor.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7159 ;;		 -> motorL(9), 
  7160 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7161 ;;		 -> motorR(9), 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;Total ram usage:        6 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; Hardware stack levels required when called: 4
  7180 ;; This function calls:
  7181 ;;		_stop
  7182 ;;		_turnRight
  7183 ;; This function is called by:
  7184 ;;		_Red_R90
  7185 ;;		_Green_L90
  7186 ;;		_Yellow_rev1_R90
  7187 ;;		_Pink_rev1_L90
  7188 ;;		_Orange_R135
  7189 ;;		_LightBlue_L135
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text36
  7194   003B12                     __ptext36:
  7195                           	callstack 0
  7196   003B12                     _Right45:
  7197                           	callstack 24
  7198   003B12                     
  7199                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7200   003B12  8080               	bsf	128,0,c	;volatile
  7201   003B14                     
  7202                           ;dc_motor.c: 197:     stop(mL,mR);
  7203   003B14  C01A  F014         	movff	Right45@mL,stop@mL
  7204   003B18  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7205   003B1C  C01C  F016         	movff	Right45@mR,stop@mR
  7206   003B20  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7207   003B24  EC58  F01C         	call	_stop	;wreg free
  7208   003B28                     
  7209                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7210   003B28  0E05               	movlw	5
  7211   003B2A  6E1F               	movwf	(??_Right45+1)^0,c
  7212   003B2C  0E0F               	movlw	15
  7213   003B2E  6E1E               	movwf	??_Right45^0,c
  7214   003B30  0EF1               	movlw	241
  7215   003B32                     u4207:
  7216   003B32  2EE8               	decfsz	wreg,f,c
  7217   003B34  D7FE               	bra	u4207
  7218   003B36  2E1E               	decfsz	??_Right45^0,f,c
  7219   003B38  D7FC               	bra	u4207
  7220   003B3A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7221   003B3C  D7FA               	bra	u4207
  7222   003B3E  F000               	nop	
  7223   003B40                     
  7224                           ;dc_motor.c: 199:     turnRight(mL,mR);
  7225   003B40  C01A  F014         	movff	Right45@mL,turnRight@mL
  7226   003B44  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  7227   003B48  C01C  F016         	movff	Right45@mR,turnRight@mR
  7228   003B4C  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  7229   003B50  ECAB  F01C         	call	_turnRight	;wreg free
  7230                           
  7231                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  7232   003B54  0E0E               	movlw	14
  7233   003B56  6E1F               	movwf	(??_Right45+1)^0,c
  7234   003B58  0ECD               	movlw	205
  7235   003B5A  6E1E               	movwf	??_Right45^0,c
  7236   003B5C  0E6C               	movlw	108
  7237   003B5E                     u4217:
  7238   003B5E  2EE8               	decfsz	wreg,f,c
  7239   003B60  D7FE               	bra	u4217
  7240   003B62  2E1E               	decfsz	??_Right45^0,f,c
  7241   003B64  D7FC               	bra	u4217
  7242   003B66  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7243   003B68  D7FA               	bra	u4217
  7244   003B6A  D000               	nop2	
  7245   003B6C                     
  7246                           ;dc_motor.c: 201:     stop(mL,mR);
  7247   003B6C  C01A  F014         	movff	Right45@mL,stop@mL
  7248   003B70  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7249   003B74  C01C  F016         	movff	Right45@mR,stop@mR
  7250   003B78  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7251   003B7C  EC58  F01C         	call	_stop	;wreg free
  7252   003B80                     
  7253                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7254   003B80  0E05               	movlw	5
  7255   003B82  6E1F               	movwf	(??_Right45+1)^0,c
  7256   003B84  0E0F               	movlw	15
  7257   003B86  6E1E               	movwf	??_Right45^0,c
  7258   003B88  0EF1               	movlw	241
  7259   003B8A                     u4227:
  7260   003B8A  2EE8               	decfsz	wreg,f,c
  7261   003B8C  D7FE               	bra	u4227
  7262   003B8E  2E1E               	decfsz	??_Right45^0,f,c
  7263   003B90  D7FC               	bra	u4227
  7264   003B92  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7265   003B94  D7FA               	bra	u4227
  7266   003B96  F000               	nop	
  7267   003B98                     
  7268                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  7269   003B98  9080               	bcf	128,0,c	;volatile
  7270   003B9A  0012               	return		;funcret
  7271   003B9C                     __end_of_Right45:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _turnRight *****************
  7275 ;; Defined at:
  7276 ;;		line 132 in file "dc_motor.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7279 ;;		 -> motorL(9), 
  7280 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7281 ;;		 -> motorR(9), 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  i               2   23[COMRAM] unsigned int 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;Total ram usage:        6 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 3
  7300 ;; This function calls:
  7301 ;;		_setMotorPWM
  7302 ;; This function is called by:
  7303 ;;		_Right45
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text37
  7308   003956                     __ptext37:
  7309                           	callstack 0
  7310   003956                     _turnRight:
  7311                           	callstack 24
  7312   003956                     
  7313                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 0;
  7314   003956  EE20 F001          	lfsr	2,1
  7315   00395A  5014               	movf	turnRight@mL^0,w,c
  7316   00395C  26D9               	addwf	fsr2l,f,c
  7317   00395E  5015               	movf	(turnRight@mL+1)^0,w,c
  7318   003960  22DA               	addwfc	fsr2h,f,c
  7319   003962  0E00               	movlw	0
  7320   003964  6EDF               	movwf	indf2,c
  7321                           
  7322                           ;dc_motor.c: 135:     (mR->direction) = 1;
  7323   003966  EE20 F001          	lfsr	2,1
  7324   00396A  5016               	movf	turnRight@mR^0,w,c
  7325   00396C  26D9               	addwf	fsr2l,f,c
  7326   00396E  5017               	movf	(turnRight@mR+1)^0,w,c
  7327   003970  22DA               	addwfc	fsr2h,f,c
  7328   003972  0E01               	movlw	1
  7329   003974  6EDF               	movwf	indf2,c
  7330   003976                     
  7331                           ;dc_motor.c: 136:     setMotorPWM(mL);
  7332   003976  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7333   00397A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7334   00397E  EC06  F016         	call	_setMotorPWM	;wreg free
  7335   003982                     
  7336                           ;dc_motor.c: 137:     setMotorPWM(mR);
  7337   003982  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7338   003986  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7339   00398A  EC06  F016         	call	_setMotorPWM	;wreg free
  7340   00398E                     
  7341                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  7342   00398E  0E00               	movlw	0
  7343   003990  6E19               	movwf	(turnRight@i+1)^0,c
  7344   003992  0E00               	movlw	0
  7345   003994  6E18               	movwf	turnRight@i^0,c
  7346   003996                     l3100:
  7347                           
  7348                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  7349   003996  C014  FFD9         	movff	turnRight@mL,fsr2l
  7350   00399A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7351   00399E  2ADF               	incf	indf2,f,c
  7352                           
  7353                           ;dc_motor.c: 141:         mR->power++;
  7354   0039A0  C016  FFD9         	movff	turnRight@mR,fsr2l
  7355   0039A4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7356   0039A8  2ADF               	incf	indf2,f,c
  7357   0039AA                     
  7358                           ;dc_motor.c: 142:         setMotorPWM(mL);
  7359   0039AA  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7360   0039AE  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7361   0039B2  EC06  F016         	call	_setMotorPWM	;wreg free
  7362   0039B6                     
  7363                           ;dc_motor.c: 143:         setMotorPWM(mR);
  7364   0039B6  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7365   0039BA  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7366   0039BE  EC06  F016         	call	_setMotorPWM	;wreg free
  7367   0039C2                     
  7368                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7369   0039C2  0EE4               	movlw	228
  7370   0039C4                     u4237:
  7371   0039C4  D000               	nop2	
  7372   0039C6  D000               	nop2	
  7373   0039C8  2EE8               	decfsz	wreg,f,c
  7374   0039CA  D7FC               	bra	u4237
  7375   0039CC  D000               	nop2	
  7376   0039CE  D000               	nop2	
  7377   0039D0                     
  7378                           ;dc_motor.c: 145:     }
  7379   0039D0  4A18               	infsnz	turnRight@i^0,f,c
  7380   0039D2  2A19               	incf	(turnRight@i+1)^0,f,c
  7381   0039D4  5019               	movf	(turnRight@i+1)^0,w,c
  7382   0039D6  E109               	bnz	u2360
  7383   0039D8  0E32               	movlw	50
  7384   0039DA  5C18               	subwf	turnRight@i^0,w,c
  7385   0039DC  A0D8               	btfss	status,0,c
  7386   0039DE  EFF3  F01C         	goto	u2361
  7387   0039E2  EFF5  F01C         	goto	u2360
  7388   0039E6                     u2361:
  7389   0039E6  EFCB  F01C         	goto	l3100
  7390   0039EA                     u2360:
  7391   0039EA  0012               	return		;funcret
  7392   0039EC                     __end_of_turnRight:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _Blue_T180 *****************
  7396 ;; Defined at:
  7397 ;;		line 257 in file "dc_motor.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  7400 ;;		 -> motorL(9), 
  7401 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7402 ;;		 -> motorR(9), 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;Total ram usage:        4 bytes
  7419 ;; Hardware stack levels used: 1
  7420 ;; Hardware stack levels required when called: 6
  7421 ;; This function calls:
  7422 ;;		_TimerReset
  7423 ;;		_reverseHalfSquare
  7424 ;;		_rotate180left
  7425 ;; This function is called by:
  7426 ;;		_Colour2Action
  7427 ;;		_White
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text38
  7432   003F86                     __ptext38:
  7433                           	callstack 0
  7434   003F86                     _Blue_T180:
  7435                           	callstack 23
  7436   003F86                     
  7437                           ;dc_motor.c: 257: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          58: {;dc_motor.c: 259:     if (ForwardFlag){
  7438   003F86  0100               	movlb	0	; () banked
  7439   003F88  51FB               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7440   003F8A  B4D8               	btfsc	status,2,c
  7441   003F8C  EFCA  F01F         	goto	u3091
  7442   003F90  EFCC  F01F         	goto	u3090
  7443   003F94                     u3091:
  7444   003F94  EFE4  F01F         	goto	l3600
  7445   003F98                     u3090:
  7446   003F98                     
  7447                           ; BSR set to: 0
  7448                           ;dc_motor.c: 260:     reverseHalfSquare(mL,mR);
  7449   003F98  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  7450   003F9C  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  7451   003FA0  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  7452   003FA4  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  7453   003FA8  EC13  F01E         	call	_reverseHalfSquare	;wreg free
  7454                           
  7455                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  7456   003FAC  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7457   003FB0  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7458   003FB4  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7459   003FB8  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7460   003FBC  ECEF  F01F         	call	_rotate180left	;wreg free
  7461   003FC0                     
  7462                           ;dc_motor.c: 263:     TimerReset();
  7463   003FC0  EC84  F022         	call	_TimerReset	;wreg free
  7464                           
  7465                           ;dc_motor.c: 264:     }else{
  7466   003FC4  EFEE  F01F         	goto	l281
  7467   003FC8                     l3600:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;dc_motor.c: 265:     rotate180left(mL,mR);
  7471   003FC8  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7472   003FCC  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7473   003FD0  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7474   003FD4  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7475   003FD8  ECEF  F01F         	call	_rotate180left	;wreg free
  7476   003FDC                     l281:
  7477   003FDC  0012               	return		;funcret
  7478   003FDE                     __end_of_Blue_T180:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function _rotate180left *****************
  7482 ;; Defined at:
  7483 ;;		line 207 in file "dc_motor.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7486 ;;		 -> motorL(9), 
  7487 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7488 ;;		 -> motorR(9), 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;Total ram usage:        4 bytes
  7505 ;; Hardware stack levels used: 1
  7506 ;; Hardware stack levels required when called: 5
  7507 ;; This function calls:
  7508 ;;		_Left45
  7509 ;; This function is called by:
  7510 ;;		_Blue_T180
  7511 ;;		_White
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text39
  7516   003FDE                     __ptext39:
  7517                           	callstack 0
  7518   003FDE                     _rotate180left:
  7519                           	callstack 23
  7520   003FDE                     
  7521                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  7522   003FDE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7523   003FE2  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7524   003FE6  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7525   003FEA  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7526   003FEE  ECCE  F01D         	call	_Left45	;wreg free
  7527                           
  7528                           ;dc_motor.c: 211:     Left45(mL,mR);
  7529   003FF2  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7530   003FF6  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7531   003FFA  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7532   003FFE  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7533   004002  ECCE  F01D         	call	_Left45	;wreg free
  7534                           
  7535                           ;dc_motor.c: 212:     Left45(mL,mR);
  7536   004006  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7537   00400A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7538   00400E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7539   004012  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7540   004016  ECCE  F01D         	call	_Left45	;wreg free
  7541                           
  7542                           ;dc_motor.c: 213:     Left45(mL,mR);
  7543   00401A  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7544   00401E  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7545   004022  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7546   004026  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7547   00402A  ECCE  F01D         	call	_Left45	;wreg free
  7548   00402E  0012               	return		;funcret
  7549   004030                     __end_of_rotate180left:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _Left45 *****************
  7553 ;; Defined at:
  7554 ;;		line 179 in file "dc_motor.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7557 ;;		 -> motorL(9), 
  7558 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7559 ;;		 -> motorR(9), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;Total ram usage:        6 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 4
  7578 ;; This function calls:
  7579 ;;		_stop
  7580 ;;		_turnLeft
  7581 ;; This function is called by:
  7582 ;;		_rotate180left
  7583 ;;		_Red_R90
  7584 ;;		_Green_L90
  7585 ;;		_Yellow_rev1_R90
  7586 ;;		_Pink_rev1_L90
  7587 ;;		_Orange_R135
  7588 ;;		_LightBlue_L135
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text40
  7593   003B9C                     __ptext40:
  7594                           	callstack 0
  7595   003B9C                     _Left45:
  7596                           	callstack 24
  7597   003B9C                     
  7598                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  7599   003B9C  807E               	bsf	126,0,c	;volatile
  7600   003B9E                     
  7601                           ;dc_motor.c: 183:     stop(mL,mR);
  7602   003B9E  C01A  F014         	movff	Left45@mL,stop@mL
  7603   003BA2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7604   003BA6  C01C  F016         	movff	Left45@mR,stop@mR
  7605   003BAA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7606   003BAE  EC58  F01C         	call	_stop	;wreg free
  7607   003BB2                     
  7608                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7609   003BB2  0E05               	movlw	5
  7610   003BB4  6E1F               	movwf	(??_Left45+1)^0,c
  7611   003BB6  0E0F               	movlw	15
  7612   003BB8  6E1E               	movwf	??_Left45^0,c
  7613   003BBA  0EF1               	movlw	241
  7614   003BBC                     u4247:
  7615   003BBC  2EE8               	decfsz	wreg,f,c
  7616   003BBE  D7FE               	bra	u4247
  7617   003BC0  2E1E               	decfsz	??_Left45^0,f,c
  7618   003BC2  D7FC               	bra	u4247
  7619   003BC4  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7620   003BC6  D7FA               	bra	u4247
  7621   003BC8  F000               	nop	
  7622   003BCA                     
  7623                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  7624   003BCA  C01A  F014         	movff	Left45@mL,turnLeft@mL
  7625   003BCE  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  7626   003BD2  C01C  F016         	movff	Left45@mR,turnLeft@mR
  7627   003BD6  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  7628   003BDA  ECF6  F01C         	call	_turnLeft	;wreg free
  7629                           
  7630                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  7631   003BDE  0E0E               	movlw	14
  7632   003BE0  6E1F               	movwf	(??_Left45+1)^0,c
  7633   003BE2  0ECD               	movlw	205
  7634   003BE4  6E1E               	movwf	??_Left45^0,c
  7635   003BE6  0E6C               	movlw	108
  7636   003BE8                     u4257:
  7637   003BE8  2EE8               	decfsz	wreg,f,c
  7638   003BEA  D7FE               	bra	u4257
  7639   003BEC  2E1E               	decfsz	??_Left45^0,f,c
  7640   003BEE  D7FC               	bra	u4257
  7641   003BF0  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7642   003BF2  D7FA               	bra	u4257
  7643   003BF4  D000               	nop2	
  7644   003BF6                     
  7645                           ;dc_motor.c: 187:     stop(mL,mR);
  7646   003BF6  C01A  F014         	movff	Left45@mL,stop@mL
  7647   003BFA  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7648   003BFE  C01C  F016         	movff	Left45@mR,stop@mR
  7649   003C02  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7650   003C06  EC58  F01C         	call	_stop	;wreg free
  7651   003C0A                     
  7652                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7653   003C0A  0E05               	movlw	5
  7654   003C0C  6E1F               	movwf	(??_Left45+1)^0,c
  7655   003C0E  0E0F               	movlw	15
  7656   003C10  6E1E               	movwf	??_Left45^0,c
  7657   003C12  0EF1               	movlw	241
  7658   003C14                     u4267:
  7659   003C14  2EE8               	decfsz	wreg,f,c
  7660   003C16  D7FE               	bra	u4267
  7661   003C18  2E1E               	decfsz	??_Left45^0,f,c
  7662   003C1A  D7FC               	bra	u4267
  7663   003C1C  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7664   003C1E  D7FA               	bra	u4267
  7665   003C20  F000               	nop	
  7666   003C22                     
  7667                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  7668   003C22  907E               	bcf	126,0,c	;volatile
  7669   003C24  0012               	return		;funcret
  7670   003C26                     __end_of_Left45:
  7671                           	callstack 0
  7672                           
  7673 ;; *************** function _turnLeft *****************
  7674 ;; Defined at:
  7675 ;;		line 113 in file "dc_motor.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7678 ;;		 -> motorL(9), 
  7679 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7680 ;;		 -> motorR(9), 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  i               2   23[COMRAM] unsigned int 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;Total ram usage:        6 bytes
  7697 ;; Hardware stack levels used: 1
  7698 ;; Hardware stack levels required when called: 3
  7699 ;; This function calls:
  7700 ;;		_setMotorPWM
  7701 ;; This function is called by:
  7702 ;;		_Left45
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text41
  7707   0039EC                     __ptext41:
  7708                           	callstack 0
  7709   0039EC                     _turnLeft:
  7710                           	callstack 24
  7711   0039EC                     
  7712                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 1;
  7713   0039EC  EE20 F001          	lfsr	2,1
  7714   0039F0  5014               	movf	turnLeft@mL^0,w,c
  7715   0039F2  26D9               	addwf	fsr2l,f,c
  7716   0039F4  5015               	movf	(turnLeft@mL+1)^0,w,c
  7717   0039F6  22DA               	addwfc	fsr2h,f,c
  7718   0039F8  0E01               	movlw	1
  7719   0039FA  6EDF               	movwf	indf2,c
  7720                           
  7721                           ;dc_motor.c: 117:     (mR->direction) = 0;
  7722   0039FC  EE20 F001          	lfsr	2,1
  7723   003A00  5016               	movf	turnLeft@mR^0,w,c
  7724   003A02  26D9               	addwf	fsr2l,f,c
  7725   003A04  5017               	movf	(turnLeft@mR+1)^0,w,c
  7726   003A06  22DA               	addwfc	fsr2h,f,c
  7727   003A08  0E00               	movlw	0
  7728   003A0A  6EDF               	movwf	indf2,c
  7729   003A0C                     
  7730                           ;dc_motor.c: 118:     setMotorPWM(mL);
  7731   003A0C  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7732   003A10  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7733   003A14  EC06  F016         	call	_setMotorPWM	;wreg free
  7734   003A18                     
  7735                           ;dc_motor.c: 119:     setMotorPWM(mR);
  7736   003A18  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7737   003A1C  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7738   003A20  EC06  F016         	call	_setMotorPWM	;wreg free
  7739   003A24                     
  7740                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  7741   003A24  0E00               	movlw	0
  7742   003A26  6E19               	movwf	(turnLeft@i+1)^0,c
  7743   003A28  0E00               	movlw	0
  7744   003A2A  6E18               	movwf	turnLeft@i^0,c
  7745   003A2C                     l3020:
  7746                           
  7747                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  7748   003A2C  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7749   003A30  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7750   003A34  2ADF               	incf	indf2,f,c
  7751                           
  7752                           ;dc_motor.c: 123:         mR->power++;
  7753   003A36  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7754   003A3A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7755   003A3E  2ADF               	incf	indf2,f,c
  7756   003A40                     
  7757                           ;dc_motor.c: 124:         setMotorPWM(mL);
  7758   003A40  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7759   003A44  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7760   003A48  EC06  F016         	call	_setMotorPWM	;wreg free
  7761   003A4C                     
  7762                           ;dc_motor.c: 125:         setMotorPWM(mR);
  7763   003A4C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7764   003A50  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7765   003A54  EC06  F016         	call	_setMotorPWM	;wreg free
  7766   003A58                     
  7767                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7768   003A58  0EE4               	movlw	228
  7769   003A5A                     u4277:
  7770   003A5A  D000               	nop2	
  7771   003A5C  D000               	nop2	
  7772   003A5E  2EE8               	decfsz	wreg,f,c
  7773   003A60  D7FC               	bra	u4277
  7774   003A62  D000               	nop2	
  7775   003A64  D000               	nop2	
  7776   003A66                     
  7777                           ;dc_motor.c: 127:     }
  7778   003A66  4A18               	infsnz	turnLeft@i^0,f,c
  7779   003A68  2A19               	incf	(turnLeft@i+1)^0,f,c
  7780   003A6A  5019               	movf	(turnLeft@i+1)^0,w,c
  7781   003A6C  E109               	bnz	u2210
  7782   003A6E  0E32               	movlw	50
  7783   003A70  5C18               	subwf	turnLeft@i^0,w,c
  7784   003A72  A0D8               	btfss	status,0,c
  7785   003A74  EF3E  F01D         	goto	u2211
  7786   003A78  EF40  F01D         	goto	u2210
  7787   003A7C                     u2211:
  7788   003A7C  EF16  F01D         	goto	l3020
  7789   003A80                     u2210:
  7790   003A80  0012               	return		;funcret
  7791   003A82                     __end_of_turnLeft:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function _reverseHalfSquare *****************
  7795 ;; Defined at:
  7796 ;;		line 216 in file "dc_motor.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  7799 ;;		 -> motorL(9), 
  7800 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  7801 ;;		 -> motorR(9), 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;Total ram usage:        6 bytes
  7818 ;; Hardware stack levels used: 1
  7819 ;; Hardware stack levels required when called: 4
  7820 ;; This function calls:
  7821 ;;		_fullSpeedReverse
  7822 ;;		_stop
  7823 ;; This function is called by:
  7824 ;;		_Red_R90
  7825 ;;		_Green_L90
  7826 ;;		_Blue_T180
  7827 ;;		_Yellow_rev1_R90
  7828 ;;		_Pink_rev1_L90
  7829 ;;		_Orange_R135
  7830 ;;		_LightBlue_L135
  7831 ;;		_White
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text42
  7836   003C26                     __ptext42:
  7837                           	callstack 0
  7838   003C26                     _reverseHalfSquare:
  7839                           	callstack 24
  7840   003C26                     
  7841                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  7842   003C26  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7843   003C2A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7844   003C2E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7845   003C32  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7846   003C36  EC58  F01C         	call	_stop	;wreg free
  7847   003C3A                     
  7848                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7849   003C3A  0E09               	movlw	9
  7850   003C3C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7851   003C3E  0E1E               	movlw	30
  7852   003C40  6E1F               	movwf	??_reverseHalfSquare^0,c
  7853   003C42  0EE4               	movlw	228
  7854   003C44                     u4287:
  7855   003C44  2EE8               	decfsz	wreg,f,c
  7856   003C46  D7FE               	bra	u4287
  7857   003C48  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7858   003C4A  D7FC               	bra	u4287
  7859   003C4C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7860   003C4E  D7FA               	bra	u4287
  7861   003C50  D000               	nop2	
  7862   003C52                     
  7863                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  7864   003C52  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  7865   003C56  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  7866   003C5A  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  7867   003C5E  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  7868   003C62  EC16  F01F         	call	_fullSpeedReverse	;wreg free
  7869                           
  7870                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  7871   003C66  0E1D               	movlw	29
  7872   003C68  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7873   003C6A  0E69               	movlw	105
  7874   003C6C  6E1F               	movwf	??_reverseHalfSquare^0,c
  7875   003C6E  0EA5               	movlw	165
  7876   003C70                     u4297:
  7877   003C70  2EE8               	decfsz	wreg,f,c
  7878   003C72  D7FE               	bra	u4297
  7879   003C74  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7880   003C76  D7FC               	bra	u4297
  7881   003C78  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7882   003C7A  D7FA               	bra	u4297
  7883   003C7C  F000               	nop	
  7884   003C7E                     
  7885                           ;dc_motor.c: 222:     stop(mL,mR);
  7886   003C7E  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7887   003C82  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7888   003C86  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7889   003C8A  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7890   003C8E  EC58  F01C         	call	_stop	;wreg free
  7891   003C92                     
  7892                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7893   003C92  0E09               	movlw	9
  7894   003C94  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7895   003C96  0E1E               	movlw	30
  7896   003C98  6E1F               	movwf	??_reverseHalfSquare^0,c
  7897   003C9A  0EE4               	movlw	228
  7898   003C9C                     u4307:
  7899   003C9C  2EE8               	decfsz	wreg,f,c
  7900   003C9E  D7FE               	bra	u4307
  7901   003CA0  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7902   003CA2  D7FC               	bra	u4307
  7903   003CA4  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7904   003CA6  D7FA               	bra	u4307
  7905   003CA8  D000               	nop2	
  7906   003CAA  0012               	return		;funcret
  7907   003CAC                     __end_of_reverseHalfSquare:
  7908                           	callstack 0
  7909                           
  7910 ;; *************** function _stop *****************
  7911 ;; Defined at:
  7912 ;;		line 93 in file "dc_motor.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7915 ;;		 -> motorL(9), 
  7916 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7917 ;;		 -> motorR(9), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;Total ram usage:        5 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 3
  7936 ;; This function calls:
  7937 ;;		_setMotorPWM
  7938 ;; This function is called by:
  7939 ;;		_main
  7940 ;;		_Left45
  7941 ;;		_Right45
  7942 ;;		_reverseHalfSquare
  7943 ;;		_Yellow_rev1_R90
  7944 ;;		_Pink_rev1_L90
  7945 ;;		_Orange_R135
  7946 ;;		_White
  7947 ;;		_maxTimeReturn
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           	psect	text43
  7952   0038B0                     __ptext43:
  7953                           	callstack 0
  7954   0038B0                     _stop:
  7955                           	callstack 27
  7956   0038B0                     
  7957                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  7958   0038B0  887C               	bsf	124,4,c	;volatile
  7959                           
  7960                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7961   0038B2  EF91  F01C         	goto	l3004
  7962   0038B6                     l2990:
  7963                           
  7964                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  7965   0038B6  C014  FFD9         	movff	stop@mL,fsr2l
  7966   0038BA  C015  FFDA         	movff	stop@mL+1,fsr2h
  7967   0038BE  50DF               	movf	indf2,w,c
  7968   0038C0  B4D8               	btfsc	status,2,c
  7969   0038C2  EF65  F01C         	goto	u2171
  7970   0038C6  EF67  F01C         	goto	u2170
  7971   0038CA                     u2171:
  7972   0038CA  EF6C  F01C         	goto	l2994
  7973   0038CE                     u2170:
  7974   0038CE                     
  7975                           ;dc_motor.c: 100:             mL->power--;
  7976   0038CE  C014  FFD9         	movff	stop@mL,fsr2l
  7977   0038D2  C015  FFDA         	movff	stop@mL+1,fsr2h
  7978   0038D6  06DF               	decf	indf2,f,c
  7979   0038D8                     l2994:
  7980                           
  7981                           ;dc_motor.c: 102:         if ((mR->power)>0){
  7982   0038D8  C016  FFD9         	movff	stop@mR,fsr2l
  7983   0038DC  C017  FFDA         	movff	stop@mR+1,fsr2h
  7984   0038E0  50DF               	movf	indf2,w,c
  7985   0038E2  B4D8               	btfsc	status,2,c
  7986   0038E4  EF76  F01C         	goto	u2181
  7987   0038E8  EF78  F01C         	goto	u2180
  7988   0038EC                     u2181:
  7989   0038EC  EF7D  F01C         	goto	l2998
  7990   0038F0                     u2180:
  7991   0038F0                     
  7992                           ;dc_motor.c: 103:             mR->power--;
  7993   0038F0  C016  FFD9         	movff	stop@mR,fsr2l
  7994   0038F4  C017  FFDA         	movff	stop@mR+1,fsr2h
  7995   0038F8  06DF               	decf	indf2,f,c
  7996   0038FA                     l2998:
  7997                           
  7998                           ;dc_motor.c: 105:         setMotorPWM(mL);
  7999   0038FA  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8000   0038FE  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8001   003902  EC06  F016         	call	_setMotorPWM	;wreg free
  8002   003906                     
  8003                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8004   003906  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8005   00390A  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8006   00390E  EC06  F016         	call	_setMotorPWM	;wreg free
  8007   003912                     
  8008                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8009   003912  0E09               	movlw	9
  8010   003914  6E18               	movwf	??_stop^0,c
  8011   003916  0E4E               	movlw	78
  8012   003918                     u4317:
  8013   003918  2EE8               	decfsz	wreg,f,c
  8014   00391A  D7FE               	bra	u4317
  8015   00391C  2E18               	decfsz	??_stop^0,f,c
  8016   00391E  D7FC               	bra	u4317
  8017   003920  D000               	nop2	
  8018   003922                     l3004:
  8019                           
  8020                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8021   003922  C014  FFD9         	movff	stop@mL,fsr2l
  8022   003926  C015  FFDA         	movff	stop@mL+1,fsr2h
  8023   00392A  50DF               	movf	indf2,w,c
  8024   00392C  B4D8               	btfsc	status,2,c
  8025   00392E  EF9B  F01C         	goto	u2191
  8026   003932  EF9D  F01C         	goto	u2190
  8027   003936                     u2191:
  8028   003936  EFA9  F01C         	goto	l233
  8029   00393A                     u2190:
  8030   00393A  C016  FFD9         	movff	stop@mR,fsr2l
  8031   00393E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8032   003942  50DF               	movf	indf2,w,c
  8033   003944  A4D8               	btfss	status,2,c
  8034   003946  EFA7  F01C         	goto	u2201
  8035   00394A  EFA9  F01C         	goto	u2200
  8036   00394E                     u2201:
  8037   00394E  EF5B  F01C         	goto	l2990
  8038   003952                     u2200:
  8039   003952                     l233:
  8040                           
  8041                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8042   003952  987C               	bcf	124,4,c	;volatile
  8043   003954  0012               	return		;funcret
  8044   003956                     __end_of_stop:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function _fullSpeedReverse *****************
  8048 ;; Defined at:
  8049 ;;		line 163 in file "dc_motor.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8052 ;;		 -> motorL(9), 
  8053 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8054 ;;		 -> motorR(9), 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  i               2   24[COMRAM] unsigned int 
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;Total ram usage:        7 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 3
  8073 ;; This function calls:
  8074 ;;		_setMotorPWM
  8075 ;; This function is called by:
  8076 ;;		_reverseHalfSquare
  8077 ;;		_Yellow_rev1_R90
  8078 ;;		_Pink_rev1_L90
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text44
  8083   003E2C                     __ptext44:
  8084                           	callstack 0
  8085   003E2C                     _fullSpeedReverse:
  8086                           	callstack 24
  8087   003E2C                     
  8088                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  8089   003E2C  EE20 F001          	lfsr	2,1
  8090   003E30  5014               	movf	fullSpeedReverse@mL^0,w,c
  8091   003E32  26D9               	addwf	fsr2l,f,c
  8092   003E34  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  8093   003E36  22DA               	addwfc	fsr2h,f,c
  8094   003E38  0E00               	movlw	0
  8095   003E3A  6EDF               	movwf	indf2,c
  8096                           
  8097                           ;dc_motor.c: 166:  (mR->direction) = 0;
  8098   003E3C  EE20 F001          	lfsr	2,1
  8099   003E40  5016               	movf	fullSpeedReverse@mR^0,w,c
  8100   003E42  26D9               	addwf	fsr2l,f,c
  8101   003E44  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  8102   003E46  22DA               	addwfc	fsr2h,f,c
  8103   003E48  0E00               	movlw	0
  8104   003E4A  6EDF               	movwf	indf2,c
  8105   003E4C                     
  8106                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  8107   003E4C  0E00               	movlw	0
  8108   003E4E  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  8109   003E50  0E00               	movlw	0
  8110   003E52  6E19               	movwf	fullSpeedReverse@i^0,c
  8111   003E54                     l3120:
  8112                           
  8113                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  8114   003E54  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  8115   003E58  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  8116   003E5C  2ADF               	incf	indf2,f,c
  8117                           
  8118                           ;dc_motor.c: 171:         (mR->power)++;
  8119   003E5E  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  8120   003E62  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  8121   003E66  2ADF               	incf	indf2,f,c
  8122   003E68                     
  8123                           ;dc_motor.c: 172:         setMotorPWM(mL);
  8124   003E68  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  8125   003E6C  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  8126   003E70  EC06  F016         	call	_setMotorPWM	;wreg free
  8127   003E74                     
  8128                           ;dc_motor.c: 173:         setMotorPWM(mR);
  8129   003E74  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  8130   003E78  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  8131   003E7C  EC06  F016         	call	_setMotorPWM	;wreg free
  8132   003E80                     
  8133                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8134   003E80  0E09               	movlw	9
  8135   003E82  6E18               	movwf	??_fullSpeedReverse^0,c
  8136   003E84  0E4E               	movlw	78
  8137   003E86                     u4327:
  8138   003E86  2EE8               	decfsz	wreg,f,c
  8139   003E88  D7FE               	bra	u4327
  8140   003E8A  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  8141   003E8C  D7FC               	bra	u4327
  8142   003E8E  D000               	nop2	
  8143   003E90                     
  8144                           ;dc_motor.c: 175:     }
  8145   003E90  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  8146   003E92  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  8147   003E94  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  8148   003E96  E109               	bnz	u2370
  8149   003E98  0E32               	movlw	50
  8150   003E9A  5C19               	subwf	fullSpeedReverse@i^0,w,c
  8151   003E9C  A0D8               	btfss	status,0,c
  8152   003E9E  EF53  F01F         	goto	u2371
  8153   003EA2  EF55  F01F         	goto	u2370
  8154   003EA6                     u2371:
  8155   003EA6  EF2A  F01F         	goto	l3120
  8156   003EAA                     u2370:
  8157   003EAA  0012               	return		;funcret
  8158   003EAC                     __end_of_fullSpeedReverse:
  8159                           	callstack 0
  8160                           
  8161 ;; *************** function _setMotorPWM *****************
  8162 ;; Defined at:
  8163 ;;		line 70 in file "dc_motor.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8166 ;;		 -> motorR(9), motorL(9), 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  negDuty         1   18[COMRAM] unsigned char 
  8169 ;;  posDuty         1   17[COMRAM] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;Total ram usage:        6 bytes
  8184 ;; Hardware stack levels used: 1
  8185 ;; Hardware stack levels required when called: 2
  8186 ;; This function calls:
  8187 ;;		___lwdiv
  8188 ;;		___wmul
  8189 ;; This function is called by:
  8190 ;;		_stop
  8191 ;;		_turnLeft
  8192 ;;		_turnRight
  8193 ;;		_fullSpeedAhead
  8194 ;;		_fullSpeedReverse
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text45
  8199   002C0C                     __ptext45:
  8200                           	callstack 0
  8201   002C0C                     _setMotorPWM:
  8202                           	callstack 27
  8203   002C0C                     
  8204                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8205   002C0C  EE20 F002          	lfsr	2,2
  8206   002C10  500E               	movf	setMotorPWM@m^0,w,c
  8207   002C12  26D9               	addwf	fsr2l,f,c
  8208   002C14  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8209   002C16  22DA               	addwfc	fsr2h,f,c
  8210   002C18  50DF               	movf	indf2,w,c
  8211   002C1A  B4D8               	btfsc	status,2,c
  8212   002C1C  EF12  F016         	goto	u2091
  8213   002C20  EF14  F016         	goto	u2090
  8214   002C24                     u2091:
  8215   002C24  EF48  F016         	goto	l2954
  8216   002C28                     u2090:
  8217   002C28                     
  8218                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  8219   002C28  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8220   002C2C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8221   002C30  50DF               	movf	indf2,w,c
  8222   002C32  6E10               	movwf	??_setMotorPWM^0,c
  8223   002C34  5010               	movf	??_setMotorPWM^0,w,c
  8224   002C36  6E01               	movwf	___wmul@multiplier^0,c
  8225   002C38  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8226   002C3A  EE20 F003          	lfsr	2,3
  8227   002C3E  500E               	movf	setMotorPWM@m^0,w,c
  8228   002C40  26D9               	addwf	fsr2l,f,c
  8229   002C42  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8230   002C44  22DA               	addwfc	fsr2h,f,c
  8231   002C46  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8232   002C4A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8233   002C4E  EC10  F022         	call	___wmul	;wreg free
  8234   002C52  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8235   002C56  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8236   002C5A  0E00               	movlw	0
  8237   002C5C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8238   002C5E  0E64               	movlw	100
  8239   002C60  6E09               	movwf	___lwdiv@divisor^0,c
  8240   002C62  EC56  F01F         	call	___lwdiv	;wreg free
  8241   002C66  EE20 F003          	lfsr	2,3
  8242   002C6A  500E               	movf	setMotorPWM@m^0,w,c
  8243   002C6C  26D9               	addwf	fsr2l,f,c
  8244   002C6E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8245   002C70  22DA               	addwfc	fsr2h,f,c
  8246   002C72  50DF               	movf	indf2,w,c
  8247   002C74  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8248   002C76  5007               	movf	?___lwdiv^0,w,c
  8249   002C78  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8250   002C7A  6E12               	movwf	setMotorPWM@posDuty^0,c
  8251   002C7C                     
  8252                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  8253   002C7C  EE20 F003          	lfsr	2,3
  8254   002C80  500E               	movf	setMotorPWM@m^0,w,c
  8255   002C82  26D9               	addwf	fsr2l,f,c
  8256   002C84  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8257   002C86  22DA               	addwfc	fsr2h,f,c
  8258   002C88  50DF               	movf	indf2,w,c
  8259   002C8A  6E13               	movwf	setMotorPWM@negDuty^0,c
  8260                           
  8261                           ;dc_motor.c: 77:     }
  8262   002C8C  EF6B  F016         	goto	l2958
  8263   002C90                     l2954:
  8264                           
  8265                           ;dc_motor.c: 79:         posDuty=0;
  8266   002C90  0E00               	movlw	0
  8267   002C92  6E12               	movwf	setMotorPWM@posDuty^0,c
  8268   002C94                     
  8269                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8270   002C94  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8271   002C98  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8272   002C9C  50DF               	movf	indf2,w,c
  8273   002C9E  6E10               	movwf	??_setMotorPWM^0,c
  8274   002CA0  5010               	movf	??_setMotorPWM^0,w,c
  8275   002CA2  6E01               	movwf	___wmul@multiplier^0,c
  8276   002CA4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8277   002CA6  EE20 F003          	lfsr	2,3
  8278   002CAA  500E               	movf	setMotorPWM@m^0,w,c
  8279   002CAC  26D9               	addwf	fsr2l,f,c
  8280   002CAE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8281   002CB0  22DA               	addwfc	fsr2h,f,c
  8282   002CB2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8283   002CB6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8284   002CBA  EC10  F022         	call	___wmul	;wreg free
  8285   002CBE  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8286   002CC2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8287   002CC6  0E00               	movlw	0
  8288   002CC8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8289   002CCA  0E64               	movlw	100
  8290   002CCC  6E09               	movwf	___lwdiv@divisor^0,c
  8291   002CCE  EC56  F01F         	call	___lwdiv	;wreg free
  8292   002CD2  5007               	movf	?___lwdiv^0,w,c
  8293   002CD4  6E13               	movwf	setMotorPWM@negDuty^0,c
  8294   002CD6                     l2958:
  8295                           
  8296                           ;dc_motor.c: 83:     if (m->direction) {
  8297   002CD6  EE20 F001          	lfsr	2,1
  8298   002CDA  500E               	movf	setMotorPWM@m^0,w,c
  8299   002CDC  26D9               	addwf	fsr2l,f,c
  8300   002CDE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8301   002CE0  22DA               	addwfc	fsr2h,f,c
  8302   002CE2  50DF               	movf	indf2,w,c
  8303   002CE4  B4D8               	btfsc	status,2,c
  8304   002CE6  EF77  F016         	goto	u2101
  8305   002CEA  EF79  F016         	goto	u2100
  8306   002CEE                     u2101:
  8307   002CEE  EF9B  F016         	goto	l2962
  8308   002CF2                     u2100:
  8309   002CF2                     
  8310                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  8311   002CF2  EE20 F005          	lfsr	2,5
  8312   002CF6  500E               	movf	setMotorPWM@m^0,w,c
  8313   002CF8  26D9               	addwf	fsr2l,f,c
  8314   002CFA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8315   002CFC  22DA               	addwfc	fsr2h,f,c
  8316   002CFE  CFDE F010          	movff	postinc2,??_setMotorPWM
  8317   002D02  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8318   002D06  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8319   002D0A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8320   002D0E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8321                           
  8322                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  8323   002D12  EE20 F007          	lfsr	2,7
  8324   002D16  500E               	movf	setMotorPWM@m^0,w,c
  8325   002D18  26D9               	addwf	fsr2l,f,c
  8326   002D1A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8327   002D1C  22DA               	addwfc	fsr2h,f,c
  8328   002D1E  CFDE F010          	movff	postinc2,??_setMotorPWM
  8329   002D22  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8330   002D26  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8331   002D2A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8332   002D2E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8333                           
  8334                           ;dc_motor.c: 86:     } else {
  8335   002D32  EFBB  F016         	goto	l224
  8336   002D36                     l2962:
  8337                           
  8338                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  8339   002D36  EE20 F005          	lfsr	2,5
  8340   002D3A  500E               	movf	setMotorPWM@m^0,w,c
  8341   002D3C  26D9               	addwf	fsr2l,f,c
  8342   002D3E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8343   002D40  22DA               	addwfc	fsr2h,f,c
  8344   002D42  CFDE F010          	movff	postinc2,??_setMotorPWM
  8345   002D46  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8346   002D4A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8347   002D4E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8348   002D52  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8349                           
  8350                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  8351   002D56  EE20 F007          	lfsr	2,7
  8352   002D5A  500E               	movf	setMotorPWM@m^0,w,c
  8353   002D5C  26D9               	addwf	fsr2l,f,c
  8354   002D5E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8355   002D60  22DA               	addwfc	fsr2h,f,c
  8356   002D62  CFDE F010          	movff	postinc2,??_setMotorPWM
  8357   002D66  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8358   002D6A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8359   002D6E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8360   002D72  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8361   002D76                     l224:
  8362   002D76  0012               	return		;funcret
  8363   002D78                     __end_of_setMotorPWM:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function ___wmul *****************
  8367 ;; Defined at:
  8368 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  multiplier      2    0[COMRAM] unsigned int 
  8371 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  product         2    4[COMRAM] unsigned int 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2    0[COMRAM] unsigned int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0, prodl, prodh
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;Total ram usage:        6 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_setMotorPWM
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text46
  8398   004420                     __ptext46:
  8399                           	callstack 0
  8400   004420                     ___wmul:
  8401                           	callstack 27
  8402   004420  5001               	movf	___wmul@multiplier^0,w,c
  8403   004422  0203               	mulwf	___wmul@multiplicand^0,c
  8404   004424  CFF3 F005          	movff	prodl,___wmul@product
  8405   004428  CFF4 F006          	movff	prodh,___wmul@product+1
  8406   00442C  5001               	movf	___wmul@multiplier^0,w,c
  8407   00442E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8408   004430  50F3               	movf	243,w,c
  8409   004432  2606               	addwf	(___wmul@product+1)^0,f,c
  8410   004434  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8411   004436  0203               	mulwf	___wmul@multiplicand^0,c
  8412   004438  50F3               	movf	243,w,c
  8413   00443A  2606               	addwf	(___wmul@product+1)^0,f,c
  8414   00443C  C005  F001         	movff	___wmul@product,?___wmul
  8415   004440  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8416   004444  0012               	return		;funcret
  8417   004446                     __end_of___wmul:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function ___lwdiv *****************
  8421 ;; Defined at:
  8422 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  dividend        2    6[COMRAM] unsigned int 
  8425 ;;  divisor         2    8[COMRAM] unsigned int 
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;  quotient        2   10[COMRAM] unsigned int 
  8428 ;;  counter         1   12[COMRAM] unsigned char 
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  2    6[COMRAM] unsigned int 
  8431 ;; Registers used:
  8432 ;;		wreg, status,2, status,0
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;Total ram usage:        7 bytes
  8443 ;; Hardware stack levels used: 1
  8444 ;; Hardware stack levels required when called: 1
  8445 ;; This function calls:
  8446 ;;		Nothing
  8447 ;; This function is called by:
  8448 ;;		_setMotorPWM
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text47
  8453   003EAC                     __ptext47:
  8454                           	callstack 0
  8455   003EAC                     ___lwdiv:
  8456                           	callstack 27
  8457   003EAC  0E00               	movlw	0
  8458   003EAE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8459   003EB0  0E00               	movlw	0
  8460   003EB2  6E0B               	movwf	___lwdiv@quotient^0,c
  8461   003EB4  5009               	movf	___lwdiv@divisor^0,w,c
  8462   003EB6  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8463   003EB8  B4D8               	btfsc	status,2,c
  8464   003EBA  EF61  F01F         	goto	u2061
  8465   003EBE  EF63  F01F         	goto	u2060
  8466   003EC2                     u2061:
  8467   003EC2  EF8B  F01F         	goto	l1124
  8468   003EC6                     u2060:
  8469   003EC6  0E01               	movlw	1
  8470   003EC8  6E0D               	movwf	___lwdiv@counter^0,c
  8471   003ECA  EF6B  F01F         	goto	l2934
  8472   003ECE                     l2932:
  8473   003ECE  90D8               	bcf	status,0,c
  8474   003ED0  3609               	rlcf	___lwdiv@divisor^0,f,c
  8475   003ED2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8476   003ED4  2A0D               	incf	___lwdiv@counter^0,f,c
  8477   003ED6                     l2934:
  8478   003ED6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8479   003ED8  EF70  F01F         	goto	u2071
  8480   003EDC  EF72  F01F         	goto	u2070
  8481   003EE0                     u2071:
  8482   003EE0  EF67  F01F         	goto	l2932
  8483   003EE4                     u2070:
  8484   003EE4                     l2936:
  8485   003EE4  90D8               	bcf	status,0,c
  8486   003EE6  360B               	rlcf	___lwdiv@quotient^0,f,c
  8487   003EE8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8488   003EEA  5009               	movf	___lwdiv@divisor^0,w,c
  8489   003EEC  5C07               	subwf	___lwdiv@dividend^0,w,c
  8490   003EEE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8491   003EF0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8492   003EF2  A0D8               	btfss	status,0,c
  8493   003EF4  EF7E  F01F         	goto	u2081
  8494   003EF8  EF80  F01F         	goto	u2080
  8495   003EFC                     u2081:
  8496   003EFC  EF85  F01F         	goto	l2944
  8497   003F00                     u2080:
  8498   003F00  5009               	movf	___lwdiv@divisor^0,w,c
  8499   003F02  5E07               	subwf	___lwdiv@dividend^0,f,c
  8500   003F04  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8501   003F06  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8502   003F08  800B               	bsf	___lwdiv@quotient^0,0,c
  8503   003F0A                     l2944:
  8504   003F0A  90D8               	bcf	status,0,c
  8505   003F0C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8506   003F0E  3209               	rrcf	___lwdiv@divisor^0,f,c
  8507   003F10  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8508   003F12  EF72  F01F         	goto	l2936
  8509   003F16                     l1124:
  8510   003F16  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8511   003F1A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8512   003F1E  0012               	return		;funcret
  8513   003F20                     __end_of___lwdiv:
  8514                           	callstack 0
  8515                           
  8516 ;; *************** function _TimerReset *****************
  8517 ;; Defined at:
  8518 ;;		line 23 in file "timer.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_Red_R90
  8543 ;;		_Green_L90
  8544 ;;		_Blue_T180
  8545 ;;		_Yellow_rev1_R90
  8546 ;;		_Pink_rev1_L90
  8547 ;;		_Orange_R135
  8548 ;;		_LightBlue_L135
  8549 ;;		_White
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text48
  8554   004508                     __ptext48:
  8555                           	callstack 0
  8556   004508                     _TimerReset:
  8557                           	callstack 27
  8558   004508                     
  8559                           ;timer.c: 25:     TMR0L = 0;
  8560   004508  0E00               	movlw	0
  8561   00450A  6ED3               	movwf	211,c	;volatile
  8562                           
  8563                           ;timer.c: 26:     TMR0H = 0;
  8564   00450C  0E00               	movlw	0
  8565   00450E  6ED4               	movwf	212,c	;volatile
  8566   004510  0012               	return		;funcret
  8567   004512                     __end_of_TimerReset:
  8568                           	callstack 0
  8569                           
  8570 ;; *************** function _Color2String *****************
  8571 ;; Defined at:
  8572 ;;		line 39 in file "serial.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  buf             2   68[COMRAM] PTR unsigned char 
  8575 ;;		 -> main@data(100), 
  8576 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  8577 ;;		 -> colorf(22), 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  8580 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  8581 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  8582 ;;		 -> STR_2(1), 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:        6 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 7
  8599 ;; This function calls:
  8600 ;;		_Hue2Colour
  8601 ;;		_sendStringSerial4
  8602 ;;		_sprintf
  8603 ;; This function is called by:
  8604 ;;		_main
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text49
  8609   004324                     __ptext49:
  8610                           	callstack 0
  8611   004324                     _Color2String:
  8612                           	callstack 23
  8613   004324                     
  8614                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  8615   004324  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  8616   004328  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  8617   00432C  ECAA  F00A         	call	_Hue2Colour	;wreg free
  8618   004330  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  8619   004334  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  8620   004338                     
  8621                           ;serial.c: 45:     sprintf(buf,"Colour is %s  \r",colourname);
  8622   004338  C045  F032         	movff	Color2String@buf,sprintf@s
  8623   00433C  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  8624   004340  0E01               	movlw	low STR_1
  8625   004342  6E34               	movwf	sprintf@fmt^0,c
  8626   004344  0E0E               	movlw	high STR_1
  8627   004346  6E35               	movwf	(sprintf@fmt+1)^0,c
  8628   004348  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  8629   00434C  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  8630   004350  ECE0  F020         	call	_sprintf	;wreg free
  8631   004354                     
  8632                           ;serial.c: 46:     sendStringSerial4(buf);
  8633   004354  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  8634   004358  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  8635   00435C  ECB1  F021         	call	_sendStringSerial4	;wreg free
  8636   004360  0012               	return		;funcret
  8637   004362                     __end_of_Color2String:
  8638                           	callstack 0
  8639                           
  8640 ;; *************** function _sprintf *****************
  8641 ;; Defined at:
  8642 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  s               2   49[COMRAM] PTR unsigned char 
  8645 ;;		 -> main@data(100), 
  8646 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  8647 ;;		 -> STR_1(16), 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  f              11   57[COMRAM] struct _IO_FILE
  8650 ;;  ap              2   55[COMRAM] PTR void [1]
  8651 ;;		 -> ?_sprintf(2), 
  8652 ;;  ret             2    0        int 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  2   49[COMRAM] int 
  8655 ;; Registers used:
  8656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8662 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8666 ;;Total ram usage:       19 bytes
  8667 ;; Hardware stack levels used: 1
  8668 ;; Hardware stack levels required when called: 6
  8669 ;; This function calls:
  8670 ;;		_vfprintf
  8671 ;; This function is called by:
  8672 ;;		_Color2String
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text50
  8677   0041C0                     __ptext50:
  8678                           	callstack 0
  8679   0041C0                     _sprintf:
  8680                           	callstack 23
  8681   0041C0  0E36               	movlw	low (?_sprintf+4)
  8682   0041C2  6E38               	movwf	sprintf@ap^0,c
  8683   0041C4  0E00               	movlw	high (?_sprintf+4)
  8684   0041C6  6E39               	movwf	(sprintf@ap+1)^0,c
  8685   0041C8  C032  F03A         	movff	sprintf@s,sprintf@f
  8686   0041CC  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  8687   0041D0  0E00               	movlw	0
  8688   0041D2  6E3E               	movwf	(sprintf@f+4)^0,c
  8689   0041D4  0E00               	movlw	0
  8690   0041D6  6E3D               	movwf	(sprintf@f+3)^0,c
  8691   0041D8  0E00               	movlw	0
  8692   0041DA  6E44               	movwf	(sprintf@f+10)^0,c
  8693   0041DC  0E00               	movlw	0
  8694   0041DE  6E43               	movwf	(sprintf@f+9)^0,c
  8695   0041E0  0E3A               	movlw	low sprintf@f
  8696   0041E2  6E2A               	movwf	vfprintf@fp^0,c
  8697   0041E4  0E00               	movlw	high sprintf@f
  8698   0041E6  6E2B               	movwf	(vfprintf@fp+1)^0,c
  8699   0041E8  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  8700   0041EC  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8701   0041F0  0E38               	movlw	low sprintf@ap
  8702   0041F2  6E2E               	movwf	vfprintf@ap^0,c
  8703   0041F4  0E00               	movlw	high sprintf@ap
  8704   0041F6  6E2F               	movwf	(vfprintf@ap+1)^0,c
  8705   0041F8  EC07  F021         	call	_vfprintf	;wreg free
  8706   0041FC  503D               	movf	(sprintf@f+3)^0,w,c
  8707   0041FE  2432               	addwf	sprintf@s^0,w,c
  8708   004200  6ED9               	movwf	fsr2l,c
  8709   004202  503E               	movf	(sprintf@f+4)^0,w,c
  8710   004204  2033               	addwfc	(sprintf@s+1)^0,w,c
  8711   004206  6EDA               	movwf	fsr2h,c
  8712   004208  0E00               	movlw	0
  8713   00420A  6EDF               	movwf	indf2,c
  8714   00420C  0012               	return		;funcret
  8715   00420E                     __end_of_sprintf:
  8716                           	callstack 0
  8717                           
  8718 ;; *************** function _vfprintf *****************
  8719 ;; Defined at:
  8720 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  8723 ;;		 -> sprintf@f(11), 
  8724 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  8725 ;;		 -> STR_1(16), 
  8726 ;;  ap              2   45[COMRAM] PTR PTR void 
  8727 ;;		 -> sprintf@ap(2), 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  8730 ;;		 -> STR_1(16), 
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  2   41[COMRAM] int 
  8733 ;; Registers used:
  8734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8740 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;Total ram usage:        8 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 5
  8747 ;; This function calls:
  8748 ;;		_vfpfcnvrt
  8749 ;; This function is called by:
  8750 ;;		_sprintf
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text51
  8755   00420E                     __ptext51:
  8756                           	callstack 0
  8757   00420E                     _vfprintf:
  8758                           	callstack 23
  8759   00420E                     
  8760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  8761   00420E  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  8762   004212  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8763                           
  8764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8765   004216  EF1B  F021         	goto	l3490
  8766   00421A                     l3488:
  8767                           
  8768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8769   00421A  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  8770   00421E  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8771   004222  0E30               	movlw	low vfprintf@cfmt
  8772   004224  6E22               	movwf	vfpfcnvrt@fmt^0,c
  8773   004226  0E00               	movlw	high vfprintf@cfmt
  8774   004228  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8775   00422A  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  8776   00422E  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8777   004232  ECBC  F016         	call	_vfpfcnvrt	;wreg free
  8778   004236                     l3490:
  8779                           
  8780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8781   004236  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  8782   00423A  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8783   00423E                     	if	0	;tblptru may be non-zero
  8784   00423E                     	endif
  8785   00423E                     	if	0	;tblptru may be non-zero
  8786   00423E                     	endif
  8787   00423E  0008               	tblrd		*
  8788   004240  50F5               	movf	tablat,w,c
  8789   004242  0900               	iorlw	0
  8790   004244  A4D8               	btfss	status,2,c
  8791   004246  EF27  F021         	goto	u2901
  8792   00424A  EF29  F021         	goto	u2900
  8793   00424E                     u2901:
  8794   00424E  EF0D  F021         	goto	l3488
  8795   004252                     u2900:
  8796   004252                     
  8797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  8798   004252  0E00               	movlw	0
  8799   004254  6E2B               	movwf	(?_vfprintf+1)^0,c
  8800   004256  0E00               	movlw	0
  8801   004258  6E2A               	movwf	?_vfprintf^0,c
  8802   00425A  0012               	return		;funcret
  8803   00425C                     __end_of_vfprintf:
  8804                           	callstack 0
  8805                           
  8806 ;; *************** function _vfpfcnvrt *****************
  8807 ;; Defined at:
  8808 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8811 ;;		 -> sprintf@f(11), 
  8812 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  8813 ;;		 -> vfprintf@cfmt(2), 
  8814 ;;  ap              2   35[COMRAM] PTR PTR void 
  8815 ;;		 -> sprintf@ap(2), 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;  convarg         8    0        struct .
  8818 ;;  cp              3    0        PTR unsigned char 
  8819 ;;  i               2    0        int 
  8820 ;;  done            2    0        int 
  8821 ;;  c               1    0        unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8831 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;Total ram usage:       10 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; Hardware stack levels required when called: 4
  8838 ;; This function calls:
  8839 ;;		_fputc
  8840 ;;		_stoa
  8841 ;;		_strncmp
  8842 ;; This function is called by:
  8843 ;;		_vfprintf
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text52
  8848   002D78                     __ptext52:
  8849                           	callstack 0
  8850   002D78                     _vfpfcnvrt:
  8851                           	callstack 23
  8852   002D78                     
  8853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  8854   002D78  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8855   002D7C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8856   002D80  CFDE FFF6          	movff	postinc2,tblptrl
  8857   002D84  CFDD FFF7          	movff	postdec2,tblptrh
  8858   002D88                     	if	0	;tblptru may be non-zero
  8859   002D88                     	endif
  8860   002D88                     	if	0	;tblptru may be non-zero
  8861   002D88                     	endif
  8862   002D88  0008               	tblrd		*
  8863   002D8A  50F5               	movf	tablat,w,c
  8864   002D8C  0A25               	xorlw	37
  8865   002D8E  A4D8               	btfss	status,2,c
  8866   002D90  EFCC  F016         	goto	u2381
  8867   002D94  EFCE  F016         	goto	u2380
  8868   002D98                     u2381:
  8869   002D98  EF54  F017         	goto	l3174
  8870   002D9C                     u2380:
  8871   002D9C                     
  8872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  8873   002D9C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8874   002DA0  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8875   002DA4  2ADE               	incf	postinc2,f,c
  8876   002DA6  0E00               	movlw	0
  8877   002DA8  22DD               	addwfc	postdec2,f,c
  8878   002DAA                     
  8879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  8880   002DAA  0E00               	movlw	0
  8881   002DAC  0100               	movlb	0	; () banked
  8882   002DAE  6FDB               	movwf	(_width+1)& (0+255),b
  8883   002DB0  0E00               	movlw	0
  8884   002DB2  6FDA               	movwf	_width& (0+255),b
  8885   002DB4  C0DA  F0E0         	movff	_width,_flags
  8886   002DB8                     
  8887                           ; BSR set to: 0
  8888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  8889   002DB8  69DC               	setf	_prec& (0+255),b
  8890   002DBA  69DD               	setf	(_prec+1)& (0+255),b
  8891   002DBC                     
  8892                           ; BSR set to: 0
  8893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  8894   002DBC  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8895   002DC0  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8896   002DC4  CFDE FFF6          	movff	postinc2,tblptrl
  8897   002DC8  CFDD FFF7          	movff	postdec2,tblptrh
  8898   002DCC                     	if	0	;tblptru may be non-zero
  8899   002DCC                     	endif
  8900   002DCC                     	if	0	;tblptru may be non-zero
  8901   002DCC                     	endif
  8902   002DCC  0008               	tblrd		*
  8903   002DCE  50F5               	movf	tablat,w,c
  8904   002DD0  0A73               	xorlw	115
  8905   002DD2  B4D8               	btfsc	status,2,c
  8906   002DD4  EFEE  F016         	goto	u2391
  8907   002DD8  EFF0  F016         	goto	u2390
  8908   002DDC                     u2391:
  8909   002DDC  EF0B  F017         	goto	l3158
  8910   002DE0                     u2390:
  8911   002DE0                     
  8912                           ; BSR set to: 0
  8913   002DE0  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8914   002DE4  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8915   002DE8  CFDE F001          	movff	postinc2,strncmp@_l
  8916   002DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  8917   002DF0  0E48               	movlw	low STR_11
  8918   002DF2  6E03               	movwf	strncmp@_r^0,c
  8919   002DF4  0E0E               	movlw	high STR_11
  8920   002DF6  6E04               	movwf	(strncmp@_r+1)^0,c
  8921   002DF8  0E00               	movlw	0
  8922   002DFA  6E06               	movwf	(strncmp@n+1)^0,c
  8923   002DFC  0E03               	movlw	3
  8924   002DFE  6E05               	movwf	strncmp@n^0,c
  8925   002E00  EC7D  F01A         	call	_strncmp	;wreg free
  8926   002E04  5001               	movf	?_strncmp^0,w,c
  8927   002E06  1002               	iorwf	(?_strncmp+1)^0,w,c
  8928   002E08  A4D8               	btfss	status,2,c
  8929   002E0A  EF09  F017         	goto	u2401
  8930   002E0E  EF0B  F017         	goto	u2400
  8931   002E12                     u2401:
  8932   002E12  EF4B  F017         	goto	l3170
  8933   002E16                     u2400:
  8934   002E16                     l3158:
  8935                           
  8936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  8937   002E16  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8938   002E1A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8939   002E1E  CFDE FFF6          	movff	postinc2,tblptrl
  8940   002E22  CFDD FFF7          	movff	postdec2,tblptrh
  8941   002E26                     	if	0	;tblptru may be non-zero
  8942   002E26                     	endif
  8943   002E26                     	if	0	;tblptru may be non-zero
  8944   002E26                     	endif
  8945   002E26  0008               	tblrd		*
  8946   002E28  50F5               	movf	tablat,w,c
  8947   002E2A  0A73               	xorlw	115
  8948   002E2C  B4D8               	btfsc	status,2,c
  8949   002E2E  EF1B  F017         	goto	u2411
  8950   002E32  EF1D  F017         	goto	u2410
  8951   002E36                     u2411:
  8952   002E36  EF23  F017         	goto	l3162
  8953   002E3A                     u2410:
  8954   002E3A  0E00               	movlw	0
  8955   002E3C  6E29               	movwf	(_vfpfcnvrt$2827+1)^0,c
  8956   002E3E  0E03               	movlw	3
  8957   002E40  6E28               	movwf	_vfpfcnvrt$2827^0,c
  8958   002E42  EF27  F017         	goto	l3164
  8959   002E46                     l3162:
  8960   002E46  0E00               	movlw	0
  8961   002E48  6E29               	movwf	(_vfpfcnvrt$2827+1)^0,c
  8962   002E4A  0E01               	movlw	1
  8963   002E4C  6E28               	movwf	_vfpfcnvrt$2827^0,c
  8964   002E4E                     l3164:
  8965   002E4E  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8966   002E52  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8967   002E56  5028               	movf	_vfpfcnvrt$2827^0,w,c
  8968   002E58  26DE               	addwf	postinc2,f,c
  8969   002E5A  5029               	movf	(_vfpfcnvrt$2827+1)^0,w,c
  8970   002E5C  22DD               	addwfc	postdec2,f,c
  8971   002E5E                     
  8972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  8973   002E5E  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8974   002E62  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8975   002E66  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8976   002E6A  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8977   002E6E  CFDF F026          	movff	indf2,??_vfpfcnvrt
  8978   002E72  0E02               	movlw	2
  8979   002E74  26DE               	addwf	postinc2,f,c
  8980   002E76  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  8981   002E7A  0E00               	movlw	0
  8982   002E7C  22DD               	addwfc	postdec2,f,c
  8983   002E7E  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8984   002E82  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8985   002E86  CFDE F00C          	movff	postinc2,stoa@s
  8986   002E8A  CFDD F00D          	movff	postdec2,stoa@s+1
  8987   002E8E  EC69  F017         	call	_stoa	;wreg free
  8988   002E92  EF68  F017         	goto	l1368
  8989   002E96                     l3170:
  8990                           
  8991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  8992   002E96  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8993   002E9A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8994   002E9E  2ADE               	incf	postinc2,f,c
  8995   002EA0  0E00               	movlw	0
  8996   002EA2  22DD               	addwfc	postdec2,f,c
  8997   002EA4  EF68  F017         	goto	l1368
  8998   002EA8                     l3174:
  8999                           
  9000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9001   002EA8  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9002   002EAC  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9003   002EB0  CFDE FFF6          	movff	postinc2,tblptrl
  9004   002EB4  CFDD FFF7          	movff	postdec2,tblptrh
  9005   002EB8                     	if	0	;tblptru may be non-zero
  9006   002EB8                     	endif
  9007   002EB8                     	if	0	;tblptru may be non-zero
  9008   002EB8                     	endif
  9009   002EB8  0008               	tblrd		*
  9010   002EBA  50F5               	movf	tablat,w,c
  9011   002EBC  6E01               	movwf	fputc@c^0,c
  9012   002EBE  6A02               	clrf	(fputc@c+1)^0,c
  9013   002EC0  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9014   002EC4  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9015   002EC8  ECEC  F01A         	call	_fputc	;wreg free
  9016   002ECC  EF4B  F017         	goto	l3170
  9017   002ED0                     l1368:
  9018   002ED0  0012               	return		;funcret
  9019   002ED2                     __end_of_vfpfcnvrt:
  9020                           	callstack 0
  9021                           
  9022 ;; *************** function _strncmp *****************
  9023 ;; Defined at:
  9024 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9027 ;;		 -> STR_1(16), 
  9028 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9029 ;;		 -> STR_13(4), 
  9030 ;;  n               2    4[COMRAM] unsigned int 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9033 ;;		 -> STR_13(4), 
  9034 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9035 ;;		 -> STR_1(16), 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  2    0[COMRAM] int 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9045 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9048 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9049 ;;Total ram usage:       11 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; Hardware stack levels required when called: 1
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_vfpfcnvrt
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text53
  9060   0034FA                     __ptext53:
  9061                           	callstack 0
  9062   0034FA                     _strncmp:
  9063                           	callstack 25
  9064   0034FA  C001  F008         	movff	strncmp@_l,strncmp@l
  9065   0034FE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9066   003502  C003  F00A         	movff	strncmp@_r,strncmp@r
  9067   003506  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9068   00350A  0605               	decf	strncmp@n^0,f,c
  9069   00350C  A0D8               	btfss	status,0,c
  9070   00350E  0606               	decf	(strncmp@n+1)^0,f,c
  9071   003510  2805               	incf	strncmp@n^0,w,c
  9072   003512  E106               	bnz	u2291
  9073   003514  2806               	incf	(strncmp@n+1)^0,w,c
  9074   003516  A4D8               	btfss	status,2,c
  9075   003518  EF90  F01A         	goto	u2291
  9076   00351C  EF92  F01A         	goto	u2290
  9077   003520                     u2291:
  9078   003520  EF9F  F01A         	goto	l3072
  9079   003524                     u2290:
  9080   003524  0E00               	movlw	0
  9081   003526  6E02               	movwf	(?_strncmp+1)^0,c
  9082   003528  0E00               	movlw	0
  9083   00352A  6E01               	movwf	?_strncmp^0,c
  9084   00352C  EFEB  F01A         	goto	l1407
  9085   003530                     l3070:
  9086   003530  4A08               	infsnz	strncmp@l^0,f,c
  9087   003532  2A09               	incf	(strncmp@l+1)^0,f,c
  9088   003534  4A0A               	infsnz	strncmp@r^0,f,c
  9089   003536  2A0B               	incf	(strncmp@r+1)^0,f,c
  9090   003538  0605               	decf	strncmp@n^0,f,c
  9091   00353A  A0D8               	btfss	status,0,c
  9092   00353C  0606               	decf	(strncmp@n+1)^0,f,c
  9093   00353E                     l3072:
  9094   00353E  C008  FFF6         	movff	strncmp@l,tblptrl
  9095   003542  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9096   003546                     	if	0	;tblptru may be non-zero
  9097   003546                     	endif
  9098   003546                     	if	0	;tblptru may be non-zero
  9099   003546                     	endif
  9100   003546  0008               	tblrd		*
  9101   003548  50F5               	movf	tablat,w,c
  9102   00354A  0900               	iorlw	0
  9103   00354C  B4D8               	btfsc	status,2,c
  9104   00354E  EFAB  F01A         	goto	u2301
  9105   003552  EFAD  F01A         	goto	u2300
  9106   003556                     u2301:
  9107   003556  EFD9  F01A         	goto	l3080
  9108   00355A                     u2300:
  9109   00355A  C00A  FFF6         	movff	strncmp@r,tblptrl
  9110   00355E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9111   003562                     	if	0	;tblptru may be non-zero
  9112   003562                     	endif
  9113   003562                     	if	0	;tblptru may be non-zero
  9114   003562                     	endif
  9115   003562  0008               	tblrd		*
  9116   003564  50F5               	movf	tablat,w,c
  9117   003566  0900               	iorlw	0
  9118   003568  B4D8               	btfsc	status,2,c
  9119   00356A  EFB9  F01A         	goto	u2311
  9120   00356E  EFBB  F01A         	goto	u2310
  9121   003572                     u2311:
  9122   003572  EFD9  F01A         	goto	l3080
  9123   003576                     u2310:
  9124   003576  5005               	movf	strncmp@n^0,w,c
  9125   003578  1006               	iorwf	(strncmp@n+1)^0,w,c
  9126   00357A  B4D8               	btfsc	status,2,c
  9127   00357C  EFC2  F01A         	goto	u2321
  9128   003580  EFC4  F01A         	goto	u2320
  9129   003584                     u2321:
  9130   003584  EFD9  F01A         	goto	l3080
  9131   003588                     u2320:
  9132   003588  C008  FFF6         	movff	strncmp@l,tblptrl
  9133   00358C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9134   003590                     	if	0	;tblptru may be non-zero
  9135   003590                     	endif
  9136   003590                     	if	0	;tblptru may be non-zero
  9137   003590                     	endif
  9138   003590  0008               	tblrd		*
  9139   003592  CFF5 F007          	movff	tablat,??_strncmp
  9140   003596  C00A  FFF6         	movff	strncmp@r,tblptrl
  9141   00359A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9142   00359E                     	if	0	;tblptru may be non-zero
  9143   00359E                     	endif
  9144   00359E                     	if	0	;tblptru may be non-zero
  9145   00359E                     	endif
  9146   00359E  0008               	tblrd		*
  9147   0035A0  50F5               	movf	tablat,w,c
  9148   0035A2  1807               	xorwf	??_strncmp^0,w,c
  9149   0035A4  B4D8               	btfsc	status,2,c
  9150   0035A6  EFD7  F01A         	goto	u2331
  9151   0035AA  EFD9  F01A         	goto	u2330
  9152   0035AE                     u2331:
  9153   0035AE  EF98  F01A         	goto	l3070
  9154   0035B2                     u2330:
  9155   0035B2                     l3080:
  9156   0035B2  C008  FFF6         	movff	strncmp@l,tblptrl
  9157   0035B6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9158   0035BA                     	if	0	;tblptru may be non-zero
  9159   0035BA                     	endif
  9160   0035BA                     	if	0	;tblptru may be non-zero
  9161   0035BA                     	endif
  9162   0035BA  0008               	tblrd		*
  9163   0035BC  CFF5 F007          	movff	tablat,??_strncmp
  9164   0035C0  C00A  FFF6         	movff	strncmp@r,tblptrl
  9165   0035C4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9166   0035C8                     	if	0	;tblptru may be non-zero
  9167   0035C8                     	endif
  9168   0035C8                     	if	0	;tblptru may be non-zero
  9169   0035C8                     	endif
  9170   0035C8  0008               	tblrd		*
  9171   0035CA  50F5               	movf	tablat,w,c
  9172   0035CC  5C07               	subwf	??_strncmp^0,w,c
  9173   0035CE  6E01               	movwf	?_strncmp^0,c
  9174   0035D0  6A02               	clrf	(?_strncmp+1)^0,c
  9175   0035D2  A0D8               	btfss	status,0,c
  9176   0035D4  0602               	decf	(?_strncmp+1)^0,f,c
  9177   0035D6                     l1407:
  9178   0035D6  0012               	return		;funcret
  9179   0035D8                     __end_of_strncmp:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function _stoa *****************
  9183 ;; Defined at:
  9184 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9187 ;;		 -> sprintf@f(11), 
  9188 ;;  s               2   11[COMRAM] PTR unsigned char 
  9189 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
  9190 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
  9191 ;;		 -> STR_3(4), STR_2(1), 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9194 ;;  p               2   29[COMRAM] int 
  9195 ;;  l               2   27[COMRAM] int 
  9196 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9197 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9198 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9199 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9200 ;;  i               2   23[COMRAM] int 
  9201 ;;  w               2   21[COMRAM] int 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9212 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9214 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9215 ;;Total ram usage:       22 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 3
  9218 ;; This function calls:
  9219 ;;		_fputc
  9220 ;;		_strlen
  9221 ;; This function is called by:
  9222 ;;		_vfpfcnvrt
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text54
  9227   002ED2                     __ptext54:
  9228                           	callstack 0
  9229   002ED2                     _stoa:
  9230                           	callstack 23
  9231   002ED2                     
  9232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9233   002ED2  EE21  F086         	lfsr	2,stoa@F1144
  9234   002ED6  EE10  F00F         	lfsr	1,stoa@nuls
  9235   002EDA  0E06               	movlw	6
  9236   002EDC                     u2221:
  9237   002EDC  CFDB FFE3          	movff	plusw2,plusw1
  9238   002EE0  06E8               	decf	wreg,f,c
  9239   002EE2  E2FC               	bc	u2221
  9240   002EE4                     
  9241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9242   002EE4  C00C  F01A         	movff	stoa@s,stoa@cp
  9243   002EE8  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9244   002EEC                     
  9245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9246   002EEC  501A               	movf	stoa@cp^0,w,c
  9247   002EEE  101B               	iorwf	(stoa@cp+1)^0,w,c
  9248   002EF0  A4D8               	btfss	status,2,c
  9249   002EF2  EF7D  F017         	goto	u2231
  9250   002EF6  EF7F  F017         	goto	u2230
  9251   002EFA                     u2231:
  9252   002EFA  EF83  F017         	goto	l3040
  9253   002EFE                     u2230:
  9254   002EFE                     
  9255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9256   002EFE  0E0F               	movlw	low stoa@nuls
  9257   002F00  6E1A               	movwf	stoa@cp^0,c
  9258   002F02  0E00               	movlw	high stoa@nuls
  9259   002F04  6E1B               	movwf	(stoa@cp+1)^0,c
  9260   002F06                     l3040:
  9261                           
  9262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9263   002F06  C01A  F001         	movff	stoa@cp,strlen@s
  9264   002F0A  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9265   002F0E  ECB8  F020         	call	_strlen	;wreg free
  9266   002F12  C001  F01C         	movff	?_strlen,stoa@l
  9267   002F16  C002  F01D         	movff	?_strlen+1,stoa@l+1
  9268   002F1A                     
  9269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  9270   002F1A  C0DC  F01E         	movff	_prec,stoa@p
  9271   002F1E  C0DD  F01F         	movff	_prec+1,stoa@p+1
  9272   002F22                     
  9273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  9274   002F22  BE1F               	btfsc	(stoa@p+1)^0,7,c
  9275   002F24  EF96  F017         	goto	u2241
  9276   002F28  EF98  F017         	goto	u2240
  9277   002F2C                     u2241:
  9278   002F2C  EFAD  F017         	goto	l1348
  9279   002F30                     u2240:
  9280   002F30  501C               	movf	stoa@l^0,w,c
  9281   002F32  5C1E               	subwf	stoa@p^0,w,c
  9282   002F34  501F               	movf	(stoa@p+1)^0,w,c
  9283   002F36  0A80               	xorlw	128
  9284   002F38  6E0E               	movwf	??_stoa^0,c
  9285   002F3A  501D               	movf	(stoa@l+1)^0,w,c
  9286   002F3C  0A80               	xorlw	128
  9287   002F3E  580E               	subwfb	??_stoa^0,w,c
  9288   002F40  A0D8               	btfss	status,0,c
  9289   002F42  EFA5  F017         	goto	u2251
  9290   002F46  EFA7  F017         	goto	u2250
  9291   002F4A                     u2251:
  9292   002F4A  EFA9  F017         	goto	l1346
  9293   002F4E                     u2250:
  9294   002F4E  EFAD  F017         	goto	l1348
  9295   002F52                     l1346:
  9296   002F52  C01E  F01C         	movff	stoa@p,stoa@l
  9297   002F56  C01F  F01D         	movff	stoa@p+1,stoa@l+1
  9298   002F5A                     l1348:
  9299                           
  9300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  9301   002F5A  C01C  F01E         	movff	stoa@l,stoa@p
  9302   002F5E  C01D  F01F         	movff	stoa@l+1,stoa@p+1
  9303                           
  9304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  9305   002F62  C0DA  F016         	movff	_width,stoa@w
  9306   002F66  C0DB  F017         	movff	_width+1,stoa@w+1
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9309   002F6A  EFC3  F017         	goto	l3052
  9310   002F6E                     l3048:
  9311                           
  9312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  9313   002F6E  0E00               	movlw	0
  9314   002F70  6E02               	movwf	(fputc@c+1)^0,c
  9315   002F72  0E20               	movlw	32
  9316   002F74  6E01               	movwf	fputc@c^0,c
  9317   002F76  C00A  F003         	movff	stoa@fp,fputc@fp
  9318   002F7A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9319   002F7E  ECEC  F01A         	call	_fputc	;wreg free
  9320   002F82                     
  9321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  9322   002F82  4A1C               	infsnz	stoa@l^0,f,c
  9323   002F84  2A1D               	incf	(stoa@l+1)^0,f,c
  9324   002F86                     l3052:
  9325                           
  9326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9327   002F86  5016               	movf	stoa@w^0,w,c
  9328   002F88  5C1C               	subwf	stoa@l^0,w,c
  9329   002F8A  501D               	movf	(stoa@l+1)^0,w,c
  9330   002F8C  0A80               	xorlw	128
  9331   002F8E  6E0E               	movwf	??_stoa^0,c
  9332   002F90  5017               	movf	(stoa@w+1)^0,w,c
  9333   002F92  0A80               	xorlw	128
  9334   002F94  580E               	subwfb	??_stoa^0,w,c
  9335   002F96  A0D8               	btfss	status,0,c
  9336   002F98  EFD0  F017         	goto	u2261
  9337   002F9C  EFD2  F017         	goto	u2260
  9338   002FA0                     u2261:
  9339   002FA0  EFB7  F017         	goto	l3048
  9340   002FA4                     u2260:
  9341   002FA4                     
  9342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  9343   002FA4  0E00               	movlw	0
  9344   002FA6  6E19               	movwf	(stoa@i+1)^0,c
  9345   002FA8  0E00               	movlw	0
  9346   002FAA  6E18               	movwf	stoa@i^0,c
  9347                           
  9348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9349   002FAC  EFF7  F017         	goto	l3062
  9350   002FB0                     l3056:
  9351                           
  9352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  9353   002FB0  C01A  FFF6         	movff	stoa@cp,tblptrl
  9354   002FB4  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9355   002FB8  0E00               	movlw	low (__smallconst shr (0+16))
  9356   002FBA  6EF8               	movwf	tblptru,c
  9357   002FBC  0E0D               	movlw	(high __ramtop+-1)
  9358   002FBE  64F7               	cpfsgt	tblptrh,c
  9359   002FC0  D003               	bra	u2277
  9360   002FC2  0008               	tblrd		*
  9361   002FC4  50F5               	movf	tablat,w,c
  9362   002FC6  D005               	bra	u2270
  9363   002FC8                     u2277:
  9364   002FC8  CFF6 FFE9          	movff	tblptrl,fsr0l
  9365   002FCC  CFF7 FFEA          	movff	tblptrh,fsr0h
  9366   002FD0  50EF               	movf	indf0,w,c
  9367   002FD2                     u2270:
  9368   002FD2  6E0E               	movwf	??_stoa^0,c
  9369   002FD4  500E               	movf	??_stoa^0,w,c
  9370   002FD6  6E01               	movwf	fputc@c^0,c
  9371   002FD8  6A02               	clrf	(fputc@c+1)^0,c
  9372   002FDA  C00A  F003         	movff	stoa@fp,fputc@fp
  9373   002FDE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9374   002FE2  ECEC  F01A         	call	_fputc	;wreg free
  9375   002FE6                     
  9376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  9377   002FE6  4A1A               	infsnz	stoa@cp^0,f,c
  9378   002FE8  2A1B               	incf	(stoa@cp+1)^0,f,c
  9379   002FEA                     
  9380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  9381   002FEA  4A18               	infsnz	stoa@i^0,f,c
  9382   002FEC  2A19               	incf	(stoa@i+1)^0,f,c
  9383   002FEE                     l3062:
  9384                           
  9385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9386   002FEE  501E               	movf	stoa@p^0,w,c
  9387   002FF0  5C18               	subwf	stoa@i^0,w,c
  9388   002FF2  5019               	movf	(stoa@i+1)^0,w,c
  9389   002FF4  0A80               	xorlw	128
  9390   002FF6  6E0E               	movwf	??_stoa^0,c
  9391   002FF8  501F               	movf	(stoa@p+1)^0,w,c
  9392   002FFA  0A80               	xorlw	128
  9393   002FFC  580E               	subwfb	??_stoa^0,w,c
  9394   002FFE  A0D8               	btfss	status,0,c
  9395   003000  EF04  F018         	goto	u2281
  9396   003004  EF06  F018         	goto	u2280
  9397   003008                     u2281:
  9398   003008  EFD8  F017         	goto	l3056
  9399   00300C                     u2280:
  9400   00300C  0012               	return		;funcret
  9401   00300E                     __end_of_stoa:
  9402                           	callstack 0
  9403                           
  9404 ;; *************** function _strlen *****************
  9405 ;; Defined at:
  9406 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9409 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9410 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9411 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9414 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
  9415 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
  9416 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  2    0[COMRAM] unsigned int 
  9419 ;; Registers used:
  9420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9430 ;;Total ram usage:        4 bytes
  9431 ;; Hardware stack levels used: 1
  9432 ;; Hardware stack levels required when called: 1
  9433 ;; This function calls:
  9434 ;;		Nothing
  9435 ;; This function is called by:
  9436 ;;		_stoa
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           	psect	text55
  9441   004170                     __ptext55:
  9442                           	callstack 0
  9443   004170                     _strlen:
  9444                           	callstack 24
  9445   004170  C001  F003         	movff	strlen@s,strlen@a
  9446   004174  C002  F004         	movff	strlen@s+1,strlen@a+1
  9447   004178  EFC0  F020         	goto	l2982
  9448   00417C                     l2980:
  9449   00417C  4A01               	infsnz	strlen@s^0,f,c
  9450   00417E  2A02               	incf	(strlen@s+1)^0,f,c
  9451   004180                     l2982:
  9452   004180  C001  FFF6         	movff	strlen@s,tblptrl
  9453   004184  C002  FFF7         	movff	strlen@s+1,tblptrh
  9454   004188  0E00               	movlw	low (__smallconst shr (0+16))
  9455   00418A  6EF8               	movwf	tblptru,c
  9456   00418C  0E0D               	movlw	(high __ramtop+-1)
  9457   00418E  64F7               	cpfsgt	tblptrh,c
  9458   004190  D003               	bra	u2157
  9459   004192  0008               	tblrd		*
  9460   004194  50F5               	movf	tablat,w,c
  9461   004196  D005               	bra	u2150
  9462   004198                     u2157:
  9463   004198  CFF6 FFE9          	movff	tblptrl,fsr0l
  9464   00419C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9465   0041A0  50EF               	movf	indf0,w,c
  9466   0041A2                     u2150:
  9467   0041A2  0900               	iorlw	0
  9468   0041A4  A4D8               	btfss	status,2,c
  9469   0041A6  EFD7  F020         	goto	u2161
  9470   0041AA  EFD9  F020         	goto	u2160
  9471   0041AE                     u2161:
  9472   0041AE  EFBE  F020         	goto	l2980
  9473   0041B2                     u2160:
  9474   0041B2  5003               	movf	strlen@a^0,w,c
  9475   0041B4  5C01               	subwf	strlen@s^0,w,c
  9476   0041B6  6E01               	movwf	?_strlen^0,c
  9477   0041B8  5004               	movf	(strlen@a+1)^0,w,c
  9478   0041BA  5802               	subwfb	(strlen@s+1)^0,w,c
  9479   0041BC  6E02               	movwf	(?_strlen+1)^0,c
  9480   0041BE  0012               	return		;funcret
  9481   0041C0                     __end_of_strlen:
  9482                           	callstack 0
  9483                           
  9484 ;; *************** function _fputc *****************
  9485 ;; Defined at:
  9486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  c               2    0[COMRAM] int 
  9489 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9490 ;;		 -> sprintf@f(11), 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2    0[COMRAM] int 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9506 ;;Total ram usage:        9 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; Hardware stack levels required when called: 2
  9509 ;; This function calls:
  9510 ;;		_putch
  9511 ;; This function is called by:
  9512 ;;		_stoa
  9513 ;;		_vfpfcnvrt
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text56
  9518   0035D8                     __ptext56:
  9519                           	callstack 0
  9520   0035D8                     _fputc:
  9521                           	callstack 23
  9522   0035D8  5003               	movf	fputc@fp^0,w,c
  9523   0035DA  1004               	iorwf	(fputc@fp+1)^0,w,c
  9524   0035DC  B4D8               	btfsc	status,2,c
  9525   0035DE  EFF3  F01A         	goto	u2111
  9526   0035E2  EFF5  F01A         	goto	u2110
  9527   0035E6                     u2111:
  9528   0035E6  EFFE  F01A         	goto	l2968
  9529   0035EA                     u2110:
  9530   0035EA  5003               	movf	fputc@fp^0,w,c
  9531   0035EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  9532   0035EE  A4D8               	btfss	status,2,c
  9533   0035F0  EFFC  F01A         	goto	u2121
  9534   0035F4  EFFE  F01A         	goto	u2120
  9535   0035F8                     u2121:
  9536   0035F8  EF03  F01B         	goto	l2970
  9537   0035FC                     u2120:
  9538   0035FC                     l2968:
  9539   0035FC  5001               	movf	fputc@c^0,w,c
  9540   0035FE  EC91  F022         	call	_putch
  9541   003602  EF50  F01B         	goto	l1386
  9542   003606                     l2970:
  9543   003606  EE20 F009          	lfsr	2,9
  9544   00360A  5003               	movf	fputc@fp^0,w,c
  9545   00360C  26D9               	addwf	fsr2l,f,c
  9546   00360E  5004               	movf	(fputc@fp+1)^0,w,c
  9547   003610  22DA               	addwfc	fsr2h,f,c
  9548   003612  50DE               	movf	postinc2,w,c
  9549   003614  10DE               	iorwf	postinc2,w,c
  9550   003616  B4D8               	btfsc	status,2,c
  9551   003618  EF10  F01B         	goto	u2131
  9552   00361C  EF12  F01B         	goto	u2130
  9553   003620                     u2131:
  9554   003620  EF2D  F01B         	goto	l2974
  9555   003624                     u2130:
  9556   003624  EE20 F009          	lfsr	2,9
  9557   003628  5003               	movf	fputc@fp^0,w,c
  9558   00362A  26D9               	addwf	fsr2l,f,c
  9559   00362C  5004               	movf	(fputc@fp+1)^0,w,c
  9560   00362E  22DA               	addwfc	fsr2h,f,c
  9561   003630  EE10 F003          	lfsr	1,3
  9562   003634  5003               	movf	fputc@fp^0,w,c
  9563   003636  26E1               	addwf	fsr1l,f,c
  9564   003638  5004               	movf	(fputc@fp+1)^0,w,c
  9565   00363A  22E2               	addwfc	fsr1h,f,c
  9566   00363C  50DE               	movf	postinc2,w,c
  9567   00363E  5CE6               	subwf	postinc1,w,c
  9568   003640  50E6               	movf	postinc1,w,c
  9569   003642  0A80               	xorlw	128
  9570   003644  6E09               	movwf	(??_fputc+4)^0,c
  9571   003646  50DE               	movf	postinc2,w,c
  9572   003648  0A80               	xorlw	128
  9573   00364A  5809               	subwfb	(??_fputc+4)^0,w,c
  9574   00364C  B0D8               	btfsc	status,0,c
  9575   00364E  EF2B  F01B         	goto	u2141
  9576   003652  EF2D  F01B         	goto	u2140
  9577   003656                     u2141:
  9578   003656  EF50  F01B         	goto	l1386
  9579   00365A                     u2140:
  9580   00365A                     l2974:
  9581   00365A  EE20 F003          	lfsr	2,3
  9582   00365E  5003               	movf	fputc@fp^0,w,c
  9583   003660  26D9               	addwf	fsr2l,f,c
  9584   003662  5004               	movf	(fputc@fp+1)^0,w,c
  9585   003664  22DA               	addwfc	fsr2h,f,c
  9586   003666  CFDE F005          	movff	postinc2,??_fputc
  9587   00366A  CFDD F006          	movff	postdec2,??_fputc+1
  9588   00366E  C003  FFD9         	movff	fputc@fp,fsr2l
  9589   003672  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9590   003676  CFDE F007          	movff	postinc2,??_fputc+2
  9591   00367A  CFDD F008          	movff	postdec2,??_fputc+3
  9592   00367E  5005               	movf	??_fputc^0,w,c
  9593   003680  2407               	addwf	(??_fputc+2)^0,w,c
  9594   003682  6ED9               	movwf	fsr2l,c
  9595   003684  5006               	movf	(??_fputc+1)^0,w,c
  9596   003686  2008               	addwfc	(??_fputc+3)^0,w,c
  9597   003688  6EDA               	movwf	fsr2h,c
  9598   00368A  C001  FFDF         	movff	fputc@c,indf2
  9599   00368E  EE20 F003          	lfsr	2,3
  9600   003692  5003               	movf	fputc@fp^0,w,c
  9601   003694  26D9               	addwf	fsr2l,f,c
  9602   003696  5004               	movf	(fputc@fp+1)^0,w,c
  9603   003698  22DA               	addwfc	fsr2h,f,c
  9604   00369A  2ADE               	incf	postinc2,f,c
  9605   00369C  0E00               	movlw	0
  9606   00369E  22DD               	addwfc	postdec2,f,c
  9607   0036A0                     l1386:
  9608   0036A0  0012               	return		;funcret
  9609   0036A2                     __end_of_fputc:
  9610                           	callstack 0
  9611                           
  9612 ;; *************** function _putch *****************
  9613 ;; Defined at:
  9614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  c               1    wreg     unsigned char 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  c               1    0[COMRAM] unsigned char 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;Total ram usage:        0 bytes
  9633 ;; Hardware stack levels used: 1
  9634 ;; Hardware stack levels required when called: 1
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_fputc
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text57
  9643   004522                     __ptext57:
  9644                           	callstack 0
  9645   004522                     _putch:
  9646                           	callstack 23
  9647   004522  0012               	return		;funcret
  9648   004524                     __end_of_putch:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function _sendStringSerial4 *****************
  9652 ;; Defined at:
  9653 ;;		line 49 in file "serial.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  string          2    1[COMRAM] PTR unsigned char 
  9656 ;;		 -> main@data(100), 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;Total ram usage:        2 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 2
  9675 ;; This function calls:
  9676 ;;		_sendCharSerial4
  9677 ;; This function is called by:
  9678 ;;		_Color2String
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text58
  9683   004362                     __ptext58:
  9684                           	callstack 0
  9685   004362                     _sendStringSerial4:
  9686                           	callstack 27
  9687   004362                     
  9688                           ;serial.c: 52:     while(*string != 0){
  9689   004362  EFC0  F021         	goto	l3676
  9690   004366                     l3670:
  9691                           
  9692                           ;serial.c: 54:   sendCharSerial4(*string++);
  9693   004366  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9694   00436A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9695   00436E  50DF               	movf	indf2,w,c
  9696   004370  EC56  F022         	call	_sendCharSerial4
  9697   004374  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9698   004376  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9699   004378                     
  9700                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  9701   004378  0E6A               	movlw	106
  9702   00437A                     u4337:
  9703   00437A  2EE8               	decfsz	wreg,f,c
  9704   00437C  D7FE               	bra	u4337
  9705   00437E  D000               	nop2	
  9706   004380                     l3676:
  9707                           
  9708                           ;serial.c: 52:     while(*string != 0){
  9709   004380  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9710   004384  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9711   004388  50DF               	movf	indf2,w,c
  9712   00438A  A4D8               	btfss	status,2,c
  9713   00438C  EFCA  F021         	goto	u3141
  9714   004390  EFCC  F021         	goto	u3140
  9715   004394                     u3141:
  9716   004394  EFB3  F021         	goto	l3670
  9717   004398                     u3140:
  9718   004398  0012               	return		;funcret
  9719   00439A                     __end_of_sendStringSerial4:
  9720                           	callstack 0
  9721                           
  9722 ;; *************** function _sendCharSerial4 *****************
  9723 ;; Defined at:
  9724 ;;		line 34 in file "serial.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  charToSend      1    wreg     unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  charToSend      1    0[COMRAM] unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;Total ram usage:        1 bytes
  9743 ;; Hardware stack levels used: 1
  9744 ;; Hardware stack levels required when called: 1
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_sendStringSerial4
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text59
  9753   0044AC                     __ptext59:
  9754                           	callstack 0
  9755   0044AC                     _sendCharSerial4:
  9756                           	callstack 27
  9757                           
  9758                           ;incstack = 0
  9759                           ;sendCharSerial4@charToSend stored from wreg
  9760   0044AC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9761   0044AE                     l366:
  9762   0044AE  010E               	movlb	14	; () banked
  9763   0044B0  A537               	btfss	55,2,b	;volatile
  9764   0044B2  EF5D  F022         	goto	u2451
  9765   0044B6  EF5F  F022         	goto	u2450
  9766   0044BA                     u2451:
  9767   0044BA  EF57  F022         	goto	l366
  9768   0044BE                     u2450:
  9769   0044BE                     
  9770                           ; BSR set to: 14
  9771                           ;serial.c: 36:     TX4REG = charToSend;
  9772   0044BE  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9773   0044C2                     
  9774                           ; BSR set to: 14
  9775   0044C2  0012               	return		;funcret
  9776   0044C4                     __end_of_sendCharSerial4:
  9777                           	callstack 0
  9778                           
  9779 ;; *************** function _Hue2Colour *****************
  9780 ;; Defined at:
  9781 ;;		line 56 in file "colorfunctions.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
  9784 ;;		 -> colorf(22), 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;  colourname      2   14[COMRAM] PTR unsigned char 
  9787 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9788 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9789 ;;		 -> STR_2(1), 
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  2   12[COMRAM] PTR unsigned char 
  9792 ;; Registers used:
  9793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9803 ;;Total ram usage:        4 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; Hardware stack levels required when called: 2
  9806 ;; This function calls:
  9807 ;;		___flge
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;;		_Color2String
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text60
  9815   001554                     __ptext60:
  9816                           	callstack 0
  9817   001554                     _Hue2Colour:
  9818                           	callstack 28
  9819   001554                     
  9820                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
  9821   001554  0E10               	movlw	low (STR_1+15)
  9822   001556  6E0F               	movwf	Hue2Colour@colourname^0,c
  9823   001558  0E0E               	movlw	high (STR_1+15)
  9824   00155A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9825   00155C                     
  9826                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
  9827   00155C  0E00               	movlw	0
  9828   00155E  6E01               	movwf	___flge@ff1^0,c
  9829   001560  0E00               	movlw	0
  9830   001562  6E02               	movwf	(___flge@ff1+1)^0,c
  9831   001564  0EB0               	movlw	176
  9832   001566  6E03               	movwf	(___flge@ff1+2)^0,c
  9833   001568  0E43               	movlw	67
  9834   00156A  6E04               	movwf	(___flge@ff1+3)^0,c
  9835   00156C  EE20 F010          	lfsr	2,16
  9836   001570  500D               	movf	Hue2Colour@cf^0,w,c
  9837   001572  26D9               	addwf	fsr2l,f,c
  9838   001574  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9839   001576  22DA               	addwfc	fsr2h,f,c
  9840   001578  CFDE F005          	movff	postinc2,___flge@ff2
  9841   00157C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9842   001580  CFDE F007          	movff	postinc2,___flge@ff2+2
  9843   001584  CFDE F008          	movff	postinc2,___flge@ff2+3
  9844   001588  EC0D  F019         	call	___flge	;wreg free
  9845   00158C  B0D8               	btfsc	status,0,c
  9846   00158E  EFCB  F00A         	goto	u2911
  9847   001592  EFCD  F00A         	goto	u2910
  9848   001596                     u2911:
  9849   001596  EFFA  F00A         	goto	l3518
  9850   00159A                     u2910:
  9851   00159A  EE20 F010          	lfsr	2,16
  9852   00159E  500D               	movf	Hue2Colour@cf^0,w,c
  9853   0015A0  26D9               	addwf	fsr2l,f,c
  9854   0015A2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9855   0015A4  22DA               	addwfc	fsr2h,f,c
  9856   0015A6  CFDE F001          	movff	postinc2,___flge@ff1
  9857   0015AA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9858   0015AE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9859   0015B2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9860   0015B6  0E00               	movlw	0
  9861   0015B8  6E05               	movwf	___flge@ff2^0,c
  9862   0015BA  0E00               	movlw	0
  9863   0015BC  6E06               	movwf	(___flge@ff2+1)^0,c
  9864   0015BE  0EB4               	movlw	180
  9865   0015C0  6E07               	movwf	(___flge@ff2+2)^0,c
  9866   0015C2  0E43               	movlw	67
  9867   0015C4  6E08               	movwf	(___flge@ff2+3)^0,c
  9868   0015C6  EC0D  F019         	call	___flge	;wreg free
  9869   0015CA  B0D8               	btfsc	status,0,c
  9870   0015CC  EFEA  F00A         	goto	u2921
  9871   0015D0  EFEC  F00A         	goto	u2920
  9872   0015D4                     u2921:
  9873   0015D4  EFFA  F00A         	goto	l3518
  9874   0015D8                     u2920:
  9875   0015D8                     
  9876                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
  9877   0015D8  0E4C               	movlw	low STR_3
  9878   0015DA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9879   0015DC  0E0E               	movlw	high STR_3
  9880   0015DE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9881   0015E0                     
  9882                           ;colorfunctions.c: 65:         cf->colourindex=0;
  9883   0015E0  EE20 F014          	lfsr	2,20
  9884   0015E4  500D               	movf	Hue2Colour@cf^0,w,c
  9885   0015E6  26D9               	addwf	fsr2l,f,c
  9886   0015E8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9887   0015EA  22DA               	addwfc	fsr2h,f,c
  9888   0015EC  0E00               	movlw	0
  9889   0015EE  6EDE               	movwf	postinc2,c
  9890   0015F0  0E00               	movlw	0
  9891   0015F2  6EDD               	movwf	postdec2,c
  9892   0015F4                     l3518:
  9893                           
  9894                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
  9895   0015F4  0E00               	movlw	0
  9896   0015F6  6E01               	movwf	___flge@ff1^0,c
  9897   0015F8  0E00               	movlw	0
  9898   0015FA  6E02               	movwf	(___flge@ff1+1)^0,c
  9899   0015FC  0E96               	movlw	150
  9900   0015FE  6E03               	movwf	(___flge@ff1+2)^0,c
  9901   001600  0E42               	movlw	66
  9902   001602  6E04               	movwf	(___flge@ff1+3)^0,c
  9903   001604  EE20 F010          	lfsr	2,16
  9904   001608  500D               	movf	Hue2Colour@cf^0,w,c
  9905   00160A  26D9               	addwf	fsr2l,f,c
  9906   00160C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9907   00160E  22DA               	addwfc	fsr2h,f,c
  9908   001610  CFDE F005          	movff	postinc2,___flge@ff2
  9909   001614  CFDE F006          	movff	postinc2,___flge@ff2+1
  9910   001618  CFDE F007          	movff	postinc2,___flge@ff2+2
  9911   00161C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9912   001620  EC0D  F019         	call	___flge	;wreg free
  9913   001624  B0D8               	btfsc	status,0,c
  9914   001626  EF17  F00B         	goto	u2931
  9915   00162A  EF19  F00B         	goto	u2930
  9916   00162E                     u2931:
  9917   00162E  EF48  F00B         	goto	l3526
  9918   001632                     u2930:
  9919   001632  EE20 F010          	lfsr	2,16
  9920   001636  500D               	movf	Hue2Colour@cf^0,w,c
  9921   001638  26D9               	addwf	fsr2l,f,c
  9922   00163A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9923   00163C  22DA               	addwfc	fsr2h,f,c
  9924   00163E  CFDE F001          	movff	postinc2,___flge@ff1
  9925   001642  CFDE F002          	movff	postinc2,___flge@ff1+1
  9926   001646  CFDE F003          	movff	postinc2,___flge@ff1+2
  9927   00164A  CFDE F004          	movff	postinc2,___flge@ff1+3
  9928   00164E  0E00               	movlw	0
  9929   001650  6E05               	movwf	___flge@ff2^0,c
  9930   001652  0E00               	movlw	0
  9931   001654  6E06               	movwf	(___flge@ff2+1)^0,c
  9932   001656  0E9E               	movlw	158
  9933   001658  6E07               	movwf	(___flge@ff2+2)^0,c
  9934   00165A  0E42               	movlw	66
  9935   00165C  6E08               	movwf	(___flge@ff2+3)^0,c
  9936   00165E  EC0D  F019         	call	___flge	;wreg free
  9937   001662  B0D8               	btfsc	status,0,c
  9938   001664  EF36  F00B         	goto	u2941
  9939   001668  EF38  F00B         	goto	u2940
  9940   00166C                     u2941:
  9941   00166C  EF48  F00B         	goto	l3526
  9942   001670                     u2940:
  9943   001670                     
  9944                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
  9945   001670  0E3D               	movlw	low STR_4
  9946   001672  6E0F               	movwf	Hue2Colour@colourname^0,c
  9947   001674  0E0E               	movlw	high STR_4
  9948   001676  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9949   001678                     
  9950                           ;colorfunctions.c: 70:         cf->colourindex=1;
  9951   001678  EE20 F014          	lfsr	2,20
  9952   00167C  500D               	movf	Hue2Colour@cf^0,w,c
  9953   00167E  26D9               	addwf	fsr2l,f,c
  9954   001680  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9955   001682  22DA               	addwfc	fsr2h,f,c
  9956   001684  0E01               	movlw	1
  9957   001686  6EDE               	movwf	postinc2,c
  9958   001688  0E00               	movlw	0
  9959   00168A  6EDD               	movwf	postdec2,c
  9960                           
  9961                           ;colorfunctions.c: 71:     }
  9962   00168C  EF1C  F00D         	goto	l3574
  9963   001690                     l3526:
  9964   001690  0E00               	movlw	0
  9965   001692  6E01               	movwf	___flge@ff1^0,c
  9966   001694  0E00               	movlw	0
  9967   001696  6E02               	movwf	(___flge@ff1+1)^0,c
  9968   001698  0E11               	movlw	17
  9969   00169A  6E03               	movwf	(___flge@ff1+2)^0,c
  9970   00169C  0E43               	movlw	67
  9971   00169E  6E04               	movwf	(___flge@ff1+3)^0,c
  9972   0016A0  EE20 F010          	lfsr	2,16
  9973   0016A4  500D               	movf	Hue2Colour@cf^0,w,c
  9974   0016A6  26D9               	addwf	fsr2l,f,c
  9975   0016A8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9976   0016AA  22DA               	addwfc	fsr2h,f,c
  9977   0016AC  CFDE F005          	movff	postinc2,___flge@ff2
  9978   0016B0  CFDE F006          	movff	postinc2,___flge@ff2+1
  9979   0016B4  CFDE F007          	movff	postinc2,___flge@ff2+2
  9980   0016B8  CFDE F008          	movff	postinc2,___flge@ff2+3
  9981   0016BC  EC0D  F019         	call	___flge	;wreg free
  9982   0016C0  B0D8               	btfsc	status,0,c
  9983   0016C2  EF65  F00B         	goto	u2951
  9984   0016C6  EF67  F00B         	goto	u2950
  9985   0016CA                     u2951:
  9986   0016CA  EF96  F00B         	goto	l3534
  9987   0016CE                     u2950:
  9988   0016CE  EE20 F010          	lfsr	2,16
  9989   0016D2  500D               	movf	Hue2Colour@cf^0,w,c
  9990   0016D4  26D9               	addwf	fsr2l,f,c
  9991   0016D6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9992   0016D8  22DA               	addwfc	fsr2h,f,c
  9993   0016DA  CFDE F001          	movff	postinc2,___flge@ff1
  9994   0016DE  CFDE F002          	movff	postinc2,___flge@ff1+1
  9995   0016E2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9996   0016E6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9997   0016EA  0E00               	movlw	0
  9998   0016EC  6E05               	movwf	___flge@ff2^0,c
  9999   0016EE  0E00               	movlw	0
 10000   0016F0  6E06               	movwf	(___flge@ff2+1)^0,c
 10001   0016F2  0E24               	movlw	36
 10002   0016F4  6E07               	movwf	(___flge@ff2+2)^0,c
 10003   0016F6  0E43               	movlw	67
 10004   0016F8  6E08               	movwf	(___flge@ff2+3)^0,c
 10005   0016FA  EC0D  F019         	call	___flge	;wreg free
 10006   0016FE  B0D8               	btfsc	status,0,c
 10007   001700  EF84  F00B         	goto	u2961
 10008   001704  EF86  F00B         	goto	u2960
 10009   001708                     u2961:
 10010   001708  EF96  F00B         	goto	l3534
 10011   00170C                     u2960:
 10012   00170C                     
 10013                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10014   00170C  0E1C               	movlw	low STR_5
 10015   00170E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10016   001710  0E0E               	movlw	high STR_5
 10017   001712  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10018   001714                     
 10019                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10020   001714  EE20 F014          	lfsr	2,20
 10021   001718  500D               	movf	Hue2Colour@cf^0,w,c
 10022   00171A  26D9               	addwf	fsr2l,f,c
 10023   00171C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10024   00171E  22DA               	addwfc	fsr2h,f,c
 10025   001720  0E02               	movlw	2
 10026   001722  6EDE               	movwf	postinc2,c
 10027   001724  0E00               	movlw	0
 10028   001726  6EDD               	movwf	postdec2,c
 10029                           
 10030                           ;colorfunctions.c: 76:     }
 10031   001728  EF1C  F00D         	goto	l3574
 10032   00172C                     l3534:
 10033   00172C  0E00               	movlw	0
 10034   00172E  6E01               	movwf	___flge@ff1^0,c
 10035   001730  0E00               	movlw	0
 10036   001732  6E02               	movwf	(___flge@ff1+1)^0,c
 10037   001734  0EA8               	movlw	168
 10038   001736  6E03               	movwf	(___flge@ff1+2)^0,c
 10039   001738  0E41               	movlw	65
 10040   00173A  6E04               	movwf	(___flge@ff1+3)^0,c
 10041   00173C  EE20 F010          	lfsr	2,16
 10042   001740  500D               	movf	Hue2Colour@cf^0,w,c
 10043   001742  26D9               	addwf	fsr2l,f,c
 10044   001744  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10045   001746  22DA               	addwfc	fsr2h,f,c
 10046   001748  CFDE F005          	movff	postinc2,___flge@ff2
 10047   00174C  CFDE F006          	movff	postinc2,___flge@ff2+1
 10048   001750  CFDE F007          	movff	postinc2,___flge@ff2+2
 10049   001754  CFDE F008          	movff	postinc2,___flge@ff2+3
 10050   001758  EC0D  F019         	call	___flge	;wreg free
 10051   00175C  B0D8               	btfsc	status,0,c
 10052   00175E  EFB3  F00B         	goto	u2971
 10053   001762  EFB5  F00B         	goto	u2970
 10054   001766                     u2971:
 10055   001766  EFE4  F00B         	goto	l3542
 10056   00176A                     u2970:
 10057   00176A  EE20 F010          	lfsr	2,16
 10058   00176E  500D               	movf	Hue2Colour@cf^0,w,c
 10059   001770  26D9               	addwf	fsr2l,f,c
 10060   001772  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10061   001774  22DA               	addwfc	fsr2h,f,c
 10062   001776  CFDE F001          	movff	postinc2,___flge@ff1
 10063   00177A  CFDE F002          	movff	postinc2,___flge@ff1+1
 10064   00177E  CFDE F003          	movff	postinc2,___flge@ff1+2
 10065   001782  CFDE F004          	movff	postinc2,___flge@ff1+3
 10066   001786  0E00               	movlw	0
 10067   001788  6E05               	movwf	___flge@ff2^0,c
 10068   00178A  0E00               	movlw	0
 10069   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
 10070   00178E  0EC8               	movlw	200
 10071   001790  6E07               	movwf	(___flge@ff2+2)^0,c
 10072   001792  0E41               	movlw	65
 10073   001794  6E08               	movwf	(___flge@ff2+3)^0,c
 10074   001796  EC0D  F019         	call	___flge	;wreg free
 10075   00179A  B0D8               	btfsc	status,0,c
 10076   00179C  EFD2  F00B         	goto	u2981
 10077   0017A0  EFD4  F00B         	goto	u2980
 10078   0017A4                     u2981:
 10079   0017A4  EFE4  F00B         	goto	l3542
 10080   0017A8                     u2980:
 10081   0017A8                     
 10082                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10083   0017A8  0E36               	movlw	low STR_6
 10084   0017AA  6E0F               	movwf	Hue2Colour@colourname^0,c
 10085   0017AC  0E0E               	movlw	high STR_6
 10086   0017AE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10087   0017B0                     
 10088                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10089   0017B0  EE20 F014          	lfsr	2,20
 10090   0017B4  500D               	movf	Hue2Colour@cf^0,w,c
 10091   0017B6  26D9               	addwf	fsr2l,f,c
 10092   0017B8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10093   0017BA  22DA               	addwfc	fsr2h,f,c
 10094   0017BC  0E03               	movlw	3
 10095   0017BE  6EDE               	movwf	postinc2,c
 10096   0017C0  0E00               	movlw	0
 10097   0017C2  6EDD               	movwf	postdec2,c
 10098                           
 10099                           ;colorfunctions.c: 81:     }
 10100   0017C4  EF1C  F00D         	goto	l3574
 10101   0017C8                     l3542:
 10102   0017C8  0E00               	movlw	0
 10103   0017CA  6E01               	movwf	___flge@ff1^0,c
 10104   0017CC  0E00               	movlw	0
 10105   0017CE  6E02               	movwf	(___flge@ff1+1)^0,c
 10106   0017D0  0E70               	movlw	112
 10107   0017D2  6E03               	movwf	(___flge@ff1+2)^0,c
 10108   0017D4  0E41               	movlw	65
 10109   0017D6  6E04               	movwf	(___flge@ff1+3)^0,c
 10110   0017D8  EE20 F010          	lfsr	2,16
 10111   0017DC  500D               	movf	Hue2Colour@cf^0,w,c
 10112   0017DE  26D9               	addwf	fsr2l,f,c
 10113   0017E0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10114   0017E2  22DA               	addwfc	fsr2h,f,c
 10115   0017E4  CFDE F005          	movff	postinc2,___flge@ff2
 10116   0017E8  CFDE F006          	movff	postinc2,___flge@ff2+1
 10117   0017EC  CFDE F007          	movff	postinc2,___flge@ff2+2
 10118   0017F0  CFDE F008          	movff	postinc2,___flge@ff2+3
 10119   0017F4  EC0D  F019         	call	___flge	;wreg free
 10120   0017F8  B0D8               	btfsc	status,0,c
 10121   0017FA  EF01  F00C         	goto	u2991
 10122   0017FE  EF03  F00C         	goto	u2990
 10123   001802                     u2991:
 10124   001802  EF32  F00C         	goto	l3550
 10125   001806                     u2990:
 10126   001806  EE20 F010          	lfsr	2,16
 10127   00180A  500D               	movf	Hue2Colour@cf^0,w,c
 10128   00180C  26D9               	addwf	fsr2l,f,c
 10129   00180E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10130   001810  22DA               	addwfc	fsr2h,f,c
 10131   001812  CFDE F001          	movff	postinc2,___flge@ff1
 10132   001816  CFDE F002          	movff	postinc2,___flge@ff1+1
 10133   00181A  CFDE F003          	movff	postinc2,___flge@ff1+2
 10134   00181E  CFDE F004          	movff	postinc2,___flge@ff1+3
 10135   001822  0E00               	movlw	0
 10136   001824  6E05               	movwf	___flge@ff2^0,c
 10137   001826  0E00               	movlw	0
 10138   001828  6E06               	movwf	(___flge@ff2+1)^0,c
 10139   00182A  0E98               	movlw	152
 10140   00182C  6E07               	movwf	(___flge@ff2+2)^0,c
 10141   00182E  0E41               	movlw	65
 10142   001830  6E08               	movwf	(___flge@ff2+3)^0,c
 10143   001832  EC0D  F019         	call	___flge	;wreg free
 10144   001836  B0D8               	btfsc	status,0,c
 10145   001838  EF20  F00C         	goto	u3001
 10146   00183C  EF22  F00C         	goto	u3000
 10147   001840                     u3001:
 10148   001840  EF32  F00C         	goto	l3550
 10149   001844                     u3000:
 10150   001844                     
 10151                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 10152   001844  0E43               	movlw	low STR_7
 10153   001846  6E0F               	movwf	Hue2Colour@colourname^0,c
 10154   001848  0E0E               	movlw	high STR_7
 10155   00184A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10156   00184C                     
 10157                           ;colorfunctions.c: 85:         cf->colourindex=4;
 10158   00184C  EE20 F014          	lfsr	2,20
 10159   001850  500D               	movf	Hue2Colour@cf^0,w,c
 10160   001852  26D9               	addwf	fsr2l,f,c
 10161   001854  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10162   001856  22DA               	addwfc	fsr2h,f,c
 10163   001858  0E04               	movlw	4
 10164   00185A  6EDE               	movwf	postinc2,c
 10165   00185C  0E00               	movlw	0
 10166   00185E  6EDD               	movwf	postdec2,c
 10167                           
 10168                           ;colorfunctions.c: 86:     }
 10169   001860  EF1C  F00D         	goto	l3574
 10170   001864                     l3550:
 10171   001864  0E00               	movlw	0
 10172   001866  6E01               	movwf	___flge@ff1^0,c
 10173   001868  0E00               	movlw	0
 10174   00186A  6E02               	movwf	(___flge@ff1+1)^0,c
 10175   00186C  0EE0               	movlw	224
 10176   00186E  6E03               	movwf	(___flge@ff1+2)^0,c
 10177   001870  0E40               	movlw	64
 10178   001872  6E04               	movwf	(___flge@ff1+3)^0,c
 10179   001874  EE20 F010          	lfsr	2,16
 10180   001878  500D               	movf	Hue2Colour@cf^0,w,c
 10181   00187A  26D9               	addwf	fsr2l,f,c
 10182   00187C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10183   00187E  22DA               	addwfc	fsr2h,f,c
 10184   001880  CFDE F005          	movff	postinc2,___flge@ff2
 10185   001884  CFDE F006          	movff	postinc2,___flge@ff2+1
 10186   001888  CFDE F007          	movff	postinc2,___flge@ff2+2
 10187   00188C  CFDE F008          	movff	postinc2,___flge@ff2+3
 10188   001890  EC0D  F019         	call	___flge	;wreg free
 10189   001894  B0D8               	btfsc	status,0,c
 10190   001896  EF4F  F00C         	goto	u3011
 10191   00189A  EF51  F00C         	goto	u3010
 10192   00189E                     u3011:
 10193   00189E  EF80  F00C         	goto	l3558
 10194   0018A2                     u3010:
 10195   0018A2  EE20 F010          	lfsr	2,16
 10196   0018A6  500D               	movf	Hue2Colour@cf^0,w,c
 10197   0018A8  26D9               	addwf	fsr2l,f,c
 10198   0018AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10199   0018AC  22DA               	addwfc	fsr2h,f,c
 10200   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
 10201   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
 10202   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
 10203   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
 10204   0018BE  0E00               	movlw	0
 10205   0018C0  6E05               	movwf	___flge@ff2^0,c
 10206   0018C2  0E00               	movlw	0
 10207   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
 10208   0018C6  0E10               	movlw	16
 10209   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
 10210   0018CA  0E41               	movlw	65
 10211   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
 10212   0018CE  EC0D  F019         	call	___flge	;wreg free
 10213   0018D2  B0D8               	btfsc	status,0,c
 10214   0018D4  EF6E  F00C         	goto	u3021
 10215   0018D8  EF70  F00C         	goto	u3020
 10216   0018DC                     u3021:
 10217   0018DC  EF80  F00C         	goto	l3558
 10218   0018E0                     u3020:
 10219   0018E0                     
 10220                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10221   0018E0  0E2F               	movlw	low STR_8
 10222   0018E2  6E0F               	movwf	Hue2Colour@colourname^0,c
 10223   0018E4  0E0E               	movlw	high STR_8
 10224   0018E6  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10225   0018E8                     
 10226                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10227   0018E8  EE20 F014          	lfsr	2,20
 10228   0018EC  500D               	movf	Hue2Colour@cf^0,w,c
 10229   0018EE  26D9               	addwf	fsr2l,f,c
 10230   0018F0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10231   0018F2  22DA               	addwfc	fsr2h,f,c
 10232   0018F4  0E05               	movlw	5
 10233   0018F6  6EDE               	movwf	postinc2,c
 10234   0018F8  0E00               	movlw	0
 10235   0018FA  6EDD               	movwf	postdec2,c
 10236                           
 10237                           ;colorfunctions.c: 91:     }
 10238   0018FC  EF1C  F00D         	goto	l3574
 10239   001900                     l3558:
 10240   001900  0E00               	movlw	0
 10241   001902  6E01               	movwf	___flge@ff1^0,c
 10242   001904  0E00               	movlw	0
 10243   001906  6E02               	movwf	(___flge@ff1+1)^0,c
 10244   001908  0EAA               	movlw	170
 10245   00190A  6E03               	movwf	(___flge@ff1+2)^0,c
 10246   00190C  0E42               	movlw	66
 10247   00190E  6E04               	movwf	(___flge@ff1+3)^0,c
 10248   001910  EE20 F010          	lfsr	2,16
 10249   001914  500D               	movf	Hue2Colour@cf^0,w,c
 10250   001916  26D9               	addwf	fsr2l,f,c
 10251   001918  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10252   00191A  22DA               	addwfc	fsr2h,f,c
 10253   00191C  CFDE F005          	movff	postinc2,___flge@ff2
 10254   001920  CFDE F006          	movff	postinc2,___flge@ff2+1
 10255   001924  CFDE F007          	movff	postinc2,___flge@ff2+2
 10256   001928  CFDE F008          	movff	postinc2,___flge@ff2+3
 10257   00192C  EC0D  F019         	call	___flge	;wreg free
 10258   001930  B0D8               	btfsc	status,0,c
 10259   001932  EF9D  F00C         	goto	u3031
 10260   001936  EF9F  F00C         	goto	u3030
 10261   00193A                     u3031:
 10262   00193A  EFCE  F00C         	goto	l3566
 10263   00193E                     u3030:
 10264   00193E  EE20 F010          	lfsr	2,16
 10265   001942  500D               	movf	Hue2Colour@cf^0,w,c
 10266   001944  26D9               	addwf	fsr2l,f,c
 10267   001946  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10268   001948  22DA               	addwfc	fsr2h,f,c
 10269   00194A  CFDE F001          	movff	postinc2,___flge@ff1
 10270   00194E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10271   001952  CFDE F003          	movff	postinc2,___flge@ff1+2
 10272   001956  CFDE F004          	movff	postinc2,___flge@ff1+3
 10273   00195A  0E00               	movlw	0
 10274   00195C  6E05               	movwf	___flge@ff2^0,c
 10275   00195E  0E00               	movlw	0
 10276   001960  6E06               	movwf	(___flge@ff2+1)^0,c
 10277   001962  0EBC               	movlw	188
 10278   001964  6E07               	movwf	(___flge@ff2+2)^0,c
 10279   001966  0E42               	movlw	66
 10280   001968  6E08               	movwf	(___flge@ff2+3)^0,c
 10281   00196A  EC0D  F019         	call	___flge	;wreg free
 10282   00196E  B0D8               	btfsc	status,0,c
 10283   001970  EFBC  F00C         	goto	u3041
 10284   001974  EFBE  F00C         	goto	u3040
 10285   001978                     u3041:
 10286   001978  EFCE  F00C         	goto	l3566
 10287   00197C                     u3040:
 10288   00197C                     
 10289                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 10290   00197C  0E11               	movlw	low STR_9
 10291   00197E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10292   001980  0E0E               	movlw	high STR_9
 10293   001982  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10294   001984                     
 10295                           ;colorfunctions.c: 95:         cf->colourindex=6;
 10296   001984  EE20 F014          	lfsr	2,20
 10297   001988  500D               	movf	Hue2Colour@cf^0,w,c
 10298   00198A  26D9               	addwf	fsr2l,f,c
 10299   00198C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10300   00198E  22DA               	addwfc	fsr2h,f,c
 10301   001990  0E06               	movlw	6
 10302   001992  6EDE               	movwf	postinc2,c
 10303   001994  0E00               	movlw	0
 10304   001996  6EDD               	movwf	postdec2,c
 10305                           
 10306                           ;colorfunctions.c: 96:     }
 10307   001998  EF1C  F00D         	goto	l3574
 10308   00199C                     l3566:
 10309   00199C  0E00               	movlw	0
 10310   00199E  6E01               	movwf	___flge@ff1^0,c
 10311   0019A0  0E00               	movlw	0
 10312   0019A2  6E02               	movwf	(___flge@ff1+1)^0,c
 10313   0019A4  0ED0               	movlw	208
 10314   0019A6  6E03               	movwf	(___flge@ff1+2)^0,c
 10315   0019A8  0E41               	movlw	65
 10316   0019AA  6E04               	movwf	(___flge@ff1+3)^0,c
 10317   0019AC  EE20 F010          	lfsr	2,16
 10318   0019B0  500D               	movf	Hue2Colour@cf^0,w,c
 10319   0019B2  26D9               	addwf	fsr2l,f,c
 10320   0019B4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10321   0019B6  22DA               	addwfc	fsr2h,f,c
 10322   0019B8  CFDE F005          	movff	postinc2,___flge@ff2
 10323   0019BC  CFDE F006          	movff	postinc2,___flge@ff2+1
 10324   0019C0  CFDE F007          	movff	postinc2,___flge@ff2+2
 10325   0019C4  CFDE F008          	movff	postinc2,___flge@ff2+3
 10326   0019C8  EC0D  F019         	call	___flge	;wreg free
 10327   0019CC  B0D8               	btfsc	status,0,c
 10328   0019CE  EFEB  F00C         	goto	u3051
 10329   0019D2  EFED  F00C         	goto	u3050
 10330   0019D6                     u3051:
 10331   0019D6  EF1C  F00D         	goto	l568
 10332   0019DA                     u3050:
 10333   0019DA  EE20 F010          	lfsr	2,16
 10334   0019DE  500D               	movf	Hue2Colour@cf^0,w,c
 10335   0019E0  26D9               	addwf	fsr2l,f,c
 10336   0019E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10337   0019E4  22DA               	addwfc	fsr2h,f,c
 10338   0019E6  CFDE F001          	movff	postinc2,___flge@ff1
 10339   0019EA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10340   0019EE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10341   0019F2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10342   0019F6  0E00               	movlw	0
 10343   0019F8  6E05               	movwf	___flge@ff2^0,c
 10344   0019FA  0E00               	movlw	0
 10345   0019FC  6E06               	movwf	(___flge@ff2+1)^0,c
 10346   0019FE  0EE8               	movlw	232
 10347   001A00  6E07               	movwf	(___flge@ff2+2)^0,c
 10348   001A02  0E41               	movlw	65
 10349   001A04  6E08               	movwf	(___flge@ff2+3)^0,c
 10350   001A06  EC0D  F019         	call	___flge	;wreg free
 10351   001A0A  B0D8               	btfsc	status,0,c
 10352   001A0C  EF0A  F00D         	goto	u3061
 10353   001A10  EF0C  F00D         	goto	u3060
 10354   001A14                     u3061:
 10355   001A14  EF1C  F00D         	goto	l568
 10356   001A18                     u3060:
 10357   001A18                     
 10358                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 10359   001A18  0E26               	movlw	low STR_10
 10360   001A1A  6E0F               	movwf	Hue2Colour@colourname^0,c
 10361   001A1C  0E0E               	movlw	high STR_10
 10362   001A1E  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10363   001A20                     
 10364                           ;colorfunctions.c: 100:         cf->colourindex=7;
 10365   001A20  EE20 F014          	lfsr	2,20
 10366   001A24  500D               	movf	Hue2Colour@cf^0,w,c
 10367   001A26  26D9               	addwf	fsr2l,f,c
 10368   001A28  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10369   001A2A  22DA               	addwfc	fsr2h,f,c
 10370   001A2C  0E07               	movlw	7
 10371   001A2E  6EDE               	movwf	postinc2,c
 10372   001A30  0E00               	movlw	0
 10373   001A32  6EDD               	movwf	postdec2,c
 10374   001A34  EF1C  F00D         	goto	l3574
 10375   001A38                     l568:
 10376   001A38                     l3574:
 10377                           
 10378                           ;colorfunctions.c: 102:     return colourname;
 10379   001A38  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 10380   001A3C  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 10381   001A40  0012               	return		;funcret
 10382   001A42                     __end_of_Hue2Colour:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function ___flge *****************
 10386 ;; Defined at:
 10387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 10390 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;		None               void
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;Total ram usage:       12 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 1
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_main
 10413 ;;		_RGB2Hue
 10414 ;;		_Hue2Colour
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text61
 10419   00321A                     __ptext61:
 10420                           	callstack 0
 10421   00321A                     ___flge:
 10422                           	callstack 29
 10423   00321A  0E00               	movlw	0
 10424   00321C  1401               	andwf	___flge@ff1^0,w,c
 10425   00321E  6E09               	movwf	??___flge^0,c
 10426   003220  0E00               	movlw	0
 10427   003222  1402               	andwf	(___flge@ff1+1)^0,w,c
 10428   003224  6E0A               	movwf	(??___flge+1)^0,c
 10429   003226  0E80               	movlw	128
 10430   003228  1403               	andwf	(___flge@ff1+2)^0,w,c
 10431   00322A  6E0B               	movwf	(??___flge+2)^0,c
 10432   00322C  0E7F               	movlw	127
 10433   00322E  1404               	andwf	(___flge@ff1+3)^0,w,c
 10434   003230  6E0C               	movwf	(??___flge+3)^0,c
 10435   003232  5009               	movf	??___flge^0,w,c
 10436   003234  100A               	iorwf	(??___flge+1)^0,w,c
 10437   003236  100B               	iorwf	(??___flge+2)^0,w,c
 10438   003238  100C               	iorwf	(??___flge+3)^0,w,c
 10439   00323A  A4D8               	btfss	status,2,c
 10440   00323C  EF22  F019         	goto	u2851
 10441   003240  EF24  F019         	goto	u2850
 10442   003244                     u2851:
 10443   003244  EF2C  F019         	goto	l3468
 10444   003248                     u2850:
 10445   003248  0E00               	movlw	0
 10446   00324A  6E01               	movwf	___flge@ff1^0,c
 10447   00324C  0E00               	movlw	0
 10448   00324E  6E02               	movwf	(___flge@ff1+1)^0,c
 10449   003250  0E00               	movlw	0
 10450   003252  6E03               	movwf	(___flge@ff1+2)^0,c
 10451   003254  0E00               	movlw	0
 10452   003256  6E04               	movwf	(___flge@ff1+3)^0,c
 10453   003258                     l3468:
 10454   003258  0E00               	movlw	0
 10455   00325A  1405               	andwf	___flge@ff2^0,w,c
 10456   00325C  6E09               	movwf	??___flge^0,c
 10457   00325E  0E00               	movlw	0
 10458   003260  1406               	andwf	(___flge@ff2+1)^0,w,c
 10459   003262  6E0A               	movwf	(??___flge+1)^0,c
 10460   003264  0E80               	movlw	128
 10461   003266  1407               	andwf	(___flge@ff2+2)^0,w,c
 10462   003268  6E0B               	movwf	(??___flge+2)^0,c
 10463   00326A  0E7F               	movlw	127
 10464   00326C  1408               	andwf	(___flge@ff2+3)^0,w,c
 10465   00326E  6E0C               	movwf	(??___flge+3)^0,c
 10466   003270  5009               	movf	??___flge^0,w,c
 10467   003272  100A               	iorwf	(??___flge+1)^0,w,c
 10468   003274  100B               	iorwf	(??___flge+2)^0,w,c
 10469   003276  100C               	iorwf	(??___flge+3)^0,w,c
 10470   003278  A4D8               	btfss	status,2,c
 10471   00327A  EF41  F019         	goto	u2861
 10472   00327E  EF43  F019         	goto	u2860
 10473   003282                     u2861:
 10474   003282  EF4B  F019         	goto	l3472
 10475   003286                     u2860:
 10476   003286  0E00               	movlw	0
 10477   003288  6E05               	movwf	___flge@ff2^0,c
 10478   00328A  0E00               	movlw	0
 10479   00328C  6E06               	movwf	(___flge@ff2+1)^0,c
 10480   00328E  0E00               	movlw	0
 10481   003290  6E07               	movwf	(___flge@ff2+2)^0,c
 10482   003292  0E00               	movlw	0
 10483   003294  6E08               	movwf	(___flge@ff2+3)^0,c
 10484   003296                     l3472:
 10485   003296  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10486   003298  EF50  F019         	goto	u2871
 10487   00329C  EF52  F019         	goto	u2870
 10488   0032A0                     u2871:
 10489   0032A0  EF5B  F019         	goto	l3476
 10490   0032A4                     u2870:
 10491   0032A4  6C01               	negf	___flge@ff1^0,c
 10492   0032A6  1E02               	comf	(___flge@ff1+1)^0,f,c
 10493   0032A8  B0D8               	btfsc	status,0,c
 10494   0032AA  2A02               	incf	(___flge@ff1+1)^0,f,c
 10495   0032AC  1E03               	comf	(___flge@ff1+2)^0,f,c
 10496   0032AE  B0D8               	btfsc	status,0,c
 10497   0032B0  2A03               	incf	(___flge@ff1+2)^0,f,c
 10498   0032B2  0E80               	movlw	128
 10499   0032B4  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10500   0032B6                     l3476:
 10501   0032B6  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10502   0032B8  EF60  F019         	goto	u2881
 10503   0032BC  EF62  F019         	goto	u2880
 10504   0032C0                     u2881:
 10505   0032C0  EF6B  F019         	goto	l898
 10506   0032C4                     u2880:
 10507   0032C4  6C05               	negf	___flge@ff2^0,c
 10508   0032C6  1E06               	comf	(___flge@ff2+1)^0,f,c
 10509   0032C8  B0D8               	btfsc	status,0,c
 10510   0032CA  2A06               	incf	(___flge@ff2+1)^0,f,c
 10511   0032CC  1E07               	comf	(___flge@ff2+2)^0,f,c
 10512   0032CE  B0D8               	btfsc	status,0,c
 10513   0032D0  2A07               	incf	(___flge@ff2+2)^0,f,c
 10514   0032D2  0E80               	movlw	128
 10515   0032D4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10516   0032D6                     l898:
 10517   0032D6  0E00               	movlw	0
 10518   0032D8  1A01               	xorwf	___flge@ff1^0,f,c
 10519   0032DA  0E00               	movlw	0
 10520   0032DC  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10521   0032DE  0E00               	movlw	0
 10522   0032E0  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10523   0032E2  0E80               	movlw	128
 10524   0032E4  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10525   0032E6  0E00               	movlw	0
 10526   0032E8  1A05               	xorwf	___flge@ff2^0,f,c
 10527   0032EA  0E00               	movlw	0
 10528   0032EC  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10529   0032EE  0E00               	movlw	0
 10530   0032F0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10531   0032F2  0E80               	movlw	128
 10532   0032F4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10533   0032F6  5005               	movf	___flge@ff2^0,w,c
 10534   0032F8  5C01               	subwf	___flge@ff1^0,w,c
 10535   0032FA  5006               	movf	(___flge@ff2+1)^0,w,c
 10536   0032FC  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10537   0032FE  5007               	movf	(___flge@ff2+2)^0,w,c
 10538   003300  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10539   003302  5008               	movf	(___flge@ff2+3)^0,w,c
 10540   003304  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10541   003306  B0D8               	btfsc	status,0,c
 10542   003308  EF88  F019         	goto	u2891
 10543   00330C  EF8A  F019         	goto	u2890
 10544   003310                     u2891:
 10545   003310  EF8D  F019         	goto	l3482
 10546   003314                     u2890:
 10547   003314  90D8               	bcf	status,0,c
 10548   003316  EF8E  F019         	goto	l903
 10549   00331A                     l3482:
 10550   00331A  80D8               	bsf	status,0,c
 10551   00331C                     l903:
 10552   00331C  0012               	return		;funcret
 10553   00331E                     __end_of___flge:
 10554                           	callstack 0
 10555                           
 10556 ;; *************** function _ClickLEDOn *****************
 10557 ;; Defined at:
 10558 ;;		line 93 in file "colorclick.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  power           1    wreg     unsigned char 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  power           1    0[COMRAM] unsigned char 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10576 ;;Total ram usage:        1 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 1
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_main
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text62
 10587   00439A                     __ptext62:
 10588                           	callstack 0
 10589   00439A                     _ClickLEDOn:
 10590                           	callstack 29
 10591                           
 10592                           ;incstack = 0
 10593                           ;ClickLEDOn@power stored from wreg
 10594   00439A  6E01               	movwf	ClickLEDOn@power^0,c
 10595   00439C                     
 10596                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10597   00439C  5001               	movf	ClickLEDOn@power^0,w,c
 10598   00439E  B4D8               	btfsc	status,2,c
 10599   0043A0  EFD4  F021         	goto	u3771
 10600   0043A4  EFD6  F021         	goto	u3770
 10601   0043A8                     u3771:
 10602   0043A8  EFDB  F021         	goto	l4162
 10603   0043AC                     u3770:
 10604   0043AC                     
 10605                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10606   0043AC  827F               	bsf	127,1,c	;volatile
 10607                           
 10608                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10609   0043AE  8879               	bsf	121,4,c	;volatile
 10610                           
 10611                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10612   0043B0  8E7E               	bsf	126,7,c	;volatile
 10613                           
 10614                           ;colorclick.c: 99:     }
 10615   0043B2  EFE6  F021         	goto	l430
 10616   0043B6                     l4162:
 10617   0043B6  5001               	movf	ClickLEDOn@power^0,w,c
 10618   0043B8  A4D8               	btfss	status,2,c
 10619   0043BA  EFE1  F021         	goto	u3781
 10620   0043BE  EFE3  F021         	goto	u3780
 10621   0043C2                     u3781:
 10622   0043C2  EFE6  F021         	goto	l430
 10623   0043C6                     u3780:
 10624   0043C6                     
 10625                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10626   0043C6  927F               	bcf	127,1,c	;volatile
 10627                           
 10628                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10629   0043C8  9879               	bcf	121,4,c	;volatile
 10630                           
 10631                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10632   0043CA  9E7E               	bcf	126,7,c	;volatile
 10633   0043CC                     l430:
 10634   0043CC  0012               	return		;funcret
 10635   0043CE                     __end_of_ClickLEDOn:
 10636                           	callstack 0
 10637                           
 10638 ;; *************** function _HighISR *****************
 10639 ;; Defined at:
 10640 ;;		line 25 in file "interrupts.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;		None
 10643 ;; Auto vars:     Size  Location     Type
 10644 ;;		None
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  1    wreg      void 
 10647 ;; Registers used:
 10648 ;;		wreg, status,2
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/0
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;Total ram usage:        0 bytes
 10659 ;; Hardware stack levels used: 1
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		Interrupt level 2
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	intcode
 10668   000008                     __pintcode:
 10669                           	callstack 0
 10670   000008                     _HighISR:
 10671                           	callstack 23
 10672                           
 10673                           ;incstack = 0
 10674   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10675   00000A                     
 10676                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 10677   00000A  010E               	movlb	14	; () banked
 10678   00000C  AB33               	btfss	51,5,b	;volatile
 10679   00000E  EF0B  F000         	goto	i2u409_41
 10680   000012  EF0D  F000         	goto	i2u409_40
 10681   000016                     i2u409_41:
 10682   000016  EF14  F000         	goto	i2l630
 10683   00001A                     i2u409_40:
 10684   00001A                     
 10685                           ; BSR set to: 14
 10686                           ;interrupts.c: 29:     maxTime = 1;
 10687   00001A  0E00               	movlw	0
 10688   00001C  0100               	movlb	0	; () banked
 10689   00001E  6FDF               	movwf	(_maxTime+1)& (0+255),b	;volatile
 10690   000020  0E01               	movlw	1
 10691   000022  6FDE               	movwf	_maxTime& (0+255),b	;volatile
 10692   000024                     
 10693                           ; BSR set to: 0
 10694                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 10695   000024  010E               	movlb	14	; () banked
 10696   000026  9B33               	bcf	51,5,b	;volatile
 10697   000028                     i2l630:
 10698                           
 10699                           ; BSR set to: 14
 10700   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10701   00002A  0011               	retfie		f
 10702   00002C                     __end_of_HighISR:
 10703                           	callstack 0
 10704                           
 10705                           	psect	rparam
 10706   000000                     
 10707                           	psect	temp
 10708   00005F                     btemp:
 10709                           	callstack 0
 10710   00005F                     	ds	1
 10711   000000                     int$flags	set	btemp
 10712   000000                     wtemp8	set	btemp+1
 10713   000000                     ttemp5	set	btemp+1
 10714   000000                     ttemp6	set	btemp+4
 10715   000000                     ttemp7	set	btemp+8
 10716                           
 10717                           	psect	idloc
 10718                           
 10719                           ;Config register IDLOC0 @ 0x200000
 10720                           ;	unspecified, using default values
 10721   200000                     	org	2097152
 10722   200000  0FFF               	dw	4095
 10723                           
 10724                           ;Config register IDLOC1 @ 0x200002
 10725                           ;	unspecified, using default values
 10726   200002                     	org	2097154
 10727   200002  0FFF               	dw	4095
 10728                           
 10729                           ;Config register IDLOC2 @ 0x200004
 10730                           ;	unspecified, using default values
 10731   200004                     	org	2097156
 10732   200004  0FFF               	dw	4095
 10733                           
 10734                           ;Config register IDLOC3 @ 0x200006
 10735                           ;	unspecified, using default values
 10736   200006                     	org	2097158
 10737   200006  0FFF               	dw	4095
 10738                           
 10739                           ;Config register IDLOC4 @ 0x200008
 10740                           ;	unspecified, using default values
 10741   200008                     	org	2097160
 10742   200008  0FFF               	dw	4095
 10743                           
 10744                           ;Config register IDLOC5 @ 0x20000A
 10745                           ;	unspecified, using default values
 10746   20000A                     	org	2097162
 10747   20000A  0FFF               	dw	4095
 10748                           
 10749                           ;Config register IDLOC6 @ 0x20000C
 10750                           ;	unspecified, using default values
 10751   20000C                     	org	2097164
 10752   20000C  0FFF               	dw	4095
 10753                           
 10754                           ;Config register IDLOC7 @ 0x20000E
 10755                           ;	unspecified, using default values
 10756   20000E                     	org	2097166
 10757   20000E  0FFF               	dw	4095
 10758                           
 10759                           	psect	config
 10760                           
 10761                           ;Config register CONFIG1L @ 0x300000
 10762                           ;	External Oscillator mode Selection bits
 10763                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10764                           ;	Power-up default value for COSC bits
 10765                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10766   300000                     	org	3145728
 10767   300000  AA                 	db	170
 10768                           
 10769                           ;Config register CONFIG1H @ 0x300001
 10770                           ;	unspecified, using default values
 10771                           ;	Clock Out Enable bit
 10772                           ;	CLKOUTEN = 0x1, unprogrammed default
 10773                           ;	Clock Switch Enable bit
 10774                           ;	CSWEN = 0x1, unprogrammed default
 10775                           ;	Fail-Safe Clock Monitor Enable bit
 10776                           ;	FCMEN = 0x1, unprogrammed default
 10777   300001                     	org	3145729
 10778   300001  FF                 	db	255
 10779                           
 10780                           ;Config register CONFIG2L @ 0x300002
 10781                           ;	unspecified, using default values
 10782                           ;	Master Clear Enable bit
 10783                           ;	MCLRE = 0x1, unprogrammed default
 10784                           ;	Power-up Timer Enable bit
 10785                           ;	PWRTE = 0x1, unprogrammed default
 10786                           ;	Low-power BOR enable bit
 10787                           ;	LPBOREN = 0x1, unprogrammed default
 10788                           ;	Brown-out Reset Enable bits
 10789                           ;	BOREN = 0x3, unprogrammed default
 10790   300002                     	org	3145730
 10791   300002  FF                 	db	255
 10792                           
 10793                           ;Config register CONFIG2H @ 0x300003
 10794                           ;	unspecified, using default values
 10795                           ;	Brown Out Reset Voltage selection bits
 10796                           ;	BORV = 0x3, unprogrammed default
 10797                           ;	ZCD Disable bit
 10798                           ;	ZCD = 0x1, unprogrammed default
 10799                           ;	PPSLOCK bit One-Way Set Enable bit
 10800                           ;	PPS1WAY = 0x1, unprogrammed default
 10801                           ;	Stack Full/Underflow Reset Enable bit
 10802                           ;	STVREN = 0x1, unprogrammed default
 10803                           ;	Debugger Enable bit
 10804                           ;	DEBUG = 0x1, unprogrammed default
 10805                           ;	Extended Instruction Set Enable bit
 10806                           ;	XINST = 0x1, unprogrammed default
 10807   300003                     	org	3145731
 10808   300003  FF                 	db	255
 10809                           
 10810                           ;Config register CONFIG3L @ 0x300004
 10811                           ;	WDT Period Select bits
 10812                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10813                           ;	WDT operating mode
 10814                           ;	WDTE = OFF, WDT Disabled
 10815   300004                     	org	3145732
 10816   300004  9F                 	db	159
 10817                           
 10818                           ;Config register CONFIG3H @ 0x300005
 10819                           ;	unspecified, using default values
 10820                           ;	WDT Window Select bits
 10821                           ;	WDTCWS = 0x7, unprogrammed default
 10822                           ;	WDT input clock selector
 10823                           ;	WDTCCS = 0x7, unprogrammed default
 10824   300005                     	org	3145733
 10825   300005  FF                 	db	255
 10826                           
 10827                           ;Config register CONFIG4L @ 0x300006
 10828                           ;	unspecified, using default values
 10829                           ;	Write Protection Block 0
 10830                           ;	WRT0 = 0x1, unprogrammed default
 10831                           ;	Write Protection Block 1
 10832                           ;	WRT1 = 0x1, unprogrammed default
 10833                           ;	Write Protection Block 2
 10834                           ;	WRT2 = 0x1, unprogrammed default
 10835                           ;	Write Protection Block 3
 10836                           ;	WRT3 = 0x1, unprogrammed default
 10837                           ;	Write Protection Block 3
 10838                           ;	WRT4 = 0x1, unprogrammed default
 10839                           ;	Write Protection Block 3
 10840                           ;	WRT5 = 0x1, unprogrammed default
 10841                           ;	Write Protection Block 3
 10842                           ;	WRT6 = 0x1, unprogrammed default
 10843                           ;	Write Protection Block 3
 10844                           ;	WRT7 = 0x1, unprogrammed default
 10845   300006                     	org	3145734
 10846   300006  FF                 	db	255
 10847                           
 10848                           ;Config register CONFIG4H @ 0x300007
 10849                           ;	unspecified, using default values
 10850                           ;	Configuration Register Write Protection bit
 10851                           ;	WRTC = 0x1, unprogrammed default
 10852                           ;	Boot Block Write Protection bit
 10853                           ;	WRTB = 0x1, unprogrammed default
 10854                           ;	Data EEPROM Write Protection bit
 10855                           ;	WRTD = 0x1, unprogrammed default
 10856                           ;	Scanner Enable bit
 10857                           ;	SCANE = 0x1, unprogrammed default
 10858                           ;	Low Voltage Programming Enable bit
 10859                           ;	LVP = 0x1, unprogrammed default
 10860   300007                     	org	3145735
 10861   300007  FF                 	db	255
 10862                           
 10863                           ;Config register CONFIG5L @ 0x300008
 10864                           ;	unspecified, using default values
 10865                           ;	UserNVM Program Memory Code Protection bit
 10866                           ;	CP = 0x1, unprogrammed default
 10867                           ;	DataNVM Memory Code Protection bit
 10868                           ;	CPD = 0x1, unprogrammed default
 10869   300008                     	org	3145736
 10870   300008  FF                 	db	255
 10871                           
 10872                           ;Config register CONFIG5H @ 0x300009
 10873                           ;	unspecified, using default values
 10874   300009                     	org	3145737
 10875   300009  FF                 	db	255
 10876                           
 10877                           ;Config register CONFIG6L @ 0x30000A
 10878                           ;	unspecified, using default values
 10879                           ;	Table Read Protection Block 0
 10880                           ;	EBTR0 = 0x1, unprogrammed default
 10881                           ;	Table Read Protection Block 1
 10882                           ;	EBTR1 = 0x1, unprogrammed default
 10883                           ;	Table Read Protection Block 2
 10884                           ;	EBTR2 = 0x1, unprogrammed default
 10885                           ;	Table Read Protection Block 3
 10886                           ;	EBTR3 = 0x1, unprogrammed default
 10887                           ;	Table Read Protection Block 4
 10888                           ;	EBTR4 = 0x1, unprogrammed default
 10889                           ;	Table Read Protection Block 5
 10890                           ;	EBTR5 = 0x1, unprogrammed default
 10891                           ;	Table Read Protection Block 6
 10892                           ;	EBTR6 = 0x1, unprogrammed default
 10893                           ;	Table Read Protection Block 7
 10894                           ;	EBTR7 = 0x1, unprogrammed default
 10895   30000A                     	org	3145738
 10896   30000A  FF                 	db	255
 10897                           
 10898                           ;Config register CONFIG6H @ 0x30000B
 10899                           ;	unspecified, using default values
 10900                           ;	Boot Block Table Read Protection bit
 10901                           ;	EBTRB = 0x1, unprogrammed default
 10902   30000B                     	org	3145739
 10903   30000B  FF                 	db	255
 10904                           tosu	equ	0xFFF
 10905                           tosh	equ	0xFFE
 10906                           tosl	equ	0xFFD
 10907                           stkptr	equ	0xFFC
 10908                           pclatu	equ	0xFFB
 10909                           pclath	equ	0xFFA
 10910                           pcl	equ	0xFF9
 10911                           tblptru	equ	0xFF8
 10912                           tblptrh	equ	0xFF7
 10913                           tblptrl	equ	0xFF6
 10914                           tablat	equ	0xFF5
 10915                           prodh	equ	0xFF4
 10916                           prodl	equ	0xFF3
 10917                           indf0	equ	0xFEF
 10918                           postinc0	equ	0xFEE
 10919                           postdec0	equ	0xFED
 10920                           preinc0	equ	0xFEC
 10921                           plusw0	equ	0xFEB
 10922                           fsr0h	equ	0xFEA
 10923                           fsr0l	equ	0xFE9
 10924                           wreg	equ	0xFE8
 10925                           indf1	equ	0xFE7
 10926                           postinc1	equ	0xFE6
 10927                           postdec1	equ	0xFE5
 10928                           preinc1	equ	0xFE4
 10929                           plusw1	equ	0xFE3
 10930                           fsr1h	equ	0xFE2
 10931                           fsr1l	equ	0xFE1
 10932                           bsr	equ	0xFE0
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           preinc2	equ	0xFDC
 10937                           plusw2	equ	0xFDB
 10938                           fsr2h	equ	0xFDA
 10939                           fsr2l	equ	0xFD9
 10940                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    122     156
    BANK1           256      0     141
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2773$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2720$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2720$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_RGB2Hue
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _Colour2Action->_Blue_T180
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___flmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0  262521
                                             92 COMRAM     2     2      0
                                             21 BANK0    101   101      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16629
                                             86 COMRAM     6     4      2
                                             13 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     999
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2838
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  221267
                                             39 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   39827
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Red_R90                                              4     0      4   29100
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Pink_rev1_L90                                        6     2      4   39783
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Orange_R135                                          4     0      4   33913
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _LightBlue_L135                                       4     0      4   29188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Green_L90                                            4     0      4   29100
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9540
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Blue_T180                                            4     0      4   20104
                                             35 COMRAM     4     0      4
                         _TimerReset
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10780
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4   10148
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8888
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4681
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8157
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _TimerReset
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _TimerReset
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
       _stop
     _Pink_rev1_L90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Yellow_rev1_R90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8D       7       55.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     187      62        0.0%
DATA                 0      0     187       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 19:53:12 2023

               _color_read_Red 4030                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 4120                             l30 43F8  
                           l33 441E                             l42 44FC                             l27 43F6  
                           l36 4506                             l45 44DC                             l39 44F2  
                           l48 42E2            ___wmul@multiplicand 0003                 ?_rotate180left 0020  
             _color_read_Clear 40D0               _color_read_Green 4080              ??_Interrupts_init 0001  
                  Green_L90@mL 0021                    Green_L90@mR 0023                            l123 273C  
                          l301 38AE                            l224 2D76                            l233 3952  
                          l217 3B10                            l234 3954                            l244 39EA  
                          l260 3B9A                            l412 44AA                            l421 416E  
                          l430 43CC                            l254 3EAA                            l239 3A80  
                          l263 402E                            l271 3D2A                            l415 407E  
                          l424 411E                            l257 3C24                            l281 3FDC  
                          l249 3DAA                            l409 4322                            l266 3CAA  
                          l418 40CE                            l291 34F8                            l372 4360  
                          l276 3E2A                            l445 44D0                            l357 448A  
                          l366 44AE                            l286 340C                            l543 3112  
                          l296 375C                            l624 44E8                            l369 44C2  
                          l633 4444                            l378 4398                            l490 4468  
                          l493 4510                            l549 10A0                            l557 1552  
                          l574 1A40                            l903 331C                            l591 2C0A  
                          l568 1A38                            l584 2C0A                            l930 3218  
                          l892 3806                            l898 32D6                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1554  
                 ___fltol@exp1 000A                           l1131 3F1E                           l1203 42A0  
                         l1124 3F16                           l1220 24EA                           l1302 2A1C  
                         l1311 420C                           l1215 26C6                           l3000 3906  
                         l1217 2526                           l1161 1C30                           l3002 3912  
                         l3010 3A0C                           l1226 256C                           l1170 1F00  
                         l1162 1C1E                           l1403 41BE                           l1251 232C  
                         l1163 1BE4                           l3004 3922                           l3020 3A2C  
                         l3012 3A18                           l3100 3996                           l1228 25E4  
                         l1229 25D2                           l3006 393A                           l3030 3A6A  
                         l3022 3A40                           l3014 3A24                           l3110 39D4  
                         l3102 39AA                           l1254 21BE                           l1407 35D6  
                         l1247 1FC8                           l3040 2F06                           l3032 2ED2  
                         l3120 3E54                           l3112 3E2C                           l3024 3A4C  
                         l3008 39EC                           l3104 39B6                           l1264 22EE  
                         l1256 2236                           l4000 313E                           l3200 42B0  
                         l1257 2224                           l3050 2F82                           l1346 2F52  
                         l3042 2F1A                           l3034 2EE4                           l3130 3E94  
                         l3122 3E68                           l3114 3E4C                           l3026 3A58  
                         l3106 39C2                           l3210 3D2C                           l1178 1D4A  
                         l4010 318C                           l4002 3168                           l3202 42B8  
                         l1187 1E1A                           l1291 2A84                           l3060 2FEA  
                         l3052 2F86                           l1348 2F5A                           l3044 2F22  
                         l3036 2EEC                           l3124 3E74                           l3028 3A66  
                         l3140 3BF6                           l3132 3B9C                           l3108 39D0  
                         l3220 3D68                           l3212 3D4C                           l1188 1E08  
                         l3300 1B0A                           l4020 31B8                           l4004 316A  
                         l4100 42E8                           l3204 42DE                           l1357 300C  
                         l3062 2FEE                           l3054 2FA4                           l3046 2F30  
                         l3038 2EFE                           l3070 3530                           l3150 2DAA  
                         l1374 425A                           l3126 3E80                           l3142 3C0A  
                         l3134 3B9E                           l3230 3B12                           l3222 3D74  
                         l3310 1B46                           l3302 1B12                           l4030 31E8  
                         l4006 317A                           l4110 4318                           l4102 42F2  
                         l3206 42E0                           l1295 29C0                           l3056 2FB0  
                         l3048 2F6E                           l3080 35B2                           l3072 353E  
                         l3064 34FA                           l1368 2ED0                           l3160 2E3A  
                         l3152 2DB8                           l3128 3E90                           l3144 3C22  
                         l3136 3BB2                           l3240 3B80                           l3232 3B14  
                         l3224 3D80                           l4120 44C4                           l3400 1D70  
                         l3320 1B5A                           l3312 1B4A                           l3304 1B22  
                         l4032 31F8                           l4016 31A4                           l4008 317E  
                         l4040 28E4                           l1288 2928                           l4200 104C  
                         l4112 431A                           l4104 4302                           l1386 36A0  
                         l3058 2FE6                           l3074 355A                           l3066 3524  
                         l3162 2E46                           l3170 2E96                           l3154 2DBC  
                         l3146 2D78                           l3250 3C52                           l3138 3BCA  
                         l3090 3976                           l3242 3B98                           l3234 3B28  
                         l3226 3D90                           l3218 3D54                           l4122 44DE  
                         l3410 1D9E                           l3330 1B6E                           l3322 1B5E  
                         l3314 1B4E                           l3306 1B34                           l4034 3208  
                         l4026 31CC                           l4018 31AE                           l4050 2962  
                         l4042 28F2                           l4210 121A                           l4202 1078  
                         l4130 445A                           l4114 431C                           l4106 430C  
                         l3260 44BE                           l3076 3576                           l3164 2E4E  
                         l3156 2DE0                           l3148 2D9C                           l3252 3C7E  
                         l3244 3FDE                           l3092 3982                           l3236 3B40  
                         l3228 3D94                           l3412 1DAC                           l3404 1D84  
                         l3420 1DCA                           l3332 1B72                           l3324 1B62  
                         l3316 1B52                           l3308 1B42                           l3340 1B82  
                         l4028 31D8                           l4060 29B6                           l4052 296A  
                         l4044 2938                           l4220 1486                           l4212 1260  
                         l4204 10E6                           l4132 4466                           l4124 4446  
                         l3500 43DE                           l3084 43F8                           l3180 44FE  
                         l4116 431E                           l4108 4316                           l4140 3ABC  
                         l4300 274A                           l1397 4522                           l3510 155C  
                         l3078 3588                           l3166 2E5E                           l3158 2E16  
                         l3174 2EA8                           l3254 3C92                           l3246 3C26  
                         l3094 398E                           l3238 3B6C                           l4230 2ABC  
                         l3414 1DB4                           l3406 1D8E                           l3422 1DD8  
                         l3350 1BF2                           l3342 1B86                           l3334 1B76  
                         l3326 1B66                           l3318 1B56                           l3270 1A6E  
                         l3262 1A42                           l4070 2A2C                           l4062 29F2  
                         l4054 2976                           l4046 294E                           l4038 28D4  
                         l4214 12AA                           l4222 14EA                           l4206 112C  
                         l4126 444E                           l3502 43E0                           l3086 4408  
                         l3182 4502                           l3190 44F8                           l4118 4320  
                         l4150 3AF8                           l4142 3AE0                           l4134 3A82  
                         l4310 2782                           l4302 2750                           l4160 43AC  
                         l3520 1632                           l3512 159A                           l3256 4508  
                         l3248 3C3A                           l3600 3FC8                           l3088 3956  
                         l4240 2B4A                           l4232 2ADA                           l3432 1E2A  
                         l3440 1E80                           l3424 1DDC                           l3416 1DB8  
                         l3408 1D9C                           l3360 1C1C                           l3352 1BFE  
                         l3344 1BB0                           l3336 1B7A                           l3328 1B6A  
                         l3280 1AA8                           l3272 1A7E                           l3264 1A4E  
                         l4080 2A74                           l4072 2A30                           l4064 29FE  
                         l4056 29A8                           l4224 1506                           l4216 1364  
                         l4208 1150                           l4128 4458                           l3504 43E2  
                         l3192 44D4                           l3184 44EA                           l4152 3B02  
                         l4144 3AEA                           l4136 3A92                           l4320 27E6  
                         l4312 2796                           l4304 2756                           l4162 43B6  
                         l3530 170C                           l3522 1670                           l3514 15D8  
                         l3258 44AE                           l3610 3384                           l3602 331E  
                         l4250 2BD2                           l4242 2B62                           l4234 2AF2  
                         l4226 2A86                           l3450 1ED2                           l3442 1E90  
                         l3434 1E36                           l3426 1DEA                           l3418 1DC8  
                         l3370 1C72                           l3362 1C3E                           l3354 1C02  
                         l3346 1BCC                           l3338 1B7E                           l3290 1AD6  
                         l3282 1AAE                           l3274 1A8E                           l3266 1A5C  
                         l4074 2A54                           l4066 2A0C                           l4058 29AA  
                         l4218 13CC                           l3506 43E4                           l3194 44D8  
                         l3186 44EE                           l4170 30BE                           l4154 3B04  
                         l4146 3AEC                           l4138 3AB8                           l4090 447A  
                         l4322 2818                           l4314 27AA                           l4330 2850  
                         l4306 2756                           l4164 43C6                           l3540 17B0  
                         l3532 1714                           l3524 1678                           l3516 15E0  
                         l3508 1554                           l4180 4354                           l3612 3398  
                         l3604 3330                           l4252 2BF2                           l4244 2B82  
                         l4236 2B12                           l4228 2AA4                           l3460 1EF0  
                         l3452 1ED8                           l3444 1EA0                           l3436 1E44  
                         l3428 1E00                           l3380 1CAC                           l3372 1C80  
                         l3364 1C4E                           l3356 1C10                           l3348 1BDC  
                         l3292 1AD8                           l3284 1AC0                           l3276 1A90  
                         l3268 1A5E                           l4076 2A64                           l4068 2A2A  
                         l3188 44F4                           l3196 42A4                           l3700 4116  
                         l4172 30DA                           l4156 3B0E                           l4148 3AF6  
                         l4092 4484                           l4084 446A                           l4340 28A6  
                         l4332 2862                           l4324 281E                           l4316 27C6  
                         l4308 276A                           l4260 26D0                           l4158 439C  
                         l3470 3286                           l3550 1864                           l3542 17C8  
                         l3534 172C                           l3526 1690                           l3518 15F4  
                         l3630 3474                           l3622 340E                           l3614 339C  
                         l3606 3358                           l4246 2B9A                           l4238 2B2A  
                         l3710 234A                           l3454 1EDA                           l3446 1EC0  
                         l3438 1E7E                           l3390 1D18                           l3382 1CAE  
                         l3374 1C8E                           l3358 1C12                           l3294 1AE8  
                         l3286 1AC2                           l3278 1A98                           l4078 2A72  
                         l4190 0F08                           l4182 0E52                           l3198 42A8  
                         l4174 30F6                           l4166 300E                           l4094 4486  
                         l4086 446E                           l4342 28BE                           l4334 286E  
                         l4326 2824                           l4318 27D2                           l4270 26E0  
                         l4262 26D4                           l3480 3314                           l3472 3296  
                         l3464 321A                           l3560 193E                           l3552 18A2  
                         l3544 1806                           l3536 176A                           l3528 16CE  
                         l4176 4324                           l2920 4420                           l3640 36A2  
                         l3632 3488                           l3624 3420                           l3608 3370  
                         l3616 33B4                           l4248 2BBA                           l3800 258A  
                         l3712 235A                           l3720 2384                           l3704 232E  
                         l3456 1EE0                           l3448 1EC4                           l3392 1D1A  
                         l3384 1CB8                           l3376 1C9A                           l3368 1C62  
                         l3296 1AF8                           l3288 1AC8                           l4192 0F4E  
                         l4184 0E98                           l4168 30A6                           l4096 4488  
                         l4088 4478                           l4344 28C4                           l4336 287A  
                         l4328 2838                           l4280 2702                           l4272 26EC  
                         l4264 26D8                           l4256 26C8                           l3482 331A  
                         l3474 32A4                           l3466 3248                           l3570 1A18  
                         l3562 197C                           l3554 18E0                           l3546 1844  
                         l3538 17A8                           l3490 4236                           l4178 4338  
                         l2930 3EC6                           l2922 443C                           l3650 381A  
                         l3642 36B4                           l3626 3448                           l3634 3490  
                         l3618 33F0                           l3810 25F4                           l3802 258E  
                         l3730 23B0                           l3722 2394                           l3714 236A  
                         l3706 233A                           l3458 1EEE                           l3394 1D2A  
                         l3378 1C9E                           l3386 1CBE                           l3298 1B08  
                         l4194 0F94                           l4186 0EDE                           l4098 42E4  
                         l4338 2892                           l4290 271E                           l4282 270A  
                         l4274 26F2                           l4266 26DC                           l4258 26CC  
                         l3476 32B6                           l3468 3258                           l3572 1A20  
                         l3564 1984                           l3556 18E8                           l3548 184C  
                         l3492 4252                           l3660 41D8                           l2940 3F00  
                         l2932 3ECE                           l3652 386A                           l3644 3704  
                         l3636 34CC                           l3628 3460                           l3580 3CBE  
                         l3820 2656                           l3812 2600                           l3804 259C  
                         l3732 23C0                           l3740 23EA                           l3724 239A  
                         l3716 237A                           l3708 2348                           l3900 207E  
                         l3388 1CE4                           l3396 1D3A                           l4196 0FBC  
                         l4188 0EFE                           l4292 2726                           l4284 2712  
                         l4276 26F6                           l4268 26E0                           l3478 32C4  
                         l3566 199C                           l3558 1900                           l3574 1A38  
                         l3670 4366                           l3486 420E                           l3662 41E0  
                         l2942 3F08                           l2934 3ED6                           l2926 3EAC  
                         l2950 2C28                           l3590 3DFA                           l3654 3872  
                         l3646 370C                           l3638 34E4                           l3582 3CFA  
                         l3830 26B4                           l3822 266C                           l3814 260E  
                         l3806 25CA                           l3750 242C                           l3742 23FA  
                         l3734 23D0                           l3726 23A0                           l3718 237C  
                         l3910 20D4                           l3902 208E                           l3398 1D60  
                         l4198 1002                           l4294 272E                           l4286 2716  
                         l4278 26FA                           l3568 19DA                           l3672 4374  
                         l3488 421A                           l3664 41FC                           l3656 41C0  
                         l2944 3F0A                           l2936 3EE4                           l2928 3EB4  
                         l2960 2CF2                           l2952 2C7C                           l3592 3E02  
                         l3648 3808                           l3584 3D02                           l3832 26BA  
                         l3824 2686                           l3816 2638                           l3744 2410  
                         l3736 23E0                           l3728 23AE                           l3920 2178  
                         l3912 20F0                           l3904 209A                           l3496 43CE  
                         l3680 4030                           l4296 2736                           l4288 271A  
                         l3674 4378                           l2970 3606                           l3658 41D0  
                         l2946 3F10                           l2938 3EEA                           l2962 2D36  
                         l2954 2C90                           l3594 3F86                           l3586 3DAC  
                         l3578 3CAC                           l3834 26BC                           l3826 26A2  
                         l3818 263C                           l3770 24AE                           l3762 2464  
                         l3746 2420                           l3754 2440                           l3738 23E2  
                         l3930 21CE                           l3922 2186                           l3914 20FC  
                         l3906 20AA                           l3850 1F30                           l3842 1F02  
                         l3498 43D8                           l3682 4076                           l4298 2738  
                         l3676 4380                           l3668 4362                           l2972 3624  
                         l2964 35D8                           l2980 417C                           l2956 2C94  
                         l2948 2C0C                           l3596 3F98                           l3588 3DBE  
                         l3828 26A6                           l3780 24F4                           l3772 24B6  
                         l3764 247E                           l3756 2450                           l3748 2428  
                         l3932 21DC                           l3924 21A4                           l3916 2118  
                         l3908 20C4                           l3860 1F6C                           l3852 1F40  
                         l3844 1F10                           l3692 4120                           l2974 365A  
                         l2966 35EA                           l2982 4180                           l2958 2CD6  
                         l2990 38B6                           l3598 3FC0                           l3790 254C  
                         l3782 2512                           l3774 24C6                           l3766 248E  
                         l3758 2450                           l3942 2246                           l3950 228E  
                         l3934 21E0                           l3926 21AE                           l3918 2142  
                         l3870 1FA2                           l3862 1F72                           l3854 1F50  
                         l3846 1F1E                           l3678 448E                           l3694 4166  
                         l3686 4080                           l2968 35FC                           l2984 41B2  
                         l2992 38CE                           l3792 2552                           l3784 2514  
                         l3776 24DA                           l3768 249E                           l3960 2302  
                         l3952 22A8                           l3944 2252                           l3936 21EE  
                         l3928 21BC                           l3872 1FB2                           l3864 1F80  
                         l3856 1F56                           l3848 1F20                           l3688 40C6  
                         l2978 4170                           l2994 38D8                           l3794 255C  
                         l3786 2524                           l3778 24E8                           l3962 2310  
                         l3954 22BC                           l3946 2260                           l3938 221C  
                         l3890 2034                           l3882 1FFC                           l3874 1FB8  
                         l3866 1F82                           l3858 1F66                           l3698 40D0  
                         l2996 38F0                           l2988 38B0                           l3796 256A  
                         l3788 2536                           l3980 378C                           l3964 2312  
                         l3956 22D6                           l3948 228A                           l3892 204C  
                         l3884 2008                           l3876 1FD8                           l3868 1F92  
                         l3972 425C                           l2998 38FA                           l3798 257C  
                         l3990 3804                           l3982 379C                           l3958 22F2  
                         l3966 2318                           l3894 2058                           l3886 2012  
                         l3878 1FE8                           l3974 426C                           l3984 37CA  
                         l3968 231C                           l3896 2064                           l3888 2028  
                         l3986 37DA                           l3978 375E                           l3898 2072  
                         l3994 3114                           l3988 37FE                           l3996 312A  
                         STR_1 0E01                           STR_2 0E10                           STR_3 0E4C  
                         STR_4 0E3D                           STR_5 0E1C                           STR_6 0E36  
                         STR_7 0E43                           STR_8 0E2F                           STR_9 0E11  
                         u2100 2CF2                           u2101 2CEE                           u2110 35EA  
                         u2111 35E6                           u3000 1844                           u2120 35FC  
                         u2200 3952                           u3001 1840                           u2121 35F8  
                         u2201 394E                           u3010 18A2                           u2130 3624  
                         u2210 3A80                           u3011 189E                           u2131 3620  
                         u2211 3A7C                           u3020 18E0                           u2140 365A  
                         u2300 355A                           u2060 3EC6                           u3100 3330  
                         u3021 18DC                           u2141 3656                           u2221 2EDC  
                         u2301 3556                           u2061 3EC2                           u3101 332C  
                         u3030 193E                           u2150 41A2                           u2230 2EFE  
                         u2310 3576                           u2070 3EE4                           u3110 3420  
                         u3031 193A                           u2231 2EFA                           u2311 3572  
                         u2071 3EE0                           u3111 341C                           u3040 197C  
                         u2160 41B2                           u2240 2F30                           u2320 3588  
                         u2400 2E16                           u2080 3F00                           u3120 36B4  
                         u3200 23D0                           u4000 2862                   _BAUD4CONbits 000EE9  
                         u3041 1978                           u2161 41AE                           u2241 2F2C  
                         u2321 3584                           u2401 2E12                           u2081 3EFC  
                         u3121 36B0                           u3201 23CC                           u4001 285E  
                         u3050 19DA                           u2250 2F4E                           u2330 35B2  
                         u2410 2E3A                           u2090 2C28                           u2170 38CE  
                         u3130 381A                           u3210 2410                           u3051 19D6  
                         u2251 2F4A                           u2331 35AE                           u2411 2E36  
                         u2091 2C24                           u2171 38CA                           u3131 3816  
                         u3211 240C                           u3060 1A18                           u3140 4398  
                         u2260 2FA4                           u2180 38F0                           u3300 259C  
                         u3220 2450                           u2500 1AD6                           u2340 4408  
                         u2420 42CC                           u3061 1A14                           u3141 4394  
                         u2157 4198                           u2261 2FA0                           u2181 38EC  
                         u3301 2598                           u3221 244C                           u2501 1AD2  
                         u2341 4404                           u2421 42C4                           u2270 2FD2  
                         u2190 393A                           u3070 3CBE                           u3310 25CA  
                         u3230 24C6                           u3150 2348                           u2510 1AE8  
                         u2350 441E                           u2191 3936                           u3071 3CBA  
                         u3311 25C6                           u3231 24C2                           u3151 2344  
                         u2511 1AE4                           u2351 441A                           u2280 300C  
                         u2360 39EA                           u3080 3DBE                           u2440 3DAA  
                         u3320 25E0                           u3240 24E8                           u3160 235A  
                         u3400 1F40                           u2600 1C30                           u2520 1AF8  
                         u2281 3008                           u2361 39E6                           u3081 3DBA  
                         u2441 3DA6                           u3321 25DC                           u3241 24E4  
                         u3161 2356                           u3401 1F3C                           u2601 1C2C  
                         u2521 1AF4                           u2450 44BE                           u2290 3524  
                         u2370 3EAA                           u3090 3F98                           u3330 25F4  
                         u3250 2512                           u3170 236A                           u3410 1F80  
                         u2610 1C3E                           u2530 1B34                           _T2PR 000FBC  
                         u2451 44BA                           u2291 3520                           u2371 3EA6  
                         u3091 3F94                           u3331 25F0                           u3251 250E  
                         u3171 2366                           u3411 1F7C                           u2611 1C3A  
                         u2531 1B30                           u4107 2774                           u2380 2D9C  
                         u3340 260E                           u3260 2536                           u3180 23AE  
                         u3500 221C                           u3420 1F92                           u2700 1D9C  
                         u2620 1C4E                           u2540 1B42                           u2460 1A5C  
                         u2277 2FC8                           u2381 2D98                           u3341 260A  
                         u3261 2532                           u3181 23AA                           u3501 2218  
                         u3421 1F8E                           u2701 1D98                           u2621 1C4A  
                         u2541 1B3E                           u2461 1A58                           u4117 27B4  
                         u2390 2DE0                           u3350 2656                           u3270 254C  
                         u3190 23C0                           u3510 2232                           u3430 1FA2  
                         u2710 1DAC                           u2630 1C80                           u2550 1BB0  
                         u2470 1A6E                           u2438 42CE                           u2391 2DDC  
                         u4207 3B32                           u3351 2652                           u3271 2548  
                         u3191 23BC                           u3511 222E                           u3431 1F9E  
                         u2711 1DA8                           u2631 1C7C                           u2551 1BAC  
                         u2471 1A6A                           u4127 2842                           u3360 2686  
                         u3280 256A                           u3520 2246                           u3440 1FD8  
                         u2800 1E90                           u2720 1DC8                           u2640 1C8E  
                         u2560 1BC8                           u2480 1A7E                           u3600 312A  
                         u4217 3B5E                           u3361 2682                           u3281 2566  
                         u3521 2242                           u3441 1FD4                           u2801 1E8C  
                         u2721 1DC4                           u2641 1C8A                           u2561 1BC2  
                         u2481 1A7A                           u3601 3126                           u4137 28B0  
                         u3370 26B4                           u3290 258A                           u3530 2260  
                         u3450 1FE8                           u2810 1EA0                           u2730 1DD8  
                         u2650 1CAC                           u2570 1BCA                           u2490 1AC0  
                         u3610 315E                           u4307 3C9C                           u4227 3B8A  
                         u3371 26B0                           u3291 2586                           u3531 225C  
                         u3451 1FE4                           u2811 1E9C                           u2731 1DD4  
                         u2651 1CA8                           u2491 1ABC                           u4147 42F8  
                         u2900 4252                           u3540 22A8                           u3460 2162  
                         u3380 1F1E                           u2820 1EC0                           u2740 1DEA  
                         u2660 1CE4                           u2580 1BF2                           u3620 318C  
                         u3700 29A4                           u2901 424E                           u4317 3918  
                         u4237 39C4                           u4157 3362                           u3541 22A4  
                         u3381 1F1A                           u2821 1EBC                           u2741 1DE6  
                         u2661 1CE0                           u2581 1BEE                           u3621 3188  
                         u3701 29A0                           u2910 159A                           u3550 22D6  
                         u3470 21BC                           u3390 1F30                           u2830 1ED2  
                         u2750 1E00                           u2670 1D2A                           u2590 1C10  
                         u3630 31A0                           u3710 29EE                           u2911 1596  
                         u4327 3E86                           u4247 3BBC                           u4167 33FA  
                         u3551 22D2                           u3471 21B8                           u3391 1F2C  
                         u2831 1ECE                           u2751 1DFC                           u2671 1D26  
                         u2591 1C0C                           u3631 319C                           u3615 3154  
                         u3711 29EA                           u2920 15D8                           u3560 2310  
                         u3480 21DC                           u2840 1EEE                           u2760 1E16  
                         u2680 1D60                           u3640 31C8                           u3720 2A0C  
                         u3800 0EDE                           u2921 15D4                           u4337 437A  
                         u4257 3BE8                           u4177 3452                           u3561 230C  
                         u3481 21D8                           u3465 2158                           u2841 1EEA  
                         u2761 1E12                           u2681 1D5C                           u3641 31C4  
                         u3721 2A08                           u3801 0EDA                           u2850 3248  
                         u2930 1632                           u3570 378C                           u3490 21EE  
                         u2770 1E2A                           u2690 1D70                           u3650 31E8  
                         u3730 2A1C                           u3810 0F4E                           u2851 3244  
                         u2931 162E                           u4267 3C14                           u4187 34D6  
                         u3571 3788                           u3491 21EA                           u2771 1E26  
                         u2691 1D6C                           u3651 31E4                           u3731 2A18  
                         u3811 0F4A                           u2860 3286                           u2940 1670  
                         u3900 2AA4                           u3580 37CA                           u2780 1E44  
                         u3660 31F8                           u3740 2A2A                           u3820 0F94  
                         u2861 3282                           u2941 166C                           u4277 3A5A  
                         u4197 3D86                           u3901 2AA0                           u3581 37C6  
                         u2781 1E40                           u3661 31F4                           u3741 2A26  
                         u3821 0F90                           u2870 32A4                           u2950 16CE  
                         u3910 2ADA                           u3590 37FE                           u2790 1E7E  
                         u3750 2A64                           u3670 28E4                           u3830 1002  
                         u2871 32A0                           u2951 16CA                           u4287 3C44  
                         u3911 2AD6                           u3591 37FA                           u2791 1E7A  
                         u3751 2A60                           u3671 28E0                           u3831 0FFE  
                         u2880 32C4                           u2960 170C                           u3920 2B12  
                         u3760 2A72                           u3680 28F2                           u3840 104C  
                         u2881 32C0                           u2961 1708                           u4297 3C70  
                         u3921 2B0E                           u3761 2A6E                           u3681 28EE  
                         u3841 1048                           u3770 43AC                           u2890 3314  
                         u2970 176A                           u3930 2B4A                           u3690 294E  
                         u3850 10E6                           u3771 43A8                           u2891 3310  
                         u2971 1766                           u3931 2B46                           u3691 294A  
                         u3851 10E2                           u3780 43C6                           u2980 17A8  
                         u3940 2B82                           u3860 112C                           u3781 43C2  
                         u2981 17A4                           u3941 2B7E                           u3861 1128  
                         u2990 1806                           u3950 2BBA                           u3870 1260  
                         u3790 0E98                           u2991 1802                           u3951 2BB6  
                         u3871 125C                           u3791 0E94                           u3960 2BF2  
                         u3880 12AA                           u3961 2BEE                           u3881 12A6  
                         u3890 1506                           u3970 274A                           u3891 1502  
                         u3971 2746                           u3980 2796                           u3981 2792  
                         u3990 2818                           u3991 2814            reverseHalfSquare@mL 001B  
          reverseHalfSquare@mR 001D                           _dbuf 0150                           _main 26C8  
                         _prec 00DC                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         _stoa 2ED2                           btemp 005F                           _stop 38B0  
                   _ClickLEDOn 439A                           prodh 000FF4                           prodl 000FF3  
                         start 002C                ___fldiv@new_exp 0043        __end_of_Yellow_rev1_R90 340E  
       __end_of_color_read_Red 4080                __end_of_HighISR 002C                   ___param_bank 000000  
              __end_of_Red_R90 3D2C                     _Hue2Colour 1554                __end_of_Right45 3B9C  
             __end_of_LED_init 44D2                  ___fltol@sign1 0009                __end_of___fladd 1F02  
                        ?_main 0001                __end_of___fldiv 26C8                          STR_10 0E26  
                        STR_11 0E48                          STR_13 0E48                __end_of___flmul 232E  
              __end_of___flsub 42A2                __end_of___fltol 321A                          ?_stoa 000A  
               _LightBlue_L135 3808                          ?_stop 0014                __end_of___lwdiv 3F20  
                        i2l630 0028                   vfpfcnvrt@fmt 0022                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 44C4     __end_of_I2C_2_Master_Start 4508  
   __end_of_I2C_2_Master_Write 44DE                          _flags 00E0                          _fputc 35D8  
            fullSpeedReverse@i 0019                          _width 00DA                          _putch 4522  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        stoa@i 0018                          stoa@l 001C                          stoa@p 001E  
                        stoa@s 000C                          stoa@w 0016                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 420E                __end_of_strncmp 35D8  
         __end_of_Color2String 4362        __end_of_color_read_Blue 4170          _I2C_2_Master_RepStart 44EA  
              ?_color_read_Red 0005                __initialization 3F20                   __end_of_main 28D2  
                 __end_of_stoa 300E                   __end_of_stop 3956                ??_rotate180left 0024  
       __end_of_LightBlue_L135 38B0                         ??_main 005D                         ??_stoa 000E  
                       ??_stop 0018                  __activetblptr 000002                      ??_RGB2Hue 0059  
                ??_Orange_R135 0025                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                _colour_read_all 300E                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l4420 0024                         i2l4416 000A  
                       i2l4418 001A                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 4324                         _RX4PPS 000E15                         _TX4REG 000EE4  
                  ?_ClickLEDOn 0001               __end_of___xxtofl 2A86                      ??_Red_R90 0025  
                       _Left45 3B9C                      ??_Right45 001E               _fullSpeedReverse 3E2C  
             ?_Yellow_rev1_R90 0021                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0030                         ___flge 321A                         ___fleq 375E  
                    ??___fladd 0022                    ?_Hue2Colour 000D                         ___wmul 4420  
                    ??___fldiv 003A                  Orange_R135@mL 0021                      ??___flmul 0053  
                Orange_R135@mR 0023                      ??___flsub 0032                      ??___fltol 0005  
                    ??___lwdiv 000B                     _TimerReset 4508                         _colorf 0170  
              ?_LightBlue_L135 0021                         clear_0 3F66                         clear_1 3F72  
           fullSpeedReverse@mL 0014             fullSpeedReverse@mR 0016                         _motorL 00EA  
                       _motorR 00E1                         isa$std 000001                         _strlen 4170  
                       fputc@c 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       stoa@cp 001A                         stoa@fp 000A                         putch@c 0001  
             __end_of_vfprintf 425C                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0038                      ??_strncmp 0007  
             __end_of_turnLeft 3A82                     ___flge@ff1 0001                     ___flge@ff2 0005  
                 ___xxtofl@arg 0016                   ___xxtofl@exp 0015                   ___xxtofl@val 000C  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005            __end_of_Orange_R135 375E  
                   __accesstop 0060        __end_of__initialization 3F78       __end_of_color_read_Clear 4120  
              fullSpeedAhead@i 0019              __end_of_Blue_T180 3FDE       __end_of_color_read_Green 40D0  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 44DE  
               __pcstackCOMRAM 0001                   __pidataBANK0 4512                   __pidataBANK1 451B  
                __end_of_fputc 36A2              __end_of_Green_L90 3E2C                  __end_of_putch 4524  
                    RGB2Hue@cf 0057            __end_of_Timer0_init 446A                    _ForwardFlag 00FB  
      __end_of_colour_read_all 3114                        ??_fputc 0005                        ??_putch 0001  
                   __pbssBANK0 00DA                     __pbssBANK1 0100                     ??_LED_init 0001  
                      ?_Left45 001A              _color_writetoaddr 448C                   _T2CLKCONbits 000FBF  
        __end_of_Colour2Action 2C0C                        ?___flge 0001                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001                    ?_TimerReset 0001  
          ??_color_writetoaddr 0004                        ?_strlen 0001                   _Color2String 4324  
                      _RGB2Hue 0E52                      ?___xxtofl 000C                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                    _Orange_R135 36A2                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 44EA         color_writetoaddr@value 0003  
             ??_color_read_Red 0007                        _HighISR 0008      __end_of_color_writetoaddr 44AC  
                      _Red_R90 3CAC             _I2C_2_Master_Start 44FE                     _initUSART4 446A  
           _I2C_2_Master_Write 44D2                        _Right45 3B12                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4446  
      sendStringSerial4@string 0002                        ___fladd 1A42                        ___fldiv 232E  
                      ___flmul 1F02                        ___flsub 425C                        ___fltol 3114  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 3EAC            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 002A                   __psmallconst 0E00                        __pcinit 3F20  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 26C8  
                      __ptext1 446A                        __ptext2 3A82                        __ptext3 300E  
                      __ptext4 4030                        __ptext5 4080                        __ptext6 40D0  
                      __ptext7 4120                        __ptext8 44EA                        __ptext9 42A2  
                      _maxTime 00DE                      _T2CONbits 000FBD               ?_colour_read_all 001A  
                   ??___xxtofl 0010                 Color2String@cf 0047       __end_of_fullSpeedReverse 3EAC  
                    _T2HLTbits 000FBE                        _sprintf 41C0           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002                        _strncmp 34FA           end_of_initialization 3F78  
                      fputc@fp 0003                  _Pink_rev1_L90 340E                  __Lmediumconst 0000  
                 ??_ClickLEDOn 0001              ?_color_click_init 0001                 __45drightdelay 00F7  
           ??_color_click_init 0005               ??_LightBlue_L135 0025              __end_of_vfpfcnvrt 2ED2  
            _reverseHalfSquare 3C26                        postdec1 000FE5                        postdec2 000FDD  
                 ??_Hue2Colour 000F                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0030             ?_reverseHalfSquare 001B  
                      strlen@a 0003                        strlen@s 0001          __end_of_rotate180left 4030  
              _initDCmotorsPWM 3A82                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 39EC                    ___fladd@grs 0029  
          ??_reverseHalfSquare 001F             __end_of_ClickLEDOn 43CE                  ___xxtofl@sign 0014  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
     color_writetoaddr@address 0004                      Red_R90@mL 0021                      Red_R90@mR 0023  
      ??_I2C_2_Master_RepStart 0002                 _movementMemory 0128             __end_of_Hue2Colour 1A42  
               ?_Pink_rev1_L90 0021               ?_Interrupts_init 0001                    ___flmul@grs 0061  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                Colour2Action@cf 0028  
    __end_of_reverseHalfSquare 3CAC             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                    _Blue_T180 3F86                 __end_of_Left45 3C26                   _RGB2Hue$3132 006D  
               __end_of___flge 331E                 __end_of___fleq 3808                 _fullSpeedAhead 3D2C  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@fp 0020                 __end_of___wmul 4446  
                    _Green_L90 3DAC                      Right45@mL 001A                      Right45@mR 001C  
               __end_of_strlen 41C0                     RGB2Hue@max 0071                     RGB2Hue@min 0073  
          color_read_Clear@tmp 000A            start_initialization 3F20                    __halfsquare 00F3  
                     ??_Left45 001E            color_read_Green@tmp 000A                     ?_Blue_T180 0024  
      __end_of_initDCmotorsPWM 3B12                    vfprintf@fmt 002C         __end_of_fullSpeedAhead 3DAC  
                     ??___flge 0009                       ??___fleq 0009                       ??___wmul 0005  
                 ??_TimerReset 0001                    __pdataBANK0 00F3                    __pdataBANK1 0186  
                     ??_strlen 0003                      ___fladd@a 001E                      ___fladd@b 001A  
              ClickLEDOn@power 0001                     ?_Green_L90 0021                      ___fldiv@a 0036  
                    ___fldiv@b 0032                       ?_RGB2Hue 0057                      ___flmul@a 004F  
                    ___flmul@b 004B                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                   ?_Orange_R135 0021                ??_Pink_rev1_L90 0025  
                     ?_HighISR 0001             __end_of_TimerReset 4512                       ?_Red_R90 0021  
       Color2String@colourname 0049                       ?_Right45 001A               ___lwdiv@dividend 0007  
                 ?_Timer0_init 0001                ?_fullSpeedAhead 0014                      __pintcode 0008  
                     ?___fladd 001A                       ?___fldiv 0032                       ?___flmul 004B  
                     ?___flsub 002A                       ?___fltol 0001                       ?___lwdiv 0007  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                Pink_rev1_L90@mL 0021  
              Pink_rev1_L90@mR 0023                    __smallconst 0E00              _I2C_2_Master_Idle 43F8  
            _I2C_2_Master_Init 43CE              _I2C_2_Master_Read 42A2                  __45dleftdelay 00F9  
            _I2C_2_Master_Stop 44F4              ?_fullSpeedReverse 0014              ??_Yellow_rev1_R90 0025  
           ?_I2C_2_Master_Idle 0001                rotate180left@mL 0020                rotate180left@mR 0022  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0032             ??_fullSpeedReverse 0018                       ?_strncmp 0001  
         Hue2Colour@colourname 000F              colour_read_all@cf 001A                   Hue2Colour@cf 000D  
            _sendStringSerial4 4362            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _PIE0bits 000E29                       _LED_init 44C4  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR0bits 000E33                       i2u409_40 001A  
                     i2u409_41 0016                    ??_Blue_T180 0028                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001                       Left45@mL 001A                       Left45@mR 001C  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 2D78      __end_of_I2C_2_Master_Idle 4420  
    __end_of_I2C_2_Master_Init 43F8      __end_of_I2C_2_Master_Read 42E4              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 44FE                    ??_Green_L90 0025                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                      _turnRight 3956  
                     __1square 00F5                      copy_data0 3F34                      copy_data1 3F54  
    __end_of_sendStringSerial4 439A  __end_of_I2C_2_Master_RepStart 44F4             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 2D78                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 002E                       __Lrparam 0000                     vfprintf@fp 002A  
                _Colour2Action 2A86                     ?_vfpfcnvrt 0020                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     sprintf@fmt 0034                    Blue_T180@mL 0024  
                  Blue_T180@mR 0026                       ___xxtofl 28D2                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                ___lwdiv@divisor 0009             __end_of_initUSART4 448C  
              ___lwdiv@counter 000D                     ?_turnRight 0014                       __ptext10 42E4  
                     __ptext11 448C                       __ptext20 3114                       __ptext12 44D2  
                     __ptext21 425C                       __ptext13 44F4                       __ptext30 3CAC  
                     __ptext22 1A42                       __ptext14 44FE                       __ptext31 340E  
                     __ptext23 1F02                       __ptext15 43F8                       __ptext40 3B9C  
                     __ptext32 3D2C                       __ptext24 375E                       __ptext16 43CE  
                     __ptext41 39EC                       __ptext33 36A2                       __ptext25 232E  
                     __ptext17 4446                       __ptext50 41C0                       __ptext42 3C26  
                     __ptext34 3808                       __ptext26 44C4                       __ptext18 0E52  
                     __ptext51 420E                       __ptext43 38B0                       __ptext35 3DAC  
                     __ptext27 44DE                       __ptext19 28D2                       __ptext60 1554  
                     __ptext52 2D78                       __ptext44 3E2C                       __ptext36 3B12  
                     __ptext28 2A86                       __ptext61 321A                       __ptext53 34FA  
                     __ptext45 2C0C                       __ptext37 3956                       __ptext29 331E  
                     __ptext62 439A                       __ptext54 2ED2                       __ptext46 4420  
                     __ptext38 3F86                       __ptext55 4170                       __ptext47 3EAC  
                     __ptext39 3FDE                       __ptext56 35D8                       __ptext48 4508  
                     __ptext57 4522                       __ptext49 4324                       __ptext58 4362  
                     __ptext59 44AC                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016                Color2String@buf 0045  
             colour_read_all@B 0024               colour_read_all@C 0028               colour_read_all@G 0020  
             colour_read_all@R 001C                     turnRight@i 0018               LightBlue_L135@mL 0021  
             LightBlue_L135@mR 0023                      stoa@F1144 0186                 ?_Colour2Action 0028  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 420E                       main@data 0075              Yellow_rev1_R90@mL 0021  
            Yellow_rev1_R90@mR 0023                       main@wall 00D9                       _turnLeft 39EC  
                ?_Color2String 0045                 _vfpfcnvrt$2827 0028                     _INTCONbits 000FF2  
                  _setMotorPWM 2C0C                       intlevel2 0000                      sprintf@ap 0038  
             ??_fullSpeedAhead 0018                      turnLeft@i 0018                      strncmp@_l 0001  
                    strncmp@_r 0003              ??_colour_read_all 001C                _Yellow_rev1_R90 331E  
                  ??_vfpfcnvrt 0026                       stoa@nuls 000F               _color_click_init 42E4  
                _rotate180left 3FDE                 ??_Color2String 0049                       sprintf@f 003A  
                     sprintf@s 0032                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                  _timerMemory 0100                       strncmp@l 0008                       strncmp@n 0005  
                     strncmp@r 000A                    ??_turnRight 0018                  ___fladd@signs 0026  
                   _TX4STAbits 000EE8          __end_of_Pink_rev1_L90 34FA                _sendCharSerial4 44AC  
                 ___fladd@aexp 0027                   ___fladd@bexp 0028                ??_Colour2Action 002A  
