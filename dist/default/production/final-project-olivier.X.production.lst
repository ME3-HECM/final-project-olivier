

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 23:22:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88   000000                     
    89                           ; Generated 06/04/2022 GMT
    90                           ; 
    91                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18LF67K40 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123   000000                     
   124                           	psect	idataBANK0
   125   004978                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _ForwardFlag
   129   004978  01                 	db	1
   130                           
   131                           	psect	idataBANK1
   132   004918                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for stoa@F1144
   136   004918  28                 	db	40
   137   004919  6E                 	db	110
   138   00491A  75                 	db	117
   139   00491B  6C                 	db	108
   140   00491C  6C                 	db	108
   141   00491D  29                 	db	41
   142   00491E  00                 	db	0
   143                           
   144                           ;initializer for __halfsquare
   145   00491F  015E               	dw	350
   146                           
   147                           ;initializer for __1square
   148   004921  02BC               	dw	700
   149                           
   150                           ;initializer for __45drightdelay
   151   004923  0095               	dw	149
   152                           
   153                           ;initializer for __45dleftdelay
   154   004925  0092               	dw	146
   155   000000                     _TX4REG	set	3812
   156   000000                     _RC4STAbits	set	3815
   157   000000                     _SP4BRGH	set	3814
   158   000000                     _LATFbits	set	3966
   159   000000                     _LATDbits	set	3964
   160   000000                     _LATGbits	set	3967
   161   000000                     _TRISEbits	set	3973
   162   000000                     _TRISFbits	set	3974
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _SSP2CON2bits	set	3802
   166   000000                     _RX4PPS	set	3605
   167   000000                     _SSP2CLKPPS	set	3612
   168   000000                     _SSP2DATPPS	set	3613
   169   000000                     _ANSELDbits	set	3751
   170   000000                     _SSP2ADD	set	3798
   171   000000                     _SSP2CON1bits	set	3801
   172   000000                     _RC4REG	set	3811
   173   000000                     _SP4BRGL	set	3813
   174   000000                     _TX4STAbits	set	3816
   175   000000                     _BAUD4CONbits	set	3817
   176   000000                     _SSP2CON2	set	3802
   177   000000                     _TRISDbits	set	3972
   178   000000                     _CCPR4H	set	3873
   179   000000                     _CCPR3H	set	3877
   180   000000                     _SSP2STAT	set	3800
   181   000000                     _ANSELFbits	set	3764
   182   000000                     _SSP2BUF	set	3797
   183   000000                     _PIE0bits	set	3625
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RC7PPS	set	3689
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _CCP1CONbits	set	4011
   191   000000                     _CCPTMRS0bits	set	4013
   192   000000                     _T2PR	set	4028
   193   000000                     _T2CONbits	set	4029
   194   000000                     _CCP2CONbits	set	4007
   195   000000                     _LATAbits	set	3961
   196   000000                     _CCP3CONbits	set	3878
   197   000000                     _LATCbits	set	3963
   198   000000                     _LATEbits	set	3965
   199   000000                     _TRISCbits	set	3971
   200   000000                     _CCP4CONbits	set	3874
   201   000000                     _TRISHbits	set	3976
   202   000000                     _TRISGbits	set	3975
   203   000000                     _PORTFbits	set	3982
   204   000000                     _TRISAbits	set	3969
   205   000000                     _LATHbits	set	3968
   206   000000                     _RE4PPS	set	3702
   207   000000                     _RG6PPS	set	3720
   208   000000                     _TMR0L	set	4051
   209   000000                     _TMR0H	set	4052
   210   000000                     _T0CON0bits	set	4053
   211   000000                     _T0CON1bits	set	4054
   212   000000                     _T2CLKCONbits	set	4031
   213   000000                     _T2HLTbits	set	4030
   214   000000                     _INTCONbits	set	4082
   215   000000                     _PIE4bits	set	3629
   216   000000                     _PIR0bits	set	3635
   217                           
   218                           	psect	smallconst
   219   000E00                     __psmallconst:
   220                           	callstack 0
   221   000E00  00                 	db	0
   222   000E01                     STR_1:
   223                           
   224                           ; BSR set to: 14
   225   000E01  43                 	db	67	;'C'
   226   000E02  6F                 	db	111	;'o'
   227   000E03  6C                 	db	108	;'l'
   228   000E04  6F                 	db	111	;'o'
   229   000E05  75                 	db	117	;'u'
   230   000E06  72                 	db	114	;'r'
   231   000E07  20                 	db	32
   232   000E08  69                 	db	105	;'i'
   233   000E09  73                 	db	115	;'s'
   234   000E0A  20                 	db	32
   235   000E0B  25                 	db	37
   236   000E0C  73                 	db	115	;'s'
   237   000E0D  20                 	db	32
   238   000E0E  20                 	db	32
   239   000E0F  0D                 	db	13
   240   000E10  00                 	db	0
   241   000E11                     STR_9:
   242                           
   243                           ; BSR set to: 14
   244   000E11  4C                 	db	76	;'L'
   245   000E12  69                 	db	105	;'i'
   246   000E13  67                 	db	103	;'g'
   247   000E14  68                 	db	104	;'h'
   248   000E15  74                 	db	116	;'t'
   249   000E16  20                 	db	32
   250   000E17  42                 	db	66	;'B'
   251   000E18  6C                 	db	108	;'l'
   252   000E19  75                 	db	117	;'u'
   253   000E1A  65                 	db	101	;'e'
   254   000E1B  00                 	db	0
   255   000E1C                     STR_5:
   256                           
   257                           ; BSR set to: 14
   258   000E1C  44                 	db	68	;'D'
   259   000E1D  61                 	db	97	;'a'
   260   000E1E  72                 	db	114	;'r'
   261   000E1F  6B                 	db	107	;'k'
   262   000E20  20                 	db	32
   263   000E21  42                 	db	66	;'B'
   264   000E22  6C                 	db	108	;'l'
   265   000E23  75                 	db	117	;'u'
   266   000E24  65                 	db	101	;'e'
   267   000E25  00                 	db	0
   268   000E26                     STR_10:
   269                           
   270                           ; BSR set to: 14
   271   000E26  45                 	db	69	;'E'
   272   000E27  67                 	db	103	;'g'
   273   000E28  67                 	db	103	;'g'
   274   000E29  73                 	db	115	;'s'
   275   000E2A  68                 	db	104	;'h'
   276   000E2B  65                 	db	101	;'e'
   277   000E2C  6C                 	db	108	;'l'
   278   000E2D  6C                 	db	108	;'l'
   279   000E2E  00                 	db	0
   280   000E2F                     STR_8:
   281                           
   282                           ; BSR set to: 14
   283   000E2F  4F                 	db	79	;'O'
   284   000E30  72                 	db	114	;'r'
   285   000E31  61                 	db	97	;'a'
   286   000E32  6E                 	db	110	;'n'
   287   000E33  67                 	db	103	;'g'
   288   000E34  65                 	db	101	;'e'
   289   000E35  00                 	db	0
   290   000E36                     STR_6:
   291                           
   292                           ; BSR set to: 14
   293   000E36  59                 	db	89	;'Y'
   294   000E37  65                 	db	101	;'e'
   295   000E38  6C                 	db	108	;'l'
   296   000E39  6C                 	db	108	;'l'
   297   000E3A  6F                 	db	111	;'o'
   298   000E3B  77                 	db	119	;'w'
   299   000E3C  00                 	db	0
   300   000E3D                     STR_4:
   301                           
   302                           ; BSR set to: 14
   303   000E3D  47                 	db	71	;'G'
   304   000E3E  72                 	db	114	;'r'
   305   000E3F  65                 	db	101	;'e'
   306   000E40  65                 	db	101	;'e'
   307   000E41  6E                 	db	110	;'n'
   308   000E42  00                 	db	0
   309   000E43                     STR_7:
   310                           
   311                           ; BSR set to: 14
   312   000E43  50                 	db	80	;'P'
   313   000E44  69                 	db	105	;'i'
   314   000E45  6E                 	db	110	;'n'
   315   000E46  6B                 	db	107	;'k'
   316   000E47  00                 	db	0
   317   000E48                     STR_11:
   318                           
   319                           ; BSR set to: 14
   320   000E48  6C                 	db	108	;'l'
   321   000E49  6C                 	db	108	;'l'
   322   000E4A  73                 	db	115	;'s'
   323   000E4B  00                 	db	0
   324   000E4C                     STR_3:
   325                           
   326                           ; BSR set to: 14
   327   000E4C  52                 	db	82	;'R'
   328   000E4D  65                 	db	101	;'e'
   329   000E4E  64                 	db	100	;'d'
   330   000E4F  00                 	db	0
   331   000E50  00                 	db	0	; dummy byte at the end
   332   000000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336   004328                     __pcinit:
   337                           	callstack 0
   338   004328                     start_initialization:
   339                           	callstack 0
   340   004328                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to BANK1 (15 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345   004328  0E18               	movlw	low __pidataBANK1
   346   00432A  6EF6               	movwf	tblptrl,c
   347   00432C  0E49               	movlw	high __pidataBANK1
   348   00432E  6EF7               	movwf	tblptrh,c
   349   004330  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350   004332  6EF8               	movwf	tblptru,c
   351   004334  EE01  F095         	lfsr	0,__pdataBANK1
   352   004338  EE10 F00F          	lfsr	1,15
   353   00433C                     copy_data0:
   354   00433C  0009               	tblrd		*+
   355   00433E  CFF5 FFEE          	movff	tablat,postinc0
   356   004342  50E5               	movf	postdec1,w,c
   357   004344  50E1               	movf	fsr1l,w,c
   358   004346  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (1 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362   004348  0E78               	movlw	low __pidataBANK0
   363   00434A  6EF6               	movwf	tblptrl,c
   364   00434C  0E49               	movlw	high __pidataBANK0
   365   00434E  6EF7               	movwf	tblptrh,c
   366   004350  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367   004352  6EF8               	movwf	tblptru,c
   368   004354  0009               	tblrd		*+	;fetch initializer
   369   004356  CFF5 F0FE          	movff	tablat,__pdataBANK0
   370                           
   371                           ; Clear objects allocated to BANK1 (149 bytes)
   372   00435A  EE01  F000         	lfsr	0,__pbssBANK1
   373   00435E  0E95               	movlw	149
   374   004360                     clear_0:
   375   004360  6AEE               	clrf	postinc0,c
   376   004362  06E8               	decf	wreg,f,c
   377   004364  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to BANK0 (14 bytes)
   380   004366  EE00  F0F0         	lfsr	0,__pbssBANK0
   381   00436A  0E0E               	movlw	14
   382   00436C                     clear_1:
   383   00436C  6AEE               	clrf	postinc0,c
   384   00436E  06E8               	decf	wreg,f,c
   385   004370  E1FD               	bnz	clear_1
   386   004372                     end_of_initialization:
   387                           	callstack 0
   388   004372                     __end_of__initialization:
   389                           	callstack 0
   390   004372  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   391   004374  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392   004376  0E00               	movlw	low (__Lmediumconst shr (0+16))
   393   004378  6EF8               	movwf	tblptru,c
   394   00437A  0100               	movlb	0
   395   00437C  EF16  F015         	goto	_main	;jump to C main() function
   396                           
   397                           	psect	bssBANK0
   398   0000F0                     __pbssBANK0:
   399                           	callstack 0
   400   0000F0                     _retracingDone:
   401                           	callstack 0
   402   0000F0                     	ds	2
   403   0000F2                     _movementCount:
   404                           	callstack 0
   405   0000F2                     	ds	2
   406   0000F4                     _flags:
   407                           	callstack 0
   408   0000F4                     	ds	1
   409   0000F5                     _motorL:
   410                           	callstack 0
   411   0000F5                     	ds	9
   412                           
   413                           	psect	dataBANK0
   414   0000FE                     __pdataBANK0:
   415                           	callstack 0
   416   0000FE                     _ForwardFlag:
   417                           	callstack 0
   418   0000FE                     	ds	1
   419                           
   420                           	psect	bssBANK1
   421   000100                     __pbssBANK1:
   422                           	callstack 0
   423   000100                     	ds	32
   424   000120                     _width:
   425                           	callstack 0
   426   000120                     	ds	2
   427   000122                     _prec:
   428                           	callstack 0
   429   000122                     	ds	2
   430   000124                     _maxTime:
   431                           	callstack 0
   432   000124                     	ds	2
   433   000126                     _timerMemory:
   434                           	callstack 0
   435   000126                     	ds	40
   436   00014E                     _movementMemory:
   437                           	callstack 0
   438   00014E                     	ds	40
   439   000176                     _colorf:
   440                           	callstack 0
   441   000176                     	ds	22
   442   00018C                     _motorR:
   443                           	callstack 0
   444   00018C                     	ds	9
   445                           
   446                           	psect	dataBANK1
   447   000195                     __pdataBANK1:
   448                           	callstack 0
   449   000195                     stoa@F1144:
   450                           	callstack 0
   451   000195                     	ds	7
   452   00019C                     __halfsquare:
   453                           	callstack 0
   454   00019C                     	ds	2
   455   00019E                     __1square:
   456                           	callstack 0
   457   00019E                     	ds	2
   458   0001A0                     __45drightdelay:
   459                           	callstack 0
   460   0001A0                     	ds	2
   461   0001A2                     __45dleftdelay:
   462                           	callstack 0
   463   0001A2                     	ds	2
   464                           
   465                           	psect	cstackBANK0
   466   000060                     __pcstackBANK0:
   467                           	callstack 0
   468   000060                     ___flmul@sign:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x0
   472   000060                     	ds	1
   473   000061                     ___flmul@grs:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x1
   477   000061                     	ds	4
   478   000065                     ___flmul@aexp:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482   000065                     	ds	1
   483   000066                     ___flmul@bexp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x6
   487   000066                     	ds	1
   488   000067                     ___flmul@prod:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x7
   492   000067                     	ds	4
   493   00006B                     ___flmul@temp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xB
   497   00006B                     	ds	2
   498   00006D                     ___fltol@sign1:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xD
   502   00006D                     	ds	1
   503   00006E                     ___fltol@exp1:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xE
   507   00006E                     	ds	1
   508   00006F                     ?_getTimerValue:
   509                           	callstack 0
   510   00006F                     RGB2Hue@cf:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xF
   514   00006F                     	ds	2
   515   000071                     ??_RGB2Hue:
   516   000071                     ??_getTimerValue:
   517                           
   518                           ; 1 bytes @ 0x11
   519   000071                     	ds	2
   520   000073                     getTimerValue@timerCount:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x13
   524   000073                     	ds	2
   525   000075                     White@mL:
   526                           	callstack 0
   527   000075                     memoryUpdateTime@movementCount:
   528                           	callstack 0
   529   000075                     _RGB2Hue$3155:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x15
   533   000075                     	ds	2
   534   000077                     White@mR:
   535                           	callstack 0
   536   000077                     memoryUpdateTime@timerMemory:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x17
   540   000077                     	ds	2
   541   000079                     White@movementCount:
   542                           	callstack 0
   543   000079                     memoryUpdateTime@timerVal:
   544                           	callstack 0
   545   000079                     RGB2Hue@max:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x19
   549   000079                     	ds	2
   550   00007B                     White@movementMemory:
   551                           	callstack 0
   552   00007B                     RGB2Hue@min:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1B
   556   00007B                     	ds	2
   557   00007D                     White@timerMemory:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x1D
   561   00007D                     	ds	2
   562   00007F                     ??_White:
   563                           
   564                           ; 1 bytes @ 0x1F
   565   00007F                     	ds	2
   566   000081                     White@tempTimer:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x21
   570   000081                     	ds	2
   571   000083                     White@i:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x23
   575   000083                     	ds	2
   576   000085                     Colour2Action@cf:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x25
   580   000085                     	ds	2
   581   000087                     
   582                           ; 1 bytes @ 0x27
   583   000087                     	ds	2
   584   000089                     ??_main:
   585                           
   586                           ; 1 bytes @ 0x29
   587   000089                     	ds	2
   588   00008B                     main@data:
   589                           	callstack 0
   590                           
   591                           ; 100 bytes @ 0x2B
   592   00008B                     	ds	100
   593   0000EF                     main@wall:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x8F
   597   0000EF                     	ds	1
   598                           
   599                           	psect	cstackCOMRAM
   600   000001                     __pcstackCOMRAM:
   601                           	callstack 0
   602   000001                     ??_I2C_2_Master_Idle:
   603   000001                     ?_strlen:
   604                           	callstack 0
   605   000001                     ?_strncmp:
   606                           	callstack 0
   607   000001                     ?___wmul:
   608                           	callstack 0
   609   000001                     sendCharSerial4@charToSend:
   610                           	callstack 0
   611   000001                     ClickLEDOn@power:
   612                           	callstack 0
   613   000001                     initDCmotorsPWM@PWMperiod:
   614                           	callstack 0
   615   000001                     memoryUpdateMovement@cf:
   616                           	callstack 0
   617   000001                     ___wmul@multiplier:
   618                           	callstack 0
   619   000001                     fputc@c:
   620                           	callstack 0
   621   000001                     strlen@s:
   622                           	callstack 0
   623   000001                     strncmp@_l:
   624                           	callstack 0
   625   000001                     ___fleq@ff1:
   626                           	callstack 0
   627   000001                     ___flge@ff1:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631   000001                     	ds	1
   632   000002                     ??_I2C_2_Master_Read:
   633   000002                     I2C_2_Master_Write@data_byte:
   634                           	callstack 0
   635   000002                     sendStringSerial4@string:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x1
   639   000002                     	ds	1
   640   000003                     I2C_2_Master_Read@ack:
   641                           	callstack 0
   642   000003                     color_writetoaddr@value:
   643                           	callstack 0
   644   000003                     memoryUpdateMovement@movementCount:
   645                           	callstack 0
   646   000003                     ___wmul@multiplicand:
   647                           	callstack 0
   648   000003                     fputc@fp:
   649                           	callstack 0
   650   000003                     strlen@a:
   651                           	callstack 0
   652   000003                     strncmp@_r:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x2
   656   000003                     	ds	1
   657   000004                     I2C_2_Master_Read@tmp:
   658                           	callstack 0
   659   000004                     color_writetoaddr@address:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x3
   663   000004                     	ds	1
   664   000005                     ??_color_click_init:
   665   000005                     ??_fputc:
   666   000005                     ?_color_read_Red:
   667                           	callstack 0
   668   000005                     ?_color_read_Green:
   669                           	callstack 0
   670   000005                     ?_color_read_Blue:
   671                           	callstack 0
   672   000005                     ?_color_read_Clear:
   673                           	callstack 0
   674   000005                     memoryUpdateMovement@movementMemory:
   675                           	callstack 0
   676   000005                     ___wmul@product:
   677                           	callstack 0
   678   000005                     strncmp@n:
   679                           	callstack 0
   680   000005                     ___fleq@ff2:
   681                           	callstack 0
   682   000005                     ___flge@ff2:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x4
   686   000005                     	ds	2
   687   000007                     ??_strncmp:
   688   000007                     ??_color_read_Red:
   689   000007                     ??_color_read_Green:
   690   000007                     ??_color_read_Blue:
   691   000007                     ??_color_read_Clear:
   692   000007                     ?___lwdiv:
   693                           	callstack 0
   694   000007                     memoryUpdateMovement@colourcode:
   695                           	callstack 0
   696   000007                     ___lwdiv@dividend:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x6
   700   000007                     	ds	1
   701   000008                     strncmp@l:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x7
   705   000008                     	ds	1
   706   000009                     ??___fleq:
   707   000009                     ??___flge:
   708   000009                     ___lwdiv@divisor:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x8
   712   000009                     	ds	1
   713   00000A                     color_read_Red@tmp:
   714                           	callstack 0
   715   00000A                     color_read_Green@tmp:
   716                           	callstack 0
   717   00000A                     color_read_Blue@tmp:
   718                           	callstack 0
   719   00000A                     color_read_Clear@tmp:
   720                           	callstack 0
   721   00000A                     stoa@fp:
   722                           	callstack 0
   723   00000A                     strncmp@r:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x9
   727   00000A                     	ds	1
   728   00000B                     ___lwdiv@quotient:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xA
   732   00000B                     	ds	1
   733   00000C                     ?___xxtofl:
   734                           	callstack 0
   735   00000C                     stoa@s:
   736                           	callstack 0
   737   00000C                     ___xxtofl@val:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0xB
   741   00000C                     	ds	1
   742   00000D                     ?_Hue2Colour:
   743                           	callstack 0
   744   00000D                     ___lwdiv@counter:
   745                           	callstack 0
   746   00000D                     Hue2Colour@cf:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0xC
   750   00000D                     	ds	1
   751   00000E                     ??_stoa:
   752   00000E                     setMotorPWM@m:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xD
   756   00000E                     	ds	1
   757   00000F                     Hue2Colour@colourname:
   758                           	callstack 0
   759   00000F                     stoa@nuls:
   760                           	callstack 0
   761                           
   762                           ; 7 bytes @ 0xE
   763   00000F                     	ds	1
   764   000010                     ??_setMotorPWM:
   765   000010                     ??___xxtofl:
   766                           
   767                           ; 1 bytes @ 0xF
   768   000010                     	ds	2
   769   000012                     setMotorPWM@posDuty:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x11
   773   000012                     	ds	1
   774   000013                     setMotorPWM@negDuty:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x12
   778   000013                     	ds	1
   779   000014                     ___xxtofl@sign:
   780                           	callstack 0
   781   000014                     stop@mL:
   782                           	callstack 0
   783   000014                     turnLeft@mL:
   784                           	callstack 0
   785   000014                     turnRight@mL:
   786                           	callstack 0
   787   000014                     fullSpeedAhead@mL:
   788                           	callstack 0
   789   000014                     fullSpeedReverse@mL:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x13
   793   000014                     	ds	1
   794   000015                     ___xxtofl@exp:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x14
   798   000015                     	ds	1
   799   000016                     stop@mR:
   800                           	callstack 0
   801   000016                     turnLeft@mR:
   802                           	callstack 0
   803   000016                     turnRight@mR:
   804                           	callstack 0
   805   000016                     fullSpeedAhead@mR:
   806                           	callstack 0
   807   000016                     fullSpeedReverse@mR:
   808                           	callstack 0
   809   000016                     stoa@w:
   810                           	callstack 0
   811   000016                     ___xxtofl@arg:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x15
   815   000016                     	ds	2
   816   000018                     ??_fullSpeedAhead:
   817   000018                     ??_stop:
   818   000018                     ??_fullSpeedReverse:
   819   000018                     turnLeft@i:
   820                           	callstack 0
   821   000018                     turnRight@i:
   822                           	callstack 0
   823   000018                     stoa@i:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x17
   827   000018                     	ds	1
   828   000019                     fullSpeedAhead@i:
   829                           	callstack 0
   830   000019                     fullSpeedReverse@i:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x18
   834   000019                     	ds	1
   835   00001A                     ?___fladd:
   836                           	callstack 0
   837   00001A                     Left45@mL:
   838                           	callstack 0
   839   00001A                     Right45@mL:
   840                           	callstack 0
   841   00001A                     colour_read_all@cf:
   842                           	callstack 0
   843   00001A                     stoa@cp:
   844                           	callstack 0
   845   00001A                     ___fladd@b:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x19
   849   00001A                     	ds	1
   850   00001B                     reverseHalfSquare@mL:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x1A
   854   00001B                     	ds	1
   855   00001C                     Left45@mR:
   856                           	callstack 0
   857   00001C                     Right45@mR:
   858                           	callstack 0
   859   00001C                     stoa@l:
   860                           	callstack 0
   861   00001C                     colour_read_all@R:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x1B
   865   00001C                     	ds	1
   866   00001D                     reverseHalfSquare@mR:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1C
   870   00001D                     	ds	1
   871   00001E                     ??_Left45:
   872   00001E                     ??_Right45:
   873   00001E                     stoa@p:
   874                           	callstack 0
   875   00001E                     ___fladd@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x1D
   879   00001E                     	ds	1
   880   00001F                     ??_reverseHalfSquare:
   881                           
   882                           ; 1 bytes @ 0x1E
   883   00001F                     	ds	1
   884   000020                     rotate180left@mL:
   885                           	callstack 0
   886   000020                     vfpfcnvrt@fp:
   887                           	callstack 0
   888   000020                     colour_read_all@G:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x1F
   892   000020                     	ds	1
   893   000021                     Red_R90@mL:
   894                           	callstack 0
   895   000021                     Green_L90@mL:
   896                           	callstack 0
   897   000021                     Yellow_rev1_R90@mL:
   898                           	callstack 0
   899   000021                     Pink_rev1_L90@mL:
   900                           	callstack 0
   901   000021                     Orange_R135@mL:
   902                           	callstack 0
   903   000021                     LightBlue_L135@mL:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x20
   907   000021                     	ds	1
   908   000022                     ??___fladd:
   909   000022                     rotate180left@mR:
   910                           	callstack 0
   911   000022                     vfpfcnvrt@fmt:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x21
   915   000022                     	ds	1
   916   000023                     Red_R90@mR:
   917                           	callstack 0
   918   000023                     Green_L90@mR:
   919                           	callstack 0
   920   000023                     Yellow_rev1_R90@mR:
   921                           	callstack 0
   922   000023                     Pink_rev1_L90@mR:
   923                           	callstack 0
   924   000023                     Orange_R135@mR:
   925                           	callstack 0
   926   000023                     LightBlue_L135@mR:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x22
   930   000023                     	ds	1
   931   000024                     Blue_T180@mL:
   932                           	callstack 0
   933   000024                     vfpfcnvrt@ap:
   934                           	callstack 0
   935   000024                     colour_read_all@B:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x23
   939   000024                     	ds	1
   940   000025                     ??_Yellow_rev1_R90:
   941   000025                     ??_Pink_rev1_L90:
   942   000025                     
   943                           ; 1 bytes @ 0x24
   944   000025                     	ds	1
   945   000026                     ??_vfpfcnvrt:
   946   000026                     ___fladd@signs:
   947                           	callstack 0
   948   000026                     Blue_T180@mR:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x25
   952   000026                     	ds	1
   953   000027                     ___fladd@aexp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x26
   957   000027                     	ds	1
   958   000028                     ___fladd@bexp:
   959                           	callstack 0
   960   000028                     _vfpfcnvrt$2854:
   961                           	callstack 0
   962   000028                     colour_read_all@C:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x27
   966   000028                     	ds	1
   967   000029                     ___fladd@grs:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x28
   971   000029                     	ds	1
   972   00002A                     ?_vfprintf:
   973                           	callstack 0
   974   00002A                     ?___flsub:
   975                           	callstack 0
   976   00002A                     vfprintf@fp:
   977                           	callstack 0
   978   00002A                     ___flsub@b:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x29
   982   00002A                     	ds	2
   983   00002C                     vfprintf@fmt:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x2B
   987   00002C                     	ds	2
   988   00002E                     vfprintf@ap:
   989                           	callstack 0
   990   00002E                     ___flsub@a:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x2D
   994   00002E                     	ds	2
   995   000030                     vfprintf@cfmt:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2F
   999   000030                     	ds	2
  1000   000032                     ?_sprintf:
  1001                           	callstack 0
  1002   000032                     ?___fldiv:
  1003                           	callstack 0
  1004   000032                     sprintf@s:
  1005                           	callstack 0
  1006   000032                     ___fldiv@b:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x31
  1010   000032                     	ds	2
  1011   000034                     sprintf@fmt:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x33
  1015   000034                     	ds	2
  1016   000036                     ___fldiv@a:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x35
  1020   000036                     	ds	2
  1021   000038                     sprintf@ap:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x37
  1025   000038                     	ds	2
  1026   00003A                     ??___fldiv:
  1027   00003A                     sprintf@f:
  1028                           	callstack 0
  1029                           
  1030                           ; 11 bytes @ 0x39
  1031   00003A                     	ds	4
  1032   00003E                     ___fldiv@rem:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x3D
  1036   00003E                     	ds	4
  1037   000042                     ___fldiv@sign:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x41
  1041   000042                     	ds	1
  1042   000043                     ___fldiv@new_exp:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x42
  1046   000043                     	ds	2
  1047   000045                     Color2String@buf:
  1048                           	callstack 0
  1049   000045                     ___fldiv@grs:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x44
  1053   000045                     	ds	2
  1054   000047                     Color2String@cf:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x46
  1058   000047                     	ds	2
  1059   000049                     ___fldiv@bexp:
  1060                           	callstack 0
  1061   000049                     Color2String@colourname:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x48
  1065   000049                     	ds	1
  1066   00004A                     ___fldiv@aexp:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x49
  1070   00004A                     	ds	1
  1071   00004B                     ?___flmul:
  1072                           	callstack 0
  1073   00004B                     ___flmul@b:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x4A
  1077   00004B                     	ds	4
  1078   00004F                     ___flmul@a:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x4E
  1082   00004F                     	ds	4
  1083   000053                     ??___flmul:
  1084                           
  1085                           ; 1 bytes @ 0x52
  1086   000053                     	ds	4
  1087   000057                     ?___fltol:
  1088                           	callstack 0
  1089   000057                     ___fltol@f1:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x56
  1093   000057                     	ds	4
  1094   00005B                     ??___fltol:
  1095                           
  1096                           ; 1 bytes @ 0x5A
  1097   00005B                     	ds	4
  1098   00005F                     
  1099                           ; 1 bytes @ 0x5E
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 19 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  data          100   43[BANK0 ] unsigned char [100]
  1110 ;;  buf            20    0        unsigned char [20]
  1111 ;;  PWMcycle        2    0        unsigned int 
  1112 ;;  wall            1  143[BANK0 ] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:      103 bytes
  1127 ;; Hardware stack levels required when called: 9
  1128 ;; This function calls:
  1129 ;;		_ClickLEDOn
  1130 ;;		_Color2String
  1131 ;;		_Colour2Action
  1132 ;;		_Hue2Colour
  1133 ;;		_I2C_2_Master_Init
  1134 ;;		_Interrupts_init
  1135 ;;		_LED_init
  1136 ;;		_RGB2Hue
  1137 ;;		_Timer0_init
  1138 ;;		_TimerReset
  1139 ;;		___flge
  1140 ;;		_color_click_init
  1141 ;;		_colour_read_all
  1142 ;;		_fullSpeedAhead
  1143 ;;		_initDCmotorsPWM
  1144 ;;		_initUSART4
  1145 ;;		_memoryUpdateMovement
  1146 ;;		_memoryUpdateTime
  1147 ;;		_stop
  1148 ;; This function is called by:
  1149 ;;		Startup code after reset
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text0
  1154   002A2C                     __ptext0:
  1155                           	callstack 0
  1156   002A2C                     _main:
  1157                           	callstack 22
  1158   002A2C                     
  1159                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1160   002A2C  EC5F  F024         	call	_initUSART4	;wreg free
  1161   002A30                     
  1162                           ;main.c: 23:     color_click_init();
  1163   002A30  EC6D  F023         	call	_color_click_init	;wreg free
  1164   002A34                     
  1165                           ;main.c: 24:     I2C_2_Master_Init();
  1166   002A34  EC11  F024         	call	_I2C_2_Master_Init	;wreg free
  1167   002A38                     
  1168                           ;main.c: 25:     LED_init();
  1169   002A38  EC94  F024         	call	_LED_init	;wreg free
  1170   002A3C                     
  1171                           ;main.c: 26:     Interrupts_init();
  1172   002A3C  ECA1  F024         	call	_Interrupts_init	;wreg free
  1173   002A40                     
  1174                           ;main.c: 27:     Timer0_init();
  1175   002A40  EC4D  F024         	call	_Timer0_init	;wreg free
  1176   002A44                     
  1177                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1178   002A44  0E00               	movlw	0
  1179   002A46  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1180   002A48  0E63               	movlw	99
  1181   002A4A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1182   002A4C  EC15  F01F         	call	_initDCmotorsPWM	;wreg free
  1183   002A50                     
  1184                           ;main.c: 31:     motorL.power=0;
  1185   002A50  0E00               	movlw	0
  1186   002A52  0100               	movlb	0	; () banked
  1187   002A54  6FF5               	movwf	_motorL& (0+255),b
  1188   002A56                     
  1189                           ; BSR set to: 0
  1190                           ;main.c: 32:     motorL.direction=1;
  1191   002A56  0E01               	movlw	1
  1192   002A58  6FF6               	movwf	(_motorL+1)& (0+255),b
  1193   002A5A                     
  1194                           ; BSR set to: 0
  1195                           ;main.c: 33:     motorL.brakemode=1;
  1196   002A5A  0E01               	movlw	1
  1197   002A5C  6FF7               	movwf	(_motorL+2)& (0+255),b
  1198   002A5E                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1201   002A5E  0EAA               	movlw	170
  1202   002A60  6FFA               	movwf	(_motorL+5)& (0+255),b
  1203   002A62  0E0F               	movlw	15
  1204   002A64  6FFB               	movwf	(_motorL+6)& (0+255),b
  1205   002A66                     
  1206                           ; BSR set to: 0
  1207                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1208   002A66  0EA6               	movlw	166
  1209   002A68  6FFC               	movwf	(_motorL+7)& (0+255),b
  1210   002A6A  0E0F               	movlw	15
  1211   002A6C  6FFD               	movwf	(_motorL+8)& (0+255),b
  1212   002A6E                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1215   002A6E  0E00               	movlw	0
  1216   002A70  6FF9               	movwf	(_motorL+4)& (0+255),b
  1217   002A72  0E63               	movlw	99
  1218   002A74  6FF8               	movwf	(_motorL+3)& (0+255),b
  1219   002A76                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 38:     motorR.power=0;
  1222   002A76  0E00               	movlw	0
  1223   002A78  0101               	movlb	1	; () banked
  1224   002A7A  6F8C               	movwf	_motorR& (0+255),b
  1225   002A7C                     
  1226                           ; BSR set to: 1
  1227                           ;main.c: 39:     motorR.direction=1;
  1228   002A7C  0E01               	movlw	1
  1229   002A7E  6F8D               	movwf	(_motorR+1)& (0+255),b
  1230   002A80                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 40:     motorR.brakemode=1;
  1233   002A80  0E01               	movlw	1
  1234   002A82  6F8E               	movwf	(_motorR+2)& (0+255),b
  1235   002A84                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1238   002A84  0E25               	movlw	37
  1239   002A86  6F91               	movwf	(_motorR+5)& (0+255),b
  1240   002A88  0E0F               	movlw	15
  1241   002A8A  6F92               	movwf	(_motorR+6)& (0+255),b
  1242   002A8C                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1245   002A8C  0E21               	movlw	33
  1246   002A8E  6F93               	movwf	(_motorR+7)& (0+255),b
  1247   002A90  0E0F               	movlw	15
  1248   002A92  6F94               	movwf	(_motorR+8)& (0+255),b
  1249   002A94                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1252   002A94  0E00               	movlw	0
  1253   002A96  6F90               	movwf	(_motorR+4)& (0+255),b
  1254   002A98  0E63               	movlw	99
  1255   002A9A  6F8F               	movwf	(_motorR+3)& (0+255),b
  1256   002A9C                     
  1257                           ; BSR set to: 1
  1258                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1259   002A9C  8486               	bsf	134,2,c	;volatile
  1260   002A9E                     
  1261                           ; BSR set to: 1
  1262                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1263   002A9E  010E               	movlb	14	; () banked
  1264   002AA0  95B4               	bcf	180,2,b	;volatile
  1265   002AA2                     l131:
  1266                           
  1267                           ;main.c: 47:     while(PORTFbits.RF2){
  1268   002AA2  B48E               	btfsc	142,2,c	;volatile
  1269   002AA4  EF56  F015         	goto	u4151
  1270   002AA8  EF58  F015         	goto	u4150
  1271   002AAC                     u4151:
  1272   002AAC  EF51  F015         	goto	l131
  1273   002AB0                     u4150:
  1274   002AB0                     
  1275                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1276   002AB0  0E29               	movlw	41
  1277   002AB2  0100               	movlb	0	; () banked
  1278   002AB4  6F8A               	movwf	(??_main+1)& (0+255),b
  1279   002AB6  0E96               	movlw	150
  1280   002AB8  6F89               	movwf	??_main& (0+255),b
  1281   002ABA  0E7F               	movlw	127
  1282   002ABC                     u4227:
  1283   002ABC  2EE8               	decfsz	wreg,f,c
  1284   002ABE  D7FE               	bra	u4227
  1285   002AC0  2F89               	decfsz	??_main& (0+255),f,b
  1286   002AC2  D7FC               	bra	u4227
  1287   002AC4  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  1288   002AC6  D7FA               	bra	u4227
  1289   002AC8                     
  1290                           ;main.c: 50:     TimerReset();
  1291   002AC8  ECB6  F024         	call	_TimerReset	;wreg free
  1292   002ACC                     
  1293                           ;main.c: 51:     char wall=0;
  1294   002ACC  0E00               	movlw	0
  1295   002ACE  0100               	movlb	0	; () banked
  1296   002AD0  6FEF               	movwf	main@wall& (0+255),b
  1297   002AD2                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 53:     ClickLEDOn(0);
  1300   002AD2  0E00               	movlw	0
  1301   002AD4  ECC8  F023         	call	_ClickLEDOn
  1302                           
  1303                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1304   002AD8  EF1C  F016         	goto	l4485
  1305   002ADC                     l4441:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1309   002ADC  0EF5               	movlw	low _motorL
  1310   002ADE  6E14               	movwf	fullSpeedAhead@mL^0,c
  1311   002AE0  0E00               	movlw	high _motorL
  1312   002AE2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1313   002AE4  0E8C               	movlw	low _motorR
  1314   002AE6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1315   002AE8  0E01               	movlw	high _motorR
  1316   002AEA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1317   002AEC  EC29  F020         	call	_fullSpeedAhead	;wreg free
  1318                           
  1319                           ;main.c: 59:         while (!wall){
  1320   002AF0  EFCB  F015         	goto	l4459
  1321   002AF4                     l4443:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 60:             colour_read_all(&colorf);
  1325   002AF4  0E76               	movlw	low _colorf
  1326   002AF6  6E1A               	movwf	colour_read_all@cf^0,c
  1327   002AF8  0E01               	movlw	high _colorf
  1328   002AFA  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1329   002AFC  EC72  F01A         	call	_colour_read_all	;wreg free
  1330   002B00                     
  1331                           ;main.c: 61:             Color2String(data,&colorf);
  1332   002B00  0E8B               	movlw	low main@data
  1333   002B02  6E45               	movwf	Color2String@buf^0,c
  1334   002B04  0E00               	movlw	high main@data
  1335   002B06  6E46               	movwf	(Color2String@buf+1)^0,c
  1336   002B08  0E76               	movlw	low _colorf
  1337   002B0A  6E47               	movwf	Color2String@cf^0,c
  1338   002B0C  0E01               	movlw	high _colorf
  1339   002B0E  6E48               	movwf	(Color2String@cf+1)^0,c
  1340   002B10  EC8D  F023         	call	_Color2String	;wreg free
  1341   002B14                     
  1342                           ;main.c: 64:              if (colorf.Cf<50)
  1343   002B14  C182  F001         	movff	_colorf+12,___flge@ff1
  1344   002B18  C183  F002         	movff	_colorf+13,___flge@ff1+1
  1345   002B1C  C184  F003         	movff	_colorf+14,___flge@ff1+2
  1346   002B20  C185  F004         	movff	_colorf+15,___flge@ff1+3
  1347   002B24  0E00               	movlw	0
  1348   002B26  6E05               	movwf	___flge@ff2^0,c
  1349   002B28  0E00               	movlw	0
  1350   002B2A  6E06               	movwf	(___flge@ff2+1)^0,c
  1351   002B2C  0E48               	movlw	72
  1352   002B2E  6E07               	movwf	(___flge@ff2+2)^0,c
  1353   002B30  0E42               	movlw	66
  1354   002B32  6E08               	movwf	(___flge@ff2+3)^0,c
  1355   002B34  ECF5  F01A         	call	___flge	;wreg free
  1356   002B38  B0D8               	btfsc	status,0,c
  1357   002B3A  EFA1  F015         	goto	u4161
  1358   002B3E  EFA3  F015         	goto	u4160
  1359   002B42                     u4161:
  1360   002B42  EFCB  F015         	goto	l4459
  1361   002B46                     u4160:
  1362   002B46                     
  1363                           ;main.c: 65:              {;main.c: 66:                 memoryUpdateTime(movementCount,t
      +                          imerMemory);
  1364   002B46  C0F2  F075         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1365   002B4A  C0F3  F076         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1366   002B4E  0E26               	movlw	low _timerMemory
  1367   002B50  0100               	movlb	0	; () banked
  1368   002B52  6F77               	movwf	memoryUpdateTime@timerMemory& (0+255),b
  1369   002B54  0E01               	movlw	high _timerMemory
  1370   002B56  6F78               	movwf	(memoryUpdateTime@timerMemory+1)& (0+255),b
  1371   002B58  ECFA  F023         	call	_memoryUpdateTime	;wreg free
  1372   002B5C                     
  1373                           ;main.c: 68:                 wall=1;
  1374   002B5C  0E01               	movlw	1
  1375   002B5E  0100               	movlb	0	; () banked
  1376   002B60  6FEF               	movwf	main@wall& (0+255),b
  1377   002B62                     
  1378                           ; BSR set to: 0
  1379                           ;main.c: 69:                 ClickLEDOn(1);
  1380   002B62  0E01               	movlw	1
  1381   002B64  ECC8  F023         	call	_ClickLEDOn
  1382   002B68                     
  1383                           ;main.c: 70:                 stop(&motorL,&motorR);
  1384   002B68  0EF5               	movlw	low _motorL
  1385   002B6A  6E14               	movwf	stop@mL^0,c
  1386   002B6C  0E00               	movlw	high _motorL
  1387   002B6E  6E15               	movwf	(stop@mL+1)^0,c
  1388   002B70  0E8C               	movlw	low _motorR
  1389   002B72  6E16               	movwf	stop@mR^0,c
  1390   002B74  0E01               	movlw	high _motorR
  1391   002B76  6E17               	movwf	(stop@mR+1)^0,c
  1392   002B78  EC88  F01D         	call	_stop	;wreg free
  1393   002B7C                     
  1394                           ;main.c: 71:                 _delay((unsigned long)((2000)*(64000000/4000.0)));
  1395   002B7C  0EA3               	movlw	163
  1396   002B7E  0100               	movlb	0	; () banked
  1397   002B80  6F8A               	movwf	(??_main+1)& (0+255),b
  1398   002B82  0E57               	movlw	87
  1399   002B84  6F89               	movwf	??_main& (0+255),b
  1400   002B86  0E02               	movlw	2
  1401   002B88                     u4237:
  1402   002B88  2EE8               	decfsz	wreg,f,c
  1403   002B8A  D7FE               	bra	u4237
  1404   002B8C  2F89               	decfsz	??_main& (0+255),f,b
  1405   002B8E  D7FC               	bra	u4237
  1406   002B90  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  1407   002B92  D7FA               	bra	u4237
  1408   002B94  F000               	nop	
  1409   002B96                     l4459:
  1410                           
  1411                           ;main.c: 59:         while (!wall){
  1412   002B96  0100               	movlb	0	; () banked
  1413   002B98  51EF               	movf	main@wall& (0+255),w,b
  1414   002B9A  B4D8               	btfsc	status,2,c
  1415   002B9C  EFD2  F015         	goto	u4171
  1416   002BA0  EFD4  F015         	goto	u4170
  1417   002BA4                     u4171:
  1418   002BA4  EF7A  F015         	goto	l4443
  1419   002BA8                     u4170:
  1420   002BA8                     
  1421                           ; BSR set to: 0
  1422                           ;main.c: 74:         colour_read_all(&colorf);
  1423   002BA8  0E76               	movlw	low _colorf
  1424   002BAA  6E1A               	movwf	colour_read_all@cf^0,c
  1425   002BAC  0E01               	movlw	high _colorf
  1426   002BAE  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1427   002BB0  EC72  F01A         	call	_colour_read_all	;wreg free
  1428   002BB4                     
  1429                           ;main.c: 75:         wall=0;
  1430   002BB4  0E00               	movlw	0
  1431   002BB6  0100               	movlb	0	; () banked
  1432   002BB8  6FEF               	movwf	main@wall& (0+255),b
  1433   002BBA                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 76:         ClickLEDOn(0);
  1436   002BBA  0E00               	movlw	0
  1437   002BBC  ECC8  F023         	call	_ClickLEDOn
  1438   002BC0                     
  1439                           ;main.c: 77:         RGB2Hue(&colorf);
  1440   002BC0  0E76               	movlw	low _colorf
  1441   002BC2  0100               	movlb	0	; () banked
  1442   002BC4  6F6F               	movwf	RGB2Hue@cf& (0+255),b
  1443   002BC6  0E01               	movlw	high _colorf
  1444   002BC8  6F70               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1445   002BCA  EC29  F007         	call	_RGB2Hue	;wreg free
  1446   002BCE                     
  1447                           ;main.c: 78:         Hue2Colour(&colorf);
  1448   002BCE  0E76               	movlw	low _colorf
  1449   002BD0  6E0D               	movwf	Hue2Colour@cf^0,c
  1450   002BD2  0E01               	movlw	high _colorf
  1451   002BD4  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1452   002BD6  ECBF  F00A         	call	_Hue2Colour	;wreg free
  1453   002BDA                     
  1454                           ;main.c: 79:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1455   002BDA  0E76               	movlw	low _colorf
  1456   002BDC  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1457   002BDE  0E01               	movlw	high _colorf
  1458   002BE0  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1459   002BE2  C0F2  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1460   002BE6  C0F3  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1461   002BEA  0E4E               	movlw	low _movementMemory
  1462   002BEC  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1463   002BEE  0E01               	movlw	high _movementMemory
  1464   002BF0  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1465   002BF2  ECE2  F023         	call	_memoryUpdateMovement	;wreg free
  1466   002BF6                     
  1467                           ;main.c: 80:         Colour2Action(&colorf);
  1468   002BF6  0E76               	movlw	low _colorf
  1469   002BF8  0100               	movlb	0	; () banked
  1470   002BFA  6F85               	movwf	Colour2Action@cf& (0+255),b
  1471   002BFC  0E01               	movlw	high _colorf
  1472   002BFE  6F86               	movwf	(Colour2Action@cf+1)& (0+255),b
  1473   002C00  EC28  F016         	call	_Colour2Action	;wreg free
  1474   002C04                     
  1475                           ;main.c: 81:         if (colorf.colourindex == 7)
  1476   002C04  0E07               	movlw	7
  1477   002C06  0101               	movlb	1	; () banked
  1478   002C08  198A               	xorwf	(_colorf+20)& (0+255),w,b
  1479   002C0A  118B               	iorwf	(_colorf+21)& (0+255),w,b
  1480   002C0C  A4D8               	btfss	status,2,c
  1481   002C0E  EF0B  F016         	goto	u4181
  1482   002C12  EF0D  F016         	goto	u4180
  1483   002C16                     u4181:
  1484   002C16  EF17  F016         	goto	l4481
  1485   002C1A                     u4180:
  1486   002C1A                     l4479:
  1487   002C1A  0100               	movlb	0	; () banked
  1488   002C1C  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  1489   002C1E  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1490   002C20  B4D8               	btfsc	status,2,c
  1491   002C22  EF15  F016         	goto	u4191
  1492   002C26  EF17  F016         	goto	u4190
  1493   002C2A                     u4191:
  1494   002C2A  EF0D  F016         	goto	l4479
  1495   002C2E                     u4190:
  1496   002C2E                     l4481:
  1497                           
  1498                           ;main.c: 91:         TimerReset();
  1499   002C2E  ECB6  F024         	call	_TimerReset	;wreg free
  1500   002C32                     
  1501                           ;main.c: 92:         movementCount++;
  1502   002C32  0100               	movlb	0	; () banked
  1503   002C34  4BF2               	infsnz	_movementCount& (0+255),f,b	;volatile
  1504   002C36  2BF3               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1505   002C38                     l4485:
  1506                           
  1507                           ;main.c: 56:     while (!retracingDone){
  1508   002C38  0100               	movlb	0	; () banked
  1509   002C3A  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  1510   002C3C  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1511   002C3E  B4D8               	btfsc	status,2,c
  1512   002C40  EF24  F016         	goto	u4201
  1513   002C44  EF26  F016         	goto	u4200
  1514   002C48                     u4201:
  1515   002C48  EF6E  F015         	goto	l4441
  1516   002C4C                     u4200:
  1517   002C4C                     
  1518                           ; BSR set to: 0
  1519   002C4C  EF16  F000         	goto	start
  1520   002C50                     __end_of_main:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _memoryUpdateTime *****************
  1524 ;; Defined at:
  1525 ;;		line 16 in file "memory.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  movementCoun    2   21[BANK0 ] volatile unsigned int 
  1528 ;;  timerMemory     2   23[BANK0 ] PTR volatile unsigned in
  1529 ;;		 -> timerMemory(40), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  timerVal        2   25[BANK0 ] unsigned int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1541 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;Total ram usage:        6 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 3
  1548 ;; This function calls:
  1549 ;;		_getTimerValue
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556   0047F4                     __ptext1:
  1557                           	callstack 0
  1558   0047F4                     _memoryUpdateTime:
  1559                           	callstack 27
  1560   0047F4  EC5F  F021         	call	_getTimerValue	;wreg free
  1561   0047F8  0E18               	movlw	24
  1562   0047FA  0100               	movlb	0	; () banked
  1563   0047FC  256F               	addwf	?_getTimerValue& (0+255),w,b
  1564   0047FE  6F79               	movwf	memoryUpdateTime@timerVal& (0+255),b
  1565   004800  0EFC               	movlw	252
  1566   004802  2170               	addwfc	(?_getTimerValue+1)& (0+255),w,b
  1567   004804  6F7A               	movwf	(memoryUpdateTime@timerVal+1)& (0+255),b
  1568   004806                     
  1569                           ; BSR set to: 0
  1570                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1571   004806  90D8               	bcf	status,0,c
  1572   004808  3575               	rlcf	memoryUpdateTime@movementCount& (0+255),w,b	;volatile
  1573   00480A  6ED9               	movwf	fsr2l,c
  1574   00480C  3576               	rlcf	(memoryUpdateTime@movementCount+1)& (0+255),w,b	;volatile
  1575   00480E  6EDA               	movwf	fsr2h,c
  1576   004810  5177               	movf	memoryUpdateTime@timerMemory& (0+255),w,b
  1577   004812  26D9               	addwf	fsr2l,f,c
  1578   004814  5178               	movf	(memoryUpdateTime@timerMemory+1)& (0+255),w,b
  1579   004816  22DA               	addwfc	fsr2h,f,c
  1580   004818  C079  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1581   00481C  C07A  FFDD         	movff	memoryUpdateTime@timerVal+1,postdec2
  1582   004820                     
  1583                           ; BSR set to: 0
  1584   004820  0012               	return		;funcret
  1585   004822                     __end_of_memoryUpdateTime:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _memoryUpdateMovement *****************
  1589 ;; Defined at:
  1590 ;;		line 10 in file "memory.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  cf              2    0[COMRAM] PTR struct RGBC_rel
  1593 ;;		 -> colorf(22), 
  1594 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1595 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1596 ;;		 -> movementMemory(40), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  colourcode      2    6[COMRAM] int 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1608 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;Total ram usage:        8 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text2
  1623   0047C4                     __ptext2:
  1624                           	callstack 0
  1625   0047C4                     _memoryUpdateMovement:
  1626                           	callstack 29
  1627   0047C4                     
  1628                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC_rel *cf, volatile unsigned int move
      +                          mentCount, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int 
      +                          colourcode = cf->colourindex;
  1629   0047C4  EE20 F014          	lfsr	2,20
  1630   0047C8  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1631   0047CA  26D9               	addwf	fsr2l,f,c
  1632   0047CC  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1633   0047CE  22DA               	addwfc	fsr2h,f,c
  1634   0047D0  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1635   0047D4  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1636                           
  1637                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1638   0047D8  90D8               	bcf	status,0,c
  1639   0047DA  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1640   0047DC  6ED9               	movwf	fsr2l,c
  1641   0047DE  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1642   0047E0  6EDA               	movwf	fsr2h,c
  1643   0047E2  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1644   0047E4  26D9               	addwf	fsr2l,f,c
  1645   0047E6  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1646   0047E8  22DA               	addwfc	fsr2h,f,c
  1647   0047EA  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1648   0047EE  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1649   0047F2  0012               	return		;funcret
  1650   0047F4                     __end_of_memoryUpdateMovement:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _initUSART4 *****************
  1654 ;; Defined at:
  1655 ;;		line 7 in file "serial.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text3
  1684   0048BE                     __ptext3:
  1685                           	callstack 0
  1686   0048BE                     _initUSART4:
  1687                           	callstack 29
  1688   0048BE                     
  1689                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1690   0048BE  8883               	bsf	131,4,c	;volatile
  1691                           
  1692                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1693   0048C0  8283               	bsf	131,1,c	;volatile
  1694   0048C2                     
  1695                           ;serial.c: 10:     RC0PPS = 0x12;
  1696   0048C2  0E12               	movlw	18
  1697   0048C4  010E               	movlb	14	; () banked
  1698   0048C6  6F62               	movwf	98,b	;volatile
  1699                           
  1700                           ;serial.c: 11:     RX4PPS = 0x11;
  1701   0048C8  0E11               	movlw	17
  1702   0048CA  6F15               	movwf	21,b	;volatile
  1703   0048CC                     
  1704                           ; BSR set to: 14
  1705                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1706   0048CC  97E9               	bcf	233,3,b	;volatile
  1707   0048CE                     
  1708                           ; BSR set to: 14
  1709                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1710   0048CE  95E8               	bcf	232,2,b	;volatile
  1711                           
  1712                           ;serial.c: 15:     SP4BRGL = 51;
  1713   0048D0  0E33               	movlw	51
  1714   0048D2  6FE5               	movwf	229,b	;volatile
  1715                           
  1716                           ;serial.c: 16:     SP4BRGH = 0;
  1717   0048D4  0E00               	movlw	0
  1718   0048D6  6FE6               	movwf	230,b	;volatile
  1719   0048D8                     
  1720                           ; BSR set to: 14
  1721                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1722   0048D8  89E7               	bsf	231,4,b	;volatile
  1723   0048DA                     
  1724                           ; BSR set to: 14
  1725                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1726   0048DA  8BE8               	bsf	232,5,b	;volatile
  1727   0048DC                     
  1728                           ; BSR set to: 14
  1729                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1730   0048DC  8FE7               	bsf	231,7,b	;volatile
  1731   0048DE                     
  1732                           ; BSR set to: 14
  1733   0048DE  0012               	return		;funcret
  1734   0048E0                     __end_of_initUSART4:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _initDCmotorsPWM *****************
  1738 ;; Defined at:
  1739 ;;		line 11 in file "dc_motor.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;Total ram usage:        2 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; Hardware stack levels required when called: 1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text4
  1768   003E2A                     __ptext4:
  1769                           	callstack 0
  1770   003E2A                     _initDCmotorsPWM:
  1771                           	callstack 29
  1772   003E2A                     
  1773                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1774   003E2A  9485               	bcf	133,2,c	;volatile
  1775                           
  1776                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1777   003E2C  9E83               	bcf	131,7,c	;volatile
  1778                           
  1779                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1780   003E2E  9885               	bcf	133,4,c	;volatile
  1781                           
  1782                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1783   003E30  9C87               	bcf	135,6,c	;volatile
  1784                           
  1785                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1786   003E32  947D               	bcf	125,2,c	;volatile
  1787                           
  1788                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1789   003E34  9E7B               	bcf	123,7,c	;volatile
  1790                           
  1791                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1792   003E36  987D               	bcf	125,4,c	;volatile
  1793                           
  1794                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1795   003E38  9C7F               	bcf	127,6,c	;volatile
  1796   003E3A                     
  1797                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1798   003E3A  0E05               	movlw	5
  1799   003E3C  010E               	movlb	14	; () banked
  1800   003E3E  6F74               	movwf	116,b	;volatile
  1801                           
  1802                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1803   003E40  0E06               	movlw	6
  1804   003E42  6F76               	movwf	118,b	;volatile
  1805                           
  1806                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1807   003E44  0E07               	movlw	7
  1808   003E46  6F69               	movwf	105,b	;volatile
  1809                           
  1810                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1811   003E48  0E08               	movlw	8
  1812   003E4A  6F88               	movwf	136,b	;volatile
  1813                           
  1814                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1815   003E4C  50BD               	movf	189,w,c	;volatile
  1816   003E4E  0B8F               	andlw	-113
  1817   003E50  0940               	iorlw	64
  1818   003E52  6EBD               	movwf	189,c	;volatile
  1819                           
  1820                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1821   003E54  0EE0               	movlw	-32
  1822   003E56  16BE               	andwf	190,f,c	;volatile
  1823                           
  1824                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1825   003E58  50BF               	movf	191,w,c	;volatile
  1826   003E5A  0BF0               	andlw	-16
  1827   003E5C  0901               	iorlw	1
  1828   003E5E  6EBF               	movwf	191,c	;volatile
  1829   003E60                     
  1830                           ; BSR set to: 14
  1831                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1832   003E60  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1833   003E64                     
  1834                           ; BSR set to: 14
  1835                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1836   003E64  8EBD               	bsf	189,7,c	;volatile
  1837                           
  1838                           ;dc_motor.c: 40:     CCPR1H=0;
  1839   003E66  0E00               	movlw	0
  1840   003E68  6EAA               	movwf	170,c	;volatile
  1841                           
  1842                           ;dc_motor.c: 41:     CCPR2H=0;
  1843   003E6A  0E00               	movlw	0
  1844   003E6C  6EA6               	movwf	166,c	;volatile
  1845                           
  1846                           ;dc_motor.c: 42:     CCPR3H=0;
  1847   003E6E  0E00               	movlw	0
  1848   003E70  010F               	movlb	15	; () banked
  1849   003E72  6F25               	movwf	37,b	;volatile
  1850                           
  1851                           ;dc_motor.c: 43:     CCPR4H=0;
  1852   003E74  0E00               	movlw	0
  1853   003E76  6F21               	movwf	33,b	;volatile
  1854                           
  1855                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1856   003E78  0EFC               	movlw	-4
  1857   003E7A  16AD               	andwf	173,f,c	;volatile
  1858                           
  1859                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1860   003E7C  0EF3               	movlw	-13
  1861   003E7E  16AD               	andwf	173,f,c	;volatile
  1862                           
  1863                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1864   003E80  0ECF               	movlw	-49
  1865   003E82  16AD               	andwf	173,f,c	;volatile
  1866                           
  1867                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1868   003E84  0E3F               	movlw	-193
  1869   003E86  16AD               	andwf	173,f,c	;volatile
  1870   003E88                     
  1871                           ; BSR set to: 15
  1872                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1873   003E88  88AB               	bsf	171,4,c	;volatile
  1874                           
  1875                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1876   003E8A  50AB               	movf	171,w,c	;volatile
  1877   003E8C  0BF0               	andlw	-16
  1878   003E8E  090C               	iorlw	12
  1879   003E90  6EAB               	movwf	171,c	;volatile
  1880   003E92                     
  1881                           ; BSR set to: 15
  1882                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1883   003E92  8EAB               	bsf	171,7,c	;volatile
  1884   003E94                     
  1885                           ; BSR set to: 15
  1886                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1887   003E94  88A7               	bsf	167,4,c	;volatile
  1888                           
  1889                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1890   003E96  50A7               	movf	167,w,c	;volatile
  1891   003E98  0BF0               	andlw	-16
  1892   003E9A  090C               	iorlw	12
  1893   003E9C  6EA7               	movwf	167,c	;volatile
  1894   003E9E                     
  1895                           ; BSR set to: 15
  1896                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1897   003E9E  8EA7               	bsf	167,7,c	;volatile
  1898   003EA0                     
  1899                           ; BSR set to: 15
  1900                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1901   003EA0  8926               	bsf	38,4,b	;volatile
  1902                           
  1903                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1904   003EA2  5126               	movf	38,w,b	;volatile
  1905   003EA4  0BF0               	andlw	-16
  1906   003EA6  090C               	iorlw	12
  1907   003EA8  6F26               	movwf	38,b	;volatile
  1908   003EAA                     
  1909                           ; BSR set to: 15
  1910                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1911   003EAA  8F26               	bsf	38,7,b	;volatile
  1912   003EAC                     
  1913                           ; BSR set to: 15
  1914                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1915   003EAC  8922               	bsf	34,4,b	;volatile
  1916                           
  1917                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1918   003EAE  5122               	movf	34,w,b	;volatile
  1919   003EB0  0BF0               	andlw	-16
  1920   003EB2  090C               	iorlw	12
  1921   003EB4  6F22               	movwf	34,b	;volatile
  1922   003EB6                     
  1923                           ; BSR set to: 15
  1924                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1925   003EB6  8F22               	bsf	34,7,b	;volatile
  1926   003EB8                     
  1927                           ; BSR set to: 15
  1928   003EB8  0012               	return		;funcret
  1929   003EBA                     __end_of_initDCmotorsPWM:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _colour_read_all *****************
  1933 ;; Defined at:
  1934 ;;		line 8 in file "colorfunctions.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1937 ;;		 -> colorf(22), 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  C               4   39[COMRAM] float 
  1940 ;;  B               4   35[COMRAM] float 
  1941 ;;  G               4   31[COMRAM] float 
  1942 ;;  R               4   27[COMRAM] float 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;Total ram usage:       18 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 4
  1959 ;; This function calls:
  1960 ;;		___xxtofl
  1961 ;;		_color_read_Blue
  1962 ;;		_color_read_Clear
  1963 ;;		_color_read_Green
  1964 ;;		_color_read_Red
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text5
  1971   0034E4                     __ptext5:
  1972                           	callstack 0
  1973   0034E4                     _colour_read_all:
  1974                           	callstack 26
  1975   0034E4                     
  1976                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1977   0034E4  EC13  F022         	call	_color_read_Red	;wreg free
  1978   0034E8  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1979   0034EC  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1980   0034F0  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1981   0034F2  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1982   0034F4  0E00               	movlw	0
  1983   0034F6  EC13  F017         	call	___xxtofl
  1984   0034FA  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1985   0034FE  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1986   003502  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1987   003506  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1988                           
  1989                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1990   00350A  EC3B  F022         	call	_color_read_Green	;wreg free
  1991   00350E  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1992   003512  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1993   003516  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1994   003518  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1995   00351A  0E00               	movlw	0
  1996   00351C  EC13  F017         	call	___xxtofl
  1997   003520  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1998   003524  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1999   003528  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  2000   00352C  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  2001                           
  2002                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  2003   003530  EC8B  F022         	call	_color_read_Blue	;wreg free
  2004   003534  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2005   003538  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2006   00353C  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2007   00353E  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2008   003540  0E00               	movlw	0
  2009   003542  EC13  F017         	call	___xxtofl
  2010   003546  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  2011   00354A  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  2012   00354E  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  2013   003552  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  2014                           
  2015                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  2016   003556  EC63  F022         	call	_color_read_Clear	;wreg free
  2017   00355A  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2018   00355E  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2019   003562  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2020   003564  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2021   003566  0E00               	movlw	0
  2022   003568  EC13  F017         	call	___xxtofl
  2023   00356C  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  2024   003570  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  2025   003574  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  2026   003578  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  2027   00357C                     
  2028                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  2029   00357C  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  2030   003580  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  2031   003584  C01C  FFDE         	movff	colour_read_all@R,postinc2
  2032   003588  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  2033   00358C  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  2034   003590  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  2035   003594                     
  2036                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2037   003594  EE20 F008          	lfsr	2,8
  2038   003598  501A               	movf	colour_read_all@cf^0,w,c
  2039   00359A  26D9               	addwf	fsr2l,f,c
  2040   00359C  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2041   00359E  22DA               	addwfc	fsr2h,f,c
  2042   0035A0  C024  FFDE         	movff	colour_read_all@B,postinc2
  2043   0035A4  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  2044   0035A8  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  2045   0035AC  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  2046   0035B0                     
  2047                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2048   0035B0  EE20 F004          	lfsr	2,4
  2049   0035B4  501A               	movf	colour_read_all@cf^0,w,c
  2050   0035B6  26D9               	addwf	fsr2l,f,c
  2051   0035B8  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2052   0035BA  22DA               	addwfc	fsr2h,f,c
  2053   0035BC  C020  FFDE         	movff	colour_read_all@G,postinc2
  2054   0035C0  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  2055   0035C4  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  2056   0035C8  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  2057   0035CC                     
  2058                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2059   0035CC  EE20 F00C          	lfsr	2,12
  2060   0035D0  501A               	movf	colour_read_all@cf^0,w,c
  2061   0035D2  26D9               	addwf	fsr2l,f,c
  2062   0035D4  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2063   0035D6  22DA               	addwfc	fsr2h,f,c
  2064   0035D8  C028  FFDE         	movff	colour_read_all@C,postinc2
  2065   0035DC  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2066   0035E0  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2067   0035E4  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2068   0035E8  0012               	return		;funcret
  2069   0035EA                     __end_of_colour_read_all:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _color_read_Red *****************
  2073 ;; Defined at:
  2074 ;;		line 38 in file "colorclick.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  tmp             2    9[COMRAM] unsigned int 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    4[COMRAM] unsigned int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;Total ram usage:        7 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 3
  2095 ;; This function calls:
  2096 ;;		_I2C_2_Master_Read
  2097 ;;		_I2C_2_Master_RepStart
  2098 ;;		_I2C_2_Master_Start
  2099 ;;		_I2C_2_Master_Stop
  2100 ;;		_I2C_2_Master_Write
  2101 ;; This function is called by:
  2102 ;;		_colour_read_all
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text6
  2107   004426                     __ptext6:
  2108                           	callstack 0
  2109   004426                     _color_read_Red:
  2110                           	callstack 26
  2111   004426                     
  2112                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2113   004426  ECB1  F024         	call	_I2C_2_Master_Start	;wreg free
  2114                           
  2115                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2116   00442A  0E52               	movlw	82
  2117   00442C  EC9B  F024         	call	_I2C_2_Master_Write
  2118                           
  2119                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2120   004430  0EB6               	movlw	182
  2121   004432  EC9B  F024         	call	_I2C_2_Master_Write
  2122                           
  2123                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2124   004436  ECA7  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2125                           
  2126                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2127   00443A  0E53               	movlw	83
  2128   00443C  EC9B  F024         	call	_I2C_2_Master_Write
  2129                           
  2130                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2131   004440  0E01               	movlw	1
  2132   004442  EC4C  F023         	call	_I2C_2_Master_Read
  2133   004446  6E07               	movwf	??_color_read_Red^0,c
  2134   004448  5007               	movf	??_color_read_Red^0,w,c
  2135   00444A  6E0A               	movwf	color_read_Red@tmp^0,c
  2136   00444C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2137                           
  2138                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2139   00444E  0E00               	movlw	0
  2140   004450  EC4C  F023         	call	_I2C_2_Master_Read
  2141   004454  6E07               	movwf	??_color_read_Red^0,c
  2142   004456  5007               	movf	??_color_read_Red^0,w,c
  2143   004458  6E09               	movwf	(??_color_read_Red+2)^0,c
  2144   00445A  6A08               	clrf	(??_color_read_Red+1)^0,c
  2145   00445C  500A               	movf	color_read_Red@tmp^0,w,c
  2146   00445E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2147   004460  6E0A               	movwf	color_read_Red@tmp^0,c
  2148   004462  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2149   004464  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2150   004466  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2151                           
  2152                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2153   004468  ECAC  F024         	call	_I2C_2_Master_Stop	;wreg free
  2154   00446C                     
  2155                           ;colorclick.c: 49:  return tmp;
  2156   00446C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2157   004470  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2158   004474  0012               	return		;funcret
  2159   004476                     __end_of_color_read_Red:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _color_read_Green *****************
  2163 ;; Defined at:
  2164 ;;		line 51 in file "colorclick.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  tmp             2    9[COMRAM] unsigned int 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2    4[COMRAM] unsigned int 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;Total ram usage:        7 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 3
  2185 ;; This function calls:
  2186 ;;		_I2C_2_Master_Read
  2187 ;;		_I2C_2_Master_RepStart
  2188 ;;		_I2C_2_Master_Start
  2189 ;;		_I2C_2_Master_Stop
  2190 ;;		_I2C_2_Master_Write
  2191 ;; This function is called by:
  2192 ;;		_colour_read_all
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text7
  2197   004476                     __ptext7:
  2198                           	callstack 0
  2199   004476                     _color_read_Green:
  2200                           	callstack 26
  2201   004476                     
  2202                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2203   004476  ECB1  F024         	call	_I2C_2_Master_Start	;wreg free
  2204                           
  2205                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2206   00447A  0E52               	movlw	82
  2207   00447C  EC9B  F024         	call	_I2C_2_Master_Write
  2208                           
  2209                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2210   004480  0EB8               	movlw	184
  2211   004482  EC9B  F024         	call	_I2C_2_Master_Write
  2212                           
  2213                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2214   004486  ECA7  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2215                           
  2216                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2217   00448A  0E53               	movlw	83
  2218   00448C  EC9B  F024         	call	_I2C_2_Master_Write
  2219                           
  2220                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2221   004490  0E01               	movlw	1
  2222   004492  EC4C  F023         	call	_I2C_2_Master_Read
  2223   004496  6E07               	movwf	??_color_read_Green^0,c
  2224   004498  5007               	movf	??_color_read_Green^0,w,c
  2225   00449A  6E0A               	movwf	color_read_Green@tmp^0,c
  2226   00449C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2227                           
  2228                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2229   00449E  0E00               	movlw	0
  2230   0044A0  EC4C  F023         	call	_I2C_2_Master_Read
  2231   0044A4  6E07               	movwf	??_color_read_Green^0,c
  2232   0044A6  5007               	movf	??_color_read_Green^0,w,c
  2233   0044A8  6E09               	movwf	(??_color_read_Green+2)^0,c
  2234   0044AA  6A08               	clrf	(??_color_read_Green+1)^0,c
  2235   0044AC  500A               	movf	color_read_Green@tmp^0,w,c
  2236   0044AE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2237   0044B0  6E0A               	movwf	color_read_Green@tmp^0,c
  2238   0044B2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2239   0044B4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2240   0044B6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2241                           
  2242                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2243   0044B8  ECAC  F024         	call	_I2C_2_Master_Stop	;wreg free
  2244   0044BC                     
  2245                           ;colorclick.c: 62:     return tmp;
  2246   0044BC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2247   0044C0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2248   0044C4  0012               	return		;funcret
  2249   0044C6                     __end_of_color_read_Green:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _color_read_Clear *****************
  2253 ;; Defined at:
  2254 ;;		line 80 in file "colorclick.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  tmp             2    9[COMRAM] unsigned int 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    4[COMRAM] unsigned int 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;Total ram usage:        7 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 3
  2275 ;; This function calls:
  2276 ;;		_I2C_2_Master_Read
  2277 ;;		_I2C_2_Master_RepStart
  2278 ;;		_I2C_2_Master_Start
  2279 ;;		_I2C_2_Master_Stop
  2280 ;;		_I2C_2_Master_Write
  2281 ;; This function is called by:
  2282 ;;		_colour_read_all
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287   0044C6                     __ptext8:
  2288                           	callstack 0
  2289   0044C6                     _color_read_Clear:
  2290                           	callstack 26
  2291   0044C6                     
  2292                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2293   0044C6  ECB1  F024         	call	_I2C_2_Master_Start	;wreg free
  2294                           
  2295                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2296   0044CA  0E52               	movlw	82
  2297   0044CC  EC9B  F024         	call	_I2C_2_Master_Write
  2298                           
  2299                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2300   0044D0  0EB4               	movlw	180
  2301   0044D2  EC9B  F024         	call	_I2C_2_Master_Write
  2302                           
  2303                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2304   0044D6  ECA7  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2305                           
  2306                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2307   0044DA  0E53               	movlw	83
  2308   0044DC  EC9B  F024         	call	_I2C_2_Master_Write
  2309                           
  2310                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2311   0044E0  0E01               	movlw	1
  2312   0044E2  EC4C  F023         	call	_I2C_2_Master_Read
  2313   0044E6  6E07               	movwf	??_color_read_Clear^0,c
  2314   0044E8  5007               	movf	??_color_read_Clear^0,w,c
  2315   0044EA  6E0A               	movwf	color_read_Clear@tmp^0,c
  2316   0044EC  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2317                           
  2318                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2319   0044EE  0E00               	movlw	0
  2320   0044F0  EC4C  F023         	call	_I2C_2_Master_Read
  2321   0044F4  6E07               	movwf	??_color_read_Clear^0,c
  2322   0044F6  5007               	movf	??_color_read_Clear^0,w,c
  2323   0044F8  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2324   0044FA  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2325   0044FC  500A               	movf	color_read_Clear@tmp^0,w,c
  2326   0044FE  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2327   004500  6E0A               	movwf	color_read_Clear@tmp^0,c
  2328   004502  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2329   004504  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2330   004506  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2331                           
  2332                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2333   004508  ECAC  F024         	call	_I2C_2_Master_Stop	;wreg free
  2334   00450C                     
  2335                           ;colorclick.c: 91:     return tmp;
  2336   00450C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2337   004510  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2338   004514  0012               	return		;funcret
  2339   004516                     __end_of_color_read_Clear:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _color_read_Blue *****************
  2343 ;; Defined at:
  2344 ;;		line 65 in file "colorclick.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  tmp             2    9[COMRAM] unsigned int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2    4[COMRAM] unsigned int 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;Total ram usage:        7 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 3
  2365 ;; This function calls:
  2366 ;;		_I2C_2_Master_Read
  2367 ;;		_I2C_2_Master_RepStart
  2368 ;;		_I2C_2_Master_Start
  2369 ;;		_I2C_2_Master_Stop
  2370 ;;		_I2C_2_Master_Write
  2371 ;; This function is called by:
  2372 ;;		_colour_read_all
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text9
  2377   004516                     __ptext9:
  2378                           	callstack 0
  2379   004516                     _color_read_Blue:
  2380                           	callstack 26
  2381   004516                     
  2382                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2383   004516  ECB1  F024         	call	_I2C_2_Master_Start	;wreg free
  2384                           
  2385                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2386   00451A  0E52               	movlw	82
  2387   00451C  EC9B  F024         	call	_I2C_2_Master_Write
  2388                           
  2389                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2390   004520  0EBA               	movlw	186
  2391   004522  EC9B  F024         	call	_I2C_2_Master_Write
  2392                           
  2393                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2394   004526  ECA7  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2395                           
  2396                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2397   00452A  0E53               	movlw	83
  2398   00452C  EC9B  F024         	call	_I2C_2_Master_Write
  2399                           
  2400                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2401   004530  0E01               	movlw	1
  2402   004532  EC4C  F023         	call	_I2C_2_Master_Read
  2403   004536  6E07               	movwf	??_color_read_Blue^0,c
  2404   004538  5007               	movf	??_color_read_Blue^0,w,c
  2405   00453A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2406   00453C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2407                           
  2408                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2409   00453E  0E00               	movlw	0
  2410   004540  EC4C  F023         	call	_I2C_2_Master_Read
  2411   004544  6E07               	movwf	??_color_read_Blue^0,c
  2412   004546  5007               	movf	??_color_read_Blue^0,w,c
  2413   004548  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2414   00454A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2415   00454C  500A               	movf	color_read_Blue@tmp^0,w,c
  2416   00454E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2417   004550  6E0A               	movwf	color_read_Blue@tmp^0,c
  2418   004552  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2419   004554  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2420   004556  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2421                           
  2422                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2423   004558  ECAC  F024         	call	_I2C_2_Master_Stop	;wreg free
  2424   00455C                     
  2425                           ;colorclick.c: 76:     return tmp;
  2426   00455C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2427   004560  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2428   004564  0012               	return		;funcret
  2429   004566                     __end_of_color_read_Blue:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _I2C_2_Master_RepStart *****************
  2433 ;; Defined at:
  2434 ;;		line 33 in file "i2c.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 2
  2455 ;; This function calls:
  2456 ;;		_I2C_2_Master_Idle
  2457 ;; This function is called by:
  2458 ;;		_color_read_Red
  2459 ;;		_color_read_Green
  2460 ;;		_color_read_Blue
  2461 ;;		_color_read_Clear
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text10
  2466   00494E                     __ptext10:
  2467                           	callstack 0
  2468   00494E                     _I2C_2_Master_RepStart:
  2469                           	callstack 26
  2470   00494E                     
  2471                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2472   00494E  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2473   004952                     
  2474                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2475   004952  010E               	movlb	14	; () banked
  2476   004954  83DA               	bsf	218,1,b	;volatile
  2477   004956                     
  2478                           ; BSR set to: 14
  2479   004956  0012               	return		;funcret
  2480   004958                     __end_of_I2C_2_Master_RepStart:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _I2C_2_Master_Read *****************
  2484 ;; Defined at:
  2485 ;;		line 51 in file "i2c.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  ack             1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  ack             1    2[COMRAM] unsigned char 
  2490 ;;  tmp             1    3[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;Total ram usage:        3 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 2
  2507 ;; This function calls:
  2508 ;;		_I2C_2_Master_Idle
  2509 ;; This function is called by:
  2510 ;;		_color_read_Red
  2511 ;;		_color_read_Green
  2512 ;;		_color_read_Blue
  2513 ;;		_color_read_Clear
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text11
  2518   004698                     __ptext11:
  2519                           	callstack 0
  2520   004698                     _I2C_2_Master_Read:
  2521                           	callstack 26
  2522                           
  2523                           ; BSR set to: 14
  2524                           ;incstack = 0
  2525                           ;I2C_2_Master_Read@ack stored from wreg
  2526   004698  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2527   00469A                     
  2528                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2529   00469A  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2530   00469E                     
  2531                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2532   00469E  010E               	movlb	14	; () banked
  2533   0046A0  87DA               	bsf	218,3,b	;volatile
  2534                           
  2535                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2536   0046A2  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2537   0046A6                     
  2538                           ;i2c.c: 57:   tmp = SSP2BUF;
  2539   0046A6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2540                           
  2541                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2542   0046AA  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2543   0046AE                     
  2544                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2545   0046AE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2546   0046B0  B4D8               	btfsc	status,2,c
  2547   0046B2  EF5D  F023         	goto	u2851
  2548   0046B6  EF61  F023         	goto	u2850
  2549   0046BA                     u2851:
  2550   0046BA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2551   0046BC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2552   0046BE  EF62  F023         	goto	u2868
  2553   0046C2                     u2850:
  2554   0046C2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2555   0046C4                     u2868:
  2556   0046C4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2557   0046C6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2558   0046C8  010E               	movlb	14	; () banked
  2559   0046CA  51DA               	movf	218,w,b	;volatile
  2560   0046CC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2561   0046CE  0BDF               	andlw	-33
  2562   0046D0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2563   0046D2  6FDA               	movwf	218,b	;volatile
  2564   0046D4                     
  2565                           ; BSR set to: 14
  2566                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2567   0046D4  89DA               	bsf	218,4,b	;volatile
  2568   0046D6                     
  2569                           ; BSR set to: 14
  2570                           ;i2c.c: 61:   return tmp;
  2571   0046D6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2572   0046D8                     
  2573                           ; BSR set to: 14
  2574   0046D8  0012               	return		;funcret
  2575   0046DA                     __end_of_I2C_2_Master_Read:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function _color_click_init *****************
  2579 ;; Defined at:
  2580 ;;		line 6 in file "colorclick.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 4
  2601 ;; This function calls:
  2602 ;;		_I2C_2_Master_Init
  2603 ;;		_color_writetoaddr
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text12
  2610   0046DA                     __ptext12:
  2611                           	callstack 0
  2612   0046DA                     _color_click_init:
  2613                           	callstack 26
  2614   0046DA                     
  2615                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2616   0046DA  EC11  F024         	call	_I2C_2_Master_Init	;wreg free
  2617   0046DE                     
  2618                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2619   0046DE  0E01               	movlw	1
  2620   0046E0  6E03               	movwf	color_writetoaddr@value^0,c
  2621   0046E2  0E00               	movlw	0
  2622   0046E4  EC70  F024         	call	_color_writetoaddr
  2623   0046E8                     
  2624                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2625   0046E8  0E3F               	movlw	63
  2626   0046EA  6E05               	movwf	??_color_click_init^0,c
  2627   0046EC  0E55               	movlw	85
  2628   0046EE                     u4247:
  2629   0046EE  2EE8               	decfsz	wreg,f,c
  2630   0046F0  D7FE               	bra	u4247
  2631   0046F2  2E05               	decfsz	??_color_click_init^0,f,c
  2632   0046F4  D7FC               	bra	u4247
  2633   0046F6  F000               	nop	
  2634   0046F8                     
  2635                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2636   0046F8  0E03               	movlw	3
  2637   0046FA  6E03               	movwf	color_writetoaddr@value^0,c
  2638   0046FC  0E00               	movlw	0
  2639   0046FE  EC70  F024         	call	_color_writetoaddr
  2640   004702                     
  2641                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2642   004702  0ED6               	movlw	214
  2643   004704  6E03               	movwf	color_writetoaddr@value^0,c
  2644   004706  0E01               	movlw	1
  2645   004708  EC70  F024         	call	_color_writetoaddr
  2646   00470C                     
  2647                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2648   00470C  927F               	bcf	127,1,c	;volatile
  2649   00470E                     
  2650                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2651   00470E  9287               	bcf	135,1,c	;volatile
  2652   004710                     
  2653                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2654   004710  9879               	bcf	121,4,c	;volatile
  2655   004712                     
  2656                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2657   004712  9881               	bcf	129,4,c	;volatile
  2658   004714                     
  2659                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2660   004714  9E7E               	bcf	126,7,c	;volatile
  2661   004716                     
  2662                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2663   004716  9E86               	bcf	134,7,c	;volatile
  2664   004718  0012               	return		;funcret
  2665   00471A                     __end_of_color_click_init:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _color_writetoaddr *****************
  2669 ;; Defined at:
  2670 ;;		line 30 in file "colorclick.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  address         1    wreg     unsigned char 
  2673 ;;  value           1    2[COMRAM] unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  address         1    3[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 3
  2692 ;; This function calls:
  2693 ;;		_I2C_2_Master_Start
  2694 ;;		_I2C_2_Master_Stop
  2695 ;;		_I2C_2_Master_Write
  2696 ;; This function is called by:
  2697 ;;		_color_click_init
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text13
  2702   0048E0                     __ptext13:
  2703                           	callstack 0
  2704   0048E0                     _color_writetoaddr:
  2705                           	callstack 26
  2706                           
  2707                           ;incstack = 0
  2708                           ;color_writetoaddr@address stored from wreg
  2709   0048E0  6E04               	movwf	color_writetoaddr@address^0,c
  2710   0048E2                     
  2711                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2712   0048E2  ECB1  F024         	call	_I2C_2_Master_Start	;wreg free
  2713                           
  2714                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2715   0048E6  0E52               	movlw	82
  2716   0048E8  EC9B  F024         	call	_I2C_2_Master_Write
  2717                           
  2718                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2719   0048EC  5004               	movf	color_writetoaddr@address^0,w,c
  2720   0048EE  0980               	iorlw	128
  2721   0048F0  EC9B  F024         	call	_I2C_2_Master_Write
  2722                           
  2723                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2724   0048F4  5003               	movf	color_writetoaddr@value^0,w,c
  2725   0048F6  EC9B  F024         	call	_I2C_2_Master_Write
  2726                           
  2727                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2728   0048FA  ECAC  F024         	call	_I2C_2_Master_Stop	;wreg free
  2729   0048FE  0012               	return		;funcret
  2730   004900                     __end_of_color_writetoaddr:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _I2C_2_Master_Write *****************
  2734 ;; Defined at:
  2735 ;;		line 45 in file "i2c.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  data_byte       1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  data_byte       1    1[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;Total ram usage:        1 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		_I2C_2_Master_Idle
  2758 ;; This function is called by:
  2759 ;;		_color_writetoaddr
  2760 ;;		_color_read_Red
  2761 ;;		_color_read_Green
  2762 ;;		_color_read_Blue
  2763 ;;		_color_read_Clear
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text14
  2768   004936                     __ptext14:
  2769                           	callstack 0
  2770   004936                     _I2C_2_Master_Write:
  2771                           	callstack 26
  2772                           
  2773                           ;incstack = 0
  2774                           ;I2C_2_Master_Write@data_byte stored from wreg
  2775   004936  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2776   004938                     
  2777                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2778   004938  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2779   00493C                     
  2780                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2781   00493C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2782   004940  0012               	return		;funcret
  2783   004942                     __end_of_I2C_2_Master_Write:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function _I2C_2_Master_Stop *****************
  2787 ;; Defined at:
  2788 ;;		line 39 in file "i2c.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		_I2C_2_Master_Idle
  2811 ;; This function is called by:
  2812 ;;		_color_writetoaddr
  2813 ;;		_color_read_Red
  2814 ;;		_color_read_Green
  2815 ;;		_color_read_Blue
  2816 ;;		_color_read_Clear
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text15
  2821   004958                     __ptext15:
  2822                           	callstack 0
  2823   004958                     _I2C_2_Master_Stop:
  2824                           	callstack 26
  2825   004958                     
  2826                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2827   004958  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2828   00495C                     
  2829                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2830   00495C  010E               	movlb	14	; () banked
  2831   00495E  85DA               	bsf	218,2,b	;volatile
  2832   004960                     
  2833                           ; BSR set to: 14
  2834   004960  0012               	return		;funcret
  2835   004962                     __end_of_I2C_2_Master_Stop:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _I2C_2_Master_Start *****************
  2839 ;; Defined at:
  2840 ;;		line 27 in file "i2c.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 2
  2861 ;; This function calls:
  2862 ;;		_I2C_2_Master_Idle
  2863 ;; This function is called by:
  2864 ;;		_color_writetoaddr
  2865 ;;		_color_read_Red
  2866 ;;		_color_read_Green
  2867 ;;		_color_read_Blue
  2868 ;;		_color_read_Clear
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text16
  2873   004962                     __ptext16:
  2874                           	callstack 0
  2875   004962                     _I2C_2_Master_Start:
  2876                           	callstack 26
  2877   004962                     
  2878                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2879   004962  EC26  F024         	call	_I2C_2_Master_Idle	;wreg free
  2880   004966                     
  2881                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2882   004966  010E               	movlb	14	; () banked
  2883   004968  81DA               	bsf	218,0,b	;volatile
  2884   00496A                     
  2885                           ; BSR set to: 14
  2886   00496A  0012               	return		;funcret
  2887   00496C                     __end_of_I2C_2_Master_Start:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _I2C_2_Master_Idle *****************
  2891 ;; Defined at:
  2892 ;;		line 22 in file "i2c.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        1 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_I2C_2_Master_Start
  2917 ;;		_I2C_2_Master_RepStart
  2918 ;;		_I2C_2_Master_Stop
  2919 ;;		_I2C_2_Master_Write
  2920 ;;		_I2C_2_Master_Read
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text17
  2925   00484C                     __ptext17:
  2926                           	callstack 0
  2927   00484C                     _I2C_2_Master_Idle:
  2928                           	callstack 26
  2929   00484C                     l30:
  2930   00484C  010E               	movlb	14	; () banked
  2931   00484E  B5D8               	btfsc	216,2,b	;volatile
  2932   004850  EF2C  F024         	goto	u2421
  2933   004854  EF2E  F024         	goto	u2420
  2934   004858                     u2421:
  2935   004858  EF26  F024         	goto	l30
  2936   00485C                     u2420:
  2937   00485C                     
  2938                           ; BSR set to: 14
  2939   00485C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2940   004860  0E1F               	movlw	31
  2941   004862  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2942   004864  A4D8               	btfss	status,2,c
  2943   004866  EF37  F024         	goto	u2431
  2944   00486A  EF39  F024         	goto	u2430
  2945   00486E                     u2431:
  2946   00486E  EF26  F024         	goto	l30
  2947   004872                     u2430:
  2948   004872                     
  2949                           ; BSR set to: 14
  2950   004872  0012               	return		;funcret
  2951   004874                     __end_of_I2C_2_Master_Idle:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _I2C_2_Master_Init *****************
  2955 ;; Defined at:
  2956 ;;		line 4 in file "i2c.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;;		_color_click_init
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text18
  2986   004822                     __ptext18:
  2987                           	callstack 0
  2988   004822                     _I2C_2_Master_Init:
  2989                           	callstack 28
  2990   004822                     
  2991                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2992   004822  010E               	movlb	14	; () banked
  2993   004824  51D9               	movf	217,w,b	;volatile
  2994   004826  0BF0               	andlw	-16
  2995   004828  0908               	iorlw	8
  2996   00482A  6FD9               	movwf	217,b	;volatile
  2997   00482C                     
  2998                           ; BSR set to: 14
  2999                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3000   00482C  8BD9               	bsf	217,5,b	;volatile
  3001                           
  3002                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3003   00482E  0E9F               	movlw	159
  3004   004830  6FD6               	movwf	214,b	;volatile
  3005   004832                     
  3006                           ; BSR set to: 14
  3007                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3008   004832  8A84               	bsf	132,5,c	;volatile
  3009   004834                     
  3010                           ; BSR set to: 14
  3011                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3012   004834  8C84               	bsf	132,6,c	;volatile
  3013   004836                     
  3014                           ; BSR set to: 14
  3015                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3016   004836  9BA7               	bcf	167,5,b	;volatile
  3017   004838                     
  3018                           ; BSR set to: 14
  3019                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3020   004838  9DA7               	bcf	167,6,b	;volatile
  3021                           
  3022                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3023   00483A  0E1D               	movlw	29
  3024   00483C  6F1D               	movwf	29,b	;volatile
  3025                           
  3026                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3027   00483E  0E1E               	movlw	30
  3028   004840  6F1C               	movwf	28,b	;volatile
  3029                           
  3030                           ;i2c.c: 18:   RD5PPS=0x1C;
  3031   004842  0E1C               	movlw	28
  3032   004844  6F6F               	movwf	111,b	;volatile
  3033                           
  3034                           ;i2c.c: 19:   RD6PPS=0x1B;
  3035   004846  0E1B               	movlw	27
  3036   004848  6F70               	movwf	112,b	;volatile
  3037   00484A                     
  3038                           ; BSR set to: 14
  3039   00484A  0012               	return		;funcret
  3040   00484C                     __end_of_I2C_2_Master_Init:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _Timer0_init *****************
  3044 ;; Defined at:
  3045 ;;		line 7 in file "timer.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text19
  3074   00489A                     __ptext19:
  3075                           	callstack 0
  3076   00489A                     _Timer0_init:
  3077                           	callstack 29
  3078   00489A                     
  3079                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3080   00489A  50D6               	movf	214,w,c	;volatile
  3081   00489C  0B1F               	andlw	-225
  3082   00489E  0940               	iorlw	64
  3083   0048A0  6ED6               	movwf	214,c	;volatile
  3084   0048A2                     
  3085                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3086   0048A2  88D6               	bsf	214,4,c	;volatile
  3087                           
  3088                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3089   0048A4  50D6               	movf	214,w,c	;volatile
  3090   0048A6  0BF0               	andlw	-16
  3091   0048A8  090D               	iorlw	13
  3092   0048AA  6ED6               	movwf	214,c	;volatile
  3093   0048AC                     
  3094                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3095   0048AC  88D5               	bsf	213,4,c	;volatile
  3096   0048AE                     
  3097                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3098   0048AE  010E               	movlb	14	; () banked
  3099   0048B0  8B29               	bsf	41,5,b	;volatile
  3100                           
  3101                           ;timer.c: 17:     TMR0H=0;
  3102   0048B2  0E00               	movlw	0
  3103   0048B4  6ED4               	movwf	212,c	;volatile
  3104                           
  3105                           ;timer.c: 18:     TMR0L=0;
  3106   0048B6  0E00               	movlw	0
  3107   0048B8  6ED3               	movwf	211,c	;volatile
  3108   0048BA                     
  3109                           ; BSR set to: 14
  3110                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3111   0048BA  8ED5               	bsf	213,7,c	;volatile
  3112   0048BC                     
  3113                           ; BSR set to: 14
  3114   0048BC  0012               	return		;funcret
  3115   0048BE                     __end_of_Timer0_init:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _RGB2Hue *****************
  3119 ;; Defined at:
  3120 ;;		line 23 in file "colorfunctions.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  cf              2   15[BANK0 ] PTR struct RGBC_rel
  3123 ;;		 -> colorf(22), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  min             2   27[BANK0 ] int 
  3126 ;;  max             2   25[BANK0 ] int 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;Total ram usage:       14 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 3
  3143 ;; This function calls:
  3144 ;;		___fladd
  3145 ;;		___fldiv
  3146 ;;		___fleq
  3147 ;;		___flge
  3148 ;;		___flmul
  3149 ;;		___flsub
  3150 ;;		___fltol
  3151 ;;		___xxtofl
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text20
  3158   000E52                     __ptext20:
  3159                           	callstack 0
  3160   000E52                     _RGB2Hue:
  3161                           	callstack 27
  3162   000E52                     
  3163                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3164   000E52  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3165   000E56  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3166   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3167   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3168   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3169   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3170   000E6A  0100               	movlb	0	; () banked
  3171   000E6C  EE20 F004          	lfsr	2,4
  3172   000E70  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3173   000E72  26D9               	addwf	fsr2l,f,c
  3174   000E74  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3175   000E76  22DA               	addwfc	fsr2h,f,c
  3176   000E78  CFDE F005          	movff	postinc2,___fleq@ff2
  3177   000E7C  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3178   000E80  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3179   000E84  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3180   000E88  EC33  F01D         	call	___fleq	;wreg free
  3181   000E8C  A0D8               	btfss	status,0,c
  3182   000E8E  EF4B  F007         	goto	u3961
  3183   000E92  EF4D  F007         	goto	u3960
  3184   000E96                     u3961:
  3185   000E96  EF82  F007         	goto	l4317
  3186   000E9A                     u3960:
  3187   000E9A  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3188   000E9E  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3189   000EA2  CFDE F001          	movff	postinc2,___fleq@ff1
  3190   000EA6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3191   000EAA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3192   000EAE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3193   000EB2  0100               	movlb	0	; () banked
  3194   000EB4  EE20 F008          	lfsr	2,8
  3195   000EB8  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3196   000EBA  26D9               	addwf	fsr2l,f,c
  3197   000EBC  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3198   000EBE  22DA               	addwfc	fsr2h,f,c
  3199   000EC0  CFDE F005          	movff	postinc2,___fleq@ff2
  3200   000EC4  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3201   000EC8  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3202   000ECC  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3203   000ED0  EC33  F01D         	call	___fleq	;wreg free
  3204   000ED4  A0D8               	btfss	status,0,c
  3205   000ED6  EF6F  F007         	goto	u3971
  3206   000EDA  EF71  F007         	goto	u3970
  3207   000EDE                     u3971:
  3208   000EDE  EF82  F007         	goto	l4317
  3209   000EE2                     u3970:
  3210   000EE2                     
  3211                           ;colorfunctions.c: 25:         cf->h=0;
  3212   000EE2  0100               	movlb	0	; () banked
  3213   000EE4  EE20 F010          	lfsr	2,16
  3214   000EE8  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3215   000EEA  26D9               	addwf	fsr2l,f,c
  3216   000EEC  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3217   000EEE  22DA               	addwfc	fsr2h,f,c
  3218   000EF0  0E00               	movlw	0
  3219   000EF2  6EDE               	movwf	postinc2,c
  3220   000EF4  0E00               	movlw	0
  3221   000EF6  6EDE               	movwf	postinc2,c
  3222   000EF8  0E00               	movlw	0
  3223   000EFA  6EDE               	movwf	postinc2,c
  3224   000EFC  0E00               	movlw	0
  3225   000EFE  6EDD               	movwf	postdec2,c
  3226                           
  3227                           ;colorfunctions.c: 26:     } else{
  3228   000F00  EFBE  F00A         	goto	l590
  3229   000F04                     l4317:
  3230                           
  3231                           ;colorfunctions.c: 28:         signed int min=0;
  3232   000F04  0E00               	movlw	0
  3233   000F06  0100               	movlb	0	; () banked
  3234   000F08  6F7C               	movwf	(RGB2Hue@min+1)& (0+255),b
  3235   000F0A  0E00               	movlw	0
  3236   000F0C  6F7B               	movwf	RGB2Hue@min& (0+255),b
  3237   000F0E                     
  3238                           ; BSR set to: 0
  3239                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3240   000F0E  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3241   000F12  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3242   000F16  CFDE F001          	movff	postinc2,___flge@ff1
  3243   000F1A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3244   000F1E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3245   000F22  CFDE F004          	movff	postinc2,___flge@ff1+3
  3246   000F26  EE20 F004          	lfsr	2,4
  3247   000F2A  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3248   000F2C  26D9               	addwf	fsr2l,f,c
  3249   000F2E  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3250   000F30  22DA               	addwfc	fsr2h,f,c
  3251   000F32  CFDE F005          	movff	postinc2,___flge@ff2
  3252   000F36  CFDE F006          	movff	postinc2,___flge@ff2+1
  3253   000F3A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3254   000F3E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3255   000F42  ECF5  F01A         	call	___flge	;wreg free
  3256   000F46  B0D8               	btfsc	status,0,c
  3257   000F48  EFA8  F007         	goto	u3981
  3258   000F4C  EFAA  F007         	goto	u3980
  3259   000F50                     u3981:
  3260   000F50  EFE2  F007         	goto	l4325
  3261   000F54                     u3980:
  3262   000F54  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3263   000F58  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3264   000F5C  CFDE F001          	movff	postinc2,___flge@ff1
  3265   000F60  CFDE F002          	movff	postinc2,___flge@ff1+1
  3266   000F64  CFDE F003          	movff	postinc2,___flge@ff1+2
  3267   000F68  CFDE F004          	movff	postinc2,___flge@ff1+3
  3268   000F6C  0100               	movlb	0	; () banked
  3269   000F6E  EE20 F008          	lfsr	2,8
  3270   000F72  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3271   000F74  26D9               	addwf	fsr2l,f,c
  3272   000F76  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3273   000F78  22DA               	addwfc	fsr2h,f,c
  3274   000F7A  CFDE F005          	movff	postinc2,___flge@ff2
  3275   000F7E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3276   000F82  CFDE F007          	movff	postinc2,___flge@ff2+2
  3277   000F86  CFDE F008          	movff	postinc2,___flge@ff2+3
  3278   000F8A  ECF5  F01A         	call	___flge	;wreg free
  3279   000F8E  B0D8               	btfsc	status,0,c
  3280   000F90  EFCC  F007         	goto	u3991
  3281   000F94  EFCE  F007         	goto	u3990
  3282   000F98                     u3991:
  3283   000F98  EFE2  F007         	goto	l4325
  3284   000F9C                     u3990:
  3285   000F9C                     
  3286                           ;colorfunctions.c: 31:             min=cf->Rf;
  3287   000F9C  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3288   000FA0  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3289   000FA4  CFDE F057          	movff	postinc2,___fltol@f1
  3290   000FA8  CFDE F058          	movff	postinc2,___fltol@f1+1
  3291   000FAC  CFDE F059          	movff	postinc2,___fltol@f1+2
  3292   000FB0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3293   000FB4  ECEE  F019         	call	___fltol	;wreg free
  3294   000FB8  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3295   000FBC  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3296                           
  3297                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3298   000FC0  EF58  F008         	goto	l582
  3299   000FC4                     l4325:
  3300   000FC4  0100               	movlb	0	; () banked
  3301   000FC6  EE20 F004          	lfsr	2,4
  3302   000FCA  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3303   000FCC  26D9               	addwf	fsr2l,f,c
  3304   000FCE  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3305   000FD0  22DA               	addwfc	fsr2h,f,c
  3306   000FD2  CFDE F001          	movff	postinc2,___flge@ff1
  3307   000FD6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3308   000FDA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3309   000FDE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3310   000FE2  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3311   000FE6  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3312   000FEA  CFDE F005          	movff	postinc2,___flge@ff2
  3313   000FEE  CFDE F006          	movff	postinc2,___flge@ff2+1
  3314   000FF2  CFDE F007          	movff	postinc2,___flge@ff2+2
  3315   000FF6  CFDE F008          	movff	postinc2,___flge@ff2+3
  3316   000FFA  ECF5  F01A         	call	___flge	;wreg free
  3317   000FFE  B0D8               	btfsc	status,0,c
  3318   001000  EF04  F008         	goto	u4001
  3319   001004  EF06  F008         	goto	u4000
  3320   001008                     u4001:
  3321   001008  EF43  F008         	goto	l4331
  3322   00100C                     u4000:
  3323   00100C  0100               	movlb	0	; () banked
  3324   00100E  EE20 F004          	lfsr	2,4
  3325   001012  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3326   001014  26D9               	addwf	fsr2l,f,c
  3327   001016  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3328   001018  22DA               	addwfc	fsr2h,f,c
  3329   00101A  CFDE F001          	movff	postinc2,___flge@ff1
  3330   00101E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3331   001022  CFDE F003          	movff	postinc2,___flge@ff1+2
  3332   001026  CFDE F004          	movff	postinc2,___flge@ff1+3
  3333   00102A  EE20 F008          	lfsr	2,8
  3334   00102E  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3335   001030  26D9               	addwf	fsr2l,f,c
  3336   001032  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3337   001034  22DA               	addwfc	fsr2h,f,c
  3338   001036  CFDE F005          	movff	postinc2,___flge@ff2
  3339   00103A  CFDE F006          	movff	postinc2,___flge@ff2+1
  3340   00103E  CFDE F007          	movff	postinc2,___flge@ff2+2
  3341   001042  CFDE F008          	movff	postinc2,___flge@ff2+3
  3342   001046  ECF5  F01A         	call	___flge	;wreg free
  3343   00104A  B0D8               	btfsc	status,0,c
  3344   00104C  EF2A  F008         	goto	u4011
  3345   001050  EF2C  F008         	goto	u4010
  3346   001054                     u4011:
  3347   001054  EF43  F008         	goto	l4331
  3348   001058                     u4010:
  3349   001058                     
  3350                           ;colorfunctions.c: 33:             min=cf->Gf;
  3351   001058  0100               	movlb	0	; () banked
  3352   00105A  EE20 F004          	lfsr	2,4
  3353   00105E  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3354   001060  26D9               	addwf	fsr2l,f,c
  3355   001062  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3356   001064  22DA               	addwfc	fsr2h,f,c
  3357   001066  CFDE F057          	movff	postinc2,___fltol@f1
  3358   00106A  CFDE F058          	movff	postinc2,___fltol@f1+1
  3359   00106E  CFDE F059          	movff	postinc2,___fltol@f1+2
  3360   001072  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3361   001076  ECEE  F019         	call	___fltol	;wreg free
  3362   00107A  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3363   00107E  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3364                           
  3365                           ;colorfunctions.c: 34:         } else{
  3366   001082  EF58  F008         	goto	l582
  3367   001086                     l4331:
  3368                           
  3369                           ;colorfunctions.c: 35:             min=cf->Bf;
  3370   001086  0100               	movlb	0	; () banked
  3371   001088  EE20 F008          	lfsr	2,8
  3372   00108C  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3373   00108E  26D9               	addwf	fsr2l,f,c
  3374   001090  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3375   001092  22DA               	addwfc	fsr2h,f,c
  3376   001094  CFDE F057          	movff	postinc2,___fltol@f1
  3377   001098  CFDE F058          	movff	postinc2,___fltol@f1+1
  3378   00109C  CFDE F059          	movff	postinc2,___fltol@f1+2
  3379   0010A0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3380   0010A4  ECEE  F019         	call	___fltol	;wreg free
  3381   0010A8  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3382   0010AC  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3383   0010B0                     l582:
  3384                           
  3385                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3386   0010B0  0100               	movlb	0	; () banked
  3387   0010B2  EE20 F004          	lfsr	2,4
  3388   0010B6  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3389   0010B8  26D9               	addwf	fsr2l,f,c
  3390   0010BA  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3391   0010BC  22DA               	addwfc	fsr2h,f,c
  3392   0010BE  CFDE F001          	movff	postinc2,___flge@ff1
  3393   0010C2  CFDE F002          	movff	postinc2,___flge@ff1+1
  3394   0010C6  CFDE F003          	movff	postinc2,___flge@ff1+2
  3395   0010CA  CFDE F004          	movff	postinc2,___flge@ff1+3
  3396   0010CE  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3397   0010D2  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3398   0010D6  CFDE F005          	movff	postinc2,___flge@ff2
  3399   0010DA  CFDE F006          	movff	postinc2,___flge@ff2+1
  3400   0010DE  CFDE F007          	movff	postinc2,___flge@ff2+2
  3401   0010E2  CFDE F008          	movff	postinc2,___flge@ff2+3
  3402   0010E6  ECF5  F01A         	call	___flge	;wreg free
  3403   0010EA  B0D8               	btfsc	status,0,c
  3404   0010EC  EF7A  F008         	goto	u4021
  3405   0010F0  EF7C  F008         	goto	u4020
  3406   0010F4                     u4021:
  3407   0010F4  EF19  F009         	goto	l4339
  3408   0010F8                     u4020:
  3409   0010F8  0100               	movlb	0	; () banked
  3410   0010FA  EE20 F008          	lfsr	2,8
  3411   0010FE  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3412   001100  26D9               	addwf	fsr2l,f,c
  3413   001102  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3414   001104  22DA               	addwfc	fsr2h,f,c
  3415   001106  CFDE F001          	movff	postinc2,___flge@ff1
  3416   00110A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3417   00110E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3418   001112  CFDE F004          	movff	postinc2,___flge@ff1+3
  3419   001116  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3420   00111A  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3421   00111E  CFDE F005          	movff	postinc2,___flge@ff2
  3422   001122  CFDE F006          	movff	postinc2,___flge@ff2+1
  3423   001126  CFDE F007          	movff	postinc2,___flge@ff2+2
  3424   00112A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3425   00112E  ECF5  F01A         	call	___flge	;wreg free
  3426   001132  B0D8               	btfsc	status,0,c
  3427   001134  EF9E  F008         	goto	u4031
  3428   001138  EFA0  F008         	goto	u4030
  3429   00113C                     u4031:
  3430   00113C  EF19  F009         	goto	l4339
  3431   001140                     u4030:
  3432   001140                     
  3433                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3434   001140  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3435   001144  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3436   001148  CFDE F057          	movff	postinc2,___fltol@f1
  3437   00114C  CFDE F058          	movff	postinc2,___fltol@f1+1
  3438   001150  CFDE F059          	movff	postinc2,___fltol@f1+2
  3439   001154  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3440   001158  ECEE  F019         	call	___fltol	;wreg free
  3441   00115C  C057  F079         	movff	?___fltol,RGB2Hue@max
  3442   001160  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3443   001164                     
  3444                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3445   001164  0100               	movlb	0	; () banked
  3446   001166  517B               	movf	RGB2Hue@min& (0+255),w,b
  3447   001168  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3448   00116A  6F71               	movwf	??_RGB2Hue& (0+255),b
  3449   00116C  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3450   00116E  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3451   001170  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3452   001172  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3453   001176  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3454   00117A  0E00               	movlw	0
  3455   00117C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3456   00117E  0EFF               	movlw	-1
  3457   001180  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3458   001182  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3459   001184  0E01               	movlw	1
  3460   001186  EC13  F017         	call	___xxtofl
  3461   00118A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3462   00118E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3463   001192  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3464   001196  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3465   00119A  0100               	movlb	0	; () banked
  3466   00119C  EE20 F008          	lfsr	2,8
  3467   0011A0  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3468   0011A2  26D9               	addwf	fsr2l,f,c
  3469   0011A4  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3470   0011A6  22DA               	addwfc	fsr2h,f,c
  3471   0011A8  CFDE F02E          	movff	postinc2,___flsub@a
  3472   0011AC  CFDE F02F          	movff	postinc2,___flsub@a+1
  3473   0011B0  CFDE F030          	movff	postinc2,___flsub@a+2
  3474   0011B4  CFDE F031          	movff	postinc2,___flsub@a+3
  3475   0011B8  EE20 F004          	lfsr	2,4
  3476   0011BC  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3477   0011BE  26D9               	addwf	fsr2l,f,c
  3478   0011C0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3479   0011C2  22DA               	addwfc	fsr2h,f,c
  3480   0011C4  CFDE F02A          	movff	postinc2,___flsub@b
  3481   0011C8  CFDE F02B          	movff	postinc2,___flsub@b+1
  3482   0011CC  CFDE F02C          	movff	postinc2,___flsub@b+2
  3483   0011D0  CFDE F02D          	movff	postinc2,___flsub@b+3
  3484   0011D4  EC29  F023         	call	___flsub	;wreg free
  3485   0011D8  C02A  F032         	movff	?___flsub,___fldiv@b
  3486   0011DC  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3487   0011E0  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3488   0011E4  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3489   0011E8  ECAC  F011         	call	___fldiv	;wreg free
  3490   0011EC  C032  F04B         	movff	?___fldiv,___flmul@b
  3491   0011F0  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3492   0011F4  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3493   0011F8  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3494   0011FC  0E00               	movlw	0
  3495   0011FE  6E4F               	movwf	___flmul@a^0,c
  3496   001200  0E00               	movlw	0
  3497   001202  6E50               	movwf	(___flmul@a+1)^0,c
  3498   001204  0E70               	movlw	112
  3499   001206  6E51               	movwf	(___flmul@a+2)^0,c
  3500   001208  0E42               	movlw	66
  3501   00120A  6E52               	movwf	(___flmul@a+3)^0,c
  3502   00120C  EC96  F00F         	call	___flmul	;wreg free
  3503   001210  0100               	movlb	0	; () banked
  3504   001212  EE20 F010          	lfsr	2,16
  3505   001216  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3506   001218  26D9               	addwf	fsr2l,f,c
  3507   00121A  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3508   00121C  22DA               	addwfc	fsr2h,f,c
  3509   00121E  C04B  FFDE         	movff	?___flmul,postinc2
  3510   001222  C04C  FFDE         	movff	?___flmul+1,postinc2
  3511   001226  C04D  FFDE         	movff	?___flmul+2,postinc2
  3512   00122A  C04E  FFDE         	movff	?___flmul+3,postinc2
  3513                           
  3514                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3515   00122E  EF89  F00A         	goto	l4351
  3516   001232                     l4339:
  3517   001232  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3518   001236  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3519   00123A  CFDE F001          	movff	postinc2,___flge@ff1
  3520   00123E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3521   001242  CFDE F003          	movff	postinc2,___flge@ff1+2
  3522   001246  CFDE F004          	movff	postinc2,___flge@ff1+3
  3523   00124A  0100               	movlb	0	; () banked
  3524   00124C  EE20 F004          	lfsr	2,4
  3525   001250  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3526   001252  26D9               	addwf	fsr2l,f,c
  3527   001254  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3528   001256  22DA               	addwfc	fsr2h,f,c
  3529   001258  CFDE F005          	movff	postinc2,___flge@ff2
  3530   00125C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3531   001260  CFDE F007          	movff	postinc2,___flge@ff2+2
  3532   001264  CFDE F008          	movff	postinc2,___flge@ff2+3
  3533   001268  ECF5  F01A         	call	___flge	;wreg free
  3534   00126C  B0D8               	btfsc	status,0,c
  3535   00126E  EF3B  F009         	goto	u4041
  3536   001272  EF3D  F009         	goto	u4040
  3537   001276                     u4041:
  3538   001276  EFF7  F009         	goto	l4347
  3539   00127A                     u4040:
  3540   00127A  0100               	movlb	0	; () banked
  3541   00127C  EE20 F008          	lfsr	2,8
  3542   001280  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3543   001282  26D9               	addwf	fsr2l,f,c
  3544   001284  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3545   001286  22DA               	addwfc	fsr2h,f,c
  3546   001288  CFDE F001          	movff	postinc2,___flge@ff1
  3547   00128C  CFDE F002          	movff	postinc2,___flge@ff1+1
  3548   001290  CFDE F003          	movff	postinc2,___flge@ff1+2
  3549   001294  CFDE F004          	movff	postinc2,___flge@ff1+3
  3550   001298  EE20 F004          	lfsr	2,4
  3551   00129C  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3552   00129E  26D9               	addwf	fsr2l,f,c
  3553   0012A0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3554   0012A2  22DA               	addwfc	fsr2h,f,c
  3555   0012A4  CFDE F005          	movff	postinc2,___flge@ff2
  3556   0012A8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3557   0012AC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3558   0012B0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3559   0012B4  ECF5  F01A         	call	___flge	;wreg free
  3560   0012B8  B0D8               	btfsc	status,0,c
  3561   0012BA  EF61  F009         	goto	u4051
  3562   0012BE  EF63  F009         	goto	u4050
  3563   0012C2                     u4051:
  3564   0012C2  EFF7  F009         	goto	l4347
  3565   0012C6                     u4050:
  3566   0012C6                     
  3567                           ;colorfunctions.c: 44:             max=cf->Gf;
  3568   0012C6  0100               	movlb	0	; () banked
  3569   0012C8  EE20 F004          	lfsr	2,4
  3570   0012CC  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3571   0012CE  26D9               	addwf	fsr2l,f,c
  3572   0012D0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3573   0012D2  22DA               	addwfc	fsr2h,f,c
  3574   0012D4  CFDE F057          	movff	postinc2,___fltol@f1
  3575   0012D8  CFDE F058          	movff	postinc2,___fltol@f1+1
  3576   0012DC  CFDE F059          	movff	postinc2,___fltol@f1+2
  3577   0012E0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3578   0012E4  ECEE  F019         	call	___fltol	;wreg free
  3579   0012E8  C057  F079         	movff	?___fltol,RGB2Hue@max
  3580   0012EC  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3581                           
  3582                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3583   0012F0  0100               	movlb	0	; () banked
  3584   0012F2  517B               	movf	RGB2Hue@min& (0+255),w,b
  3585   0012F4  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3586   0012F6  6F71               	movwf	??_RGB2Hue& (0+255),b
  3587   0012F8  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3588   0012FA  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3589   0012FC  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3590   0012FE  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3591   001302  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3592   001306  0E00               	movlw	0
  3593   001308  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3594   00130A  0EFF               	movlw	-1
  3595   00130C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3596   00130E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3597   001310  0E01               	movlw	1
  3598   001312  EC13  F017         	call	___xxtofl
  3599   001316  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3600   00131A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3601   00131E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3602   001322  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3603   001326  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3604   00132A  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3605   00132E  CFDE F02E          	movff	postinc2,___flsub@a
  3606   001332  CFDE F02F          	movff	postinc2,___flsub@a+1
  3607   001336  CFDE F030          	movff	postinc2,___flsub@a+2
  3608   00133A  CFDE F031          	movff	postinc2,___flsub@a+3
  3609   00133E  0100               	movlb	0	; () banked
  3610   001340  EE20 F008          	lfsr	2,8
  3611   001344  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3612   001346  26D9               	addwf	fsr2l,f,c
  3613   001348  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3614   00134A  22DA               	addwfc	fsr2h,f,c
  3615   00134C  CFDE F02A          	movff	postinc2,___flsub@b
  3616   001350  CFDE F02B          	movff	postinc2,___flsub@b+1
  3617   001354  CFDE F02C          	movff	postinc2,___flsub@b+2
  3618   001358  CFDE F02D          	movff	postinc2,___flsub@b+3
  3619   00135C  EC29  F023         	call	___flsub	;wreg free
  3620   001360  C02A  F032         	movff	?___flsub,___fldiv@b
  3621   001364  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3622   001368  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3623   00136C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3624   001370  ECAC  F011         	call	___fldiv	;wreg free
  3625   001374  C032  F075         	movff	?___fldiv,_RGB2Hue$3155
  3626   001378  C033  F076         	movff	?___fldiv+1,_RGB2Hue$3155+1
  3627   00137C  C034  F077         	movff	?___fldiv+2,_RGB2Hue$3155+2
  3628   001380  C035  F078         	movff	?___fldiv+3,_RGB2Hue$3155+3
  3629   001384                     
  3630                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3631   001384  0E00               	movlw	0
  3632   001386  6E1E               	movwf	___fladd@a^0,c
  3633   001388  0E00               	movlw	0
  3634   00138A  6E1F               	movwf	(___fladd@a+1)^0,c
  3635   00138C  0E00               	movlw	0
  3636   00138E  6E20               	movwf	(___fladd@a+2)^0,c
  3637   001390  0E40               	movlw	64
  3638   001392  6E21               	movwf	(___fladd@a+3)^0,c
  3639   001394  C075  F01A         	movff	_RGB2Hue$3155,___fladd@b
  3640   001398  C076  F01B         	movff	_RGB2Hue$3155+1,___fladd@b+1
  3641   00139C  C077  F01C         	movff	_RGB2Hue$3155+2,___fladd@b+2
  3642   0013A0  C078  F01D         	movff	_RGB2Hue$3155+3,___fladd@b+3
  3643   0013A4  EC36  F00D         	call	___fladd	;wreg free
  3644   0013A8  C01A  F04B         	movff	?___fladd,___flmul@b
  3645   0013AC  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3646   0013B0  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3647   0013B4  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3648   0013B8  0E00               	movlw	0
  3649   0013BA  6E4F               	movwf	___flmul@a^0,c
  3650   0013BC  0E00               	movlw	0
  3651   0013BE  6E50               	movwf	(___flmul@a+1)^0,c
  3652   0013C0  0E70               	movlw	112
  3653   0013C2  6E51               	movwf	(___flmul@a+2)^0,c
  3654   0013C4  0E42               	movlw	66
  3655   0013C6  6E52               	movwf	(___flmul@a+3)^0,c
  3656   0013C8  EC96  F00F         	call	___flmul	;wreg free
  3657   0013CC  0100               	movlb	0	; () banked
  3658   0013CE  EE20 F010          	lfsr	2,16
  3659   0013D2  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3660   0013D4  26D9               	addwf	fsr2l,f,c
  3661   0013D6  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3662   0013D8  22DA               	addwfc	fsr2h,f,c
  3663   0013DA  C04B  FFDE         	movff	?___flmul,postinc2
  3664   0013DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3665   0013E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3666   0013E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3667                           
  3668                           ;colorfunctions.c: 46:         }else{
  3669   0013EA  EF89  F00A         	goto	l4351
  3670   0013EE                     l4347:
  3671                           
  3672                           ;colorfunctions.c: 47:             max=cf->Bf;
  3673   0013EE  0100               	movlb	0	; () banked
  3674   0013F0  EE20 F008          	lfsr	2,8
  3675   0013F4  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3676   0013F6  26D9               	addwf	fsr2l,f,c
  3677   0013F8  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3678   0013FA  22DA               	addwfc	fsr2h,f,c
  3679   0013FC  CFDE F057          	movff	postinc2,___fltol@f1
  3680   001400  CFDE F058          	movff	postinc2,___fltol@f1+1
  3681   001404  CFDE F059          	movff	postinc2,___fltol@f1+2
  3682   001408  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3683   00140C  ECEE  F019         	call	___fltol	;wreg free
  3684   001410  C057  F079         	movff	?___fltol,RGB2Hue@max
  3685   001414  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3686                           
  3687                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3688   001418  0100               	movlb	0	; () banked
  3689   00141A  517B               	movf	RGB2Hue@min& (0+255),w,b
  3690   00141C  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3691   00141E  6F71               	movwf	??_RGB2Hue& (0+255),b
  3692   001420  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3693   001422  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3694   001424  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3695   001426  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3696   00142A  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3697   00142E  0E00               	movlw	0
  3698   001430  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3699   001432  0EFF               	movlw	-1
  3700   001434  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3701   001436  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3702   001438  0E01               	movlw	1
  3703   00143A  EC13  F017         	call	___xxtofl
  3704   00143E  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3705   001442  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3706   001446  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3707   00144A  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3708   00144E  0100               	movlb	0	; () banked
  3709   001450  EE20 F004          	lfsr	2,4
  3710   001454  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3711   001456  26D9               	addwf	fsr2l,f,c
  3712   001458  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3713   00145A  22DA               	addwfc	fsr2h,f,c
  3714   00145C  CFDE F02E          	movff	postinc2,___flsub@a
  3715   001460  CFDE F02F          	movff	postinc2,___flsub@a+1
  3716   001464  CFDE F030          	movff	postinc2,___flsub@a+2
  3717   001468  CFDE F031          	movff	postinc2,___flsub@a+3
  3718   00146C  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3719   001470  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3720   001474  CFDE F02A          	movff	postinc2,___flsub@b
  3721   001478  CFDE F02B          	movff	postinc2,___flsub@b+1
  3722   00147C  CFDE F02C          	movff	postinc2,___flsub@b+2
  3723   001480  CFDE F02D          	movff	postinc2,___flsub@b+3
  3724   001484  EC29  F023         	call	___flsub	;wreg free
  3725   001488  C02A  F032         	movff	?___flsub,___fldiv@b
  3726   00148C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3727   001490  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3728   001494  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3729   001498  ECAC  F011         	call	___fldiv	;wreg free
  3730   00149C  C032  F075         	movff	?___fldiv,_RGB2Hue$3155
  3731   0014A0  C033  F076         	movff	?___fldiv+1,_RGB2Hue$3155+1
  3732   0014A4  C034  F077         	movff	?___fldiv+2,_RGB2Hue$3155+2
  3733   0014A8  C035  F078         	movff	?___fldiv+3,_RGB2Hue$3155+3
  3734   0014AC                     
  3735                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3736   0014AC  0E00               	movlw	0
  3737   0014AE  6E1E               	movwf	___fladd@a^0,c
  3738   0014B0  0E00               	movlw	0
  3739   0014B2  6E1F               	movwf	(___fladd@a+1)^0,c
  3740   0014B4  0E80               	movlw	128
  3741   0014B6  6E20               	movwf	(___fladd@a+2)^0,c
  3742   0014B8  0E40               	movlw	64
  3743   0014BA  6E21               	movwf	(___fladd@a+3)^0,c
  3744   0014BC  C075  F01A         	movff	_RGB2Hue$3155,___fladd@b
  3745   0014C0  C076  F01B         	movff	_RGB2Hue$3155+1,___fladd@b+1
  3746   0014C4  C077  F01C         	movff	_RGB2Hue$3155+2,___fladd@b+2
  3747   0014C8  C078  F01D         	movff	_RGB2Hue$3155+3,___fladd@b+3
  3748   0014CC  EC36  F00D         	call	___fladd	;wreg free
  3749   0014D0  C01A  F04B         	movff	?___fladd,___flmul@b
  3750   0014D4  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3751   0014D8  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3752   0014DC  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3753   0014E0  0E00               	movlw	0
  3754   0014E2  6E4F               	movwf	___flmul@a^0,c
  3755   0014E4  0E00               	movlw	0
  3756   0014E6  6E50               	movwf	(___flmul@a+1)^0,c
  3757   0014E8  0E70               	movlw	112
  3758   0014EA  6E51               	movwf	(___flmul@a+2)^0,c
  3759   0014EC  0E42               	movlw	66
  3760   0014EE  6E52               	movwf	(___flmul@a+3)^0,c
  3761   0014F0  EC96  F00F         	call	___flmul	;wreg free
  3762   0014F4  0100               	movlb	0	; () banked
  3763   0014F6  EE20 F010          	lfsr	2,16
  3764   0014FA  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3765   0014FC  26D9               	addwf	fsr2l,f,c
  3766   0014FE  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3767   001500  22DA               	addwfc	fsr2h,f,c
  3768   001502  C04B  FFDE         	movff	?___flmul,postinc2
  3769   001506  C04C  FFDE         	movff	?___flmul+1,postinc2
  3770   00150A  C04D  FFDE         	movff	?___flmul+2,postinc2
  3771   00150E  C04E  FFDE         	movff	?___flmul+3,postinc2
  3772   001512                     l4351:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3776   001512  EE20 F010          	lfsr	2,16
  3777   001516  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3778   001518  26D9               	addwf	fsr2l,f,c
  3779   00151A  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3780   00151C  22DA               	addwfc	fsr2h,f,c
  3781   00151E  0E03               	movlw	3
  3782   001520  BEDB               	btfsc	plusw2,7,c
  3783   001522  EF97  F00A         	goto	u4060
  3784   001526  EF95  F00A         	goto	u4061
  3785   00152A                     u4061:
  3786   00152A  EFBE  F00A         	goto	l590
  3787   00152E                     u4060:
  3788   00152E                     
  3789                           ; BSR set to: 0
  3790                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3791   00152E  EE20 F010          	lfsr	2,16
  3792   001532  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3793   001534  26D9               	addwf	fsr2l,f,c
  3794   001536  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3795   001538  22DA               	addwfc	fsr2h,f,c
  3796   00153A  CFDE F01A          	movff	postinc2,___fladd@b
  3797   00153E  CFDE F01B          	movff	postinc2,___fladd@b+1
  3798   001542  CFDE F01C          	movff	postinc2,___fladd@b+2
  3799   001546  CFDE F01D          	movff	postinc2,___fladd@b+3
  3800   00154A  0E00               	movlw	0
  3801   00154C  6E1E               	movwf	___fladd@a^0,c
  3802   00154E  0E00               	movlw	0
  3803   001550  6E1F               	movwf	(___fladd@a+1)^0,c
  3804   001552  0EB4               	movlw	180
  3805   001554  6E20               	movwf	(___fladd@a+2)^0,c
  3806   001556  0E43               	movlw	67
  3807   001558  6E21               	movwf	(___fladd@a+3)^0,c
  3808   00155A  EC36  F00D         	call	___fladd	;wreg free
  3809   00155E  0100               	movlb	0	; () banked
  3810   001560  EE20 F010          	lfsr	2,16
  3811   001564  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3812   001566  26D9               	addwf	fsr2l,f,c
  3813   001568  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3814   00156A  22DA               	addwfc	fsr2h,f,c
  3815   00156C  C01A  FFDE         	movff	?___fladd,postinc2
  3816   001570  C01B  FFDE         	movff	?___fladd+1,postinc2
  3817   001574  C01C  FFDE         	movff	?___fladd+2,postinc2
  3818   001578  C01D  FFDE         	movff	?___fladd+3,postinc2
  3819   00157C                     l590:
  3820                           
  3821                           ; BSR set to: 0
  3822   00157C  0012               	return		;funcret
  3823   00157E                     __end_of_RGB2Hue:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function ___flsub *****************
  3827 ;; Defined at:
  3828 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  b               4   41[COMRAM] void 
  3831 ;;  a               4   45[COMRAM] void 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  4   41[COMRAM] void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        8 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 2
  3850 ;; This function calls:
  3851 ;;		___fladd
  3852 ;; This function is called by:
  3853 ;;		_RGB2Hue
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text21
  3858   004652                     __ptext21:
  3859                           	callstack 0
  3860   004652                     ___flsub:
  3861                           	callstack 27
  3862   004652  0E00               	movlw	0
  3863   004654  1A2E               	xorwf	___flsub@a^0,f,c
  3864   004656  0E00               	movlw	0
  3865   004658  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  3866   00465A  0E00               	movlw	0
  3867   00465C  1A30               	xorwf	(___flsub@a+2)^0,f,c
  3868   00465E  0E80               	movlw	128
  3869   004660  1A31               	xorwf	(___flsub@a+3)^0,f,c
  3870   004662  C02A  F01A         	movff	___flsub@b,___fladd@b
  3871   004666  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  3872   00466A  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  3873   00466E  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  3874   004672  C02E  F01E         	movff	___flsub@a,___fladd@a
  3875   004676  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  3876   00467A  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  3877   00467E  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  3878   004682  EC36  F00D         	call	___fladd	;wreg free
  3879   004686  C01A  F02A         	movff	?___fladd,?___flsub
  3880   00468A  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  3881   00468E  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  3882   004692  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  3883   004696  0012               	return		;funcret
  3884   004698                     __end_of___flsub:
  3885                           	callstack 0
  3886                           
  3887 ;; *************** function ___fladd *****************
  3888 ;; Defined at:
  3889 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  b               4   25[COMRAM] void 
  3892 ;;  a               4   29[COMRAM] void 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  grs             1   40[COMRAM] unsigned char 
  3895 ;;  bexp            1   39[COMRAM] unsigned char 
  3896 ;;  aexp            1   38[COMRAM] unsigned char 
  3897 ;;  signs           1   37[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  4   25[COMRAM] unsigned char 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3907 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;Total ram usage:       16 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 1
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_RGB2Hue
  3918 ;;		___flsub
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text22
  3923   001A6C                     __ptext22:
  3924                           	callstack 0
  3925   001A6C                     ___fladd:
  3926                           	callstack 27
  3927   001A6C  501D               	movf	(___fladd@b+3)^0,w,c
  3928   001A6E  0B80               	andlw	128
  3929   001A70  6E26               	movwf	___fladd@signs^0,c
  3930   001A72  501D               	movf	(___fladd@b+3)^0,w,c
  3931   001A74  241D               	addwf	(___fladd@b+3)^0,w,c
  3932   001A76  6E28               	movwf	___fladd@bexp^0,c
  3933   001A78  AE1C               	btfss	(___fladd@b+2)^0,7,c
  3934   001A7A  EF41  F00D         	goto	u2951
  3935   001A7E  EF43  F00D         	goto	u2950
  3936   001A82                     u2951:
  3937   001A82  EF44  F00D         	goto	l3615
  3938   001A86                     u2950:
  3939   001A86  8028               	bsf	___fladd@bexp^0,0,c
  3940   001A88                     l3615:
  3941   001A88  5028               	movf	___fladd@bexp^0,w,c
  3942   001A8A  B4D8               	btfsc	status,2,c
  3943   001A8C  EF4A  F00D         	goto	u2961
  3944   001A90  EF4C  F00D         	goto	u2960
  3945   001A94                     u2961:
  3946   001A94  EF61  F00D         	goto	l3625
  3947   001A98                     u2960:
  3948   001A98  2828               	incf	___fladd@bexp^0,w,c
  3949   001A9A  A4D8               	btfss	status,2,c
  3950   001A9C  EF52  F00D         	goto	u2971
  3951   001AA0  EF54  F00D         	goto	u2970
  3952   001AA4                     u2971:
  3953   001AA4  EF5C  F00D         	goto	l3621
  3954   001AA8                     u2970:
  3955   001AA8  0E00               	movlw	0
  3956   001AAA  6E1A               	movwf	___fladd@b^0,c
  3957   001AAC  0E00               	movlw	0
  3958   001AAE  6E1B               	movwf	(___fladd@b+1)^0,c
  3959   001AB0  0E00               	movlw	0
  3960   001AB2  6E1C               	movwf	(___fladd@b+2)^0,c
  3961   001AB4  0E00               	movlw	0
  3962   001AB6  6E1D               	movwf	(___fladd@b+3)^0,c
  3963   001AB8                     l3621:
  3964   001AB8  8E1C               	bsf	(___fladd@b+2)^0,7,c
  3965   001ABA  0E00               	movlw	0
  3966   001ABC  6E1D               	movwf	(___fladd@b+3)^0,c
  3967   001ABE  EF69  F00D         	goto	l3627
  3968   001AC2                     l3625:
  3969   001AC2  0E00               	movlw	0
  3970   001AC4  6E1A               	movwf	___fladd@b^0,c
  3971   001AC6  0E00               	movlw	0
  3972   001AC8  6E1B               	movwf	(___fladd@b+1)^0,c
  3973   001ACA  0E00               	movlw	0
  3974   001ACC  6E1C               	movwf	(___fladd@b+2)^0,c
  3975   001ACE  0E00               	movlw	0
  3976   001AD0  6E1D               	movwf	(___fladd@b+3)^0,c
  3977   001AD2                     l3627:
  3978   001AD2  5021               	movf	(___fladd@a+3)^0,w,c
  3979   001AD4  0B80               	andlw	128
  3980   001AD6  6E27               	movwf	___fladd@aexp^0,c
  3981   001AD8  5026               	movf	___fladd@signs^0,w,c
  3982   001ADA  1827               	xorwf	___fladd@aexp^0,w,c
  3983   001ADC  B4D8               	btfsc	status,2,c
  3984   001ADE  EF73  F00D         	goto	u2981
  3985   001AE2  EF75  F00D         	goto	u2980
  3986   001AE6                     u2981:
  3987   001AE6  EF76  F00D         	goto	l3633
  3988   001AEA                     u2980:
  3989   001AEA  8C26               	bsf	___fladd@signs^0,6,c
  3990   001AEC                     l3633:
  3991   001AEC  5021               	movf	(___fladd@a+3)^0,w,c
  3992   001AEE  2421               	addwf	(___fladd@a+3)^0,w,c
  3993   001AF0  6E27               	movwf	___fladd@aexp^0,c
  3994   001AF2  AE20               	btfss	(___fladd@a+2)^0,7,c
  3995   001AF4  EF7E  F00D         	goto	u2991
  3996   001AF8  EF80  F00D         	goto	u2990
  3997   001AFC                     u2991:
  3998   001AFC  EF81  F00D         	goto	l3639
  3999   001B00                     u2990:
  4000   001B00  8027               	bsf	___fladd@aexp^0,0,c
  4001   001B02                     l3639:
  4002   001B02  5027               	movf	___fladd@aexp^0,w,c
  4003   001B04  B4D8               	btfsc	status,2,c
  4004   001B06  EF87  F00D         	goto	u3001
  4005   001B0A  EF89  F00D         	goto	u3000
  4006   001B0E                     u3001:
  4007   001B0E  EF9E  F00D         	goto	l3649
  4008   001B12                     u3000:
  4009   001B12  2827               	incf	___fladd@aexp^0,w,c
  4010   001B14  A4D8               	btfss	status,2,c
  4011   001B16  EF8F  F00D         	goto	u3011
  4012   001B1A  EF91  F00D         	goto	u3010
  4013   001B1E                     u3011:
  4014   001B1E  EF99  F00D         	goto	l3645
  4015   001B22                     u3010:
  4016   001B22  0E00               	movlw	0
  4017   001B24  6E1E               	movwf	___fladd@a^0,c
  4018   001B26  0E00               	movlw	0
  4019   001B28  6E1F               	movwf	(___fladd@a+1)^0,c
  4020   001B2A  0E00               	movlw	0
  4021   001B2C  6E20               	movwf	(___fladd@a+2)^0,c
  4022   001B2E  0E00               	movlw	0
  4023   001B30  6E21               	movwf	(___fladd@a+3)^0,c
  4024   001B32                     l3645:
  4025   001B32  8E20               	bsf	(___fladd@a+2)^0,7,c
  4026   001B34  0E00               	movlw	0
  4027   001B36  6E21               	movwf	(___fladd@a+3)^0,c
  4028   001B38  EFA6  F00D         	goto	l3651
  4029   001B3C                     l3649:
  4030   001B3C  0E00               	movlw	0
  4031   001B3E  6E1E               	movwf	___fladd@a^0,c
  4032   001B40  0E00               	movlw	0
  4033   001B42  6E1F               	movwf	(___fladd@a+1)^0,c
  4034   001B44  0E00               	movlw	0
  4035   001B46  6E20               	movwf	(___fladd@a+2)^0,c
  4036   001B48  0E00               	movlw	0
  4037   001B4A  6E21               	movwf	(___fladd@a+3)^0,c
  4038   001B4C                     l3651:
  4039   001B4C  5028               	movf	___fladd@bexp^0,w,c
  4040   001B4E  5C27               	subwf	___fladd@aexp^0,w,c
  4041   001B50  B0D8               	btfsc	status,0,c
  4042   001B52  EFAD  F00D         	goto	u3021
  4043   001B56  EFAF  F00D         	goto	u3020
  4044   001B5A                     u3021:
  4045   001B5A  EFD6  F00D         	goto	l3687
  4046   001B5E                     u3020:
  4047   001B5E  AC26               	btfss	___fladd@signs^0,6,c
  4048   001B60  EFB4  F00D         	goto	u3031
  4049   001B64  EFB6  F00D         	goto	u3030
  4050   001B68                     u3031:
  4051   001B68  EFB8  F00D         	goto	l3657
  4052   001B6C                     u3030:
  4053   001B6C  0E80               	movlw	128
  4054   001B6E  1A26               	xorwf	___fladd@signs^0,f,c
  4055   001B70                     l3657:
  4056   001B70  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4057   001B74  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4058   001B78  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4059   001B7C  C01A  F029         	movff	___fladd@b,___fladd@grs
  4060   001B80  C01E  F01A         	movff	___fladd@a,___fladd@b
  4061   001B84  C029  F01E         	movff	___fladd@grs,___fladd@a
  4062   001B88  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4063   001B8C  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4064   001B90  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4065   001B94  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4066   001B98  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4067   001B9C  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4068   001BA0  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4069   001BA4  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4070   001BA8  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4071   001BAC                     l3687:
  4072   001BAC  0E00               	movlw	0
  4073   001BAE  6E29               	movwf	___fladd@grs^0,c
  4074   001BB0  5028               	movf	___fladd@bexp^0,w,c
  4075   001BB2  C027  F022         	movff	___fladd@aexp,??___fladd
  4076   001BB6  6A23               	clrf	(??___fladd+1)^0,c
  4077   001BB8  5E22               	subwf	??___fladd^0,f,c
  4078   001BBA  0E00               	movlw	0
  4079   001BBC  5A23               	subwfb	(??___fladd+1)^0,f,c
  4080   001BBE  BE23               	btfsc	(??___fladd+1)^0,7,c
  4081   001BC0  EFEB  F00D         	goto	u3041
  4082   001BC4  5023               	movf	(??___fladd+1)^0,w,c
  4083   001BC6  E109               	bnz	u3040
  4084   001BC8  0E1A               	movlw	26
  4085   001BCA  5C22               	subwf	??___fladd^0,w,c
  4086   001BCC  A0D8               	btfss	status,0,c
  4087   001BCE  EFEB  F00D         	goto	u3041
  4088   001BD2  EFED  F00D         	goto	u3040
  4089   001BD6                     u3041:
  4090   001BD6  EF24  F00E         	goto	l1199
  4091   001BDA                     u3040:
  4092   001BDA  501A               	movf	___fladd@b^0,w,c
  4093   001BDC  101B               	iorwf	(___fladd@b+1)^0,w,c
  4094   001BDE  101C               	iorwf	(___fladd@b+2)^0,w,c
  4095   001BE0  101D               	iorwf	(___fladd@b+3)^0,w,c
  4096   001BE2  A4D8               	btfss	status,2,c
  4097   001BE4  EFF6  F00D         	goto	u3051
  4098   001BE8  EFF9  F00D         	goto	u3050
  4099   001BEC                     u3051:
  4100   001BEC  0E01               	movlw	1
  4101   001BEE  EFFA  F00D         	goto	u3060
  4102   001BF2                     u3050:
  4103   001BF2  0E00               	movlw	0
  4104   001BF4                     u3060:
  4105   001BF4  6E29               	movwf	___fladd@grs^0,c
  4106   001BF6  0E00               	movlw	0
  4107   001BF8  6E1A               	movwf	___fladd@b^0,c
  4108   001BFA  0E00               	movlw	0
  4109   001BFC  6E1B               	movwf	(___fladd@b+1)^0,c
  4110   001BFE  0E00               	movlw	0
  4111   001C00  6E1C               	movwf	(___fladd@b+2)^0,c
  4112   001C02  0E00               	movlw	0
  4113   001C04  6E1D               	movwf	(___fladd@b+3)^0,c
  4114   001C06  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4115   001C0A  EF2D  F00E         	goto	l1198
  4116   001C0E                     l1200:
  4117   001C0E  A029               	btfss	___fladd@grs^0,0,c
  4118   001C10  EF0C  F00E         	goto	u3071
  4119   001C14  EF0E  F00E         	goto	u3070
  4120   001C18                     u3071:
  4121   001C18  EF14  F00E         	goto	l3699
  4122   001C1C                     u3070:
  4123   001C1C  90D8               	bcf	status,0,c
  4124   001C1E  3029               	rrcf	___fladd@grs^0,w,c
  4125   001C20  0901               	iorlw	1
  4126   001C22  6E29               	movwf	___fladd@grs^0,c
  4127   001C24  EF16  F00E         	goto	l3701
  4128   001C28                     l3699:
  4129   001C28  90D8               	bcf	status,0,c
  4130   001C2A  3229               	rrcf	___fladd@grs^0,f,c
  4131   001C2C                     l3701:
  4132   001C2C  A01A               	btfss	___fladd@b^0,0,c
  4133   001C2E  EF1B  F00E         	goto	u3081
  4134   001C32  EF1D  F00E         	goto	u3080
  4135   001C36                     u3081:
  4136   001C36  EF1E  F00E         	goto	l3705
  4137   001C3A                     u3080:
  4138   001C3A  8E29               	bsf	___fladd@grs^0,7,c
  4139   001C3C                     l3705:
  4140   001C3C  341D               	rlcf	(___fladd@b+3)^0,w,c
  4141   001C3E  321D               	rrcf	(___fladd@b+3)^0,f,c
  4142   001C40  321C               	rrcf	(___fladd@b+2)^0,f,c
  4143   001C42  321B               	rrcf	(___fladd@b+1)^0,f,c
  4144   001C44  321A               	rrcf	___fladd@b^0,f,c
  4145   001C46  2A28               	incf	___fladd@bexp^0,f,c
  4146   001C48                     l1199:
  4147   001C48  5027               	movf	___fladd@aexp^0,w,c
  4148   001C4A  5C28               	subwf	___fladd@bexp^0,w,c
  4149   001C4C  A0D8               	btfss	status,0,c
  4150   001C4E  EF2B  F00E         	goto	u3091
  4151   001C52  EF2D  F00E         	goto	u3090
  4152   001C56                     u3091:
  4153   001C56  EF07  F00E         	goto	l1200
  4154   001C5A                     u3090:
  4155   001C5A                     l1198:
  4156   001C5A  BC26               	btfsc	___fladd@signs^0,6,c
  4157   001C5C  EF32  F00E         	goto	u3101
  4158   001C60  EF34  F00E         	goto	u3100
  4159   001C64                     u3101:
  4160   001C64  EF74  F00E         	goto	l3733
  4161   001C68                     u3100:
  4162   001C68  5028               	movf	___fladd@bexp^0,w,c
  4163   001C6A  A4D8               	btfss	status,2,c
  4164   001C6C  EF3A  F00E         	goto	u3111
  4165   001C70  EF3C  F00E         	goto	u3110
  4166   001C74                     u3111:
  4167   001C74  EF46  F00E         	goto	l3715
  4168   001C78                     u3110:
  4169   001C78  0E00               	movlw	0
  4170   001C7A  6E1A               	movwf	?___fladd^0,c
  4171   001C7C  0E00               	movlw	0
  4172   001C7E  6E1B               	movwf	(?___fladd+1)^0,c
  4173   001C80  0E00               	movlw	0
  4174   001C82  6E1C               	movwf	(?___fladd+2)^0,c
  4175   001C84  0E00               	movlw	0
  4176   001C86  6E1D               	movwf	(?___fladd+3)^0,c
  4177   001C88  EF95  F00F         	goto	l1207
  4178   001C8C                     l3715:
  4179   001C8C  501E               	movf	___fladd@a^0,w,c
  4180   001C8E  261A               	addwf	___fladd@b^0,f,c
  4181   001C90  501F               	movf	(___fladd@a+1)^0,w,c
  4182   001C92  221B               	addwfc	(___fladd@b+1)^0,f,c
  4183   001C94  5020               	movf	(___fladd@a+2)^0,w,c
  4184   001C96  221C               	addwfc	(___fladd@b+2)^0,f,c
  4185   001C98  5021               	movf	(___fladd@a+3)^0,w,c
  4186   001C9A  221D               	addwfc	(___fladd@b+3)^0,f,c
  4187   001C9C  A01D               	btfss	(___fladd@b+3)^0,0,c
  4188   001C9E  EF53  F00E         	goto	u3121
  4189   001CA2  EF55  F00E         	goto	u3120
  4190   001CA6                     u3121:
  4191   001CA6  EF01  F00F         	goto	l3769
  4192   001CAA                     u3120:
  4193   001CAA  A029               	btfss	___fladd@grs^0,0,c
  4194   001CAC  EF5A  F00E         	goto	u3131
  4195   001CB0  EF5C  F00E         	goto	u3130
  4196   001CB4                     u3131:
  4197   001CB4  EF62  F00E         	goto	l3723
  4198   001CB8                     u3130:
  4199   001CB8  90D8               	bcf	status,0,c
  4200   001CBA  3029               	rrcf	___fladd@grs^0,w,c
  4201   001CBC  0901               	iorlw	1
  4202   001CBE  6E29               	movwf	___fladd@grs^0,c
  4203   001CC0  EF64  F00E         	goto	l3725
  4204   001CC4                     l3723:
  4205   001CC4  90D8               	bcf	status,0,c
  4206   001CC6  3229               	rrcf	___fladd@grs^0,f,c
  4207   001CC8                     l3725:
  4208   001CC8  A01A               	btfss	___fladd@b^0,0,c
  4209   001CCA  EF69  F00E         	goto	u3141
  4210   001CCE  EF6B  F00E         	goto	u3140
  4211   001CD2                     u3141:
  4212   001CD2  EF6C  F00E         	goto	l3729
  4213   001CD6                     u3140:
  4214   001CD6  8E29               	bsf	___fladd@grs^0,7,c
  4215   001CD8                     l3729:
  4216   001CD8  341D               	rlcf	(___fladd@b+3)^0,w,c
  4217   001CDA  321D               	rrcf	(___fladd@b+3)^0,f,c
  4218   001CDC  321C               	rrcf	(___fladd@b+2)^0,f,c
  4219   001CDE  321B               	rrcf	(___fladd@b+1)^0,f,c
  4220   001CE0  321A               	rrcf	___fladd@b^0,f,c
  4221   001CE2  2A28               	incf	___fladd@bexp^0,f,c
  4222   001CE4  EF01  F00F         	goto	l3769
  4223   001CE8                     l3733:
  4224   001CE8  501E               	movf	___fladd@a^0,w,c
  4225   001CEA  5C1A               	subwf	___fladd@b^0,w,c
  4226   001CEC  501F               	movf	(___fladd@a+1)^0,w,c
  4227   001CEE  581B               	subwfb	(___fladd@b+1)^0,w,c
  4228   001CF0  5020               	movf	(___fladd@a+2)^0,w,c
  4229   001CF2  581C               	subwfb	(___fladd@b+2)^0,w,c
  4230   001CF4  501D               	movf	(___fladd@b+3)^0,w,c
  4231   001CF6  0A80               	xorlw	128
  4232   001CF8  6E22               	movwf	??___fladd^0,c
  4233   001CFA  5021               	movf	(___fladd@a+3)^0,w,c
  4234   001CFC  0A80               	xorlw	128
  4235   001CFE  5822               	subwfb	??___fladd^0,w,c
  4236   001D00  B0D8               	btfsc	status,0,c
  4237   001D02  EF85  F00E         	goto	u3151
  4238   001D06  EF87  F00E         	goto	u3150
  4239   001D0A                     u3151:
  4240   001D0A  EFB2  F00E         	goto	l3743
  4241   001D0E                     u3150:
  4242   001D0E  501A               	movf	___fladd@b^0,w,c
  4243   001D10  5C1E               	subwf	___fladd@a^0,w,c
  4244   001D12  6E22               	movwf	??___fladd^0,c
  4245   001D14  501B               	movf	(___fladd@b+1)^0,w,c
  4246   001D16  581F               	subwfb	(___fladd@a+1)^0,w,c
  4247   001D18  6E23               	movwf	(??___fladd+1)^0,c
  4248   001D1A  501C               	movf	(___fladd@b+2)^0,w,c
  4249   001D1C  5820               	subwfb	(___fladd@a+2)^0,w,c
  4250   001D1E  6E24               	movwf	(??___fladd+2)^0,c
  4251   001D20  501D               	movf	(___fladd@b+3)^0,w,c
  4252   001D22  5821               	subwfb	(___fladd@a+3)^0,w,c
  4253   001D24  6E25               	movwf	(??___fladd+3)^0,c
  4254   001D26  0EFF               	movlw	255
  4255   001D28  2422               	addwf	??___fladd^0,w,c
  4256   001D2A  6E1A               	movwf	___fladd@b^0,c
  4257   001D2C  0EFF               	movlw	255
  4258   001D2E  2023               	addwfc	(??___fladd+1)^0,w,c
  4259   001D30  6E1B               	movwf	(___fladd@b+1)^0,c
  4260   001D32  0EFF               	movlw	255
  4261   001D34  2024               	addwfc	(??___fladd+2)^0,w,c
  4262   001D36  6E1C               	movwf	(___fladd@b+2)^0,c
  4263   001D38  0EFF               	movlw	255
  4264   001D3A  2025               	addwfc	(??___fladd+3)^0,w,c
  4265   001D3C  6E1D               	movwf	(___fladd@b+3)^0,c
  4266   001D3E  0E80               	movlw	128
  4267   001D40  1A26               	xorwf	___fladd@signs^0,f,c
  4268   001D42  6C29               	negf	___fladd@grs^0,c
  4269   001D44  5029               	movf	___fladd@grs^0,w,c
  4270   001D46  A4D8               	btfss	status,2,c
  4271   001D48  EFA8  F00E         	goto	u3161
  4272   001D4C  EFAA  F00E         	goto	u3160
  4273   001D50                     u3161:
  4274   001D50  EFBA  F00E         	goto	l1215
  4275   001D54                     u3160:
  4276   001D54  0E01               	movlw	1
  4277   001D56  261A               	addwf	___fladd@b^0,f,c
  4278   001D58  0E00               	movlw	0
  4279   001D5A  221B               	addwfc	(___fladd@b+1)^0,f,c
  4280   001D5C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4281   001D5E  221D               	addwfc	(___fladd@b+3)^0,f,c
  4282   001D60  EFBA  F00E         	goto	l1215
  4283   001D64                     l3743:
  4284   001D64  501E               	movf	___fladd@a^0,w,c
  4285   001D66  5E1A               	subwf	___fladd@b^0,f,c
  4286   001D68  501F               	movf	(___fladd@a+1)^0,w,c
  4287   001D6A  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4288   001D6C  5020               	movf	(___fladd@a+2)^0,w,c
  4289   001D6E  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4290   001D70  5021               	movf	(___fladd@a+3)^0,w,c
  4291   001D72  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4292   001D74                     l1215:
  4293   001D74  501A               	movf	___fladd@b^0,w,c
  4294   001D76  101B               	iorwf	(___fladd@b+1)^0,w,c
  4295   001D78  101C               	iorwf	(___fladd@b+2)^0,w,c
  4296   001D7A  101D               	iorwf	(___fladd@b+3)^0,w,c
  4297   001D7C  A4D8               	btfss	status,2,c
  4298   001D7E  EFC3  F00E         	goto	u3171
  4299   001D82  EFC5  F00E         	goto	u3170
  4300   001D86                     u3171:
  4301   001D86  EFFA  F00E         	goto	l3767
  4302   001D8A                     u3170:
  4303   001D8A  5029               	movf	___fladd@grs^0,w,c
  4304   001D8C  A4D8               	btfss	status,2,c
  4305   001D8E  EFCB  F00E         	goto	u3181
  4306   001D92  EFCD  F00E         	goto	u3180
  4307   001D96                     u3181:
  4308   001D96  EFFA  F00E         	goto	l3767
  4309   001D9A                     u3180:
  4310   001D9A  0E00               	movlw	0
  4311   001D9C  6E1A               	movwf	?___fladd^0,c
  4312   001D9E  0E00               	movlw	0
  4313   001DA0  6E1B               	movwf	(?___fladd+1)^0,c
  4314   001DA2  0E00               	movlw	0
  4315   001DA4  6E1C               	movwf	(?___fladd+2)^0,c
  4316   001DA6  0E00               	movlw	0
  4317   001DA8  6E1D               	movwf	(?___fladd+3)^0,c
  4318   001DAA  EF95  F00F         	goto	l1207
  4319   001DAE                     l3751:
  4320   001DAE  90D8               	bcf	status,0,c
  4321   001DB0  361A               	rlcf	___fladd@b^0,f,c
  4322   001DB2  361B               	rlcf	(___fladd@b+1)^0,f,c
  4323   001DB4  361C               	rlcf	(___fladd@b+2)^0,f,c
  4324   001DB6  361D               	rlcf	(___fladd@b+3)^0,f,c
  4325   001DB8  AE29               	btfss	___fladd@grs^0,7,c
  4326   001DBA  EFE1  F00E         	goto	u3191
  4327   001DBE  EFE3  F00E         	goto	u3190
  4328   001DC2                     u3191:
  4329   001DC2  EFE4  F00E         	goto	l3757
  4330   001DC6                     u3190:
  4331   001DC6  801A               	bsf	___fladd@b^0,0,c
  4332   001DC8                     l3757:
  4333   001DC8  A029               	btfss	___fladd@grs^0,0,c
  4334   001DCA  EFE9  F00E         	goto	u3201
  4335   001DCE  EFEB  F00E         	goto	u3200
  4336   001DD2                     u3201:
  4337   001DD2  EFEF  F00E         	goto	l3761
  4338   001DD6                     u3200:
  4339   001DD6  80D8               	bsf	status,0,c
  4340   001DD8  3629               	rlcf	___fladd@grs^0,f,c
  4341   001DDA  EFF1  F00E         	goto	l3763
  4342   001DDE                     l3761:
  4343   001DDE  90D8               	bcf	status,0,c
  4344   001DE0  3629               	rlcf	___fladd@grs^0,f,c
  4345   001DE2                     l3763:
  4346   001DE2  5028               	movf	___fladd@bexp^0,w,c
  4347   001DE4  B4D8               	btfsc	status,2,c
  4348   001DE6  EFF7  F00E         	goto	u3211
  4349   001DEA  EFF9  F00E         	goto	u3210
  4350   001DEE                     u3211:
  4351   001DEE  EFFA  F00E         	goto	l3767
  4352   001DF2                     u3210:
  4353   001DF2  0628               	decf	___fladd@bexp^0,f,c
  4354   001DF4                     l3767:
  4355   001DF4  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4356   001DF6  EFFF  F00E         	goto	u3221
  4357   001DFA  EF01  F00F         	goto	u3220
  4358   001DFE                     u3221:
  4359   001DFE  EFD7  F00E         	goto	l3751
  4360   001E02                     u3220:
  4361   001E02                     l3769:
  4362   001E02  0E00               	movlw	0
  4363   001E04  6E27               	movwf	___fladd@aexp^0,c
  4364   001E06  AE29               	btfss	___fladd@grs^0,7,c
  4365   001E08  EF08  F00F         	goto	u3231
  4366   001E0C  EF0A  F00F         	goto	u3230
  4367   001E10                     u3231:
  4368   001E10  EF22  F00F         	goto	l1224
  4369   001E14                     u3230:
  4370   001E14  C029  F022         	movff	___fladd@grs,??___fladd
  4371   001E18  0E7F               	movlw	127
  4372   001E1A  1622               	andwf	??___fladd^0,f,c
  4373   001E1C  B4D8               	btfsc	status,2,c
  4374   001E1E  EF13  F00F         	goto	u3241
  4375   001E22  EF15  F00F         	goto	u3240
  4376   001E26                     u3241:
  4377   001E26  EF19  F00F         	goto	l1225
  4378   001E2A                     u3240:
  4379   001E2A                     l3775:
  4380   001E2A  0E01               	movlw	1
  4381   001E2C  6E27               	movwf	___fladd@aexp^0,c
  4382   001E2E  EF22  F00F         	goto	l1224
  4383   001E32                     l1225:
  4384   001E32  A01A               	btfss	___fladd@b^0,0,c
  4385   001E34  EF1E  F00F         	goto	u3251
  4386   001E38  EF20  F00F         	goto	u3250
  4387   001E3C                     u3251:
  4388   001E3C  EF22  F00F         	goto	l1224
  4389   001E40                     u3250:
  4390   001E40  EF15  F00F         	goto	l3775
  4391   001E44                     l1224:
  4392   001E44  5027               	movf	___fladd@aexp^0,w,c
  4393   001E46  B4D8               	btfsc	status,2,c
  4394   001E48  EF28  F00F         	goto	u3261
  4395   001E4C  EF2A  F00F         	goto	u3260
  4396   001E50                     u3261:
  4397   001E50  EF55  F00F         	goto	l3787
  4398   001E54                     u3260:
  4399   001E54  0E01               	movlw	1
  4400   001E56  261A               	addwf	___fladd@b^0,f,c
  4401   001E58  0E00               	movlw	0
  4402   001E5A  221B               	addwfc	(___fladd@b+1)^0,f,c
  4403   001E5C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4404   001E5E  221D               	addwfc	(___fladd@b+3)^0,f,c
  4405   001E60  A01D               	btfss	(___fladd@b+3)^0,0,c
  4406   001E62  EF35  F00F         	goto	u3271
  4407   001E66  EF37  F00F         	goto	u3270
  4408   001E6A                     u3271:
  4409   001E6A  EF55  F00F         	goto	l3787
  4410   001E6E                     u3270:
  4411   001E6E  C01A  F022         	movff	___fladd@b,??___fladd
  4412   001E72  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4413   001E76  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4414   001E7A  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4415   001E7E  3425               	rlcf	(??___fladd+3)^0,w,c
  4416   001E80  3225               	rrcf	(??___fladd+3)^0,f,c
  4417   001E82  3224               	rrcf	(??___fladd+2)^0,f,c
  4418   001E84  3223               	rrcf	(??___fladd+1)^0,f,c
  4419   001E86  3222               	rrcf	??___fladd^0,f,c
  4420   001E88  C022  F01A         	movff	??___fladd,___fladd@b
  4421   001E8C  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4422   001E90  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4423   001E94  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4424   001E98  2828               	incf	___fladd@bexp^0,w,c
  4425   001E9A  B4D8               	btfsc	status,2,c
  4426   001E9C  EF52  F00F         	goto	u3281
  4427   001EA0  EF54  F00F         	goto	u3280
  4428   001EA4                     u3281:
  4429   001EA4  EF55  F00F         	goto	l3787
  4430   001EA8                     u3280:
  4431   001EA8  2A28               	incf	___fladd@bexp^0,f,c
  4432   001EAA                     l3787:
  4433   001EAA  2828               	incf	___fladd@bexp^0,w,c
  4434   001EAC  B4D8               	btfsc	status,2,c
  4435   001EAE  EF5B  F00F         	goto	u3291
  4436   001EB2  EF5D  F00F         	goto	u3290
  4437   001EB6                     u3291:
  4438   001EB6  EF65  F00F         	goto	l3791
  4439   001EBA                     u3290:
  4440   001EBA  5028               	movf	___fladd@bexp^0,w,c
  4441   001EBC  A4D8               	btfss	status,2,c
  4442   001EBE  EF63  F00F         	goto	u3301
  4443   001EC2  EF65  F00F         	goto	u3300
  4444   001EC6                     u3301:
  4445   001EC6  EF77  F00F         	goto	l3795
  4446   001ECA                     u3300:
  4447   001ECA                     l3791:
  4448   001ECA  0E00               	movlw	0
  4449   001ECC  6E1A               	movwf	___fladd@b^0,c
  4450   001ECE  0E00               	movlw	0
  4451   001ED0  6E1B               	movwf	(___fladd@b+1)^0,c
  4452   001ED2  0E00               	movlw	0
  4453   001ED4  6E1C               	movwf	(___fladd@b+2)^0,c
  4454   001ED6  0E00               	movlw	0
  4455   001ED8  6E1D               	movwf	(___fladd@b+3)^0,c
  4456   001EDA  5028               	movf	___fladd@bexp^0,w,c
  4457   001EDC  A4D8               	btfss	status,2,c
  4458   001EDE  EF73  F00F         	goto	u3311
  4459   001EE2  EF75  F00F         	goto	u3310
  4460   001EE6                     u3311:
  4461   001EE6  EF77  F00F         	goto	l3795
  4462   001EEA                     u3310:
  4463   001EEA  0E00               	movlw	0
  4464   001EEC  6E26               	movwf	___fladd@signs^0,c
  4465   001EEE                     l3795:
  4466   001EEE  A028               	btfss	___fladd@bexp^0,0,c
  4467   001EF0  EF7C  F00F         	goto	u3321
  4468   001EF4  EF7E  F00F         	goto	u3320
  4469   001EF8                     u3321:
  4470   001EF8  EF81  F00F         	goto	l3799
  4471   001EFC                     u3320:
  4472   001EFC  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4473   001EFE  EF82  F00F         	goto	l3801
  4474   001F02                     l3799:
  4475   001F02  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4476   001F04                     l3801:
  4477   001F04  90D8               	bcf	status,0,c
  4478   001F06  3028               	rrcf	___fladd@bexp^0,w,c
  4479   001F08  6E1D               	movwf	(___fladd@b+3)^0,c
  4480   001F0A  AE26               	btfss	___fladd@signs^0,7,c
  4481   001F0C  EF8A  F00F         	goto	u3331
  4482   001F10  EF8C  F00F         	goto	u3330
  4483   001F14                     u3331:
  4484   001F14  EF8D  F00F         	goto	l3807
  4485   001F18                     u3330:
  4486   001F18  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4487   001F1A                     l3807:
  4488   001F1A  C01A  F01A         	movff	___fladd@b,?___fladd
  4489   001F1E  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4490   001F22  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4491   001F26  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4492   001F2A                     l1207:
  4493   001F2A  0012               	return		;funcret
  4494   001F2C                     __end_of___fladd:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function ___fleq *****************
  4498 ;; Defined at:
  4499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  ff1             4    0[COMRAM] unsigned char 
  4502 ;;  ff2             4    4[COMRAM] unsigned char 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;		None               void
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4518 ;;Total ram usage:       12 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_RGB2Hue
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text23
  4529   003A66                     __ptext23:
  4530                           	callstack 0
  4531   003A66                     ___fleq:
  4532                           	callstack 28
  4533   003A66  0E00               	movlw	0
  4534   003A68  1401               	andwf	___fleq@ff1^0,w,c
  4535   003A6A  6E09               	movwf	??___fleq^0,c
  4536   003A6C  0E00               	movlw	0
  4537   003A6E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4538   003A70  6E0A               	movwf	(??___fleq+1)^0,c
  4539   003A72  0E80               	movlw	128
  4540   003A74  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4541   003A76  6E0B               	movwf	(??___fleq+2)^0,c
  4542   003A78  0E7F               	movlw	127
  4543   003A7A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4544   003A7C  6E0C               	movwf	(??___fleq+3)^0,c
  4545   003A7E  5009               	movf	??___fleq^0,w,c
  4546   003A80  100A               	iorwf	(??___fleq+1)^0,w,c
  4547   003A82  100B               	iorwf	(??___fleq+2)^0,w,c
  4548   003A84  100C               	iorwf	(??___fleq+3)^0,w,c
  4549   003A86  A4D8               	btfss	status,2,c
  4550   003A88  EF48  F01D         	goto	u3911
  4551   003A8C  EF4A  F01D         	goto	u3910
  4552   003A90                     u3911:
  4553   003A90  EF52  F01D         	goto	l4197
  4554   003A94                     u3910:
  4555   003A94  0E00               	movlw	0
  4556   003A96  6E01               	movwf	___fleq@ff1^0,c
  4557   003A98  0E00               	movlw	0
  4558   003A9A  6E02               	movwf	(___fleq@ff1+1)^0,c
  4559   003A9C  0E00               	movlw	0
  4560   003A9E  6E03               	movwf	(___fleq@ff1+2)^0,c
  4561   003AA0  0E00               	movlw	0
  4562   003AA2  6E04               	movwf	(___fleq@ff1+3)^0,c
  4563   003AA4                     l4197:
  4564   003AA4  0E00               	movlw	0
  4565   003AA6  1405               	andwf	___fleq@ff2^0,w,c
  4566   003AA8  6E09               	movwf	??___fleq^0,c
  4567   003AAA  0E00               	movlw	0
  4568   003AAC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4569   003AAE  6E0A               	movwf	(??___fleq+1)^0,c
  4570   003AB0  0E80               	movlw	128
  4571   003AB2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4572   003AB4  6E0B               	movwf	(??___fleq+2)^0,c
  4573   003AB6  0E7F               	movlw	127
  4574   003AB8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4575   003ABA  6E0C               	movwf	(??___fleq+3)^0,c
  4576   003ABC  5009               	movf	??___fleq^0,w,c
  4577   003ABE  100A               	iorwf	(??___fleq+1)^0,w,c
  4578   003AC0  100B               	iorwf	(??___fleq+2)^0,w,c
  4579   003AC2  100C               	iorwf	(??___fleq+3)^0,w,c
  4580   003AC4  A4D8               	btfss	status,2,c
  4581   003AC6  EF67  F01D         	goto	u3921
  4582   003ACA  EF69  F01D         	goto	u3920
  4583   003ACE                     u3921:
  4584   003ACE  EF71  F01D         	goto	l4201
  4585   003AD2                     u3920:
  4586   003AD2  0E00               	movlw	0
  4587   003AD4  6E05               	movwf	___fleq@ff2^0,c
  4588   003AD6  0E00               	movlw	0
  4589   003AD8  6E06               	movwf	(___fleq@ff2+1)^0,c
  4590   003ADA  0E00               	movlw	0
  4591   003ADC  6E07               	movwf	(___fleq@ff2+2)^0,c
  4592   003ADE  0E00               	movlw	0
  4593   003AE0  6E08               	movwf	(___fleq@ff2+3)^0,c
  4594   003AE2                     l4201:
  4595   003AE2  5005               	movf	___fleq@ff2^0,w,c
  4596   003AE4  1801               	xorwf	___fleq@ff1^0,w,c
  4597   003AE6  E10F               	bnz	u3930
  4598   003AE8  5006               	movf	(___fleq@ff2+1)^0,w,c
  4599   003AEA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4600   003AEC  E10C               	bnz	u3930
  4601   003AEE  5007               	movf	(___fleq@ff2+2)^0,w,c
  4602   003AF0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4603   003AF2  E109               	bnz	u3930
  4604   003AF4  5008               	movf	(___fleq@ff2+3)^0,w,c
  4605   003AF6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4606   003AF8  B4D8               	btfsc	status,2,c
  4607   003AFA  EF81  F01D         	goto	u3931
  4608   003AFE  EF83  F01D         	goto	u3930
  4609   003B02                     u3931:
  4610   003B02  EF86  F01D         	goto	l4205
  4611   003B06                     u3930:
  4612   003B06  90D8               	bcf	status,0,c
  4613   003B08  EF87  F01D         	goto	l929
  4614   003B0C                     l4205:
  4615   003B0C  80D8               	bsf	status,0,c
  4616   003B0E                     l929:
  4617   003B0E  0012               	return		;funcret
  4618   003B10                     __end_of___fleq:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function ___fldiv *****************
  4622 ;; Defined at:
  4623 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  b               4   49[COMRAM] unsigned char 
  4626 ;;  a               4   53[COMRAM] unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  grs             4   68[COMRAM] unsigned long 
  4629 ;;  rem             4   61[COMRAM] unsigned long 
  4630 ;;  new_exp         2   66[COMRAM] short 
  4631 ;;  aexp            1   73[COMRAM] unsigned char 
  4632 ;;  bexp            1   72[COMRAM] unsigned char 
  4633 ;;  sign            1   65[COMRAM] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  4   49[COMRAM] unsigned char 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;Total ram usage:       25 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_RGB2Hue
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text24
  4658   002358                     __ptext24:
  4659                           	callstack 0
  4660   002358                     ___fldiv:
  4661                           	callstack 28
  4662   002358  5035               	movf	(___fldiv@b+3)^0,w,c
  4663   00235A  0B80               	andlw	128
  4664   00235C  6E42               	movwf	___fldiv@sign^0,c
  4665   00235E  5035               	movf	(___fldiv@b+3)^0,w,c
  4666   002360  2435               	addwf	(___fldiv@b+3)^0,w,c
  4667   002362  6E49               	movwf	___fldiv@bexp^0,c
  4668   002364  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4669   002366  EFB7  F011         	goto	u3681
  4670   00236A  EFB9  F011         	goto	u3680
  4671   00236E                     u3681:
  4672   00236E  EFBA  F011         	goto	l4055
  4673   002372                     u3680:
  4674   002372  8049               	bsf	___fldiv@bexp^0,0,c
  4675   002374                     l4055:
  4676   002374  5049               	movf	___fldiv@bexp^0,w,c
  4677   002376  B4D8               	btfsc	status,2,c
  4678   002378  EFC0  F011         	goto	u3691
  4679   00237C  EFC2  F011         	goto	u3690
  4680   002380                     u3691:
  4681   002380  EFD7  F011         	goto	l4065
  4682   002384                     u3690:
  4683   002384  2849               	incf	___fldiv@bexp^0,w,c
  4684   002386  A4D8               	btfss	status,2,c
  4685   002388  EFC8  F011         	goto	u3701
  4686   00238C  EFCA  F011         	goto	u3700
  4687   002390                     u3701:
  4688   002390  EFD2  F011         	goto	l4061
  4689   002394                     u3700:
  4690   002394  0E00               	movlw	0
  4691   002396  6E32               	movwf	___fldiv@b^0,c
  4692   002398  0E00               	movlw	0
  4693   00239A  6E33               	movwf	(___fldiv@b+1)^0,c
  4694   00239C  0E00               	movlw	0
  4695   00239E  6E34               	movwf	(___fldiv@b+2)^0,c
  4696   0023A0  0E00               	movlw	0
  4697   0023A2  6E35               	movwf	(___fldiv@b+3)^0,c
  4698   0023A4                     l4061:
  4699   0023A4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4700   0023A6  0E00               	movlw	0
  4701   0023A8  6E35               	movwf	(___fldiv@b+3)^0,c
  4702   0023AA  EFDF  F011         	goto	l4067
  4703   0023AE                     l4065:
  4704   0023AE  0E00               	movlw	0
  4705   0023B0  6E32               	movwf	___fldiv@b^0,c
  4706   0023B2  0E00               	movlw	0
  4707   0023B4  6E33               	movwf	(___fldiv@b+1)^0,c
  4708   0023B6  0E00               	movlw	0
  4709   0023B8  6E34               	movwf	(___fldiv@b+2)^0,c
  4710   0023BA  0E00               	movlw	0
  4711   0023BC  6E35               	movwf	(___fldiv@b+3)^0,c
  4712   0023BE                     l4067:
  4713   0023BE  5039               	movf	(___fldiv@a+3)^0,w,c
  4714   0023C0  0B80               	andlw	128
  4715   0023C2  1A42               	xorwf	___fldiv@sign^0,f,c
  4716   0023C4  5039               	movf	(___fldiv@a+3)^0,w,c
  4717   0023C6  2439               	addwf	(___fldiv@a+3)^0,w,c
  4718   0023C8  6E4A               	movwf	___fldiv@aexp^0,c
  4719   0023CA  AE38               	btfss	(___fldiv@a+2)^0,7,c
  4720   0023CC  EFEA  F011         	goto	u3711
  4721   0023D0  EFEC  F011         	goto	u3710
  4722   0023D4                     u3711:
  4723   0023D4  EFED  F011         	goto	l4075
  4724   0023D8                     u3710:
  4725   0023D8  804A               	bsf	___fldiv@aexp^0,0,c
  4726   0023DA                     l4075:
  4727   0023DA  504A               	movf	___fldiv@aexp^0,w,c
  4728   0023DC  B4D8               	btfsc	status,2,c
  4729   0023DE  EFF3  F011         	goto	u3721
  4730   0023E2  EFF5  F011         	goto	u3720
  4731   0023E6                     u3721:
  4732   0023E6  EF0A  F012         	goto	l4085
  4733   0023EA                     u3720:
  4734   0023EA  284A               	incf	___fldiv@aexp^0,w,c
  4735   0023EC  A4D8               	btfss	status,2,c
  4736   0023EE  EFFB  F011         	goto	u3731
  4737   0023F2  EFFD  F011         	goto	u3730
  4738   0023F6                     u3731:
  4739   0023F6  EF05  F012         	goto	l4081
  4740   0023FA                     u3730:
  4741   0023FA  0E00               	movlw	0
  4742   0023FC  6E36               	movwf	___fldiv@a^0,c
  4743   0023FE  0E00               	movlw	0
  4744   002400  6E37               	movwf	(___fldiv@a+1)^0,c
  4745   002402  0E00               	movlw	0
  4746   002404  6E38               	movwf	(___fldiv@a+2)^0,c
  4747   002406  0E00               	movlw	0
  4748   002408  6E39               	movwf	(___fldiv@a+3)^0,c
  4749   00240A                     l4081:
  4750   00240A  8E38               	bsf	(___fldiv@a+2)^0,7,c
  4751   00240C  0E00               	movlw	0
  4752   00240E  6E39               	movwf	(___fldiv@a+3)^0,c
  4753   002410  EF12  F012         	goto	l4087
  4754   002414                     l4085:
  4755   002414  0E00               	movlw	0
  4756   002416  6E36               	movwf	___fldiv@a^0,c
  4757   002418  0E00               	movlw	0
  4758   00241A  6E37               	movwf	(___fldiv@a+1)^0,c
  4759   00241C  0E00               	movlw	0
  4760   00241E  6E38               	movwf	(___fldiv@a+2)^0,c
  4761   002420  0E00               	movlw	0
  4762   002422  6E39               	movwf	(___fldiv@a+3)^0,c
  4763   002424                     l4087:
  4764   002424  5036               	movf	___fldiv@a^0,w,c
  4765   002426  1037               	iorwf	(___fldiv@a+1)^0,w,c
  4766   002428  1038               	iorwf	(___fldiv@a+2)^0,w,c
  4767   00242A  1039               	iorwf	(___fldiv@a+3)^0,w,c
  4768   00242C  A4D8               	btfss	status,2,c
  4769   00242E  EF1B  F012         	goto	u3741
  4770   002432  EF1D  F012         	goto	u3740
  4771   002436                     u3741:
  4772   002436  EF35  F012         	goto	l4099
  4773   00243A                     u3740:
  4774   00243A  0E00               	movlw	0
  4775   00243C  6E32               	movwf	___fldiv@b^0,c
  4776   00243E  0E00               	movlw	0
  4777   002440  6E33               	movwf	(___fldiv@b+1)^0,c
  4778   002442  0E00               	movlw	0
  4779   002444  6E34               	movwf	(___fldiv@b+2)^0,c
  4780   002446  0E00               	movlw	0
  4781   002448  6E35               	movwf	(___fldiv@b+3)^0,c
  4782   00244A  0E80               	movlw	128
  4783   00244C  1234               	iorwf	(___fldiv@b+2)^0,f,c
  4784   00244E  0E7F               	movlw	127
  4785   002450  1235               	iorwf	(___fldiv@b+3)^0,f,c
  4786   002452                     l4093:
  4787   002452  5042               	movf	___fldiv@sign^0,w,c
  4788   002454  1235               	iorwf	(___fldiv@b+3)^0,f,c
  4789   002456  C032  F032         	movff	___fldiv@b,?___fldiv
  4790   00245A  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  4791   00245E  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  4792   002462  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  4793   002466  EF78  F013         	goto	l1252
  4794   00246A                     l4099:
  4795   00246A  5049               	movf	___fldiv@bexp^0,w,c
  4796   00246C  A4D8               	btfss	status,2,c
  4797   00246E  EF3B  F012         	goto	u3751
  4798   002472  EF3D  F012         	goto	u3750
  4799   002476                     u3751:
  4800   002476  EF47  F012         	goto	l4107
  4801   00247A                     u3750:
  4802   00247A  0E00               	movlw	0
  4803   00247C  6E32               	movwf	?___fldiv^0,c
  4804   00247E  0E00               	movlw	0
  4805   002480  6E33               	movwf	(?___fldiv+1)^0,c
  4806   002482  0E00               	movlw	0
  4807   002484  6E34               	movwf	(?___fldiv+2)^0,c
  4808   002486  0E00               	movlw	0
  4809   002488  6E35               	movwf	(?___fldiv+3)^0,c
  4810   00248A  EF78  F013         	goto	l1252
  4811   00248E                     l4107:
  4812   00248E  504A               	movf	___fldiv@aexp^0,w,c
  4813   002490  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  4814   002494  6A3B               	clrf	(??___fldiv+1)^0,c
  4815   002496  5E3A               	subwf	??___fldiv^0,f,c
  4816   002498  0E00               	movlw	0
  4817   00249A  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  4818   00249C  0E7F               	movlw	127
  4819   00249E  243A               	addwf	??___fldiv^0,w,c
  4820   0024A0  6E43               	movwf	___fldiv@new_exp^0,c
  4821   0024A2  0E00               	movlw	0
  4822   0024A4  203B               	addwfc	(??___fldiv+1)^0,w,c
  4823   0024A6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4824   0024A8  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  4825   0024AC  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  4826   0024B0  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  4827   0024B4  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  4828   0024B8  0E00               	movlw	0
  4829   0024BA  6E32               	movwf	___fldiv@b^0,c
  4830   0024BC  0E00               	movlw	0
  4831   0024BE  6E33               	movwf	(___fldiv@b+1)^0,c
  4832   0024C0  0E00               	movlw	0
  4833   0024C2  6E34               	movwf	(___fldiv@b+2)^0,c
  4834   0024C4  0E00               	movlw	0
  4835   0024C6  6E35               	movwf	(___fldiv@b+3)^0,c
  4836   0024C8  0E00               	movlw	0
  4837   0024CA  6E45               	movwf	___fldiv@grs^0,c
  4838   0024CC  0E00               	movlw	0
  4839   0024CE  6E46               	movwf	(___fldiv@grs+1)^0,c
  4840   0024D0  0E00               	movlw	0
  4841   0024D2  6E47               	movwf	(___fldiv@grs+2)^0,c
  4842   0024D4  0E00               	movlw	0
  4843   0024D6  6E48               	movwf	(___fldiv@grs+3)^0,c
  4844   0024D8  0E00               	movlw	0
  4845   0024DA  6E4A               	movwf	___fldiv@aexp^0,c
  4846   0024DC  EFA8  F012         	goto	l1254
  4847   0024E0                     l4117:
  4848   0024E0  504A               	movf	___fldiv@aexp^0,w,c
  4849   0024E2  B4D8               	btfsc	status,2,c
  4850   0024E4  EF76  F012         	goto	u3761
  4851   0024E8  EF78  F012         	goto	u3760
  4852   0024EC                     u3761:
  4853   0024EC  EF8F  F012         	goto	l4125
  4854   0024F0                     u3760:
  4855   0024F0  90D8               	bcf	status,0,c
  4856   0024F2  363E               	rlcf	___fldiv@rem^0,f,c
  4857   0024F4  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4858   0024F6  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4859   0024F8  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4860   0024FA  90D8               	bcf	status,0,c
  4861   0024FC  3632               	rlcf	___fldiv@b^0,f,c
  4862   0024FE  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4863   002500  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4864   002502  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4865   002504  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4866   002506  EF87  F012         	goto	u3771
  4867   00250A  EF89  F012         	goto	u3770
  4868   00250E                     u3771:
  4869   00250E  EF8A  F012         	goto	l1257
  4870   002512                     u3770:
  4871   002512  8032               	bsf	___fldiv@b^0,0,c
  4872   002514                     l1257:
  4873   002514  90D8               	bcf	status,0,c
  4874   002516  3645               	rlcf	___fldiv@grs^0,f,c
  4875   002518  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4876   00251A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4877   00251C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4878   00251E                     l4125:
  4879   00251E  5036               	movf	___fldiv@a^0,w,c
  4880   002520  5C3E               	subwf	___fldiv@rem^0,w,c
  4881   002522  5037               	movf	(___fldiv@a+1)^0,w,c
  4882   002524  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4883   002526  5038               	movf	(___fldiv@a+2)^0,w,c
  4884   002528  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4885   00252A  5039               	movf	(___fldiv@a+3)^0,w,c
  4886   00252C  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4887   00252E  A0D8               	btfss	status,0,c
  4888   002530  EF9C  F012         	goto	u3781
  4889   002534  EF9E  F012         	goto	u3780
  4890   002538                     u3781:
  4891   002538  EFA7  F012         	goto	l4131
  4892   00253C                     u3780:
  4893   00253C  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4894   00253E  5036               	movf	___fldiv@a^0,w,c
  4895   002540  5E3E               	subwf	___fldiv@rem^0,f,c
  4896   002542  5037               	movf	(___fldiv@a+1)^0,w,c
  4897   002544  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4898   002546  5038               	movf	(___fldiv@a+2)^0,w,c
  4899   002548  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4900   00254A  5039               	movf	(___fldiv@a+3)^0,w,c
  4901   00254C  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4902   00254E                     l4131:
  4903   00254E  2A4A               	incf	___fldiv@aexp^0,f,c
  4904   002550                     l1254:
  4905   002550  0E19               	movlw	25
  4906   002552  644A               	cpfsgt	___fldiv@aexp^0,c
  4907   002554  EFAE  F012         	goto	u3791
  4908   002558  EFB0  F012         	goto	u3790
  4909   00255C                     u3791:
  4910   00255C  EF70  F012         	goto	l4117
  4911   002560                     u3790:
  4912   002560  503E               	movf	___fldiv@rem^0,w,c
  4913   002562  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4914   002564  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4915   002566  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4916   002568  B4D8               	btfsc	status,2,c
  4917   00256A  EFB9  F012         	goto	u3801
  4918   00256E  EFBB  F012         	goto	u3800
  4919   002572                     u3801:
  4920   002572  EFD3  F012         	goto	l4143
  4921   002576                     u3800:
  4922   002576  8045               	bsf	___fldiv@grs^0,0,c
  4923   002578  EFD3  F012         	goto	l4143
  4924   00257C                     l4137:
  4925   00257C  90D8               	bcf	status,0,c
  4926   00257E  3632               	rlcf	___fldiv@b^0,f,c
  4927   002580  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4928   002582  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4929   002584  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4930   002586  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4931   002588  EFC8  F012         	goto	u3811
  4932   00258C  EFCA  F012         	goto	u3810
  4933   002590                     u3811:
  4934   002590  EFCB  F012         	goto	l1263
  4935   002594                     u3810:
  4936   002594  8032               	bsf	___fldiv@b^0,0,c
  4937   002596                     l1263:
  4938   002596  90D8               	bcf	status,0,c
  4939   002598  3645               	rlcf	___fldiv@grs^0,f,c
  4940   00259A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4941   00259C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4942   00259E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4943   0025A0  0643               	decf	___fldiv@new_exp^0,f,c
  4944   0025A2  A0D8               	btfss	status,0,c
  4945   0025A4  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4946   0025A6                     l4143:
  4947   0025A6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4948   0025A8  EFD8  F012         	goto	u3821
  4949   0025AC  EFDA  F012         	goto	u3820
  4950   0025B0                     u3821:
  4951   0025B0  EFBE  F012         	goto	l4137
  4952   0025B4                     u3820:
  4953   0025B4  0E00               	movlw	0
  4954   0025B6  6E4A               	movwf	___fldiv@aexp^0,c
  4955   0025B8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4956   0025BA  EFE1  F012         	goto	u3831
  4957   0025BE  EFE3  F012         	goto	u3830
  4958   0025C2                     u3831:
  4959   0025C2  EF07  F013         	goto	l1265
  4960   0025C6                     u3830:
  4961   0025C6  0EFF               	movlw	255
  4962   0025C8  1445               	andwf	___fldiv@grs^0,w,c
  4963   0025CA  6E3A               	movwf	??___fldiv^0,c
  4964   0025CC  0EFF               	movlw	255
  4965   0025CE  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4966   0025D0  6E3B               	movwf	(??___fldiv+1)^0,c
  4967   0025D2  0EFF               	movlw	255
  4968   0025D4  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4969   0025D6  6E3C               	movwf	(??___fldiv+2)^0,c
  4970   0025D8  0E7F               	movlw	127
  4971   0025DA  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4972   0025DC  6E3D               	movwf	(??___fldiv+3)^0,c
  4973   0025DE  503A               	movf	??___fldiv^0,w,c
  4974   0025E0  103B               	iorwf	(??___fldiv+1)^0,w,c
  4975   0025E2  103C               	iorwf	(??___fldiv+2)^0,w,c
  4976   0025E4  103D               	iorwf	(??___fldiv+3)^0,w,c
  4977   0025E6  B4D8               	btfsc	status,2,c
  4978   0025E8  EFF8  F012         	goto	u3841
  4979   0025EC  EFFA  F012         	goto	u3840
  4980   0025F0                     u3841:
  4981   0025F0  EFFE  F012         	goto	l1266
  4982   0025F4                     u3840:
  4983   0025F4                     l4151:
  4984   0025F4  0E01               	movlw	1
  4985   0025F6  6E4A               	movwf	___fldiv@aexp^0,c
  4986   0025F8  EF07  F013         	goto	l1265
  4987   0025FC                     l1266:
  4988   0025FC  A032               	btfss	___fldiv@b^0,0,c
  4989   0025FE  EF03  F013         	goto	u3851
  4990   002602  EF05  F013         	goto	u3850
  4991   002606                     u3851:
  4992   002606  EF07  F013         	goto	l1265
  4993   00260A                     u3850:
  4994   00260A  EFFA  F012         	goto	l4151
  4995   00260E                     l1265:
  4996   00260E  504A               	movf	___fldiv@aexp^0,w,c
  4997   002610  B4D8               	btfsc	status,2,c
  4998   002612  EF0D  F013         	goto	u3861
  4999   002616  EF0F  F013         	goto	u3860
  5000   00261A                     u3861:
  5001   00261A  EF33  F013         	goto	l4163
  5002   00261E                     u3860:
  5003   00261E  0E01               	movlw	1
  5004   002620  2632               	addwf	___fldiv@b^0,f,c
  5005   002622  0E00               	movlw	0
  5006   002624  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5007   002626  2234               	addwfc	(___fldiv@b+2)^0,f,c
  5008   002628  2235               	addwfc	(___fldiv@b+3)^0,f,c
  5009   00262A  A035               	btfss	(___fldiv@b+3)^0,0,c
  5010   00262C  EF1A  F013         	goto	u3871
  5011   002630  EF1C  F013         	goto	u3870
  5012   002634                     u3871:
  5013   002634  EF33  F013         	goto	l4163
  5014   002638                     u3870:
  5015   002638  C032  F03A         	movff	___fldiv@b,??___fldiv
  5016   00263C  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  5017   002640  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  5018   002644  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  5019   002648  343D               	rlcf	(??___fldiv+3)^0,w,c
  5020   00264A  323D               	rrcf	(??___fldiv+3)^0,f,c
  5021   00264C  323C               	rrcf	(??___fldiv+2)^0,f,c
  5022   00264E  323B               	rrcf	(??___fldiv+1)^0,f,c
  5023   002650  323A               	rrcf	??___fldiv^0,f,c
  5024   002652  C03A  F032         	movff	??___fldiv,___fldiv@b
  5025   002656  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  5026   00265A  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  5027   00265E  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  5028   002662  4A43               	infsnz	___fldiv@new_exp^0,f,c
  5029   002664  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  5030   002666                     l4163:
  5031   002666  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5032   002668  EF3E  F013         	goto	u3881
  5033   00266C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5034   00266E  E108               	bnz	u3880
  5035   002670  2843               	incf	___fldiv@new_exp^0,w,c
  5036   002672  A0D8               	btfss	status,0,c
  5037   002674  EF3E  F013         	goto	u3881
  5038   002678  EF40  F013         	goto	u3880
  5039   00267C                     u3881:
  5040   00267C  EF4B  F013         	goto	l4167
  5041   002680                     u3880:
  5042   002680  0E00               	movlw	0
  5043   002682  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5044   002684  6843               	setf	___fldiv@new_exp^0,c
  5045   002686  0E00               	movlw	0
  5046   002688  6E32               	movwf	___fldiv@b^0,c
  5047   00268A  0E00               	movlw	0
  5048   00268C  6E33               	movwf	(___fldiv@b+1)^0,c
  5049   00268E  0E00               	movlw	0
  5050   002690  6E34               	movwf	(___fldiv@b+2)^0,c
  5051   002692  0E00               	movlw	0
  5052   002694  6E35               	movwf	(___fldiv@b+3)^0,c
  5053   002696                     l4167:
  5054   002696  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5055   002698  EF58  F013         	goto	u3890
  5056   00269C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5057   00269E  E106               	bnz	u3891
  5058   0026A0  0443               	decf	___fldiv@new_exp^0,w,c
  5059   0026A2  B0D8               	btfsc	status,0,c
  5060   0026A4  EF56  F013         	goto	u3891
  5061   0026A8  EF58  F013         	goto	u3890
  5062   0026AC                     u3891:
  5063   0026AC  EF66  F013         	goto	l4171
  5064   0026B0                     u3890:
  5065   0026B0  0E00               	movlw	0
  5066   0026B2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5067   0026B4  0E00               	movlw	0
  5068   0026B6  6E43               	movwf	___fldiv@new_exp^0,c
  5069   0026B8  0E00               	movlw	0
  5070   0026BA  6E32               	movwf	___fldiv@b^0,c
  5071   0026BC  0E00               	movlw	0
  5072   0026BE  6E33               	movwf	(___fldiv@b+1)^0,c
  5073   0026C0  0E00               	movlw	0
  5074   0026C2  6E34               	movwf	(___fldiv@b+2)^0,c
  5075   0026C4  0E00               	movlw	0
  5076   0026C6  6E35               	movwf	(___fldiv@b+3)^0,c
  5077   0026C8  0E00               	movlw	0
  5078   0026CA  6E42               	movwf	___fldiv@sign^0,c
  5079   0026CC                     l4171:
  5080   0026CC  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  5081   0026D0  A049               	btfss	___fldiv@bexp^0,0,c
  5082   0026D2  EF6D  F013         	goto	u3901
  5083   0026D6  EF6F  F013         	goto	u3900
  5084   0026DA                     u3901:
  5085   0026DA  EF72  F013         	goto	l4177
  5086   0026DE                     u3900:
  5087   0026DE  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5088   0026E0  EF73  F013         	goto	l4179
  5089   0026E4                     l4177:
  5090   0026E4  9E34               	bcf	(___fldiv@b+2)^0,7,c
  5091   0026E6                     l4179:
  5092   0026E6  90D8               	bcf	status,0,c
  5093   0026E8  3049               	rrcf	___fldiv@bexp^0,w,c
  5094   0026EA  6E35               	movwf	(___fldiv@b+3)^0,c
  5095   0026EC  EF29  F012         	goto	l4093
  5096   0026F0                     l1252:
  5097   0026F0  0012               	return		;funcret
  5098   0026F2                     __end_of___fldiv:
  5099                           	callstack 0
  5100                           
  5101 ;; *************** function _LED_init *****************
  5102 ;; Defined at:
  5103 ;;		line 4 in file "LED.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		None
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 1
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text25
  5132   004928                     __ptext25:
  5133                           	callstack 0
  5134   004928                     _LED_init:
  5135                           	callstack 29
  5136   004928                     
  5137                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5138   004928  9884               	bcf	132,4,c	;volatile
  5139                           
  5140                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5141   00492A  9088               	bcf	136,0,c	;volatile
  5142                           
  5143                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5144   00492C  9086               	bcf	134,0,c	;volatile
  5145                           
  5146                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5147   00492E  987C               	bcf	124,4,c	;volatile
  5148                           
  5149                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5150   004930  9080               	bcf	128,0,c	;volatile
  5151                           
  5152                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5153   004932  907E               	bcf	126,0,c	;volatile
  5154   004934  0012               	return		;funcret
  5155   004936                     __end_of_LED_init:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function _Interrupts_init *****************
  5159 ;; Defined at:
  5160 ;;		line 5 in file "interrupts.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		None
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 1
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_main
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text26
  5189   004942                     __ptext26:
  5190                           	callstack 0
  5191   004942                     _Interrupts_init:
  5192                           	callstack 29
  5193   004942                     
  5194                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  5195   004942  010E               	movlb	14	; () banked
  5196   004944  872D               	bsf	45,3,b	;volatile
  5197                           
  5198                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  5199   004946  8AF2               	bsf	242,5,c	;volatile
  5200                           
  5201                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  5202   004948  8CF2               	bsf	242,6,c	;volatile
  5203                           
  5204                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  5205   00494A  8EF2               	bsf	242,7,c	;volatile
  5206   00494C                     
  5207                           ; BSR set to: 14
  5208   00494C  0012               	return		;funcret
  5209   00494E                     __end_of_Interrupts_init:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _Colour2Action *****************
  5213 ;; Defined at:
  5214 ;;		line 105 in file "colorfunctions.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  cf              2   37[BANK0 ] PTR struct RGBC_rel
  5217 ;;		 -> colorf(22), 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:        4 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 8
  5236 ;; This function calls:
  5237 ;;		_Blue_T180
  5238 ;;		_Green_L90
  5239 ;;		_LightBlue_L135
  5240 ;;		_Orange_R135
  5241 ;;		_Pink_rev1_L90
  5242 ;;		_Red_R90
  5243 ;;		_White
  5244 ;;		_Yellow_rev1_R90
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text27
  5251   002C50                     __ptext27:
  5252                           	callstack 0
  5253   002C50                     _Colour2Action:
  5254                           	callstack 22
  5255   002C50                     
  5256                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  5257   002C50  0100               	movlb	0	; () banked
  5258   002C52  EE20 F014          	lfsr	2,20
  5259   002C56  5185               	movf	Colour2Action@cf& (0+255),w,b
  5260   002C58  26D9               	addwf	fsr2l,f,c
  5261   002C5A  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5262   002C5C  22DA               	addwfc	fsr2h,f,c
  5263   002C5E  50DE               	movf	postinc2,w,c
  5264   002C60  10DE               	iorwf	postinc2,w,c
  5265   002C62  A4D8               	btfss	status,2,c
  5266   002C64  EF36  F016         	goto	u4071
  5267   002C68  EF38  F016         	goto	u4070
  5268   002C6C                     u4071:
  5269   002C6C  EF44  F016         	goto	l4361
  5270   002C70                     u4070:
  5271   002C70                     
  5272                           ; BSR set to: 0
  5273                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  5274   002C70  0EF5               	movlw	low _motorL
  5275   002C72  6E21               	movwf	Red_R90@mL^0,c
  5276   002C74  0E00               	movlw	high _motorL
  5277   002C76  6E22               	movwf	(Red_R90@mL+1)^0,c
  5278   002C78  0E8C               	movlw	low _motorR
  5279   002C7A  6E23               	movwf	Red_R90@mR^0,c
  5280   002C7C  0E01               	movlw	high _motorR
  5281   002C7E  6E24               	movwf	(Red_R90@mR+1)^0,c
  5282   002C80  ECA9  F020         	call	_Red_R90	;wreg free
  5283                           
  5284                           ;colorfunctions.c: 110:     }
  5285   002C84  EFEB  F016         	goto	l4385
  5286   002C88                     l4361:
  5287                           
  5288                           ; BSR set to: 0
  5289   002C88  EE20 F014          	lfsr	2,20
  5290   002C8C  5185               	movf	Colour2Action@cf& (0+255),w,b
  5291   002C8E  26D9               	addwf	fsr2l,f,c
  5292   002C90  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5293   002C92  22DA               	addwfc	fsr2h,f,c
  5294   002C94  04DE               	decf	postinc2,w,c
  5295   002C96  10DE               	iorwf	postinc2,w,c
  5296   002C98  A4D8               	btfss	status,2,c
  5297   002C9A  EF51  F016         	goto	u4081
  5298   002C9E  EF53  F016         	goto	u4080
  5299   002CA2                     u4081:
  5300   002CA2  EF5F  F016         	goto	l4365
  5301   002CA6                     u4080:
  5302   002CA6                     
  5303                           ; BSR set to: 0
  5304                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  5305   002CA6  0EF5               	movlw	low _motorL
  5306   002CA8  6E21               	movwf	Green_L90@mL^0,c
  5307   002CAA  0E00               	movlw	high _motorL
  5308   002CAC  6E22               	movwf	(Green_L90@mL+1)^0,c
  5309   002CAE  0E8C               	movlw	low _motorR
  5310   002CB0  6E23               	movwf	Green_L90@mR^0,c
  5311   002CB2  0E01               	movlw	high _motorR
  5312   002CB4  6E24               	movwf	(Green_L90@mR+1)^0,c
  5313   002CB6  ECE7  F020         	call	_Green_L90	;wreg free
  5314                           
  5315                           ;colorfunctions.c: 114:     }
  5316   002CBA  EFEB  F016         	goto	l4385
  5317   002CBE                     l4365:
  5318                           
  5319                           ; BSR set to: 0
  5320   002CBE  EE20 F014          	lfsr	2,20
  5321   002CC2  5185               	movf	Colour2Action@cf& (0+255),w,b
  5322   002CC4  26D9               	addwf	fsr2l,f,c
  5323   002CC6  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5324   002CC8  22DA               	addwfc	fsr2h,f,c
  5325   002CCA  0E02               	movlw	2
  5326   002CCC  18DE               	xorwf	postinc2,w,c
  5327   002CCE  10DE               	iorwf	postinc2,w,c
  5328   002CD0  A4D8               	btfss	status,2,c
  5329   002CD2  EF6D  F016         	goto	u4091
  5330   002CD6  EF6F  F016         	goto	u4090
  5331   002CDA                     u4091:
  5332   002CDA  EF7B  F016         	goto	l4369
  5333   002CDE                     u4090:
  5334   002CDE                     
  5335                           ; BSR set to: 0
  5336                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  5337   002CDE  0EF5               	movlw	low _motorL
  5338   002CE0  6E24               	movwf	Blue_T180@mL^0,c
  5339   002CE2  0E00               	movlw	high _motorL
  5340   002CE4  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5341   002CE6  0E8C               	movlw	low _motorR
  5342   002CE8  6E26               	movwf	Blue_T180@mR^0,c
  5343   002CEA  0E01               	movlw	high _motorR
  5344   002CEC  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5345   002CEE  ECC0  F021         	call	_Blue_T180	;wreg free
  5346                           
  5347                           ;colorfunctions.c: 118:     }
  5348   002CF2  EFEB  F016         	goto	l4385
  5349   002CF6                     l4369:
  5350                           
  5351                           ; BSR set to: 0
  5352   002CF6  EE20 F014          	lfsr	2,20
  5353   002CFA  5185               	movf	Colour2Action@cf& (0+255),w,b
  5354   002CFC  26D9               	addwf	fsr2l,f,c
  5355   002CFE  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5356   002D00  22DA               	addwfc	fsr2h,f,c
  5357   002D02  0E03               	movlw	3
  5358   002D04  18DE               	xorwf	postinc2,w,c
  5359   002D06  10DE               	iorwf	postinc2,w,c
  5360   002D08  A4D8               	btfss	status,2,c
  5361   002D0A  EF89  F016         	goto	u4101
  5362   002D0E  EF8B  F016         	goto	u4100
  5363   002D12                     u4101:
  5364   002D12  EF97  F016         	goto	l4373
  5365   002D16                     u4100:
  5366   002D16                     
  5367                           ; BSR set to: 0
  5368                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5369   002D16  0EF5               	movlw	low _motorL
  5370   002D18  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5371   002D1A  0E00               	movlw	high _motorL
  5372   002D1C  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5373   002D1E  0E8C               	movlw	low _motorR
  5374   002D20  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5375   002D22  0E01               	movlw	high _motorR
  5376   002D24  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5377   002D26  EC77  F01B         	call	_Yellow_rev1_R90	;wreg free
  5378                           
  5379                           ;colorfunctions.c: 122:     }
  5380   002D2A  EFEB  F016         	goto	l4385
  5381   002D2E                     l4373:
  5382                           
  5383                           ; BSR set to: 0
  5384   002D2E  EE20 F014          	lfsr	2,20
  5385   002D32  5185               	movf	Colour2Action@cf& (0+255),w,b
  5386   002D34  26D9               	addwf	fsr2l,f,c
  5387   002D36  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5388   002D38  22DA               	addwfc	fsr2h,f,c
  5389   002D3A  0E04               	movlw	4
  5390   002D3C  18DE               	xorwf	postinc2,w,c
  5391   002D3E  10DE               	iorwf	postinc2,w,c
  5392   002D40  A4D8               	btfss	status,2,c
  5393   002D42  EFA5  F016         	goto	u4111
  5394   002D46  EFA7  F016         	goto	u4110
  5395   002D4A                     u4111:
  5396   002D4A  EFB3  F016         	goto	l4377
  5397   002D4E                     u4110:
  5398   002D4E                     
  5399                           ; BSR set to: 0
  5400                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5401   002D4E  0EF5               	movlw	low _motorL
  5402   002D50  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5403   002D52  0E00               	movlw	high _motorL
  5404   002D54  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5405   002D56  0E8C               	movlw	low _motorR
  5406   002D58  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5407   002D5A  0E01               	movlw	high _motorR
  5408   002D5C  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5409   002D5E  ECEB  F01B         	call	_Pink_rev1_L90	;wreg free
  5410                           
  5411                           ;colorfunctions.c: 126:     }
  5412   002D62  EFEB  F016         	goto	l4385
  5413   002D66                     l4377:
  5414                           
  5415                           ; BSR set to: 0
  5416   002D66  EE20 F014          	lfsr	2,20
  5417   002D6A  5185               	movf	Colour2Action@cf& (0+255),w,b
  5418   002D6C  26D9               	addwf	fsr2l,f,c
  5419   002D6E  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5420   002D70  22DA               	addwfc	fsr2h,f,c
  5421   002D72  0E05               	movlw	5
  5422   002D74  18DE               	xorwf	postinc2,w,c
  5423   002D76  10DE               	iorwf	postinc2,w,c
  5424   002D78  A4D8               	btfss	status,2,c
  5425   002D7A  EFC1  F016         	goto	u4121
  5426   002D7E  EFC3  F016         	goto	u4120
  5427   002D82                     u4121:
  5428   002D82  EFCF  F016         	goto	l4381
  5429   002D86                     u4120:
  5430   002D86                     
  5431                           ; BSR set to: 0
  5432                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  5433   002D86  0EF5               	movlw	low _motorL
  5434   002D88  6E21               	movwf	Orange_R135@mL^0,c
  5435   002D8A  0E00               	movlw	high _motorL
  5436   002D8C  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5437   002D8E  0E8C               	movlw	low _motorR
  5438   002D90  6E23               	movwf	Orange_R135@mR^0,c
  5439   002D92  0E01               	movlw	high _motorR
  5440   002D94  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5441   002D96  ECDB  F01D         	call	_Orange_R135	;wreg free
  5442                           
  5443                           ;colorfunctions.c: 130:     }
  5444   002D9A  EFEB  F016         	goto	l4385
  5445   002D9E                     l4381:
  5446                           
  5447                           ; BSR set to: 0
  5448   002D9E  EE20 F014          	lfsr	2,20
  5449   002DA2  5185               	movf	Colour2Action@cf& (0+255),w,b
  5450   002DA4  26D9               	addwf	fsr2l,f,c
  5451   002DA6  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5452   002DA8  22DA               	addwfc	fsr2h,f,c
  5453   002DAA  0E06               	movlw	6
  5454   002DAC  18DE               	xorwf	postinc2,w,c
  5455   002DAE  10DE               	iorwf	postinc2,w,c
  5456   002DB0  A4D8               	btfss	status,2,c
  5457   002DB2  EFDD  F016         	goto	u4131
  5458   002DB6  EFDF  F016         	goto	u4130
  5459   002DBA                     u4131:
  5460   002DBA  EFEB  F016         	goto	l617
  5461   002DBE                     u4130:
  5462   002DBE                     
  5463                           ; BSR set to: 0
  5464                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5465   002DBE  0EF5               	movlw	low _motorL
  5466   002DC0  6E21               	movwf	LightBlue_L135@mL^0,c
  5467   002DC2  0E00               	movlw	high _motorL
  5468   002DC4  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5469   002DC6  0E8C               	movlw	low _motorR
  5470   002DC8  6E23               	movwf	LightBlue_L135@mR^0,c
  5471   002DCA  0E01               	movlw	high _motorR
  5472   002DCC  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5473   002DCE  EC2D  F01E         	call	_LightBlue_L135	;wreg free
  5474   002DD2  EFEB  F016         	goto	l4385
  5475   002DD6                     l617:
  5476   002DD6                     l4385:
  5477                           
  5478                           ;colorfunctions.c: 135:     if (cf->colourindex == 7)
  5479   002DD6  0100               	movlb	0	; () banked
  5480   002DD8  EE20 F014          	lfsr	2,20
  5481   002DDC  5185               	movf	Colour2Action@cf& (0+255),w,b
  5482   002DDE  26D9               	addwf	fsr2l,f,c
  5483   002DE0  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5484   002DE2  22DA               	addwfc	fsr2h,f,c
  5485   002DE4  0E07               	movlw	7
  5486   002DE6  18DE               	xorwf	postinc2,w,c
  5487   002DE8  10DE               	iorwf	postinc2,w,c
  5488   002DEA  A4D8               	btfss	status,2,c
  5489   002DEC  EFFA  F016         	goto	u4141
  5490   002DF0  EFFC  F016         	goto	u4140
  5491   002DF4                     u4141:
  5492   002DF4  EF12  F017         	goto	l624
  5493   002DF8                     u4140:
  5494   002DF8                     
  5495                           ; BSR set to: 0
  5496                           ;colorfunctions.c: 136:     {;colorfunctions.c: 137:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5497   002DF8  0EF5               	movlw	low _motorL
  5498   002DFA  6F75               	movwf	White@mL& (0+255),b
  5499   002DFC  0E00               	movlw	high _motorL
  5500   002DFE  6F76               	movwf	(White@mL+1)& (0+255),b
  5501   002E00  0E8C               	movlw	low _motorR
  5502   002E02  6F77               	movwf	White@mR& (0+255),b
  5503   002E04  0E01               	movlw	high _motorR
  5504   002E06  6F78               	movwf	(White@mR+1)& (0+255),b
  5505   002E08  C0F2  F079         	movff	_movementCount,White@movementCount	;volatile
  5506   002E0C  C0F3  F07A         	movff	_movementCount+1,White@movementCount+1	;volatile
  5507   002E10  0E4E               	movlw	low _movementMemory
  5508   002E12  6F7B               	movwf	White@movementMemory& (0+255),b
  5509   002E14  0E01               	movlw	high _movementMemory
  5510   002E16  6F7C               	movwf	(White@movementMemory+1)& (0+255),b
  5511   002E18  0E26               	movlw	low _timerMemory
  5512   002E1A  6F7D               	movwf	White@timerMemory& (0+255),b
  5513   002E1C  0E01               	movlw	high _timerMemory
  5514   002E1E  6F7E               	movwf	(White@timerMemory+1)& (0+255),b
  5515   002E20  EC79  F013         	call	_White	;wreg free
  5516   002E24                     l624:
  5517   002E24  0012               	return		;funcret
  5518   002E26                     __end_of_Colour2Action:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _White *****************
  5522 ;; Defined at:
  5523 ;;		line 341 in file "dc_motor.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  mL              2   21[BANK0 ] PTR struct DC_motor
  5526 ;;		 -> motorL(9), 
  5527 ;;  mR              2   23[BANK0 ] PTR struct DC_motor
  5528 ;;		 -> motorR(9), 
  5529 ;;  movementCoun    2   25[BANK0 ] unsigned int 
  5530 ;;  movementMemo    2   27[BANK0 ] PTR volatile unsigned in
  5531 ;;		 -> movementMemory(40), 
  5532 ;;  timerMemory     2   29[BANK0 ] PTR volatile unsigned in
  5533 ;;		 -> timerMemory(40), 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  tempTimer       2   33[BANK0 ] unsigned int 
  5536 ;;  i               2   35[BANK0 ] int 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5546 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;Total ram usage:       16 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 7
  5553 ;; This function calls:
  5554 ;;		_Blue_T180
  5555 ;;		_Green_L90
  5556 ;;		_LightBlue_L135
  5557 ;;		_Orange_R135
  5558 ;;		_Pink_rev1_L90
  5559 ;;		_Red_R90
  5560 ;;		_TimerReset
  5561 ;;		_Yellow_rev1_R90
  5562 ;;		_fullSpeedAhead
  5563 ;;		_getTimerValue
  5564 ;;		_reverseHalfSquare
  5565 ;;		_rotate180left
  5566 ;;		_stop
  5567 ;; This function is called by:
  5568 ;;		_Colour2Action
  5569 ;;		_maxTimeReturn
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text28
  5574   0026F2                     __ptext28:
  5575                           	callstack 0
  5576   0026F2                     _White:
  5577                           	callstack 22
  5578   0026F2                     
  5579                           ;dc_motor.c: 341: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile unsigned int *timerMemory);dc_
      +                          motor.c: 342: {;dc_motor.c: 343:     LATDbits.LATD4 = 1;;
  5580   0026F2  887C               	bsf	124,4,c	;volatile
  5581                           
  5582                           ;dc_motor.c: 345:     while (!retracingDone){
  5583   0026F4  EFF3  F014         	goto	l3993
  5584   0026F8                     l3927:
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;dc_motor.c: 346:         reverseHalfSquare(mL,mR);
  5588   0026F8  C075  F01B         	movff	White@mL,reverseHalfSquare@mL
  5589   0026FC  C076  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5590   002700  C077  F01D         	movff	White@mR,reverseHalfSquare@mR
  5591   002704  C078  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5592   002708  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  5593                           
  5594                           ;dc_motor.c: 347:         rotate180left(mL,mR);
  5595   00270C  C075  F020         	movff	White@mL,rotate180left@mL
  5596   002710  C076  F021         	movff	White@mL+1,rotate180left@mL+1
  5597   002714  C077  F022         	movff	White@mR,rotate180left@mR
  5598   002718  C078  F023         	movff	White@mR+1,rotate180left@mR+1
  5599   00271C  ECEA  F021         	call	_rotate180left	;wreg free
  5600   002720                     
  5601                           ;dc_motor.c: 348:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5602   002720  0E29               	movlw	41
  5603   002722  0100               	movlb	0	; () banked
  5604   002724  6F80               	movwf	(??_White+1)& (0+255),b
  5605   002726  0E96               	movlw	150
  5606   002728  6F7F               	movwf	??_White& (0+255),b
  5607   00272A  0E7F               	movlw	127
  5608   00272C                     u4257:
  5609   00272C  2EE8               	decfsz	wreg,f,c
  5610   00272E  D7FE               	bra	u4257
  5611   002730  2F7F               	decfsz	??_White& (0+255),f,b
  5612   002732  D7FC               	bra	u4257
  5613   002734  2F80               	decfsz	(??_White+1)& (0+255),f,b
  5614   002736  D7FA               	bra	u4257
  5615   002738                     
  5616                           ;dc_motor.c: 349:         ForwardFlag = 0;
  5617   002738  0E00               	movlw	0
  5618   00273A  0100               	movlb	0	; () banked
  5619   00273C  6FFE               	movwf	_ForwardFlag& (0+255),b	;volatile
  5620   00273E                     
  5621                           ; BSR set to: 0
  5622                           ;dc_motor.c: 350:         retracingDone = 1;
  5623   00273E  0E00               	movlw	0
  5624   002740  6FF1               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5625   002742  0E01               	movlw	1
  5626   002744  6FF0               	movwf	_retracingDone& (0+255),b	;volatile
  5627   002746                     
  5628                           ; BSR set to: 0
  5629                           ;dc_motor.c: 352:         for (int i=movementCount; i>=0;i--){
  5630   002746  C079  F083         	movff	White@movementCount,White@i
  5631   00274A  C07A  F084         	movff	White@movementCount+1,White@i+1
  5632   00274E                     l3937:
  5633                           
  5634                           ; BSR set to: 0
  5635   00274E  BF84               	btfsc	(White@i+1)& (0+255),7,b
  5636   002750  EFAE  F013         	goto	u3560
  5637   002754  EFAC  F013         	goto	u3561
  5638   002758                     u3561:
  5639   002758  EFB0  F013         	goto	l321
  5640   00275C                     u3560:
  5641   00275C  EFF3  F014         	goto	l3993
  5642   002760                     l321:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;dc_motor.c: 353:             LATDbits.LATD4 = 1;;
  5646   002760  887C               	bsf	124,4,c	;volatile
  5647   002762                     
  5648                           ; BSR set to: 0
  5649                           ;dc_motor.c: 354:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5650   002762  0E11               	movlw	17
  5651   002764  0100               	movlb	0	; () banked
  5652   002766  6F80               	movwf	(??_White+1)& (0+255),b
  5653   002768  0E3C               	movlw	60
  5654   00276A  6F7F               	movwf	??_White& (0+255),b
  5655   00276C  0ECB               	movlw	203
  5656   00276E                     u4267:
  5657   00276E  2EE8               	decfsz	wreg,f,c
  5658   002770  D7FE               	bra	u4267
  5659   002772  2F7F               	decfsz	??_White& (0+255),f,b
  5660   002774  D7FC               	bra	u4267
  5661   002776  2F80               	decfsz	(??_White+1)& (0+255),f,b
  5662   002778  D7FA               	bra	u4267
  5663   00277A                     
  5664                           ;dc_motor.c: 355:             if (movementMemory[i]==0){
  5665   00277A  90D8               	bcf	status,0,c
  5666   00277C  0100               	movlb	0	; () banked
  5667   00277E  3583               	rlcf	White@i& (0+255),w,b
  5668   002780  6ED9               	movwf	fsr2l,c
  5669   002782  3584               	rlcf	(White@i+1)& (0+255),w,b
  5670   002784  6EDA               	movwf	fsr2h,c
  5671   002786  517B               	movf	White@movementMemory& (0+255),w,b
  5672   002788  26D9               	addwf	fsr2l,f,c
  5673   00278A  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5674   00278C  22DA               	addwfc	fsr2h,f,c
  5675   00278E  50DE               	movf	postinc2,w,c
  5676   002790  10DE               	iorwf	postinc2,w,c
  5677   002792  A4D8               	btfss	status,2,c
  5678   002794  EFCE  F013         	goto	u3571
  5679   002798  EFD0  F013         	goto	u3570
  5680   00279C                     u3571:
  5681   00279C  EFDC  F013         	goto	l3947
  5682   0027A0                     u3570:
  5683   0027A0                     
  5684                           ; BSR set to: 0
  5685                           ;dc_motor.c: 356:                 Red_R90(mL,mR);}
  5686   0027A0  C075  F021         	movff	White@mL,Red_R90@mL
  5687   0027A4  C076  F022         	movff	White@mL+1,Red_R90@mL+1
  5688   0027A8  C077  F023         	movff	White@mR,Red_R90@mR
  5689   0027AC  C078  F024         	movff	White@mR+1,Red_R90@mR+1
  5690   0027B0  ECA9  F020         	call	_Red_R90	;wreg free
  5691   0027B4  EFB4  F014         	goto	l3975
  5692   0027B8                     l3947:
  5693                           
  5694                           ; BSR set to: 0
  5695   0027B8  90D8               	bcf	status,0,c
  5696   0027BA  3583               	rlcf	White@i& (0+255),w,b
  5697   0027BC  6ED9               	movwf	fsr2l,c
  5698   0027BE  3584               	rlcf	(White@i+1)& (0+255),w,b
  5699   0027C0  6EDA               	movwf	fsr2h,c
  5700   0027C2  517B               	movf	White@movementMemory& (0+255),w,b
  5701   0027C4  26D9               	addwf	fsr2l,f,c
  5702   0027C6  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5703   0027C8  22DA               	addwfc	fsr2h,f,c
  5704   0027CA  04DE               	decf	postinc2,w,c
  5705   0027CC  10DE               	iorwf	postinc2,w,c
  5706   0027CE  A4D8               	btfss	status,2,c
  5707   0027D0  EFEC  F013         	goto	u3581
  5708   0027D4  EFEE  F013         	goto	u3580
  5709   0027D8                     u3581:
  5710   0027D8  EFFA  F013         	goto	l3951
  5711   0027DC                     u3580:
  5712   0027DC                     
  5713                           ; BSR set to: 0
  5714                           ;dc_motor.c: 358:                 Green_L90(mL,mR);}
  5715   0027DC  C075  F021         	movff	White@mL,Green_L90@mL
  5716   0027E0  C076  F022         	movff	White@mL+1,Green_L90@mL+1
  5717   0027E4  C077  F023         	movff	White@mR,Green_L90@mR
  5718   0027E8  C078  F024         	movff	White@mR+1,Green_L90@mR+1
  5719   0027EC  ECE7  F020         	call	_Green_L90	;wreg free
  5720   0027F0  EFB4  F014         	goto	l3975
  5721   0027F4                     l3951:
  5722                           
  5723                           ; BSR set to: 0
  5724   0027F4  90D8               	bcf	status,0,c
  5725   0027F6  3583               	rlcf	White@i& (0+255),w,b
  5726   0027F8  6ED9               	movwf	fsr2l,c
  5727   0027FA  3584               	rlcf	(White@i+1)& (0+255),w,b
  5728   0027FC  6EDA               	movwf	fsr2h,c
  5729   0027FE  517B               	movf	White@movementMemory& (0+255),w,b
  5730   002800  26D9               	addwf	fsr2l,f,c
  5731   002802  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5732   002804  22DA               	addwfc	fsr2h,f,c
  5733   002806  0E02               	movlw	2
  5734   002808  18DE               	xorwf	postinc2,w,c
  5735   00280A  10DE               	iorwf	postinc2,w,c
  5736   00280C  A4D8               	btfss	status,2,c
  5737   00280E  EF0B  F014         	goto	u3591
  5738   002812  EF0D  F014         	goto	u3590
  5739   002816                     u3591:
  5740   002816  EF19  F014         	goto	l3955
  5741   00281A                     u3590:
  5742   00281A                     
  5743                           ; BSR set to: 0
  5744                           ;dc_motor.c: 360:                 Blue_T180(mL,mR);}
  5745   00281A  C075  F024         	movff	White@mL,Blue_T180@mL
  5746   00281E  C076  F025         	movff	White@mL+1,Blue_T180@mL+1
  5747   002822  C077  F026         	movff	White@mR,Blue_T180@mR
  5748   002826  C078  F027         	movff	White@mR+1,Blue_T180@mR+1
  5749   00282A  ECC0  F021         	call	_Blue_T180	;wreg free
  5750   00282E  EFB4  F014         	goto	l3975
  5751   002832                     l3955:
  5752                           
  5753                           ; BSR set to: 0
  5754   002832  90D8               	bcf	status,0,c
  5755   002834  3583               	rlcf	White@i& (0+255),w,b
  5756   002836  6ED9               	movwf	fsr2l,c
  5757   002838  3584               	rlcf	(White@i+1)& (0+255),w,b
  5758   00283A  6EDA               	movwf	fsr2h,c
  5759   00283C  517B               	movf	White@movementMemory& (0+255),w,b
  5760   00283E  26D9               	addwf	fsr2l,f,c
  5761   002840  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5762   002842  22DA               	addwfc	fsr2h,f,c
  5763   002844  0E03               	movlw	3
  5764   002846  18DE               	xorwf	postinc2,w,c
  5765   002848  10DE               	iorwf	postinc2,w,c
  5766   00284A  A4D8               	btfss	status,2,c
  5767   00284C  EF2A  F014         	goto	u3601
  5768   002850  EF2C  F014         	goto	u3600
  5769   002854                     u3601:
  5770   002854  EF38  F014         	goto	l3959
  5771   002858                     u3600:
  5772   002858                     
  5773                           ; BSR set to: 0
  5774                           ;dc_motor.c: 362:                 Yellow_rev1_R90(mL,mR);}
  5775   002858  C075  F021         	movff	White@mL,Yellow_rev1_R90@mL
  5776   00285C  C076  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  5777   002860  C077  F023         	movff	White@mR,Yellow_rev1_R90@mR
  5778   002864  C078  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  5779   002868  EC77  F01B         	call	_Yellow_rev1_R90	;wreg free
  5780   00286C  EFB4  F014         	goto	l3975
  5781   002870                     l3959:
  5782                           
  5783                           ; BSR set to: 0
  5784   002870  90D8               	bcf	status,0,c
  5785   002872  3583               	rlcf	White@i& (0+255),w,b
  5786   002874  6ED9               	movwf	fsr2l,c
  5787   002876  3584               	rlcf	(White@i+1)& (0+255),w,b
  5788   002878  6EDA               	movwf	fsr2h,c
  5789   00287A  517B               	movf	White@movementMemory& (0+255),w,b
  5790   00287C  26D9               	addwf	fsr2l,f,c
  5791   00287E  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5792   002880  22DA               	addwfc	fsr2h,f,c
  5793   002882  0E04               	movlw	4
  5794   002884  18DE               	xorwf	postinc2,w,c
  5795   002886  10DE               	iorwf	postinc2,w,c
  5796   002888  A4D8               	btfss	status,2,c
  5797   00288A  EF49  F014         	goto	u3611
  5798   00288E  EF4B  F014         	goto	u3610
  5799   002892                     u3611:
  5800   002892  EF57  F014         	goto	l3963
  5801   002896                     u3610:
  5802   002896                     
  5803                           ; BSR set to: 0
  5804                           ;dc_motor.c: 364:                 Pink_rev1_L90(mL,mR);}
  5805   002896  C075  F021         	movff	White@mL,Pink_rev1_L90@mL
  5806   00289A  C076  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  5807   00289E  C077  F023         	movff	White@mR,Pink_rev1_L90@mR
  5808   0028A2  C078  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  5809   0028A6  ECEB  F01B         	call	_Pink_rev1_L90	;wreg free
  5810   0028AA  EFB4  F014         	goto	l3975
  5811   0028AE                     l3963:
  5812                           
  5813                           ; BSR set to: 0
  5814   0028AE  90D8               	bcf	status,0,c
  5815   0028B0  3583               	rlcf	White@i& (0+255),w,b
  5816   0028B2  6ED9               	movwf	fsr2l,c
  5817   0028B4  3584               	rlcf	(White@i+1)& (0+255),w,b
  5818   0028B6  6EDA               	movwf	fsr2h,c
  5819   0028B8  517B               	movf	White@movementMemory& (0+255),w,b
  5820   0028BA  26D9               	addwf	fsr2l,f,c
  5821   0028BC  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5822   0028BE  22DA               	addwfc	fsr2h,f,c
  5823   0028C0  0E05               	movlw	5
  5824   0028C2  18DE               	xorwf	postinc2,w,c
  5825   0028C4  10DE               	iorwf	postinc2,w,c
  5826   0028C6  A4D8               	btfss	status,2,c
  5827   0028C8  EF68  F014         	goto	u3621
  5828   0028CC  EF6A  F014         	goto	u3620
  5829   0028D0                     u3621:
  5830   0028D0  EF76  F014         	goto	l3967
  5831   0028D4                     u3620:
  5832   0028D4                     
  5833                           ; BSR set to: 0
  5834                           ;dc_motor.c: 366:                 Orange_R135(mL,mR);}
  5835   0028D4  C075  F021         	movff	White@mL,Orange_R135@mL
  5836   0028D8  C076  F022         	movff	White@mL+1,Orange_R135@mL+1
  5837   0028DC  C077  F023         	movff	White@mR,Orange_R135@mR
  5838   0028E0  C078  F024         	movff	White@mR+1,Orange_R135@mR+1
  5839   0028E4  ECDB  F01D         	call	_Orange_R135	;wreg free
  5840   0028E8  EFB4  F014         	goto	l3975
  5841   0028EC                     l3967:
  5842                           
  5843                           ; BSR set to: 0
  5844   0028EC  90D8               	bcf	status,0,c
  5845   0028EE  3583               	rlcf	White@i& (0+255),w,b
  5846   0028F0  6ED9               	movwf	fsr2l,c
  5847   0028F2  3584               	rlcf	(White@i+1)& (0+255),w,b
  5848   0028F4  6EDA               	movwf	fsr2h,c
  5849   0028F6  517B               	movf	White@movementMemory& (0+255),w,b
  5850   0028F8  26D9               	addwf	fsr2l,f,c
  5851   0028FA  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5852   0028FC  22DA               	addwfc	fsr2h,f,c
  5853   0028FE  0E06               	movlw	6
  5854   002900  18DE               	xorwf	postinc2,w,c
  5855   002902  10DE               	iorwf	postinc2,w,c
  5856   002904  A4D8               	btfss	status,2,c
  5857   002906  EF87  F014         	goto	u3631
  5858   00290A  EF89  F014         	goto	u3630
  5859   00290E                     u3631:
  5860   00290E  EF95  F014         	goto	l3971
  5861   002912                     u3630:
  5862   002912                     
  5863                           ; BSR set to: 0
  5864                           ;dc_motor.c: 368:                 LightBlue_L135(mL,mR);}
  5865   002912  C075  F021         	movff	White@mL,LightBlue_L135@mL
  5866   002916  C076  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  5867   00291A  C077  F023         	movff	White@mR,LightBlue_L135@mR
  5868   00291E  C078  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  5869   002922  EC2D  F01E         	call	_LightBlue_L135	;wreg free
  5870   002926  EFB4  F014         	goto	l3975
  5871   00292A                     l3971:
  5872                           
  5873                           ; BSR set to: 0
  5874   00292A  90D8               	bcf	status,0,c
  5875   00292C  3583               	rlcf	White@i& (0+255),w,b
  5876   00292E  6ED9               	movwf	fsr2l,c
  5877   002930  3584               	rlcf	(White@i+1)& (0+255),w,b
  5878   002932  6EDA               	movwf	fsr2h,c
  5879   002934  517B               	movf	White@movementMemory& (0+255),w,b
  5880   002936  26D9               	addwf	fsr2l,f,c
  5881   002938  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5882   00293A  22DA               	addwfc	fsr2h,f,c
  5883   00293C  0E07               	movlw	7
  5884   00293E  18DE               	xorwf	postinc2,w,c
  5885   002940  10DE               	iorwf	postinc2,w,c
  5886   002942  A4D8               	btfss	status,2,c
  5887   002944  EFA6  F014         	goto	u3641
  5888   002948  EFA8  F014         	goto	u3640
  5889   00294C                     u3641:
  5890   00294C  EFB4  F014         	goto	l332
  5891   002950                     u3640:
  5892   002950                     
  5893                           ; BSR set to: 0
  5894                           ;dc_motor.c: 370:                 stop(mL,mR);}
  5895   002950  C075  F014         	movff	White@mL,stop@mL
  5896   002954  C076  F015         	movff	White@mL+1,stop@mL+1
  5897   002958  C077  F016         	movff	White@mR,stop@mR
  5898   00295C  C078  F017         	movff	White@mR+1,stop@mR+1
  5899   002960  EC88  F01D         	call	_stop	;wreg free
  5900   002964  EFB4  F014         	goto	l3975
  5901   002968                     l332:
  5902   002968                     l3975:
  5903                           
  5904                           ;dc_motor.c: 371:             LATDbits.LATD4 = 1;;
  5905   002968  887C               	bsf	124,4,c	;volatile
  5906   00296A                     
  5907                           ;dc_motor.c: 373:             unsigned int tempTimer = 0;
  5908   00296A  0E00               	movlw	0
  5909   00296C  0100               	movlb	0	; () banked
  5910   00296E  6F82               	movwf	(White@tempTimer+1)& (0+255),b
  5911   002970  0E00               	movlw	0
  5912   002972  6F81               	movwf	White@tempTimer& (0+255),b
  5913   002974                     
  5914                           ; BSR set to: 0
  5915                           ;dc_motor.c: 374:             TimerReset();
  5916   002974  ECB6  F024         	call	_TimerReset	;wreg free
  5917   002978                     
  5918                           ;dc_motor.c: 375:             fullSpeedAhead(mL,mR);
  5919   002978  C075  F014         	movff	White@mL,fullSpeedAhead@mL
  5920   00297C  C076  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  5921   002980  C077  F016         	movff	White@mR,fullSpeedAhead@mR
  5922   002984  C078  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  5923   002988  EC29  F020         	call	_fullSpeedAhead	;wreg free
  5924                           
  5925                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5926   00298C  EFCE  F014         	goto	l3985
  5927   002990                     l3983:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;dc_motor.c: 377:             {;dc_motor.c: 378:                 tempTimer = getTimerVal
      +                          ue();
  5931   002990  EC5F  F021         	call	_getTimerValue	;wreg free
  5932   002994  C06F  F081         	movff	?_getTimerValue,White@tempTimer
  5933   002998  C070  F082         	movff	?_getTimerValue+1,White@tempTimer+1
  5934   00299C                     l3985:
  5935                           
  5936                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5937   00299C  90D8               	bcf	status,0,c
  5938   00299E  0100               	movlb	0	; () banked
  5939   0029A0  3583               	rlcf	White@i& (0+255),w,b
  5940   0029A2  6ED9               	movwf	fsr2l,c
  5941   0029A4  3584               	rlcf	(White@i+1)& (0+255),w,b
  5942   0029A6  6EDA               	movwf	fsr2h,c
  5943   0029A8  517D               	movf	White@timerMemory& (0+255),w,b
  5944   0029AA  26D9               	addwf	fsr2l,f,c
  5945   0029AC  517E               	movf	(White@timerMemory+1)& (0+255),w,b
  5946   0029AE  22DA               	addwfc	fsr2h,f,c
  5947   0029B0  50DE               	movf	postinc2,w,c
  5948   0029B2  5D81               	subwf	White@tempTimer& (0+255),w,b
  5949   0029B4  50DE               	movf	postinc2,w,c
  5950   0029B6  5982               	subwfb	(White@tempTimer+1)& (0+255),w,b
  5951   0029B8  A0D8               	btfss	status,0,c
  5952   0029BA  EFE1  F014         	goto	u3651
  5953   0029BE  EFE3  F014         	goto	u3650
  5954   0029C2                     u3651:
  5955   0029C2  EFC8  F014         	goto	l3983
  5956   0029C6                     u3650:
  5957   0029C6                     
  5958                           ; BSR set to: 0
  5959                           ;dc_motor.c: 380:             stop(mL,mR);
  5960   0029C6  C075  F014         	movff	White@mL,stop@mL
  5961   0029CA  C076  F015         	movff	White@mL+1,stop@mL+1
  5962   0029CE  C077  F016         	movff	White@mR,stop@mR
  5963   0029D2  C078  F017         	movff	White@mR+1,stop@mR+1
  5964   0029D6  EC88  F01D         	call	_stop	;wreg free
  5965   0029DA                     
  5966                           ;dc_motor.c: 381:         }
  5967   0029DA  0100               	movlb	0	; () banked
  5968   0029DC  0783               	decf	White@i& (0+255),f,b
  5969   0029DE  A0D8               	btfss	status,0,c
  5970   0029E0  0784               	decf	(White@i+1)& (0+255),f,b
  5971   0029E2  EFA7  F013         	goto	l3937
  5972   0029E6                     l3993:
  5973                           
  5974                           ;dc_motor.c: 345:     while (!retracingDone){
  5975   0029E6  0100               	movlb	0	; () banked
  5976   0029E8  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  5977   0029EA  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  5978   0029EC  B4D8               	btfsc	status,2,c
  5979   0029EE  EFFB  F014         	goto	u3661
  5980   0029F2  EFFD  F014         	goto	u3660
  5981   0029F6                     u3661:
  5982   0029F6  EF7C  F013         	goto	l3927
  5983   0029FA                     u3660:
  5984   0029FA                     
  5985                           ; BSR set to: 0
  5986                           ;dc_motor.c: 383:     stop(mL,mR);
  5987   0029FA  C075  F014         	movff	White@mL,stop@mL
  5988   0029FE  C076  F015         	movff	White@mL+1,stop@mL+1
  5989   002A02  C077  F016         	movff	White@mR,stop@mR
  5990   002A06  C078  F017         	movff	White@mR+1,stop@mR+1
  5991   002A0A  EC88  F01D         	call	_stop	;wreg free
  5992   002A0E                     
  5993                           ;dc_motor.c: 384:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5994   002A0E  0E52               	movlw	82
  5995   002A10  0100               	movlb	0	; () banked
  5996   002A12  6F80               	movwf	(??_White+1)& (0+255),b
  5997   002A14  0E2B               	movlw	43
  5998   002A16  6F7F               	movwf	??_White& (0+255),b
  5999   002A18  0E00               	movlw	0
  6000   002A1A                     u4277:
  6001   002A1A  2EE8               	decfsz	wreg,f,c
  6002   002A1C  D7FE               	bra	u4277
  6003   002A1E  2F7F               	decfsz	??_White& (0+255),f,b
  6004   002A20  D7FC               	bra	u4277
  6005   002A22  2F80               	decfsz	(??_White+1)& (0+255),f,b
  6006   002A24  D7FA               	bra	u4277
  6007   002A26  F000               	nop	
  6008   002A28                     
  6009                           ;dc_motor.c: 385:     LATDbits.LATD4 = 0;;
  6010   002A28  987C               	bcf	124,4,c	;volatile
  6011   002A2A  0012               	return		;funcret
  6012   002A2C                     __end_of_White:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function _getTimerValue *****************
  6016 ;; Defined at:
  6017 ;;		line 28 in file "timer.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  timerCount      2   19[BANK0 ] unsigned int 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  2   15[BANK0 ] unsigned int 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;Total ram usage:        6 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; Hardware stack levels required when called: 2
  6038 ;; This function calls:
  6039 ;;		___flmul
  6040 ;;		___fltol
  6041 ;;		___xxtofl
  6042 ;; This function is called by:
  6043 ;;		_White
  6044 ;;		_memoryUpdateTime
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text29
  6049   0042BE                     __ptext29:
  6050                           	callstack 0
  6051   0042BE                     _getTimerValue:
  6052                           	callstack 27
  6053   0042BE                     
  6054                           ;timer.c: 30:     unsigned int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6055   0042BE  CFD3 F073          	movff	4051,getTimerValue@timerCount	;volatile
  6056   0042C2  0100               	movlb	0	; () banked
  6057   0042C4  6B74               	clrf	(getTimerValue@timerCount+1)& (0+255),b
  6058   0042C6                     
  6059                           ; BSR set to: 0
  6060                           ;timer.c: 34:     timerCount |= (unsigned int)(TMR0H << 8);
  6061   0042C6  50D4               	movf	212,w,c	;volatile
  6062   0042C8  6F72               	movwf	(??_getTimerValue+1)& (0+255),b
  6063   0042CA  6B71               	clrf	??_getTimerValue& (0+255),b
  6064   0042CC  5171               	movf	??_getTimerValue& (0+255),w,b
  6065   0042CE  1373               	iorwf	getTimerValue@timerCount& (0+255),f,b
  6066   0042D0  5172               	movf	(??_getTimerValue+1)& (0+255),w,b
  6067   0042D2  1374               	iorwf	(getTimerValue@timerCount+1)& (0+255),f,b
  6068   0042D4                     
  6069                           ; BSR set to: 0
  6070                           ;timer.c: 35:     return timerCount*1.048576;
  6071   0042D4  0EBD               	movlw	189
  6072   0042D6  6E4F               	movwf	___flmul@a^0,c
  6073   0042D8  0E37               	movlw	55
  6074   0042DA  6E50               	movwf	(___flmul@a+1)^0,c
  6075   0042DC  0E86               	movlw	134
  6076   0042DE  6E51               	movwf	(___flmul@a+2)^0,c
  6077   0042E0  0E3F               	movlw	63
  6078   0042E2  6E52               	movwf	(___flmul@a+3)^0,c
  6079   0042E4  C073  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  6080   0042E8  C074  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  6081   0042EC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  6082   0042EE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  6083   0042F0  0E00               	movlw	0
  6084   0042F2  EC13  F017         	call	___xxtofl
  6085   0042F6  C00C  F04B         	movff	?___xxtofl,___flmul@b
  6086   0042FA  C00D  F04C         	movff	?___xxtofl+1,___flmul@b+1
  6087   0042FE  C00E  F04D         	movff	?___xxtofl+2,___flmul@b+2
  6088   004302  C00F  F04E         	movff	?___xxtofl+3,___flmul@b+3
  6089   004306  EC96  F00F         	call	___flmul	;wreg free
  6090   00430A  C04B  F057         	movff	?___flmul,___fltol@f1
  6091   00430E  C04C  F058         	movff	?___flmul+1,___fltol@f1+1
  6092   004312  C04D  F059         	movff	?___flmul+2,___fltol@f1+2
  6093   004316  C04E  F05A         	movff	?___flmul+3,___fltol@f1+3
  6094   00431A  ECEE  F019         	call	___fltol	;wreg free
  6095   00431E  C057  F06F         	movff	?___fltol,?_getTimerValue
  6096   004322  C058  F070         	movff	?___fltol+1,?_getTimerValue+1
  6097   004326  0012               	return		;funcret
  6098   004328                     __end_of_getTimerValue:
  6099                           	callstack 0
  6100                           
  6101 ;; *************** function ___xxtofl *****************
  6102 ;; Defined at:
  6103 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  sign            1    wreg     unsigned char 
  6106 ;;  val             4   11[COMRAM] long 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  sign            1   19[COMRAM] unsigned char 
  6109 ;;  arg             4   21[COMRAM] unsigned long 
  6110 ;;  exp             1   20[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  4   11[COMRAM] unsigned char 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:       14 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_Left45
  6131 ;;		_Right45
  6132 ;;		_reverseHalfSquare
  6133 ;;		_Yellow_rev1_R90
  6134 ;;		_Pink_rev1_L90
  6135 ;;		_getTimerValue
  6136 ;;		_colour_read_all
  6137 ;;		_RGB2Hue
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text30
  6142   002E26                     __ptext30:
  6143                           	callstack 0
  6144   002E26                     ___xxtofl:
  6145                           	callstack 27
  6146                           
  6147                           ;incstack = 0
  6148                           ;___xxtofl@sign stored from wreg
  6149   002E26  6E14               	movwf	___xxtofl@sign^0,c
  6150   002E28  5014               	movf	___xxtofl@sign^0,w,c
  6151   002E2A  B4D8               	btfsc	status,2,c
  6152   002E2C  EF1A  F017         	goto	u2711
  6153   002E30  EF1C  F017         	goto	u2710
  6154   002E34                     u2711:
  6155   002E34  EF3E  F017         	goto	l1325
  6156   002E38                     u2710:
  6157   002E38  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6158   002E3A  EF23  F017         	goto	u2720
  6159   002E3E  EF21  F017         	goto	u2721
  6160   002E42                     u2721:
  6161   002E42  EF3E  F017         	goto	l1325
  6162   002E46                     u2720:
  6163   002E46  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6164   002E4A  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6165   002E4E  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6166   002E52  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6167   002E56  1E10               	comf	??___xxtofl^0,f,c
  6168   002E58  1E11               	comf	(??___xxtofl+1)^0,f,c
  6169   002E5A  1E12               	comf	(??___xxtofl+2)^0,f,c
  6170   002E5C  1E13               	comf	(??___xxtofl+3)^0,f,c
  6171   002E5E  2A10               	incf	??___xxtofl^0,f,c
  6172   002E60  0E00               	movlw	0
  6173   002E62  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6174   002E64  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6175   002E66  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6176   002E68  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6177   002E6C  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6178   002E70  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6179   002E74  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6180   002E78  EF46  F017         	goto	l3429
  6181   002E7C                     l1325:
  6182   002E7C  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6183   002E80  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6184   002E84  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6185   002E88  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6186   002E8C                     l3429:
  6187   002E8C  500C               	movf	___xxtofl@val^0,w,c
  6188   002E8E  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6189   002E90  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6190   002E92  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6191   002E94  A4D8               	btfss	status,2,c
  6192   002E96  EF4F  F017         	goto	u2731
  6193   002E9A  EF51  F017         	goto	u2730
  6194   002E9E                     u2731:
  6195   002E9E  EF5B  F017         	goto	l3435
  6196   002EA2                     u2730:
  6197   002EA2  0E00               	movlw	0
  6198   002EA4  6E0C               	movwf	?___xxtofl^0,c
  6199   002EA6  0E00               	movlw	0
  6200   002EA8  6E0D               	movwf	(?___xxtofl+1)^0,c
  6201   002EAA  0E00               	movlw	0
  6202   002EAC  6E0E               	movwf	(?___xxtofl+2)^0,c
  6203   002EAE  0E00               	movlw	0
  6204   002EB0  6E0F               	movwf	(?___xxtofl+3)^0,c
  6205   002EB2  EFEC  F017         	goto	l1328
  6206   002EB6                     l3435:
  6207   002EB6  0E96               	movlw	150
  6208   002EB8  6E15               	movwf	___xxtofl@exp^0,c
  6209   002EBA  EF65  F017         	goto	l3439
  6210   002EBE                     l3437:
  6211   002EBE  2A15               	incf	___xxtofl@exp^0,f,c
  6212   002EC0  90D8               	bcf	status,0,c
  6213   002EC2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6214   002EC4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6215   002EC6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6216   002EC8  3216               	rrcf	___xxtofl@arg^0,f,c
  6217   002ECA                     l3439:
  6218   002ECA  0E00               	movlw	0
  6219   002ECC  1416               	andwf	___xxtofl@arg^0,w,c
  6220   002ECE  6E10               	movwf	??___xxtofl^0,c
  6221   002ED0  0E00               	movlw	0
  6222   002ED2  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6223   002ED4  6E11               	movwf	(??___xxtofl+1)^0,c
  6224   002ED6  0E00               	movlw	0
  6225   002ED8  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6226   002EDA  6E12               	movwf	(??___xxtofl+2)^0,c
  6227   002EDC  0EFE               	movlw	254
  6228   002EDE  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6229   002EE0  6E13               	movwf	(??___xxtofl+3)^0,c
  6230   002EE2  5010               	movf	??___xxtofl^0,w,c
  6231   002EE4  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6232   002EE6  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6233   002EE8  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6234   002EEA  A4D8               	btfss	status,2,c
  6235   002EEC  EF7A  F017         	goto	u2741
  6236   002EF0  EF7C  F017         	goto	u2740
  6237   002EF4                     u2741:
  6238   002EF4  EF5F  F017         	goto	l3437
  6239   002EF8                     u2740:
  6240   002EF8  EF8A  F017         	goto	l1332
  6241   002EFC                     l3441:
  6242   002EFC  2A15               	incf	___xxtofl@exp^0,f,c
  6243   002EFE  0E01               	movlw	1
  6244   002F00  2616               	addwf	___xxtofl@arg^0,f,c
  6245   002F02  0E00               	movlw	0
  6246   002F04  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6247   002F06  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6248   002F08  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6249   002F0A  90D8               	bcf	status,0,c
  6250   002F0C  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6251   002F0E  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6252   002F10  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6253   002F12  3216               	rrcf	___xxtofl@arg^0,f,c
  6254   002F14                     l1332:
  6255   002F14  0E00               	movlw	0
  6256   002F16  1416               	andwf	___xxtofl@arg^0,w,c
  6257   002F18  6E10               	movwf	??___xxtofl^0,c
  6258   002F1A  0E00               	movlw	0
  6259   002F1C  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6260   002F1E  6E11               	movwf	(??___xxtofl+1)^0,c
  6261   002F20  0E00               	movlw	0
  6262   002F22  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6263   002F24  6E12               	movwf	(??___xxtofl+2)^0,c
  6264   002F26  0EFF               	movlw	255
  6265   002F28  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6266   002F2A  6E13               	movwf	(??___xxtofl+3)^0,c
  6267   002F2C  5010               	movf	??___xxtofl^0,w,c
  6268   002F2E  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6269   002F30  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6270   002F32  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6271   002F34  A4D8               	btfss	status,2,c
  6272   002F36  EF9F  F017         	goto	u2751
  6273   002F3A  EFA1  F017         	goto	u2750
  6274   002F3E                     u2751:
  6275   002F3E  EF7E  F017         	goto	l3441
  6276   002F42                     u2750:
  6277   002F42  EFA9  F017         	goto	l3449
  6278   002F46                     l3447:
  6279   002F46  0615               	decf	___xxtofl@exp^0,f,c
  6280   002F48  90D8               	bcf	status,0,c
  6281   002F4A  3616               	rlcf	___xxtofl@arg^0,f,c
  6282   002F4C  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6283   002F4E  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6284   002F50  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6285   002F52                     l3449:
  6286   002F52  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6287   002F54  EFAE  F017         	goto	u2761
  6288   002F58  EFB0  F017         	goto	u2760
  6289   002F5C                     u2761:
  6290   002F5C  EFB8  F017         	goto	l1339
  6291   002F60                     u2760:
  6292   002F60  0E02               	movlw	2
  6293   002F62  6015               	cpfslt	___xxtofl@exp^0,c
  6294   002F64  EFB6  F017         	goto	u2771
  6295   002F68  EFB8  F017         	goto	u2770
  6296   002F6C                     u2771:
  6297   002F6C  EFA3  F017         	goto	l3447
  6298   002F70                     u2770:
  6299   002F70                     l1339:
  6300   002F70  B015               	btfsc	___xxtofl@exp^0,0,c
  6301   002F72  EFBD  F017         	goto	u2781
  6302   002F76  EFBF  F017         	goto	u2780
  6303   002F7A                     u2781:
  6304   002F7A  EFC0  F017         	goto	l3455
  6305   002F7E                     u2780:
  6306   002F7E  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6307   002F80                     l3455:
  6308   002F80  90D8               	bcf	status,0,c
  6309   002F82  3215               	rrcf	___xxtofl@exp^0,f,c
  6310   002F84  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6311   002F88  6A11               	clrf	(??___xxtofl+1)^0,c
  6312   002F8A  6A12               	clrf	(??___xxtofl+2)^0,c
  6313   002F8C  6A13               	clrf	(??___xxtofl+3)^0,c
  6314   002F8E  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6315   002F92  6A12               	clrf	(??___xxtofl+2)^0,c
  6316   002F94  6A11               	clrf	(??___xxtofl+1)^0,c
  6317   002F96  6A10               	clrf	??___xxtofl^0,c
  6318   002F98  5010               	movf	??___xxtofl^0,w,c
  6319   002F9A  1216               	iorwf	___xxtofl@arg^0,f,c
  6320   002F9C  5011               	movf	(??___xxtofl+1)^0,w,c
  6321   002F9E  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6322   002FA0  5012               	movf	(??___xxtofl+2)^0,w,c
  6323   002FA2  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6324   002FA4  5013               	movf	(??___xxtofl+3)^0,w,c
  6325   002FA6  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6326   002FA8  5014               	movf	___xxtofl@sign^0,w,c
  6327   002FAA  B4D8               	btfsc	status,2,c
  6328   002FAC  EFDA  F017         	goto	u2791
  6329   002FB0  EFDC  F017         	goto	u2790
  6330   002FB4                     u2791:
  6331   002FB4  EFE4  F017         	goto	l3465
  6332   002FB8                     u2790:
  6333   002FB8  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6334   002FBA  EFE3  F017         	goto	u2800
  6335   002FBE  EFE1  F017         	goto	u2801
  6336   002FC2                     u2801:
  6337   002FC2  EFE4  F017         	goto	l3465
  6338   002FC6                     u2800:
  6339   002FC6  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6340   002FC8                     l3465:
  6341   002FC8  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6342   002FCC  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6343   002FD0  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6344   002FD4  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6345   002FD8                     l1328:
  6346   002FD8  0012               	return		;funcret
  6347   002FDA                     __end_of___xxtofl:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function ___fltol *****************
  6351 ;; Defined at:
  6352 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  f1              4   86[COMRAM] unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  exp1            1   14[BANK0 ] unsigned char 
  6357 ;;  sign1           1   13[BANK0 ] unsigned char 
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  4   86[COMRAM] long 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;Total ram usage:       10 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; Hardware stack levels required when called: 1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_Left45
  6378 ;;		_Right45
  6379 ;;		_reverseHalfSquare
  6380 ;;		_Yellow_rev1_R90
  6381 ;;		_Pink_rev1_L90
  6382 ;;		_getTimerValue
  6383 ;;		_RGB2Hue
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text31
  6388   0033DC                     __ptext31:
  6389                           	callstack 0
  6390   0033DC                     ___fltol:
  6391                           	callstack 27
  6392   0033DC  3459               	rlcf	(___fltol@f1+2)^0,w,c
  6393   0033DE  345A               	rlcf	(___fltol@f1+3)^0,w,c
  6394   0033E0  0100               	movlb	0	; () banked
  6395   0033E2  6F6E               	movwf	___fltol@exp1& (0+255),b
  6396   0033E4  516E               	movf	___fltol@exp1& (0+255),w,b
  6397   0033E6  A4D8               	btfss	status,2,c
  6398   0033E8  EFF8  F019         	goto	u2641
  6399   0033EC  EFFA  F019         	goto	u2640
  6400   0033F0                     u2641:
  6401   0033F0  EF04  F01A         	goto	l3385
  6402   0033F4                     u2640:
  6403   0033F4                     l3381:
  6404                           
  6405                           ; BSR set to: 0
  6406   0033F4  0E00               	movlw	0
  6407   0033F6  6E57               	movwf	?___fltol^0,c
  6408   0033F8  0E00               	movlw	0
  6409   0033FA  6E58               	movwf	(?___fltol+1)^0,c
  6410   0033FC  0E00               	movlw	0
  6411   0033FE  6E59               	movwf	(?___fltol+2)^0,c
  6412   003400  0E00               	movlw	0
  6413   003402  6E5A               	movwf	(?___fltol+3)^0,c
  6414   003404  EF71  F01A         	goto	l967
  6415   003408                     l3385:
  6416                           
  6417                           ; BSR set to: 0
  6418   003408  C057  F05B         	movff	___fltol@f1,??___fltol
  6419   00340C  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  6420   003410  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  6421   003414  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  6422   003418  0E20               	movlw	32
  6423   00341A  EF14  F01A         	goto	u2650
  6424   00341E                     u2655:
  6425   00341E  90D8               	bcf	status,0,c
  6426   003420  325E               	rrcf	(??___fltol+3)^0,f,c
  6427   003422  325D               	rrcf	(??___fltol+2)^0,f,c
  6428   003424  325C               	rrcf	(??___fltol+1)^0,f,c
  6429   003426  325B               	rrcf	??___fltol^0,f,c
  6430   003428                     u2650:
  6431   003428  2EE8               	decfsz	wreg,f,c
  6432   00342A  EF0F  F01A         	goto	u2655
  6433   00342E  505B               	movf	??___fltol^0,w,c
  6434   003430  6F6D               	movwf	___fltol@sign1& (0+255),b
  6435   003432                     
  6436                           ; BSR set to: 0
  6437   003432  8E59               	bsf	(___fltol@f1+2)^0,7,c
  6438   003434                     
  6439                           ; BSR set to: 0
  6440   003434  0EFF               	movlw	255
  6441   003436  1657               	andwf	___fltol@f1^0,f,c
  6442   003438  0EFF               	movlw	255
  6443   00343A  1658               	andwf	(___fltol@f1+1)^0,f,c
  6444   00343C  0EFF               	movlw	255
  6445   00343E  1659               	andwf	(___fltol@f1+2)^0,f,c
  6446   003440  0E00               	movlw	0
  6447   003442  165A               	andwf	(___fltol@f1+3)^0,f,c
  6448   003444                     
  6449                           ; BSR set to: 0
  6450   003444  0E96               	movlw	150
  6451   003446  5F6E               	subwf	___fltol@exp1& (0+255),f,b
  6452   003448                     
  6453                           ; BSR set to: 0
  6454   003448  BF6E               	btfsc	___fltol@exp1& (0+255),7,b
  6455   00344A  EF2B  F01A         	goto	u2660
  6456   00344E  EF29  F01A         	goto	u2661
  6457   003452                     u2661:
  6458   003452  EF41  F01A         	goto	l3405
  6459   003456                     u2660:
  6460   003456                     
  6461                           ; BSR set to: 0
  6462   003456  516E               	movf	___fltol@exp1& (0+255),w,b
  6463   003458  0A80               	xorlw	128
  6464   00345A  0F97               	addlw	151
  6465   00345C  B0D8               	btfsc	status,0,c
  6466   00345E  EF33  F01A         	goto	u2671
  6467   003462  EF35  F01A         	goto	u2670
  6468   003466                     u2671:
  6469   003466  EF37  F01A         	goto	l3401
  6470   00346A                     u2670:
  6471   00346A  EFFA  F019         	goto	l3381
  6472   00346E                     l3401:
  6473                           
  6474                           ; BSR set to: 0
  6475   00346E  90D8               	bcf	status,0,c
  6476   003470  325A               	rrcf	(___fltol@f1+3)^0,f,c
  6477   003472  3259               	rrcf	(___fltol@f1+2)^0,f,c
  6478   003474  3258               	rrcf	(___fltol@f1+1)^0,f,c
  6479   003476  3257               	rrcf	___fltol@f1^0,f,c
  6480   003478                     
  6481                           ; BSR set to: 0
  6482   003478  3F6E               	incfsz	___fltol@exp1& (0+255),f,b
  6483   00347A  EF37  F01A         	goto	l3401
  6484   00347E  EF59  F01A         	goto	l3415
  6485   003482                     l3405:
  6486                           
  6487                           ; BSR set to: 0
  6488   003482  0E1F               	movlw	31
  6489   003484  656E               	cpfsgt	___fltol@exp1& (0+255),b
  6490   003486  EF47  F01A         	goto	u2681
  6491   00348A  EF49  F01A         	goto	u2680
  6492   00348E                     u2681:
  6493   00348E  EF51  F01A         	goto	l3413
  6494   003492                     u2680:
  6495   003492  EFFA  F019         	goto	l3381
  6496   003496                     l3411:
  6497                           
  6498                           ; BSR set to: 0
  6499   003496  90D8               	bcf	status,0,c
  6500   003498  3657               	rlcf	___fltol@f1^0,f,c
  6501   00349A  3658               	rlcf	(___fltol@f1+1)^0,f,c
  6502   00349C  3659               	rlcf	(___fltol@f1+2)^0,f,c
  6503   00349E  365A               	rlcf	(___fltol@f1+3)^0,f,c
  6504   0034A0  076E               	decf	___fltol@exp1& (0+255),f,b
  6505   0034A2                     l3413:
  6506                           
  6507                           ; BSR set to: 0
  6508   0034A2  516E               	movf	___fltol@exp1& (0+255),w,b
  6509   0034A4  A4D8               	btfss	status,2,c
  6510   0034A6  EF57  F01A         	goto	u2691
  6511   0034AA  EF59  F01A         	goto	u2690
  6512   0034AE                     u2691:
  6513   0034AE  EF4B  F01A         	goto	l3411
  6514   0034B2                     u2690:
  6515   0034B2                     l3415:
  6516                           
  6517                           ; BSR set to: 0
  6518   0034B2  516D               	movf	___fltol@sign1& (0+255),w,b
  6519   0034B4  B4D8               	btfsc	status,2,c
  6520   0034B6  EF5F  F01A         	goto	u2701
  6521   0034BA  EF61  F01A         	goto	u2700
  6522   0034BE                     u2701:
  6523   0034BE  EF69  F01A         	goto	l3419
  6524   0034C2                     u2700:
  6525   0034C2                     
  6526                           ; BSR set to: 0
  6527   0034C2  1E5A               	comf	(___fltol@f1+3)^0,f,c
  6528   0034C4  1E59               	comf	(___fltol@f1+2)^0,f,c
  6529   0034C6  1E58               	comf	(___fltol@f1+1)^0,f,c
  6530   0034C8  6C57               	negf	___fltol@f1^0,c
  6531   0034CA  0E00               	movlw	0
  6532   0034CC  2258               	addwfc	(___fltol@f1+1)^0,f,c
  6533   0034CE  2259               	addwfc	(___fltol@f1+2)^0,f,c
  6534   0034D0  225A               	addwfc	(___fltol@f1+3)^0,f,c
  6535   0034D2                     l3419:
  6536                           
  6537                           ; BSR set to: 0
  6538   0034D2  C057  F057         	movff	___fltol@f1,?___fltol
  6539   0034D6  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  6540   0034DA  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  6541   0034DE  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  6542   0034E2                     l967:
  6543                           
  6544                           ; BSR set to: 0
  6545   0034E2  0012               	return		;funcret
  6546   0034E4                     __end_of___fltol:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function ___flmul *****************
  6550 ;; Defined at:
  6551 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  b               4   74[COMRAM] long 
  6554 ;;  a               4   78[COMRAM] long 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  prod            4    7[BANK0 ] struct .
  6557 ;;  grs             4    1[BANK0 ] unsigned long 
  6558 ;;  temp            2   11[BANK0 ] struct .
  6559 ;;  bexp            1    6[BANK0 ] unsigned char 
  6560 ;;  aexp            1    5[BANK0 ] unsigned char 
  6561 ;;  sign            1    0[BANK0 ] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  4   74[COMRAM] unsigned char 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, prodl, prodh
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6571 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;Total ram usage:       25 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_Left45
  6582 ;;		_Right45
  6583 ;;		_reverseHalfSquare
  6584 ;;		_Yellow_rev1_R90
  6585 ;;		_Pink_rev1_L90
  6586 ;;		_getTimerValue
  6587 ;;		_RGB2Hue
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text32
  6592   001F2C                     __ptext32:
  6593                           	callstack 0
  6594   001F2C                     ___flmul:
  6595                           	callstack 27
  6596   001F2C  504E               	movf	(___flmul@b+3)^0,w,c
  6597   001F2E  0B80               	andlw	128
  6598   001F30  0100               	movlb	0	; () banked
  6599   001F32  6F60               	movwf	___flmul@sign& (0+255),b
  6600   001F34  504E               	movf	(___flmul@b+3)^0,w,c
  6601   001F36  244E               	addwf	(___flmul@b+3)^0,w,c
  6602   001F38  6F66               	movwf	___flmul@bexp& (0+255),b
  6603   001F3A                     
  6604                           ; BSR set to: 0
  6605   001F3A  AE4D               	btfss	(___flmul@b+2)^0,7,c
  6606   001F3C  EFA2  F00F         	goto	u2451
  6607   001F40  EFA4  F00F         	goto	u2450
  6608   001F44                     u2451:
  6609   001F44  EFA5  F00F         	goto	l3255
  6610   001F48                     u2450:
  6611   001F48                     
  6612                           ; BSR set to: 0
  6613   001F48  8166               	bsf	___flmul@bexp& (0+255),0,b
  6614   001F4A                     l3255:
  6615                           
  6616                           ; BSR set to: 0
  6617   001F4A  5166               	movf	___flmul@bexp& (0+255),w,b
  6618   001F4C  B4D8               	btfsc	status,2,c
  6619   001F4E  EFAB  F00F         	goto	u2461
  6620   001F52  EFAD  F00F         	goto	u2460
  6621   001F56                     u2461:
  6622   001F56  EFC0  F00F         	goto	l3263
  6623   001F5A                     u2460:
  6624   001F5A                     
  6625                           ; BSR set to: 0
  6626   001F5A  2966               	incf	___flmul@bexp& (0+255),w,b
  6627   001F5C  A4D8               	btfss	status,2,c
  6628   001F5E  EFB3  F00F         	goto	u2471
  6629   001F62  EFB5  F00F         	goto	u2470
  6630   001F66                     u2471:
  6631   001F66  EFBD  F00F         	goto	l3261
  6632   001F6A                     u2470:
  6633   001F6A                     
  6634                           ; BSR set to: 0
  6635   001F6A  0E00               	movlw	0
  6636   001F6C  6E4B               	movwf	___flmul@b^0,c
  6637   001F6E  0E00               	movlw	0
  6638   001F70  6E4C               	movwf	(___flmul@b+1)^0,c
  6639   001F72  0E00               	movlw	0
  6640   001F74  6E4D               	movwf	(___flmul@b+2)^0,c
  6641   001F76  0E00               	movlw	0
  6642   001F78  6E4E               	movwf	(___flmul@b+3)^0,c
  6643   001F7A                     l3261:
  6644                           
  6645                           ; BSR set to: 0
  6646   001F7A  8E4D               	bsf	(___flmul@b+2)^0,7,c
  6647   001F7C  EFC8  F00F         	goto	l3265
  6648   001F80                     l3263:
  6649                           
  6650                           ; BSR set to: 0
  6651   001F80  0E00               	movlw	0
  6652   001F82  6E4B               	movwf	___flmul@b^0,c
  6653   001F84  0E00               	movlw	0
  6654   001F86  6E4C               	movwf	(___flmul@b+1)^0,c
  6655   001F88  0E00               	movlw	0
  6656   001F8A  6E4D               	movwf	(___flmul@b+2)^0,c
  6657   001F8C  0E00               	movlw	0
  6658   001F8E  6E4E               	movwf	(___flmul@b+3)^0,c
  6659   001F90                     l3265:
  6660                           
  6661                           ; BSR set to: 0
  6662   001F90  5052               	movf	(___flmul@a+3)^0,w,c
  6663   001F92  0B80               	andlw	128
  6664   001F94  1B60               	xorwf	___flmul@sign& (0+255),f,b
  6665   001F96                     
  6666                           ; BSR set to: 0
  6667   001F96  5052               	movf	(___flmul@a+3)^0,w,c
  6668   001F98  2452               	addwf	(___flmul@a+3)^0,w,c
  6669   001F9A  6F65               	movwf	___flmul@aexp& (0+255),b
  6670   001F9C                     
  6671                           ; BSR set to: 0
  6672   001F9C  AE51               	btfss	(___flmul@a+2)^0,7,c
  6673   001F9E  EFD3  F00F         	goto	u2481
  6674   001FA2  EFD5  F00F         	goto	u2480
  6675   001FA6                     u2481:
  6676   001FA6  EFD6  F00F         	goto	l3273
  6677   001FAA                     u2480:
  6678   001FAA                     
  6679                           ; BSR set to: 0
  6680   001FAA  8165               	bsf	___flmul@aexp& (0+255),0,b
  6681   001FAC                     l3273:
  6682                           
  6683                           ; BSR set to: 0
  6684   001FAC  5165               	movf	___flmul@aexp& (0+255),w,b
  6685   001FAE  B4D8               	btfsc	status,2,c
  6686   001FB0  EFDC  F00F         	goto	u2491
  6687   001FB4  EFDE  F00F         	goto	u2490
  6688   001FB8                     u2491:
  6689   001FB8  EFF1  F00F         	goto	l3281
  6690   001FBC                     u2490:
  6691   001FBC                     
  6692                           ; BSR set to: 0
  6693   001FBC  2965               	incf	___flmul@aexp& (0+255),w,b
  6694   001FBE  A4D8               	btfss	status,2,c
  6695   001FC0  EFE4  F00F         	goto	u2501
  6696   001FC4  EFE6  F00F         	goto	u2500
  6697   001FC8                     u2501:
  6698   001FC8  EFEE  F00F         	goto	l3279
  6699   001FCC                     u2500:
  6700   001FCC                     
  6701                           ; BSR set to: 0
  6702   001FCC  0E00               	movlw	0
  6703   001FCE  6E4F               	movwf	___flmul@a^0,c
  6704   001FD0  0E00               	movlw	0
  6705   001FD2  6E50               	movwf	(___flmul@a+1)^0,c
  6706   001FD4  0E00               	movlw	0
  6707   001FD6  6E51               	movwf	(___flmul@a+2)^0,c
  6708   001FD8  0E00               	movlw	0
  6709   001FDA  6E52               	movwf	(___flmul@a+3)^0,c
  6710   001FDC                     l3279:
  6711                           
  6712                           ; BSR set to: 0
  6713   001FDC  8E51               	bsf	(___flmul@a+2)^0,7,c
  6714   001FDE  EFF9  F00F         	goto	l1284
  6715   001FE2                     l3281:
  6716                           
  6717                           ; BSR set to: 0
  6718   001FE2  0E00               	movlw	0
  6719   001FE4  6E4F               	movwf	___flmul@a^0,c
  6720   001FE6  0E00               	movlw	0
  6721   001FE8  6E50               	movwf	(___flmul@a+1)^0,c
  6722   001FEA  0E00               	movlw	0
  6723   001FEC  6E51               	movwf	(___flmul@a+2)^0,c
  6724   001FEE  0E00               	movlw	0
  6725   001FF0  6E52               	movwf	(___flmul@a+3)^0,c
  6726   001FF2                     l1284:
  6727                           
  6728                           ; BSR set to: 0
  6729   001FF2  5165               	movf	___flmul@aexp& (0+255),w,b
  6730   001FF4  B4D8               	btfsc	status,2,c
  6731   001FF6  EFFF  F00F         	goto	u2511
  6732   001FFA  EF01  F010         	goto	u2510
  6733   001FFE                     u2511:
  6734   001FFE  EF09  F010         	goto	l3285
  6735   002002                     u2510:
  6736   002002                     
  6737                           ; BSR set to: 0
  6738   002002  5166               	movf	___flmul@bexp& (0+255),w,b
  6739   002004  A4D8               	btfss	status,2,c
  6740   002006  EF07  F010         	goto	u2521
  6741   00200A  EF09  F010         	goto	u2520
  6742   00200E                     u2521:
  6743   00200E  EF13  F010         	goto	l3289
  6744   002012                     u2520:
  6745   002012                     l3285:
  6746                           
  6747                           ; BSR set to: 0
  6748   002012  0E00               	movlw	0
  6749   002014  6E4B               	movwf	?___flmul^0,c
  6750   002016  0E00               	movlw	0
  6751   002018  6E4C               	movwf	(?___flmul+1)^0,c
  6752   00201A  0E00               	movlw	0
  6753   00201C  6E4D               	movwf	(?___flmul+2)^0,c
  6754   00201E  0E00               	movlw	0
  6755   002020  6E4E               	movwf	(?___flmul+3)^0,c
  6756   002022  EFAB  F011         	goto	l1288
  6757   002026                     l3289:
  6758                           
  6759                           ; BSR set to: 0
  6760   002026  5051               	movf	(___flmul@a+2)^0,w,c
  6761   002028  024B               	mulwf	___flmul@b^0,c
  6762   00202A  CFF3 F06B          	movff	prodl,___flmul@temp
  6763   00202E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6764   002032                     
  6765                           ; BSR set to: 0
  6766   002032  516B               	movf	___flmul@temp& (0+255),w,b
  6767   002034  6F61               	movwf	___flmul@grs& (0+255),b
  6768   002036  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  6769   002038  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  6770   00203A  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  6771   00203C                     
  6772                           ; BSR set to: 0
  6773   00203C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6774   00203E  6F67               	movwf	___flmul@prod& (0+255),b
  6775   002040  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6776   002042  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6777   002044  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6778   002046  5050               	movf	(___flmul@a+1)^0,w,c
  6779   002048  024C               	mulwf	(___flmul@b+1)^0,c
  6780   00204A  CFF3 F06B          	movff	prodl,___flmul@temp
  6781   00204E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6782   002052                     
  6783                           ; BSR set to: 0
  6784   002052  516B               	movf	___flmul@temp& (0+255),w,b
  6785   002054  2761               	addwf	___flmul@grs& (0+255),f,b
  6786   002056  0E00               	movlw	0
  6787   002058  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6788   00205A  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6789   00205C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6790   00205E                     
  6791                           ; BSR set to: 0
  6792   00205E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6793   002060  2767               	addwf	___flmul@prod& (0+255),f,b
  6794   002062  0E00               	movlw	0
  6795   002064  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6796   002066  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6797   002068  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6798   00206A  504F               	movf	___flmul@a^0,w,c
  6799   00206C  024D               	mulwf	(___flmul@b+2)^0,c
  6800   00206E  CFF3 F06B          	movff	prodl,___flmul@temp
  6801   002072  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6802   002076                     
  6803                           ; BSR set to: 0
  6804   002076  516B               	movf	___flmul@temp& (0+255),w,b
  6805   002078  2761               	addwf	___flmul@grs& (0+255),f,b
  6806   00207A  0E00               	movlw	0
  6807   00207C  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6808   00207E  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6809   002080  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6810   002082                     
  6811                           ; BSR set to: 0
  6812   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6813   002084  2767               	addwf	___flmul@prod& (0+255),f,b
  6814   002086  0E00               	movlw	0
  6815   002088  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6816   00208A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6817   00208C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6818   00208E                     
  6819                           ; BSR set to: 0
  6820   00208E  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6821   002092  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6822   002096  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6823   00209A  6B61               	clrf	___flmul@grs& (0+255),b
  6824   00209C                     
  6825                           ; BSR set to: 0
  6826   00209C  504F               	movf	___flmul@a^0,w,c
  6827   00209E  024C               	mulwf	(___flmul@b+1)^0,c
  6828   0020A0  CFF3 F06B          	movff	prodl,___flmul@temp
  6829   0020A4  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6830   0020A8                     
  6831                           ; BSR set to: 0
  6832   0020A8  516B               	movf	___flmul@temp& (0+255),w,b
  6833   0020AA  2761               	addwf	___flmul@grs& (0+255),f,b
  6834   0020AC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6835   0020AE  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6836   0020B0  0E00               	movlw	0
  6837   0020B2  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6838   0020B4  0E00               	movlw	0
  6839   0020B6  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6840   0020B8                     
  6841                           ; BSR set to: 0
  6842   0020B8  5050               	movf	(___flmul@a+1)^0,w,c
  6843   0020BA  024B               	mulwf	___flmul@b^0,c
  6844   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  6845   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6846   0020C4                     
  6847                           ; BSR set to: 0
  6848   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  6849   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  6850   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6851   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6852   0020CC  0E00               	movlw	0
  6853   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6854   0020D0  0E00               	movlw	0
  6855   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6856   0020D4                     
  6857                           ; BSR set to: 0
  6858   0020D4  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6859   0020D8  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6860   0020DC  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6861   0020E0  6B61               	clrf	___flmul@grs& (0+255),b
  6862   0020E2  504F               	movf	___flmul@a^0,w,c
  6863   0020E4  024B               	mulwf	___flmul@b^0,c
  6864   0020E6  CFF3 F06B          	movff	prodl,___flmul@temp
  6865   0020EA  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6866   0020EE                     
  6867                           ; BSR set to: 0
  6868   0020EE  516B               	movf	___flmul@temp& (0+255),w,b
  6869   0020F0  2761               	addwf	___flmul@grs& (0+255),f,b
  6870   0020F2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6871   0020F4  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6872   0020F6  0E00               	movlw	0
  6873   0020F8  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6874   0020FA  0E00               	movlw	0
  6875   0020FC  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6876   0020FE                     
  6877                           ; BSR set to: 0
  6878   0020FE  5051               	movf	(___flmul@a+2)^0,w,c
  6879   002100  024C               	mulwf	(___flmul@b+1)^0,c
  6880   002102  CFF3 F06B          	movff	prodl,___flmul@temp
  6881   002106  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6882   00210A  516B               	movf	___flmul@temp& (0+255),w,b
  6883   00210C  2767               	addwf	___flmul@prod& (0+255),f,b
  6884   00210E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6885   002110  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6886   002112  0E00               	movlw	0
  6887   002114  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6888   002116  0E00               	movlw	0
  6889   002118  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6890   00211A                     
  6891                           ; BSR set to: 0
  6892   00211A  5050               	movf	(___flmul@a+1)^0,w,c
  6893   00211C  024D               	mulwf	(___flmul@b+2)^0,c
  6894   00211E  CFF3 F06B          	movff	prodl,___flmul@temp
  6895   002122  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6896   002126                     
  6897                           ; BSR set to: 0
  6898   002126  516B               	movf	___flmul@temp& (0+255),w,b
  6899   002128  2767               	addwf	___flmul@prod& (0+255),f,b
  6900   00212A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6901   00212C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6902   00212E  0E00               	movlw	0
  6903   002130  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6904   002132  0E00               	movlw	0
  6905   002134  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6906   002136  5051               	movf	(___flmul@a+2)^0,w,c
  6907   002138  024D               	mulwf	(___flmul@b+2)^0,c
  6908   00213A  CFF3 F06B          	movff	prodl,___flmul@temp
  6909   00213E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6910   002142                     
  6911                           ; BSR set to: 0
  6912   002142  516B               	movf	___flmul@temp& (0+255),w,b
  6913   002144  6E53               	movwf	??___flmul^0,c
  6914   002146  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6915   002148  6E54               	movwf	(??___flmul+1)^0,c
  6916   00214A  6A55               	clrf	(??___flmul+2)^0,c
  6917   00214C  6A56               	clrf	(??___flmul+3)^0,c
  6918   00214E  C055  F056         	movff	??___flmul+2,??___flmul+3
  6919   002152  C054  F055         	movff	??___flmul+1,??___flmul+2
  6920   002156  C053  F054         	movff	??___flmul,??___flmul+1
  6921   00215A  6A53               	clrf	??___flmul^0,c
  6922   00215C  5053               	movf	??___flmul^0,w,c
  6923   00215E  2767               	addwf	___flmul@prod& (0+255),f,b
  6924   002160  5054               	movf	(??___flmul+1)^0,w,c
  6925   002162  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6926   002164  5055               	movf	(??___flmul+2)^0,w,c
  6927   002166  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6928   002168  5056               	movf	(??___flmul+3)^0,w,c
  6929   00216A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6930   00216C                     
  6931                           ; BSR set to: 0
  6932   00216C  C061  F053         	movff	___flmul@grs,??___flmul
  6933   002170  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  6934   002174  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  6935   002178  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  6936   00217C  0E19               	movlw	25
  6937   00217E  EFC6  F010         	goto	u2530
  6938   002182                     u2535:
  6939   002182  90D8               	bcf	status,0,c
  6940   002184  3256               	rrcf	(??___flmul+3)^0,f,c
  6941   002186  3255               	rrcf	(??___flmul+2)^0,f,c
  6942   002188  3254               	rrcf	(??___flmul+1)^0,f,c
  6943   00218A  3253               	rrcf	??___flmul^0,f,c
  6944   00218C                     u2530:
  6945   00218C  2EE8               	decfsz	wreg,f,c
  6946   00218E  EFC1  F010         	goto	u2535
  6947   002192  5053               	movf	??___flmul^0,w,c
  6948   002194  2767               	addwf	___flmul@prod& (0+255),f,b
  6949   002196  5054               	movf	(??___flmul+1)^0,w,c
  6950   002198  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6951   00219A  5055               	movf	(??___flmul+2)^0,w,c
  6952   00219C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6953   00219E  5056               	movf	(??___flmul+3)^0,w,c
  6954   0021A0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6955   0021A2                     
  6956                           ; BSR set to: 0
  6957   0021A2  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6958   0021A6  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6959   0021AA  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6960   0021AE  6B61               	clrf	___flmul@grs& (0+255),b
  6961   0021B0                     
  6962                           ; BSR set to: 0
  6963   0021B0  5165               	movf	___flmul@aexp& (0+255),w,b
  6964   0021B2  C066  F053         	movff	___flmul@bexp,??___flmul
  6965   0021B6  6A54               	clrf	(??___flmul+1)^0,c
  6966   0021B8  2653               	addwf	??___flmul^0,f,c
  6967   0021BA  0E00               	movlw	0
  6968   0021BC  2254               	addwfc	(??___flmul+1)^0,f,c
  6969   0021BE  0E82               	movlw	130
  6970   0021C0  2453               	addwf	??___flmul^0,w,c
  6971   0021C2  6F6B               	movwf	___flmul@temp& (0+255),b
  6972   0021C4  0EFF               	movlw	255
  6973   0021C6  2054               	addwfc	(??___flmul+1)^0,w,c
  6974   0021C8  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6975   0021CA  EFFC  F010         	goto	l3337
  6976   0021CE                     l3331:
  6977                           
  6978                           ; BSR set to: 0
  6979   0021CE  90D8               	bcf	status,0,c
  6980   0021D0  3767               	rlcf	___flmul@prod& (0+255),f,b
  6981   0021D2  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6982   0021D4  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6983   0021D6  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6984   0021D8                     
  6985                           ; BSR set to: 0
  6986   0021D8  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  6987   0021DA  EFF1  F010         	goto	u2541
  6988   0021DE  EFF3  F010         	goto	u2540
  6989   0021E2                     u2541:
  6990   0021E2  EFF4  F010         	goto	l1291
  6991   0021E6                     u2540:
  6992   0021E6                     
  6993                           ; BSR set to: 0
  6994   0021E6  8167               	bsf	___flmul@prod& (0+255),0,b
  6995   0021E8                     l1291:
  6996                           
  6997                           ; BSR set to: 0
  6998   0021E8  90D8               	bcf	status,0,c
  6999   0021EA  3761               	rlcf	___flmul@grs& (0+255),f,b
  7000   0021EC  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7001   0021EE  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7002   0021F0  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7003   0021F2  076B               	decf	___flmul@temp& (0+255),f,b
  7004   0021F4  A0D8               	btfss	status,0,c
  7005   0021F6  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  7006   0021F8                     l3337:
  7007                           
  7008                           ; BSR set to: 0
  7009   0021F8  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  7010   0021FA  EF01  F011         	goto	u2551
  7011   0021FE  EF03  F011         	goto	u2550
  7012   002202                     u2551:
  7013   002202  EFE7  F010         	goto	l3331
  7014   002206                     u2550:
  7015   002206                     
  7016                           ; BSR set to: 0
  7017   002206  0E00               	movlw	0
  7018   002208  6F65               	movwf	___flmul@aexp& (0+255),b
  7019   00220A                     
  7020                           ; BSR set to: 0
  7021   00220A  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7022   00220C  EF0A  F011         	goto	u2561
  7023   002210  EF0C  F011         	goto	u2560
  7024   002214                     u2561:
  7025   002214  EF30  F011         	goto	l1293
  7026   002218                     u2560:
  7027   002218                     
  7028                           ; BSR set to: 0
  7029   002218  0EFF               	movlw	255
  7030   00221A  1561               	andwf	___flmul@grs& (0+255),w,b
  7031   00221C  6E53               	movwf	??___flmul^0,c
  7032   00221E  0EFF               	movlw	255
  7033   002220  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  7034   002222  6E54               	movwf	(??___flmul+1)^0,c
  7035   002224  0EFF               	movlw	255
  7036   002226  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  7037   002228  6E55               	movwf	(??___flmul+2)^0,c
  7038   00222A  0E7F               	movlw	127
  7039   00222C  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  7040   00222E  6E56               	movwf	(??___flmul+3)^0,c
  7041   002230  5053               	movf	??___flmul^0,w,c
  7042   002232  1054               	iorwf	(??___flmul+1)^0,w,c
  7043   002234  1055               	iorwf	(??___flmul+2)^0,w,c
  7044   002236  1056               	iorwf	(??___flmul+3)^0,w,c
  7045   002238  B4D8               	btfsc	status,2,c
  7046   00223A  EF21  F011         	goto	u2571
  7047   00223E  EF23  F011         	goto	u2570
  7048   002242                     u2571:
  7049   002242  EF27  F011         	goto	l1294
  7050   002246                     u2570:
  7051   002246                     l3345:
  7052                           
  7053                           ; BSR set to: 0
  7054   002246  0E01               	movlw	1
  7055   002248  6F65               	movwf	___flmul@aexp& (0+255),b
  7056   00224A  EF30  F011         	goto	l1293
  7057   00224E                     l1294:
  7058                           
  7059                           ; BSR set to: 0
  7060   00224E  A167               	btfss	___flmul@prod& (0+255),0,b
  7061   002250  EF2C  F011         	goto	u2581
  7062   002254  EF2E  F011         	goto	u2580
  7063   002258                     u2581:
  7064   002258  EF30  F011         	goto	l1293
  7065   00225C                     u2580:
  7066   00225C  EF23  F011         	goto	l3345
  7067   002260                     l1293:
  7068                           
  7069                           ; BSR set to: 0
  7070   002260  5165               	movf	___flmul@aexp& (0+255),w,b
  7071   002262  B4D8               	btfsc	status,2,c
  7072   002264  EF36  F011         	goto	u2591
  7073   002268  EF38  F011         	goto	u2590
  7074   00226C                     u2591:
  7075   00226C  EF5C  F011         	goto	l3357
  7076   002270                     u2590:
  7077   002270                     
  7078                           ; BSR set to: 0
  7079   002270  0E01               	movlw	1
  7080   002272  2767               	addwf	___flmul@prod& (0+255),f,b
  7081   002274  0E00               	movlw	0
  7082   002276  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7083   002278  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7084   00227A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7085   00227C                     
  7086                           ; BSR set to: 0
  7087   00227C  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  7088   00227E  EF43  F011         	goto	u2601
  7089   002282  EF45  F011         	goto	u2600
  7090   002286                     u2601:
  7091   002286  EF5C  F011         	goto	l3357
  7092   00228A                     u2600:
  7093   00228A                     
  7094                           ; BSR set to: 0
  7095   00228A  C067  F053         	movff	___flmul@prod,??___flmul
  7096   00228E  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  7097   002292  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  7098   002296  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  7099   00229A  3456               	rlcf	(??___flmul+3)^0,w,c
  7100   00229C  3256               	rrcf	(??___flmul+3)^0,f,c
  7101   00229E  3255               	rrcf	(??___flmul+2)^0,f,c
  7102   0022A0  3254               	rrcf	(??___flmul+1)^0,f,c
  7103   0022A2  3253               	rrcf	??___flmul^0,f,c
  7104   0022A4  C053  F067         	movff	??___flmul,___flmul@prod
  7105   0022A8  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  7106   0022AC  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  7107   0022B0  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  7108   0022B4                     
  7109                           ; BSR set to: 0
  7110   0022B4  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  7111   0022B6  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  7112   0022B8                     l3357:
  7113                           
  7114                           ; BSR set to: 0
  7115   0022B8  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7116   0022BA  EF67  F011         	goto	u2611
  7117   0022BE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7118   0022C0  E108               	bnz	u2610
  7119   0022C2  296B               	incf	___flmul@temp& (0+255),w,b
  7120   0022C4  A0D8               	btfss	status,0,c
  7121   0022C6  EF67  F011         	goto	u2611
  7122   0022CA  EF69  F011         	goto	u2610
  7123   0022CE                     u2611:
  7124   0022CE  EF73  F011         	goto	l3361
  7125   0022D2                     u2610:
  7126   0022D2                     
  7127                           ; BSR set to: 0
  7128   0022D2  0E00               	movlw	0
  7129   0022D4  6F67               	movwf	___flmul@prod& (0+255),b
  7130   0022D6  0E00               	movlw	0
  7131   0022D8  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7132   0022DA  0E80               	movlw	128
  7133   0022DC  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7134   0022DE  0E7F               	movlw	127
  7135   0022E0  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7136   0022E2  EFA1  F011         	goto	l3373
  7137   0022E6                     l3361:
  7138                           
  7139                           ; BSR set to: 0
  7140   0022E6  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7141   0022E8  EF80  F011         	goto	u2620
  7142   0022EC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7143   0022EE  E106               	bnz	u2621
  7144   0022F0  056B               	decf	___flmul@temp& (0+255),w,b
  7145   0022F2  B0D8               	btfsc	status,0,c
  7146   0022F4  EF7E  F011         	goto	u2621
  7147   0022F8  EF80  F011         	goto	u2620
  7148   0022FC                     u2621:
  7149   0022FC  EF8C  F011         	goto	l1301
  7150   002300                     u2620:
  7151   002300                     
  7152                           ; BSR set to: 0
  7153   002300  0E00               	movlw	0
  7154   002302  6F67               	movwf	___flmul@prod& (0+255),b
  7155   002304  0E00               	movlw	0
  7156   002306  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7157   002308  0E00               	movlw	0
  7158   00230A  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7159   00230C  0E00               	movlw	0
  7160   00230E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7161   002310  0E00               	movlw	0
  7162   002312  6F60               	movwf	___flmul@sign& (0+255),b
  7163   002314  EFA1  F011         	goto	l3373
  7164   002318                     l1301:
  7165                           
  7166                           ; BSR set to: 0
  7167   002318  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  7168   00231C                     
  7169                           ; BSR set to: 0
  7170   00231C  0EFF               	movlw	255
  7171   00231E  1767               	andwf	___flmul@prod& (0+255),f,b
  7172   002320  0EFF               	movlw	255
  7173   002322  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7174   002324  0E7F               	movlw	127
  7175   002326  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7176   002328  0E00               	movlw	0
  7177   00232A  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7178   00232C                     
  7179                           ; BSR set to: 0
  7180   00232C  A166               	btfss	___flmul@bexp& (0+255),0,b
  7181   00232E  EF9B  F011         	goto	u2631
  7182   002332  EF9D  F011         	goto	u2630
  7183   002336                     u2631:
  7184   002336  EF9E  F011         	goto	l3371
  7185   00233A                     u2630:
  7186   00233A                     
  7187                           ; BSR set to: 0
  7188   00233A  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  7189   00233C                     l3371:
  7190                           
  7191                           ; BSR set to: 0
  7192   00233C  90D8               	bcf	status,0,c
  7193   00233E  3166               	rrcf	___flmul@bexp& (0+255),w,b
  7194   002340  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7195   002342                     l3373:
  7196                           
  7197                           ; BSR set to: 0
  7198   002342  5160               	movf	___flmul@sign& (0+255),w,b
  7199   002344  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7200   002346                     
  7201                           ; BSR set to: 0
  7202   002346  C067  F04B         	movff	___flmul@prod,?___flmul
  7203   00234A  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  7204   00234E  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  7205   002352  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  7206   002356                     l1288:
  7207                           
  7208                           ; BSR set to: 0
  7209   002356  0012               	return		;funcret
  7210   002358                     __end_of___flmul:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _Yellow_rev1_R90 *****************
  7214 ;; Defined at:
  7215 ;;		line 266 in file "dc_motor.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7218 ;;		 -> motorL(9), 
  7219 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7220 ;;		 -> motorR(9), 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;Total ram usage:        6 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; Hardware stack levels required when called: 5
  7239 ;; This function calls:
  7240 ;;		_Left45
  7241 ;;		_Right45
  7242 ;;		_fullSpeedAhead
  7243 ;;		_fullSpeedReverse
  7244 ;;		_reverseHalfSquare
  7245 ;;		_stop
  7246 ;; This function is called by:
  7247 ;;		_White
  7248 ;;		_Colour2Action
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text33
  7253   0036EE                     __ptext33:
  7254                           	callstack 0
  7255   0036EE                     _Yellow_rev1_R90:
  7256                           	callstack 24
  7257   0036EE                     
  7258                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7259   0036EE  0100               	movlb	0	; () banked
  7260   0036F0  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7261   0036F2  B4D8               	btfsc	status,2,c
  7262   0036F4  EF7E  F01B         	goto	u2901
  7263   0036F8  EF80  F01B         	goto	u2900
  7264   0036FC                     u2901:
  7265   0036FC  EFB6  F01B         	goto	l3563
  7266   003700                     u2900:
  7267   003700                     
  7268                           ; BSR set to: 0
  7269                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7270   003700  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7271   003704  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7272   003708  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7273   00370C  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7274   003710  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  7275                           
  7276                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7277   003714  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7278   003718  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7279   00371C  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7280   003720  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7281   003724  EC69  F020         	call	_fullSpeedReverse	;wreg free
  7282   003728                     
  7283                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7284   003728  0E39               	movlw	57
  7285   00372A  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7286   00372C  0ED2               	movlw	210
  7287   00372E  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7288   003730  0E4C               	movlw	76
  7289   003732                     u4287:
  7290   003732  2EE8               	decfsz	wreg,f,c
  7291   003734  D7FE               	bra	u4287
  7292   003736  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7293   003738  D7FC               	bra	u4287
  7294   00373A  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7295   00373C  D7FA               	bra	u4287
  7296   00373E  D000               	nop2	
  7297   003740                     
  7298                           ;dc_motor.c: 274:         Right45(mL,mR);
  7299   003740  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7300   003744  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7301   003748  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7302   00374C  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7303   003750  ECA2  F01F         	call	_Right45	;wreg free
  7304   003754                     
  7305                           ;dc_motor.c: 275:         Right45(mL,mR);
  7306   003754  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7307   003758  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7308   00375C  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7309   003760  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7310   003764  ECA2  F01F         	call	_Right45	;wreg free
  7311                           
  7312                           ;dc_motor.c: 276:     }
  7313   003768  EFEA  F01B         	goto	l301
  7314   00376C                     l3563:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;dc_motor.c: 279:         Left45(mL,mR);
  7318   00376C  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7319   003770  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7320   003774  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7321   003778  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7322   00377C  EC5D  F01F         	call	_Left45	;wreg free
  7323                           
  7324                           ;dc_motor.c: 280:         Left45(mL,mR);
  7325   003780  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7326   003784  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7327   003788  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7328   00378C  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7329   003790  EC5D  F01F         	call	_Left45	;wreg free
  7330                           
  7331                           ;dc_motor.c: 281:         fullSpeedAhead(mL,mR);
  7332   003794  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  7333   003798  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  7334   00379C  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  7335   0037A0  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  7336   0037A4  EC29  F020         	call	_fullSpeedAhead	;wreg free
  7337   0037A8                     
  7338                           ;dc_motor.c: 282:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7339   0037A8  0E39               	movlw	57
  7340   0037AA  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7341   0037AC  0ED2               	movlw	210
  7342   0037AE  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7343   0037B0  0E4C               	movlw	76
  7344   0037B2                     u4297:
  7345   0037B2  2EE8               	decfsz	wreg,f,c
  7346   0037B4  D7FE               	bra	u4297
  7347   0037B6  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7348   0037B8  D7FC               	bra	u4297
  7349   0037BA  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7350   0037BC  D7FA               	bra	u4297
  7351   0037BE  D000               	nop2	
  7352   0037C0                     
  7353                           ;dc_motor.c: 283:         stop(mL,mR);
  7354   0037C0  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  7355   0037C4  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  7356   0037C8  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  7357   0037CC  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  7358   0037D0  EC88  F01D         	call	_stop	;wreg free
  7359   0037D4                     l301:
  7360   0037D4  0012               	return		;funcret
  7361   0037D6                     __end_of_Yellow_rev1_R90:
  7362                           	callstack 0
  7363                           
  7364 ;; *************** function _TimerReset *****************
  7365 ;; Defined at:
  7366 ;;		line 23 in file "timer.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;Total ram usage:        0 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 1
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;;		_White
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text34
  7396   00496C                     __ptext34:
  7397                           	callstack 0
  7398   00496C                     _TimerReset:
  7399                           	callstack 29
  7400   00496C                     
  7401                           ;timer.c: 25:     TMR0L = 0;
  7402   00496C  0E00               	movlw	0
  7403   00496E  6ED3               	movwf	211,c	;volatile
  7404                           
  7405                           ;timer.c: 26:     TMR0H = 0;
  7406   004970  0E00               	movlw	0
  7407   004972  6ED4               	movwf	212,c	;volatile
  7408   004974  0012               	return		;funcret
  7409   004976                     __end_of_TimerReset:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _Red_R90 *****************
  7413 ;; Defined at:
  7414 ;;		line 226 in file "dc_motor.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7417 ;;		 -> motorL(9), 
  7418 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7419 ;;		 -> motorR(9), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;Total ram usage:        4 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 5
  7438 ;; This function calls:
  7439 ;;		_Left45
  7440 ;;		_Right45
  7441 ;;		_reverseHalfSquare
  7442 ;; This function is called by:
  7443 ;;		_White
  7444 ;;		_Colour2Action
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text35
  7449   004152                     __ptext35:
  7450                           	callstack 0
  7451   004152                     _Red_R90:
  7452                           	callstack 23
  7453   004152                     
  7454                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7455   004152  0100               	movlb	0	; () banked
  7456   004154  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7457   004156  B4D8               	btfsc	status,2,c
  7458   004158  EFB0  F020         	goto	u2871
  7459   00415C  EFB2  F020         	goto	u2870
  7460   004160                     u2871:
  7461   004160  EFD2  F020         	goto	l3539
  7462   004164                     u2870:
  7463   004164                     
  7464                           ; BSR set to: 0
  7465                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7466   004164  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7467   004168  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7468   00416C  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7469   004170  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7470   004174  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  7471                           
  7472                           ;dc_motor.c: 230:         Right45(mL,mR);
  7473   004178  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7474   00417C  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7475   004180  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7476   004184  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7477   004188  ECA2  F01F         	call	_Right45	;wreg free
  7478                           
  7479                           ;dc_motor.c: 231:         Right45(mL,mR);
  7480   00418C  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7481   004190  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7482   004194  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7483   004198  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7484   00419C  ECA2  F01F         	call	_Right45	;wreg free
  7485                           
  7486                           ;dc_motor.c: 232:     }
  7487   0041A0  EFE6  F020         	goto	l286
  7488   0041A4                     l3539:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;dc_motor.c: 235:         Left45(mL,mR);
  7492   0041A4  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7493   0041A8  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7494   0041AC  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7495   0041B0  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7496   0041B4  EC5D  F01F         	call	_Left45	;wreg free
  7497                           
  7498                           ;dc_motor.c: 236:         Left45(mL,mR);
  7499   0041B8  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7500   0041BC  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7501   0041C0  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7502   0041C4  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7503   0041C8  EC5D  F01F         	call	_Left45	;wreg free
  7504   0041CC                     l286:
  7505   0041CC  0012               	return		;funcret
  7506   0041CE                     __end_of_Red_R90:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _Pink_rev1_L90 *****************
  7510 ;; Defined at:
  7511 ;;		line 286 in file "dc_motor.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7514 ;;		 -> motorL(9), 
  7515 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7516 ;;		 -> motorR(9), 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;Total ram usage:        6 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 5
  7535 ;; This function calls:
  7536 ;;		_Left45
  7537 ;;		_Right45
  7538 ;;		_fullSpeedAhead
  7539 ;;		_fullSpeedReverse
  7540 ;;		_reverseHalfSquare
  7541 ;;		_stop
  7542 ;; This function is called by:
  7543 ;;		_White
  7544 ;;		_Colour2Action
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text36
  7549   0037D6                     __ptext36:
  7550                           	callstack 0
  7551   0037D6                     _Pink_rev1_L90:
  7552                           	callstack 23
  7553   0037D6                     
  7554                           ;dc_motor.c: 286: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 287: {;dc_motor.c: 288:     if (ForwardFlag){
  7555   0037D6  0100               	movlb	0	; () banked
  7556   0037D8  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7557   0037DA  B4D8               	btfsc	status,2,c
  7558   0037DC  EFF2  F01B         	goto	u2911
  7559   0037E0  EFF4  F01B         	goto	u2910
  7560   0037E4                     u2911:
  7561   0037E4  EF2A  F01C         	goto	l3579
  7562   0037E8                     u2910:
  7563   0037E8                     
  7564                           ; BSR set to: 0
  7565                           ;dc_motor.c: 289:         reverseHalfSquare(mL,mR);
  7566   0037E8  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7567   0037EC  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7568   0037F0  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7569   0037F4  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7570   0037F8  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  7571                           
  7572                           ;dc_motor.c: 291:         fullSpeedReverse(mL,mR);
  7573   0037FC  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7574   003800  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7575   003804  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7576   003808  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7577   00380C  EC69  F020         	call	_fullSpeedReverse	;wreg free
  7578   003810                     
  7579                           ;dc_motor.c: 292:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7580   003810  0E39               	movlw	57
  7581   003812  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7582   003814  0ED2               	movlw	210
  7583   003816  6E25               	movwf	??_Pink_rev1_L90^0,c
  7584   003818  0E4C               	movlw	76
  7585   00381A                     u4307:
  7586   00381A  2EE8               	decfsz	wreg,f,c
  7587   00381C  D7FE               	bra	u4307
  7588   00381E  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7589   003820  D7FC               	bra	u4307
  7590   003822  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7591   003824  D7FA               	bra	u4307
  7592   003826  D000               	nop2	
  7593   003828                     
  7594                           ;dc_motor.c: 293:         Left45(mL,mR);
  7595   003828  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7596   00382C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7597   003830  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7598   003834  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7599   003838  EC5D  F01F         	call	_Left45	;wreg free
  7600   00383C                     
  7601                           ;dc_motor.c: 294:         Left45(mL,mR);
  7602   00383C  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7603   003840  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7604   003844  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7605   003848  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7606   00384C  EC5D  F01F         	call	_Left45	;wreg free
  7607                           
  7608                           ;dc_motor.c: 295:     }
  7609   003850  EF5E  F01C         	goto	l306
  7610   003854                     l3579:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;dc_motor.c: 298:         Right45(mL,mR);
  7614   003854  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7615   003858  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7616   00385C  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7617   003860  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7618   003864  ECA2  F01F         	call	_Right45	;wreg free
  7619                           
  7620                           ;dc_motor.c: 299:         Right45(mL,mR);
  7621   003868  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7622   00386C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7623   003870  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7624   003874  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7625   003878  ECA2  F01F         	call	_Right45	;wreg free
  7626                           
  7627                           ;dc_motor.c: 300:         fullSpeedAhead(mL,mR);
  7628   00387C  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  7629   003880  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  7630   003884  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  7631   003888  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  7632   00388C  EC29  F020         	call	_fullSpeedAhead	;wreg free
  7633   003890                     
  7634                           ;dc_motor.c: 301:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7635   003890  0E39               	movlw	57
  7636   003892  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7637   003894  0ED2               	movlw	210
  7638   003896  6E25               	movwf	??_Pink_rev1_L90^0,c
  7639   003898  0E4C               	movlw	76
  7640   00389A                     u4317:
  7641   00389A  2EE8               	decfsz	wreg,f,c
  7642   00389C  D7FE               	bra	u4317
  7643   00389E  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7644   0038A0  D7FC               	bra	u4317
  7645   0038A2  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7646   0038A4  D7FA               	bra	u4317
  7647   0038A6  D000               	nop2	
  7648   0038A8                     
  7649                           ;dc_motor.c: 302:         stop(mL,mR);
  7650   0038A8  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  7651   0038AC  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  7652   0038B0  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  7653   0038B4  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  7654   0038B8  EC88  F01D         	call	_stop	;wreg free
  7655   0038BC                     l306:
  7656   0038BC  0012               	return		;funcret
  7657   0038BE                     __end_of_Pink_rev1_L90:
  7658                           	callstack 0
  7659                           
  7660 ;; *************** function _fullSpeedAhead *****************
  7661 ;; Defined at:
  7662 ;;		line 149 in file "dc_motor.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7665 ;;		 -> motorL(9), 
  7666 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7667 ;;		 -> motorR(9), 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  i               2   24[COMRAM] unsigned int 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7682 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7683 ;;Total ram usage:        7 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 3
  7686 ;; This function calls:
  7687 ;;		_setMotorPWM
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;;		_Yellow_rev1_R90
  7691 ;;		_Pink_rev1_L90
  7692 ;;		_White
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text37
  7697   004052                     __ptext37:
  7698                           	callstack 0
  7699   004052                     _fullSpeedAhead:
  7700                           	callstack 27
  7701   004052                     
  7702                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  7703   004052  EE20 F001          	lfsr	2,1
  7704   004056  5014               	movf	fullSpeedAhead@mL^0,w,c
  7705   004058  26D9               	addwf	fsr2l,f,c
  7706   00405A  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7707   00405C  22DA               	addwfc	fsr2h,f,c
  7708   00405E  0E01               	movlw	1
  7709   004060  6EDF               	movwf	indf2,c
  7710                           
  7711                           ;dc_motor.c: 152:  (mR->direction) = 1;
  7712   004062  EE20 F001          	lfsr	2,1
  7713   004066  5016               	movf	fullSpeedAhead@mR^0,w,c
  7714   004068  26D9               	addwf	fsr2l,f,c
  7715   00406A  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7716   00406C  22DA               	addwfc	fsr2h,f,c
  7717   00406E  0E01               	movlw	1
  7718   004070  6EDF               	movwf	indf2,c
  7719   004072                     
  7720                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  7721   004072  0E00               	movlw	0
  7722   004074  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7723   004076  0E00               	movlw	0
  7724   004078  6E19               	movwf	fullSpeedAhead@i^0,c
  7725   00407A                     l3211:
  7726                           
  7727                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  7728   00407A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7729   00407E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7730   004082  2ADF               	incf	indf2,f,c
  7731                           
  7732                           ;dc_motor.c: 157:         (mR->power)++;
  7733   004084  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7734   004088  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7735   00408C  2ADF               	incf	indf2,f,c
  7736   00408E                     
  7737                           ;dc_motor.c: 158:         setMotorPWM(mL);
  7738   00408E  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7739   004092  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7740   004096  ECED  F017         	call	_setMotorPWM	;wreg free
  7741   00409A                     
  7742                           ;dc_motor.c: 159:         setMotorPWM(mR);
  7743   00409A  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7744   00409E  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7745   0040A2  ECED  F017         	call	_setMotorPWM	;wreg free
  7746   0040A6                     
  7747                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7748   0040A6  0E09               	movlw	9
  7749   0040A8  6E18               	movwf	??_fullSpeedAhead^0,c
  7750   0040AA  0E4E               	movlw	78
  7751   0040AC                     u4327:
  7752   0040AC  2EE8               	decfsz	wreg,f,c
  7753   0040AE  D7FE               	bra	u4327
  7754   0040B0  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7755   0040B2  D7FC               	bra	u4327
  7756   0040B4  D000               	nop2	
  7757   0040B6                     
  7758                           ;dc_motor.c: 161:     }
  7759   0040B6  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7760   0040B8  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7761   0040BA  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7762   0040BC  E109               	bnz	u2440
  7763   0040BE  0E32               	movlw	50
  7764   0040C0  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7765   0040C2  A0D8               	btfss	status,0,c
  7766   0040C4  EF66  F020         	goto	u2441
  7767   0040C8  EF68  F020         	goto	u2440
  7768   0040CC                     u2441:
  7769   0040CC  EF3D  F020         	goto	l3211
  7770   0040D0                     u2440:
  7771   0040D0  0012               	return		;funcret
  7772   0040D2                     __end_of_fullSpeedAhead:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function _Orange_R135 *****************
  7776 ;; Defined at:
  7777 ;;		line 305 in file "dc_motor.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7780 ;;		 -> motorL(9), 
  7781 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7782 ;;		 -> motorR(9), 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7798 ;;Total ram usage:        4 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; Hardware stack levels required when called: 5
  7801 ;; This function calls:
  7802 ;;		_Left45
  7803 ;;		_Right45
  7804 ;;		_reverseHalfSquare
  7805 ;; This function is called by:
  7806 ;;		_White
  7807 ;;		_Colour2Action
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text38
  7812   003BB6                     __ptext38:
  7813                           	callstack 0
  7814   003BB6                     _Orange_R135:
  7815                           	callstack 23
  7816   003BB6                     
  7817                           ;dc_motor.c: 305: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           306: {;dc_motor.c: 307:     if (ForwardFlag){
  7818   003BB6  0100               	movlb	0	; () banked
  7819   003BB8  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7820   003BBA  B4D8               	btfsc	status,2,c
  7821   003BBC  EFE2  F01D         	goto	u2921
  7822   003BC0  EFE4  F01D         	goto	u2920
  7823   003BC4                     u2921:
  7824   003BC4  EF0E  F01E         	goto	l3589
  7825   003BC8                     u2920:
  7826   003BC8                     
  7827                           ; BSR set to: 0
  7828                           ;dc_motor.c: 308:         reverseHalfSquare(mL,mR);
  7829   003BC8  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7830   003BCC  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7831   003BD0  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7832   003BD4  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7833   003BD8  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  7834                           
  7835                           ;dc_motor.c: 310:         Right45(mL,mR);
  7836   003BDC  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7837   003BE0  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7838   003BE4  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7839   003BE8  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7840   003BEC  ECA2  F01F         	call	_Right45	;wreg free
  7841                           
  7842                           ;dc_motor.c: 311:         Right45(mL,mR);
  7843   003BF0  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7844   003BF4  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7845   003BF8  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7846   003BFC  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7847   003C00  ECA2  F01F         	call	_Right45	;wreg free
  7848                           
  7849                           ;dc_motor.c: 312:         Right45(mL,mR);
  7850   003C04  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7851   003C08  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7852   003C0C  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7853   003C10  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7854   003C14  ECA2  F01F         	call	_Right45	;wreg free
  7855                           
  7856                           ;dc_motor.c: 315:     }
  7857   003C18  EF2C  F01E         	goto	l311
  7858   003C1C                     l3589:
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;dc_motor.c: 318:         Left45(mL,mR);
  7862   003C1C  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7863   003C20  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7864   003C24  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7865   003C28  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7866   003C2C  EC5D  F01F         	call	_Left45	;wreg free
  7867                           
  7868                           ;dc_motor.c: 319:         Left45(mL,mR);
  7869   003C30  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7870   003C34  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7871   003C38  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7872   003C3C  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7873   003C40  EC5D  F01F         	call	_Left45	;wreg free
  7874                           
  7875                           ;dc_motor.c: 320:         Left45(mL,mR);
  7876   003C44  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7877   003C48  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7878   003C4C  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7879   003C50  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7880   003C54  EC5D  F01F         	call	_Left45	;wreg free
  7881   003C58                     l311:
  7882   003C58  0012               	return		;funcret
  7883   003C5A                     __end_of_Orange_R135:
  7884                           	callstack 0
  7885                           
  7886 ;; *************** function _LightBlue_L135 *****************
  7887 ;; Defined at:
  7888 ;;		line 323 in file "dc_motor.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7891 ;;		 -> motorL(9), 
  7892 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7893 ;;		 -> motorR(9), 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        4 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 5
  7912 ;; This function calls:
  7913 ;;		_Left45
  7914 ;;		_Right45
  7915 ;;		_reverseHalfSquare
  7916 ;; This function is called by:
  7917 ;;		_White
  7918 ;;		_Colour2Action
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text39
  7923   003C5A                     __ptext39:
  7924                           	callstack 0
  7925   003C5A                     _LightBlue_L135:
  7926                           	callstack 23
  7927   003C5A                     
  7928                           ;dc_motor.c: 323: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 324: {;dc_motor.c: 326:      if (ForwardFlag){
  7929   003C5A  0100               	movlb	0	; () banked
  7930   003C5C  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7931   003C5E  B4D8               	btfsc	status,2,c
  7932   003C60  EF34  F01E         	goto	u2931
  7933   003C64  EF36  F01E         	goto	u2930
  7934   003C68                     u2931:
  7935   003C68  EF60  F01E         	goto	l3595
  7936   003C6C                     u2930:
  7937   003C6C                     
  7938                           ; BSR set to: 0
  7939                           ;dc_motor.c: 327:         reverseHalfSquare(mL,mR);
  7940   003C6C  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7941   003C70  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7942   003C74  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7943   003C78  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7944   003C7C  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  7945                           
  7946                           ;dc_motor.c: 329:         Left45(mL,mR);
  7947   003C80  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7948   003C84  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7949   003C88  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7950   003C8C  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7951   003C90  EC5D  F01F         	call	_Left45	;wreg free
  7952                           
  7953                           ;dc_motor.c: 330:         Left45(mL,mR);
  7954   003C94  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7955   003C98  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7956   003C9C  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7957   003CA0  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7958   003CA4  EC5D  F01F         	call	_Left45	;wreg free
  7959                           
  7960                           ;dc_motor.c: 331:         Left45(mL,mR);
  7961   003CA8  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7962   003CAC  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7963   003CB0  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7964   003CB4  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7965   003CB8  EC5D  F01F         	call	_Left45	;wreg free
  7966                           
  7967                           ;dc_motor.c: 333:     }
  7968   003CBC  EF7E  F01E         	goto	l316
  7969   003CC0                     l3595:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;dc_motor.c: 336:         Right45(mL,mR);
  7973   003CC0  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7974   003CC4  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7975   003CC8  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7976   003CCC  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7977   003CD0  ECA2  F01F         	call	_Right45	;wreg free
  7978                           
  7979                           ;dc_motor.c: 337:         Right45(mL,mR);
  7980   003CD4  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7981   003CD8  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7982   003CDC  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7983   003CE0  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7984   003CE4  ECA2  F01F         	call	_Right45	;wreg free
  7985                           
  7986                           ;dc_motor.c: 338:         Right45(mL,mR);
  7987   003CE8  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7988   003CEC  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7989   003CF0  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7990   003CF4  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7991   003CF8  ECA2  F01F         	call	_Right45	;wreg free
  7992   003CFC                     l316:
  7993   003CFC  0012               	return		;funcret
  7994   003CFE                     __end_of_LightBlue_L135:
  7995                           	callstack 0
  7996                           
  7997 ;; *************** function _Green_L90 *****************
  7998 ;; Defined at:
  7999 ;;		line 240 in file "dc_motor.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8002 ;;		 -> motorL(9), 
  8003 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8004 ;;		 -> motorR(9), 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8020 ;;Total ram usage:        4 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 5
  8023 ;; This function calls:
  8024 ;;		_Left45
  8025 ;;		_Right45
  8026 ;;		_reverseHalfSquare
  8027 ;; This function is called by:
  8028 ;;		_White
  8029 ;;		_Colour2Action
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text40
  8034   0041CE                     __ptext40:
  8035                           	callstack 0
  8036   0041CE                     _Green_L90:
  8037                           	callstack 23
  8038   0041CE                     
  8039                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  8040   0041CE  0100               	movlb	0	; () banked
  8041   0041D0  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8042   0041D2  B4D8               	btfsc	status,2,c
  8043   0041D4  EFEE  F020         	goto	u2881
  8044   0041D8  EFF0  F020         	goto	u2880
  8045   0041DC                     u2881:
  8046   0041DC  EF10  F021         	goto	l3545
  8047   0041E0                     u2880:
  8048   0041E0                     
  8049                           ; BSR set to: 0
  8050                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  8051   0041E0  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  8052   0041E4  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  8053   0041E8  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  8054   0041EC  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  8055   0041F0  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  8056                           
  8057                           ;dc_motor.c: 245:         Left45(mL,mR);
  8058   0041F4  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8059   0041F8  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8060   0041FC  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8061   004200  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8062   004204  EC5D  F01F         	call	_Left45	;wreg free
  8063                           
  8064                           ;dc_motor.c: 246:         Left45(mL,mR);
  8065   004208  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8066   00420C  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8067   004210  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8068   004214  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8069   004218  EC5D  F01F         	call	_Left45	;wreg free
  8070                           
  8071                           ;dc_motor.c: 247:     }
  8072   00421C  EF24  F021         	goto	l291
  8073   004220                     l3545:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;dc_motor.c: 250:         Right45(mL,mR);
  8077   004220  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8078   004224  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8079   004228  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8080   00422C  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8081   004230  ECA2  F01F         	call	_Right45	;wreg free
  8082                           
  8083                           ;dc_motor.c: 251:         Right45(mL,mR);
  8084   004234  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8085   004238  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8086   00423C  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8087   004240  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8088   004244  ECA2  F01F         	call	_Right45	;wreg free
  8089   004248                     l291:
  8090   004248  0012               	return		;funcret
  8091   00424A                     __end_of_Green_L90:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function _Right45 *****************
  8095 ;; Defined at:
  8096 ;;		line 193 in file "dc_motor.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8099 ;;		 -> motorL(9), 
  8100 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8101 ;;		 -> motorR(9), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;Total ram usage:        6 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 4
  8120 ;; This function calls:
  8121 ;;		_stop
  8122 ;;		_turnRight
  8123 ;; This function is called by:
  8124 ;;		_Red_R90
  8125 ;;		_Green_L90
  8126 ;;		_Yellow_rev1_R90
  8127 ;;		_Pink_rev1_L90
  8128 ;;		_Orange_R135
  8129 ;;		_LightBlue_L135
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text41
  8134   003F44                     __ptext41:
  8135                           	callstack 0
  8136   003F44                     _Right45:
  8137                           	callstack 24
  8138   003F44                     
  8139                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  8140   003F44  8080               	bsf	128,0,c	;volatile
  8141   003F46                     
  8142                           ;dc_motor.c: 197:     stop(mL,mR);
  8143   003F46  C01A  F014         	movff	Right45@mL,stop@mL
  8144   003F4A  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8145   003F4E  C01C  F016         	movff	Right45@mR,stop@mR
  8146   003F52  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8147   003F56  EC88  F01D         	call	_stop	;wreg free
  8148   003F5A                     
  8149                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8150   003F5A  0E05               	movlw	5
  8151   003F5C  6E1F               	movwf	(??_Right45+1)^0,c
  8152   003F5E  0E0F               	movlw	15
  8153   003F60  6E1E               	movwf	??_Right45^0,c
  8154   003F62  0EF1               	movlw	241
  8155   003F64                     u4337:
  8156   003F64  2EE8               	decfsz	wreg,f,c
  8157   003F66  D7FE               	bra	u4337
  8158   003F68  2E1E               	decfsz	??_Right45^0,f,c
  8159   003F6A  D7FC               	bra	u4337
  8160   003F6C  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8161   003F6E  D7FA               	bra	u4337
  8162   003F70  F000               	nop	
  8163   003F72                     
  8164                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8165   003F72  C01A  F014         	movff	Right45@mL,turnRight@mL
  8166   003F76  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8167   003F7A  C01C  F016         	movff	Right45@mR,turnRight@mR
  8168   003F7E  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8169   003F82  EC7F  F01E         	call	_turnRight	;wreg free
  8170                           
  8171                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8172   003F86  0E0D               	movlw	13
  8173   003F88  6E1F               	movwf	(??_Right45+1)^0,c
  8174   003F8A  0E19               	movlw	25
  8175   003F8C  6E1E               	movwf	??_Right45^0,c
  8176   003F8E  0E10               	movlw	16
  8177   003F90                     u4347:
  8178   003F90  2EE8               	decfsz	wreg,f,c
  8179   003F92  D7FE               	bra	u4347
  8180   003F94  2E1E               	decfsz	??_Right45^0,f,c
  8181   003F96  D7FC               	bra	u4347
  8182   003F98  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8183   003F9A  D7FA               	bra	u4347
  8184   003F9C                     
  8185                           ;dc_motor.c: 201:     stop(mL,mR);
  8186   003F9C  C01A  F014         	movff	Right45@mL,stop@mL
  8187   003FA0  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8188   003FA4  C01C  F016         	movff	Right45@mR,stop@mR
  8189   003FA8  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8190   003FAC  EC88  F01D         	call	_stop	;wreg free
  8191   003FB0                     
  8192                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8193   003FB0  0E05               	movlw	5
  8194   003FB2  6E1F               	movwf	(??_Right45+1)^0,c
  8195   003FB4  0E0F               	movlw	15
  8196   003FB6  6E1E               	movwf	??_Right45^0,c
  8197   003FB8  0EF1               	movlw	241
  8198   003FBA                     u4357:
  8199   003FBA  2EE8               	decfsz	wreg,f,c
  8200   003FBC  D7FE               	bra	u4357
  8201   003FBE  2E1E               	decfsz	??_Right45^0,f,c
  8202   003FC0  D7FC               	bra	u4357
  8203   003FC2  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8204   003FC4  D7FA               	bra	u4357
  8205   003FC6  F000               	nop	
  8206   003FC8                     
  8207                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8208   003FC8  9080               	bcf	128,0,c	;volatile
  8209   003FCA  0012               	return		;funcret
  8210   003FCC                     __end_of_Right45:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function _turnRight *****************
  8214 ;; Defined at:
  8215 ;;		line 132 in file "dc_motor.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8218 ;;		 -> motorL(9), 
  8219 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8220 ;;		 -> motorR(9), 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;  i               2   23[COMRAM] unsigned int 
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  1    wreg      void 
  8225 ;; Registers used:
  8226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8236 ;;Total ram usage:        6 bytes
  8237 ;; Hardware stack levels used: 1
  8238 ;; Hardware stack levels required when called: 3
  8239 ;; This function calls:
  8240 ;;		_setMotorPWM
  8241 ;; This function is called by:
  8242 ;;		_Right45
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	text42
  8247   003CFE                     __ptext42:
  8248                           	callstack 0
  8249   003CFE                     _turnRight:
  8250                           	callstack 24
  8251   003CFE                     
  8252                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8253   003CFE  EE20 F001          	lfsr	2,1
  8254   003D02  5014               	movf	turnRight@mL^0,w,c
  8255   003D04  26D9               	addwf	fsr2l,f,c
  8256   003D06  5015               	movf	(turnRight@mL+1)^0,w,c
  8257   003D08  22DA               	addwfc	fsr2h,f,c
  8258   003D0A  0E01               	movlw	1
  8259   003D0C  6EDF               	movwf	indf2,c
  8260                           
  8261                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8262   003D0E  EE20 F001          	lfsr	2,1
  8263   003D12  5016               	movf	turnRight@mR^0,w,c
  8264   003D14  26D9               	addwf	fsr2l,f,c
  8265   003D16  5017               	movf	(turnRight@mR+1)^0,w,c
  8266   003D18  22DA               	addwfc	fsr2h,f,c
  8267   003D1A  0E00               	movlw	0
  8268   003D1C  6EDF               	movwf	indf2,c
  8269   003D1E                     
  8270                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8271   003D1E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8272   003D22  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8273   003D26  ECED  F017         	call	_setMotorPWM	;wreg free
  8274   003D2A                     
  8275                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8276   003D2A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8277   003D2E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8278   003D32  ECED  F017         	call	_setMotorPWM	;wreg free
  8279   003D36                     
  8280                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8281   003D36  0E00               	movlw	0
  8282   003D38  6E19               	movwf	(turnRight@i+1)^0,c
  8283   003D3A  0E00               	movlw	0
  8284   003D3C  6E18               	movwf	turnRight@i^0,c
  8285   003D3E                     l3101:
  8286                           
  8287                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8288   003D3E  C014  FFD9         	movff	turnRight@mL,fsr2l
  8289   003D42  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8290   003D46  2ADF               	incf	indf2,f,c
  8291                           
  8292                           ;dc_motor.c: 141:         mR->power++;
  8293   003D48  C016  FFD9         	movff	turnRight@mR,fsr2l
  8294   003D4C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8295   003D50  2ADF               	incf	indf2,f,c
  8296   003D52                     
  8297                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8298   003D52  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8299   003D56  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8300   003D5A  ECED  F017         	call	_setMotorPWM	;wreg free
  8301   003D5E                     
  8302                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8303   003D5E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8304   003D62  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8305   003D66  ECED  F017         	call	_setMotorPWM	;wreg free
  8306   003D6A                     
  8307                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8308   003D6A  0EE4               	movlw	228
  8309   003D6C                     u4367:
  8310   003D6C  D000               	nop2	
  8311   003D6E  D000               	nop2	
  8312   003D70  2EE8               	decfsz	wreg,f,c
  8313   003D72  D7FC               	bra	u4367
  8314   003D74  D000               	nop2	
  8315   003D76  D000               	nop2	
  8316   003D78                     
  8317                           ;dc_motor.c: 145:     }
  8318   003D78  4A18               	infsnz	turnRight@i^0,f,c
  8319   003D7A  2A19               	incf	(turnRight@i+1)^0,f,c
  8320   003D7C  5019               	movf	(turnRight@i+1)^0,w,c
  8321   003D7E  E109               	bnz	u2280
  8322   003D80  0E32               	movlw	50
  8323   003D82  5C18               	subwf	turnRight@i^0,w,c
  8324   003D84  A0D8               	btfss	status,0,c
  8325   003D86  EFC7  F01E         	goto	u2281
  8326   003D8A  EFC9  F01E         	goto	u2280
  8327   003D8E                     u2281:
  8328   003D8E  EF9F  F01E         	goto	l3101
  8329   003D92                     u2280:
  8330   003D92  0012               	return		;funcret
  8331   003D94                     __end_of_turnRight:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _Blue_T180 *****************
  8335 ;; Defined at:
  8336 ;;		line 255 in file "dc_motor.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8339 ;;		 -> motorL(9), 
  8340 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8341 ;;		 -> motorR(9), 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;Total ram usage:        4 bytes
  8358 ;; Hardware stack levels used: 1
  8359 ;; Hardware stack levels required when called: 6
  8360 ;; This function calls:
  8361 ;;		_reverseHalfSquare
  8362 ;;		_rotate180left
  8363 ;; This function is called by:
  8364 ;;		_White
  8365 ;;		_Colour2Action
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text43
  8370   004380                     __ptext43:
  8371                           	callstack 0
  8372   004380                     _Blue_T180:
  8373                           	callstack 22
  8374   004380                     
  8375                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8376   004380  0100               	movlb	0	; () banked
  8377   004382  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8378   004384  B4D8               	btfsc	status,2,c
  8379   004386  EFC7  F021         	goto	u2891
  8380   00438A  EFC9  F021         	goto	u2890
  8381   00438E                     u2891:
  8382   00438E  EFDF  F021         	goto	l3551
  8383   004392                     u2890:
  8384   004392                     
  8385                           ; BSR set to: 0
  8386                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8387   004392  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8388   004396  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8389   00439A  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8390   00439E  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8391   0043A2  ECE6  F01F         	call	_reverseHalfSquare	;wreg free
  8392                           
  8393                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8394   0043A6  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8395   0043AA  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8396   0043AE  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8397   0043B2  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8398   0043B6  ECEA  F021         	call	_rotate180left	;wreg free
  8399                           
  8400                           ;dc_motor.c: 261:     }else{
  8401   0043BA  EFE9  F021         	goto	l296
  8402   0043BE                     l3551:
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8406   0043BE  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8407   0043C2  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8408   0043C6  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8409   0043CA  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8410   0043CE  ECEA  F021         	call	_rotate180left	;wreg free
  8411   0043D2                     l296:
  8412   0043D2  0012               	return		;funcret
  8413   0043D4                     __end_of_Blue_T180:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _rotate180left *****************
  8417 ;; Defined at:
  8418 ;;		line 207 in file "dc_motor.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8421 ;;		 -> motorL(9), 
  8422 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8423 ;;		 -> motorR(9), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;Total ram usage:        4 bytes
  8440 ;; Hardware stack levels used: 1
  8441 ;; Hardware stack levels required when called: 5
  8442 ;; This function calls:
  8443 ;;		_Left45
  8444 ;; This function is called by:
  8445 ;;		_Blue_T180
  8446 ;;		_White
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text44
  8451   0043D4                     __ptext44:
  8452                           	callstack 0
  8453   0043D4                     _rotate180left:
  8454                           	callstack 23
  8455   0043D4                     
  8456                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8457   0043D4  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8458   0043D8  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8459   0043DC  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8460   0043E0  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8461   0043E4  EC5D  F01F         	call	_Left45	;wreg free
  8462                           
  8463                           ;dc_motor.c: 211:     Left45(mL,mR);
  8464   0043E8  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8465   0043EC  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8466   0043F0  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8467   0043F4  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8468   0043F8  EC5D  F01F         	call	_Left45	;wreg free
  8469                           
  8470                           ;dc_motor.c: 212:     Left45(mL,mR);
  8471   0043FC  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8472   004400  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8473   004404  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8474   004408  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8475   00440C  EC5D  F01F         	call	_Left45	;wreg free
  8476                           
  8477                           ;dc_motor.c: 213:     Left45(mL,mR);
  8478   004410  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8479   004414  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8480   004418  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8481   00441C  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8482   004420  EC5D  F01F         	call	_Left45	;wreg free
  8483   004424  0012               	return		;funcret
  8484   004426                     __end_of_rotate180left:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function _Left45 *****************
  8488 ;; Defined at:
  8489 ;;		line 179 in file "dc_motor.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8492 ;;		 -> motorL(9), 
  8493 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8494 ;;		 -> motorR(9), 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:        6 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 4
  8513 ;; This function calls:
  8514 ;;		_stop
  8515 ;;		_turnLeft
  8516 ;; This function is called by:
  8517 ;;		_rotate180left
  8518 ;;		_Red_R90
  8519 ;;		_Green_L90
  8520 ;;		_Yellow_rev1_R90
  8521 ;;		_Pink_rev1_L90
  8522 ;;		_Orange_R135
  8523 ;;		_LightBlue_L135
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           	psect	text45
  8528   003EBA                     __ptext45:
  8529                           	callstack 0
  8530   003EBA                     _Left45:
  8531                           	callstack 24
  8532   003EBA                     
  8533                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8534   003EBA  807E               	bsf	126,0,c	;volatile
  8535   003EBC                     
  8536                           ;dc_motor.c: 183:     stop(mL,mR);
  8537   003EBC  C01A  F014         	movff	Left45@mL,stop@mL
  8538   003EC0  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8539   003EC4  C01C  F016         	movff	Left45@mR,stop@mR
  8540   003EC8  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8541   003ECC  EC88  F01D         	call	_stop	;wreg free
  8542   003ED0                     
  8543                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8544   003ED0  0E05               	movlw	5
  8545   003ED2  6E1F               	movwf	(??_Left45+1)^0,c
  8546   003ED4  0E0F               	movlw	15
  8547   003ED6  6E1E               	movwf	??_Left45^0,c
  8548   003ED8  0EF1               	movlw	241
  8549   003EDA                     u4377:
  8550   003EDA  2EE8               	decfsz	wreg,f,c
  8551   003EDC  D7FE               	bra	u4377
  8552   003EDE  2E1E               	decfsz	??_Left45^0,f,c
  8553   003EE0  D7FC               	bra	u4377
  8554   003EE2  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8555   003EE4  D7FA               	bra	u4377
  8556   003EE6  F000               	nop	
  8557   003EE8                     
  8558                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8559   003EE8  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8560   003EEC  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8561   003EF0  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8562   003EF4  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8563   003EF8  ECCA  F01E         	call	_turnLeft	;wreg free
  8564                           
  8565                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8566   003EFC  0E0C               	movlw	12
  8567   003EFE  6E1F               	movwf	(??_Left45+1)^0,c
  8568   003F00  0EDA               	movlw	218
  8569   003F02  6E1E               	movwf	??_Left45^0,c
  8570   003F04  0EBA               	movlw	186
  8571   003F06                     u4387:
  8572   003F06  2EE8               	decfsz	wreg,f,c
  8573   003F08  D7FE               	bra	u4387
  8574   003F0A  2E1E               	decfsz	??_Left45^0,f,c
  8575   003F0C  D7FC               	bra	u4387
  8576   003F0E  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8577   003F10  D7FA               	bra	u4387
  8578   003F12  D000               	nop2	
  8579   003F14                     
  8580                           ;dc_motor.c: 187:     stop(mL,mR);
  8581   003F14  C01A  F014         	movff	Left45@mL,stop@mL
  8582   003F18  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8583   003F1C  C01C  F016         	movff	Left45@mR,stop@mR
  8584   003F20  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8585   003F24  EC88  F01D         	call	_stop	;wreg free
  8586   003F28                     
  8587                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8588   003F28  0E05               	movlw	5
  8589   003F2A  6E1F               	movwf	(??_Left45+1)^0,c
  8590   003F2C  0E0F               	movlw	15
  8591   003F2E  6E1E               	movwf	??_Left45^0,c
  8592   003F30  0EF1               	movlw	241
  8593   003F32                     u4397:
  8594   003F32  2EE8               	decfsz	wreg,f,c
  8595   003F34  D7FE               	bra	u4397
  8596   003F36  2E1E               	decfsz	??_Left45^0,f,c
  8597   003F38  D7FC               	bra	u4397
  8598   003F3A  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8599   003F3C  D7FA               	bra	u4397
  8600   003F3E  F000               	nop	
  8601   003F40                     
  8602                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8603   003F40  907E               	bcf	126,0,c	;volatile
  8604   003F42  0012               	return		;funcret
  8605   003F44                     __end_of_Left45:
  8606                           	callstack 0
  8607                           
  8608 ;; *************** function _turnLeft *****************
  8609 ;; Defined at:
  8610 ;;		line 113 in file "dc_motor.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8613 ;;		 -> motorL(9), 
  8614 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8615 ;;		 -> motorR(9), 
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;  i               2   23[COMRAM] unsigned int 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;Total ram usage:        6 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 3
  8634 ;; This function calls:
  8635 ;;		_setMotorPWM
  8636 ;; This function is called by:
  8637 ;;		_Left45
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text46
  8642   003D94                     __ptext46:
  8643                           	callstack 0
  8644   003D94                     _turnLeft:
  8645                           	callstack 24
  8646   003D94                     
  8647                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8648   003D94  EE20 F001          	lfsr	2,1
  8649   003D98  5014               	movf	turnLeft@mL^0,w,c
  8650   003D9A  26D9               	addwf	fsr2l,f,c
  8651   003D9C  5015               	movf	(turnLeft@mL+1)^0,w,c
  8652   003D9E  22DA               	addwfc	fsr2h,f,c
  8653   003DA0  0E00               	movlw	0
  8654   003DA2  6EDF               	movwf	indf2,c
  8655                           
  8656                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8657   003DA4  EE20 F001          	lfsr	2,1
  8658   003DA8  5016               	movf	turnLeft@mR^0,w,c
  8659   003DAA  26D9               	addwf	fsr2l,f,c
  8660   003DAC  5017               	movf	(turnLeft@mR+1)^0,w,c
  8661   003DAE  22DA               	addwfc	fsr2h,f,c
  8662   003DB0  0E01               	movlw	1
  8663   003DB2  6EDF               	movwf	indf2,c
  8664   003DB4                     
  8665                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8666   003DB4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8667   003DB8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8668   003DBC  ECED  F017         	call	_setMotorPWM	;wreg free
  8669   003DC0                     
  8670                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8671   003DC0  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8672   003DC4  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8673   003DC8  ECED  F017         	call	_setMotorPWM	;wreg free
  8674   003DCC                     
  8675                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8676   003DCC  0E00               	movlw	0
  8677   003DCE  6E19               	movwf	(turnLeft@i+1)^0,c
  8678   003DD0  0E00               	movlw	0
  8679   003DD2  6E18               	movwf	turnLeft@i^0,c
  8680   003DD4                     l3053:
  8681                           
  8682                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8683   003DD4  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8684   003DD8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8685   003DDC  2ADF               	incf	indf2,f,c
  8686                           
  8687                           ;dc_motor.c: 123:         mR->power++;
  8688   003DDE  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8689   003DE2  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8690   003DE6  2ADF               	incf	indf2,f,c
  8691   003DE8                     
  8692                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8693   003DE8  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8694   003DEC  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8695   003DF0  ECED  F017         	call	_setMotorPWM	;wreg free
  8696   003DF4                     
  8697                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8698   003DF4  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8699   003DF8  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8700   003DFC  ECED  F017         	call	_setMotorPWM	;wreg free
  8701   003E00                     
  8702                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8703   003E00  0EE4               	movlw	228
  8704   003E02                     u4407:
  8705   003E02  D000               	nop2	
  8706   003E04  D000               	nop2	
  8707   003E06  2EE8               	decfsz	wreg,f,c
  8708   003E08  D7FC               	bra	u4407
  8709   003E0A  D000               	nop2	
  8710   003E0C  D000               	nop2	
  8711   003E0E                     
  8712                           ;dc_motor.c: 127:     }
  8713   003E0E  4A18               	infsnz	turnLeft@i^0,f,c
  8714   003E10  2A19               	incf	(turnLeft@i+1)^0,f,c
  8715   003E12  5019               	movf	(turnLeft@i+1)^0,w,c
  8716   003E14  E109               	bnz	u2210
  8717   003E16  0E32               	movlw	50
  8718   003E18  5C18               	subwf	turnLeft@i^0,w,c
  8719   003E1A  A0D8               	btfss	status,0,c
  8720   003E1C  EF12  F01F         	goto	u2211
  8721   003E20  EF14  F01F         	goto	u2210
  8722   003E24                     u2211:
  8723   003E24  EFEA  F01E         	goto	l3053
  8724   003E28                     u2210:
  8725   003E28  0012               	return		;funcret
  8726   003E2A                     __end_of_turnLeft:
  8727                           	callstack 0
  8728                           
  8729 ;; *************** function _reverseHalfSquare *****************
  8730 ;; Defined at:
  8731 ;;		line 216 in file "dc_motor.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8734 ;;		 -> motorL(9), 
  8735 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8736 ;;		 -> motorR(9), 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;Total ram usage:        6 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 4
  8755 ;; This function calls:
  8756 ;;		_fullSpeedReverse
  8757 ;;		_stop
  8758 ;; This function is called by:
  8759 ;;		_Red_R90
  8760 ;;		_Green_L90
  8761 ;;		_Blue_T180
  8762 ;;		_Yellow_rev1_R90
  8763 ;;		_Pink_rev1_L90
  8764 ;;		_Orange_R135
  8765 ;;		_LightBlue_L135
  8766 ;;		_White
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text47
  8771   003FCC                     __ptext47:
  8772                           	callstack 0
  8773   003FCC                     _reverseHalfSquare:
  8774                           	callstack 24
  8775   003FCC                     
  8776                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8777   003FCC  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8778   003FD0  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8779   003FD4  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8780   003FD8  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8781   003FDC  EC88  F01D         	call	_stop	;wreg free
  8782   003FE0                     
  8783                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8784   003FE0  0E09               	movlw	9
  8785   003FE2  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8786   003FE4  0E1E               	movlw	30
  8787   003FE6  6E1F               	movwf	??_reverseHalfSquare^0,c
  8788   003FE8  0EE4               	movlw	228
  8789   003FEA                     u4417:
  8790   003FEA  2EE8               	decfsz	wreg,f,c
  8791   003FEC  D7FE               	bra	u4417
  8792   003FEE  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8793   003FF0  D7FC               	bra	u4417
  8794   003FF2  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8795   003FF4  D7FA               	bra	u4417
  8796   003FF6  D000               	nop2	
  8797   003FF8                     
  8798                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8799   003FF8  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8800   003FFC  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8801   004000  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8802   004004  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8803   004008  EC69  F020         	call	_fullSpeedReverse	;wreg free
  8804                           
  8805                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8806   00400C  0E1D               	movlw	29
  8807   00400E  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8808   004010  0E69               	movlw	105
  8809   004012  6E1F               	movwf	??_reverseHalfSquare^0,c
  8810   004014  0EA5               	movlw	165
  8811   004016                     u4427:
  8812   004016  2EE8               	decfsz	wreg,f,c
  8813   004018  D7FE               	bra	u4427
  8814   00401A  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8815   00401C  D7FC               	bra	u4427
  8816   00401E  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8817   004020  D7FA               	bra	u4427
  8818   004022  F000               	nop	
  8819   004024                     
  8820                           ;dc_motor.c: 222:     stop(mL,mR);
  8821   004024  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8822   004028  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8823   00402C  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8824   004030  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8825   004034  EC88  F01D         	call	_stop	;wreg free
  8826   004038                     
  8827                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8828   004038  0E09               	movlw	9
  8829   00403A  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8830   00403C  0E1E               	movlw	30
  8831   00403E  6E1F               	movwf	??_reverseHalfSquare^0,c
  8832   004040  0EE4               	movlw	228
  8833   004042                     u4437:
  8834   004042  2EE8               	decfsz	wreg,f,c
  8835   004044  D7FE               	bra	u4437
  8836   004046  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8837   004048  D7FC               	bra	u4437
  8838   00404A  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8839   00404C  D7FA               	bra	u4437
  8840   00404E  D000               	nop2	
  8841   004050  0012               	return		;funcret
  8842   004052                     __end_of_reverseHalfSquare:
  8843                           	callstack 0
  8844                           
  8845 ;; *************** function _stop *****************
  8846 ;; Defined at:
  8847 ;;		line 93 in file "dc_motor.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8850 ;;		 -> motorL(9), 
  8851 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8852 ;;		 -> motorR(9), 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;Total ram usage:        5 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; Hardware stack levels required when called: 3
  8871 ;; This function calls:
  8872 ;;		_setMotorPWM
  8873 ;; This function is called by:
  8874 ;;		_main
  8875 ;;		_Left45
  8876 ;;		_Right45
  8877 ;;		_reverseHalfSquare
  8878 ;;		_Yellow_rev1_R90
  8879 ;;		_Pink_rev1_L90
  8880 ;;		_White
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text48
  8885   003B10                     __ptext48:
  8886                           	callstack 0
  8887   003B10                     _stop:
  8888                           	callstack 27
  8889   003B10                     
  8890                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8891   003B10  887C               	bsf	124,4,c	;volatile
  8892                           
  8893                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8894   003B12  EFC1  F01D         	goto	l3037
  8895   003B16                     l3023:
  8896                           
  8897                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8898   003B16  C014  FFD9         	movff	stop@mL,fsr2l
  8899   003B1A  C015  FFDA         	movff	stop@mL+1,fsr2h
  8900   003B1E  50DF               	movf	indf2,w,c
  8901   003B20  B4D8               	btfsc	status,2,c
  8902   003B22  EF95  F01D         	goto	u2171
  8903   003B26  EF97  F01D         	goto	u2170
  8904   003B2A                     u2171:
  8905   003B2A  EF9C  F01D         	goto	l3027
  8906   003B2E                     u2170:
  8907   003B2E                     
  8908                           ;dc_motor.c: 100:             mL->power--;
  8909   003B2E  C014  FFD9         	movff	stop@mL,fsr2l
  8910   003B32  C015  FFDA         	movff	stop@mL+1,fsr2h
  8911   003B36  06DF               	decf	indf2,f,c
  8912   003B38                     l3027:
  8913                           
  8914                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8915   003B38  C016  FFD9         	movff	stop@mR,fsr2l
  8916   003B3C  C017  FFDA         	movff	stop@mR+1,fsr2h
  8917   003B40  50DF               	movf	indf2,w,c
  8918   003B42  B4D8               	btfsc	status,2,c
  8919   003B44  EFA6  F01D         	goto	u2181
  8920   003B48  EFA8  F01D         	goto	u2180
  8921   003B4C                     u2181:
  8922   003B4C  EFAD  F01D         	goto	l3031
  8923   003B50                     u2180:
  8924   003B50                     
  8925                           ;dc_motor.c: 103:             mR->power--;
  8926   003B50  C016  FFD9         	movff	stop@mR,fsr2l
  8927   003B54  C017  FFDA         	movff	stop@mR+1,fsr2h
  8928   003B58  06DF               	decf	indf2,f,c
  8929   003B5A                     l3031:
  8930                           
  8931                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8932   003B5A  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8933   003B5E  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8934   003B62  ECED  F017         	call	_setMotorPWM	;wreg free
  8935   003B66                     
  8936                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8937   003B66  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8938   003B6A  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8939   003B6E  ECED  F017         	call	_setMotorPWM	;wreg free
  8940   003B72                     
  8941                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8942   003B72  0E09               	movlw	9
  8943   003B74  6E18               	movwf	??_stop^0,c
  8944   003B76  0E4E               	movlw	78
  8945   003B78                     u4447:
  8946   003B78  2EE8               	decfsz	wreg,f,c
  8947   003B7A  D7FE               	bra	u4447
  8948   003B7C  2E18               	decfsz	??_stop^0,f,c
  8949   003B7E  D7FC               	bra	u4447
  8950   003B80  D000               	nop2	
  8951   003B82                     l3037:
  8952                           
  8953                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8954   003B82  C014  FFD9         	movff	stop@mL,fsr2l
  8955   003B86  C015  FFDA         	movff	stop@mL+1,fsr2h
  8956   003B8A  50DF               	movf	indf2,w,c
  8957   003B8C  B4D8               	btfsc	status,2,c
  8958   003B8E  EFCB  F01D         	goto	u2191
  8959   003B92  EFCD  F01D         	goto	u2190
  8960   003B96                     u2191:
  8961   003B96  EFD9  F01D         	goto	l248
  8962   003B9A                     u2190:
  8963   003B9A  C016  FFD9         	movff	stop@mR,fsr2l
  8964   003B9E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8965   003BA2  50DF               	movf	indf2,w,c
  8966   003BA4  A4D8               	btfss	status,2,c
  8967   003BA6  EFD7  F01D         	goto	u2201
  8968   003BAA  EFD9  F01D         	goto	u2200
  8969   003BAE                     u2201:
  8970   003BAE  EF8B  F01D         	goto	l3023
  8971   003BB2                     u2200:
  8972   003BB2                     l248:
  8973                           
  8974                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8975   003BB2  987C               	bcf	124,4,c	;volatile
  8976   003BB4  0012               	return		;funcret
  8977   003BB6                     __end_of_stop:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _fullSpeedReverse *****************
  8981 ;; Defined at:
  8982 ;;		line 163 in file "dc_motor.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8985 ;;		 -> motorL(9), 
  8986 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8987 ;;		 -> motorR(9), 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  i               2   24[COMRAM] unsigned int 
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;Total ram usage:        7 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 3
  9006 ;; This function calls:
  9007 ;;		_setMotorPWM
  9008 ;; This function is called by:
  9009 ;;		_reverseHalfSquare
  9010 ;;		_Yellow_rev1_R90
  9011 ;;		_Pink_rev1_L90
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text49
  9016   0040D2                     __ptext49:
  9017                           	callstack 0
  9018   0040D2                     _fullSpeedReverse:
  9019                           	callstack 24
  9020   0040D2                     
  9021                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  9022   0040D2  EE20 F001          	lfsr	2,1
  9023   0040D6  5014               	movf	fullSpeedReverse@mL^0,w,c
  9024   0040D8  26D9               	addwf	fsr2l,f,c
  9025   0040DA  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9026   0040DC  22DA               	addwfc	fsr2h,f,c
  9027   0040DE  0E00               	movlw	0
  9028   0040E0  6EDF               	movwf	indf2,c
  9029                           
  9030                           ;dc_motor.c: 166:  (mR->direction) = 0;
  9031   0040E2  EE20 F001          	lfsr	2,1
  9032   0040E6  5016               	movf	fullSpeedReverse@mR^0,w,c
  9033   0040E8  26D9               	addwf	fsr2l,f,c
  9034   0040EA  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9035   0040EC  22DA               	addwfc	fsr2h,f,c
  9036   0040EE  0E00               	movlw	0
  9037   0040F0  6EDF               	movwf	indf2,c
  9038   0040F2                     
  9039                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  9040   0040F2  0E00               	movlw	0
  9041   0040F4  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9042   0040F6  0E00               	movlw	0
  9043   0040F8  6E19               	movwf	fullSpeedReverse@i^0,c
  9044   0040FA                     l3121:
  9045                           
  9046                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  9047   0040FA  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  9048   0040FE  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  9049   004102  2ADF               	incf	indf2,f,c
  9050                           
  9051                           ;dc_motor.c: 171:         (mR->power)++;
  9052   004104  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  9053   004108  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  9054   00410C  2ADF               	incf	indf2,f,c
  9055   00410E                     
  9056                           ;dc_motor.c: 172:         setMotorPWM(mL);
  9057   00410E  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  9058   004112  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  9059   004116  ECED  F017         	call	_setMotorPWM	;wreg free
  9060   00411A                     
  9061                           ;dc_motor.c: 173:         setMotorPWM(mR);
  9062   00411A  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  9063   00411E  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  9064   004122  ECED  F017         	call	_setMotorPWM	;wreg free
  9065   004126                     
  9066                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9067   004126  0E09               	movlw	9
  9068   004128  6E18               	movwf	??_fullSpeedReverse^0,c
  9069   00412A  0E4E               	movlw	78
  9070   00412C                     u4457:
  9071   00412C  2EE8               	decfsz	wreg,f,c
  9072   00412E  D7FE               	bra	u4457
  9073   004130  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  9074   004132  D7FC               	bra	u4457
  9075   004134  D000               	nop2	
  9076   004136                     
  9077                           ;dc_motor.c: 175:     }
  9078   004136  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  9079   004138  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  9080   00413A  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  9081   00413C  E109               	bnz	u2290
  9082   00413E  0E32               	movlw	50
  9083   004140  5C19               	subwf	fullSpeedReverse@i^0,w,c
  9084   004142  A0D8               	btfss	status,0,c
  9085   004144  EFA6  F020         	goto	u2291
  9086   004148  EFA8  F020         	goto	u2290
  9087   00414C                     u2291:
  9088   00414C  EF7D  F020         	goto	l3121
  9089   004150                     u2290:
  9090   004150  0012               	return		;funcret
  9091   004152                     __end_of_fullSpeedReverse:
  9092                           	callstack 0
  9093                           
  9094 ;; *************** function _setMotorPWM *****************
  9095 ;; Defined at:
  9096 ;;		line 70 in file "dc_motor.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9099 ;;		 -> motorR(9), motorL(9), 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  negDuty         1   18[COMRAM] unsigned char 
  9102 ;;  posDuty         1   17[COMRAM] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9116 ;;Total ram usage:        6 bytes
  9117 ;; Hardware stack levels used: 1
  9118 ;; Hardware stack levels required when called: 2
  9119 ;; This function calls:
  9120 ;;		___lwdiv
  9121 ;;		___wmul
  9122 ;; This function is called by:
  9123 ;;		_stop
  9124 ;;		_turnLeft
  9125 ;;		_turnRight
  9126 ;;		_fullSpeedAhead
  9127 ;;		_fullSpeedReverse
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text50
  9132   002FDA                     __ptext50:
  9133                           	callstack 0
  9134   002FDA                     _setMotorPWM:
  9135                           	callstack 27
  9136   002FDA                     
  9137                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  9138   002FDA  EE20 F002          	lfsr	2,2
  9139   002FDE  500E               	movf	setMotorPWM@m^0,w,c
  9140   002FE0  26D9               	addwf	fsr2l,f,c
  9141   002FE2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9142   002FE4  22DA               	addwfc	fsr2h,f,c
  9143   002FE6  50DF               	movf	indf2,w,c
  9144   002FE8  B4D8               	btfsc	status,2,c
  9145   002FEA  EFF9  F017         	goto	u2151
  9146   002FEE  EFFB  F017         	goto	u2150
  9147   002FF2                     u2151:
  9148   002FF2  EF2F  F018         	goto	l3011
  9149   002FF6                     u2150:
  9150   002FF6                     
  9151                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9152   002FF6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9153   002FFA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9154   002FFE  50DF               	movf	indf2,w,c
  9155   003000  6E10               	movwf	??_setMotorPWM^0,c
  9156   003002  5010               	movf	??_setMotorPWM^0,w,c
  9157   003004  6E01               	movwf	___wmul@multiplier^0,c
  9158   003006  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9159   003008  EE20 F003          	lfsr	2,3
  9160   00300C  500E               	movf	setMotorPWM@m^0,w,c
  9161   00300E  26D9               	addwf	fsr2l,f,c
  9162   003010  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9163   003012  22DA               	addwfc	fsr2h,f,c
  9164   003014  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9165   003018  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9166   00301C  EC3A  F024         	call	___wmul	;wreg free
  9167   003020  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9168   003024  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9169   003028  0E00               	movlw	0
  9170   00302A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9171   00302C  0E64               	movlw	100
  9172   00302E  6E09               	movwf	___lwdiv@divisor^0,c
  9173   003030  EC25  F021         	call	___lwdiv	;wreg free
  9174   003034  EE20 F003          	lfsr	2,3
  9175   003038  500E               	movf	setMotorPWM@m^0,w,c
  9176   00303A  26D9               	addwf	fsr2l,f,c
  9177   00303C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9178   00303E  22DA               	addwfc	fsr2h,f,c
  9179   003040  50DF               	movf	indf2,w,c
  9180   003042  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9181   003044  5007               	movf	?___lwdiv^0,w,c
  9182   003046  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9183   003048  6E12               	movwf	setMotorPWM@posDuty^0,c
  9184   00304A                     
  9185                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9186   00304A  EE20 F003          	lfsr	2,3
  9187   00304E  500E               	movf	setMotorPWM@m^0,w,c
  9188   003050  26D9               	addwf	fsr2l,f,c
  9189   003052  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9190   003054  22DA               	addwfc	fsr2h,f,c
  9191   003056  50DF               	movf	indf2,w,c
  9192   003058  6E13               	movwf	setMotorPWM@negDuty^0,c
  9193                           
  9194                           ;dc_motor.c: 77:     }
  9195   00305A  EF52  F018         	goto	l3015
  9196   00305E                     l3011:
  9197                           
  9198                           ;dc_motor.c: 79:         posDuty=0;
  9199   00305E  0E00               	movlw	0
  9200   003060  6E12               	movwf	setMotorPWM@posDuty^0,c
  9201   003062                     
  9202                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9203   003062  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9204   003066  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9205   00306A  50DF               	movf	indf2,w,c
  9206   00306C  6E10               	movwf	??_setMotorPWM^0,c
  9207   00306E  5010               	movf	??_setMotorPWM^0,w,c
  9208   003070  6E01               	movwf	___wmul@multiplier^0,c
  9209   003072  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9210   003074  EE20 F003          	lfsr	2,3
  9211   003078  500E               	movf	setMotorPWM@m^0,w,c
  9212   00307A  26D9               	addwf	fsr2l,f,c
  9213   00307C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9214   00307E  22DA               	addwfc	fsr2h,f,c
  9215   003080  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9216   003084  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9217   003088  EC3A  F024         	call	___wmul	;wreg free
  9218   00308C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9219   003090  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9220   003094  0E00               	movlw	0
  9221   003096  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9222   003098  0E64               	movlw	100
  9223   00309A  6E09               	movwf	___lwdiv@divisor^0,c
  9224   00309C  EC25  F021         	call	___lwdiv	;wreg free
  9225   0030A0  5007               	movf	?___lwdiv^0,w,c
  9226   0030A2  6E13               	movwf	setMotorPWM@negDuty^0,c
  9227   0030A4                     l3015:
  9228                           
  9229                           ;dc_motor.c: 83:     if (m->direction) {
  9230   0030A4  EE20 F001          	lfsr	2,1
  9231   0030A8  500E               	movf	setMotorPWM@m^0,w,c
  9232   0030AA  26D9               	addwf	fsr2l,f,c
  9233   0030AC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9234   0030AE  22DA               	addwfc	fsr2h,f,c
  9235   0030B0  50DF               	movf	indf2,w,c
  9236   0030B2  B4D8               	btfsc	status,2,c
  9237   0030B4  EF5E  F018         	goto	u2161
  9238   0030B8  EF60  F018         	goto	u2160
  9239   0030BC                     u2161:
  9240   0030BC  EF82  F018         	goto	l3019
  9241   0030C0                     u2160:
  9242   0030C0                     
  9243                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9244   0030C0  EE20 F005          	lfsr	2,5
  9245   0030C4  500E               	movf	setMotorPWM@m^0,w,c
  9246   0030C6  26D9               	addwf	fsr2l,f,c
  9247   0030C8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9248   0030CA  22DA               	addwfc	fsr2h,f,c
  9249   0030CC  CFDE F010          	movff	postinc2,??_setMotorPWM
  9250   0030D0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9251   0030D4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9252   0030D8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9253   0030DC  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9254                           
  9255                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9256   0030E0  EE20 F007          	lfsr	2,7
  9257   0030E4  500E               	movf	setMotorPWM@m^0,w,c
  9258   0030E6  26D9               	addwf	fsr2l,f,c
  9259   0030E8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9260   0030EA  22DA               	addwfc	fsr2h,f,c
  9261   0030EC  CFDE F010          	movff	postinc2,??_setMotorPWM
  9262   0030F0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9263   0030F4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9264   0030F8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9265   0030FC  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9266                           
  9267                           ;dc_motor.c: 86:     } else {
  9268   003100  EFA2  F018         	goto	l239
  9269   003104                     l3019:
  9270                           
  9271                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9272   003104  EE20 F005          	lfsr	2,5
  9273   003108  500E               	movf	setMotorPWM@m^0,w,c
  9274   00310A  26D9               	addwf	fsr2l,f,c
  9275   00310C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9276   00310E  22DA               	addwfc	fsr2h,f,c
  9277   003110  CFDE F010          	movff	postinc2,??_setMotorPWM
  9278   003114  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9279   003118  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9280   00311C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9281   003120  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9282                           
  9283                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9284   003124  EE20 F007          	lfsr	2,7
  9285   003128  500E               	movf	setMotorPWM@m^0,w,c
  9286   00312A  26D9               	addwf	fsr2l,f,c
  9287   00312C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9288   00312E  22DA               	addwfc	fsr2h,f,c
  9289   003130  CFDE F010          	movff	postinc2,??_setMotorPWM
  9290   003134  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9291   003138  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9292   00313C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9293   003140  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9294   003144                     l239:
  9295   003144  0012               	return		;funcret
  9296   003146                     __end_of_setMotorPWM:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function ___wmul *****************
  9300 ;; Defined at:
  9301 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  multiplier      2    0[COMRAM] unsigned int 
  9304 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  product         2    4[COMRAM] unsigned int 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2    0[COMRAM] unsigned int 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, prodl, prodh
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9320 ;;Total ram usage:        6 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_setMotorPWM
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           	psect	text51
  9331   004874                     __ptext51:
  9332                           	callstack 0
  9333   004874                     ___wmul:
  9334                           	callstack 27
  9335   004874  5001               	movf	___wmul@multiplier^0,w,c
  9336   004876  0203               	mulwf	___wmul@multiplicand^0,c
  9337   004878  CFF3 F005          	movff	prodl,___wmul@product
  9338   00487C  CFF4 F006          	movff	prodh,___wmul@product+1
  9339   004880  5001               	movf	___wmul@multiplier^0,w,c
  9340   004882  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9341   004884  50F3               	movf	243,w,c
  9342   004886  2606               	addwf	(___wmul@product+1)^0,f,c
  9343   004888  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9344   00488A  0203               	mulwf	___wmul@multiplicand^0,c
  9345   00488C  50F3               	movf	243,w,c
  9346   00488E  2606               	addwf	(___wmul@product+1)^0,f,c
  9347   004890  C005  F001         	movff	___wmul@product,?___wmul
  9348   004894  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9349   004898  0012               	return		;funcret
  9350   00489A                     __end_of___wmul:
  9351                           	callstack 0
  9352                           
  9353 ;; *************** function ___lwdiv *****************
  9354 ;; Defined at:
  9355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  dividend        2    6[COMRAM] unsigned int 
  9358 ;;  divisor         2    8[COMRAM] unsigned int 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  quotient        2   10[COMRAM] unsigned int 
  9361 ;;  counter         1   12[COMRAM] unsigned char 
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  2    6[COMRAM] unsigned int 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;Total ram usage:        7 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; Hardware stack levels required when called: 1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_setMotorPWM
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text52
  9386   00424A                     __ptext52:
  9387                           	callstack 0
  9388   00424A                     ___lwdiv:
  9389                           	callstack 27
  9390   00424A  0E00               	movlw	0
  9391   00424C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9392   00424E  0E00               	movlw	0
  9393   004250  6E0B               	movwf	___lwdiv@quotient^0,c
  9394   004252  5009               	movf	___lwdiv@divisor^0,w,c
  9395   004254  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9396   004256  B4D8               	btfsc	status,2,c
  9397   004258  EF30  F021         	goto	u2121
  9398   00425C  EF32  F021         	goto	u2120
  9399   004260                     u2121:
  9400   004260  EF5A  F021         	goto	l1161
  9401   004264                     u2120:
  9402   004264  0E01               	movlw	1
  9403   004266  6E0D               	movwf	___lwdiv@counter^0,c
  9404   004268  EF3A  F021         	goto	l2991
  9405   00426C                     l2989:
  9406   00426C  90D8               	bcf	status,0,c
  9407   00426E  3609               	rlcf	___lwdiv@divisor^0,f,c
  9408   004270  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9409   004272  2A0D               	incf	___lwdiv@counter^0,f,c
  9410   004274                     l2991:
  9411   004274  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9412   004276  EF3F  F021         	goto	u2131
  9413   00427A  EF41  F021         	goto	u2130
  9414   00427E                     u2131:
  9415   00427E  EF36  F021         	goto	l2989
  9416   004282                     u2130:
  9417   004282                     l2993:
  9418   004282  90D8               	bcf	status,0,c
  9419   004284  360B               	rlcf	___lwdiv@quotient^0,f,c
  9420   004286  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9421   004288  5009               	movf	___lwdiv@divisor^0,w,c
  9422   00428A  5C07               	subwf	___lwdiv@dividend^0,w,c
  9423   00428C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9424   00428E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9425   004290  A0D8               	btfss	status,0,c
  9426   004292  EF4D  F021         	goto	u2141
  9427   004296  EF4F  F021         	goto	u2140
  9428   00429A                     u2141:
  9429   00429A  EF54  F021         	goto	l3001
  9430   00429E                     u2140:
  9431   00429E  5009               	movf	___lwdiv@divisor^0,w,c
  9432   0042A0  5E07               	subwf	___lwdiv@dividend^0,f,c
  9433   0042A2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9434   0042A4  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9435   0042A6  800B               	bsf	___lwdiv@quotient^0,0,c
  9436   0042A8                     l3001:
  9437   0042A8  90D8               	bcf	status,0,c
  9438   0042AA  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9439   0042AC  3209               	rrcf	___lwdiv@divisor^0,f,c
  9440   0042AE  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9441   0042B0  EF41  F021         	goto	l2993
  9442   0042B4                     l1161:
  9443   0042B4  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9444   0042B8  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9445   0042BC  0012               	return		;funcret
  9446   0042BE                     __end_of___lwdiv:
  9447                           	callstack 0
  9448                           
  9449 ;; *************** function _Color2String *****************
  9450 ;; Defined at:
  9451 ;;		line 39 in file "serial.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  buf             2   68[COMRAM] PTR unsigned char 
  9454 ;;		 -> main@data(100), 
  9455 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  9456 ;;		 -> colorf(22), 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  9459 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9460 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9461 ;;		 -> STR_2(1), 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      void 
  9464 ;; Registers used:
  9465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;Total ram usage:        6 bytes
  9476 ;; Hardware stack levels used: 1
  9477 ;; Hardware stack levels required when called: 7
  9478 ;; This function calls:
  9479 ;;		_Hue2Colour
  9480 ;;		_sendStringSerial4
  9481 ;;		_sprintf
  9482 ;; This function is called by:
  9483 ;;		_main
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text53
  9488   00471A                     __ptext53:
  9489                           	callstack 0
  9490   00471A                     _Color2String:
  9491                           	callstack 23
  9492   00471A                     
  9493                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9494   00471A  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  9495   00471E  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9496   004722  ECBF  F00A         	call	_Hue2Colour	;wreg free
  9497   004726  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  9498   00472A  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9499   00472E                     
  9500                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9501   00472E  C045  F032         	movff	Color2String@buf,sprintf@s
  9502   004732  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  9503   004736  0E01               	movlw	low STR_1
  9504   004738  6E34               	movwf	sprintf@fmt^0,c
  9505   00473A  0E0E               	movlw	high STR_1
  9506   00473C  6E35               	movwf	(sprintf@fmt+1)^0,c
  9507   00473E  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  9508   004742  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9509   004746  ECDB  F022         	call	_sprintf	;wreg free
  9510   00474A                     
  9511                           ;serial.c: 45:     sendStringSerial4(buf);
  9512   00474A  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  9513   00474E  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9514   004752  ECAC  F023         	call	_sendStringSerial4	;wreg free
  9515   004756  0012               	return		;funcret
  9516   004758                     __end_of_Color2String:
  9517                           	callstack 0
  9518                           
  9519 ;; *************** function _sprintf *****************
  9520 ;; Defined at:
  9521 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;  s               2   49[COMRAM] PTR unsigned char 
  9524 ;;		 -> main@data(100), 
  9525 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9526 ;;		 -> STR_1(16), 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  f              11   57[COMRAM] struct _IO_FILE
  9529 ;;  ap              2   55[COMRAM] PTR void [1]
  9530 ;;		 -> ?_sprintf(2), 
  9531 ;;  ret             2    0        int 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  2   49[COMRAM] int 
  9534 ;; Registers used:
  9535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9541 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;Total ram usage:       19 bytes
  9546 ;; Hardware stack levels used: 1
  9547 ;; Hardware stack levels required when called: 6
  9548 ;; This function calls:
  9549 ;;		_vfprintf
  9550 ;; This function is called by:
  9551 ;;		_Color2String
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text54
  9556   0045B6                     __ptext54:
  9557                           	callstack 0
  9558   0045B6                     _sprintf:
  9559                           	callstack 23
  9560   0045B6  0E36               	movlw	low (?_sprintf+4)
  9561   0045B8  6E38               	movwf	sprintf@ap^0,c
  9562   0045BA  0E00               	movlw	high (?_sprintf+4)
  9563   0045BC  6E39               	movwf	(sprintf@ap+1)^0,c
  9564   0045BE  C032  F03A         	movff	sprintf@s,sprintf@f
  9565   0045C2  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9566   0045C6  0E00               	movlw	0
  9567   0045C8  6E3E               	movwf	(sprintf@f+4)^0,c
  9568   0045CA  0E00               	movlw	0
  9569   0045CC  6E3D               	movwf	(sprintf@f+3)^0,c
  9570   0045CE  0E00               	movlw	0
  9571   0045D0  6E44               	movwf	(sprintf@f+10)^0,c
  9572   0045D2  0E00               	movlw	0
  9573   0045D4  6E43               	movwf	(sprintf@f+9)^0,c
  9574   0045D6  0E3A               	movlw	low sprintf@f
  9575   0045D8  6E2A               	movwf	vfprintf@fp^0,c
  9576   0045DA  0E00               	movlw	high sprintf@f
  9577   0045DC  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9578   0045DE  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9579   0045E2  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9580   0045E6  0E38               	movlw	low sprintf@ap
  9581   0045E8  6E2E               	movwf	vfprintf@ap^0,c
  9582   0045EA  0E00               	movlw	high sprintf@ap
  9583   0045EC  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9584   0045EE  EC02  F023         	call	_vfprintf	;wreg free
  9585   0045F2  503D               	movf	(sprintf@f+3)^0,w,c
  9586   0045F4  2432               	addwf	sprintf@s^0,w,c
  9587   0045F6  6ED9               	movwf	fsr2l,c
  9588   0045F8  503E               	movf	(sprintf@f+4)^0,w,c
  9589   0045FA  2033               	addwfc	(sprintf@s+1)^0,w,c
  9590   0045FC  6EDA               	movwf	fsr2h,c
  9591   0045FE  0E00               	movlw	0
  9592   004600  6EDF               	movwf	indf2,c
  9593   004602  0012               	return		;funcret
  9594   004604                     __end_of_sprintf:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _vfprintf *****************
  9598 ;; Defined at:
  9599 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9602 ;;		 -> sprintf@f(11), 
  9603 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9604 ;;		 -> STR_1(16), 
  9605 ;;  ap              2   45[COMRAM] PTR PTR void 
  9606 ;;		 -> sprintf@ap(2), 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9609 ;;		 -> STR_1(16), 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  2   41[COMRAM] int 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9619 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;Total ram usage:        8 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 5
  9626 ;; This function calls:
  9627 ;;		_vfpfcnvrt
  9628 ;; This function is called by:
  9629 ;;		_sprintf
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text55
  9634   004604                     __ptext55:
  9635                           	callstack 0
  9636   004604                     _vfprintf:
  9637                           	callstack 23
  9638   004604                     
  9639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9640   004604  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9641   004608  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9642                           
  9643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9644   00460C  EF16  F023         	goto	l3837
  9645   004610                     l3835:
  9646                           
  9647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9648   004610  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9649   004614  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9650   004618  0E30               	movlw	low vfprintf@cfmt
  9651   00461A  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9652   00461C  0E00               	movlw	high vfprintf@cfmt
  9653   00461E  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9654   004620  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9655   004624  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9656   004628  ECA3  F018         	call	_vfpfcnvrt	;wreg free
  9657   00462C                     l3837:
  9658                           
  9659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9660   00462C  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9661   004630  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9662   004634                     	if	0	;tblptru may be non-zero
  9663   004634                     	endif
  9664   004634                     	if	0	;tblptru may be non-zero
  9665   004634                     	endif
  9666   004634  0008               	tblrd		*
  9667   004636  50F5               	movf	tablat,w,c
  9668   004638  0900               	iorlw	0
  9669   00463A  A4D8               	btfss	status,2,c
  9670   00463C  EF22  F023         	goto	u3391
  9671   004640  EF24  F023         	goto	u3390
  9672   004644                     u3391:
  9673   004644  EF08  F023         	goto	l3835
  9674   004648                     u3390:
  9675   004648                     
  9676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9677   004648  0E00               	movlw	0
  9678   00464A  6E2B               	movwf	(?_vfprintf+1)^0,c
  9679   00464C  0E00               	movlw	0
  9680   00464E  6E2A               	movwf	?_vfprintf^0,c
  9681   004650  0012               	return		;funcret
  9682   004652                     __end_of_vfprintf:
  9683                           	callstack 0
  9684                           
  9685 ;; *************** function _vfpfcnvrt *****************
  9686 ;; Defined at:
  9687 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9690 ;;		 -> sprintf@f(11), 
  9691 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9692 ;;		 -> vfprintf@cfmt(2), 
  9693 ;;  ap              2   35[COMRAM] PTR PTR void 
  9694 ;;		 -> sprintf@ap(2), 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  convarg         8    0        struct .
  9697 ;;  cp              3    0        PTR unsigned char 
  9698 ;;  i               2    0        int 
  9699 ;;  done            2    0        int 
  9700 ;;  c               1    0        unsigned char 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9710 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;Total ram usage:       10 bytes
  9715 ;; Hardware stack levels used: 1
  9716 ;; Hardware stack levels required when called: 4
  9717 ;; This function calls:
  9718 ;;		_fputc
  9719 ;;		_stoa
  9720 ;;		_strncmp
  9721 ;; This function is called by:
  9722 ;;		_vfprintf
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text56
  9727   003146                     __ptext56:
  9728                           	callstack 0
  9729   003146                     _vfpfcnvrt:
  9730                           	callstack 23
  9731   003146                     
  9732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9733   003146  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9734   00314A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9735   00314E  CFDE FFF6          	movff	postinc2,tblptrl
  9736   003152  CFDD FFF7          	movff	postdec2,tblptrh
  9737   003156                     	if	0	;tblptru may be non-zero
  9738   003156                     	endif
  9739   003156                     	if	0	;tblptru may be non-zero
  9740   003156                     	endif
  9741   003156  0008               	tblrd		*
  9742   003158  50F5               	movf	tablat,w,c
  9743   00315A  0A25               	xorlw	37
  9744   00315C  A4D8               	btfss	status,2,c
  9745   00315E  EFB3  F018         	goto	u2811
  9746   003162  EFB5  F018         	goto	u2810
  9747   003166                     u2811:
  9748   003166  EF3B  F019         	goto	l3497
  9749   00316A                     u2810:
  9750   00316A                     
  9751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9752   00316A  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9753   00316E  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9754   003172  2ADE               	incf	postinc2,f,c
  9755   003174  0E00               	movlw	0
  9756   003176  22DD               	addwfc	postdec2,f,c
  9757   003178                     
  9758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9759   003178  0E00               	movlw	0
  9760   00317A  0101               	movlb	1	; () banked
  9761   00317C  6F21               	movwf	(_width+1)& (0+255),b
  9762   00317E  0E00               	movlw	0
  9763   003180  6F20               	movwf	_width& (0+255),b
  9764   003182  C120  F0F4         	movff	_width,_flags
  9765   003186                     
  9766                           ; BSR set to: 1
  9767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9768   003186  6922               	setf	_prec& (0+255),b
  9769   003188  6923               	setf	(_prec+1)& (0+255),b
  9770   00318A                     
  9771                           ; BSR set to: 1
  9772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9773   00318A  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9774   00318E  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9775   003192  CFDE FFF6          	movff	postinc2,tblptrl
  9776   003196  CFDD FFF7          	movff	postdec2,tblptrh
  9777   00319A                     	if	0	;tblptru may be non-zero
  9778   00319A                     	endif
  9779   00319A                     	if	0	;tblptru may be non-zero
  9780   00319A                     	endif
  9781   00319A  0008               	tblrd		*
  9782   00319C  50F5               	movf	tablat,w,c
  9783   00319E  0A73               	xorlw	115
  9784   0031A0  B4D8               	btfsc	status,2,c
  9785   0031A2  EFD5  F018         	goto	u2821
  9786   0031A6  EFD7  F018         	goto	u2820
  9787   0031AA                     u2821:
  9788   0031AA  EFF2  F018         	goto	l3481
  9789   0031AE                     u2820:
  9790   0031AE                     
  9791                           ; BSR set to: 1
  9792   0031AE  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9793   0031B2  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9794   0031B6  CFDE F001          	movff	postinc2,strncmp@_l
  9795   0031BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  9796   0031BE  0E48               	movlw	low STR_11
  9797   0031C0  6E03               	movwf	strncmp@_r^0,c
  9798   0031C2  0E0E               	movlw	high STR_11
  9799   0031C4  6E04               	movwf	(strncmp@_r+1)^0,c
  9800   0031C6  0E00               	movlw	0
  9801   0031C8  6E06               	movwf	(strncmp@n+1)^0,c
  9802   0031CA  0E03               	movlw	3
  9803   0031CC  6E05               	movwf	strncmp@n^0,c
  9804   0031CE  EC5F  F01C         	call	_strncmp	;wreg free
  9805   0031D2  5001               	movf	?_strncmp^0,w,c
  9806   0031D4  1002               	iorwf	(?_strncmp+1)^0,w,c
  9807   0031D6  A4D8               	btfss	status,2,c
  9808   0031D8  EFF0  F018         	goto	u2831
  9809   0031DC  EFF2  F018         	goto	u2830
  9810   0031E0                     u2831:
  9811   0031E0  EF32  F019         	goto	l3493
  9812   0031E4                     u2830:
  9813   0031E4                     l3481:
  9814                           
  9815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9816   0031E4  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9817   0031E8  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9818   0031EC  CFDE FFF6          	movff	postinc2,tblptrl
  9819   0031F0  CFDD FFF7          	movff	postdec2,tblptrh
  9820   0031F4                     	if	0	;tblptru may be non-zero
  9821   0031F4                     	endif
  9822   0031F4                     	if	0	;tblptru may be non-zero
  9823   0031F4                     	endif
  9824   0031F4  0008               	tblrd		*
  9825   0031F6  50F5               	movf	tablat,w,c
  9826   0031F8  0A73               	xorlw	115
  9827   0031FA  B4D8               	btfsc	status,2,c
  9828   0031FC  EF02  F019         	goto	u2841
  9829   003200  EF04  F019         	goto	u2840
  9830   003204                     u2841:
  9831   003204  EF0A  F019         	goto	l3485
  9832   003208                     u2840:
  9833   003208  0E00               	movlw	0
  9834   00320A  6E29               	movwf	(_vfpfcnvrt$2854+1)^0,c
  9835   00320C  0E03               	movlw	3
  9836   00320E  6E28               	movwf	_vfpfcnvrt$2854^0,c
  9837   003210  EF0E  F019         	goto	l3487
  9838   003214                     l3485:
  9839   003214  0E00               	movlw	0
  9840   003216  6E29               	movwf	(_vfpfcnvrt$2854+1)^0,c
  9841   003218  0E01               	movlw	1
  9842   00321A  6E28               	movwf	_vfpfcnvrt$2854^0,c
  9843   00321C                     l3487:
  9844   00321C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9845   003220  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9846   003224  5028               	movf	_vfpfcnvrt$2854^0,w,c
  9847   003226  26DE               	addwf	postinc2,f,c
  9848   003228  5029               	movf	(_vfpfcnvrt$2854+1)^0,w,c
  9849   00322A  22DD               	addwfc	postdec2,f,c
  9850   00322C                     
  9851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9852   00322C  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9853   003230  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9854   003234  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9855   003238  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9856   00323C  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9857   003240  0E02               	movlw	2
  9858   003242  26DE               	addwf	postinc2,f,c
  9859   003244  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9860   003248  0E00               	movlw	0
  9861   00324A  22DD               	addwfc	postdec2,f,c
  9862   00324C  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9863   003250  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9864   003254  CFDE F00C          	movff	postinc2,stoa@s
  9865   003258  CFDD F00D          	movff	postdec2,stoa@s+1
  9866   00325C  EC50  F019         	call	_stoa	;wreg free
  9867   003260  EF4F  F019         	goto	l1405
  9868   003264                     l3493:
  9869                           
  9870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9871   003264  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9872   003268  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9873   00326C  2ADE               	incf	postinc2,f,c
  9874   00326E  0E00               	movlw	0
  9875   003270  22DD               	addwfc	postdec2,f,c
  9876   003272  EF4F  F019         	goto	l1405
  9877   003276                     l3497:
  9878                           
  9879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9880   003276  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9881   00327A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9882   00327E  CFDE FFF6          	movff	postinc2,tblptrl
  9883   003282  CFDD FFF7          	movff	postdec2,tblptrh
  9884   003286                     	if	0	;tblptru may be non-zero
  9885   003286                     	endif
  9886   003286                     	if	0	;tblptru may be non-zero
  9887   003286                     	endif
  9888   003286  0008               	tblrd		*
  9889   003288  50F5               	movf	tablat,w,c
  9890   00328A  6E01               	movwf	fputc@c^0,c
  9891   00328C  6A02               	clrf	(fputc@c+1)^0,c
  9892   00328E  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9893   003292  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9894   003296  ECCE  F01C         	call	_fputc	;wreg free
  9895   00329A  EF32  F019         	goto	l3493
  9896   00329E                     l1405:
  9897   00329E  0012               	return		;funcret
  9898   0032A0                     __end_of_vfpfcnvrt:
  9899                           	callstack 0
  9900                           
  9901 ;; *************** function _strncmp *****************
  9902 ;; Defined at:
  9903 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9906 ;;		 -> STR_1(16), 
  9907 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9908 ;;		 -> STR_13(4), 
  9909 ;;  n               2    4[COMRAM] unsigned int 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9912 ;;		 -> STR_13(4), 
  9913 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9914 ;;		 -> STR_1(16), 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  2    0[COMRAM] int 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9924 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9927 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;Total ram usage:       11 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; Hardware stack levels required when called: 1
  9931 ;; This function calls:
  9932 ;;		Nothing
  9933 ;; This function is called by:
  9934 ;;		_vfpfcnvrt
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text57
  9939   0038BE                     __ptext57:
  9940                           	callstack 0
  9941   0038BE                     _strncmp:
  9942                           	callstack 25
  9943   0038BE  C001  F008         	movff	strncmp@_l,strncmp@l
  9944   0038C2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9945   0038C6  C003  F00A         	movff	strncmp@_r,strncmp@r
  9946   0038CA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9947   0038CE  0605               	decf	strncmp@n^0,f,c
  9948   0038D0  A0D8               	btfss	status,0,c
  9949   0038D2  0606               	decf	(strncmp@n+1)^0,f,c
  9950   0038D4  2805               	incf	strncmp@n^0,w,c
  9951   0038D6  E106               	bnz	u2371
  9952   0038D8  2806               	incf	(strncmp@n+1)^0,w,c
  9953   0038DA  A4D8               	btfss	status,2,c
  9954   0038DC  EF72  F01C         	goto	u2371
  9955   0038E0  EF74  F01C         	goto	u2370
  9956   0038E4                     u2371:
  9957   0038E4  EF81  F01C         	goto	l3187
  9958   0038E8                     u2370:
  9959   0038E8  0E00               	movlw	0
  9960   0038EA  6E02               	movwf	(?_strncmp+1)^0,c
  9961   0038EC  0E00               	movlw	0
  9962   0038EE  6E01               	movwf	?_strncmp^0,c
  9963   0038F0  EFCD  F01C         	goto	l1444
  9964   0038F4                     l3185:
  9965   0038F4  4A08               	infsnz	strncmp@l^0,f,c
  9966   0038F6  2A09               	incf	(strncmp@l+1)^0,f,c
  9967   0038F8  4A0A               	infsnz	strncmp@r^0,f,c
  9968   0038FA  2A0B               	incf	(strncmp@r+1)^0,f,c
  9969   0038FC  0605               	decf	strncmp@n^0,f,c
  9970   0038FE  A0D8               	btfss	status,0,c
  9971   003900  0606               	decf	(strncmp@n+1)^0,f,c
  9972   003902                     l3187:
  9973   003902  C008  FFF6         	movff	strncmp@l,tblptrl
  9974   003906  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9975   00390A                     	if	0	;tblptru may be non-zero
  9976   00390A                     	endif
  9977   00390A                     	if	0	;tblptru may be non-zero
  9978   00390A                     	endif
  9979   00390A  0008               	tblrd		*
  9980   00390C  50F5               	movf	tablat,w,c
  9981   00390E  0900               	iorlw	0
  9982   003910  B4D8               	btfsc	status,2,c
  9983   003912  EF8D  F01C         	goto	u2381
  9984   003916  EF8F  F01C         	goto	u2380
  9985   00391A                     u2381:
  9986   00391A  EFBB  F01C         	goto	l3195
  9987   00391E                     u2380:
  9988   00391E  C00A  FFF6         	movff	strncmp@r,tblptrl
  9989   003922  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9990   003926                     	if	0	;tblptru may be non-zero
  9991   003926                     	endif
  9992   003926                     	if	0	;tblptru may be non-zero
  9993   003926                     	endif
  9994   003926  0008               	tblrd		*
  9995   003928  50F5               	movf	tablat,w,c
  9996   00392A  0900               	iorlw	0
  9997   00392C  B4D8               	btfsc	status,2,c
  9998   00392E  EF9B  F01C         	goto	u2391
  9999   003932  EF9D  F01C         	goto	u2390
 10000   003936                     u2391:
 10001   003936  EFBB  F01C         	goto	l3195
 10002   00393A                     u2390:
 10003   00393A  5005               	movf	strncmp@n^0,w,c
 10004   00393C  1006               	iorwf	(strncmp@n+1)^0,w,c
 10005   00393E  B4D8               	btfsc	status,2,c
 10006   003940  EFA4  F01C         	goto	u2401
 10007   003944  EFA6  F01C         	goto	u2400
 10008   003948                     u2401:
 10009   003948  EFBB  F01C         	goto	l3195
 10010   00394C                     u2400:
 10011   00394C  C008  FFF6         	movff	strncmp@l,tblptrl
 10012   003950  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10013   003954                     	if	0	;tblptru may be non-zero
 10014   003954                     	endif
 10015   003954                     	if	0	;tblptru may be non-zero
 10016   003954                     	endif
 10017   003954  0008               	tblrd		*
 10018   003956  CFF5 F007          	movff	tablat,??_strncmp
 10019   00395A  C00A  FFF6         	movff	strncmp@r,tblptrl
 10020   00395E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10021   003962                     	if	0	;tblptru may be non-zero
 10022   003962                     	endif
 10023   003962                     	if	0	;tblptru may be non-zero
 10024   003962                     	endif
 10025   003962  0008               	tblrd		*
 10026   003964  50F5               	movf	tablat,w,c
 10027   003966  1807               	xorwf	??_strncmp^0,w,c
 10028   003968  B4D8               	btfsc	status,2,c
 10029   00396A  EFB9  F01C         	goto	u2411
 10030   00396E  EFBB  F01C         	goto	u2410
 10031   003972                     u2411:
 10032   003972  EF7A  F01C         	goto	l3185
 10033   003976                     u2410:
 10034   003976                     l3195:
 10035   003976  C008  FFF6         	movff	strncmp@l,tblptrl
 10036   00397A  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10037   00397E                     	if	0	;tblptru may be non-zero
 10038   00397E                     	endif
 10039   00397E                     	if	0	;tblptru may be non-zero
 10040   00397E                     	endif
 10041   00397E  0008               	tblrd		*
 10042   003980  CFF5 F007          	movff	tablat,??_strncmp
 10043   003984  C00A  FFF6         	movff	strncmp@r,tblptrl
 10044   003988  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10045   00398C                     	if	0	;tblptru may be non-zero
 10046   00398C                     	endif
 10047   00398C                     	if	0	;tblptru may be non-zero
 10048   00398C                     	endif
 10049   00398C  0008               	tblrd		*
 10050   00398E  50F5               	movf	tablat,w,c
 10051   003990  5C07               	subwf	??_strncmp^0,w,c
 10052   003992  6E01               	movwf	?_strncmp^0,c
 10053   003994  6A02               	clrf	(?_strncmp+1)^0,c
 10054   003996  A0D8               	btfss	status,0,c
 10055   003998  0602               	decf	(?_strncmp+1)^0,f,c
 10056   00399A                     l1444:
 10057   00399A  0012               	return		;funcret
 10058   00399C                     __end_of_strncmp:
 10059                           	callstack 0
 10060                           
 10061 ;; *************** function _stoa *****************
 10062 ;; Defined at:
 10063 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 10066 ;;		 -> sprintf@f(11), 
 10067 ;;  s               2   11[COMRAM] PTR unsigned char 
 10068 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
 10069 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
 10070 ;;		 -> STR_3(4), STR_2(1), 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  nuls            7   14[COMRAM] unsigned char [7]
 10073 ;;  p               2   29[COMRAM] int 
 10074 ;;  l               2   27[COMRAM] int 
 10075 ;;  cp              2   25[COMRAM] PTR unsigned char 
 10076 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10077 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10078 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10079 ;;  i               2   23[COMRAM] int 
 10080 ;;  w               2   21[COMRAM] int 
 10081 ;; Return value:  Size  Location     Type
 10082 ;;                  1    wreg      void 
 10083 ;; Registers used:
 10084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10085 ;; Tracked objects:
 10086 ;;		On entry : 0/0
 10087 ;;		On exit  : 0/0
 10088 ;;		Unchanged: 0/0
 10089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10094 ;;Total ram usage:       22 bytes
 10095 ;; Hardware stack levels used: 1
 10096 ;; Hardware stack levels required when called: 3
 10097 ;; This function calls:
 10098 ;;		_fputc
 10099 ;;		_strlen
 10100 ;; This function is called by:
 10101 ;;		_vfpfcnvrt
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text58
 10106   0032A0                     __ptext58:
 10107                           	callstack 0
 10108   0032A0                     _stoa:
 10109                           	callstack 23
 10110   0032A0                     
 10111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
 10112   0032A0  EE21  F095         	lfsr	2,stoa@F1144
 10113   0032A4  EE10  F00F         	lfsr	1,stoa@nuls
 10114   0032A8  0E06               	movlw	6
 10115   0032AA                     u2301:
 10116   0032AA  CFDB FFE3          	movff	plusw2,plusw1
 10117   0032AE  06E8               	decf	wreg,f,c
 10118   0032B0  E2FC               	bc	u2301
 10119   0032B2                     
 10120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
 10121   0032B2  C00C  F01A         	movff	stoa@s,stoa@cp
 10122   0032B6  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
 10123   0032BA                     
 10124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
 10125   0032BA  501A               	movf	stoa@cp^0,w,c
 10126   0032BC  101B               	iorwf	(stoa@cp+1)^0,w,c
 10127   0032BE  A4D8               	btfss	status,2,c
 10128   0032C0  EF64  F019         	goto	u2311
 10129   0032C4  EF66  F019         	goto	u2310
 10130   0032C8                     u2311:
 10131   0032C8  EF6A  F019         	goto	l3155
 10132   0032CC                     u2310:
 10133   0032CC                     
 10134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
 10135   0032CC  0E0F               	movlw	low stoa@nuls
 10136   0032CE  6E1A               	movwf	stoa@cp^0,c
 10137   0032D0  0E00               	movlw	high stoa@nuls
 10138   0032D2  6E1B               	movwf	(stoa@cp+1)^0,c
 10139   0032D4                     l3155:
 10140                           
 10141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
 10142   0032D4  C01A  F001         	movff	stoa@cp,strlen@s
 10143   0032D8  C01B  F002         	movff	stoa@cp+1,strlen@s+1
 10144   0032DC  ECB3  F022         	call	_strlen	;wreg free
 10145   0032E0  C001  F01C         	movff	?_strlen,stoa@l
 10146   0032E4  C002  F01D         	movff	?_strlen+1,stoa@l+1
 10147   0032E8                     
 10148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 10149   0032E8  C122  F01E         	movff	_prec,stoa@p
 10150   0032EC  C123  F01F         	movff	_prec+1,stoa@p+1
 10151   0032F0                     
 10152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 10153   0032F0  BE1F               	btfsc	(stoa@p+1)^0,7,c
 10154   0032F2  EF7D  F019         	goto	u2321
 10155   0032F6  EF7F  F019         	goto	u2320
 10156   0032FA                     u2321:
 10157   0032FA  EF94  F019         	goto	l1385
 10158   0032FE                     u2320:
 10159   0032FE  501C               	movf	stoa@l^0,w,c
 10160   003300  5C1E               	subwf	stoa@p^0,w,c
 10161   003302  501F               	movf	(stoa@p+1)^0,w,c
 10162   003304  0A80               	xorlw	128
 10163   003306  6E0E               	movwf	??_stoa^0,c
 10164   003308  501D               	movf	(stoa@l+1)^0,w,c
 10165   00330A  0A80               	xorlw	128
 10166   00330C  580E               	subwfb	??_stoa^0,w,c
 10167   00330E  A0D8               	btfss	status,0,c
 10168   003310  EF8C  F019         	goto	u2331
 10169   003314  EF8E  F019         	goto	u2330
 10170   003318                     u2331:
 10171   003318  EF90  F019         	goto	l1383
 10172   00331C                     u2330:
 10173   00331C  EF94  F019         	goto	l1385
 10174   003320                     l1383:
 10175   003320  C01E  F01C         	movff	stoa@p,stoa@l
 10176   003324  C01F  F01D         	movff	stoa@p+1,stoa@l+1
 10177   003328                     l1385:
 10178                           
 10179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 10180   003328  C01C  F01E         	movff	stoa@l,stoa@p
 10181   00332C  C01D  F01F         	movff	stoa@l+1,stoa@p+1
 10182                           
 10183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 10184   003330  C120  F016         	movff	_width,stoa@w
 10185   003334  C121  F017         	movff	_width+1,stoa@w+1
 10186                           
 10187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10188   003338  EFAA  F019         	goto	l3167
 10189   00333C                     l3163:
 10190                           
 10191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 10192   00333C  0E00               	movlw	0
 10193   00333E  6E02               	movwf	(fputc@c+1)^0,c
 10194   003340  0E20               	movlw	32
 10195   003342  6E01               	movwf	fputc@c^0,c
 10196   003344  C00A  F003         	movff	stoa@fp,fputc@fp
 10197   003348  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10198   00334C  ECCE  F01C         	call	_fputc	;wreg free
 10199   003350                     
 10200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10201   003350  4A1C               	infsnz	stoa@l^0,f,c
 10202   003352  2A1D               	incf	(stoa@l+1)^0,f,c
 10203   003354                     l3167:
 10204                           
 10205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10206   003354  5016               	movf	stoa@w^0,w,c
 10207   003356  5C1C               	subwf	stoa@l^0,w,c
 10208   003358  501D               	movf	(stoa@l+1)^0,w,c
 10209   00335A  0A80               	xorlw	128
 10210   00335C  6E0E               	movwf	??_stoa^0,c
 10211   00335E  5017               	movf	(stoa@w+1)^0,w,c
 10212   003360  0A80               	xorlw	128
 10213   003362  580E               	subwfb	??_stoa^0,w,c
 10214   003364  A0D8               	btfss	status,0,c
 10215   003366  EFB7  F019         	goto	u2341
 10216   00336A  EFB9  F019         	goto	u2340
 10217   00336E                     u2341:
 10218   00336E  EF9E  F019         	goto	l3163
 10219   003372                     u2340:
 10220   003372                     
 10221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10222   003372  0E00               	movlw	0
 10223   003374  6E19               	movwf	(stoa@i+1)^0,c
 10224   003376  0E00               	movlw	0
 10225   003378  6E18               	movwf	stoa@i^0,c
 10226                           
 10227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10228   00337A  EFDE  F019         	goto	l3177
 10229   00337E                     l3171:
 10230                           
 10231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10232   00337E  C01A  FFF6         	movff	stoa@cp,tblptrl
 10233   003382  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10234   003386  0E00               	movlw	low (__smallconst shr (0+16))
 10235   003388  6EF8               	movwf	tblptru,c
 10236   00338A  0E0D               	movlw	(high __ramtop+-1)
 10237   00338C  64F7               	cpfsgt	tblptrh,c
 10238   00338E  D003               	bra	u2357
 10239   003390  0008               	tblrd		*
 10240   003392  50F5               	movf	tablat,w,c
 10241   003394  D005               	bra	u2350
 10242   003396                     u2357:
 10243   003396  CFF6 FFE1          	movff	tblptrl,fsr1l
 10244   00339A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10245   00339E  50E7               	movf	indf1,w,c
 10246   0033A0                     u2350:
 10247   0033A0  6E0E               	movwf	??_stoa^0,c
 10248   0033A2  500E               	movf	??_stoa^0,w,c
 10249   0033A4  6E01               	movwf	fputc@c^0,c
 10250   0033A6  6A02               	clrf	(fputc@c+1)^0,c
 10251   0033A8  C00A  F003         	movff	stoa@fp,fputc@fp
 10252   0033AC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10253   0033B0  ECCE  F01C         	call	_fputc	;wreg free
 10254   0033B4                     
 10255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10256   0033B4  4A1A               	infsnz	stoa@cp^0,f,c
 10257   0033B6  2A1B               	incf	(stoa@cp+1)^0,f,c
 10258   0033B8                     
 10259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10260   0033B8  4A18               	infsnz	stoa@i^0,f,c
 10261   0033BA  2A19               	incf	(stoa@i+1)^0,f,c
 10262   0033BC                     l3177:
 10263                           
 10264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10265   0033BC  501E               	movf	stoa@p^0,w,c
 10266   0033BE  5C18               	subwf	stoa@i^0,w,c
 10267   0033C0  5019               	movf	(stoa@i+1)^0,w,c
 10268   0033C2  0A80               	xorlw	128
 10269   0033C4  6E0E               	movwf	??_stoa^0,c
 10270   0033C6  501F               	movf	(stoa@p+1)^0,w,c
 10271   0033C8  0A80               	xorlw	128
 10272   0033CA  580E               	subwfb	??_stoa^0,w,c
 10273   0033CC  A0D8               	btfss	status,0,c
 10274   0033CE  EFEB  F019         	goto	u2361
 10275   0033D2  EFED  F019         	goto	u2360
 10276   0033D6                     u2361:
 10277   0033D6  EFBF  F019         	goto	l3171
 10278   0033DA                     u2360:
 10279   0033DA  0012               	return		;funcret
 10280   0033DC                     __end_of_stoa:
 10281                           	callstack 0
 10282                           
 10283 ;; *************** function _strlen *****************
 10284 ;; Defined at:
 10285 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10288 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10289 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10290 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10293 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10294 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10295 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2    0[COMRAM] unsigned int 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10309 ;;Total ram usage:        4 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 1
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_stoa
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text59
 10320   004566                     __ptext59:
 10321                           	callstack 0
 10322   004566                     _strlen:
 10323                           	callstack 24
 10324   004566  C001  F003         	movff	strlen@s,strlen@a
 10325   00456A  C002  F004         	movff	strlen@s+1,strlen@a+1
 10326   00456E  EFBB  F022         	goto	l3083
 10327   004572                     l3081:
 10328   004572  4A01               	infsnz	strlen@s^0,f,c
 10329   004574  2A02               	incf	(strlen@s+1)^0,f,c
 10330   004576                     l3083:
 10331   004576  C001  FFF6         	movff	strlen@s,tblptrl
 10332   00457A  C002  FFF7         	movff	strlen@s+1,tblptrh
 10333   00457E  0E00               	movlw	low (__smallconst shr (0+16))
 10334   004580  6EF8               	movwf	tblptru,c
 10335   004582  0E0D               	movlw	(high __ramtop+-1)
 10336   004584  64F7               	cpfsgt	tblptrh,c
 10337   004586  D003               	bra	u2267
 10338   004588  0008               	tblrd		*
 10339   00458A  50F5               	movf	tablat,w,c
 10340   00458C  D005               	bra	u2260
 10341   00458E                     u2267:
 10342   00458E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10343   004592  CFF7 FFE2          	movff	tblptrh,fsr1h
 10344   004596  50E7               	movf	indf1,w,c
 10345   004598                     u2260:
 10346   004598  0900               	iorlw	0
 10347   00459A  A4D8               	btfss	status,2,c
 10348   00459C  EFD2  F022         	goto	u2271
 10349   0045A0  EFD4  F022         	goto	u2270
 10350   0045A4                     u2271:
 10351   0045A4  EFB9  F022         	goto	l3081
 10352   0045A8                     u2270:
 10353   0045A8  5003               	movf	strlen@a^0,w,c
 10354   0045AA  5C01               	subwf	strlen@s^0,w,c
 10355   0045AC  6E01               	movwf	?_strlen^0,c
 10356   0045AE  5004               	movf	(strlen@a+1)^0,w,c
 10357   0045B0  5802               	subwfb	(strlen@s+1)^0,w,c
 10358   0045B2  6E02               	movwf	(?_strlen+1)^0,c
 10359   0045B4  0012               	return		;funcret
 10360   0045B6                     __end_of_strlen:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _fputc *****************
 10364 ;; Defined at:
 10365 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  c               2    0[COMRAM] int 
 10368 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10369 ;;		 -> sprintf@f(11), 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  2    0[COMRAM] int 
 10374 ;; Registers used:
 10375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10383 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;Total ram usage:        9 bytes
 10386 ;; Hardware stack levels used: 1
 10387 ;; Hardware stack levels required when called: 2
 10388 ;; This function calls:
 10389 ;;		_putch
 10390 ;; This function is called by:
 10391 ;;		_stoa
 10392 ;;		_vfpfcnvrt
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text60
 10397   00399C                     __ptext60:
 10398                           	callstack 0
 10399   00399C                     _fputc:
 10400                           	callstack 23
 10401   00399C  5003               	movf	fputc@fp^0,w,c
 10402   00399E  1004               	iorwf	(fputc@fp+1)^0,w,c
 10403   0039A0  B4D8               	btfsc	status,2,c
 10404   0039A2  EFD5  F01C         	goto	u2221
 10405   0039A6  EFD7  F01C         	goto	u2220
 10406   0039AA                     u2221:
 10407   0039AA  EFE0  F01C         	goto	l3069
 10408   0039AE                     u2220:
 10409   0039AE  5003               	movf	fputc@fp^0,w,c
 10410   0039B0  1004               	iorwf	(fputc@fp+1)^0,w,c
 10411   0039B2  A4D8               	btfss	status,2,c
 10412   0039B4  EFDE  F01C         	goto	u2231
 10413   0039B8  EFE0  F01C         	goto	u2230
 10414   0039BC                     u2231:
 10415   0039BC  EFE5  F01C         	goto	l3071
 10416   0039C0                     u2230:
 10417   0039C0                     l3069:
 10418   0039C0  5001               	movf	fputc@c^0,w,c
 10419   0039C2  ECBB  F024         	call	_putch
 10420   0039C6  EF32  F01D         	goto	l1423
 10421   0039CA                     l3071:
 10422   0039CA  EE20 F009          	lfsr	2,9
 10423   0039CE  5003               	movf	fputc@fp^0,w,c
 10424   0039D0  26D9               	addwf	fsr2l,f,c
 10425   0039D2  5004               	movf	(fputc@fp+1)^0,w,c
 10426   0039D4  22DA               	addwfc	fsr2h,f,c
 10427   0039D6  50DE               	movf	postinc2,w,c
 10428   0039D8  10DE               	iorwf	postinc2,w,c
 10429   0039DA  B4D8               	btfsc	status,2,c
 10430   0039DC  EFF2  F01C         	goto	u2241
 10431   0039E0  EFF4  F01C         	goto	u2240
 10432   0039E4                     u2241:
 10433   0039E4  EF0F  F01D         	goto	l3075
 10434   0039E8                     u2240:
 10435   0039E8  EE20 F009          	lfsr	2,9
 10436   0039EC  5003               	movf	fputc@fp^0,w,c
 10437   0039EE  26D9               	addwf	fsr2l,f,c
 10438   0039F0  5004               	movf	(fputc@fp+1)^0,w,c
 10439   0039F2  22DA               	addwfc	fsr2h,f,c
 10440   0039F4  EE10 F003          	lfsr	1,3
 10441   0039F8  5003               	movf	fputc@fp^0,w,c
 10442   0039FA  26E1               	addwf	fsr1l,f,c
 10443   0039FC  5004               	movf	(fputc@fp+1)^0,w,c
 10444   0039FE  22E2               	addwfc	fsr1h,f,c
 10445   003A00  50DE               	movf	postinc2,w,c
 10446   003A02  5CE6               	subwf	postinc1,w,c
 10447   003A04  50E6               	movf	postinc1,w,c
 10448   003A06  0A80               	xorlw	128
 10449   003A08  6E09               	movwf	(??_fputc+4)^0,c
 10450   003A0A  50DE               	movf	postinc2,w,c
 10451   003A0C  0A80               	xorlw	128
 10452   003A0E  5809               	subwfb	(??_fputc+4)^0,w,c
 10453   003A10  B0D8               	btfsc	status,0,c
 10454   003A12  EF0D  F01D         	goto	u2251
 10455   003A16  EF0F  F01D         	goto	u2250
 10456   003A1A                     u2251:
 10457   003A1A  EF32  F01D         	goto	l1423
 10458   003A1E                     u2250:
 10459   003A1E                     l3075:
 10460   003A1E  EE20 F003          	lfsr	2,3
 10461   003A22  5003               	movf	fputc@fp^0,w,c
 10462   003A24  26D9               	addwf	fsr2l,f,c
 10463   003A26  5004               	movf	(fputc@fp+1)^0,w,c
 10464   003A28  22DA               	addwfc	fsr2h,f,c
 10465   003A2A  CFDE F005          	movff	postinc2,??_fputc
 10466   003A2E  CFDD F006          	movff	postdec2,??_fputc+1
 10467   003A32  C003  FFD9         	movff	fputc@fp,fsr2l
 10468   003A36  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10469   003A3A  CFDE F007          	movff	postinc2,??_fputc+2
 10470   003A3E  CFDD F008          	movff	postdec2,??_fputc+3
 10471   003A42  5005               	movf	??_fputc^0,w,c
 10472   003A44  2407               	addwf	(??_fputc+2)^0,w,c
 10473   003A46  6ED9               	movwf	fsr2l,c
 10474   003A48  5006               	movf	(??_fputc+1)^0,w,c
 10475   003A4A  2008               	addwfc	(??_fputc+3)^0,w,c
 10476   003A4C  6EDA               	movwf	fsr2h,c
 10477   003A4E  C001  FFDF         	movff	fputc@c,indf2
 10478   003A52  EE20 F003          	lfsr	2,3
 10479   003A56  5003               	movf	fputc@fp^0,w,c
 10480   003A58  26D9               	addwf	fsr2l,f,c
 10481   003A5A  5004               	movf	(fputc@fp+1)^0,w,c
 10482   003A5C  22DA               	addwfc	fsr2h,f,c
 10483   003A5E  2ADE               	incf	postinc2,f,c
 10484   003A60  0E00               	movlw	0
 10485   003A62  22DD               	addwfc	postdec2,f,c
 10486   003A64                     l1423:
 10487   003A64  0012               	return		;funcret
 10488   003A66                     __end_of_fputc:
 10489                           	callstack 0
 10490                           
 10491 ;; *************** function _putch *****************
 10492 ;; Defined at:
 10493 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  c               1    wreg     unsigned char 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  c               1    0[COMRAM] unsigned char 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 1
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_fputc
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text61
 10522   004976                     __ptext61:
 10523                           	callstack 0
 10524   004976                     _putch:
 10525                           	callstack 23
 10526   004976  0012               	return		;funcret
 10527   004978                     __end_of_putch:
 10528                           	callstack 0
 10529                           
 10530 ;; *************** function _sendStringSerial4 *****************
 10531 ;; Defined at:
 10532 ;;		line 48 in file "serial.c"
 10533 ;; Parameters:    Size  Location     Type
 10534 ;;  string          2    1[COMRAM] PTR unsigned char 
 10535 ;;		 -> main@data(100), 
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10551 ;;Total ram usage:        2 bytes
 10552 ;; Hardware stack levels used: 1
 10553 ;; Hardware stack levels required when called: 2
 10554 ;; This function calls:
 10555 ;;		_sendCharSerial4
 10556 ;; This function is called by:
 10557 ;;		_Color2String
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text62
 10562   004758                     __ptext62:
 10563                           	callstack 0
 10564   004758                     _sendStringSerial4:
 10565                           	callstack 27
 10566   004758                     
 10567                           ;serial.c: 51:     while(*string != 0){
 10568   004758  EFBB  F023         	goto	l4021
 10569   00475C                     l4015:
 10570                           
 10571                           ;serial.c: 53:   sendCharSerial4(*string++);
 10572   00475C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10573   004760  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10574   004764  50DF               	movf	indf2,w,c
 10575   004766  EC80  F024         	call	_sendCharSerial4
 10576   00476A  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10577   00476C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10578   00476E                     
 10579                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10580   00476E  0E6A               	movlw	106
 10581   004770                     u4467:
 10582   004770  2EE8               	decfsz	wreg,f,c
 10583   004772  D7FE               	bra	u4467
 10584   004774  D000               	nop2	
 10585   004776                     l4021:
 10586                           
 10587                           ;serial.c: 51:     while(*string != 0){
 10588   004776  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10589   00477A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10590   00477E  50DF               	movf	indf2,w,c
 10591   004780  A4D8               	btfss	status,2,c
 10592   004782  EFC5  F023         	goto	u3671
 10593   004786  EFC7  F023         	goto	u3670
 10594   00478A                     u3671:
 10595   00478A  EFAE  F023         	goto	l4015
 10596   00478E                     u3670:
 10597   00478E  0012               	return		;funcret
 10598   004790                     __end_of_sendStringSerial4:
 10599                           	callstack 0
 10600                           
 10601 ;; *************** function _sendCharSerial4 *****************
 10602 ;; Defined at:
 10603 ;;		line 34 in file "serial.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  charToSend      1    wreg     unsigned char 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  charToSend      1    0[COMRAM] unsigned char 
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;Total ram usage:        1 bytes
 10622 ;; Hardware stack levels used: 1
 10623 ;; Hardware stack levels required when called: 1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_sendStringSerial4
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text63
 10632   004900                     __ptext63:
 10633                           	callstack 0
 10634   004900                     _sendCharSerial4:
 10635                           	callstack 27
 10636                           
 10637                           ;incstack = 0
 10638                           ;sendCharSerial4@charToSend stored from wreg
 10639   004900  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10640   004902                     l386:
 10641   004902  010E               	movlb	14	; () banked
 10642   004904  A537               	btfss	55,2,b	;volatile
 10643   004906  EF87  F024         	goto	u2941
 10644   00490A  EF89  F024         	goto	u2940
 10645   00490E                     u2941:
 10646   00490E  EF81  F024         	goto	l386
 10647   004912                     u2940:
 10648   004912                     
 10649                           ; BSR set to: 14
 10650                           ;serial.c: 36:     TX4REG = charToSend;
 10651   004912  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10652   004916                     
 10653                           ; BSR set to: 14
 10654   004916  0012               	return		;funcret
 10655   004918                     __end_of_sendCharSerial4:
 10656                           	callstack 0
 10657                           
 10658 ;; *************** function _Hue2Colour *****************
 10659 ;; Defined at:
 10660 ;;		line 56 in file "colorfunctions.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
 10663 ;;		 -> colorf(22), 
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;  colourname      2   14[COMRAM] PTR unsigned char 
 10666 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
 10667 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
 10668 ;;		 -> STR_2(1), 
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  2   12[COMRAM] PTR unsigned char 
 10671 ;; Registers used:
 10672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10673 ;; Tracked objects:
 10674 ;;		On entry : 0/0
 10675 ;;		On exit  : 0/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10682 ;;Total ram usage:        4 bytes
 10683 ;; Hardware stack levels used: 1
 10684 ;; Hardware stack levels required when called: 2
 10685 ;; This function calls:
 10686 ;;		___flge
 10687 ;; This function is called by:
 10688 ;;		_main
 10689 ;;		_Color2String
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text64
 10694   00157E                     __ptext64:
 10695                           	callstack 0
 10696   00157E                     _Hue2Colour:
 10697                           	callstack 28
 10698   00157E                     
 10699                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10700   00157E  0E10               	movlw	low (STR_1+15)
 10701   001580  6E0F               	movwf	Hue2Colour@colourname^0,c
 10702   001582  0E0E               	movlw	high (STR_1+15)
 10703   001584  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10704   001586                     
 10705                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
 10706   001586  0E00               	movlw	0
 10707   001588  6E01               	movwf	___flge@ff1^0,c
 10708   00158A  0E00               	movlw	0
 10709   00158C  6E02               	movwf	(___flge@ff1+1)^0,c
 10710   00158E  0EB0               	movlw	176
 10711   001590  6E03               	movwf	(___flge@ff1+2)^0,c
 10712   001592  0E43               	movlw	67
 10713   001594  6E04               	movwf	(___flge@ff1+3)^0,c
 10714   001596  EE20 F010          	lfsr	2,16
 10715   00159A  500D               	movf	Hue2Colour@cf^0,w,c
 10716   00159C  26D9               	addwf	fsr2l,f,c
 10717   00159E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10718   0015A0  22DA               	addwfc	fsr2h,f,c
 10719   0015A2  CFDE F005          	movff	postinc2,___flge@ff2
 10720   0015A6  CFDE F006          	movff	postinc2,___flge@ff2+1
 10721   0015AA  CFDE F007          	movff	postinc2,___flge@ff2+2
 10722   0015AE  CFDE F008          	movff	postinc2,___flge@ff2+3
 10723   0015B2  ECF5  F01A         	call	___flge	;wreg free
 10724   0015B6  B0D8               	btfsc	status,0,c
 10725   0015B8  EFE0  F00A         	goto	u3401
 10726   0015BC  EFE2  F00A         	goto	u3400
 10727   0015C0                     u3401:
 10728   0015C0  EF0F  F00B         	goto	l3865
 10729   0015C4                     u3400:
 10730   0015C4  EE20 F010          	lfsr	2,16
 10731   0015C8  500D               	movf	Hue2Colour@cf^0,w,c
 10732   0015CA  26D9               	addwf	fsr2l,f,c
 10733   0015CC  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10734   0015CE  22DA               	addwfc	fsr2h,f,c
 10735   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
 10736   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10737   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10738   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10739   0015E0  0E00               	movlw	0
 10740   0015E2  6E05               	movwf	___flge@ff2^0,c
 10741   0015E4  0E00               	movlw	0
 10742   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
 10743   0015E8  0EB4               	movlw	180
 10744   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
 10745   0015EC  0E43               	movlw	67
 10746   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
 10747   0015F0  ECF5  F01A         	call	___flge	;wreg free
 10748   0015F4  B0D8               	btfsc	status,0,c
 10749   0015F6  EFFF  F00A         	goto	u3411
 10750   0015FA  EF01  F00B         	goto	u3410
 10751   0015FE                     u3411:
 10752   0015FE  EF0F  F00B         	goto	l3865
 10753   001602                     u3410:
 10754   001602                     
 10755                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10756   001602  0E4C               	movlw	low STR_3
 10757   001604  6E0F               	movwf	Hue2Colour@colourname^0,c
 10758   001606  0E0E               	movlw	high STR_3
 10759   001608  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10760   00160A                     
 10761                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10762   00160A  EE20 F014          	lfsr	2,20
 10763   00160E  500D               	movf	Hue2Colour@cf^0,w,c
 10764   001610  26D9               	addwf	fsr2l,f,c
 10765   001612  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10766   001614  22DA               	addwfc	fsr2h,f,c
 10767   001616  0E00               	movlw	0
 10768   001618  6EDE               	movwf	postinc2,c
 10769   00161A  0E00               	movlw	0
 10770   00161C  6EDD               	movwf	postdec2,c
 10771   00161E                     l3865:
 10772                           
 10773                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
 10774   00161E  0E00               	movlw	0
 10775   001620  6E01               	movwf	___flge@ff1^0,c
 10776   001622  0E00               	movlw	0
 10777   001624  6E02               	movwf	(___flge@ff1+1)^0,c
 10778   001626  0E96               	movlw	150
 10779   001628  6E03               	movwf	(___flge@ff1+2)^0,c
 10780   00162A  0E42               	movlw	66
 10781   00162C  6E04               	movwf	(___flge@ff1+3)^0,c
 10782   00162E  EE20 F010          	lfsr	2,16
 10783   001632  500D               	movf	Hue2Colour@cf^0,w,c
 10784   001634  26D9               	addwf	fsr2l,f,c
 10785   001636  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10786   001638  22DA               	addwfc	fsr2h,f,c
 10787   00163A  CFDE F005          	movff	postinc2,___flge@ff2
 10788   00163E  CFDE F006          	movff	postinc2,___flge@ff2+1
 10789   001642  CFDE F007          	movff	postinc2,___flge@ff2+2
 10790   001646  CFDE F008          	movff	postinc2,___flge@ff2+3
 10791   00164A  ECF5  F01A         	call	___flge	;wreg free
 10792   00164E  B0D8               	btfsc	status,0,c
 10793   001650  EF2C  F00B         	goto	u3421
 10794   001654  EF2E  F00B         	goto	u3420
 10795   001658                     u3421:
 10796   001658  EF5D  F00B         	goto	l3873
 10797   00165C                     u3420:
 10798   00165C  EE20 F010          	lfsr	2,16
 10799   001660  500D               	movf	Hue2Colour@cf^0,w,c
 10800   001662  26D9               	addwf	fsr2l,f,c
 10801   001664  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10802   001666  22DA               	addwfc	fsr2h,f,c
 10803   001668  CFDE F001          	movff	postinc2,___flge@ff1
 10804   00166C  CFDE F002          	movff	postinc2,___flge@ff1+1
 10805   001670  CFDE F003          	movff	postinc2,___flge@ff1+2
 10806   001674  CFDE F004          	movff	postinc2,___flge@ff1+3
 10807   001678  0E00               	movlw	0
 10808   00167A  6E05               	movwf	___flge@ff2^0,c
 10809   00167C  0E00               	movlw	0
 10810   00167E  6E06               	movwf	(___flge@ff2+1)^0,c
 10811   001680  0E9E               	movlw	158
 10812   001682  6E07               	movwf	(___flge@ff2+2)^0,c
 10813   001684  0E42               	movlw	66
 10814   001686  6E08               	movwf	(___flge@ff2+3)^0,c
 10815   001688  ECF5  F01A         	call	___flge	;wreg free
 10816   00168C  B0D8               	btfsc	status,0,c
 10817   00168E  EF4B  F00B         	goto	u3431
 10818   001692  EF4D  F00B         	goto	u3430
 10819   001696                     u3431:
 10820   001696  EF5D  F00B         	goto	l3873
 10821   00169A                     u3430:
 10822   00169A                     
 10823                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10824   00169A  0E3D               	movlw	low STR_4
 10825   00169C  6E0F               	movwf	Hue2Colour@colourname^0,c
 10826   00169E  0E0E               	movlw	high STR_4
 10827   0016A0  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10828   0016A2                     
 10829                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10830   0016A2  EE20 F014          	lfsr	2,20
 10831   0016A6  500D               	movf	Hue2Colour@cf^0,w,c
 10832   0016A8  26D9               	addwf	fsr2l,f,c
 10833   0016AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10834   0016AC  22DA               	addwfc	fsr2h,f,c
 10835   0016AE  0E01               	movlw	1
 10836   0016B0  6EDE               	movwf	postinc2,c
 10837   0016B2  0E00               	movlw	0
 10838   0016B4  6EDD               	movwf	postdec2,c
 10839                           
 10840                           ;colorfunctions.c: 71:     }
 10841   0016B6  EF31  F00D         	goto	l3921
 10842   0016BA                     l3873:
 10843   0016BA  0E00               	movlw	0
 10844   0016BC  6E01               	movwf	___flge@ff1^0,c
 10845   0016BE  0E00               	movlw	0
 10846   0016C0  6E02               	movwf	(___flge@ff1+1)^0,c
 10847   0016C2  0E11               	movlw	17
 10848   0016C4  6E03               	movwf	(___flge@ff1+2)^0,c
 10849   0016C6  0E43               	movlw	67
 10850   0016C8  6E04               	movwf	(___flge@ff1+3)^0,c
 10851   0016CA  EE20 F010          	lfsr	2,16
 10852   0016CE  500D               	movf	Hue2Colour@cf^0,w,c
 10853   0016D0  26D9               	addwf	fsr2l,f,c
 10854   0016D2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10855   0016D4  22DA               	addwfc	fsr2h,f,c
 10856   0016D6  CFDE F005          	movff	postinc2,___flge@ff2
 10857   0016DA  CFDE F006          	movff	postinc2,___flge@ff2+1
 10858   0016DE  CFDE F007          	movff	postinc2,___flge@ff2+2
 10859   0016E2  CFDE F008          	movff	postinc2,___flge@ff2+3
 10860   0016E6  ECF5  F01A         	call	___flge	;wreg free
 10861   0016EA  B0D8               	btfsc	status,0,c
 10862   0016EC  EF7A  F00B         	goto	u3441
 10863   0016F0  EF7C  F00B         	goto	u3440
 10864   0016F4                     u3441:
 10865   0016F4  EFAB  F00B         	goto	l3881
 10866   0016F8                     u3440:
 10867   0016F8  EE20 F010          	lfsr	2,16
 10868   0016FC  500D               	movf	Hue2Colour@cf^0,w,c
 10869   0016FE  26D9               	addwf	fsr2l,f,c
 10870   001700  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10871   001702  22DA               	addwfc	fsr2h,f,c
 10872   001704  CFDE F001          	movff	postinc2,___flge@ff1
 10873   001708  CFDE F002          	movff	postinc2,___flge@ff1+1
 10874   00170C  CFDE F003          	movff	postinc2,___flge@ff1+2
 10875   001710  CFDE F004          	movff	postinc2,___flge@ff1+3
 10876   001714  0E00               	movlw	0
 10877   001716  6E05               	movwf	___flge@ff2^0,c
 10878   001718  0E00               	movlw	0
 10879   00171A  6E06               	movwf	(___flge@ff2+1)^0,c
 10880   00171C  0E24               	movlw	36
 10881   00171E  6E07               	movwf	(___flge@ff2+2)^0,c
 10882   001720  0E43               	movlw	67
 10883   001722  6E08               	movwf	(___flge@ff2+3)^0,c
 10884   001724  ECF5  F01A         	call	___flge	;wreg free
 10885   001728  B0D8               	btfsc	status,0,c
 10886   00172A  EF99  F00B         	goto	u3451
 10887   00172E  EF9B  F00B         	goto	u3450
 10888   001732                     u3451:
 10889   001732  EFAB  F00B         	goto	l3881
 10890   001736                     u3450:
 10891   001736                     
 10892                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10893   001736  0E1C               	movlw	low STR_5
 10894   001738  6E0F               	movwf	Hue2Colour@colourname^0,c
 10895   00173A  0E0E               	movlw	high STR_5
 10896   00173C  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10897   00173E                     
 10898                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10899   00173E  EE20 F014          	lfsr	2,20
 10900   001742  500D               	movf	Hue2Colour@cf^0,w,c
 10901   001744  26D9               	addwf	fsr2l,f,c
 10902   001746  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10903   001748  22DA               	addwfc	fsr2h,f,c
 10904   00174A  0E02               	movlw	2
 10905   00174C  6EDE               	movwf	postinc2,c
 10906   00174E  0E00               	movlw	0
 10907   001750  6EDD               	movwf	postdec2,c
 10908                           
 10909                           ;colorfunctions.c: 76:     }
 10910   001752  EF31  F00D         	goto	l3921
 10911   001756                     l3881:
 10912   001756  0E00               	movlw	0
 10913   001758  6E01               	movwf	___flge@ff1^0,c
 10914   00175A  0E00               	movlw	0
 10915   00175C  6E02               	movwf	(___flge@ff1+1)^0,c
 10916   00175E  0EA8               	movlw	168
 10917   001760  6E03               	movwf	(___flge@ff1+2)^0,c
 10918   001762  0E41               	movlw	65
 10919   001764  6E04               	movwf	(___flge@ff1+3)^0,c
 10920   001766  EE20 F010          	lfsr	2,16
 10921   00176A  500D               	movf	Hue2Colour@cf^0,w,c
 10922   00176C  26D9               	addwf	fsr2l,f,c
 10923   00176E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10924   001770  22DA               	addwfc	fsr2h,f,c
 10925   001772  CFDE F005          	movff	postinc2,___flge@ff2
 10926   001776  CFDE F006          	movff	postinc2,___flge@ff2+1
 10927   00177A  CFDE F007          	movff	postinc2,___flge@ff2+2
 10928   00177E  CFDE F008          	movff	postinc2,___flge@ff2+3
 10929   001782  ECF5  F01A         	call	___flge	;wreg free
 10930   001786  B0D8               	btfsc	status,0,c
 10931   001788  EFC8  F00B         	goto	u3461
 10932   00178C  EFCA  F00B         	goto	u3460
 10933   001790                     u3461:
 10934   001790  EFF9  F00B         	goto	l3889
 10935   001794                     u3460:
 10936   001794  EE20 F010          	lfsr	2,16
 10937   001798  500D               	movf	Hue2Colour@cf^0,w,c
 10938   00179A  26D9               	addwf	fsr2l,f,c
 10939   00179C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10940   00179E  22DA               	addwfc	fsr2h,f,c
 10941   0017A0  CFDE F001          	movff	postinc2,___flge@ff1
 10942   0017A4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10943   0017A8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10944   0017AC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10945   0017B0  0E00               	movlw	0
 10946   0017B2  6E05               	movwf	___flge@ff2^0,c
 10947   0017B4  0E00               	movlw	0
 10948   0017B6  6E06               	movwf	(___flge@ff2+1)^0,c
 10949   0017B8  0EC8               	movlw	200
 10950   0017BA  6E07               	movwf	(___flge@ff2+2)^0,c
 10951   0017BC  0E41               	movlw	65
 10952   0017BE  6E08               	movwf	(___flge@ff2+3)^0,c
 10953   0017C0  ECF5  F01A         	call	___flge	;wreg free
 10954   0017C4  B0D8               	btfsc	status,0,c
 10955   0017C6  EFE7  F00B         	goto	u3471
 10956   0017CA  EFE9  F00B         	goto	u3470
 10957   0017CE                     u3471:
 10958   0017CE  EFF9  F00B         	goto	l3889
 10959   0017D2                     u3470:
 10960   0017D2                     
 10961                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10962   0017D2  0E36               	movlw	low STR_6
 10963   0017D4  6E0F               	movwf	Hue2Colour@colourname^0,c
 10964   0017D6  0E0E               	movlw	high STR_6
 10965   0017D8  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10966   0017DA                     
 10967                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10968   0017DA  EE20 F014          	lfsr	2,20
 10969   0017DE  500D               	movf	Hue2Colour@cf^0,w,c
 10970   0017E0  26D9               	addwf	fsr2l,f,c
 10971   0017E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10972   0017E4  22DA               	addwfc	fsr2h,f,c
 10973   0017E6  0E03               	movlw	3
 10974   0017E8  6EDE               	movwf	postinc2,c
 10975   0017EA  0E00               	movlw	0
 10976   0017EC  6EDD               	movwf	postdec2,c
 10977                           
 10978                           ;colorfunctions.c: 81:     }
 10979   0017EE  EF31  F00D         	goto	l3921
 10980   0017F2                     l3889:
 10981   0017F2  0E00               	movlw	0
 10982   0017F4  6E01               	movwf	___flge@ff1^0,c
 10983   0017F6  0E00               	movlw	0
 10984   0017F8  6E02               	movwf	(___flge@ff1+1)^0,c
 10985   0017FA  0E70               	movlw	112
 10986   0017FC  6E03               	movwf	(___flge@ff1+2)^0,c
 10987   0017FE  0E41               	movlw	65
 10988   001800  6E04               	movwf	(___flge@ff1+3)^0,c
 10989   001802  EE20 F010          	lfsr	2,16
 10990   001806  500D               	movf	Hue2Colour@cf^0,w,c
 10991   001808  26D9               	addwf	fsr2l,f,c
 10992   00180A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10993   00180C  22DA               	addwfc	fsr2h,f,c
 10994   00180E  CFDE F005          	movff	postinc2,___flge@ff2
 10995   001812  CFDE F006          	movff	postinc2,___flge@ff2+1
 10996   001816  CFDE F007          	movff	postinc2,___flge@ff2+2
 10997   00181A  CFDE F008          	movff	postinc2,___flge@ff2+3
 10998   00181E  ECF5  F01A         	call	___flge	;wreg free
 10999   001822  B0D8               	btfsc	status,0,c
 11000   001824  EF16  F00C         	goto	u3481
 11001   001828  EF18  F00C         	goto	u3480
 11002   00182C                     u3481:
 11003   00182C  EF47  F00C         	goto	l3897
 11004   001830                     u3480:
 11005   001830  EE20 F010          	lfsr	2,16
 11006   001834  500D               	movf	Hue2Colour@cf^0,w,c
 11007   001836  26D9               	addwf	fsr2l,f,c
 11008   001838  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11009   00183A  22DA               	addwfc	fsr2h,f,c
 11010   00183C  CFDE F001          	movff	postinc2,___flge@ff1
 11011   001840  CFDE F002          	movff	postinc2,___flge@ff1+1
 11012   001844  CFDE F003          	movff	postinc2,___flge@ff1+2
 11013   001848  CFDE F004          	movff	postinc2,___flge@ff1+3
 11014   00184C  0E00               	movlw	0
 11015   00184E  6E05               	movwf	___flge@ff2^0,c
 11016   001850  0E00               	movlw	0
 11017   001852  6E06               	movwf	(___flge@ff2+1)^0,c
 11018   001854  0E98               	movlw	152
 11019   001856  6E07               	movwf	(___flge@ff2+2)^0,c
 11020   001858  0E41               	movlw	65
 11021   00185A  6E08               	movwf	(___flge@ff2+3)^0,c
 11022   00185C  ECF5  F01A         	call	___flge	;wreg free
 11023   001860  B0D8               	btfsc	status,0,c
 11024   001862  EF35  F00C         	goto	u3491
 11025   001866  EF37  F00C         	goto	u3490
 11026   00186A                     u3491:
 11027   00186A  EF47  F00C         	goto	l3897
 11028   00186E                     u3490:
 11029   00186E                     
 11030                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 11031   00186E  0E43               	movlw	low STR_7
 11032   001870  6E0F               	movwf	Hue2Colour@colourname^0,c
 11033   001872  0E0E               	movlw	high STR_7
 11034   001874  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11035   001876                     
 11036                           ;colorfunctions.c: 85:         cf->colourindex=4;
 11037   001876  EE20 F014          	lfsr	2,20
 11038   00187A  500D               	movf	Hue2Colour@cf^0,w,c
 11039   00187C  26D9               	addwf	fsr2l,f,c
 11040   00187E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11041   001880  22DA               	addwfc	fsr2h,f,c
 11042   001882  0E04               	movlw	4
 11043   001884  6EDE               	movwf	postinc2,c
 11044   001886  0E00               	movlw	0
 11045   001888  6EDD               	movwf	postdec2,c
 11046                           
 11047                           ;colorfunctions.c: 86:     }
 11048   00188A  EF31  F00D         	goto	l3921
 11049   00188E                     l3897:
 11050   00188E  0E00               	movlw	0
 11051   001890  6E01               	movwf	___flge@ff1^0,c
 11052   001892  0E00               	movlw	0
 11053   001894  6E02               	movwf	(___flge@ff1+1)^0,c
 11054   001896  0EE0               	movlw	224
 11055   001898  6E03               	movwf	(___flge@ff1+2)^0,c
 11056   00189A  0E40               	movlw	64
 11057   00189C  6E04               	movwf	(___flge@ff1+3)^0,c
 11058   00189E  EE20 F010          	lfsr	2,16
 11059   0018A2  500D               	movf	Hue2Colour@cf^0,w,c
 11060   0018A4  26D9               	addwf	fsr2l,f,c
 11061   0018A6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11062   0018A8  22DA               	addwfc	fsr2h,f,c
 11063   0018AA  CFDE F005          	movff	postinc2,___flge@ff2
 11064   0018AE  CFDE F006          	movff	postinc2,___flge@ff2+1
 11065   0018B2  CFDE F007          	movff	postinc2,___flge@ff2+2
 11066   0018B6  CFDE F008          	movff	postinc2,___flge@ff2+3
 11067   0018BA  ECF5  F01A         	call	___flge	;wreg free
 11068   0018BE  B0D8               	btfsc	status,0,c
 11069   0018C0  EF64  F00C         	goto	u3501
 11070   0018C4  EF66  F00C         	goto	u3500
 11071   0018C8                     u3501:
 11072   0018C8  EF95  F00C         	goto	l3905
 11073   0018CC                     u3500:
 11074   0018CC  EE20 F010          	lfsr	2,16
 11075   0018D0  500D               	movf	Hue2Colour@cf^0,w,c
 11076   0018D2  26D9               	addwf	fsr2l,f,c
 11077   0018D4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11078   0018D6  22DA               	addwfc	fsr2h,f,c
 11079   0018D8  CFDE F001          	movff	postinc2,___flge@ff1
 11080   0018DC  CFDE F002          	movff	postinc2,___flge@ff1+1
 11081   0018E0  CFDE F003          	movff	postinc2,___flge@ff1+2
 11082   0018E4  CFDE F004          	movff	postinc2,___flge@ff1+3
 11083   0018E8  0E00               	movlw	0
 11084   0018EA  6E05               	movwf	___flge@ff2^0,c
 11085   0018EC  0E00               	movlw	0
 11086   0018EE  6E06               	movwf	(___flge@ff2+1)^0,c
 11087   0018F0  0E10               	movlw	16
 11088   0018F2  6E07               	movwf	(___flge@ff2+2)^0,c
 11089   0018F4  0E41               	movlw	65
 11090   0018F6  6E08               	movwf	(___flge@ff2+3)^0,c
 11091   0018F8  ECF5  F01A         	call	___flge	;wreg free
 11092   0018FC  B0D8               	btfsc	status,0,c
 11093   0018FE  EF83  F00C         	goto	u3511
 11094   001902  EF85  F00C         	goto	u3510
 11095   001906                     u3511:
 11096   001906  EF95  F00C         	goto	l3905
 11097   00190A                     u3510:
 11098   00190A                     
 11099                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 11100   00190A  0E2F               	movlw	low STR_8
 11101   00190C  6E0F               	movwf	Hue2Colour@colourname^0,c
 11102   00190E  0E0E               	movlw	high STR_8
 11103   001910  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11104   001912                     
 11105                           ;colorfunctions.c: 90:         cf->colourindex=5;
 11106   001912  EE20 F014          	lfsr	2,20
 11107   001916  500D               	movf	Hue2Colour@cf^0,w,c
 11108   001918  26D9               	addwf	fsr2l,f,c
 11109   00191A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11110   00191C  22DA               	addwfc	fsr2h,f,c
 11111   00191E  0E05               	movlw	5
 11112   001920  6EDE               	movwf	postinc2,c
 11113   001922  0E00               	movlw	0
 11114   001924  6EDD               	movwf	postdec2,c
 11115                           
 11116                           ;colorfunctions.c: 91:     }
 11117   001926  EF31  F00D         	goto	l3921
 11118   00192A                     l3905:
 11119   00192A  0E00               	movlw	0
 11120   00192C  6E01               	movwf	___flge@ff1^0,c
 11121   00192E  0E00               	movlw	0
 11122   001930  6E02               	movwf	(___flge@ff1+1)^0,c
 11123   001932  0EAA               	movlw	170
 11124   001934  6E03               	movwf	(___flge@ff1+2)^0,c
 11125   001936  0E42               	movlw	66
 11126   001938  6E04               	movwf	(___flge@ff1+3)^0,c
 11127   00193A  EE20 F010          	lfsr	2,16
 11128   00193E  500D               	movf	Hue2Colour@cf^0,w,c
 11129   001940  26D9               	addwf	fsr2l,f,c
 11130   001942  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11131   001944  22DA               	addwfc	fsr2h,f,c
 11132   001946  CFDE F005          	movff	postinc2,___flge@ff2
 11133   00194A  CFDE F006          	movff	postinc2,___flge@ff2+1
 11134   00194E  CFDE F007          	movff	postinc2,___flge@ff2+2
 11135   001952  CFDE F008          	movff	postinc2,___flge@ff2+3
 11136   001956  ECF5  F01A         	call	___flge	;wreg free
 11137   00195A  B0D8               	btfsc	status,0,c
 11138   00195C  EFB2  F00C         	goto	u3521
 11139   001960  EFB4  F00C         	goto	u3520
 11140   001964                     u3521:
 11141   001964  EFE3  F00C         	goto	l3913
 11142   001968                     u3520:
 11143   001968  EE20 F010          	lfsr	2,16
 11144   00196C  500D               	movf	Hue2Colour@cf^0,w,c
 11145   00196E  26D9               	addwf	fsr2l,f,c
 11146   001970  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11147   001972  22DA               	addwfc	fsr2h,f,c
 11148   001974  CFDE F001          	movff	postinc2,___flge@ff1
 11149   001978  CFDE F002          	movff	postinc2,___flge@ff1+1
 11150   00197C  CFDE F003          	movff	postinc2,___flge@ff1+2
 11151   001980  CFDE F004          	movff	postinc2,___flge@ff1+3
 11152   001984  0E00               	movlw	0
 11153   001986  6E05               	movwf	___flge@ff2^0,c
 11154   001988  0E00               	movlw	0
 11155   00198A  6E06               	movwf	(___flge@ff2+1)^0,c
 11156   00198C  0EBC               	movlw	188
 11157   00198E  6E07               	movwf	(___flge@ff2+2)^0,c
 11158   001990  0E42               	movlw	66
 11159   001992  6E08               	movwf	(___flge@ff2+3)^0,c
 11160   001994  ECF5  F01A         	call	___flge	;wreg free
 11161   001998  B0D8               	btfsc	status,0,c
 11162   00199A  EFD1  F00C         	goto	u3531
 11163   00199E  EFD3  F00C         	goto	u3530
 11164   0019A2                     u3531:
 11165   0019A2  EFE3  F00C         	goto	l3913
 11166   0019A6                     u3530:
 11167   0019A6                     
 11168                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 11169   0019A6  0E11               	movlw	low STR_9
 11170   0019A8  6E0F               	movwf	Hue2Colour@colourname^0,c
 11171   0019AA  0E0E               	movlw	high STR_9
 11172   0019AC  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11173   0019AE                     
 11174                           ;colorfunctions.c: 95:         cf->colourindex=6;
 11175   0019AE  EE20 F014          	lfsr	2,20
 11176   0019B2  500D               	movf	Hue2Colour@cf^0,w,c
 11177   0019B4  26D9               	addwf	fsr2l,f,c
 11178   0019B6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11179   0019B8  22DA               	addwfc	fsr2h,f,c
 11180   0019BA  0E06               	movlw	6
 11181   0019BC  6EDE               	movwf	postinc2,c
 11182   0019BE  0E00               	movlw	0
 11183   0019C0  6EDD               	movwf	postdec2,c
 11184                           
 11185                           ;colorfunctions.c: 96:     }
 11186   0019C2  EF31  F00D         	goto	l3921
 11187   0019C6                     l3913:
 11188   0019C6  0E00               	movlw	0
 11189   0019C8  6E01               	movwf	___flge@ff1^0,c
 11190   0019CA  0E00               	movlw	0
 11191   0019CC  6E02               	movwf	(___flge@ff1+1)^0,c
 11192   0019CE  0ED0               	movlw	208
 11193   0019D0  6E03               	movwf	(___flge@ff1+2)^0,c
 11194   0019D2  0E41               	movlw	65
 11195   0019D4  6E04               	movwf	(___flge@ff1+3)^0,c
 11196   0019D6  EE20 F010          	lfsr	2,16
 11197   0019DA  500D               	movf	Hue2Colour@cf^0,w,c
 11198   0019DC  26D9               	addwf	fsr2l,f,c
 11199   0019DE  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11200   0019E0  22DA               	addwfc	fsr2h,f,c
 11201   0019E2  CFDE F005          	movff	postinc2,___flge@ff2
 11202   0019E6  CFDE F006          	movff	postinc2,___flge@ff2+1
 11203   0019EA  CFDE F007          	movff	postinc2,___flge@ff2+2
 11204   0019EE  CFDE F008          	movff	postinc2,___flge@ff2+3
 11205   0019F2  ECF5  F01A         	call	___flge	;wreg free
 11206   0019F6  B0D8               	btfsc	status,0,c
 11207   0019F8  EF00  F00D         	goto	u3541
 11208   0019FC  EF02  F00D         	goto	u3540
 11209   001A00                     u3541:
 11210   001A00  EF31  F00D         	goto	l601
 11211   001A04                     u3540:
 11212   001A04  EE20 F010          	lfsr	2,16
 11213   001A08  500D               	movf	Hue2Colour@cf^0,w,c
 11214   001A0A  26D9               	addwf	fsr2l,f,c
 11215   001A0C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11216   001A0E  22DA               	addwfc	fsr2h,f,c
 11217   001A10  CFDE F001          	movff	postinc2,___flge@ff1
 11218   001A14  CFDE F002          	movff	postinc2,___flge@ff1+1
 11219   001A18  CFDE F003          	movff	postinc2,___flge@ff1+2
 11220   001A1C  CFDE F004          	movff	postinc2,___flge@ff1+3
 11221   001A20  0E00               	movlw	0
 11222   001A22  6E05               	movwf	___flge@ff2^0,c
 11223   001A24  0E00               	movlw	0
 11224   001A26  6E06               	movwf	(___flge@ff2+1)^0,c
 11225   001A28  0EE8               	movlw	232
 11226   001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
 11227   001A2C  0E41               	movlw	65
 11228   001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
 11229   001A30  ECF5  F01A         	call	___flge	;wreg free
 11230   001A34  B0D8               	btfsc	status,0,c
 11231   001A36  EF1F  F00D         	goto	u3551
 11232   001A3A  EF21  F00D         	goto	u3550
 11233   001A3E                     u3551:
 11234   001A3E  EF31  F00D         	goto	l601
 11235   001A42                     u3550:
 11236   001A42                     
 11237                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11238   001A42  0E26               	movlw	low STR_10
 11239   001A44  6E0F               	movwf	Hue2Colour@colourname^0,c
 11240   001A46  0E0E               	movlw	high STR_10
 11241   001A48  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11242   001A4A                     
 11243                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11244   001A4A  EE20 F014          	lfsr	2,20
 11245   001A4E  500D               	movf	Hue2Colour@cf^0,w,c
 11246   001A50  26D9               	addwf	fsr2l,f,c
 11247   001A52  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11248   001A54  22DA               	addwfc	fsr2h,f,c
 11249   001A56  0E07               	movlw	7
 11250   001A58  6EDE               	movwf	postinc2,c
 11251   001A5A  0E00               	movlw	0
 11252   001A5C  6EDD               	movwf	postdec2,c
 11253   001A5E  EF31  F00D         	goto	l3921
 11254   001A62                     l601:
 11255   001A62                     l3921:
 11256                           
 11257                           ;colorfunctions.c: 102:     return colourname;
 11258   001A62  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 11259   001A66  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11260   001A6A  0012               	return		;funcret
 11261   001A6C                     __end_of_Hue2Colour:
 11262                           	callstack 0
 11263                           
 11264 ;; *************** function ___flge *****************
 11265 ;; Defined at:
 11266 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 11269 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;		None               void
 11274 ;; Registers used:
 11275 ;;		wreg, status,2, status,0
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11281 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;Total ram usage:       12 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 1
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_main
 11292 ;;		_RGB2Hue
 11293 ;;		_Hue2Colour
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text65
 11298   0035EA                     __ptext65:
 11299                           	callstack 0
 11300   0035EA                     ___flge:
 11301                           	callstack 29
 11302   0035EA  0E00               	movlw	0
 11303   0035EC  1401               	andwf	___flge@ff1^0,w,c
 11304   0035EE  6E09               	movwf	??___flge^0,c
 11305   0035F0  0E00               	movlw	0
 11306   0035F2  1402               	andwf	(___flge@ff1+1)^0,w,c
 11307   0035F4  6E0A               	movwf	(??___flge+1)^0,c
 11308   0035F6  0E80               	movlw	128
 11309   0035F8  1403               	andwf	(___flge@ff1+2)^0,w,c
 11310   0035FA  6E0B               	movwf	(??___flge+2)^0,c
 11311   0035FC  0E7F               	movlw	127
 11312   0035FE  1404               	andwf	(___flge@ff1+3)^0,w,c
 11313   003600  6E0C               	movwf	(??___flge+3)^0,c
 11314   003602  5009               	movf	??___flge^0,w,c
 11315   003604  100A               	iorwf	(??___flge+1)^0,w,c
 11316   003606  100B               	iorwf	(??___flge+2)^0,w,c
 11317   003608  100C               	iorwf	(??___flge+3)^0,w,c
 11318   00360A  A4D8               	btfss	status,2,c
 11319   00360C  EF0A  F01B         	goto	u3341
 11320   003610  EF0C  F01B         	goto	u3340
 11321   003614                     u3341:
 11322   003614  EF14  F01B         	goto	l3815
 11323   003618                     u3340:
 11324   003618  0E00               	movlw	0
 11325   00361A  6E01               	movwf	___flge@ff1^0,c
 11326   00361C  0E00               	movlw	0
 11327   00361E  6E02               	movwf	(___flge@ff1+1)^0,c
 11328   003620  0E00               	movlw	0
 11329   003622  6E03               	movwf	(___flge@ff1+2)^0,c
 11330   003624  0E00               	movlw	0
 11331   003626  6E04               	movwf	(___flge@ff1+3)^0,c
 11332   003628                     l3815:
 11333   003628  0E00               	movlw	0
 11334   00362A  1405               	andwf	___flge@ff2^0,w,c
 11335   00362C  6E09               	movwf	??___flge^0,c
 11336   00362E  0E00               	movlw	0
 11337   003630  1406               	andwf	(___flge@ff2+1)^0,w,c
 11338   003632  6E0A               	movwf	(??___flge+1)^0,c
 11339   003634  0E80               	movlw	128
 11340   003636  1407               	andwf	(___flge@ff2+2)^0,w,c
 11341   003638  6E0B               	movwf	(??___flge+2)^0,c
 11342   00363A  0E7F               	movlw	127
 11343   00363C  1408               	andwf	(___flge@ff2+3)^0,w,c
 11344   00363E  6E0C               	movwf	(??___flge+3)^0,c
 11345   003640  5009               	movf	??___flge^0,w,c
 11346   003642  100A               	iorwf	(??___flge+1)^0,w,c
 11347   003644  100B               	iorwf	(??___flge+2)^0,w,c
 11348   003646  100C               	iorwf	(??___flge+3)^0,w,c
 11349   003648  A4D8               	btfss	status,2,c
 11350   00364A  EF29  F01B         	goto	u3351
 11351   00364E  EF2B  F01B         	goto	u3350
 11352   003652                     u3351:
 11353   003652  EF33  F01B         	goto	l3819
 11354   003656                     u3350:
 11355   003656  0E00               	movlw	0
 11356   003658  6E05               	movwf	___flge@ff2^0,c
 11357   00365A  0E00               	movlw	0
 11358   00365C  6E06               	movwf	(___flge@ff2+1)^0,c
 11359   00365E  0E00               	movlw	0
 11360   003660  6E07               	movwf	(___flge@ff2+2)^0,c
 11361   003662  0E00               	movlw	0
 11362   003664  6E08               	movwf	(___flge@ff2+3)^0,c
 11363   003666                     l3819:
 11364   003666  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11365   003668  EF38  F01B         	goto	u3361
 11366   00366C  EF3A  F01B         	goto	u3360
 11367   003670                     u3361:
 11368   003670  EF43  F01B         	goto	l3823
 11369   003674                     u3360:
 11370   003674  6C01               	negf	___flge@ff1^0,c
 11371   003676  1E02               	comf	(___flge@ff1+1)^0,f,c
 11372   003678  B0D8               	btfsc	status,0,c
 11373   00367A  2A02               	incf	(___flge@ff1+1)^0,f,c
 11374   00367C  1E03               	comf	(___flge@ff1+2)^0,f,c
 11375   00367E  B0D8               	btfsc	status,0,c
 11376   003680  2A03               	incf	(___flge@ff1+2)^0,f,c
 11377   003682  0E80               	movlw	128
 11378   003684  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11379   003686                     l3823:
 11380   003686  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11381   003688  EF48  F01B         	goto	u3371
 11382   00368C  EF4A  F01B         	goto	u3370
 11383   003690                     u3371:
 11384   003690  EF53  F01B         	goto	l935
 11385   003694                     u3370:
 11386   003694  6C05               	negf	___flge@ff2^0,c
 11387   003696  1E06               	comf	(___flge@ff2+1)^0,f,c
 11388   003698  B0D8               	btfsc	status,0,c
 11389   00369A  2A06               	incf	(___flge@ff2+1)^0,f,c
 11390   00369C  1E07               	comf	(___flge@ff2+2)^0,f,c
 11391   00369E  B0D8               	btfsc	status,0,c
 11392   0036A0  2A07               	incf	(___flge@ff2+2)^0,f,c
 11393   0036A2  0E80               	movlw	128
 11394   0036A4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11395   0036A6                     l935:
 11396   0036A6  0E00               	movlw	0
 11397   0036A8  1A01               	xorwf	___flge@ff1^0,f,c
 11398   0036AA  0E00               	movlw	0
 11399   0036AC  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11400   0036AE  0E00               	movlw	0
 11401   0036B0  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11402   0036B2  0E80               	movlw	128
 11403   0036B4  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11404   0036B6  0E00               	movlw	0
 11405   0036B8  1A05               	xorwf	___flge@ff2^0,f,c
 11406   0036BA  0E00               	movlw	0
 11407   0036BC  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11408   0036BE  0E00               	movlw	0
 11409   0036C0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11410   0036C2  0E80               	movlw	128
 11411   0036C4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11412   0036C6  5005               	movf	___flge@ff2^0,w,c
 11413   0036C8  5C01               	subwf	___flge@ff1^0,w,c
 11414   0036CA  5006               	movf	(___flge@ff2+1)^0,w,c
 11415   0036CC  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11416   0036CE  5007               	movf	(___flge@ff2+2)^0,w,c
 11417   0036D0  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11418   0036D2  5008               	movf	(___flge@ff2+3)^0,w,c
 11419   0036D4  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11420   0036D6  B0D8               	btfsc	status,0,c
 11421   0036D8  EF70  F01B         	goto	u3381
 11422   0036DC  EF72  F01B         	goto	u3380
 11423   0036E0                     u3381:
 11424   0036E0  EF75  F01B         	goto	l3829
 11425   0036E4                     u3380:
 11426   0036E4  90D8               	bcf	status,0,c
 11427   0036E6  EF76  F01B         	goto	l940
 11428   0036EA                     l3829:
 11429   0036EA  80D8               	bsf	status,0,c
 11430   0036EC                     l940:
 11431   0036EC  0012               	return		;funcret
 11432   0036EE                     __end_of___flge:
 11433                           	callstack 0
 11434                           
 11435 ;; *************** function _ClickLEDOn *****************
 11436 ;; Defined at:
 11437 ;;		line 93 in file "colorclick.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  power           1    wreg     unsigned char 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  power           1    0[COMRAM] unsigned char 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  1    wreg      void 
 11444 ;; Registers used:
 11445 ;;		wreg, status,2
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11455 ;;Total ram usage:        1 bytes
 11456 ;; Hardware stack levels used: 1
 11457 ;; Hardware stack levels required when called: 1
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		_main
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text66
 11466   004790                     __ptext66:
 11467                           	callstack 0
 11468   004790                     _ClickLEDOn:
 11469                           	callstack 29
 11470                           
 11471                           ;incstack = 0
 11472                           ;ClickLEDOn@power stored from wreg
 11473   004790  6E01               	movwf	ClickLEDOn@power^0,c
 11474   004792                     
 11475                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11476   004792  5001               	movf	ClickLEDOn@power^0,w,c
 11477   004794  B4D8               	btfsc	status,2,c
 11478   004796  EFCF  F023         	goto	u3941
 11479   00479A  EFD1  F023         	goto	u3940
 11480   00479E                     u3941:
 11481   00479E  EFD6  F023         	goto	l4287
 11482   0047A2                     u3940:
 11483   0047A2                     
 11484                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11485   0047A2  827F               	bsf	127,1,c	;volatile
 11486                           
 11487                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11488   0047A4  8879               	bsf	121,4,c	;volatile
 11489                           
 11490                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11491   0047A6  8E7E               	bsf	126,7,c	;volatile
 11492                           
 11493                           ;colorclick.c: 99:     }
 11494   0047A8  EFE1  F023         	goto	l450
 11495   0047AC                     l4287:
 11496   0047AC  5001               	movf	ClickLEDOn@power^0,w,c
 11497   0047AE  A4D8               	btfss	status,2,c
 11498   0047B0  EFDC  F023         	goto	u3951
 11499   0047B4  EFDE  F023         	goto	u3950
 11500   0047B8                     u3951:
 11501   0047B8  EFE1  F023         	goto	l450
 11502   0047BC                     u3950:
 11503   0047BC                     
 11504                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11505   0047BC  927F               	bcf	127,1,c	;volatile
 11506                           
 11507                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11508   0047BE  9879               	bcf	121,4,c	;volatile
 11509                           
 11510                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11511   0047C0  9E7E               	bcf	126,7,c	;volatile
 11512   0047C2                     l450:
 11513   0047C2  0012               	return		;funcret
 11514   0047C4                     __end_of_ClickLEDOn:
 11515                           	callstack 0
 11516                           
 11517 ;; *************** function _HighISR *****************
 11518 ;; Defined at:
 11519 ;;		line 25 in file "interrupts.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;		None
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;		None
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  1    wreg      void 
 11526 ;; Registers used:
 11527 ;;		wreg, status,2
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11537 ;;Total ram usage:        0 bytes
 11538 ;; Hardware stack levels used: 1
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		Interrupt level 2
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	intcode
 11547   000008                     __pintcode:
 11548                           	callstack 0
 11549   000008                     _HighISR:
 11550                           	callstack 22
 11551                           
 11552                           ;incstack = 0
 11553   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11554   00000A                     
 11555                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11556   00000A  010E               	movlb	14	; () banked
 11557   00000C  AB33               	btfss	51,5,b	;volatile
 11558   00000E  EF0B  F000         	goto	i2u421_41
 11559   000012  EF0D  F000         	goto	i2u421_40
 11560   000016                     i2u421_41:
 11561   000016  EF14  F000         	goto	i2l667
 11562   00001A                     i2u421_40:
 11563   00001A                     
 11564                           ; BSR set to: 14
 11565                           ;interrupts.c: 29:     maxTime = 1;
 11566   00001A  0E00               	movlw	0
 11567   00001C  0101               	movlb	1	; () banked
 11568   00001E  6F25               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11569   000020  0E01               	movlw	1
 11570   000022  6F24               	movwf	_maxTime& (0+255),b	;volatile
 11571   000024                     
 11572                           ; BSR set to: 1
 11573                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11574   000024  010E               	movlb	14	; () banked
 11575   000026  9B33               	bcf	51,5,b	;volatile
 11576   000028                     i2l667:
 11577                           
 11578                           ; BSR set to: 14
 11579   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11580   00002A  0011               	retfie		f
 11581   00002C                     __end_of_HighISR:
 11582                           	callstack 0
 11583                           
 11584                           	psect	rparam
 11585   000000                     
 11586                           	psect	temp
 11587   00005F                     btemp:
 11588                           	callstack 0
 11589   00005F                     	ds	1
 11590   000000                     int$flags	set	btemp
 11591   000000                     wtemp8	set	btemp+1
 11592   000000                     ttemp5	set	btemp+1
 11593   000000                     ttemp6	set	btemp+4
 11594   000000                     ttemp7	set	btemp+8
 11595                           
 11596                           	psect	idloc
 11597                           
 11598                           ;Config register IDLOC0 @ 0x200000
 11599                           ;	unspecified, using default values
 11600   200000                     	org	2097152
 11601   200000  0FFF               	dw	4095
 11602                           
 11603                           ;Config register IDLOC1 @ 0x200002
 11604                           ;	unspecified, using default values
 11605   200002                     	org	2097154
 11606   200002  0FFF               	dw	4095
 11607                           
 11608                           ;Config register IDLOC2 @ 0x200004
 11609                           ;	unspecified, using default values
 11610   200004                     	org	2097156
 11611   200004  0FFF               	dw	4095
 11612                           
 11613                           ;Config register IDLOC3 @ 0x200006
 11614                           ;	unspecified, using default values
 11615   200006                     	org	2097158
 11616   200006  0FFF               	dw	4095
 11617                           
 11618                           ;Config register IDLOC4 @ 0x200008
 11619                           ;	unspecified, using default values
 11620   200008                     	org	2097160
 11621   200008  0FFF               	dw	4095
 11622                           
 11623                           ;Config register IDLOC5 @ 0x20000A
 11624                           ;	unspecified, using default values
 11625   20000A                     	org	2097162
 11626   20000A  0FFF               	dw	4095
 11627                           
 11628                           ;Config register IDLOC6 @ 0x20000C
 11629                           ;	unspecified, using default values
 11630   20000C                     	org	2097164
 11631   20000C  0FFF               	dw	4095
 11632                           
 11633                           ;Config register IDLOC7 @ 0x20000E
 11634                           ;	unspecified, using default values
 11635   20000E                     	org	2097166
 11636   20000E  0FFF               	dw	4095
 11637                           
 11638                           	psect	config
 11639                           
 11640                           ;Config register CONFIG1L @ 0x300000
 11641                           ;	External Oscillator mode Selection bits
 11642                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11643                           ;	Power-up default value for COSC bits
 11644                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11645   300000                     	org	3145728
 11646   300000  AA                 	db	170
 11647                           
 11648                           ;Config register CONFIG1H @ 0x300001
 11649                           ;	unspecified, using default values
 11650                           ;	Clock Out Enable bit
 11651                           ;	CLKOUTEN = 0x1, unprogrammed default
 11652                           ;	Clock Switch Enable bit
 11653                           ;	CSWEN = 0x1, unprogrammed default
 11654                           ;	Fail-Safe Clock Monitor Enable bit
 11655                           ;	FCMEN = 0x1, unprogrammed default
 11656   300001                     	org	3145729
 11657   300001  FF                 	db	255
 11658                           
 11659                           ;Config register CONFIG2L @ 0x300002
 11660                           ;	unspecified, using default values
 11661                           ;	Master Clear Enable bit
 11662                           ;	MCLRE = 0x1, unprogrammed default
 11663                           ;	Power-up Timer Enable bit
 11664                           ;	PWRTE = 0x1, unprogrammed default
 11665                           ;	Low-power BOR enable bit
 11666                           ;	LPBOREN = 0x1, unprogrammed default
 11667                           ;	Brown-out Reset Enable bits
 11668                           ;	BOREN = 0x3, unprogrammed default
 11669   300002                     	org	3145730
 11670   300002  FF                 	db	255
 11671                           
 11672                           ;Config register CONFIG2H @ 0x300003
 11673                           ;	unspecified, using default values
 11674                           ;	Brown Out Reset Voltage selection bits
 11675                           ;	BORV = 0x3, unprogrammed default
 11676                           ;	ZCD Disable bit
 11677                           ;	ZCD = 0x1, unprogrammed default
 11678                           ;	PPSLOCK bit One-Way Set Enable bit
 11679                           ;	PPS1WAY = 0x1, unprogrammed default
 11680                           ;	Stack Full/Underflow Reset Enable bit
 11681                           ;	STVREN = 0x1, unprogrammed default
 11682                           ;	Debugger Enable bit
 11683                           ;	DEBUG = 0x1, unprogrammed default
 11684                           ;	Extended Instruction Set Enable bit
 11685                           ;	XINST = 0x1, unprogrammed default
 11686   300003                     	org	3145731
 11687   300003  FF                 	db	255
 11688                           
 11689                           ;Config register CONFIG3L @ 0x300004
 11690                           ;	WDT Period Select bits
 11691                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11692                           ;	WDT operating mode
 11693                           ;	WDTE = OFF, WDT Disabled
 11694   300004                     	org	3145732
 11695   300004  9F                 	db	159
 11696                           
 11697                           ;Config register CONFIG3H @ 0x300005
 11698                           ;	unspecified, using default values
 11699                           ;	WDT Window Select bits
 11700                           ;	WDTCWS = 0x7, unprogrammed default
 11701                           ;	WDT input clock selector
 11702                           ;	WDTCCS = 0x7, unprogrammed default
 11703   300005                     	org	3145733
 11704   300005  FF                 	db	255
 11705                           
 11706                           ;Config register CONFIG4L @ 0x300006
 11707                           ;	unspecified, using default values
 11708                           ;	Write Protection Block 0
 11709                           ;	WRT0 = 0x1, unprogrammed default
 11710                           ;	Write Protection Block 1
 11711                           ;	WRT1 = 0x1, unprogrammed default
 11712                           ;	Write Protection Block 2
 11713                           ;	WRT2 = 0x1, unprogrammed default
 11714                           ;	Write Protection Block 3
 11715                           ;	WRT3 = 0x1, unprogrammed default
 11716                           ;	Write Protection Block 3
 11717                           ;	WRT4 = 0x1, unprogrammed default
 11718                           ;	Write Protection Block 3
 11719                           ;	WRT5 = 0x1, unprogrammed default
 11720                           ;	Write Protection Block 3
 11721                           ;	WRT6 = 0x1, unprogrammed default
 11722                           ;	Write Protection Block 3
 11723                           ;	WRT7 = 0x1, unprogrammed default
 11724   300006                     	org	3145734
 11725   300006  FF                 	db	255
 11726                           
 11727                           ;Config register CONFIG4H @ 0x300007
 11728                           ;	unspecified, using default values
 11729                           ;	Configuration Register Write Protection bit
 11730                           ;	WRTC = 0x1, unprogrammed default
 11731                           ;	Boot Block Write Protection bit
 11732                           ;	WRTB = 0x1, unprogrammed default
 11733                           ;	Data EEPROM Write Protection bit
 11734                           ;	WRTD = 0x1, unprogrammed default
 11735                           ;	Scanner Enable bit
 11736                           ;	SCANE = 0x1, unprogrammed default
 11737                           ;	Low Voltage Programming Enable bit
 11738                           ;	LVP = 0x1, unprogrammed default
 11739   300007                     	org	3145735
 11740   300007  FF                 	db	255
 11741                           
 11742                           ;Config register CONFIG5L @ 0x300008
 11743                           ;	unspecified, using default values
 11744                           ;	UserNVM Program Memory Code Protection bit
 11745                           ;	CP = 0x1, unprogrammed default
 11746                           ;	DataNVM Memory Code Protection bit
 11747                           ;	CPD = 0x1, unprogrammed default
 11748   300008                     	org	3145736
 11749   300008  FF                 	db	255
 11750                           
 11751                           ;Config register CONFIG5H @ 0x300009
 11752                           ;	unspecified, using default values
 11753   300009                     	org	3145737
 11754   300009  FF                 	db	255
 11755                           
 11756                           ;Config register CONFIG6L @ 0x30000A
 11757                           ;	unspecified, using default values
 11758                           ;	Table Read Protection Block 0
 11759                           ;	EBTR0 = 0x1, unprogrammed default
 11760                           ;	Table Read Protection Block 1
 11761                           ;	EBTR1 = 0x1, unprogrammed default
 11762                           ;	Table Read Protection Block 2
 11763                           ;	EBTR2 = 0x1, unprogrammed default
 11764                           ;	Table Read Protection Block 3
 11765                           ;	EBTR3 = 0x1, unprogrammed default
 11766                           ;	Table Read Protection Block 4
 11767                           ;	EBTR4 = 0x1, unprogrammed default
 11768                           ;	Table Read Protection Block 5
 11769                           ;	EBTR5 = 0x1, unprogrammed default
 11770                           ;	Table Read Protection Block 6
 11771                           ;	EBTR6 = 0x1, unprogrammed default
 11772                           ;	Table Read Protection Block 7
 11773                           ;	EBTR7 = 0x1, unprogrammed default
 11774   30000A                     	org	3145738
 11775   30000A  FF                 	db	255
 11776                           
 11777                           ;Config register CONFIG6H @ 0x30000B
 11778                           ;	unspecified, using default values
 11779                           ;	Boot Block Table Read Protection bit
 11780                           ;	EBTRB = 0x1, unprogrammed default
 11781   30000B                     	org	3145739
 11782   30000B  FF                 	db	255
 11783                           tosu	equ	0xFFF
 11784                           tosh	equ	0xFFE
 11785                           tosl	equ	0xFFD
 11786                           stkptr	equ	0xFFC
 11787                           pclatu	equ	0xFFB
 11788                           pclath	equ	0xFFA
 11789                           pcl	equ	0xFF9
 11790                           tblptru	equ	0xFF8
 11791                           tblptrh	equ	0xFF7
 11792                           tblptrl	equ	0xFF6
 11793                           tablat	equ	0xFF5
 11794                           prodh	equ	0xFF4
 11795                           prodl	equ	0xFF3
 11796                           indf0	equ	0xFEF
 11797                           postinc0	equ	0xFEE
 11798                           postdec0	equ	0xFED
 11799                           preinc0	equ	0xFEC
 11800                           plusw0	equ	0xFEB
 11801                           fsr0h	equ	0xFEA
 11802                           fsr0l	equ	0xFE9
 11803                           wreg	equ	0xFE8
 11804                           indf1	equ	0xFE7
 11805                           postinc1	equ	0xFE6
 11806                           postdec1	equ	0xFE5
 11807                           preinc1	equ	0xFE4
 11808                           plusw1	equ	0xFE3
 11809                           fsr1h	equ	0xFE2
 11810                           fsr1l	equ	0xFE1
 11811                           bsr	equ	0xFE0
 11812                           indf2	equ	0xFDF
 11813                           postinc2	equ	0xFDE
 11814                           postdec2	equ	0xFDD
 11815                           preinc2	equ	0xFDC
 11816                           plusw2	equ	0xFDB
 11817                           fsr2h	equ	0xFDA
 11818                           fsr2l	equ	0xFD9
 11819                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    144     159
    BANK1           256      0     164
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2800$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2747$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2747$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    memoryUpdateTime@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    White@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fltol
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fldiv->___flsub
    _getTimerValue->___fltol
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fltol->___flmul
    ___flmul->___fldiv
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour2Action
    _memoryUpdateTime->_getTimerValue
    _RGB2Hue->___fltol
    _Colour2Action->_White
    _White->_getTimerValue
    _getTimerValue->___fltol
    ___fltol->___flmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  493021
                                             41 BANK0    103   103      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                     6     2      4    5714
                                             21 BANK0      6     2      4
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2190
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16933
                                             15 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  445987
                                             37 BANK0      4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               16     6     10  239521
                                             21 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        6     4      2    5495
                                             15 BANK0      6     4      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1406
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1075
                                             86 COMRAM     8     4      4
                                             13 BANK0      2     2      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2990
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9084
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19192
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10324
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9692
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8432
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4225
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8005
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedAhead
         _fullSpeedReverse
         _reverseHalfSquare
         _stop
       _fullSpeedAhead
       _getTimerValue
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A4       7       64.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A1      62        0.0%
DATA                 0      0     1A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 23:22:30 2023

                    _color_read_Red 4426                        ___fldiv@aexp 004A  
                      ___fldiv@bexp 0049                        ___fldiv@sign 0042  
                   _color_read_Blue 4516                                  l30 484C  
                                l33 4872                                  l42 4960  
                                l27 484A                                  l36 496A  
                                l45 4940                                  l39 4956  
                                l48 46D8                     ??_getTimerValue 0071  
               ___wmul@multiplicand 0003                      ?_rotate180left 0020  
                  _color_read_Clear 44C6                    _color_read_Green 4476  
                 ??_Interrupts_init 0001                         Green_L90@mL 0021  
                       Green_L90@mR 0023                                 l131 2AA2  
                               l301 37D4                                 l311 3C58  
                               l232 3EB8                                 l321 2760  
                               l145 2C4C                                 l306 38BC  
                               l316 3CFC                                 l332 2968  
                               l501 4820                                 l254 3E28  
                               l342 2A2A                                 l239 3144  
                               l248 3BB2                                 l272 3F42  
                               l264 40D0                                 l520 4974  
                               l432 48FE                                 l601 1A62  
                               l249 3BB4                                 l281 4050  
                               l441 4564                                 l450 47C2  
                               l259 3D92                                 l275 3FCA  
                               l291 4248                                 l523 4326  
                               l435 4474                                 l444 4514  
                               l269 4150                                 l517 48BC  
                               l429 4718                                 l278 4424  
                               l286 41CC                                 l438 44C4  
                               l607 1A6A                                 l392 4756  
                               l296 43D2                                 l624 2E24  
                               l617 2DD6                                 l465 4934  
                               l377 48DE                                 l386 4902  
                               l389 4916                                 l661 494C  
                               l398 478E                                 l670 4898  
                               l582 10B0                                 l590 157C  
                               l576 35E8                                 l498 47F2  
                               l940 36EC                                 l935 36A6  
                               l929 3B0E                                 l967 34E2  
            memoryUpdateMovement@cf 0001                                 wreg 000FE8  
             ?_memoryUpdateMovement 0001                        ___flmul@aexp 0065  
                      ___flmul@bexp 0066                        ___flmul@sign 0060  
                      ___flmul@temp 006B                        ___flmul@prod 0067  
                   __end_of_RGB2Hue 157E                        ___fltol@exp1 006E  
                              l1200 1C0E                                l1301 2318  
                              l1215 1D74                                l1207 1F2A  
                              l1224 1E44                                l1240 4696  
                              l3001 42A8                                l1161 42B4  
                              l1225 1E32                                l1411 4650  
                              l3003 42AE                                l3011 305E  
                              l1332 2F14                                l1252 26F0  
                              l1405 329E                                l3013 3062  
                              l3005 2FDA                                l3021 3B10  
                              l3101 3D3E                                l1325 2E7C  
                              l1254 2550                                l1423 3A64  
                              l3015 30A4                                l3007 2FF6  
                              l3031 3B5A                                l3023 3B16  
                              l3111 3D7C                                l3103 3D52  
                              l1263 2596                                l1440 45B4  
                              l1168 42BC                                l1328 2FD8  
                              l4001 45B6                                l3017 30C0  
                              l3009 304A                                l3121 40FA  
                              l3113 40D2                                l3033 3B66  
                              l3025 3B2E                                l3041 3D94  
                              l3105 3D5E                                l1265 260E  
                              l1257 2514                                l3201 485C  
                              l1434 4976                                l1266 25FC  
                              l4003 45C6                                l3019 3104  
                              l3131 413A                                l3123 410E  
                              l3115 40F2                                l3035 3B72  
                              l3027 3B38                                l3043 3DB4  
                              l3107 3D6A                                l3211 407A  
                              l3203 4052                                l1291 21E8  
                              l1339 2F70                                l1444 399A  
                              l1348 4602                                l1284 1FF2  
                              l4021 4776                                l4013 4758  
                              l4005 45CE                                l3125 411A  
                              l3029 3B50                                l3037 3B82  
                              l3061 3E0E                                l3053 3DD4  
                              l3045 3DC0                                l3141 3F14  
                              l3133 3EBA                                l3109 3D78  
                              l3221 40BA                                l3213 408E  
                              l3205 4072                                l1293 2260  
                              l3301 2082                                l4101 247A  
                              l1294 224E                                l1198 1C5A  
                              l4015 475C                                l3071 39CA  
                              l1383 3320                                l3151 32BA  
                              l4007 45D6                                l3127 4126  
                              l3039 3B9A                                l3063 3E12  
                              l3055 3DE8                                l3047 3DCC  
                              l3143 3F28                                l3135 3EBC  
                              l3231 3F9C                                l3223 3F44  
                              l3215 409A                                l3311 20C4  
                              l3303 208E                                l4111 24B8  
                              l4103 247A                                l1199 1C48  
                              l4023 48E2                                l4031 4476  
                              l1288 2356                                l4017 476A  
                              l3073 39E8                                l3065 399C  
                              l3081 4572                                l3161 32FE  
                              l1385 3328                                l3153 32CC  
                              l4009 45F2                                l3129 4136  
                              l3241 3FE0                                l3057 3DF4  
                              l3145 3F40                                l3137 3ED0  
                              l3233 3FB0                                l3225 3F46  
                              l3217 40A6                                l3321 2126  
                              l3313 20D4                                l3305 209C  
                              l3401 346E                                l4121 2504  
                              l4113 24C8                                l4201 3AE2  
                              l4033 44BC                                l4025 4426  
                              l1394 33DA                                l4019 476E  
                              l3075 3A1E                                l3067 39AE  
                              l3083 4576                                l3171 337E  
                              l3163 333C                                l3155 32D4  
                              l3147 32A0                                l3243 3FF8  
                              l3059 3E00                                l3139 3EE8  
                              l3091 3D1E                                l3235 3FC8  
                              l3227 3F5A                                l3219 40B6  
                              l3331 21CE                                l3323 2142  
                              l3315 20EE                                l3307 20A8  
                              l3251 1F3A                                l3411 3496  
                              l3403 3478                                l4131 254E  
                              l4123 2512                                l4115 24D8  
                              l4107 248E                                l4051 2364  
                              l4203 3B06                                l4043 44C6  
                              l4027 446C                                l4211 48C2  
                              l3069 39C0                                l3085 45A8  
                              l3173 33B4                                l3165 3350  
                              l3157 32E8                                l3149 32B2  
                              l3181 38E8                                l4301 471A  
                              l3245 4024                                l3237 43D4  
                              l3093 3D2A                                l3229 3F72  
                              l3341 220A                                l3333 21D8  
                              l3325 216C                                l3317 20FE  
                              l3309 20B8                                l3261 1F7A  
                              l3253 1F48                                l3413 34A2  
                              l3405 3482                                l4141 2594  
                              l4133 2560                                l4125 251E  
                              l4117 24E0                                l4109 24A8  
                              l4061 23A4                                l4053 2372  
                              l4205 3B0C                                l4037 4516  
                              l4045 450C                                l4221 48DC  
                              l4213 48CC                                l3079 4566  
                              l3175 33B8                                l3167 3354  
                              l3159 32F0                                l3191 393A  
                              l4303 472E                                l3247 4038  
                              l3239 3FCC                                l3095 3D36  
                              l3351 227C                                l3343 2218  
                              l3335 21E6                                l3327 21A2  
                              l3319 211A                                l3271 1FAA  
                              l3263 1F80                                l3255 1F4A  
                              l3415 34B2                                l3431 2EA2  
                              l3423 2E28                                l4151 25F4  
                              l4135 2576                                l4143 25A6  
                              l4127 253C                                l4119 24F0  
                              l4071 23CA                                l4063 23A6  
                              l4055 2374                                l4311 0E52  
                              l3503 4962                                l3511 4958  
                              l4231 4702                                l4223 46DA  
                              l4039 455C                                l4215 48CE  
                              l3177 33BC                                l3169 3372  
                              l3193 394C                                l3185 38F4  
                              l4305 474A                                l3089 3CFE  
                              l3361 22E6                                l3353 228A  
                              l3345 2246                                l3337 21F8  
                              l3329 21B0                                l3281 1FE2  
                              l3273 1FAC                                l3265 1F90  
                              l3257 1F5A                                l3249 1F2C  
                              l3417 34C2                                l3441 2EFC  
                              l3425 2E38                                l3601 42D4  
                              l4161 2662                                l4145 25B4  
                              l4137 257C                                l4129 253E  
                              l4081 240A                                l4073 23D8  
                              l4057 2384                                l4065 23AE  
                              l4049 2358                                l4321 0F54  
                              l4313 0E9A                                l3505 4966  
                              l3513 495C                                l4241 4714  
                              l4233 470C                                l4225 46DE  
                              l3521 469E                                l4217 48D8  
                              l4209 48BE                                l4401 2A44  
                              l3195 3976                                l3187 3902  
                              l3179 38BE                                l3371 233C  
                              l3363 2300                                l3355 22B4  
                              l3339 2206                                l3291 2032  
                              l3283 2002                                l3275 1FBC  
                              l3267 1F96                                l3259 1F6A  
                              l3419 34D2                                l3451 2F60  
                              l3443 2EFE                                l3435 2EB6  
                              l3427 2E46                                l4171 26CC  
                              l4155 261E                                l4163 2666  
                              l4147 25B8                                l4139 2586  
                              l4091 244A                                l4083 240C  
                              l4075 23DA                                l4067 23BE  
                              l4059 2394                                l3611 1A78  
                              l4331 1086                                l4323 0F9C  
                              l4315 0EE2                                l4251 48A2  
                              l3515 4938                                l4243 4716  
                              l4235 470E                                l4227 46E8  
                              l3523 46A6                                l3507 494E  
                              l4219 48DA                                l4307 47F4  
                              l4411 2A5E                                l4403 2A44  
                              l3605 4902                                l3189 391E  
                              l3541 41CE                                l3533 496C  
                              l3365 231C                                l3373 2342  
                              l3349 2270                                l3357 22B8  
                              l3293 203C                                l3285 2012  
                              l3277 1FCC                                l3269 1F9C  
                              l3381 33F4                                l3461 2FB8  
                              l3453 2F7E                                l3445 2F0A  
                              l3437 2EBE                                l3429 2E8C  
                              l4245 4928                                l4173 26D0  
                              l4165 2680                                l4157 262A  
                              l4149 25C6                                l4093 2452  
                              l4077 23EA                                l4085 2414  
                              l4069 23C4                                l3701 1C2C  
                              l3621 1AB8                                l3613 1A86  
                              l4341 127A                                l4333 10F8  
                              l4325 0FC4                                l4317 0F04  
                              l4253 48AC                                l3517 493C  
                              l4237 4710                                l4229 46F8  
                              l3525 46AE                                l3509 4952  
                              l4261 3E3A                                l4309 4806  
                              l4421 2A80                                l4413 2A66  
                              l4405 2A50                                l3607 4912  
                              l3471 316A                                l3551 43BE  
                              l3543 41E0                                l3535 4152  
                              l3375 2346                                l3367 232C  
                              l3359 22D2                                l3295 2052  
                              l3279 1FDC                                l3391 3444  
                              l3463 2FC6                                l3455 2F80  
                              l3447 2F46                                l3439 2ECA  
                              l4247 4942                                l4175 26DE  
                              l4167 2696                                l4159 2638  
                              l4095 2456                                l4087 2424  
                              l4079 23FA                                l3711 1C78  
                              l3703 1C3A                                l3631 1AEA  
                              l3623 1ABA                                l3615 1A88  
                              l4343 12C6                                l4351 1512  
                              l4335 1140                                l4327 100C  
                              l4319 0F0E                                l4255 48AE  
                              l3199 484C                                l4239 4712  
                              l3527 46D4                                l3519 469A  
                              l4271 3E94                                l4263 3E60  
                              l4431 2A9E                                l4423 2A84  
                              l4415 2A6E                                l4407 2A56  
                              l3481 31E4                                l3473 3178  
                              l3545 4220                                l3537 4164  
                              l3561 3754                                l3553 36EE  
                              l3369 233A                                l3297 205E  
                              l3289 2026                                l3393 3448  
                              l3385 3408                                l3465 2FC8  
                              l3457 2F84                                l3449 2F52  
                              l4361 2C88                                l4177 26E4  
                              l4169 26B0                                l4089 243A  
                              l4193 3A66                                l3801 1F04  
                              l3721 1CB8                                l3705 1C3C  
                              l3641 1B12                                l3633 1AEC  
                              l3617 1A98                                l3625 1AC2  
                              l3609 1A6C                                l4353 152E  
                              l4345 1384                                l4337 1164  
                              l4329 1058                                l4257 48BA  
                              l4249 489A                                l3529 46D6  
                              l4281 3EB6                                l4273 3E9E  
                              l4265 3E64                                l4441 2ADC  
                              l4433 2AB0                                l4425 2A8C  
                              l4417 2A76                                l4409 2A5A  
                              l4283 4792                                l3811 35EA  
                              l3483 3208                                l3475 3186  
                              l3547 4380                                l3571 37E8  
                              l3539 41A4                                l3555 3700  
                              l3563 376C                                l3299 2076  
                              l3395 3456                                l3387 3432  
                              l3379 33DC                                l3459 2FA8  
                              l4371 2D16                                l4363 2CA6  
                              l4179 26E6                                l4099 246A  
                              l4195 3A94                                l3803 1F0A  
                              l3731 1CE2                                l3723 1CC4  
                              l3715 1C8C                                l3707 1C46  
                              l3651 1B4C                                l3643 1B22  
                              l3635 1AF2                                l3627 1AD2  
                              l3619 1AA8                                l4187 4652  
                              l4347 13EE                                l4339 1232  
                              l4291 34E4                                l4275 3EA0  
                              l4267 3E88                                l4259 3E2A  
                              l4355 47C4                                l4451 2B5C  
                              l4443 2AF4                                l4435 2AC8  
                              l4427 2A94                                l4419 2A7C  
                              l4285 47A2                                l3821 3674  
                              l3813 3618                                l3901 190A  
                              l3485 3214                                l3493 3264  
                              l3477 318A                                l3469 3146  
                              l3549 4392                                l3581 3890  
                              l3573 3810                                l3565 37A8  
                              l3557 3728                                l3389 3434  
                              l4381 2D9E                                l4373 2D2E  
                              l4365 2CBE                                l4357 2C50  
                              l4197 3AA4                                l3805 1F18  
                              l3741 1D54                                l3725 1CC8  
                              l3717 1C9C                                l3709 1C68  
                              l3733 1CE8                                l3661 1B78  
                              l3653 1B5E                                l3645 1B32  
                              l3637 1B00                                l3629 1AD8  
                              l4189 4662                                l4349 14AC  
                              l4293 357C                                l4277 3EAA  
                              l4269 3E92                                l4461 2BA8  
                              l4453 2B62                                l4445 2B00  
                              l4437 2ACC                                l4429 2A9C  
                              l4287 47AC                                l3823 3686  
                              l3815 3628                                l3911 19AE  
                              l3903 1912                                l3487 321C  
                              l3479 31AE                                l3591 3C5A  
                              l3583 38A8                                l3575 3828  
                              l3567 37C0                                l3559 3740  
                              l4383 2DBE                                l4375 2D4E  
                              l4367 2CDE                                l4359 2C70  
                              l4199 3AD2                                l3807 1F1A  
                              l3751 1DAE                                l3735 1D0E  
                              l3743 1D64                                l3727 1CD6  
                              l3719 1CAA                                l3671 1B8C  
                              l3663 1B7C                                l3655 1B6C  
                              l3647 1B34                                l3639 1B02  
                              l4295 3594                                l4279 3EAC  
                              l4471 2BDA                                l4463 2BB4  
                              l4455 2B68                                l4447 2B14  
                              l4439 2AD2                                l4391 2A30  
                              l4289 47BC                                l3825 3694  
                              l3817 3656                                l3913 19C6  
                              l3905 192A                                l3921 1A62  
                              l3489 322C                                l3497 3276  
                              l3833 4604                                l3593 3C6C  
                              l3585 3BB6                                l3577 383C  
                              l3569 37D6                                l4377 2D66  
                              l4369 2CF6                                l4385 2DD6  
                              l3761 1DDE                                l3753 1DB8  
                              l3745 1D8A                                l3737 1D42  
                              l3729 1CD8                                l3681 1BA0  
                              l3673 1B90                                l3665 1B80  
                              l3657 1B70                                l3649 1B3C  
                              l4297 35B0                                l4481 2C2E  
                              l4473 2BF6                                l4465 2BBA  
                              l4457 2B7C                                l4449 2B46  
                              l4393 2A34                                l3827 36E4  
                              l3819 3666                                l3915 1A04  
                              l3907 1968                                l3835 4610  
                              l3595 3CC0                                l3587 3BC8  
                              l3579 3854                                l3931 2738  
                              l4387 2DF8                                l4379 2D86  
                              l3771 1E06                                l3763 1DE2  
                              l3755 1DC6                                l3747 1D9A  
                              l3739 1D44                                l3691 1BDA  
                              l3683 1BA4                                l3675 1B94  
                              l3667 1B84                                l3659 1B74  
                              l3851 4836                                l3843 4822  
                              l4299 35CC                                l4483 2C32  
                              l4475 2C04                                l4467 2BC0  
                              l4459 2B96                                l4395 2A38  
                              l3829 36EA                                l3917 1A42  
                              l3909 19A6                                l3861 1602  
                              l3837 462C                                l3589 3C1C  
                              l3597 42BE                                l3941 2762  
                              l3933 273E                                l3925 26F2  
                              l3781 1E60                                l3773 1E14  
                              l3765 1DF2                                l3757 1DC8  
                              l3693 1BF6                                l3685 1BA8  
                              l3677 1B98                                l3669 1B88  
                              l3853 4838                                l3845 482C  
                              l4469 2BCE                                l4485 2C38  
                              l4397 2A3C                                l4389 2A2C  
                              l3919 1A4A                                l3871 16A2  
                              l3863 160A                                l3855 157E  
                              l3839 4648                                l2991 4274  
                              l2983 424A                                l3599 42C6  
                              l3951 27F4                                l3943 277A  
                              l3935 2746                                l3927 26F8  
                              l3791 1ECA                                l3783 1E6E  
                              l3775 1E2A                                l3759 1DD6  
                              l3767 1DF4                                l3695 1C06  
                              l3679 1B9C                                l3687 1BAC  
                              l3847 4832                                l4479 2C1A  
                              l4399 2A40                                l3881 1756  
                              l3873 16BA                                l3865 161E  
                              l3857 1586                                l2993 4282  
                              l2985 4252                                l2977 4874  
                              l3961 2896                                l3953 281A  
                              l3945 27A0                                l3937 274E  
                              l3929 2720                                l3793 1EEA  
                              l3785 1EA8                                l3769 1E02  
                              l3697 1C1C                                l3689 1BB0  
                              l3849 4834                                l3891 1830  
                              l3883 1794                                l3875 16F8  
                              l3867 165C                                l3859 15C4  
                              l2995 4288                                l2987 4264  
                              l2979 4890                                l3971 292A  
                              l3963 28AE                                l3955 2832  
                              l3947 27B8                                l3795 1EEE  
                              l3779 1E54                                l3787 1EAA  
                              l3699 1C28                                l3893 186E  
                              l3885 17D2                                l3877 1736  
                              l3869 169A                                l2997 429E  
                              l2989 426C                                l3981 2978  
                              l3973 2950                                l3965 28D4  
                              l3957 2858                                l3949 27DC  
                              l3797 1EFC                                l3789 1EBA  
                              l3895 1876                                l3887 17DA  
                              l3879 173E                                l2999 42A6  
                              l3983 2990                                l3967 28EC  
                              l3959 2870                                l3975 2968  
                              l3799 1F02                                l3897 188E  
                              l3889 17F2                                l3985 299C  
                              l3977 296A                                l3969 2912  
                              l3993 29E6                                l3899 18CC  
                              l3995 29FA                                l3987 29C6  
                              l3979 2974                                l3997 2A0E  
                              l3989 29DA                                l3999 2A28  
                              STR_1 0E01                                STR_2 0E10  
                              STR_3 0E4C                                STR_4 0E3D  
                              STR_5 0E1C                                STR_6 0E36  
                              STR_7 0E43                                STR_8 0E2F  
                              STR_9 0E11                                u2120 4264  
                              u2200 3BB2                                u3000 1B12  
                              u2121 4260                                u2201 3BAE  
                              u3001 1B0E                                u2130 4282  
                              u2210 3E28                                u3010 1B22  
                              u2131 427E                                u2211 3E24  
                              u3011 1B1E                                u2220 39AE  
                              u2140 429E                                u3100 1C68  
                              u3020 1B5E                                u2221 39AA  
                              u2301 32AA                                u2141 429A  
                              u3101 1C64                                u3021 1B5A  
                              u2230 39C0                                u2310 32CC  
                              u2150 2FF6                                u3110 1C78  
                              u3030 1B6C                                u2231 39BC  
                              u2311 32C8                                u2151 2FF2  
                              u3111 1C74                                u3031 1B68  
                              u2240 39E8                                u2320 32FE  
                              u2400 394C                                u2160 30C0  
                              u3200 1DD6                                u3120 1CAA  
                              u3040 1BDA                                u4000 100C  
                      _BAUD4CONbits 000EE9                                u2241 39E4  
                              u2321 32FA                                u2401 3948  
                              u2161 30BC                                u3201 1DD2  
                              u3121 1CA6                                u3041 1BD6  
                              u4001 1008                                u2250 3A1E  
                              u2330 331C                                u2410 3976  
                              u2170 3B2E                                u3210 1DF2  
                              u3130 1CB8                                u3050 1BF2  
                              u4010 1058                                u2251 3A1A  
                              u2331 3318                                u2411 3972  
                              u2171 3B2A                                u3211 1DEE  
                              u3131 1CB4                                u3051 1BEC  
                              u4011 1054                                u2260 4598  
                              u2340 3372                                u2180 3B50  
                              u2500 1FCC                                u4100 2D16  
                              u3300 1ECA                                u3220 1E02  
                              u3140 1CD6                                u3060 1BF4  
                              u4020 10F8                                u2420 485C  
                              u2341 336E                                u2181 3B4C  
                              u2501 1FC8                                u4101 2D12  
                              u3301 1EC6                                u3221 1DFE  
                              u3141 1CD2                                u4021 10F4  
                              u2421 4858                                u2270 45A8  
                              u2350 33A0                                u2190 3B9A  
                              u2510 2002                                u4110 2D4E  
                              u3310 1EEA                                u3230 1E14  
                              u3150 1D0E                                u3070 1C1C  
                              u4030 1140                                u2430 4872  
                              u2271 45A4                                u2191 3B96  
                              u2511 1FFE                                u4111 2D4A  
                              u3311 1EE6                                u3231 1E10  
                              u3151 1D0A                                u3071 1C18  
                              u4031 113C                                u2431 486E  
                              u3400 15C4                                u2360 33DA  
                              u2280 3D92                                u2440 40D0  
                              u2600 228A                                u2520 2012  
                              u4120 2D86                                u3320 1EFC  
                              u3240 1E2A                                u3160 1D54  
                              u3080 1C3A                                u4040 127A  
                              u4200 2C4C                                u3401 15C0  
                              u2361 33D6                                u2281 3D8E  
                              u2441 40CC                                u2601 2286  
                              u2521 200E                                u4121 2D82  
                              u3321 1EF8                                u3241 1E26  
                              u3161 1D50                                u3081 1C36  
                              u4041 1276                                u4201 2C48  
                              u3410 1602                                u2370 38E8  
                              u2290 4150                                u2610 22D2  
                              u2530 218C                                u2450 1F48  
                              u4130 2DBE                                u3330 1F18  
                              u3250 1E40                                u3170 1D8A  
                              u3090 1C5A                                u4050 12C6  
                              _T2PR 000FBC                                u3411 15FE  
                              u2267 458E                                u2371 38E4  
                              u2291 414C                                u2611 22CE  
                              u2451 1F44                                u4131 2DBA  
                              u3331 1F14                                u3251 1E3C  
                              u3171 1D86                                u3091 1C56  
                              u4051 12C2                                u3340 3618  
                              u3500 18CC                                u3420 165C  
                              u2380 391E                                u2620 2300  
                              u2540 21E6                                u2460 1F5A  
                              u2700 34C2                                u4140 2DF8  
                              u3260 1E54                                u3180 1D9A  
                              u4060 152E                                u3341 3614  
                              u3501 18C8                                u3421 1658  
                              u2357 3396                                u2381 391A  
                              u2621 22FC                                u2541 21E2  
                              u2461 1F56                                u2701 34BE  
                              u4141 2DF4                                u3261 1E50  
                              u3181 1D96                                u4061 152A  
                              u3350 3656                                u3510 190A  
                              u3430 169A                                u2390 393A  
                              u2630 233A                                u2550 2206  
                              u2470 1F6A                                u2710 2E38  
                              u4070 2C70                                u3270 1E6E  
                              u3190 1DC6                                u4150 2AB0  
                              u3351 3652                                u3511 1906  
                              u3431 1696                                u2391 3936  
                              u2631 2336                                u2551 2202  
                              u2535 2182                                u2471 1F66  
                              u2711 2E34                                u4071 2C6C  
                              u3271 1E6A                                u3191 1DC2  
                              u4151 2AAC                                u3360 3674  
                              u3520 1968                                u3440 16F8  
                              u2560 2218                                u2480 1FAA  
                              u2640 33F4                                u2800 2FC6  
                              u2720 2E46                                u3600 2858  
                              u4080 2CA6                                u3280 1EA8  
                              u4160 2B46                                u3361 3670  
                              u3521 1964                                u3441 16F4  
                              u2561 2214                                u2481 1FA6  
                              u2641 33F0                                u2801 2FC2  
                              u2721 2E42                                u3601 2854  
                              u4081 2CA2                                u3281 1EA4  
                              u4161 2B42                                u3370 3694  
                              u3530 19A6                                u3450 1736  
                              u2810 316A                                u2570 2246  
                              u2490 1FBC                                u2650 3428  
                              u2730 2EA2                                u3610 2896  
                              u4090 2CDE                                u3290 1EBA  
                              u4170 2BA8                                u3371 3690  
                              u3531 19A2                                u3451 1732  
                              u2811 3166                                u4307 381A  
                              u2571 2242                                u2491 1FB8  
                              u2731 2E9E                                u3611 2892  
                              u4091 2CDA                                u3291 1EB6  
                              u4171 2BA4                                u4227 2ABC  
                              u3380 36E4                                u3540 1A04  
                              u3460 1794                                u2820 31AE  
                              u2900 3700                                u2580 225C  
                              u2660 3456                                u2740 2EF8  
                              u3620 28D4                                u3700 2394  
                              u4180 2C1A                                u3381 36E0  
                              u3541 1A00                                u3461 1790  
                              u2821 31AA                                u4317 389A  
                              u2901 36FC                                u2581 2258  
                              u2661 3452                                u2741 2EF4  
                              u3621 28D0                                u3701 2390  
                              u4181 2C16                                u4237 2B88  
                              u3550 1A42                                u3470 17D2  
                              u2830 31E4                                u3390 4648  
                              u2910 37E8                                u2590 2270  
                              u2670 346A                                u2750 2F42  
                              u3630 2912                                u3710 23D8  
                              u4190 2C2E                                u3551 1A3E  
                              u3471 17CE                                u2831 31E0  
                              u3391 4644                                u4407 3E02  
                              u4327 40AC                                u2911 37E4  
                              u2591 226C                                u2671 3466  
                              u2655 341E                                u2751 2F3E  
                              u3631 290E                                u3711 23D4  
                              u4247 46EE                                u4191 2C2A  
                              u3480 1830                                u2840 3208  
                              u2920 3BC8                                u2680 3492  
                              u2760 2F60                                u3640 2950  
                              u3560 275C                                u3800 2576  
                              u3720 23EA                                u3481 182C  
                              u2841 3204                                u4417 3FEA  
                              u4337 3F64                                u2921 3BC4  
                              u2681 348E                                u2761 2F5C  
                              u3641 294C                                u3561 2758  
                              u4257 272C                                u3801 2572  
                              u3721 23E6                                u3490 186E  
                              u2930 3C6C                                u2690 34B2  
                              u2770 2F70                                u3650 29C6  
                              u3570 27A0                                u3810 2594  
                              u3730 23FA                                u2850 46C2  
                              u3491 186A                                u4427 4016  
                              u4347 3F90                                u2931 3C68  
                              u2691 34AE                                u2771 2F6C  
                              u3651 29C2                                u3571 279C  
                              u4267 276E                                u3811 2590  
                              u3731 23F6                                u2851 46BA  
                              u2940 4912                                u2780 2F7E  
                              u3660 29FA                                u3580 27DC  
                              u3900 26DE                                u3820 25B4  
                              u3740 243A                                u2941 490E  
                              u4437 4042                                u4357 3FBA  
                              u2781 2F7A                                u4277 2A1A  
                              u3661 29F6                                u3581 27D8  
                              u3901 26DA                                u3821 25B0  
                              u3741 2436                                u3670 478E  
                              u2870 4164                                u2790 2FB8  
                              u3590 281A                                u3830 25C6  
                              u3750 247A                                u3910 3A94  
                              u2950 1A86                                u3671 478A  
                              u4447 3B78                                u4367 3D6C  
                              u2871 4160                                u4287 3732  
                              u2791 2FB4                                u3591 2816  
                              u3831 25C2                                u3751 2476  
                              u3911 3A90                                u2951 1A82  
                              u2880 41E0                                u3840 25F4  
                              u3760 24F0                                u3680 2372  
                              u3920 3AD2                                u2960 1A98  
                              u4457 412C                                u4377 3EDA  
                              u2881 41DC                                u4297 37B2  
                              u3841 25F0                                u3761 24EC  
                              u3681 236E                                u3921 3ACE  
                              u2961 1A94                                u2890 4392  
                              u3850 260A                                u3770 2512  
                              u3690 2384                                u3930 3B06  
                              u2970 1AA8                                u4467 4770  
                              u4387 3F06                                u2891 438E  
                              u3851 2606                                u3771 250E  
                              u3691 2380                                u3931 3B02  
                              u2971 1AA4                                u3940 47A2  
                              u3860 261E                                u3780 253C  
                              u2980 1AEA                                u2868 46C4  
                              u3941 479E                                u4397 3F32  
                              u3861 261A                                u3781 2538  
                              u2981 1AE6                                u3950 47BC  
                              u3870 2638                                u3790 2560  
                              u2990 1B00                                u3951 47B8  
                              u3871 2634                                u3791 255C  
                              u2991 1AFC                                u3880 2680  
                              u3960 0E9A                                u3881 267C  
                              u3961 0E96                                u3890 26B0  
                              u3970 0EE2                                u3891 26AC  
                              u3971 0EDE                                u3980 0F54  
                              u3981 0F50                                u3990 0F9C  
                              u3991 0F98                 reverseHalfSquare@mL 001B  
               reverseHalfSquare@mR 001D                                _dbuf 0100  
                              _main 2A2C                                _prec 0122  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              _stoa 32A0                                btemp 005F  
                              _stop 3B10                          _ClickLEDOn 4790  
          memoryUpdateTime@timerVal 0079                                prodh 000FF4  
                              prodl 000FF3                                start 002C  
                   ___fldiv@new_exp 0043             __end_of_Yellow_rev1_R90 37D6  
     memoryUpdateTime@movementCount 0075              __end_of_color_read_Red 4476  
                   __end_of_HighISR 002C                        ___param_bank 000000  
                   __end_of_Red_R90 41CE                          _Hue2Colour 157E  
                   __end_of_Right45 3FCC                    __end_of_LED_init 4936  
                     ___fltol@sign1 006D                     __end_of___fladd 1F2C  
                             ?_main 0001                     __end_of___fldiv 26F2  
                             STR_10 0E26                               STR_11 0E48  
                             STR_13 0E48                     __end_of___flmul 2358  
                   __end_of___flsub 4698                     __end_of___fltol 34E4  
                             ?_stoa 000A                      _LightBlue_L135 3C5A  
                             ?_stop 0014                     __end_of___lwdiv 42BE  
                             i2l667 0028                        vfpfcnvrt@fmt 0022  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
           __end_of_sendCharSerial4 4918          __end_of_I2C_2_Master_Start 496C  
                             _White 26F2          __end_of_I2C_2_Master_Write 4942  
                             _flags 00F4                               _fputc 399C  
                 fullSpeedReverse@i 0019                               _width 0120  
                             _putch 4976                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             stoa@i 0018                               stoa@l 001C  
                             stoa@p 001E                               stoa@s 000C  
                             stoa@w 0016                               ttemp5 0060  
                             ttemp6 0063                               ttemp7 0067  
                             status 000FD8                               wtemp8 0060  
                   __end_of_sprintf 4604                     __end_of_strncmp 399C  
                  _memoryUpdateTime 47F4                __end_of_Color2String 4758  
           __end_of_color_read_Blue 4566               _I2C_2_Master_RepStart 494E  
                   ?_color_read_Red 0005                     __initialization 4328  
                      __end_of_main 2C50                        __end_of_stoa 33DC  
                      __end_of_stop 3BB6                     ??_rotate180left 0024  
            __end_of_LightBlue_L135 3CFE                              ??_main 0089  
                            ??_stoa 000E                              ??_stop 0018  
                     __activetblptr 000002              ??_memoryUpdateMovement 0007  
                         ??_RGB2Hue 0071                       ??_Orange_R135 0025  
                            ?_White 0075                        ?_setMotorPWM 000E  
                            ?_fputc 0001                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                     _colour_read_all 34E4  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RD5PPS 000E6F                              _RC7PPS 000E69  
                            _RE4PPS 000E76                              _RD6PPS 000E70  
                            i2l4491 000A                              _RG6PPS 000E88  
                            i2l4493 001A                              i2l4495 0024  
                         ??_HighISR 0001            __end_of_color_click_init 471A  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                       ?_ClickLEDOn 0001                    __end_of___xxtofl 2FDA  
                         ??_Red_R90 0025                              _Left45 3EBA  
                         ??_Right45 001E                    _fullSpeedReverse 40D2  
                  ?_Yellow_rev1_R90 0021                       ??_Timer0_init 0001  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0030  
                            White@i 0083                              ___flge 35EA  
                            ___fleq 3A66                           ??___fladd 0022  
                       ?_Hue2Colour 000D                              ___wmul 4874  
                         ??___fldiv 003A                       Orange_R135@mL 0021  
                         ??___flmul 0053                       Orange_R135@mR 0023  
                         ??___flsub 0032                           ??___fltol 005B  
                         ??___lwdiv 000B                          _TimerReset 496C  
                            _colorf 0176                     ?_LightBlue_L135 0021  
                            clear_0 4360                              clear_1 436C  
                fullSpeedReverse@mL 0014                  fullSpeedReverse@mR 0016  
                            _motorL 00F5                              _motorR 018C  
                            isa$std 000001                              _strlen 4566  
                            fputc@c 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                    ?_sendCharSerial4 0001  
 memoryUpdateMovement@movementCount 0003                              stoa@cp 001A  
                            stoa@fp 000A                              putch@c 0001  
                  __end_of_vfprintf 4652                              stop@mL 0014  
                            stop@mR 0016                   ??_initDCmotorsPWM 0003  
                         ??_sprintf 0038                           ??_strncmp 0007  
                  __end_of_turnLeft 3E2A                          ___flge@ff1 0001  
                        ___flge@ff2 0005                        ___xxtofl@arg 0016  
                      ___xxtofl@exp 0015                        ___xxtofl@val 000C  
                        ___fleq@ff1 0001                          ___fleq@ff2 0005  
               __end_of_Orange_R135 3C5A                          __accesstop 0060  
           __end_of__initialization 4372            __end_of_color_read_Clear 4516  
                   fullSpeedAhead@i 0019                   __end_of_Blue_T180 43D4  
          __end_of_color_read_Green 44C6              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                           ?_LED_init 0001  
                        ___fltol@f1 0057                    ?_color_read_Blue 0005  
                   _Interrupts_init 4942                      __pcstackCOMRAM 0001  
                     __end_of_White 2A2C                        __pidataBANK0 4978  
                      __pidataBANK1 4918                       __end_of_fputc 3A66  
                 __end_of_Green_L90 424A                       __end_of_putch 4978  
                         RGB2Hue@cf 006F                 __end_of_Timer0_init 48BE  
                       _ForwardFlag 00FE             __end_of_colour_read_all 35EA  
                           ??_White 007F                             ??_fputc 0005  
                           ??_putch 0001                          __pbssBANK0 00F0  
                        __pbssBANK1 0100                          ??_LED_init 0001  
                           ?_Left45 001A                   _color_writetoaddr 48E0  
                      _T2CLKCONbits 000FBF               __end_of_Colour2Action 2E26  
                           ?___flge 0001                             ?___fleq 0001  
                ?_color_writetoaddr 0003                             ?___wmul 0001  
                       ?_TimerReset 0001                 ??_color_writetoaddr 0004  
                           ?_strlen 0001               __end_of_getTimerValue 4328  
          __end_of_memoryUpdateTime 4822                        _Color2String 471A  
                           _RGB2Hue 0E52                           ?___xxtofl 000C  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                       _Orange_R135 3BB6                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5             __end_of_Interrupts_init 494E  
            color_writetoaddr@value 0003                    ??_color_read_Red 0007  
                           _HighISR 0008           __end_of_color_writetoaddr 4900  
                           _Red_R90 4152                  _I2C_2_Master_Start 4962  
                        _initUSART4 48BE                  _I2C_2_Master_Write 4936  
                           _Right45 3F44                             __Hparam 0000  
                           __Lparam 0000                   color_read_Red@tmp 000A  
                       _Timer0_init 489A             sendStringSerial4@string 0002  
                           White@mL 0075                             White@mR 0077  
                           ___fladd 1A6C                             ___fldiv 2358  
                           ___flmul 1F2C                             ___flsub 4652  
                           ___fltol 33DC                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 424A                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 002A                        __psmallconst 0E00  
                           __pcinit 4328                             __ramtop 0E00  
                         ?_turnLeft 0014                             __ptext0 2A2C  
                           __ptext1 47F4                             __ptext2 47C4  
                           __ptext3 48BE                             __ptext4 3E2A  
                           __ptext5 34E4                             __ptext6 4426  
                           __ptext7 4476                             __ptext8 44C6  
                           __ptext9 4516                             _maxTime 0124  
                         _T2CONbits 000FBD                    ?_colour_read_all 001A  
                        ??___xxtofl 0010                      Color2String@cf 0047  
          __end_of_fullSpeedReverse 4152                           _T2HLTbits 000FBE  
                           _sprintf 45B6                ??_I2C_2_Master_Start 0002  
              ??_I2C_2_Master_Write 0002                             _strncmp 38BE  
              end_of_initialization 4372      memoryUpdateMovement@colourcode 0007  
                           fputc@fp 0003                       _Pink_rev1_L90 37D6  
                     __Lmediumconst 0000                        ??_ClickLEDOn 0001  
                 ?_color_click_init 0001                      __45drightdelay 01A0  
                ??_color_click_init 0005                    ??_LightBlue_L135 0025  
                 __end_of_vfpfcnvrt 32A0                   _reverseHalfSquare 3FCC  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Hue2Colour 000F                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
memoryUpdateMovement@movementMemory 0005                          ??_vfprintf 0030  
                ?_reverseHalfSquare 001B                             strlen@a 0003  
                           strlen@s 0001               __end_of_rotate180left 4426  
                   _initDCmotorsPWM 3E2A                          ??_turnLeft 0018  
                  White@timerMemory 007D                           _PORTFbits 000F8E  
                setMotorPWM@negDuty 0013                   __end_of_turnRight 3D94  
                       ___fladd@grs 0029                 ??_reverseHalfSquare 001F  
                __end_of_ClickLEDOn 47C4                       ___xxtofl@sign 0014  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0012  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 0045                         ___fldiv@rem 003E  
                  fullSpeedAhead@mL 0014                    fullSpeedAhead@mR 0016  
          color_writetoaddr@address 0004                           Red_R90@mL 0021  
                         Red_R90@mR 0023             ??_I2C_2_Master_RepStart 0002  
                    _movementMemory 014E                  __end_of_Hue2Colour 1A6C  
                    ?_Pink_rev1_L90 0021                    ?_Interrupts_init 0001  
                       ___flmul@grs 0061                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0005                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0005                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0001                     Colour2Action@cf 0085  
         __end_of_reverseHalfSquare 4052                  ??_color_read_Clear 0007  
                ??_color_read_Green 0007                           _Blue_T180 4380  
                    __end_of_Left45 3F44                        _RGB2Hue$3155 0075  
                    __end_of___flge 36EE                      __end_of___fleq 3B10  
                    _fullSpeedAhead 4052                         vfpfcnvrt@ap 0024  
                       vfpfcnvrt@fp 0020                      __end_of___wmul 489A  
                         _Green_L90 41CE                           Right45@mL 001A  
                         Right45@mR 001C                      __end_of_strlen 45B6  
                        RGB2Hue@max 0079                          RGB2Hue@min 007B  
               color_read_Clear@tmp 000A                 start_initialization 4328  
                       __halfsquare 019C                            ??_Left45 001E  
               color_read_Green@tmp 000A                          ?_Blue_T180 0024  
           __end_of_initDCmotorsPWM 3EBA                         vfprintf@fmt 002C  
            __end_of_fullSpeedAhead 40D2                            ??___flge 0009  
                          ??___fleq 0009                            ??___wmul 0005  
                      ??_TimerReset 0001                         __pdataBANK0 00FE  
                       __pdataBANK1 0195                            ??_strlen 0003  
                         ___fladd@a 001E                           ___fladd@b 001A  
                   ClickLEDOn@power 0001                          ?_Green_L90 0021  
                         ___fldiv@a 0036                           ___fldiv@b 0032  
                 ?_memoryUpdateTime 0075                            ?_RGB2Hue 006F  
                         ___flmul@a 004F                           ___flmul@b 004B  
                         ___flsub@a 002E                           ___flsub@b 002A  
                     __pcstackBANK0 0060                        ?_Orange_R135 0021  
                ??_memoryUpdateTime 005F                     ??_Pink_rev1_L90 0025  
                          ?_HighISR 0001                  __end_of_TimerReset 4976  
                          ?_Red_R90 0021              Color2String@colourname 0049  
                          ?_Right45 001A                    ___lwdiv@dividend 0007  
                      ?_Timer0_init 0001                     ?_fullSpeedAhead 0014  
                         __pintcode 0008                            ?___fladd 001A  
                          ?___fldiv 0032                            ?___flmul 004B  
                          ?___flsub 002A                            ?___fltol 0057  
                          ?___lwdiv 0007                I2C_2_Master_Read@ack 0003  
              I2C_2_Master_Read@tmp 0004                     Pink_rev1_L90@mL 0021  
                   Pink_rev1_L90@mR 0023                         __smallconst 0E00  
                 _I2C_2_Master_Idle 484C                   _I2C_2_Master_Init 4822  
                 _I2C_2_Master_Read 4698                       __45dleftdelay 01A2  
                 _I2C_2_Master_Stop 4958                   ?_fullSpeedReverse 0014  
                 ??_Yellow_rev1_R90 0025                  ?_I2C_2_Master_Idle 0001  
                   rotate180left@mL 0020                     rotate180left@mR 0022  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0010                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000B                 White@movementMemory 007B  
          initDCmotorsPWM@PWMperiod 0001                            ?_sprintf 0032  
                ??_fullSpeedReverse 0018                            ?_strncmp 0001  
              Hue2Colour@colourname 000F                   colour_read_all@cf 001A  
                      Hue2Colour@cf 000D                   _sendStringSerial4 4758  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                            _LED_init 4928  
                ?_sendStringSerial4 0002                            _PIE4bits 000E2D  
                       turnRight@mL 0014                         turnRight@mR 0016  
                          i2u421_40 001A                            i2u421_41 0016  
                          _PIR0bits 000E33                         ??_Blue_T180 0028  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                          Left45@mL 001A                            Left45@mR 001C  
                 ??_sendCharSerial4 0001                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0004                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 3146           __end_of_I2C_2_Master_Idle 4874  
         __end_of_I2C_2_Master_Init 484C           __end_of_I2C_2_Master_Read 46DA  
                 ___wmul@multiplier 0001           __end_of_I2C_2_Master_Stop 4962  
                     _movementCount 00F2                         ??_Green_L90 0025  
                      setMotorPWM@m 000E         I2C_2_Master_Write@data_byte 0002  
                 ??_color_read_Blue 0007                           _turnRight 3CFE  
                     _retracingDone 00F0                            __1square 019E  
                         copy_data0 433C           __end_of_sendStringSerial4 4790  
     __end_of_I2C_2_Master_RepStart 4958                  color_read_Blue@tmp 000A  
               __end_of_setMotorPWM 3146                        ??_initUSART4 0001  
                          __Hrparam 0000        __end_of_memoryUpdateMovement 47F4  
                        vfprintf@ap 002E                            __Lrparam 0000  
                        vfprintf@fp 002A                       _Colour2Action 2C50  
                        ?_vfpfcnvrt 0020                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                       _getTimerValue 42BE  
                        sprintf@fmt 0034                         Blue_T180@mL 0024  
                       Blue_T180@mR 0026                            ___xxtofl 2E26  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                   ___lwdiv@divisor 0009                  __end_of_initUSART4 48E0  
                   ___lwdiv@counter 000D                          ?_turnRight 0014  
                          __ptext10 494E                            __ptext11 4698  
                          __ptext20 0E52                            __ptext12 46DA  
                          __ptext21 4652                            __ptext13 48E0  
                          __ptext30 2E26                            __ptext22 1A6C  
                          __ptext14 4936                            __ptext31 33DC  
                          __ptext23 3A66                            __ptext15 4958  
                          __ptext40 41CE                            __ptext32 1F2C  
                          __ptext24 2358                            __ptext16 4962  
                          __ptext41 3F44                            __ptext33 36EE  
                          __ptext25 4928                            __ptext17 484C  
                          __ptext50 2FDA                            __ptext42 3CFE  
                          __ptext34 496C                            __ptext26 4942  
                          __ptext18 4822                            __ptext51 4874  
                          __ptext43 4380                            __ptext35 4152  
                          __ptext27 2C50                            __ptext19 489A  
                          __ptext60 399C                            __ptext52 424A  
                          __ptext44 43D4                            __ptext36 37D6  
                          __ptext28 26F2                            __ptext61 4976  
                          __ptext53 471A                            __ptext45 3EBA  
                          __ptext37 4052                            __ptext29 42BE  
                          __ptext62 4758                            __ptext54 45B6  
                          __ptext46 3D94                            __ptext38 3BB6  
                          __ptext63 4900                            __ptext55 4604  
                          __ptext47 3FCC                            __ptext39 3C5A  
                          __ptext64 157E                            __ptext56 3146  
                          __ptext48 3B10                            __ptext65 35EA  
                          __ptext57 38BE                            __ptext49 40D2  
                          __ptext66 4790                            __ptext58 32A0  
                          __ptext59 4566                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                  White@movementCount 0079  
                        turnLeft@mL 0014                          turnLeft@mR 0016  
                   Color2String@buf 0045                    colour_read_all@B 0024  
                  colour_read_all@C 0028                    colour_read_all@G 0020  
                  colour_read_all@R 001C                      White@tempTimer 0081  
                        turnRight@i 0018                    LightBlue_L135@mL 0021  
                  LightBlue_L135@mR 0023                           stoa@F1144 0195  
                    ?_Colour2Action 0085                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005F  
                          _vfprintf 4604                            main@data 008B  
                 Yellow_rev1_R90@mL 0021                   Yellow_rev1_R90@mR 0023  
                          main@wall 00EF                            _turnLeft 3D94  
                    ?_getTimerValue 006F                       ?_Color2String 0045  
                    _vfpfcnvrt$2854 0028                          _INTCONbits 000FF2  
                       _setMotorPWM 2FDA                            intlevel2 0000  
                         sprintf@ap 0038                    ??_fullSpeedAhead 0018  
                         turnLeft@i 0018                           strncmp@_l 0001  
                         strncmp@_r 0003                   ??_colour_read_all 001C  
           getTimerValue@timerCount 0073                     _Yellow_rev1_R90 36EE  
                       ??_vfpfcnvrt 0026                            stoa@nuls 000F  
                  _color_click_init 46DA                       _rotate180left 43D4  
                    ??_Color2String 0049                            sprintf@f 003A  
                          sprintf@s 0032                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                         _timerMemory 0126  
                          strncmp@l 0008                            strncmp@n 0005  
                          strncmp@r 000A                _memoryUpdateMovement 47C4  
                       ??_turnRight 0018                       ___fladd@signs 0026  
                        _TX4STAbits 000EE8               __end_of_Pink_rev1_L90 38BE  
                   _sendCharSerial4 4900                        ___fladd@aexp 0027  
                      ___fladd@bexp 0028         memoryUpdateTime@timerMemory 0077  
                   ??_Colour2Action 0087  
