

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 20:29:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79   000000                     
    80                           ; Generated 06/04/2022 GMT
    81                           ; 
    82                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18LF67K40 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114   000000                     
   115                           	psect	idataCOMRAM
   116   004C54                     __pidataCOMRAM:
   117                           	callstack 0
   118                           
   119                           ;initializer for _ForwardFlag
   120   004C54  01                 	db	1
   121                           
   122                           	psect	idataBANK0
   123   004C4A                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for __halfsquare
   127   004C4A  03E8               	dw	1000
   128                           
   129                           ;initializer for __1square
   130   004C4C  07D0               	dw	2000
   131                           
   132                           ;initializer for __45drightdelay
   133   004C4E  012C               	dw	300
   134                           
   135                           ;initializer for __45dleftdelay
   136   004C50  012C               	dw	300
   137   000000                     _TRISFbits	set	3974
   138   000000                     _TX4REG	set	3812
   139   000000                     _RC4STAbits	set	3815
   140   000000                     _SP4BRGH	set	3814
   141   000000                     _LATFbits	set	3966
   142   000000                     _LATDbits	set	3964
   143   000000                     _LATGbits	set	3967
   144   000000                     _TRISGbits	set	3975
   145   000000                     _TRISEbits	set	3973
   146   000000                     _CCPR2H	set	4006
   147   000000                     _CCPR1H	set	4010
   148   000000                     _SSP2CON2bits	set	3802
   149   000000                     _RX4PPS	set	3605
   150   000000                     _SSP2CLKPPS	set	3612
   151   000000                     _SSP2DATPPS	set	3613
   152   000000                     _ANSELDbits	set	3751
   153   000000                     _SSP2ADD	set	3798
   154   000000                     _SSP2CON1bits	set	3801
   155   000000                     _RC4REG	set	3811
   156   000000                     _SP4BRGL	set	3813
   157   000000                     _TX4STAbits	set	3816
   158   000000                     _BAUD4CONbits	set	3817
   159   000000                     _SSP2CON2	set	3802
   160   000000                     _TRISDbits	set	3972
   161   000000                     _CCPR4H	set	3873
   162   000000                     _CCPR3H	set	3877
   163   000000                     _SSP2STAT	set	3800
   164   000000                     _SSP2BUF	set	3797
   165   000000                     _PIR4bits	set	3639
   166   000000                     _RC0PPS	set	3682
   167   000000                     _RC7PPS	set	3689
   168   000000                     _RD5PPS	set	3695
   169   000000                     _RE2PPS	set	3700
   170   000000                     _RD6PPS	set	3696
   171   000000                     _CCP1CONbits	set	4011
   172   000000                     _CCPTMRS0bits	set	4013
   173   000000                     _T2PR	set	4028
   174   000000                     _T2CONbits	set	4029
   175   000000                     _CCP2CONbits	set	4007
   176   000000                     _LATAbits	set	3961
   177   000000                     _CCP3CONbits	set	3878
   178   000000                     _LATCbits	set	3963
   179   000000                     _LATEbits	set	3965
   180   000000                     _TRISCbits	set	3971
   181   000000                     _CCP4CONbits	set	3874
   182   000000                     _TRISHbits	set	3976
   183   000000                     _TRISAbits	set	3969
   184   000000                     _LATHbits	set	3968
   185   000000                     _RE4PPS	set	3702
   186   000000                     _RG6PPS	set	3720
   187   000000                     _TMR0L	set	4051
   188   000000                     _TMR0H	set	4052
   189   000000                     _T0CON0bits	set	4053
   190   000000                     _T0CON1bits	set	4054
   191   000000                     _T2CLKCONbits	set	4031
   192   000000                     _T2HLTbits	set	4030
   193                           
   194                           	psect	smallconst
   195   000E00                     __psmallconst:
   196                           	callstack 0
   197   000E00  00                 	db	0
   198   000E01                     STR_1:
   199   000E01  20                 	db	32
   200   000E02  52                 	db	82	;'R'
   201   000E03  65                 	db	101	;'e'
   202   000E04  64                 	db	100	;'d'
   203   000E05  20                 	db	32
   204   000E06  25                 	db	37
   205   000E07  66                 	db	102	;'f'
   206   000E08  20                 	db	32
   207   000E09  47                 	db	71	;'G'
   208   000E0A  72                 	db	114	;'r'
   209   000E0B  65                 	db	101	;'e'
   210   000E0C  65                 	db	101	;'e'
   211   000E0D  6E                 	db	110	;'n'
   212   000E0E  2C                 	db	44
   213   000E0F  25                 	db	37
   214   000E10  66                 	db	102	;'f'
   215   000E11  20                 	db	32
   216   000E12  42                 	db	66	;'B'
   217   000E13  6C                 	db	108	;'l'
   218   000E14  75                 	db	117	;'u'
   219   000E15  65                 	db	101	;'e'
   220   000E16  2C                 	db	44
   221   000E17  25                 	db	37
   222   000E18  66                 	db	102	;'f'
   223   000E19  20                 	db	32
   224   000E1A  63                 	db	99	;'c'
   225   000E1B  6C                 	db	108	;'l'
   226   000E1C  65                 	db	101	;'e'
   227   000E1D  61                 	db	97	;'a'
   228   000E1E  72                 	db	114	;'r'
   229   000E1F  20                 	db	32
   230   000E20  25                 	db	37
   231   000E21  66                 	db	102	;'f'
   232   000E22  20                 	db	32
   233   000E23  48                 	db	72	;'H'
   234   000E24  75                 	db	117	;'u'
   235   000E25  65                 	db	101	;'e'
   236   000E26  20                 	db	32
   237   000E27  25                 	db	37
   238   000E28  66                 	db	102	;'f'
   239   000E29  20                 	db	32
   240   000E2A  0D                 	db	13
   241   000E2B  00                 	db	0
   242   000E2C                     STR_9:
   243   000E2C  4C                 	db	76	;'L'
   244   000E2D  69                 	db	105	;'i'
   245   000E2E  67                 	db	103	;'g'
   246   000E2F  68                 	db	104	;'h'
   247   000E30  74                 	db	116	;'t'
   248   000E31  20                 	db	32
   249   000E32  42                 	db	66	;'B'
   250   000E33  6C                 	db	108	;'l'
   251   000E34  75                 	db	117	;'u'
   252   000E35  65                 	db	101	;'e'
   253   000E36  00                 	db	0
   254   000E37                     STR_5:
   255   000E37  44                 	db	68	;'D'
   256   000E38  61                 	db	97	;'a'
   257   000E39  72                 	db	114	;'r'
   258   000E3A  6B                 	db	107	;'k'
   259   000E3B  20                 	db	32
   260   000E3C  42                 	db	66	;'B'
   261   000E3D  6C                 	db	108	;'l'
   262   000E3E  75                 	db	117	;'u'
   263   000E3F  65                 	db	101	;'e'
   264   000E40  00                 	db	0
   265   000E41                     STR_10:
   266   000E41  45                 	db	69	;'E'
   267   000E42  67                 	db	103	;'g'
   268   000E43  67                 	db	103	;'g'
   269   000E44  73                 	db	115	;'s'
   270   000E45  68                 	db	104	;'h'
   271   000E46  65                 	db	101	;'e'
   272   000E47  6C                 	db	108	;'l'
   273   000E48  6C                 	db	108	;'l'
   274   000E49  00                 	db	0
   275   000E4A                     STR_8:
   276   000E4A  4F                 	db	79	;'O'
   277   000E4B  72                 	db	114	;'r'
   278   000E4C  61                 	db	97	;'a'
   279   000E4D  6E                 	db	110	;'n'
   280   000E4E  67                 	db	103	;'g'
   281   000E4F  65                 	db	101	;'e'
   282   000E50  00                 	db	0
   283   000E51                     STR_6:
   284   000E51  59                 	db	89	;'Y'
   285   000E52  65                 	db	101	;'e'
   286   000E53  6C                 	db	108	;'l'
   287   000E54  6C                 	db	108	;'l'
   288   000E55  6F                 	db	111	;'o'
   289   000E56  77                 	db	119	;'w'
   290   000E57  00                 	db	0
   291   000E58                     STR_4:
   292   000E58  47                 	db	71	;'G'
   293   000E59  72                 	db	114	;'r'
   294   000E5A  65                 	db	101	;'e'
   295   000E5B  65                 	db	101	;'e'
   296   000E5C  6E                 	db	110	;'n'
   297   000E5D  00                 	db	0
   298   000E5E                     STR_7:
   299   000E5E  50                 	db	80	;'P'
   300   000E5F  69                 	db	105	;'i'
   301   000E60  6E                 	db	110	;'n'
   302   000E61  6B                 	db	107	;'k'
   303   000E62  00                 	db	0
   304   000E63                     STR_11:
   305   000E63  69                 	db	105	;'i'
   306   000E64  6E                 	db	110	;'n'
   307   000E65  66                 	db	102	;'f'
   308   000E66  00                 	db	0
   309   000E67                     STR_14:
   310   000E67  6E                 	db	110	;'n'
   311   000E68  61                 	db	97	;'a'
   312   000E69  6E                 	db	110	;'n'
   313   000E6A  00                 	db	0
   314   000E6B                     STR_3:
   315   000E6B  52                 	db	82	;'R'
   316   000E6C  65                 	db	101	;'e'
   317   000E6D  64                 	db	100	;'d'
   318   000E6E  00                 	db	0
   319   000E6F  00                 	db	0	; dummy byte at the end
   320   000000                     
   321                           ; #config settings
   322                           
   323                           	psect	cinit
   324   0046AE                     __pcinit:
   325                           	callstack 0
   326   0046AE                     start_initialization:
   327                           	callstack 0
   328   0046AE                     __initialization:
   329                           	callstack 0
   330                           
   331                           ; Initialize objects allocated to BANK0 (8 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333   0046AE  0E4A               	movlw	low __pidataBANK0
   334   0046B0  6EF6               	movwf	tblptrl,c
   335   0046B2  0E4C               	movlw	high __pidataBANK0
   336   0046B4  6EF7               	movwf	tblptrh,c
   337   0046B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338   0046B8  6EF8               	movwf	tblptru,c
   339   0046BA  EE00  F0F5         	lfsr	0,__pdataBANK0
   340   0046BE  EE10 F008          	lfsr	1,8
   341   0046C2                     copy_data0:
   342   0046C2  0009               	tblrd		*+
   343   0046C4  CFF5 FFEE          	movff	tablat,postinc0
   344   0046C8  50E5               	movf	postdec1,w,c
   345   0046CA  50E1               	movf	fsr1l,w,c
   346   0046CC  E1FA               	bnz	copy_data0
   347                           
   348                           ; Initialize objects allocated to COMRAM (1 bytes)
   349                           ; load TBLPTR registers with __pidataCOMRAM
   350   0046CE  0E54               	movlw	low __pidataCOMRAM
   351   0046D0  6EF6               	movwf	tblptrl,c
   352   0046D2  0E4C               	movlw	high __pidataCOMRAM
   353   0046D4  6EF7               	movwf	tblptrh,c
   354   0046D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   355   0046D8  6EF8               	movwf	tblptru,c
   356   0046DA  0009               	tblrd		*+	;fetch initializer
   357   0046DC  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   358                           
   359                           ; Clear objects allocated to BANK2 (40 bytes)
   360   0046E0  EE02  F000         	lfsr	0,__pbssBANK2
   361   0046E4  0E28               	movlw	40
   362   0046E6                     clear_0:
   363   0046E6  6AEE               	clrf	postinc0,c
   364   0046E8  06E8               	decf	wreg,f,c
   365   0046EA  E1FD               	bnz	clear_0
   366                           
   367                           ; Clear objects allocated to BANK1 (164 bytes)
   368   0046EC  EE01  F000         	lfsr	0,__pbssBANK1
   369   0046F0  0EA4               	movlw	164
   370   0046F2                     clear_1:
   371   0046F2  6AEE               	clrf	postinc0,c
   372   0046F4  06E8               	decf	wreg,f,c
   373   0046F6  E1FD               	bnz	clear_1
   374                           
   375                           ; Clear objects allocated to BANK0 (9 bytes)
   376   0046F8  EE00  F0EC         	lfsr	0,__pbssBANK0
   377   0046FC  0E09               	movlw	9
   378   0046FE                     clear_2:
   379   0046FE  6AEE               	clrf	postinc0,c
   380   004700  06E8               	decf	wreg,f,c
   381   004702  E1FD               	bnz	clear_2
   382   004704                     end_of_initialization:
   383                           	callstack 0
   384   004704                     __end_of__initialization:
   385                           	callstack 0
   386   004704  0100               	movlb	0
   387   004706  EF98  F01B         	goto	_main	;jump to C main() function
   388                           
   389                           	psect	dataCOMRAM
   390   00005F                     __pdataCOMRAM:
   391                           	callstack 0
   392   00005F                     _ForwardFlag:
   393                           	callstack 0
   394   00005F                     	ds	1
   395                           
   396                           	psect	bssBANK0
   397   0000EC                     __pbssBANK0:
   398                           	callstack 0
   399   0000EC                     ___fpclassifyf@F465:
   400                           	callstack 0
   401   0000EC                     	ds	4
   402   0000F0                     _width:
   403                           	callstack 0
   404   0000F0                     	ds	2
   405   0000F2                     _prec:
   406                           	callstack 0
   407   0000F2                     	ds	2
   408   0000F4                     _flags:
   409                           	callstack 0
   410   0000F4                     	ds	1
   411                           
   412                           	psect	dataBANK0
   413   0000F5                     __pdataBANK0:
   414                           	callstack 0
   415   0000F5                     __halfsquare:
   416                           	callstack 0
   417   0000F5                     	ds	2
   418   0000F7                     __1square:
   419                           	callstack 0
   420   0000F7                     	ds	2
   421   0000F9                     __45drightdelay:
   422                           	callstack 0
   423   0000F9                     	ds	2
   424   0000FB                     __45dleftdelay:
   425                           	callstack 0
   426   0000FB                     	ds	2
   427                           
   428                           	psect	bssBANK1
   429   000100                     __pbssBANK1:
   430                           	callstack 0
   431   000100                     _movementMemory:
   432                           	callstack 0
   433   000100                     	ds	40
   434   000128                     floorf@F526:
   435                           	callstack 0
   436   000128                     	ds	4
   437   00012C                     _dbuf:
   438                           	callstack 0
   439   00012C                     	ds	80
   440   00017C                     _colorf:
   441                           	callstack 0
   442   00017C                     	ds	22
   443   000192                     _motorR:
   444                           	callstack 0
   445   000192                     	ds	9
   446   00019B                     _motorL:
   447                           	callstack 0
   448   00019B                     	ds	9
   449                           
   450                           	psect	bssBANK2
   451   000200                     __pbssBANK2:
   452                           	callstack 0
   453   000200                     _timerMemory:
   454                           	callstack 0
   455   000200                     	ds	40
   456                           
   457                           	psect	cstackBANK1
   458   0001A4                     __pcstackBANK1:
   459                           	callstack 0
   460   0001A4                     main@data:
   461                           	callstack 0
   462                           
   463                           ; 80 bytes @ 0x0
   464   0001A4                     	ds	80
   465   0001F4                     main@wall:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x50
   469   0001F4                     	ds	1
   470                           
   471                           	psect	cstackBANK0
   472   000060                     __pcstackBANK0:
   473                           	callstack 0
   474   000060                     ___flmul@sign:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x0
   478   000060                     	ds	1
   479   000061                     ___flmul@grs:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x1
   483   000061                     	ds	4
   484   000065                     ___flmul@aexp:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x5
   488   000065                     	ds	1
   489   000066                     ___flmul@bexp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x6
   493   000066                     	ds	1
   494   000067                     ___flmul@prod:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x7
   498   000067                     	ds	4
   499   00006B                     ___flmul@temp:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xB
   503   00006B                     	ds	2
   504   00006D                     ??___flge:
   505                           
   506                           ; 1 bytes @ 0xD
   507   00006D                     	ds	4
   508   000071                     ?_Hue2Colour:
   509                           	callstack 0
   510   000071                     RGB2Hue@cf:
   511                           	callstack 0
   512   000071                     Hue2Colour@cf:
   513                           	callstack 0
   514   000071                     efgtoa@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x11
   518   000071                     	ds	2
   519   000073                     ??_RGB2Hue:
   520   000073                     Hue2Colour@colourname:
   521                           	callstack 0
   522   000073                     efgtoa@f:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x13
   526   000073                     	ds	4
   527   000077                     efgtoa@c:
   528                           	callstack 0
   529   000077                     _RGB2Hue$2940:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x17
   533   000077                     	ds	1
   534   000078                     ??_efgtoa:
   535                           
   536                           ; 1 bytes @ 0x18
   537   000078                     	ds	2
   538   00007A                     efgtoa@ne:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1A
   542   00007A                     	ds	1
   543   00007B                     RGB2Hue@max:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1B
   547   00007B                     	ds	1
   548   00007C                     efgtoa@p:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1C
   552   00007C                     	ds	1
   553   00007D                     RGB2Hue@min:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x1D
   557   00007D                     	ds	1
   558   00007E                     efgtoa@t:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1E
   562   00007E                     	ds	2
   563   000080                     _efgtoa$2583:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x20
   567   000080                     	ds	2
   568   000082                     efgtoa@pp:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x22
   572   000082                     	ds	1
   573   000083                     efgtoa@mode:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x23
   577   000083                     	ds	1
   578   000084                     efgtoa@nmode:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x24
   582   000084                     	ds	1
   583   000085                     efgtoa@d:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x25
   587   000085                     	ds	2
   588   000087                     efgtoa@m:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x27
   592   000087                     	ds	2
   593   000089                     efgtoa@e:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x29
   597   000089                     	ds	2
   598   00008B                     efgtoa@w:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x2B
   602   00008B                     	ds	2
   603   00008D                     efgtoa@ou:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x2D
   607   00008D                     	ds	4
   608   000091                     efgtoa@i:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x31
   612   000091                     	ds	2
   613   000093                     efgtoa@h:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x33
   617   000093                     	ds	4
   618   000097                     efgtoa@l:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x37
   622   000097                     	ds	4
   623   00009B                     efgtoa@sign:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x3B
   627   00009B                     	ds	1
   628   00009C                     efgtoa@n:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x3C
   632   00009C                     	ds	2
   633   00009E                     efgtoa@g:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x3E
   637   00009E                     	ds	4
   638   0000A2                     efgtoa@u:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x42
   642   0000A2                     	ds	4
   643   0000A6                     vfpfcnvrt@fp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x46
   647   0000A6                     	ds	2
   648   0000A8                     vfpfcnvrt@fmt:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x48
   652   0000A8                     	ds	2
   653   0000AA                     vfpfcnvrt@ap:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x4A
   657   0000AA                     	ds	2
   658   0000AC                     ??_vfpfcnvrt:
   659                           
   660                           ; 1 bytes @ 0x4C
   661   0000AC                     	ds	2
   662   0000AE                     vfpfcnvrt@convarg:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x4E
   666   0000AE                     	ds	8
   667   0000B6                     vfpfcnvrt@c:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x56
   671   0000B6                     	ds	1
   672   0000B7                     vfpfcnvrt@cp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x57
   676   0000B7                     	ds	2
   677   0000B9                     ?_vfprintf:
   678                           	callstack 0
   679   0000B9                     vfprintf@fp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x59
   683   0000B9                     	ds	2
   684   0000BB                     vfprintf@fmt:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x5B
   688   0000BB                     	ds	2
   689   0000BD                     vfprintf@ap:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x5D
   693   0000BD                     	ds	2
   694   0000BF                     vfprintf@cfmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x5F
   698   0000BF                     	ds	2
   699   0000C1                     ?_sprintf:
   700                           	callstack 0
   701   0000C1                     sprintf@s:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x61
   705   0000C1                     	ds	2
   706   0000C3                     sprintf@fmt:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x63
   710   0000C3                     	ds	22
   711   0000D9                     sprintf@ap:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x79
   715   0000D9                     	ds	2
   716   0000DB                     sprintf@f:
   717                           	callstack 0
   718                           
   719                           ; 11 bytes @ 0x7B
   720   0000DB                     	ds	11
   721   0000E6                     Color2String@buf:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x86
   725   0000E6                     	ds	2
   726   0000E8                     Color2String@cf:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x88
   730   0000E8                     	ds	2
   731   0000EA                     ??_main:
   732                           
   733                           ; 1 bytes @ 0x8A
   734   0000EA                     	ds	2
   735                           
   736                           	psect	cstackCOMRAM
   737   000001                     __pcstackCOMRAM:
   738                           	callstack 0
   739   000001                     ??_I2C_2_Master_Idle:
   740   000001                     ?___fpclassifyf:
   741                           	callstack 0
   742   000001                     ?___wmul:
   743                           	callstack 0
   744   000001                     ?_labs:
   745                           	callstack 0
   746   000001                     ?___flneg:
   747                           	callstack 0
   748   000001                     ?___fltol:
   749                           	callstack 0
   750   000001                     sendCharSerial4@charToSend:
   751                           	callstack 0
   752   000001                     ClickLEDOn@power:
   753                           	callstack 0
   754   000001                     initDCmotorsPWM@PWMperiod:
   755                           	callstack 0
   756   000001                     ___wmul@multiplier:
   757                           	callstack 0
   758   000001                     memcpy@d1:
   759                           	callstack 0
   760   000001                     fputc@c:
   761                           	callstack 0
   762   000001                     strcpy@dest:
   763                           	callstack 0
   764   000001                     ___fleq@ff1:
   765                           	callstack 0
   766   000001                     ___flneg@f1:
   767                           	callstack 0
   768   000001                     ___fltol@f1:
   769                           	callstack 0
   770   000001                     ___fpclassifyf@x:
   771                           	callstack 0
   772   000001                     labs@a:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x0
   776   000001                     	ds	1
   777   000002                     ??_I2C_2_Master_Read:
   778   000002                     I2C_2_Master_Write@data_byte:
   779                           	callstack 0
   780   000002                     sendStringSerial4@string:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x1
   784   000002                     	ds	1
   785   000003                     I2C_2_Master_Read@ack:
   786                           	callstack 0
   787   000003                     color_writetoaddr@value:
   788                           	callstack 0
   789   000003                     ___wmul@multiplicand:
   790                           	callstack 0
   791   000003                     memcpy@s1:
   792                           	callstack 0
   793   000003                     fputc@fp:
   794                           	callstack 0
   795   000003                     strcpy@src:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x2
   799   000003                     	ds	1
   800   000004                     I2C_2_Master_Read@tmp:
   801                           	callstack 0
   802   000004                     color_writetoaddr@address:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x3
   806   000004                     	ds	1
   807   000005                     ??_color_click_init:
   808   000005                     ??_fputc:
   809   000005                     ??___fpclassifyf:
   810   000005                     ??_labs:
   811   000005                     ??___fltol:
   812   000005                     ?_color_read_Red:
   813                           	callstack 0
   814   000005                     ?_color_read_Green:
   815                           	callstack 0
   816   000005                     ?_color_read_Blue:
   817                           	callstack 0
   818   000005                     ?_color_read_Clear:
   819                           	callstack 0
   820   000005                     ___wmul@product:
   821                           	callstack 0
   822   000005                     memcpy@n:
   823                           	callstack 0
   824   000005                     strcpy@s:
   825                           	callstack 0
   826   000005                     ___fleq@ff2:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x4
   830   000005                     	ds	2
   831   000007                     ??_color_read_Red:
   832   000007                     ??_color_read_Green:
   833   000007                     ??_color_read_Blue:
   834   000007                     ??_color_read_Clear:
   835   000007                     ?___lwdiv:
   836                           	callstack 0
   837   000007                     ___lwdiv@dividend:
   838                           	callstack 0
   839   000007                     memcpy@d:
   840                           	callstack 0
   841   000007                     strcpy@d:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x6
   845   000007                     	ds	2
   846   000009                     ??___fleq:
   847   000009                     ___fltol@sign1:
   848                           	callstack 0
   849   000009                     ___lwdiv@divisor:
   850                           	callstack 0
   851   000009                     ___fpclassifyf@e:
   852                           	callstack 0
   853   000009                     memcpy@s:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x8
   857   000009                     	ds	1
   858   00000A                     ___fltol@exp1:
   859                           	callstack 0
   860   00000A                     color_read_Red@tmp:
   861                           	callstack 0
   862   00000A                     color_read_Green@tmp:
   863                           	callstack 0
   864   00000A                     color_read_Blue@tmp:
   865                           	callstack 0
   866   00000A                     color_read_Clear@tmp:
   867                           	callstack 0
   868   00000A                     fputs@s:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x9
   872   00000A                     	ds	1
   873   00000B                     memcpy@tmp:
   874                           	callstack 0
   875   00000B                     ___lwdiv@quotient:
   876                           	callstack 0
   877   00000B                     ___fpclassifyf@u:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0xA
   881   00000B                     	ds	1
   882   00000C                     ?___xxtofl:
   883                           	callstack 0
   884   00000C                     fputs@fp:
   885                           	callstack 0
   886   00000C                     ___xxtofl@val:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0xB
   890   00000C                     	ds	1
   891   00000D                     ___lwdiv@counter:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0xC
   895   00000D                     	ds	1
   896   00000E                     fputs@c:
   897                           	callstack 0
   898   00000E                     setMotorPWM@m:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0xD
   902   00000E                     	ds	1
   903   00000F                     fputs@i:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0xE
   907   00000F                     	ds	1
   908   000010                     ??_setMotorPWM:
   909   000010                     ??___xxtofl:
   910                           
   911                           ; 1 bytes @ 0xF
   912   000010                     	ds	1
   913   000011                     pad@fp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x10
   917   000011                     	ds	1
   918   000012                     setMotorPWM@posDuty:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x11
   922   000012                     	ds	1
   923   000013                     setMotorPWM@negDuty:
   924                           	callstack 0
   925   000013                     pad@buf:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x12
   929   000013                     	ds	1
   930   000014                     ___xxtofl@sign:
   931                           	callstack 0
   932   000014                     stop@mL:
   933                           	callstack 0
   934   000014                     turnLeft@mL:
   935                           	callstack 0
   936   000014                     turnRight@mL:
   937                           	callstack 0
   938   000014                     fullSpeedReverse@mL:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x13
   942   000014                     	ds	1
   943   000015                     ___xxtofl@exp:
   944                           	callstack 0
   945   000015                     pad@p:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x14
   949   000015                     	ds	1
   950   000016                     stop@mR:
   951                           	callstack 0
   952   000016                     turnLeft@mR:
   953                           	callstack 0
   954   000016                     turnRight@mR:
   955                           	callstack 0
   956   000016                     fullSpeedReverse@mR:
   957                           	callstack 0
   958   000016                     ___xxtofl@arg:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x15
   962   000016                     	ds	1
   963   000017                     ??_pad:
   964                           
   965                           ; 1 bytes @ 0x16
   966   000017                     	ds	1
   967   000018                     ??_fullSpeedReverse:
   968   000018                     turnLeft@i:
   969                           	callstack 0
   970   000018                     turnRight@i:
   971                           	callstack 0
   972   000018                     pad@i:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x17
   976   000018                     	ds	1
   977   000019                     fullSpeedReverse@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x18
   981   000019                     	ds	1
   982   00001A                     ?___fladd:
   983                           	callstack 0
   984   00001A                     Left45@mL:
   985                           	callstack 0
   986   00001A                     Right45@mL:
   987                           	callstack 0
   988   00001A                     colour_read_all@cf:
   989                           	callstack 0
   990   00001A                     pad@w:
   991                           	callstack 0
   992   00001A                     ___fladd@b:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x19
   996   00001A                     	ds	1
   997   00001B                     reverseHalfSquare@mL:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x1A
  1001   00001B                     	ds	1
  1002   00001C                     Left45@mR:
  1003                           	callstack 0
  1004   00001C                     Right45@mR:
  1005                           	callstack 0
  1006   00001C                     colour_read_all@R:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x1B
  1010   00001C                     	ds	1
  1011   00001D                     reverseHalfSquare@mR:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x1C
  1015   00001D                     	ds	1
  1016   00001E                     ??_Left45:
  1017   00001E                     ??_Right45:
  1018   00001E                     ___fladd@a:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x1D
  1022   00001E                     	ds	1
  1023   00001F                     ??_reverseHalfSquare:
  1024                           
  1025                           ; 1 bytes @ 0x1E
  1026   00001F                     	ds	1
  1027   000020                     colour_read_all@G:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x1F
  1031   000020                     	ds	1
  1032   000021                     Orange_R135@mL:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x20
  1036   000021                     	ds	1
  1037   000022                     ??___fladd:
  1038                           
  1039                           ; 1 bytes @ 0x21
  1040   000022                     	ds	1
  1041   000023                     Orange_R135@mR:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x22
  1045   000023                     	ds	1
  1046   000024                     colour_read_all@B:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x23
  1050   000024                     	ds	1
  1051   000025                     
  1052                           ; 1 bytes @ 0x24
  1053   000025                     	ds	1
  1054   000026                     ___fladd@signs:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x25
  1058   000026                     	ds	1
  1059   000027                     ___fladd@aexp:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x26
  1063   000027                     	ds	1
  1064   000028                     ___fladd@bexp:
  1065                           	callstack 0
  1066   000028                     colour_read_all@C:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x27
  1070   000028                     	ds	1
  1071   000029                     ___fladd@grs:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x28
  1075   000029                     	ds	1
  1076   00002A                     ?___flsub:
  1077                           	callstack 0
  1078   00002A                     ___flsub@b:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x29
  1082   00002A                     	ds	4
  1083   00002E                     ___flsub@a:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x2D
  1087   00002E                     	ds	4
  1088   000032                     ?___fldiv:
  1089                           	callstack 0
  1090   000032                     ___fldiv@b:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x31
  1094   000032                     	ds	4
  1095   000036                     ___fldiv@a:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x35
  1099   000036                     	ds	4
  1100   00003A                     ??___fldiv:
  1101                           
  1102                           ; 1 bytes @ 0x39
  1103   00003A                     	ds	4
  1104   00003E                     ___fldiv@rem:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x3D
  1108   00003E                     	ds	4
  1109   000042                     ___fldiv@sign:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x41
  1113   000042                     	ds	1
  1114   000043                     ___fldiv@new_exp:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x42
  1118   000043                     	ds	2
  1119   000045                     ___fldiv@grs:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x44
  1123   000045                     	ds	4
  1124   000049                     ___fldiv@bexp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x48
  1128   000049                     	ds	1
  1129   00004A                     ___fldiv@aexp:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x49
  1133   00004A                     	ds	1
  1134   00004B                     ?___flmul:
  1135                           	callstack 0
  1136   00004B                     ?_floorf:
  1137                           	callstack 0
  1138   00004B                     ___flmul@b:
  1139                           	callstack 0
  1140   00004B                     floorf@x:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x4A
  1144   00004B                     	ds	4
  1145   00004F                     ??_floorf:
  1146   00004F                     ___flmul@a:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x4E
  1150   00004F                     	ds	4
  1151   000053                     ??___flmul:
  1152                           
  1153                           ; 1 bytes @ 0x52
  1154   000053                     	ds	2
  1155   000055                     floorf@m:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x54
  1159   000055                     	ds	2
  1160   000057                     ___flge@ff1:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x56
  1164   000057                     	ds	2
  1165   000059                     floorf@e:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x58
  1169   000059                     	ds	2
  1170   00005B                     ___flge@ff2:
  1171                           	callstack 0
  1172   00005B                     floorf@u:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x5A
  1176   00005B                     	ds	4
  1177   00005F                     
  1178                           ; 1 bytes @ 0x5E
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1181 ;;
  1182 ;; *************** function _main *****************
  1183 ;; Defined at:
  1184 ;;		line 17 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  data           80    0[BANK1 ] unsigned char [80]
  1189 ;;  PWMcycle        2    0        unsigned int 
  1190 ;;  wall            1   80[BANK1 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Locals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Totals:         0       2      81       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;Total ram usage:       83 bytes
  1205 ;; Hardware stack levels required when called: 9
  1206 ;; This function calls:
  1207 ;;		_ClickLEDOn
  1208 ;;		_Color2String
  1209 ;;		_I2C_2_Master_Init
  1210 ;;		_LED_init
  1211 ;;		_Orange_R135
  1212 ;;		_RGB2Hue
  1213 ;;		___flge
  1214 ;;		_color_click_init
  1215 ;;		_colour_read_all
  1216 ;;		_initDCmotorsPWM
  1217 ;;		_initUSART4
  1218 ;; This function is called by:
  1219 ;;		Startup code after reset
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text0
  1224   003730                     __ptext0:
  1225                           	callstack 0
  1226   003730                     _main:
  1227                           	callstack 22
  1228   003730                     
  1229                           ;main.c: 18:     char data[80];;main.c: 19:     initUSART4();
  1230   003730  ECD7  F025         	call	_initUSART4	;wreg free
  1231   003734                     
  1232                           ;main.c: 20:     color_click_init();
  1233   003734  EC29  F025         	call	_color_click_init	;wreg free
  1234   003738                     
  1235                           ;main.c: 21:     I2C_2_Master_Init();
  1236   003738  EC9B  F025         	call	_I2C_2_Master_Init	;wreg free
  1237   00373C                     
  1238                           ;main.c: 22:     LED_init();
  1239   00373C  EC04  F026         	call	_LED_init	;wreg free
  1240   003740                     
  1241                           ;main.c: 25:     initDCmotorsPWM(PWMcycle);
  1242   003740  0E00               	movlw	0
  1243   003742  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1244   003744  0E63               	movlw	99
  1245   003746  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1246   003748  EC5A  F021         	call	_initDCmotorsPWM	;wreg free
  1247   00374C                     
  1248                           ;main.c: 27:     motorL.power=0;
  1249   00374C  0E00               	movlw	0
  1250   00374E  0101               	movlb	1	; () banked
  1251   003750  6F9B               	movwf	_motorL& (0+255),b
  1252   003752                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 28:     motorL.direction=1;
  1255   003752  0E01               	movlw	1
  1256   003754  6F9C               	movwf	(_motorL+1)& (0+255),b
  1257   003756                     
  1258                           ; BSR set to: 1
  1259                           ;main.c: 29:     motorL.brakemode=1;
  1260   003756  0E01               	movlw	1
  1261   003758  6F9D               	movwf	(_motorL+2)& (0+255),b
  1262   00375A                     
  1263                           ; BSR set to: 1
  1264                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1265   00375A  0EAA               	movlw	170
  1266   00375C  6FA0               	movwf	(_motorL+5)& (0+255),b
  1267   00375E  0E0F               	movlw	15
  1268   003760  6FA1               	movwf	(_motorL+6)& (0+255),b
  1269   003762                     
  1270                           ; BSR set to: 1
  1271                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1272   003762  0EA6               	movlw	166
  1273   003764  6FA2               	movwf	(_motorL+7)& (0+255),b
  1274   003766  0E0F               	movlw	15
  1275   003768  6FA3               	movwf	(_motorL+8)& (0+255),b
  1276   00376A                     
  1277                           ; BSR set to: 1
  1278                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
  1279   00376A  0E00               	movlw	0
  1280   00376C  6F9F               	movwf	(_motorL+4)& (0+255),b
  1281   00376E  0E63               	movlw	99
  1282   003770  6F9E               	movwf	(_motorL+3)& (0+255),b
  1283   003772                     
  1284                           ; BSR set to: 1
  1285                           ;main.c: 34:     motorR.power=0;
  1286   003772  0E00               	movlw	0
  1287   003774  6F92               	movwf	_motorR& (0+255),b
  1288   003776                     
  1289                           ; BSR set to: 1
  1290                           ;main.c: 35:     motorR.direction=1;
  1291   003776  0E01               	movlw	1
  1292   003778  6F93               	movwf	(_motorR+1)& (0+255),b
  1293   00377A                     
  1294                           ; BSR set to: 1
  1295                           ;main.c: 36:     motorR.brakemode=1;
  1296   00377A  0E01               	movlw	1
  1297   00377C  6F94               	movwf	(_motorR+2)& (0+255),b
  1298   00377E                     
  1299                           ; BSR set to: 1
  1300                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1301   00377E  0E25               	movlw	37
  1302   003780  6F97               	movwf	(_motorR+5)& (0+255),b
  1303   003782  0E0F               	movlw	15
  1304   003784  6F98               	movwf	(_motorR+6)& (0+255),b
  1305   003786                     
  1306                           ; BSR set to: 1
  1307                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1308   003786  0E21               	movlw	33
  1309   003788  6F99               	movwf	(_motorR+7)& (0+255),b
  1310   00378A  0E0F               	movlw	15
  1311   00378C  6F9A               	movwf	(_motorR+8)& (0+255),b
  1312   00378E                     
  1313                           ; BSR set to: 1
  1314                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
  1315   00378E  0E00               	movlw	0
  1316   003790  6F96               	movwf	(_motorR+4)& (0+255),b
  1317   003792  0E63               	movlw	99
  1318   003794  6F95               	movwf	(_motorR+3)& (0+255),b
  1319   003796                     
  1320                           ; BSR set to: 1
  1321                           ;main.c: 41:     char wall=0;
  1322   003796  0E00               	movlw	0
  1323   003798  6FF4               	movwf	main@wall& (0+255),b
  1324   00379A  EF0C  F01C         	goto	l4888
  1325   00379E                     l4876:
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;main.c: 45:             colour_read_all(&colorf);
  1329   00379E  0E7C               	movlw	low _colorf
  1330   0037A0  6E1A               	movwf	colour_read_all@cf^0,c
  1331   0037A2  0E01               	movlw	high _colorf
  1332   0037A4  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1333   0037A6  EC04  F01D         	call	_colour_read_all	;wreg free
  1334   0037AA                     
  1335                           ;main.c: 46:             Color2String(data,&colorf);
  1336   0037AA  0EA4               	movlw	low main@data
  1337   0037AC  0100               	movlb	0	; () banked
  1338   0037AE  6FE6               	movwf	Color2String@buf& (0+255),b
  1339   0037B0  0E01               	movlw	high main@data
  1340   0037B2  6FE7               	movwf	(Color2String@buf+1)& (0+255),b
  1341   0037B4  0E7C               	movlw	low _colorf
  1342   0037B6  6FE8               	movwf	Color2String@cf& (0+255),b
  1343   0037B8  0E01               	movlw	high _colorf
  1344   0037BA  6FE9               	movwf	(Color2String@cf+1)& (0+255),b
  1345   0037BC  EC71  F01F         	call	_Color2String	;wreg free
  1346   0037C0                     
  1347                           ;main.c: 50:              if (colorf.Cf<1500)
  1348   0037C0  C188  F057         	movff	_colorf+12,___flge@ff1
  1349   0037C4  C189  F058         	movff	_colorf+13,___flge@ff1+1
  1350   0037C8  C18A  F059         	movff	_colorf+14,___flge@ff1+2
  1351   0037CC  C18B  F05A         	movff	_colorf+15,___flge@ff1+3
  1352   0037D0  0E00               	movlw	0
  1353   0037D2  6E5B               	movwf	___flge@ff2^0,c
  1354   0037D4  0E80               	movlw	128
  1355   0037D6  6E5C               	movwf	(___flge@ff2+1)^0,c
  1356   0037D8  0EBB               	movlw	187
  1357   0037DA  6E5D               	movwf	(___flge@ff2+2)^0,c
  1358   0037DC  0E44               	movlw	68
  1359   0037DE  6E5E               	movwf	(___flge@ff2+3)^0,c
  1360   0037E0  EC0A  F01E         	call	___flge	;wreg free
  1361   0037E4  B0D8               	btfsc	status,0,c
  1362   0037E6  EFF7  F01B         	goto	u4661
  1363   0037EA  EFF9  F01B         	goto	u4660
  1364   0037EE                     u4661:
  1365   0037EE  EF0C  F01C         	goto	l4888
  1366   0037F2                     u4660:
  1367   0037F2                     
  1368                           ;main.c: 51:              {;main.c: 53:                  wall=1;
  1369   0037F2  0E01               	movlw	1
  1370   0037F4  0101               	movlb	1	; () banked
  1371   0037F6  6FF4               	movwf	main@wall& (0+255),b
  1372   0037F8                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 54:                  ClickLEDOn(1);
  1375   0037F8  0E01               	movlw	1
  1376   0037FA  EC81  F025         	call	_ClickLEDOn
  1377   0037FE                     
  1378                           ;main.c: 55:                  _delay((unsigned long)((1000)*(64000000/4000.0)));
  1379   0037FE  0E52               	movlw	82
  1380   003800  0100               	movlb	0	; () banked
  1381   003802  6FEB               	movwf	(??_main+1)& (0+255),b
  1382   003804  0E2B               	movlw	43
  1383   003806  6FEA               	movwf	??_main& (0+255),b
  1384   003808  0E00               	movlw	0
  1385   00380A                     u4827:
  1386   00380A  2EE8               	decfsz	wreg,f,c
  1387   00380C  D7FE               	bra	u4827
  1388   00380E  2FEA               	decfsz	??_main& (0+255),f,b
  1389   003810  D7FC               	bra	u4827
  1390   003812  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1391   003814  D7FA               	bra	u4827
  1392   003816  F000               	nop	
  1393   003818                     l4888:
  1394                           
  1395                           ;main.c: 44:         while (!wall){
  1396   003818  0101               	movlb	1	; () banked
  1397   00381A  51F4               	movf	main@wall& (0+255),w,b
  1398   00381C  B4D8               	btfsc	status,2,c
  1399   00381E  EF13  F01C         	goto	u4671
  1400   003822  EF15  F01C         	goto	u4670
  1401   003826                     u4671:
  1402   003826  EFCF  F01B         	goto	l4876
  1403   00382A                     u4670:
  1404   00382A                     
  1405                           ; BSR set to: 1
  1406                           ;main.c: 58:         colour_read_all(&colorf);
  1407   00382A  0E7C               	movlw	low _colorf
  1408   00382C  6E1A               	movwf	colour_read_all@cf^0,c
  1409   00382E  0E01               	movlw	high _colorf
  1410   003830  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1411   003832  EC04  F01D         	call	_colour_read_all	;wreg free
  1412   003836                     
  1413                           ;main.c: 59:         RGB2Hue(&colorf);
  1414   003836  0E7C               	movlw	low _colorf
  1415   003838  0100               	movlb	0	; () banked
  1416   00383A  6F71               	movwf	RGB2Hue@cf& (0+255),b
  1417   00383C  0E01               	movlw	high _colorf
  1418   00383E  6F72               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1419   003840  EC35  F00C         	call	_RGB2Hue	;wreg free
  1420   003844                     
  1421                           ;main.c: 62:         Color2String(data,&colorf);
  1422   003844  0EA4               	movlw	low main@data
  1423   003846  0100               	movlb	0	; () banked
  1424   003848  6FE6               	movwf	Color2String@buf& (0+255),b
  1425   00384A  0E01               	movlw	high main@data
  1426   00384C  6FE7               	movwf	(Color2String@buf+1)& (0+255),b
  1427   00384E  0E7C               	movlw	low _colorf
  1428   003850  6FE8               	movwf	Color2String@cf& (0+255),b
  1429   003852  0E01               	movlw	high _colorf
  1430   003854  6FE9               	movwf	(Color2String@cf+1)& (0+255),b
  1431   003856  EC71  F01F         	call	_Color2String	;wreg free
  1432   00385A                     
  1433                           ;main.c: 63:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1434   00385A  0E52               	movlw	82
  1435   00385C  0100               	movlb	0	; () banked
  1436   00385E  6FEB               	movwf	(??_main+1)& (0+255),b
  1437   003860  0E2B               	movlw	43
  1438   003862  6FEA               	movwf	??_main& (0+255),b
  1439   003864  0E00               	movlw	0
  1440   003866                     u4837:
  1441   003866  2EE8               	decfsz	wreg,f,c
  1442   003868  D7FE               	bra	u4837
  1443   00386A  2FEA               	decfsz	??_main& (0+255),f,b
  1444   00386C  D7FC               	bra	u4837
  1445   00386E  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1446   003870  D7FA               	bra	u4837
  1447   003872  F000               	nop	
  1448   003874                     
  1449                           ;main.c: 64:         wall=0;
  1450   003874  0E00               	movlw	0
  1451   003876  0101               	movlb	1	; () banked
  1452   003878  6FF4               	movwf	main@wall& (0+255),b
  1453   00387A                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 65:         ClickLEDOn(0);
  1456   00387A  0E00               	movlw	0
  1457   00387C  EC81  F025         	call	_ClickLEDOn
  1458   003880                     
  1459                           ;main.c: 66:         Orange_R135(&motorL,&motorR);
  1460   003880  0E9B               	movlw	low _motorL
  1461   003882  6E21               	movwf	Orange_R135@mL^0,c
  1462   003884  0E01               	movlw	high _motorL
  1463   003886  6E22               	movwf	(Orange_R135@mL+1)^0,c
  1464   003888  0E92               	movlw	low _motorR
  1465   00388A  6E23               	movwf	Orange_R135@mR^0,c
  1466   00388C  0E01               	movlw	high _motorR
  1467   00388E  6E24               	movwf	(Orange_R135@mR+1)^0,c
  1468   003890  EC22  F020         	call	_Orange_R135	;wreg free
  1469   003894  EF0C  F01C         	goto	l4888
  1470   003898  EF00  F000         	goto	start
  1471   00389C                     __end_of_main:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _initUSART4 *****************
  1475 ;; Defined at:
  1476 ;;		line 7 in file "serial.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text1
  1504   004BAE                     __ptext1:
  1505                           	callstack 0
  1506   004BAE                     _initUSART4:
  1507                           	callstack 30
  1508   004BAE                     
  1509                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1510   004BAE  8883               	bsf	131,4,c	;volatile
  1511                           
  1512                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1513   004BB0  8283               	bsf	131,1,c	;volatile
  1514   004BB2                     
  1515                           ;serial.c: 10:     RC0PPS = 0x12;
  1516   004BB2  0E12               	movlw	18
  1517   004BB4  010E               	movlb	14	; () banked
  1518   004BB6  6F62               	movwf	98,b	;volatile
  1519                           
  1520                           ;serial.c: 11:     RX4PPS = 0x11;
  1521   004BB8  0E11               	movlw	17
  1522   004BBA  6F15               	movwf	21,b	;volatile
  1523   004BBC                     
  1524                           ; BSR set to: 14
  1525                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1526   004BBC  97E9               	bcf	233,3,b	;volatile
  1527   004BBE                     
  1528                           ; BSR set to: 14
  1529                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1530   004BBE  95E8               	bcf	232,2,b	;volatile
  1531                           
  1532                           ;serial.c: 15:     SP4BRGL = 51;
  1533   004BC0  0E33               	movlw	51
  1534   004BC2  6FE5               	movwf	229,b	;volatile
  1535                           
  1536                           ;serial.c: 16:     SP4BRGH = 0;
  1537   004BC4  0E00               	movlw	0
  1538   004BC6  6FE6               	movwf	230,b	;volatile
  1539   004BC8                     
  1540                           ; BSR set to: 14
  1541                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1542   004BC8  89E7               	bsf	231,4,b	;volatile
  1543   004BCA                     
  1544                           ; BSR set to: 14
  1545                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1546   004BCA  8BE8               	bsf	232,5,b	;volatile
  1547   004BCC                     
  1548                           ; BSR set to: 14
  1549                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1550   004BCC  8FE7               	bsf	231,7,b	;volatile
  1551   004BCE                     
  1552                           ; BSR set to: 14
  1553   004BCE  0012               	return		;funcret
  1554   004BD0                     __end_of_initUSART4:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _initDCmotorsPWM *****************
  1558 ;; Defined at:
  1559 ;;		line 11 in file "dc_motor.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;Total ram usage:        2 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text2
  1587   0042B4                     __ptext2:
  1588                           	callstack 0
  1589   0042B4                     _initDCmotorsPWM:
  1590                           	callstack 30
  1591   0042B4                     
  1592                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1593   0042B4  9485               	bcf	133,2,c	;volatile
  1594                           
  1595                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1596   0042B6  9E83               	bcf	131,7,c	;volatile
  1597                           
  1598                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1599   0042B8  9885               	bcf	133,4,c	;volatile
  1600                           
  1601                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1602   0042BA  9C87               	bcf	135,6,c	;volatile
  1603                           
  1604                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1605   0042BC  947D               	bcf	125,2,c	;volatile
  1606                           
  1607                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1608   0042BE  9E7B               	bcf	123,7,c	;volatile
  1609                           
  1610                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1611   0042C0  987D               	bcf	125,4,c	;volatile
  1612                           
  1613                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1614   0042C2  9C7F               	bcf	127,6,c	;volatile
  1615   0042C4                     
  1616                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1617   0042C4  0E05               	movlw	5
  1618   0042C6  010E               	movlb	14	; () banked
  1619   0042C8  6F74               	movwf	116,b	;volatile
  1620                           
  1621                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1622   0042CA  0E06               	movlw	6
  1623   0042CC  6F76               	movwf	118,b	;volatile
  1624                           
  1625                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1626   0042CE  0E07               	movlw	7
  1627   0042D0  6F69               	movwf	105,b	;volatile
  1628                           
  1629                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1630   0042D2  0E08               	movlw	8
  1631   0042D4  6F88               	movwf	136,b	;volatile
  1632                           
  1633                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1634   0042D6  50BD               	movf	189,w,c	;volatile
  1635   0042D8  0B8F               	andlw	-113
  1636   0042DA  0940               	iorlw	64
  1637   0042DC  6EBD               	movwf	189,c	;volatile
  1638                           
  1639                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1640   0042DE  0EE0               	movlw	-32
  1641   0042E0  16BE               	andwf	190,f,c	;volatile
  1642                           
  1643                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1644   0042E2  50BF               	movf	191,w,c	;volatile
  1645   0042E4  0BF0               	andlw	-16
  1646   0042E6  0901               	iorlw	1
  1647   0042E8  6EBF               	movwf	191,c	;volatile
  1648   0042EA                     
  1649                           ; BSR set to: 14
  1650                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1651   0042EA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1652   0042EE                     
  1653                           ; BSR set to: 14
  1654                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1655   0042EE  8EBD               	bsf	189,7,c	;volatile
  1656                           
  1657                           ;dc_motor.c: 40:     CCPR1H=0;
  1658   0042F0  0E00               	movlw	0
  1659   0042F2  6EAA               	movwf	170,c	;volatile
  1660                           
  1661                           ;dc_motor.c: 41:     CCPR2H=0;
  1662   0042F4  0E00               	movlw	0
  1663   0042F6  6EA6               	movwf	166,c	;volatile
  1664                           
  1665                           ;dc_motor.c: 42:     CCPR3H=0;
  1666   0042F8  0E00               	movlw	0
  1667   0042FA  010F               	movlb	15	; () banked
  1668   0042FC  6F25               	movwf	37,b	;volatile
  1669                           
  1670                           ;dc_motor.c: 43:     CCPR4H=0;
  1671   0042FE  0E00               	movlw	0
  1672   004300  6F21               	movwf	33,b	;volatile
  1673                           
  1674                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1675   004302  0EFC               	movlw	-4
  1676   004304  16AD               	andwf	173,f,c	;volatile
  1677                           
  1678                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1679   004306  0EF3               	movlw	-13
  1680   004308  16AD               	andwf	173,f,c	;volatile
  1681                           
  1682                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1683   00430A  0ECF               	movlw	-49
  1684   00430C  16AD               	andwf	173,f,c	;volatile
  1685                           
  1686                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1687   00430E  0E3F               	movlw	-193
  1688   004310  16AD               	andwf	173,f,c	;volatile
  1689   004312                     
  1690                           ; BSR set to: 15
  1691                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1692   004312  88AB               	bsf	171,4,c	;volatile
  1693                           
  1694                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1695   004314  50AB               	movf	171,w,c	;volatile
  1696   004316  0BF0               	andlw	-16
  1697   004318  090C               	iorlw	12
  1698   00431A  6EAB               	movwf	171,c	;volatile
  1699   00431C                     
  1700                           ; BSR set to: 15
  1701                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1702   00431C  8EAB               	bsf	171,7,c	;volatile
  1703   00431E                     
  1704                           ; BSR set to: 15
  1705                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1706   00431E  88A7               	bsf	167,4,c	;volatile
  1707                           
  1708                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1709   004320  50A7               	movf	167,w,c	;volatile
  1710   004322  0BF0               	andlw	-16
  1711   004324  090C               	iorlw	12
  1712   004326  6EA7               	movwf	167,c	;volatile
  1713   004328                     
  1714                           ; BSR set to: 15
  1715                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1716   004328  8EA7               	bsf	167,7,c	;volatile
  1717   00432A                     
  1718                           ; BSR set to: 15
  1719                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1720   00432A  8926               	bsf	38,4,b	;volatile
  1721                           
  1722                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1723   00432C  5126               	movf	38,w,b	;volatile
  1724   00432E  0BF0               	andlw	-16
  1725   004330  090C               	iorlw	12
  1726   004332  6F26               	movwf	38,b	;volatile
  1727   004334                     
  1728                           ; BSR set to: 15
  1729                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1730   004334  8F26               	bsf	38,7,b	;volatile
  1731   004336                     
  1732                           ; BSR set to: 15
  1733                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1734   004336  8922               	bsf	34,4,b	;volatile
  1735                           
  1736                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1737   004338  5122               	movf	34,w,b	;volatile
  1738   00433A  0BF0               	andlw	-16
  1739   00433C  090C               	iorlw	12
  1740   00433E  6F22               	movwf	34,b	;volatile
  1741   004340                     
  1742                           ; BSR set to: 15
  1743                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1744   004340  8F22               	bsf	34,7,b	;volatile
  1745   004342                     
  1746                           ; BSR set to: 15
  1747   004342  0012               	return		;funcret
  1748   004344                     __end_of_initDCmotorsPWM:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _colour_read_all *****************
  1752 ;; Defined at:
  1753 ;;		line 8 in file "colorfunctions.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1756 ;;		 -> colorf(22), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  C               4   39[COMRAM] float 
  1759 ;;  B               4   35[COMRAM] float 
  1760 ;;  G               4   31[COMRAM] float 
  1761 ;;  R               4   27[COMRAM] float 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;Total ram usage:       18 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 3
  1778 ;; This function calls:
  1779 ;;		___xxtofl
  1780 ;;		_color_read_Blue
  1781 ;;		_color_read_Clear
  1782 ;;		_color_read_Green
  1783 ;;		_color_read_Red
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text3
  1790   003A08                     __ptext3:
  1791                           	callstack 0
  1792   003A08                     _colour_read_all:
  1793                           	callstack 27
  1794   003A08                     
  1795                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1796   003A08  ECD9  F023         	call	_color_read_Red	;wreg free
  1797   003A0C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1798   003A10  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1799   003A14  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1800   003A16  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1801   003A18  0E00               	movlw	0
  1802   003A1A  ECBE  F01A         	call	___xxtofl
  1803   003A1E  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1804   003A22  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1805   003A26  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1806   003A2A  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1807                           
  1808                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1809   003A2E  EC01  F024         	call	_color_read_Green	;wreg free
  1810   003A32  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1811   003A36  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1812   003A3A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1813   003A3C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1814   003A3E  0E00               	movlw	0
  1815   003A40  ECBE  F01A         	call	___xxtofl
  1816   003A44  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1817   003A48  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1818   003A4C  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1819   003A50  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1820                           
  1821                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1822   003A54  EC51  F024         	call	_color_read_Blue	;wreg free
  1823   003A58  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1824   003A5C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1825   003A60  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1826   003A62  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1827   003A64  0E00               	movlw	0
  1828   003A66  ECBE  F01A         	call	___xxtofl
  1829   003A6A  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1830   003A6E  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1831   003A72  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1832   003A76  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1833                           
  1834                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1835   003A7A  EC29  F024         	call	_color_read_Clear	;wreg free
  1836   003A7E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1837   003A82  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1838   003A86  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1839   003A88  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1840   003A8A  0E00               	movlw	0
  1841   003A8C  ECBE  F01A         	call	___xxtofl
  1842   003A90  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1843   003A94  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1844   003A98  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1845   003A9C  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1846   003AA0                     
  1847                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1848   003AA0  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1849   003AA4  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1850   003AA8  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1851   003AAC  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1852   003AB0  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1853   003AB4  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1854   003AB8                     
  1855                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1856   003AB8  EE20 F008          	lfsr	2,8
  1857   003ABC  501A               	movf	colour_read_all@cf^0,w,c
  1858   003ABE  26D9               	addwf	fsr2l,f,c
  1859   003AC0  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1860   003AC2  22DA               	addwfc	fsr2h,f,c
  1861   003AC4  C024  FFDE         	movff	colour_read_all@B,postinc2
  1862   003AC8  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1863   003ACC  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1864   003AD0  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1865   003AD4                     
  1866                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1867   003AD4  EE20 F004          	lfsr	2,4
  1868   003AD8  501A               	movf	colour_read_all@cf^0,w,c
  1869   003ADA  26D9               	addwf	fsr2l,f,c
  1870   003ADC  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1871   003ADE  22DA               	addwfc	fsr2h,f,c
  1872   003AE0  C020  FFDE         	movff	colour_read_all@G,postinc2
  1873   003AE4  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1874   003AE8  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1875   003AEC  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1876   003AF0                     
  1877                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1878   003AF0  EE20 F00C          	lfsr	2,12
  1879   003AF4  501A               	movf	colour_read_all@cf^0,w,c
  1880   003AF6  26D9               	addwf	fsr2l,f,c
  1881   003AF8  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1882   003AFA  22DA               	addwfc	fsr2h,f,c
  1883   003AFC  C028  FFDE         	movff	colour_read_all@C,postinc2
  1884   003B00  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  1885   003B04  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  1886   003B08  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  1887   003B0C  0012               	return		;funcret
  1888   003B0E                     __end_of_colour_read_all:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _color_read_Red *****************
  1892 ;; Defined at:
  1893 ;;		line 38 in file "colorclick.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  tmp             2    9[COMRAM] unsigned int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2    4[COMRAM] unsigned int 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;Total ram usage:        7 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 2
  1914 ;; This function calls:
  1915 ;;		_I2C_2_Master_Read
  1916 ;;		_I2C_2_Master_RepStart
  1917 ;;		_I2C_2_Master_Start
  1918 ;;		_I2C_2_Master_Stop
  1919 ;;		_I2C_2_Master_Write
  1920 ;; This function is called by:
  1921 ;;		_colour_read_all
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text4
  1926   0047B2                     __ptext4:
  1927                           	callstack 0
  1928   0047B2                     _color_read_Red:
  1929                           	callstack 27
  1930   0047B2                     
  1931                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  1932   0047B2  EC1B  F026         	call	_I2C_2_Master_Start	;wreg free
  1933                           
  1934                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  1935   0047B6  0E52               	movlw	82
  1936   0047B8  EC0B  F026         	call	_I2C_2_Master_Write
  1937                           
  1938                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  1939   0047BC  0EB6               	movlw	182
  1940   0047BE  EC0B  F026         	call	_I2C_2_Master_Write
  1941                           
  1942                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  1943   0047C2  EC11  F026         	call	_I2C_2_Master_RepStart	;wreg free
  1944                           
  1945                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  1946   0047C6  0E53               	movlw	83
  1947   0047C8  EC0B  F026         	call	_I2C_2_Master_Write
  1948                           
  1949                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  1950   0047CC  0E01               	movlw	1
  1951   0047CE  EC08  F025         	call	_I2C_2_Master_Read
  1952   0047D2  6E07               	movwf	??_color_read_Red^0,c
  1953   0047D4  5007               	movf	??_color_read_Red^0,w,c
  1954   0047D6  6E0A               	movwf	color_read_Red@tmp^0,c
  1955   0047D8  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1956                           
  1957                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1958   0047DA  0E00               	movlw	0
  1959   0047DC  EC08  F025         	call	_I2C_2_Master_Read
  1960   0047E0  6E07               	movwf	??_color_read_Red^0,c
  1961   0047E2  5007               	movf	??_color_read_Red^0,w,c
  1962   0047E4  6E09               	movwf	(??_color_read_Red+2)^0,c
  1963   0047E6  6A08               	clrf	(??_color_read_Red+1)^0,c
  1964   0047E8  500A               	movf	color_read_Red@tmp^0,w,c
  1965   0047EA  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1966   0047EC  6E0A               	movwf	color_read_Red@tmp^0,c
  1967   0047EE  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1968   0047F0  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1969   0047F2  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1970                           
  1971                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  1972   0047F4  EC16  F026         	call	_I2C_2_Master_Stop	;wreg free
  1973   0047F8                     
  1974                           ;colorclick.c: 49:  return tmp;
  1975   0047F8  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1976   0047FC  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1977   004800  0012               	return		;funcret
  1978   004802                     __end_of_color_read_Red:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _color_read_Green *****************
  1982 ;; Defined at:
  1983 ;;		line 51 in file "colorclick.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  tmp             2    9[COMRAM] unsigned int 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  2    4[COMRAM] unsigned int 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:        7 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 2
  2004 ;; This function calls:
  2005 ;;		_I2C_2_Master_Read
  2006 ;;		_I2C_2_Master_RepStart
  2007 ;;		_I2C_2_Master_Start
  2008 ;;		_I2C_2_Master_Stop
  2009 ;;		_I2C_2_Master_Write
  2010 ;; This function is called by:
  2011 ;;		_colour_read_all
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text5
  2016   004802                     __ptext5:
  2017                           	callstack 0
  2018   004802                     _color_read_Green:
  2019                           	callstack 27
  2020   004802                     
  2021                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2022   004802  EC1B  F026         	call	_I2C_2_Master_Start	;wreg free
  2023                           
  2024                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2025   004806  0E52               	movlw	82
  2026   004808  EC0B  F026         	call	_I2C_2_Master_Write
  2027                           
  2028                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2029   00480C  0EB8               	movlw	184
  2030   00480E  EC0B  F026         	call	_I2C_2_Master_Write
  2031                           
  2032                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2033   004812  EC11  F026         	call	_I2C_2_Master_RepStart	;wreg free
  2034                           
  2035                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2036   004816  0E53               	movlw	83
  2037   004818  EC0B  F026         	call	_I2C_2_Master_Write
  2038                           
  2039                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2040   00481C  0E01               	movlw	1
  2041   00481E  EC08  F025         	call	_I2C_2_Master_Read
  2042   004822  6E07               	movwf	??_color_read_Green^0,c
  2043   004824  5007               	movf	??_color_read_Green^0,w,c
  2044   004826  6E0A               	movwf	color_read_Green@tmp^0,c
  2045   004828  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2046                           
  2047                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2048   00482A  0E00               	movlw	0
  2049   00482C  EC08  F025         	call	_I2C_2_Master_Read
  2050   004830  6E07               	movwf	??_color_read_Green^0,c
  2051   004832  5007               	movf	??_color_read_Green^0,w,c
  2052   004834  6E09               	movwf	(??_color_read_Green+2)^0,c
  2053   004836  6A08               	clrf	(??_color_read_Green+1)^0,c
  2054   004838  500A               	movf	color_read_Green@tmp^0,w,c
  2055   00483A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2056   00483C  6E0A               	movwf	color_read_Green@tmp^0,c
  2057   00483E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2058   004840  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2059   004842  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2060                           
  2061                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2062   004844  EC16  F026         	call	_I2C_2_Master_Stop	;wreg free
  2063   004848                     
  2064                           ;colorclick.c: 62:     return tmp;
  2065   004848  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2066   00484C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2067   004850  0012               	return		;funcret
  2068   004852                     __end_of_color_read_Green:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _color_read_Clear *****************
  2072 ;; Defined at:
  2073 ;;		line 80 in file "colorclick.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  tmp             2    9[COMRAM] unsigned int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2    4[COMRAM] unsigned int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;Total ram usage:        7 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 2
  2094 ;; This function calls:
  2095 ;;		_I2C_2_Master_Read
  2096 ;;		_I2C_2_Master_RepStart
  2097 ;;		_I2C_2_Master_Start
  2098 ;;		_I2C_2_Master_Stop
  2099 ;;		_I2C_2_Master_Write
  2100 ;; This function is called by:
  2101 ;;		_colour_read_all
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text6
  2106   004852                     __ptext6:
  2107                           	callstack 0
  2108   004852                     _color_read_Clear:
  2109                           	callstack 27
  2110   004852                     
  2111                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2112   004852  EC1B  F026         	call	_I2C_2_Master_Start	;wreg free
  2113                           
  2114                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2115   004856  0E52               	movlw	82
  2116   004858  EC0B  F026         	call	_I2C_2_Master_Write
  2117                           
  2118                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2119   00485C  0EB4               	movlw	180
  2120   00485E  EC0B  F026         	call	_I2C_2_Master_Write
  2121                           
  2122                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2123   004862  EC11  F026         	call	_I2C_2_Master_RepStart	;wreg free
  2124                           
  2125                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2126   004866  0E53               	movlw	83
  2127   004868  EC0B  F026         	call	_I2C_2_Master_Write
  2128                           
  2129                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2130   00486C  0E01               	movlw	1
  2131   00486E  EC08  F025         	call	_I2C_2_Master_Read
  2132   004872  6E07               	movwf	??_color_read_Clear^0,c
  2133   004874  5007               	movf	??_color_read_Clear^0,w,c
  2134   004876  6E0A               	movwf	color_read_Clear@tmp^0,c
  2135   004878  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2136                           
  2137                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2138   00487A  0E00               	movlw	0
  2139   00487C  EC08  F025         	call	_I2C_2_Master_Read
  2140   004880  6E07               	movwf	??_color_read_Clear^0,c
  2141   004882  5007               	movf	??_color_read_Clear^0,w,c
  2142   004884  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2143   004886  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2144   004888  500A               	movf	color_read_Clear@tmp^0,w,c
  2145   00488A  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2146   00488C  6E0A               	movwf	color_read_Clear@tmp^0,c
  2147   00488E  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2148   004890  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2149   004892  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2150                           
  2151                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2152   004894  EC16  F026         	call	_I2C_2_Master_Stop	;wreg free
  2153   004898                     
  2154                           ;colorclick.c: 91:     return tmp;
  2155   004898  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2156   00489C  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2157   0048A0  0012               	return		;funcret
  2158   0048A2                     __end_of_color_read_Clear:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _color_read_Blue *****************
  2162 ;; Defined at:
  2163 ;;		line 65 in file "colorclick.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  tmp             2    9[COMRAM] unsigned int 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2    4[COMRAM] unsigned int 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;Total ram usage:        7 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 2
  2184 ;; This function calls:
  2185 ;;		_I2C_2_Master_Read
  2186 ;;		_I2C_2_Master_RepStart
  2187 ;;		_I2C_2_Master_Start
  2188 ;;		_I2C_2_Master_Stop
  2189 ;;		_I2C_2_Master_Write
  2190 ;; This function is called by:
  2191 ;;		_colour_read_all
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text7
  2196   0048A2                     __ptext7:
  2197                           	callstack 0
  2198   0048A2                     _color_read_Blue:
  2199                           	callstack 27
  2200   0048A2                     
  2201                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2202   0048A2  EC1B  F026         	call	_I2C_2_Master_Start	;wreg free
  2203                           
  2204                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2205   0048A6  0E52               	movlw	82
  2206   0048A8  EC0B  F026         	call	_I2C_2_Master_Write
  2207                           
  2208                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2209   0048AC  0EBA               	movlw	186
  2210   0048AE  EC0B  F026         	call	_I2C_2_Master_Write
  2211                           
  2212                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2213   0048B2  EC11  F026         	call	_I2C_2_Master_RepStart	;wreg free
  2214                           
  2215                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2216   0048B6  0E53               	movlw	83
  2217   0048B8  EC0B  F026         	call	_I2C_2_Master_Write
  2218                           
  2219                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2220   0048BC  0E01               	movlw	1
  2221   0048BE  EC08  F025         	call	_I2C_2_Master_Read
  2222   0048C2  6E07               	movwf	??_color_read_Blue^0,c
  2223   0048C4  5007               	movf	??_color_read_Blue^0,w,c
  2224   0048C6  6E0A               	movwf	color_read_Blue@tmp^0,c
  2225   0048C8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2226                           
  2227                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2228   0048CA  0E00               	movlw	0
  2229   0048CC  EC08  F025         	call	_I2C_2_Master_Read
  2230   0048D0  6E07               	movwf	??_color_read_Blue^0,c
  2231   0048D2  5007               	movf	??_color_read_Blue^0,w,c
  2232   0048D4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2233   0048D6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2234   0048D8  500A               	movf	color_read_Blue@tmp^0,w,c
  2235   0048DA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2236   0048DC  6E0A               	movwf	color_read_Blue@tmp^0,c
  2237   0048DE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2238   0048E0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2239   0048E2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2240                           
  2241                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2242   0048E4  EC16  F026         	call	_I2C_2_Master_Stop	;wreg free
  2243   0048E8                     
  2244                           ;colorclick.c: 76:     return tmp;
  2245   0048E8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2246   0048EC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2247   0048F0  0012               	return		;funcret
  2248   0048F2                     __end_of_color_read_Blue:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _I2C_2_Master_RepStart *****************
  2252 ;; Defined at:
  2253 ;;		line 33 in file "i2c.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 1
  2274 ;; This function calls:
  2275 ;;		_I2C_2_Master_Idle
  2276 ;; This function is called by:
  2277 ;;		_color_read_Red
  2278 ;;		_color_read_Green
  2279 ;;		_color_read_Blue
  2280 ;;		_color_read_Clear
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text8
  2285   004C22                     __ptext8:
  2286                           	callstack 0
  2287   004C22                     _I2C_2_Master_RepStart:
  2288                           	callstack 27
  2289   004C22                     
  2290                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2291   004C22  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2292   004C26                     
  2293                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2294   004C26  010E               	movlb	14	; () banked
  2295   004C28  83DA               	bsf	218,1,b	;volatile
  2296   004C2A                     
  2297                           ; BSR set to: 14
  2298   004C2A  0012               	return		;funcret
  2299   004C2C                     __end_of_I2C_2_Master_RepStart:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _I2C_2_Master_Read *****************
  2303 ;; Defined at:
  2304 ;;		line 51 in file "i2c.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  ack             1    wreg     unsigned char 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  ack             1    2[COMRAM] unsigned char 
  2309 ;;  tmp             1    3[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      unsigned char 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;Total ram usage:        3 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 1
  2326 ;; This function calls:
  2327 ;;		_I2C_2_Master_Idle
  2328 ;; This function is called by:
  2329 ;;		_color_read_Red
  2330 ;;		_color_read_Green
  2331 ;;		_color_read_Blue
  2332 ;;		_color_read_Clear
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text9
  2337   004A10                     __ptext9:
  2338                           	callstack 0
  2339   004A10                     _I2C_2_Master_Read:
  2340                           	callstack 27
  2341                           
  2342                           ; BSR set to: 14
  2343                           ;incstack = 0
  2344                           ;I2C_2_Master_Read@ack stored from wreg
  2345   004A10  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2346   004A12                     
  2347                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2348   004A12  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2349   004A16                     
  2350                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2351   004A16  010E               	movlb	14	; () banked
  2352   004A18  87DA               	bsf	218,3,b	;volatile
  2353                           
  2354                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2355   004A1A  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2356   004A1E                     
  2357                           ;i2c.c: 57:   tmp = SSP2BUF;
  2358   004A1E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2359                           
  2360                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2361   004A22  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2362   004A26                     
  2363                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2364   004A26  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2365   004A28  B4D8               	btfsc	status,2,c
  2366   004A2A  EF19  F025         	goto	u4071
  2367   004A2E  EF1D  F025         	goto	u4070
  2368   004A32                     u4071:
  2369   004A32  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2370   004A34  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2371   004A36  EF1E  F025         	goto	u4088
  2372   004A3A                     u4070:
  2373   004A3A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2374   004A3C                     u4088:
  2375   004A3C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2376   004A3E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2377   004A40  010E               	movlb	14	; () banked
  2378   004A42  51DA               	movf	218,w,b	;volatile
  2379   004A44  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2380   004A46  0BDF               	andlw	-33
  2381   004A48  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2382   004A4A  6FDA               	movwf	218,b	;volatile
  2383   004A4C                     
  2384                           ; BSR set to: 14
  2385                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2386   004A4C  89DA               	bsf	218,4,b	;volatile
  2387   004A4E                     
  2388                           ; BSR set to: 14
  2389                           ;i2c.c: 61:   return tmp;
  2390   004A4E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2391   004A50                     
  2392                           ; BSR set to: 14
  2393   004A50  0012               	return		;funcret
  2394   004A52                     __end_of_I2C_2_Master_Read:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _color_click_init *****************
  2398 ;; Defined at:
  2399 ;;		line 6 in file "colorclick.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;Total ram usage:        1 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 3
  2420 ;; This function calls:
  2421 ;;		_I2C_2_Master_Init
  2422 ;;		_color_writetoaddr
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text10
  2429   004A52                     __ptext10:
  2430                           	callstack 0
  2431   004A52                     _color_click_init:
  2432                           	callstack 27
  2433   004A52                     
  2434                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2435   004A52  EC9B  F025         	call	_I2C_2_Master_Init	;wreg free
  2436   004A56                     
  2437                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2438   004A56  0E01               	movlw	1
  2439   004A58  6E03               	movwf	color_writetoaddr@value^0,c
  2440   004A5A  0E00               	movlw	0
  2441   004A5C  ECE8  F025         	call	_color_writetoaddr
  2442   004A60                     
  2443                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2444   004A60  0E3F               	movlw	63
  2445   004A62  6E05               	movwf	??_color_click_init^0,c
  2446   004A64  0E55               	movlw	85
  2447   004A66                     u4847:
  2448   004A66  2EE8               	decfsz	wreg,f,c
  2449   004A68  D7FE               	bra	u4847
  2450   004A6A  2E05               	decfsz	??_color_click_init^0,f,c
  2451   004A6C  D7FC               	bra	u4847
  2452   004A6E  F000               	nop	
  2453   004A70                     
  2454                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2455   004A70  0E03               	movlw	3
  2456   004A72  6E03               	movwf	color_writetoaddr@value^0,c
  2457   004A74  0E00               	movlw	0
  2458   004A76  ECE8  F025         	call	_color_writetoaddr
  2459   004A7A                     
  2460                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2461   004A7A  0ED6               	movlw	214
  2462   004A7C  6E03               	movwf	color_writetoaddr@value^0,c
  2463   004A7E  0E01               	movlw	1
  2464   004A80  ECE8  F025         	call	_color_writetoaddr
  2465   004A84                     
  2466                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2467   004A84  927F               	bcf	127,1,c	;volatile
  2468   004A86                     
  2469                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2470   004A86  9287               	bcf	135,1,c	;volatile
  2471   004A88                     
  2472                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2473   004A88  9879               	bcf	121,4,c	;volatile
  2474   004A8A                     
  2475                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2476   004A8A  9881               	bcf	129,4,c	;volatile
  2477   004A8C                     
  2478                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2479   004A8C  9E7E               	bcf	126,7,c	;volatile
  2480   004A8E                     
  2481                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2482   004A8E  9E86               	bcf	134,7,c	;volatile
  2483   004A90  0012               	return		;funcret
  2484   004A92                     __end_of_color_click_init:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _color_writetoaddr *****************
  2488 ;; Defined at:
  2489 ;;		line 30 in file "colorclick.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  address         1    wreg     unsigned char 
  2492 ;;  value           1    2[COMRAM] unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  address         1    3[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2504 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 2
  2511 ;; This function calls:
  2512 ;;		_I2C_2_Master_Start
  2513 ;;		_I2C_2_Master_Stop
  2514 ;;		_I2C_2_Master_Write
  2515 ;; This function is called by:
  2516 ;;		_color_click_init
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text11
  2521   004BD0                     __ptext11:
  2522                           	callstack 0
  2523   004BD0                     _color_writetoaddr:
  2524                           	callstack 27
  2525                           
  2526                           ;incstack = 0
  2527                           ;color_writetoaddr@address stored from wreg
  2528   004BD0  6E04               	movwf	color_writetoaddr@address^0,c
  2529   004BD2                     
  2530                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2531   004BD2  EC1B  F026         	call	_I2C_2_Master_Start	;wreg free
  2532                           
  2533                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2534   004BD6  0E52               	movlw	82
  2535   004BD8  EC0B  F026         	call	_I2C_2_Master_Write
  2536                           
  2537                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2538   004BDC  5004               	movf	color_writetoaddr@address^0,w,c
  2539   004BDE  0980               	iorlw	128
  2540   004BE0  EC0B  F026         	call	_I2C_2_Master_Write
  2541                           
  2542                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2543   004BE4  5003               	movf	color_writetoaddr@value^0,w,c
  2544   004BE6  EC0B  F026         	call	_I2C_2_Master_Write
  2545                           
  2546                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2547   004BEA  EC16  F026         	call	_I2C_2_Master_Stop	;wreg free
  2548   004BEE  0012               	return		;funcret
  2549   004BF0                     __end_of_color_writetoaddr:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _I2C_2_Master_Write *****************
  2553 ;; Defined at:
  2554 ;;		line 45 in file "i2c.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  data_byte       1    wreg     unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  data_byte       1    1[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		_I2C_2_Master_Idle
  2577 ;; This function is called by:
  2578 ;;		_color_writetoaddr
  2579 ;;		_color_read_Red
  2580 ;;		_color_read_Green
  2581 ;;		_color_read_Blue
  2582 ;;		_color_read_Clear
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text12
  2587   004C16                     __ptext12:
  2588                           	callstack 0
  2589   004C16                     _I2C_2_Master_Write:
  2590                           	callstack 27
  2591                           
  2592                           ;incstack = 0
  2593                           ;I2C_2_Master_Write@data_byte stored from wreg
  2594   004C16  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2595   004C18                     
  2596                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2597   004C18  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2598   004C1C                     
  2599                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2600   004C1C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2601   004C20  0012               	return		;funcret
  2602   004C22                     __end_of_I2C_2_Master_Write:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _I2C_2_Master_Stop *****************
  2606 ;; Defined at:
  2607 ;;		line 39 in file "i2c.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 1
  2628 ;; This function calls:
  2629 ;;		_I2C_2_Master_Idle
  2630 ;; This function is called by:
  2631 ;;		_color_writetoaddr
  2632 ;;		_color_read_Red
  2633 ;;		_color_read_Green
  2634 ;;		_color_read_Blue
  2635 ;;		_color_read_Clear
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text13
  2640   004C2C                     __ptext13:
  2641                           	callstack 0
  2642   004C2C                     _I2C_2_Master_Stop:
  2643                           	callstack 27
  2644   004C2C                     
  2645                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2646   004C2C  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2647   004C30                     
  2648                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2649   004C30  010E               	movlb	14	; () banked
  2650   004C32  85DA               	bsf	218,2,b	;volatile
  2651   004C34                     
  2652                           ; BSR set to: 14
  2653   004C34  0012               	return		;funcret
  2654   004C36                     __end_of_I2C_2_Master_Stop:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _I2C_2_Master_Start *****************
  2658 ;; Defined at:
  2659 ;;		line 27 in file "i2c.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 1
  2680 ;; This function calls:
  2681 ;;		_I2C_2_Master_Idle
  2682 ;; This function is called by:
  2683 ;;		_color_writetoaddr
  2684 ;;		_color_read_Red
  2685 ;;		_color_read_Green
  2686 ;;		_color_read_Blue
  2687 ;;		_color_read_Clear
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text14
  2692   004C36                     __ptext14:
  2693                           	callstack 0
  2694   004C36                     _I2C_2_Master_Start:
  2695                           	callstack 27
  2696   004C36                     
  2697                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2698   004C36  ECB0  F025         	call	_I2C_2_Master_Idle	;wreg free
  2699   004C3A                     
  2700                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2701   004C3A  010E               	movlb	14	; () banked
  2702   004C3C  81DA               	bsf	218,0,b	;volatile
  2703   004C3E                     
  2704                           ; BSR set to: 14
  2705   004C3E  0012               	return		;funcret
  2706   004C40                     __end_of_I2C_2_Master_Start:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _I2C_2_Master_Idle *****************
  2710 ;; Defined at:
  2711 ;;		line 22 in file "i2c.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;Total ram usage:        1 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_I2C_2_Master_Start
  2735 ;;		_I2C_2_Master_RepStart
  2736 ;;		_I2C_2_Master_Stop
  2737 ;;		_I2C_2_Master_Write
  2738 ;;		_I2C_2_Master_Read
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text15
  2743   004B60                     __ptext15:
  2744                           	callstack 0
  2745   004B60                     _I2C_2_Master_Idle:
  2746                           	callstack 27
  2747   004B60                     l30:
  2748   004B60  010E               	movlb	14	; () banked
  2749   004B62  B5D8               	btfsc	216,2,b	;volatile
  2750   004B64  EFB6  F025         	goto	u4011
  2751   004B68  EFB8  F025         	goto	u4010
  2752   004B6C                     u4011:
  2753   004B6C  EFB0  F025         	goto	l30
  2754   004B70                     u4010:
  2755   004B70                     
  2756                           ; BSR set to: 14
  2757   004B70  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2758   004B74  0E1F               	movlw	31
  2759   004B76  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2760   004B78  A4D8               	btfss	status,2,c
  2761   004B7A  EFC1  F025         	goto	u4021
  2762   004B7E  EFC3  F025         	goto	u4020
  2763   004B82                     u4021:
  2764   004B82  EFB0  F025         	goto	l30
  2765   004B86                     u4020:
  2766   004B86                     
  2767                           ; BSR set to: 14
  2768   004B86  0012               	return		;funcret
  2769   004B88                     __end_of_I2C_2_Master_Idle:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _I2C_2_Master_Init *****************
  2773 ;; Defined at:
  2774 ;;		line 4 in file "i2c.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;;		_color_click_init
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text16
  2803   004B36                     __ptext16:
  2804                           	callstack 0
  2805   004B36                     _I2C_2_Master_Init:
  2806                           	callstack 29
  2807   004B36                     
  2808                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2809   004B36  010E               	movlb	14	; () banked
  2810   004B38  51D9               	movf	217,w,b	;volatile
  2811   004B3A  0BF0               	andlw	-16
  2812   004B3C  0908               	iorlw	8
  2813   004B3E  6FD9               	movwf	217,b	;volatile
  2814   004B40                     
  2815                           ; BSR set to: 14
  2816                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2817   004B40  8BD9               	bsf	217,5,b	;volatile
  2818                           
  2819                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2820   004B42  0E9F               	movlw	159
  2821   004B44  6FD6               	movwf	214,b	;volatile
  2822   004B46                     
  2823                           ; BSR set to: 14
  2824                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2825   004B46  8A84               	bsf	132,5,c	;volatile
  2826   004B48                     
  2827                           ; BSR set to: 14
  2828                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2829   004B48  8C84               	bsf	132,6,c	;volatile
  2830   004B4A                     
  2831                           ; BSR set to: 14
  2832                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2833   004B4A  9BA7               	bcf	167,5,b	;volatile
  2834   004B4C                     
  2835                           ; BSR set to: 14
  2836                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2837   004B4C  9DA7               	bcf	167,6,b	;volatile
  2838                           
  2839                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2840   004B4E  0E1D               	movlw	29
  2841   004B50  6F1D               	movwf	29,b	;volatile
  2842                           
  2843                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2844   004B52  0E1E               	movlw	30
  2845   004B54  6F1C               	movwf	28,b	;volatile
  2846                           
  2847                           ;i2c.c: 18:   RD5PPS=0x1C;
  2848   004B56  0E1C               	movlw	28
  2849   004B58  6F6F               	movwf	111,b	;volatile
  2850                           
  2851                           ;i2c.c: 19:   RD6PPS=0x1B;
  2852   004B5A  0E1B               	movlw	27
  2853   004B5C  6F70               	movwf	112,b	;volatile
  2854   004B5E                     
  2855                           ; BSR set to: 14
  2856   004B5E  0012               	return		;funcret
  2857   004B60                     __end_of_I2C_2_Master_Init:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _RGB2Hue *****************
  2861 ;; Defined at:
  2862 ;;		line 23 in file "colorfunctions.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  cf              2   17[BANK0 ] PTR struct RGBC_rel
  2865 ;;		 -> colorf(22), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  min             2   29[BANK0 ] int 
  2868 ;;  max             2   27[BANK0 ] int 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;Total ram usage:       14 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		___fladd
  2887 ;;		___fldiv
  2888 ;;		___fleq
  2889 ;;		___flge
  2890 ;;		___flmul
  2891 ;;		___flsub
  2892 ;;		___fltol
  2893 ;;		___xxtofl
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text17
  2900   00186A                     __ptext17:
  2901                           	callstack 0
  2902   00186A                     _RGB2Hue:
  2903                           	callstack 28
  2904   00186A                     
  2905                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2906   00186A  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2907   00186E  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2908   001872  CFDE F001          	movff	postinc2,___fleq@ff1
  2909   001876  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2910   00187A  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2911   00187E  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2912   001882  0100               	movlb	0	; () banked
  2913   001884  EE20 F004          	lfsr	2,4
  2914   001888  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2915   00188A  26D9               	addwf	fsr2l,f,c
  2916   00188C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2917   00188E  22DA               	addwfc	fsr2h,f,c
  2918   001890  CFDE F005          	movff	postinc2,___fleq@ff2
  2919   001894  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2920   001898  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2921   00189C  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2922   0018A0  ECCD  F01F         	call	___fleq	;wreg free
  2923   0018A4  A0D8               	btfss	status,0,c
  2924   0018A6  EF57  F00C         	goto	u4481
  2925   0018AA  EF59  F00C         	goto	u4480
  2926   0018AE                     u4481:
  2927   0018AE  EF8E  F00C         	goto	l4724
  2928   0018B2                     u4480:
  2929   0018B2  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2930   0018B6  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2931   0018BA  CFDE F001          	movff	postinc2,___fleq@ff1
  2932   0018BE  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2933   0018C2  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2934   0018C6  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2935   0018CA  0100               	movlb	0	; () banked
  2936   0018CC  EE20 F008          	lfsr	2,8
  2937   0018D0  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2938   0018D2  26D9               	addwf	fsr2l,f,c
  2939   0018D4  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2940   0018D6  22DA               	addwfc	fsr2h,f,c
  2941   0018D8  CFDE F005          	movff	postinc2,___fleq@ff2
  2942   0018DC  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2943   0018E0  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2944   0018E4  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2945   0018E8  ECCD  F01F         	call	___fleq	;wreg free
  2946   0018EC  A0D8               	btfss	status,0,c
  2947   0018EE  EF7B  F00C         	goto	u4491
  2948   0018F2  EF7D  F00C         	goto	u4490
  2949   0018F6                     u4491:
  2950   0018F6  EF8E  F00C         	goto	l4724
  2951   0018FA                     u4490:
  2952   0018FA                     
  2953                           ;colorfunctions.c: 25:         cf->h=0;
  2954   0018FA  0100               	movlb	0	; () banked
  2955   0018FC  EE20 F010          	lfsr	2,16
  2956   001900  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2957   001902  26D9               	addwf	fsr2l,f,c
  2958   001904  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2959   001906  22DA               	addwfc	fsr2h,f,c
  2960   001908  0E00               	movlw	0
  2961   00190A  6EDE               	movwf	postinc2,c
  2962   00190C  0E00               	movlw	0
  2963   00190E  6EDE               	movwf	postinc2,c
  2964   001910  0E00               	movlw	0
  2965   001912  6EDE               	movwf	postinc2,c
  2966   001914  0E00               	movlw	0
  2967   001916  6EDD               	movwf	postdec2,c
  2968                           
  2969                           ;colorfunctions.c: 26:     } else{
  2970   001918  EFCA  F00F         	goto	l507
  2971   00191C                     l4724:
  2972                           
  2973                           ;colorfunctions.c: 28:         signed int min=0;
  2974   00191C  0E00               	movlw	0
  2975   00191E  0100               	movlb	0	; () banked
  2976   001920  6F7E               	movwf	(RGB2Hue@min+1)& (0+255),b
  2977   001922  0E00               	movlw	0
  2978   001924  6F7D               	movwf	RGB2Hue@min& (0+255),b
  2979   001926                     
  2980                           ; BSR set to: 0
  2981                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2982   001926  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2983   00192A  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2984   00192E  CFDE F057          	movff	postinc2,___flge@ff1
  2985   001932  CFDE F058          	movff	postinc2,___flge@ff1+1
  2986   001936  CFDE F059          	movff	postinc2,___flge@ff1+2
  2987   00193A  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2988   00193E  EE20 F004          	lfsr	2,4
  2989   001942  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2990   001944  26D9               	addwf	fsr2l,f,c
  2991   001946  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2992   001948  22DA               	addwfc	fsr2h,f,c
  2993   00194A  CFDE F05B          	movff	postinc2,___flge@ff2
  2994   00194E  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2995   001952  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2996   001956  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2997   00195A  EC0A  F01E         	call	___flge	;wreg free
  2998   00195E  B0D8               	btfsc	status,0,c
  2999   001960  EFB4  F00C         	goto	u4501
  3000   001964  EFB6  F00C         	goto	u4500
  3001   001968                     u4501:
  3002   001968  EFEE  F00C         	goto	l4732
  3003   00196C                     u4500:
  3004   00196C  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3005   001970  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3006   001974  CFDE F057          	movff	postinc2,___flge@ff1
  3007   001978  CFDE F058          	movff	postinc2,___flge@ff1+1
  3008   00197C  CFDE F059          	movff	postinc2,___flge@ff1+2
  3009   001980  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3010   001984  0100               	movlb	0	; () banked
  3011   001986  EE20 F008          	lfsr	2,8
  3012   00198A  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3013   00198C  26D9               	addwf	fsr2l,f,c
  3014   00198E  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3015   001990  22DA               	addwfc	fsr2h,f,c
  3016   001992  CFDE F05B          	movff	postinc2,___flge@ff2
  3017   001996  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3018   00199A  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3019   00199E  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3020   0019A2  EC0A  F01E         	call	___flge	;wreg free
  3021   0019A6  B0D8               	btfsc	status,0,c
  3022   0019A8  EFD8  F00C         	goto	u4511
  3023   0019AC  EFDA  F00C         	goto	u4510
  3024   0019B0                     u4511:
  3025   0019B0  EFEE  F00C         	goto	l4732
  3026   0019B4                     u4510:
  3027   0019B4                     
  3028                           ;colorfunctions.c: 31:             min=cf->Rf;
  3029   0019B4  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3030   0019B8  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3031   0019BC  CFDE F001          	movff	postinc2,___fltol@f1
  3032   0019C0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3033   0019C4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3034   0019C8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3035   0019CC  EC87  F01D         	call	___fltol	;wreg free
  3036   0019D0  C001  F07D         	movff	?___fltol,RGB2Hue@min
  3037   0019D4  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  3038                           
  3039                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3040   0019D8  EF64  F00D         	goto	l499
  3041   0019DC                     l4732:
  3042   0019DC  0100               	movlb	0	; () banked
  3043   0019DE  EE20 F004          	lfsr	2,4
  3044   0019E2  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3045   0019E4  26D9               	addwf	fsr2l,f,c
  3046   0019E6  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3047   0019E8  22DA               	addwfc	fsr2h,f,c
  3048   0019EA  CFDE F057          	movff	postinc2,___flge@ff1
  3049   0019EE  CFDE F058          	movff	postinc2,___flge@ff1+1
  3050   0019F2  CFDE F059          	movff	postinc2,___flge@ff1+2
  3051   0019F6  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3052   0019FA  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3053   0019FE  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3054   001A02  CFDE F05B          	movff	postinc2,___flge@ff2
  3055   001A06  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3056   001A0A  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3057   001A0E  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3058   001A12  EC0A  F01E         	call	___flge	;wreg free
  3059   001A16  B0D8               	btfsc	status,0,c
  3060   001A18  EF10  F00D         	goto	u4521
  3061   001A1C  EF12  F00D         	goto	u4520
  3062   001A20                     u4521:
  3063   001A20  EF4F  F00D         	goto	l4738
  3064   001A24                     u4520:
  3065   001A24  0100               	movlb	0	; () banked
  3066   001A26  EE20 F004          	lfsr	2,4
  3067   001A2A  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3068   001A2C  26D9               	addwf	fsr2l,f,c
  3069   001A2E  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3070   001A30  22DA               	addwfc	fsr2h,f,c
  3071   001A32  CFDE F057          	movff	postinc2,___flge@ff1
  3072   001A36  CFDE F058          	movff	postinc2,___flge@ff1+1
  3073   001A3A  CFDE F059          	movff	postinc2,___flge@ff1+2
  3074   001A3E  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3075   001A42  EE20 F008          	lfsr	2,8
  3076   001A46  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3077   001A48  26D9               	addwf	fsr2l,f,c
  3078   001A4A  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3079   001A4C  22DA               	addwfc	fsr2h,f,c
  3080   001A4E  CFDE F05B          	movff	postinc2,___flge@ff2
  3081   001A52  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3082   001A56  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3083   001A5A  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3084   001A5E  EC0A  F01E         	call	___flge	;wreg free
  3085   001A62  B0D8               	btfsc	status,0,c
  3086   001A64  EF36  F00D         	goto	u4531
  3087   001A68  EF38  F00D         	goto	u4530
  3088   001A6C                     u4531:
  3089   001A6C  EF4F  F00D         	goto	l4738
  3090   001A70                     u4530:
  3091   001A70                     
  3092                           ;colorfunctions.c: 33:             min=cf->Gf;
  3093   001A70  0100               	movlb	0	; () banked
  3094   001A72  EE20 F004          	lfsr	2,4
  3095   001A76  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3096   001A78  26D9               	addwf	fsr2l,f,c
  3097   001A7A  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3098   001A7C  22DA               	addwfc	fsr2h,f,c
  3099   001A7E  CFDE F001          	movff	postinc2,___fltol@f1
  3100   001A82  CFDE F002          	movff	postinc2,___fltol@f1+1
  3101   001A86  CFDE F003          	movff	postinc2,___fltol@f1+2
  3102   001A8A  CFDE F004          	movff	postinc2,___fltol@f1+3
  3103   001A8E  EC87  F01D         	call	___fltol	;wreg free
  3104   001A92  C001  F07D         	movff	?___fltol,RGB2Hue@min
  3105   001A96  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  3106                           
  3107                           ;colorfunctions.c: 34:         } else{
  3108   001A9A  EF64  F00D         	goto	l499
  3109   001A9E                     l4738:
  3110                           
  3111                           ;colorfunctions.c: 35:             min=cf->Bf;
  3112   001A9E  0100               	movlb	0	; () banked
  3113   001AA0  EE20 F008          	lfsr	2,8
  3114   001AA4  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3115   001AA6  26D9               	addwf	fsr2l,f,c
  3116   001AA8  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3117   001AAA  22DA               	addwfc	fsr2h,f,c
  3118   001AAC  CFDE F001          	movff	postinc2,___fltol@f1
  3119   001AB0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3120   001AB4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3121   001AB8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3122   001ABC  EC87  F01D         	call	___fltol	;wreg free
  3123   001AC0  C001  F07D         	movff	?___fltol,RGB2Hue@min
  3124   001AC4  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  3125   001AC8                     l499:
  3126                           
  3127                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3128   001AC8  0100               	movlb	0	; () banked
  3129   001ACA  EE20 F004          	lfsr	2,4
  3130   001ACE  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3131   001AD0  26D9               	addwf	fsr2l,f,c
  3132   001AD2  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3133   001AD4  22DA               	addwfc	fsr2h,f,c
  3134   001AD6  CFDE F057          	movff	postinc2,___flge@ff1
  3135   001ADA  CFDE F058          	movff	postinc2,___flge@ff1+1
  3136   001ADE  CFDE F059          	movff	postinc2,___flge@ff1+2
  3137   001AE2  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3138   001AE6  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3139   001AEA  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3140   001AEE  CFDE F05B          	movff	postinc2,___flge@ff2
  3141   001AF2  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3142   001AF6  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3143   001AFA  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3144   001AFE  EC0A  F01E         	call	___flge	;wreg free
  3145   001B02  B0D8               	btfsc	status,0,c
  3146   001B04  EF86  F00D         	goto	u4541
  3147   001B08  EF88  F00D         	goto	u4540
  3148   001B0C                     u4541:
  3149   001B0C  EF25  F00E         	goto	l4746
  3150   001B10                     u4540:
  3151   001B10  0100               	movlb	0	; () banked
  3152   001B12  EE20 F008          	lfsr	2,8
  3153   001B16  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3154   001B18  26D9               	addwf	fsr2l,f,c
  3155   001B1A  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3156   001B1C  22DA               	addwfc	fsr2h,f,c
  3157   001B1E  CFDE F057          	movff	postinc2,___flge@ff1
  3158   001B22  CFDE F058          	movff	postinc2,___flge@ff1+1
  3159   001B26  CFDE F059          	movff	postinc2,___flge@ff1+2
  3160   001B2A  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3161   001B2E  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3162   001B32  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3163   001B36  CFDE F05B          	movff	postinc2,___flge@ff2
  3164   001B3A  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3165   001B3E  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3166   001B42  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3167   001B46  EC0A  F01E         	call	___flge	;wreg free
  3168   001B4A  B0D8               	btfsc	status,0,c
  3169   001B4C  EFAA  F00D         	goto	u4551
  3170   001B50  EFAC  F00D         	goto	u4550
  3171   001B54                     u4551:
  3172   001B54  EF25  F00E         	goto	l4746
  3173   001B58                     u4550:
  3174   001B58                     
  3175                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3176   001B58  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3177   001B5C  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3178   001B60  CFDE F001          	movff	postinc2,___fltol@f1
  3179   001B64  CFDE F002          	movff	postinc2,___fltol@f1+1
  3180   001B68  CFDE F003          	movff	postinc2,___fltol@f1+2
  3181   001B6C  CFDE F004          	movff	postinc2,___fltol@f1+3
  3182   001B70  EC87  F01D         	call	___fltol	;wreg free
  3183   001B74  C001  F07B         	movff	?___fltol,RGB2Hue@max
  3184   001B78  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  3185   001B7C                     
  3186                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3187   001B7C  0100               	movlb	0	; () banked
  3188   001B7E  517D               	movf	RGB2Hue@min& (0+255),w,b
  3189   001B80  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  3190   001B82  6F73               	movwf	??_RGB2Hue& (0+255),b
  3191   001B84  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3192   001B86  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3193   001B88  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  3194   001B8A  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3195   001B8E  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3196   001B92  0E00               	movlw	0
  3197   001B94  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3198   001B96  0EFF               	movlw	-1
  3199   001B98  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3200   001B9A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3201   001B9C  0E01               	movlw	1
  3202   001B9E  ECBE  F01A         	call	___xxtofl
  3203   001BA2  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3204   001BA6  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3205   001BAA  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3206   001BAE  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3207   001BB2  0100               	movlb	0	; () banked
  3208   001BB4  EE20 F008          	lfsr	2,8
  3209   001BB8  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3210   001BBA  26D9               	addwf	fsr2l,f,c
  3211   001BBC  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3212   001BBE  22DA               	addwfc	fsr2h,f,c
  3213   001BC0  CFDE F02E          	movff	postinc2,___flsub@a
  3214   001BC4  CFDE F02F          	movff	postinc2,___flsub@a+1
  3215   001BC8  CFDE F030          	movff	postinc2,___flsub@a+2
  3216   001BCC  CFDE F031          	movff	postinc2,___flsub@a+3
  3217   001BD0  EE20 F004          	lfsr	2,4
  3218   001BD4  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3219   001BD6  26D9               	addwf	fsr2l,f,c
  3220   001BD8  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3221   001BDA  22DA               	addwfc	fsr2h,f,c
  3222   001BDC  CFDE F02A          	movff	postinc2,___flsub@b
  3223   001BE0  CFDE F02B          	movff	postinc2,___flsub@b+1
  3224   001BE4  CFDE F02C          	movff	postinc2,___flsub@b+2
  3225   001BE8  CFDE F02D          	movff	postinc2,___flsub@b+3
  3226   001BEC  ECA1  F024         	call	___flsub	;wreg free
  3227   001BF0  C02A  F032         	movff	?___flsub,___fldiv@b
  3228   001BF4  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3229   001BF8  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3230   001BFC  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3231   001C00  ECD0  F016         	call	___fldiv	;wreg free
  3232   001C04  C032  F04B         	movff	?___fldiv,___flmul@b
  3233   001C08  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3234   001C0C  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3235   001C10  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3236   001C14  0E00               	movlw	0
  3237   001C16  6E4F               	movwf	___flmul@a^0,c
  3238   001C18  0E00               	movlw	0
  3239   001C1A  6E50               	movwf	(___flmul@a+1)^0,c
  3240   001C1C  0E70               	movlw	112
  3241   001C1E  6E51               	movwf	(___flmul@a+2)^0,c
  3242   001C20  0E42               	movlw	66
  3243   001C22  6E52               	movwf	(___flmul@a+3)^0,c
  3244   001C24  ECBA  F014         	call	___flmul	;wreg free
  3245   001C28  0100               	movlb	0	; () banked
  3246   001C2A  EE20 F010          	lfsr	2,16
  3247   001C2E  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3248   001C30  26D9               	addwf	fsr2l,f,c
  3249   001C32  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3250   001C34  22DA               	addwfc	fsr2h,f,c
  3251   001C36  C04B  FFDE         	movff	?___flmul,postinc2
  3252   001C3A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3253   001C3E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3254   001C42  C04E  FFDE         	movff	?___flmul+3,postinc2
  3255                           
  3256                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3257   001C46  EF95  F00F         	goto	l4758
  3258   001C4A                     l4746:
  3259   001C4A  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3260   001C4E  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3261   001C52  CFDE F057          	movff	postinc2,___flge@ff1
  3262   001C56  CFDE F058          	movff	postinc2,___flge@ff1+1
  3263   001C5A  CFDE F059          	movff	postinc2,___flge@ff1+2
  3264   001C5E  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3265   001C62  0100               	movlb	0	; () banked
  3266   001C64  EE20 F004          	lfsr	2,4
  3267   001C68  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3268   001C6A  26D9               	addwf	fsr2l,f,c
  3269   001C6C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3270   001C6E  22DA               	addwfc	fsr2h,f,c
  3271   001C70  CFDE F05B          	movff	postinc2,___flge@ff2
  3272   001C74  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3273   001C78  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3274   001C7C  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3275   001C80  EC0A  F01E         	call	___flge	;wreg free
  3276   001C84  B0D8               	btfsc	status,0,c
  3277   001C86  EF47  F00E         	goto	u4561
  3278   001C8A  EF49  F00E         	goto	u4560
  3279   001C8E                     u4561:
  3280   001C8E  EF03  F00F         	goto	l4754
  3281   001C92                     u4560:
  3282   001C92  0100               	movlb	0	; () banked
  3283   001C94  EE20 F008          	lfsr	2,8
  3284   001C98  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3285   001C9A  26D9               	addwf	fsr2l,f,c
  3286   001C9C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3287   001C9E  22DA               	addwfc	fsr2h,f,c
  3288   001CA0  CFDE F057          	movff	postinc2,___flge@ff1
  3289   001CA4  CFDE F058          	movff	postinc2,___flge@ff1+1
  3290   001CA8  CFDE F059          	movff	postinc2,___flge@ff1+2
  3291   001CAC  CFDE F05A          	movff	postinc2,___flge@ff1+3
  3292   001CB0  EE20 F004          	lfsr	2,4
  3293   001CB4  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3294   001CB6  26D9               	addwf	fsr2l,f,c
  3295   001CB8  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3296   001CBA  22DA               	addwfc	fsr2h,f,c
  3297   001CBC  CFDE F05B          	movff	postinc2,___flge@ff2
  3298   001CC0  CFDE F05C          	movff	postinc2,___flge@ff2+1
  3299   001CC4  CFDE F05D          	movff	postinc2,___flge@ff2+2
  3300   001CC8  CFDE F05E          	movff	postinc2,___flge@ff2+3
  3301   001CCC  EC0A  F01E         	call	___flge	;wreg free
  3302   001CD0  B0D8               	btfsc	status,0,c
  3303   001CD2  EF6D  F00E         	goto	u4571
  3304   001CD6  EF6F  F00E         	goto	u4570
  3305   001CDA                     u4571:
  3306   001CDA  EF03  F00F         	goto	l4754
  3307   001CDE                     u4570:
  3308   001CDE                     
  3309                           ;colorfunctions.c: 44:             max=cf->Gf;
  3310   001CDE  0100               	movlb	0	; () banked
  3311   001CE0  EE20 F004          	lfsr	2,4
  3312   001CE4  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3313   001CE6  26D9               	addwf	fsr2l,f,c
  3314   001CE8  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3315   001CEA  22DA               	addwfc	fsr2h,f,c
  3316   001CEC  CFDE F001          	movff	postinc2,___fltol@f1
  3317   001CF0  CFDE F002          	movff	postinc2,___fltol@f1+1
  3318   001CF4  CFDE F003          	movff	postinc2,___fltol@f1+2
  3319   001CF8  CFDE F004          	movff	postinc2,___fltol@f1+3
  3320   001CFC  EC87  F01D         	call	___fltol	;wreg free
  3321   001D00  C001  F07B         	movff	?___fltol,RGB2Hue@max
  3322   001D04  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  3323                           
  3324                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3325   001D08  0100               	movlb	0	; () banked
  3326   001D0A  517D               	movf	RGB2Hue@min& (0+255),w,b
  3327   001D0C  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  3328   001D0E  6F73               	movwf	??_RGB2Hue& (0+255),b
  3329   001D10  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3330   001D12  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3331   001D14  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  3332   001D16  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3333   001D1A  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3334   001D1E  0E00               	movlw	0
  3335   001D20  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3336   001D22  0EFF               	movlw	-1
  3337   001D24  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3338   001D26  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3339   001D28  0E01               	movlw	1
  3340   001D2A  ECBE  F01A         	call	___xxtofl
  3341   001D2E  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3342   001D32  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3343   001D36  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3344   001D3A  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3345   001D3E  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3346   001D42  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3347   001D46  CFDE F02E          	movff	postinc2,___flsub@a
  3348   001D4A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3349   001D4E  CFDE F030          	movff	postinc2,___flsub@a+2
  3350   001D52  CFDE F031          	movff	postinc2,___flsub@a+3
  3351   001D56  0100               	movlb	0	; () banked
  3352   001D58  EE20 F008          	lfsr	2,8
  3353   001D5C  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3354   001D5E  26D9               	addwf	fsr2l,f,c
  3355   001D60  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3356   001D62  22DA               	addwfc	fsr2h,f,c
  3357   001D64  CFDE F02A          	movff	postinc2,___flsub@b
  3358   001D68  CFDE F02B          	movff	postinc2,___flsub@b+1
  3359   001D6C  CFDE F02C          	movff	postinc2,___flsub@b+2
  3360   001D70  CFDE F02D          	movff	postinc2,___flsub@b+3
  3361   001D74  ECA1  F024         	call	___flsub	;wreg free
  3362   001D78  C02A  F032         	movff	?___flsub,___fldiv@b
  3363   001D7C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3364   001D80  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3365   001D84  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3366   001D88  ECD0  F016         	call	___fldiv	;wreg free
  3367   001D8C  C032  F077         	movff	?___fldiv,_RGB2Hue$2940
  3368   001D90  C033  F078         	movff	?___fldiv+1,_RGB2Hue$2940+1
  3369   001D94  C034  F079         	movff	?___fldiv+2,_RGB2Hue$2940+2
  3370   001D98  C035  F07A         	movff	?___fldiv+3,_RGB2Hue$2940+3
  3371   001D9C                     
  3372                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3373   001D9C  0E00               	movlw	0
  3374   001D9E  6E1E               	movwf	___fladd@a^0,c
  3375   001DA0  0E00               	movlw	0
  3376   001DA2  6E1F               	movwf	(___fladd@a+1)^0,c
  3377   001DA4  0E00               	movlw	0
  3378   001DA6  6E20               	movwf	(___fladd@a+2)^0,c
  3379   001DA8  0E40               	movlw	64
  3380   001DAA  6E21               	movwf	(___fladd@a+3)^0,c
  3381   001DAC  C077  F01A         	movff	_RGB2Hue$2940,___fladd@b
  3382   001DB0  C078  F01B         	movff	_RGB2Hue$2940+1,___fladd@b+1
  3383   001DB4  C079  F01C         	movff	_RGB2Hue$2940+2,___fladd@b+2
  3384   001DB8  C07A  F01D         	movff	_RGB2Hue$2940+3,___fladd@b+3
  3385   001DBC  EC5A  F012         	call	___fladd	;wreg free
  3386   001DC0  C01A  F04B         	movff	?___fladd,___flmul@b
  3387   001DC4  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3388   001DC8  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3389   001DCC  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3390   001DD0  0E00               	movlw	0
  3391   001DD2  6E4F               	movwf	___flmul@a^0,c
  3392   001DD4  0E00               	movlw	0
  3393   001DD6  6E50               	movwf	(___flmul@a+1)^0,c
  3394   001DD8  0E70               	movlw	112
  3395   001DDA  6E51               	movwf	(___flmul@a+2)^0,c
  3396   001DDC  0E42               	movlw	66
  3397   001DDE  6E52               	movwf	(___flmul@a+3)^0,c
  3398   001DE0  ECBA  F014         	call	___flmul	;wreg free
  3399   001DE4  0100               	movlb	0	; () banked
  3400   001DE6  EE20 F010          	lfsr	2,16
  3401   001DEA  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3402   001DEC  26D9               	addwf	fsr2l,f,c
  3403   001DEE  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3404   001DF0  22DA               	addwfc	fsr2h,f,c
  3405   001DF2  C04B  FFDE         	movff	?___flmul,postinc2
  3406   001DF6  C04C  FFDE         	movff	?___flmul+1,postinc2
  3407   001DFA  C04D  FFDE         	movff	?___flmul+2,postinc2
  3408   001DFE  C04E  FFDE         	movff	?___flmul+3,postinc2
  3409                           
  3410                           ;colorfunctions.c: 46:         }else{
  3411   001E02  EF95  F00F         	goto	l4758
  3412   001E06                     l4754:
  3413                           
  3414                           ;colorfunctions.c: 47:             max=cf->Bf;
  3415   001E06  0100               	movlb	0	; () banked
  3416   001E08  EE20 F008          	lfsr	2,8
  3417   001E0C  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3418   001E0E  26D9               	addwf	fsr2l,f,c
  3419   001E10  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3420   001E12  22DA               	addwfc	fsr2h,f,c
  3421   001E14  CFDE F001          	movff	postinc2,___fltol@f1
  3422   001E18  CFDE F002          	movff	postinc2,___fltol@f1+1
  3423   001E1C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3424   001E20  CFDE F004          	movff	postinc2,___fltol@f1+3
  3425   001E24  EC87  F01D         	call	___fltol	;wreg free
  3426   001E28  C001  F07B         	movff	?___fltol,RGB2Hue@max
  3427   001E2C  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  3428                           
  3429                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3430   001E30  0100               	movlb	0	; () banked
  3431   001E32  517D               	movf	RGB2Hue@min& (0+255),w,b
  3432   001E34  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  3433   001E36  6F73               	movwf	??_RGB2Hue& (0+255),b
  3434   001E38  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3435   001E3A  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3436   001E3C  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  3437   001E3E  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3438   001E42  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3439   001E46  0E00               	movlw	0
  3440   001E48  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3441   001E4A  0EFF               	movlw	-1
  3442   001E4C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3443   001E4E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3444   001E50  0E01               	movlw	1
  3445   001E52  ECBE  F01A         	call	___xxtofl
  3446   001E56  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3447   001E5A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3448   001E5E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3449   001E62  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3450   001E66  0100               	movlb	0	; () banked
  3451   001E68  EE20 F004          	lfsr	2,4
  3452   001E6C  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3453   001E6E  26D9               	addwf	fsr2l,f,c
  3454   001E70  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3455   001E72  22DA               	addwfc	fsr2h,f,c
  3456   001E74  CFDE F02E          	movff	postinc2,___flsub@a
  3457   001E78  CFDE F02F          	movff	postinc2,___flsub@a+1
  3458   001E7C  CFDE F030          	movff	postinc2,___flsub@a+2
  3459   001E80  CFDE F031          	movff	postinc2,___flsub@a+3
  3460   001E84  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  3461   001E88  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3462   001E8C  CFDE F02A          	movff	postinc2,___flsub@b
  3463   001E90  CFDE F02B          	movff	postinc2,___flsub@b+1
  3464   001E94  CFDE F02C          	movff	postinc2,___flsub@b+2
  3465   001E98  CFDE F02D          	movff	postinc2,___flsub@b+3
  3466   001E9C  ECA1  F024         	call	___flsub	;wreg free
  3467   001EA0  C02A  F032         	movff	?___flsub,___fldiv@b
  3468   001EA4  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3469   001EA8  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3470   001EAC  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3471   001EB0  ECD0  F016         	call	___fldiv	;wreg free
  3472   001EB4  C032  F077         	movff	?___fldiv,_RGB2Hue$2940
  3473   001EB8  C033  F078         	movff	?___fldiv+1,_RGB2Hue$2940+1
  3474   001EBC  C034  F079         	movff	?___fldiv+2,_RGB2Hue$2940+2
  3475   001EC0  C035  F07A         	movff	?___fldiv+3,_RGB2Hue$2940+3
  3476   001EC4                     
  3477                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3478   001EC4  0E00               	movlw	0
  3479   001EC6  6E1E               	movwf	___fladd@a^0,c
  3480   001EC8  0E00               	movlw	0
  3481   001ECA  6E1F               	movwf	(___fladd@a+1)^0,c
  3482   001ECC  0E80               	movlw	128
  3483   001ECE  6E20               	movwf	(___fladd@a+2)^0,c
  3484   001ED0  0E40               	movlw	64
  3485   001ED2  6E21               	movwf	(___fladd@a+3)^0,c
  3486   001ED4  C077  F01A         	movff	_RGB2Hue$2940,___fladd@b
  3487   001ED8  C078  F01B         	movff	_RGB2Hue$2940+1,___fladd@b+1
  3488   001EDC  C079  F01C         	movff	_RGB2Hue$2940+2,___fladd@b+2
  3489   001EE0  C07A  F01D         	movff	_RGB2Hue$2940+3,___fladd@b+3
  3490   001EE4  EC5A  F012         	call	___fladd	;wreg free
  3491   001EE8  C01A  F04B         	movff	?___fladd,___flmul@b
  3492   001EEC  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3493   001EF0  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3494   001EF4  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3495   001EF8  0E00               	movlw	0
  3496   001EFA  6E4F               	movwf	___flmul@a^0,c
  3497   001EFC  0E00               	movlw	0
  3498   001EFE  6E50               	movwf	(___flmul@a+1)^0,c
  3499   001F00  0E70               	movlw	112
  3500   001F02  6E51               	movwf	(___flmul@a+2)^0,c
  3501   001F04  0E42               	movlw	66
  3502   001F06  6E52               	movwf	(___flmul@a+3)^0,c
  3503   001F08  ECBA  F014         	call	___flmul	;wreg free
  3504   001F0C  0100               	movlb	0	; () banked
  3505   001F0E  EE20 F010          	lfsr	2,16
  3506   001F12  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3507   001F14  26D9               	addwf	fsr2l,f,c
  3508   001F16  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3509   001F18  22DA               	addwfc	fsr2h,f,c
  3510   001F1A  C04B  FFDE         	movff	?___flmul,postinc2
  3511   001F1E  C04C  FFDE         	movff	?___flmul+1,postinc2
  3512   001F22  C04D  FFDE         	movff	?___flmul+2,postinc2
  3513   001F26  C04E  FFDE         	movff	?___flmul+3,postinc2
  3514   001F2A                     l4758:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3518   001F2A  EE20 F010          	lfsr	2,16
  3519   001F2E  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3520   001F30  26D9               	addwf	fsr2l,f,c
  3521   001F32  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3522   001F34  22DA               	addwfc	fsr2h,f,c
  3523   001F36  0E03               	movlw	3
  3524   001F38  BEDB               	btfsc	plusw2,7,c
  3525   001F3A  EFA3  F00F         	goto	u4580
  3526   001F3E  EFA1  F00F         	goto	u4581
  3527   001F42                     u4581:
  3528   001F42  EFCA  F00F         	goto	l507
  3529   001F46                     u4580:
  3530   001F46                     
  3531                           ; BSR set to: 0
  3532                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3533   001F46  EE20 F010          	lfsr	2,16
  3534   001F4A  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3535   001F4C  26D9               	addwf	fsr2l,f,c
  3536   001F4E  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3537   001F50  22DA               	addwfc	fsr2h,f,c
  3538   001F52  CFDE F01A          	movff	postinc2,___fladd@b
  3539   001F56  CFDE F01B          	movff	postinc2,___fladd@b+1
  3540   001F5A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3541   001F5E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3542   001F62  0E00               	movlw	0
  3543   001F64  6E1E               	movwf	___fladd@a^0,c
  3544   001F66  0E00               	movlw	0
  3545   001F68  6E1F               	movwf	(___fladd@a+1)^0,c
  3546   001F6A  0EB4               	movlw	180
  3547   001F6C  6E20               	movwf	(___fladd@a+2)^0,c
  3548   001F6E  0E43               	movlw	67
  3549   001F70  6E21               	movwf	(___fladd@a+3)^0,c
  3550   001F72  EC5A  F012         	call	___fladd	;wreg free
  3551   001F76  0100               	movlb	0	; () banked
  3552   001F78  EE20 F010          	lfsr	2,16
  3553   001F7C  5171               	movf	RGB2Hue@cf& (0+255),w,b
  3554   001F7E  26D9               	addwf	fsr2l,f,c
  3555   001F80  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3556   001F82  22DA               	addwfc	fsr2h,f,c
  3557   001F84  C01A  FFDE         	movff	?___fladd,postinc2
  3558   001F88  C01B  FFDE         	movff	?___fladd+1,postinc2
  3559   001F8C  C01C  FFDE         	movff	?___fladd+2,postinc2
  3560   001F90  C01D  FFDE         	movff	?___fladd+3,postinc2
  3561   001F94                     l507:
  3562                           
  3563                           ; BSR set to: 0
  3564   001F94  0012               	return		;funcret
  3565   001F96                     __end_of_RGB2Hue:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function ___xxtofl *****************
  3569 ;; Defined at:
  3570 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  sign            1    wreg     unsigned char 
  3573 ;;  val             4   11[COMRAM] long 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  sign            1   19[COMRAM] unsigned char 
  3576 ;;  arg             4   21[COMRAM] unsigned long 
  3577 ;;  exp             1   20[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  4   11[COMRAM] unsigned char 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;Total ram usage:       14 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_Left45
  3597 ;;		_Right45
  3598 ;;		_reverseHalfSquare
  3599 ;;		_colour_read_all
  3600 ;;		_RGB2Hue
  3601 ;;		_Yellow_rev1_R90
  3602 ;;		_Pink_rev1_L90
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text18
  3607   00357C                     __ptext18:
  3608                           	callstack 0
  3609   00357C                     ___xxtofl:
  3610                           	callstack 29
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;incstack = 0
  3614                           ;___xxtofl@sign stored from wreg
  3615   00357C  6E14               	movwf	___xxtofl@sign^0,c
  3616   00357E  5014               	movf	___xxtofl@sign^0,w,c
  3617   003580  B4D8               	btfsc	status,2,c
  3618   003582  EFC5  F01A         	goto	u4361
  3619   003586  EFC7  F01A         	goto	u4360
  3620   00358A                     u4361:
  3621   00358A  EFE9  F01A         	goto	l1193
  3622   00358E                     u4360:
  3623   00358E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3624   003590  EFCE  F01A         	goto	u4370
  3625   003594  EFCC  F01A         	goto	u4371
  3626   003598                     u4371:
  3627   003598  EFE9  F01A         	goto	l1193
  3628   00359C                     u4370:
  3629   00359C  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3630   0035A0  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3631   0035A4  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3632   0035A8  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3633   0035AC  1E10               	comf	??___xxtofl^0,f,c
  3634   0035AE  1E11               	comf	(??___xxtofl+1)^0,f,c
  3635   0035B0  1E12               	comf	(??___xxtofl+2)^0,f,c
  3636   0035B2  1E13               	comf	(??___xxtofl+3)^0,f,c
  3637   0035B4  2A10               	incf	??___xxtofl^0,f,c
  3638   0035B6  0E00               	movlw	0
  3639   0035B8  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3640   0035BA  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3641   0035BC  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3642   0035BE  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3643   0035C2  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3644   0035C6  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3645   0035CA  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3646   0035CE  EFF1  F01A         	goto	l4592
  3647   0035D2                     l1193:
  3648   0035D2  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3649   0035D6  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3650   0035DA  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3651   0035DE  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3652   0035E2                     l4592:
  3653   0035E2  500C               	movf	___xxtofl@val^0,w,c
  3654   0035E4  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3655   0035E6  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3656   0035E8  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3657   0035EA  A4D8               	btfss	status,2,c
  3658   0035EC  EFFA  F01A         	goto	u4381
  3659   0035F0  EFFC  F01A         	goto	u4380
  3660   0035F4                     u4381:
  3661   0035F4  EF06  F01B         	goto	l4598
  3662   0035F8                     u4380:
  3663   0035F8  0E00               	movlw	0
  3664   0035FA  6E0C               	movwf	?___xxtofl^0,c
  3665   0035FC  0E00               	movlw	0
  3666   0035FE  6E0D               	movwf	(?___xxtofl+1)^0,c
  3667   003600  0E00               	movlw	0
  3668   003602  6E0E               	movwf	(?___xxtofl+2)^0,c
  3669   003604  0E00               	movlw	0
  3670   003606  6E0F               	movwf	(?___xxtofl+3)^0,c
  3671   003608  EF97  F01B         	goto	l1196
  3672   00360C                     l4598:
  3673   00360C  0E96               	movlw	150
  3674   00360E  6E15               	movwf	___xxtofl@exp^0,c
  3675   003610  EF10  F01B         	goto	l4602
  3676   003614                     l4600:
  3677   003614  2A15               	incf	___xxtofl@exp^0,f,c
  3678   003616  90D8               	bcf	status,0,c
  3679   003618  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3680   00361A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3681   00361C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3682   00361E  3216               	rrcf	___xxtofl@arg^0,f,c
  3683   003620                     l4602:
  3684   003620  0E00               	movlw	0
  3685   003622  1416               	andwf	___xxtofl@arg^0,w,c
  3686   003624  6E10               	movwf	??___xxtofl^0,c
  3687   003626  0E00               	movlw	0
  3688   003628  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3689   00362A  6E11               	movwf	(??___xxtofl+1)^0,c
  3690   00362C  0E00               	movlw	0
  3691   00362E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3692   003630  6E12               	movwf	(??___xxtofl+2)^0,c
  3693   003632  0EFE               	movlw	254
  3694   003634  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3695   003636  6E13               	movwf	(??___xxtofl+3)^0,c
  3696   003638  5010               	movf	??___xxtofl^0,w,c
  3697   00363A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3698   00363C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3699   00363E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3700   003640  A4D8               	btfss	status,2,c
  3701   003642  EF25  F01B         	goto	u4391
  3702   003646  EF27  F01B         	goto	u4390
  3703   00364A                     u4391:
  3704   00364A  EF0A  F01B         	goto	l4600
  3705   00364E                     u4390:
  3706   00364E  EF35  F01B         	goto	l1200
  3707   003652                     l4604:
  3708   003652  2A15               	incf	___xxtofl@exp^0,f,c
  3709   003654  0E01               	movlw	1
  3710   003656  2616               	addwf	___xxtofl@arg^0,f,c
  3711   003658  0E00               	movlw	0
  3712   00365A  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3713   00365C  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3714   00365E  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3715   003660  90D8               	bcf	status,0,c
  3716   003662  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3717   003664  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3718   003666  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3719   003668  3216               	rrcf	___xxtofl@arg^0,f,c
  3720   00366A                     l1200:
  3721   00366A  0E00               	movlw	0
  3722   00366C  1416               	andwf	___xxtofl@arg^0,w,c
  3723   00366E  6E10               	movwf	??___xxtofl^0,c
  3724   003670  0E00               	movlw	0
  3725   003672  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3726   003674  6E11               	movwf	(??___xxtofl+1)^0,c
  3727   003676  0E00               	movlw	0
  3728   003678  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3729   00367A  6E12               	movwf	(??___xxtofl+2)^0,c
  3730   00367C  0EFF               	movlw	255
  3731   00367E  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3732   003680  6E13               	movwf	(??___xxtofl+3)^0,c
  3733   003682  5010               	movf	??___xxtofl^0,w,c
  3734   003684  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3735   003686  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3736   003688  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3737   00368A  A4D8               	btfss	status,2,c
  3738   00368C  EF4A  F01B         	goto	u4401
  3739   003690  EF4C  F01B         	goto	u4400
  3740   003694                     u4401:
  3741   003694  EF29  F01B         	goto	l4604
  3742   003698                     u4400:
  3743   003698  EF54  F01B         	goto	l4612
  3744   00369C                     l4610:
  3745   00369C  0615               	decf	___xxtofl@exp^0,f,c
  3746   00369E  90D8               	bcf	status,0,c
  3747   0036A0  3616               	rlcf	___xxtofl@arg^0,f,c
  3748   0036A2  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3749   0036A4  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3750   0036A6  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3751   0036A8                     l4612:
  3752   0036A8  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3753   0036AA  EF59  F01B         	goto	u4411
  3754   0036AE  EF5B  F01B         	goto	u4410
  3755   0036B2                     u4411:
  3756   0036B2  EF63  F01B         	goto	l1207
  3757   0036B6                     u4410:
  3758   0036B6  0E02               	movlw	2
  3759   0036B8  6015               	cpfslt	___xxtofl@exp^0,c
  3760   0036BA  EF61  F01B         	goto	u4421
  3761   0036BE  EF63  F01B         	goto	u4420
  3762   0036C2                     u4421:
  3763   0036C2  EF4E  F01B         	goto	l4610
  3764   0036C6                     u4420:
  3765   0036C6                     l1207:
  3766   0036C6  B015               	btfsc	___xxtofl@exp^0,0,c
  3767   0036C8  EF68  F01B         	goto	u4431
  3768   0036CC  EF6A  F01B         	goto	u4430
  3769   0036D0                     u4431:
  3770   0036D0  EF6B  F01B         	goto	l4618
  3771   0036D4                     u4430:
  3772   0036D4  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3773   0036D6                     l4618:
  3774   0036D6  90D8               	bcf	status,0,c
  3775   0036D8  3215               	rrcf	___xxtofl@exp^0,f,c
  3776   0036DA  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3777   0036DE  6A11               	clrf	(??___xxtofl+1)^0,c
  3778   0036E0  6A12               	clrf	(??___xxtofl+2)^0,c
  3779   0036E2  6A13               	clrf	(??___xxtofl+3)^0,c
  3780   0036E4  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3781   0036E8  6A12               	clrf	(??___xxtofl+2)^0,c
  3782   0036EA  6A11               	clrf	(??___xxtofl+1)^0,c
  3783   0036EC  6A10               	clrf	??___xxtofl^0,c
  3784   0036EE  5010               	movf	??___xxtofl^0,w,c
  3785   0036F0  1216               	iorwf	___xxtofl@arg^0,f,c
  3786   0036F2  5011               	movf	(??___xxtofl+1)^0,w,c
  3787   0036F4  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3788   0036F6  5012               	movf	(??___xxtofl+2)^0,w,c
  3789   0036F8  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3790   0036FA  5013               	movf	(??___xxtofl+3)^0,w,c
  3791   0036FC  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3792   0036FE  5014               	movf	___xxtofl@sign^0,w,c
  3793   003700  B4D8               	btfsc	status,2,c
  3794   003702  EF85  F01B         	goto	u4441
  3795   003706  EF87  F01B         	goto	u4440
  3796   00370A                     u4441:
  3797   00370A  EF8F  F01B         	goto	l4628
  3798   00370E                     u4440:
  3799   00370E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3800   003710  EF8E  F01B         	goto	u4450
  3801   003714  EF8C  F01B         	goto	u4451
  3802   003718                     u4451:
  3803   003718  EF8F  F01B         	goto	l4628
  3804   00371C                     u4450:
  3805   00371C  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3806   00371E                     l4628:
  3807   00371E  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3808   003722  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3809   003726  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3810   00372A  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3811   00372E                     l1196:
  3812   00372E  0012               	return		;funcret
  3813   003730                     __end_of___xxtofl:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function _Orange_R135 *****************
  3817 ;; Defined at:
  3818 ;;		line 310 in file "dc_motor.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  3821 ;;		 -> motorL(9), 
  3822 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  3823 ;;		 -> motorR(9), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;Total ram usage:        4 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 4
  3842 ;; This function calls:
  3843 ;;		_Left45
  3844 ;;		_Right45
  3845 ;;		_TimerReset
  3846 ;;		_reverseHalfSquare
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;;		_White
  3850 ;;		_Colour2Action
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text19
  3855   004044                     __ptext19:
  3856                           	callstack 0
  3857   004044                     _Orange_R135:
  3858                           	callstack 26
  3859   004044                     
  3860                           ;dc_motor.c: 310: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           311: {;dc_motor.c: 312:     if (ForwardFlag){
  3861   004044  505F               	movf	_ForwardFlag^0,w,c	;volatile
  3862   004046  B4D8               	btfsc	status,2,c
  3863   004048  EF28  F020         	goto	u4591
  3864   00404C  EF2A  F020         	goto	u4590
  3865   004050                     u4591:
  3866   004050  EF56  F020         	goto	l4768
  3867   004054                     u4590:
  3868   004054                     
  3869                           ;dc_motor.c: 313:         reverseHalfSquare(mL,mR);
  3870   004054  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  3871   004058  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  3872   00405C  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  3873   004060  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  3874   004064  EC2A  F022         	call	_reverseHalfSquare	;wreg free
  3875                           
  3876                           ;dc_motor.c: 315:         Right45(mL,mR);
  3877   004068  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  3878   00406C  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  3879   004070  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  3880   004074  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  3881   004078  ECA2  F021         	call	_Right45	;wreg free
  3882                           
  3883                           ;dc_motor.c: 316:         Right45(mL,mR);
  3884   00407C  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  3885   004080  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  3886   004084  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  3887   004088  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  3888   00408C  ECA2  F021         	call	_Right45	;wreg free
  3889                           
  3890                           ;dc_motor.c: 317:         Right45(mL,mR);
  3891   004090  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  3892   004094  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  3893   004098  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  3894   00409C  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  3895   0040A0  ECA2  F021         	call	_Right45	;wreg free
  3896   0040A4                     
  3897                           ;dc_motor.c: 318:         TimerReset();
  3898   0040A4  EC20  F026         	call	_TimerReset	;wreg free
  3899                           
  3900                           ;dc_motor.c: 319:     }
  3901   0040A8  EF74  F020         	goto	l271
  3902   0040AC                     l4768:
  3903                           
  3904                           ;dc_motor.c: 322:         Left45(mL,mR);
  3905   0040AC  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  3906   0040B0  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  3907   0040B4  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  3908   0040B8  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  3909   0040BC  ECE6  F021         	call	_Left45	;wreg free
  3910                           
  3911                           ;dc_motor.c: 323:         Left45(mL,mR);
  3912   0040C0  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  3913   0040C4  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  3914   0040C8  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  3915   0040CC  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  3916   0040D0  ECE6  F021         	call	_Left45	;wreg free
  3917                           
  3918                           ;dc_motor.c: 324:         Left45(mL,mR);
  3919   0040D4  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  3920   0040D8  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  3921   0040DC  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  3922   0040E0  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  3923   0040E4  ECE6  F021         	call	_Left45	;wreg free
  3924   0040E8                     l271:
  3925   0040E8  0012               	return		;funcret
  3926   0040EA                     __end_of_Orange_R135:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _reverseHalfSquare *****************
  3930 ;; Defined at:
  3931 ;;		line 216 in file "dc_motor.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  3934 ;;		 -> motorL(9), 
  3935 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  3936 ;;		 -> motorR(9), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:        6 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 3
  3955 ;; This function calls:
  3956 ;;		_fullSpeedReverse
  3957 ;;		_stop
  3958 ;; This function is called by:
  3959 ;;		_Orange_R135
  3960 ;;		_Red_R90
  3961 ;;		_Green_L90
  3962 ;;		_Blue_T180
  3963 ;;		_Yellow_rev1_R90
  3964 ;;		_Pink_rev1_L90
  3965 ;;		_LightBlue_L135
  3966 ;;		_White
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text20
  3971   004454                     __ptext20:
  3972                           	callstack 0
  3973   004454                     _reverseHalfSquare:
  3974                           	callstack 26
  3975   004454                     
  3976                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  3977   004454  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  3978   004458  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  3979   00445C  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  3980   004460  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  3981   004464  EC75  F020         	call	_stop	;wreg free
  3982   004468                     
  3983                           ;dc_motor.c: 219:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3984   004468  0E05               	movlw	5
  3985   00446A  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  3986   00446C  0E0F               	movlw	15
  3987   00446E  6E1F               	movwf	??_reverseHalfSquare^0,c
  3988   004470  0EF1               	movlw	241
  3989   004472                     u4857:
  3990   004472  2EE8               	decfsz	wreg,f,c
  3991   004474  D7FE               	bra	u4857
  3992   004476  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  3993   004478  D7FC               	bra	u4857
  3994   00447A  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  3995   00447C  D7FA               	bra	u4857
  3996   00447E  F000               	nop	
  3997   004480                     
  3998                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  3999   004480  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  4000   004484  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  4001   004488  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  4002   00448C  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  4003   004490  EC6D  F022         	call	_fullSpeedReverse	;wreg free
  4004                           
  4005                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  4006   004494  0E52               	movlw	82
  4007   004496  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  4008   004498  0E2B               	movlw	43
  4009   00449A  6E1F               	movwf	??_reverseHalfSquare^0,c
  4010   00449C  0E00               	movlw	0
  4011   00449E                     u4867:
  4012   00449E  2EE8               	decfsz	wreg,f,c
  4013   0044A0  D7FE               	bra	u4867
  4014   0044A2  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  4015   0044A4  D7FC               	bra	u4867
  4016   0044A6  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  4017   0044A8  D7FA               	bra	u4867
  4018   0044AA  D000               	nop2	
  4019   0044AC                     
  4020                           ;dc_motor.c: 222:     stop(mL,mR);
  4021   0044AC  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  4022   0044B0  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  4023   0044B4  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  4024   0044B8  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  4025   0044BC  EC75  F020         	call	_stop	;wreg free
  4026   0044C0                     
  4027                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4028   0044C0  0E05               	movlw	5
  4029   0044C2  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  4030   0044C4  0E0F               	movlw	15
  4031   0044C6  6E1F               	movwf	??_reverseHalfSquare^0,c
  4032   0044C8  0EF1               	movlw	241
  4033   0044CA                     u4877:
  4034   0044CA  2EE8               	decfsz	wreg,f,c
  4035   0044CC  D7FE               	bra	u4877
  4036   0044CE  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  4037   0044D0  D7FC               	bra	u4877
  4038   0044D2  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  4039   0044D4  D7FA               	bra	u4877
  4040   0044D6  F000               	nop	
  4041   0044D8  0012               	return		;funcret
  4042   0044DA                     __end_of_reverseHalfSquare:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _fullSpeedReverse *****************
  4046 ;; Defined at:
  4047 ;;		line 163 in file "dc_motor.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4050 ;;		 -> motorL(9), 
  4051 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4052 ;;		 -> motorR(9), 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  i               2   24[COMRAM] unsigned int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;Total ram usage:        7 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 2
  4071 ;; This function calls:
  4072 ;;		_setMotorPWM
  4073 ;; This function is called by:
  4074 ;;		_reverseHalfSquare
  4075 ;;		_Yellow_rev1_R90
  4076 ;;		_Pink_rev1_L90
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text21
  4081   0044DA                     __ptext21:
  4082                           	callstack 0
  4083   0044DA                     _fullSpeedReverse:
  4084                           	callstack 26
  4085   0044DA                     
  4086                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 1;
  4087   0044DA  EE20 F001          	lfsr	2,1
  4088   0044DE  5014               	movf	fullSpeedReverse@mL^0,w,c
  4089   0044E0  26D9               	addwf	fsr2l,f,c
  4090   0044E2  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  4091   0044E4  22DA               	addwfc	fsr2h,f,c
  4092   0044E6  0E01               	movlw	1
  4093   0044E8  6EDF               	movwf	indf2,c
  4094                           
  4095                           ;dc_motor.c: 166:  (mR->direction) = 1;
  4096   0044EA  EE20 F001          	lfsr	2,1
  4097   0044EE  5016               	movf	fullSpeedReverse@mR^0,w,c
  4098   0044F0  26D9               	addwf	fsr2l,f,c
  4099   0044F2  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  4100   0044F4  22DA               	addwfc	fsr2h,f,c
  4101   0044F6  0E01               	movlw	1
  4102   0044F8  6EDF               	movwf	indf2,c
  4103   0044FA                     
  4104                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  4105   0044FA  0E00               	movlw	0
  4106   0044FC  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  4107   0044FE  0E00               	movlw	0
  4108   004500  6E19               	movwf	fullSpeedReverse@i^0,c
  4109   004502                     l4368:
  4110                           
  4111                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  4112   004502  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  4113   004506  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  4114   00450A  2ADF               	incf	indf2,f,c
  4115                           
  4116                           ;dc_motor.c: 171:         (mR->power)++;
  4117   00450C  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  4118   004510  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  4119   004514  2ADF               	incf	indf2,f,c
  4120   004516                     
  4121                           ;dc_motor.c: 172:         setMotorPWM(mL);
  4122   004516  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  4123   00451A  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  4124   00451E  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4125   004522                     
  4126                           ;dc_motor.c: 173:         setMotorPWM(mR);
  4127   004522  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  4128   004526  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  4129   00452A  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4130   00452E                     
  4131                           ;dc_motor.c: 174:         _delay((unsigned long)((1000)*(64000000/4000000.0)));
  4132   00452E  0E15               	movlw	21
  4133   004530  6E18               	movwf	??_fullSpeedReverse^0,c
  4134   004532  0EC6               	movlw	198
  4135   004534                     u4887:
  4136   004534  2EE8               	decfsz	wreg,f,c
  4137   004536  D7FE               	bra	u4887
  4138   004538  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  4139   00453A  D7FC               	bra	u4887
  4140   00453C  D000               	nop2	
  4141   00453E                     
  4142                           ;dc_motor.c: 175:     }
  4143   00453E  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  4144   004540  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  4145   004542  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  4146   004544  E109               	bnz	u4150
  4147   004546  0E32               	movlw	50
  4148   004548  5C19               	subwf	fullSpeedReverse@i^0,w,c
  4149   00454A  A0D8               	btfss	status,0,c
  4150   00454C  EFAA  F022         	goto	u4151
  4151   004550  EFAC  F022         	goto	u4150
  4152   004554                     u4151:
  4153   004554  EF81  F022         	goto	l4368
  4154   004558                     u4150:
  4155   004558  0012               	return		;funcret
  4156   00455A                     __end_of_fullSpeedReverse:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _TimerReset *****************
  4160 ;; Defined at:
  4161 ;;		line 19 in file "timer.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_Orange_R135
  4185 ;;		_Red_R90
  4186 ;;		_Green_L90
  4187 ;;		_Blue_T180
  4188 ;;		_Yellow_rev1_R90
  4189 ;;		_Pink_rev1_L90
  4190 ;;		_LightBlue_L135
  4191 ;;		_White
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text22
  4196   004C40                     __ptext22:
  4197                           	callstack 0
  4198   004C40                     _TimerReset:
  4199                           	callstack 29
  4200   004C40                     
  4201                           ;timer.c: 21:     TMR0L = 0;
  4202   004C40  0E00               	movlw	0
  4203   004C42  6ED3               	movwf	211,c	;volatile
  4204                           
  4205                           ;timer.c: 22:     TMR0H = 0;
  4206   004C44  0E00               	movlw	0
  4207   004C46  6ED4               	movwf	212,c	;volatile
  4208   004C48  0012               	return		;funcret
  4209   004C4A                     __end_of_TimerReset:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _Right45 *****************
  4213 ;; Defined at:
  4214 ;;		line 193 in file "dc_motor.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4217 ;;		 -> motorL(9), 
  4218 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4219 ;;		 -> motorR(9), 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:        6 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 3
  4238 ;; This function calls:
  4239 ;;		_stop
  4240 ;;		_turnRight
  4241 ;; This function is called by:
  4242 ;;		_Orange_R135
  4243 ;;		_Red_R90
  4244 ;;		_Green_L90
  4245 ;;		_Yellow_rev1_R90
  4246 ;;		_Pink_rev1_L90
  4247 ;;		_LightBlue_L135
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text23
  4252   004344                     __ptext23:
  4253                           	callstack 0
  4254   004344                     _Right45:
  4255                           	callstack 26
  4256   004344                     
  4257                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  4258   004344  8080               	bsf	128,0,c	;volatile
  4259   004346                     
  4260                           ;dc_motor.c: 197:     stop(mL,mR);
  4261   004346  C01A  F014         	movff	Right45@mL,stop@mL
  4262   00434A  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  4263   00434E  C01C  F016         	movff	Right45@mR,stop@mR
  4264   004352  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  4265   004356  EC75  F020         	call	_stop	;wreg free
  4266   00435A                     
  4267                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4268   00435A  0E05               	movlw	5
  4269   00435C  6E1F               	movwf	(??_Right45+1)^0,c
  4270   00435E  0E0F               	movlw	15
  4271   004360  6E1E               	movwf	??_Right45^0,c
  4272   004362  0EF1               	movlw	241
  4273   004364                     u4897:
  4274   004364  2EE8               	decfsz	wreg,f,c
  4275   004366  D7FE               	bra	u4897
  4276   004368  2E1E               	decfsz	??_Right45^0,f,c
  4277   00436A  D7FC               	bra	u4897
  4278   00436C  2E1F               	decfsz	(??_Right45+1)^0,f,c
  4279   00436E  D7FA               	bra	u4897
  4280   004370  F000               	nop	
  4281   004372                     
  4282                           ;dc_motor.c: 199:     turnRight(mL,mR);
  4283   004372  C01A  F014         	movff	Right45@mL,turnRight@mL
  4284   004376  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  4285   00437A  C01C  F016         	movff	Right45@mR,turnRight@mR
  4286   00437E  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  4287   004382  ECC4  F020         	call	_turnRight	;wreg free
  4288                           
  4289                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  4290   004386  0E19               	movlw	25
  4291   004388  6E1F               	movwf	(??_Right45+1)^0,c
  4292   00438A  0E5A               	movlw	90
  4293   00438C  6E1E               	movwf	??_Right45^0,c
  4294   00438E  0EB2               	movlw	178
  4295   004390                     u4907:
  4296   004390  2EE8               	decfsz	wreg,f,c
  4297   004392  D7FE               	bra	u4907
  4298   004394  2E1E               	decfsz	??_Right45^0,f,c
  4299   004396  D7FC               	bra	u4907
  4300   004398  2E1F               	decfsz	(??_Right45+1)^0,f,c
  4301   00439A  D7FA               	bra	u4907
  4302   00439C                     
  4303                           ;dc_motor.c: 201:     stop(mL,mR);
  4304   00439C  C01A  F014         	movff	Right45@mL,stop@mL
  4305   0043A0  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  4306   0043A4  C01C  F016         	movff	Right45@mR,stop@mR
  4307   0043A8  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  4308   0043AC  EC75  F020         	call	_stop	;wreg free
  4309   0043B0                     
  4310                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4311   0043B0  0E05               	movlw	5
  4312   0043B2  6E1F               	movwf	(??_Right45+1)^0,c
  4313   0043B4  0E0F               	movlw	15
  4314   0043B6  6E1E               	movwf	??_Right45^0,c
  4315   0043B8  0EF1               	movlw	241
  4316   0043BA                     u4917:
  4317   0043BA  2EE8               	decfsz	wreg,f,c
  4318   0043BC  D7FE               	bra	u4917
  4319   0043BE  2E1E               	decfsz	??_Right45^0,f,c
  4320   0043C0  D7FC               	bra	u4917
  4321   0043C2  2E1F               	decfsz	(??_Right45+1)^0,f,c
  4322   0043C4  D7FA               	bra	u4917
  4323   0043C6  F000               	nop	
  4324   0043C8                     
  4325                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  4326   0043C8  9080               	bcf	128,0,c	;volatile
  4327   0043CA  0012               	return		;funcret
  4328   0043CC                     __end_of_Right45:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _turnRight *****************
  4332 ;; Defined at:
  4333 ;;		line 132 in file "dc_motor.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4336 ;;		 -> motorL(9), 
  4337 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4338 ;;		 -> motorR(9), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  i               2   23[COMRAM] unsigned int 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;Total ram usage:        6 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 2
  4357 ;; This function calls:
  4358 ;;		_setMotorPWM
  4359 ;; This function is called by:
  4360 ;;		_Right45
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text24
  4365   004188                     __ptext24:
  4366                           	callstack 0
  4367   004188                     _turnRight:
  4368                           	callstack 26
  4369   004188                     
  4370                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 0;
  4371   004188  EE20 F001          	lfsr	2,1
  4372   00418C  5014               	movf	turnRight@mL^0,w,c
  4373   00418E  26D9               	addwf	fsr2l,f,c
  4374   004190  5015               	movf	(turnRight@mL+1)^0,w,c
  4375   004192  22DA               	addwfc	fsr2h,f,c
  4376   004194  0E00               	movlw	0
  4377   004196  6EDF               	movwf	indf2,c
  4378                           
  4379                           ;dc_motor.c: 135:     (mR->direction) = 1;
  4380   004198  EE20 F001          	lfsr	2,1
  4381   00419C  5016               	movf	turnRight@mR^0,w,c
  4382   00419E  26D9               	addwf	fsr2l,f,c
  4383   0041A0  5017               	movf	(turnRight@mR+1)^0,w,c
  4384   0041A2  22DA               	addwfc	fsr2h,f,c
  4385   0041A4  0E01               	movlw	1
  4386   0041A6  6EDF               	movwf	indf2,c
  4387   0041A8                     
  4388                           ;dc_motor.c: 136:     setMotorPWM(mL);
  4389   0041A8  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  4390   0041AC  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  4391   0041B0  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4392   0041B4                     
  4393                           ;dc_motor.c: 137:     setMotorPWM(mR);
  4394   0041B4  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  4395   0041B8  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  4396   0041BC  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4397   0041C0                     
  4398                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  4399   0041C0  0E00               	movlw	0
  4400   0041C2  6E19               	movwf	(turnRight@i+1)^0,c
  4401   0041C4  0E00               	movlw	0
  4402   0041C6  6E18               	movwf	turnRight@i^0,c
  4403   0041C8                     l4348:
  4404                           
  4405                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  4406   0041C8  C014  FFD9         	movff	turnRight@mL,fsr2l
  4407   0041CC  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  4408   0041D0  2ADF               	incf	indf2,f,c
  4409                           
  4410                           ;dc_motor.c: 141:         mR->power++;
  4411   0041D2  C016  FFD9         	movff	turnRight@mR,fsr2l
  4412   0041D6  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  4413   0041DA  2ADF               	incf	indf2,f,c
  4414   0041DC                     
  4415                           ;dc_motor.c: 142:         setMotorPWM(mL);
  4416   0041DC  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  4417   0041E0  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  4418   0041E4  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4419   0041E8                     
  4420                           ;dc_motor.c: 143:         setMotorPWM(mR);
  4421   0041E8  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  4422   0041EC  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  4423   0041F0  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4424   0041F4                     
  4425                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  4426   0041F4  0EE4               	movlw	228
  4427   0041F6                     u4927:
  4428   0041F6  D000               	nop2	
  4429   0041F8  D000               	nop2	
  4430   0041FA  2EE8               	decfsz	wreg,f,c
  4431   0041FC  D7FC               	bra	u4927
  4432   0041FE  D000               	nop2	
  4433   004200  D000               	nop2	
  4434   004202                     
  4435                           ;dc_motor.c: 145:     }
  4436   004202  4A18               	infsnz	turnRight@i^0,f,c
  4437   004204  2A19               	incf	(turnRight@i+1)^0,f,c
  4438   004206  5019               	movf	(turnRight@i+1)^0,w,c
  4439   004208  E109               	bnz	u4140
  4440   00420A  0E32               	movlw	50
  4441   00420C  5C18               	subwf	turnRight@i^0,w,c
  4442   00420E  A0D8               	btfss	status,0,c
  4443   004210  EF0C  F021         	goto	u4141
  4444   004214  EF0E  F021         	goto	u4140
  4445   004218                     u4141:
  4446   004218  EFE4  F020         	goto	l4348
  4447   00421C                     u4140:
  4448   00421C  0012               	return		;funcret
  4449   00421E                     __end_of_turnRight:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _Left45 *****************
  4453 ;; Defined at:
  4454 ;;		line 179 in file "dc_motor.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  4457 ;;		 -> motorL(9), 
  4458 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  4459 ;;		 -> motorR(9), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;Total ram usage:        6 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 3
  4478 ;; This function calls:
  4479 ;;		_stop
  4480 ;;		_turnLeft
  4481 ;; This function is called by:
  4482 ;;		_Orange_R135
  4483 ;;		_rotate180left
  4484 ;;		_Red_R90
  4485 ;;		_Green_L90
  4486 ;;		_Yellow_rev1_R90
  4487 ;;		_Pink_rev1_L90
  4488 ;;		_LightBlue_L135
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text25
  4493   0043CC                     __ptext25:
  4494                           	callstack 0
  4495   0043CC                     _Left45:
  4496                           	callstack 26
  4497   0043CC                     
  4498                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  4499   0043CC  807E               	bsf	126,0,c	;volatile
  4500   0043CE                     
  4501                           ;dc_motor.c: 183:     stop(mL,mR);
  4502   0043CE  C01A  F014         	movff	Left45@mL,stop@mL
  4503   0043D2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  4504   0043D6  C01C  F016         	movff	Left45@mR,stop@mR
  4505   0043DA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  4506   0043DE  EC75  F020         	call	_stop	;wreg free
  4507   0043E2                     
  4508                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4509   0043E2  0E05               	movlw	5
  4510   0043E4  6E1F               	movwf	(??_Left45+1)^0,c
  4511   0043E6  0E0F               	movlw	15
  4512   0043E8  6E1E               	movwf	??_Left45^0,c
  4513   0043EA  0EF1               	movlw	241
  4514   0043EC                     u4937:
  4515   0043EC  2EE8               	decfsz	wreg,f,c
  4516   0043EE  D7FE               	bra	u4937
  4517   0043F0  2E1E               	decfsz	??_Left45^0,f,c
  4518   0043F2  D7FC               	bra	u4937
  4519   0043F4  2E1F               	decfsz	(??_Left45+1)^0,f,c
  4520   0043F6  D7FA               	bra	u4937
  4521   0043F8  F000               	nop	
  4522   0043FA                     
  4523                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  4524   0043FA  C01A  F014         	movff	Left45@mL,turnLeft@mL
  4525   0043FE  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  4526   004402  C01C  F016         	movff	Left45@mR,turnLeft@mR
  4527   004406  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  4528   00440A  EC0F  F021         	call	_turnLeft	;wreg free
  4529                           
  4530                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  4531   00440E  0E19               	movlw	25
  4532   004410  6E1F               	movwf	(??_Left45+1)^0,c
  4533   004412  0E5A               	movlw	90
  4534   004414  6E1E               	movwf	??_Left45^0,c
  4535   004416  0EB2               	movlw	178
  4536   004418                     u4947:
  4537   004418  2EE8               	decfsz	wreg,f,c
  4538   00441A  D7FE               	bra	u4947
  4539   00441C  2E1E               	decfsz	??_Left45^0,f,c
  4540   00441E  D7FC               	bra	u4947
  4541   004420  2E1F               	decfsz	(??_Left45+1)^0,f,c
  4542   004422  D7FA               	bra	u4947
  4543   004424                     
  4544                           ;dc_motor.c: 187:     stop(mL,mR);
  4545   004424  C01A  F014         	movff	Left45@mL,stop@mL
  4546   004428  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  4547   00442C  C01C  F016         	movff	Left45@mR,stop@mR
  4548   004430  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  4549   004434  EC75  F020         	call	_stop	;wreg free
  4550   004438                     
  4551                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4552   004438  0E05               	movlw	5
  4553   00443A  6E1F               	movwf	(??_Left45+1)^0,c
  4554   00443C  0E0F               	movlw	15
  4555   00443E  6E1E               	movwf	??_Left45^0,c
  4556   004440  0EF1               	movlw	241
  4557   004442                     u4957:
  4558   004442  2EE8               	decfsz	wreg,f,c
  4559   004444  D7FE               	bra	u4957
  4560   004446  2E1E               	decfsz	??_Left45^0,f,c
  4561   004448  D7FC               	bra	u4957
  4562   00444A  2E1F               	decfsz	(??_Left45+1)^0,f,c
  4563   00444C  D7FA               	bra	u4957
  4564   00444E  F000               	nop	
  4565   004450                     
  4566                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  4567   004450  907E               	bcf	126,0,c	;volatile
  4568   004452  0012               	return		;funcret
  4569   004454                     __end_of_Left45:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _turnLeft *****************
  4573 ;; Defined at:
  4574 ;;		line 113 in file "dc_motor.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4577 ;;		 -> motorL(9), 
  4578 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4579 ;;		 -> motorR(9), 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  i               2   23[COMRAM] unsigned int 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;Total ram usage:        6 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 2
  4598 ;; This function calls:
  4599 ;;		_setMotorPWM
  4600 ;; This function is called by:
  4601 ;;		_Left45
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text26
  4606   00421E                     __ptext26:
  4607                           	callstack 0
  4608   00421E                     _turnLeft:
  4609                           	callstack 26
  4610   00421E                     
  4611                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 1;
  4612   00421E  EE20 F001          	lfsr	2,1
  4613   004222  5014               	movf	turnLeft@mL^0,w,c
  4614   004224  26D9               	addwf	fsr2l,f,c
  4615   004226  5015               	movf	(turnLeft@mL+1)^0,w,c
  4616   004228  22DA               	addwfc	fsr2h,f,c
  4617   00422A  0E01               	movlw	1
  4618   00422C  6EDF               	movwf	indf2,c
  4619                           
  4620                           ;dc_motor.c: 117:     (mR->direction) = 0;
  4621   00422E  EE20 F001          	lfsr	2,1
  4622   004232  5016               	movf	turnLeft@mR^0,w,c
  4623   004234  26D9               	addwf	fsr2l,f,c
  4624   004236  5017               	movf	(turnLeft@mR+1)^0,w,c
  4625   004238  22DA               	addwfc	fsr2h,f,c
  4626   00423A  0E00               	movlw	0
  4627   00423C  6EDF               	movwf	indf2,c
  4628   00423E                     
  4629                           ;dc_motor.c: 118:     setMotorPWM(mL);
  4630   00423E  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  4631   004242  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4632   004246  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4633   00424A                     
  4634                           ;dc_motor.c: 119:     setMotorPWM(mR);
  4635   00424A  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  4636   00424E  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4637   004252  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4638   004256                     
  4639                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  4640   004256  0E00               	movlw	0
  4641   004258  6E19               	movwf	(turnLeft@i+1)^0,c
  4642   00425A  0E00               	movlw	0
  4643   00425C  6E18               	movwf	turnLeft@i^0,c
  4644   00425E                     l4324:
  4645                           
  4646                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  4647   00425E  C014  FFD9         	movff	turnLeft@mL,fsr2l
  4648   004262  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  4649   004266  2ADF               	incf	indf2,f,c
  4650                           
  4651                           ;dc_motor.c: 123:         mR->power++;
  4652   004268  C016  FFD9         	movff	turnLeft@mR,fsr2l
  4653   00426C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  4654   004270  2ADF               	incf	indf2,f,c
  4655   004272                     
  4656                           ;dc_motor.c: 124:         setMotorPWM(mL);
  4657   004272  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  4658   004276  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4659   00427A  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4660   00427E                     
  4661                           ;dc_motor.c: 125:         setMotorPWM(mR);
  4662   00427E  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  4663   004282  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4664   004286  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4665   00428A                     
  4666                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  4667   00428A  0EE4               	movlw	228
  4668   00428C                     u4967:
  4669   00428C  D000               	nop2	
  4670   00428E  D000               	nop2	
  4671   004290  2EE8               	decfsz	wreg,f,c
  4672   004292  D7FC               	bra	u4967
  4673   004294  D000               	nop2	
  4674   004296  D000               	nop2	
  4675   004298                     
  4676                           ;dc_motor.c: 127:     }
  4677   004298  4A18               	infsnz	turnLeft@i^0,f,c
  4678   00429A  2A19               	incf	(turnLeft@i+1)^0,f,c
  4679   00429C  5019               	movf	(turnLeft@i+1)^0,w,c
  4680   00429E  E109               	bnz	u4130
  4681   0042A0  0E32               	movlw	50
  4682   0042A2  5C18               	subwf	turnLeft@i^0,w,c
  4683   0042A4  A0D8               	btfss	status,0,c
  4684   0042A6  EF57  F021         	goto	u4131
  4685   0042AA  EF59  F021         	goto	u4130
  4686   0042AE                     u4131:
  4687   0042AE  EF2F  F021         	goto	l4324
  4688   0042B2                     u4130:
  4689   0042B2  0012               	return		;funcret
  4690   0042B4                     __end_of_turnLeft:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _stop *****************
  4694 ;; Defined at:
  4695 ;;		line 93 in file "dc_motor.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  4698 ;;		 -> motorL(9), 
  4699 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  4700 ;;		 -> motorR(9), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;Total ram usage:        4 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; Hardware stack levels required when called: 2
  4719 ;; This function calls:
  4720 ;;		_setMotorPWM
  4721 ;; This function is called by:
  4722 ;;		_Left45
  4723 ;;		_Right45
  4724 ;;		_reverseHalfSquare
  4725 ;;		_Yellow_rev1_R90
  4726 ;;		_Pink_rev1_L90
  4727 ;;		_White
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text27
  4732   0040EA                     __ptext27:
  4733                           	callstack 0
  4734   0040EA                     _stop:
  4735                           	callstack 26
  4736   0040EA                     
  4737                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  4738   0040EA  887C               	bsf	124,4,c	;volatile
  4739                           
  4740                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  4741   0040EC  EFAA  F020         	goto	l4308
  4742   0040F0                     l4294:
  4743                           
  4744                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  4745   0040F0  C014  FFD9         	movff	stop@mL,fsr2l
  4746   0040F4  C015  FFDA         	movff	stop@mL+1,fsr2h
  4747   0040F8  50DF               	movf	indf2,w,c
  4748   0040FA  B4D8               	btfsc	status,2,c
  4749   0040FC  EF82  F020         	goto	u4091
  4750   004100  EF84  F020         	goto	u4090
  4751   004104                     u4091:
  4752   004104  EF89  F020         	goto	l4298
  4753   004108                     u4090:
  4754   004108                     
  4755                           ;dc_motor.c: 100:             mL->power--;
  4756   004108  C014  FFD9         	movff	stop@mL,fsr2l
  4757   00410C  C015  FFDA         	movff	stop@mL+1,fsr2h
  4758   004110  06DF               	decf	indf2,f,c
  4759   004112                     l4298:
  4760                           
  4761                           ;dc_motor.c: 102:         if ((mR->power)>0){
  4762   004112  C016  FFD9         	movff	stop@mR,fsr2l
  4763   004116  C017  FFDA         	movff	stop@mR+1,fsr2h
  4764   00411A  50DF               	movf	indf2,w,c
  4765   00411C  B4D8               	btfsc	status,2,c
  4766   00411E  EF93  F020         	goto	u4101
  4767   004122  EF95  F020         	goto	u4100
  4768   004126                     u4101:
  4769   004126  EF9A  F020         	goto	l4302
  4770   00412A                     u4100:
  4771   00412A                     
  4772                           ;dc_motor.c: 103:             mR->power--;
  4773   00412A  C016  FFD9         	movff	stop@mR,fsr2l
  4774   00412E  C017  FFDA         	movff	stop@mR+1,fsr2h
  4775   004132  06DF               	decf	indf2,f,c
  4776   004134                     l4302:
  4777                           
  4778                           ;dc_motor.c: 105:         setMotorPWM(mL);
  4779   004134  C014  F00E         	movff	stop@mL,setMotorPWM@m
  4780   004138  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  4781   00413C  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4782   004140                     
  4783                           ;dc_motor.c: 106:         setMotorPWM(mR);
  4784   004140  C016  F00E         	movff	stop@mR,setMotorPWM@m
  4785   004144  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  4786   004148  EC4E  F01C         	call	_setMotorPWM	;wreg free
  4787   00414C                     
  4788                           ;dc_motor.c: 107:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  4789   00414C  0E35               	movlw	53
  4790   00414E                     u4977:
  4791   00414E  2EE8               	decfsz	wreg,f,c
  4792   004150  D7FE               	bra	u4977
  4793   004152  F000               	nop	
  4794   004154                     l4308:
  4795                           
  4796                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  4797   004154  C014  FFD9         	movff	stop@mL,fsr2l
  4798   004158  C015  FFDA         	movff	stop@mL+1,fsr2h
  4799   00415C  50DF               	movf	indf2,w,c
  4800   00415E  B4D8               	btfsc	status,2,c
  4801   004160  EFB4  F020         	goto	u4111
  4802   004164  EFB6  F020         	goto	u4110
  4803   004168                     u4111:
  4804   004168  EFC2  F020         	goto	l207
  4805   00416C                     u4110:
  4806   00416C  C016  FFD9         	movff	stop@mR,fsr2l
  4807   004170  C017  FFDA         	movff	stop@mR+1,fsr2h
  4808   004174  50DF               	movf	indf2,w,c
  4809   004176  A4D8               	btfss	status,2,c
  4810   004178  EFC0  F020         	goto	u4121
  4811   00417C  EFC2  F020         	goto	u4120
  4812   004180                     u4121:
  4813   004180  EF78  F020         	goto	l4294
  4814   004184                     u4120:
  4815   004184                     l207:
  4816                           
  4817                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  4818   004184  987C               	bcf	124,4,c	;volatile
  4819   004186  0012               	return		;funcret
  4820   004188                     __end_of_stop:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _setMotorPWM *****************
  4824 ;; Defined at:
  4825 ;;		line 70 in file "dc_motor.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  m               2   13[COMRAM] PTR struct DC_motor
  4828 ;;		 -> motorR(9), motorL(9), 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  negDuty         1   18[COMRAM] unsigned char 
  4831 ;;  posDuty         1   17[COMRAM] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:        6 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 1
  4848 ;; This function calls:
  4849 ;;		___lwdiv
  4850 ;;		___wmul
  4851 ;; This function is called by:
  4852 ;;		_stop
  4853 ;;		_turnLeft
  4854 ;;		_turnRight
  4855 ;;		_fullSpeedReverse
  4856 ;;		_fullSpeedAhead
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text28
  4861   00389C                     __ptext28:
  4862                           	callstack 0
  4863   00389C                     _setMotorPWM:
  4864                           	callstack 26
  4865   00389C                     
  4866                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  4867   00389C  EE20 F002          	lfsr	2,2
  4868   0038A0  500E               	movf	setMotorPWM@m^0,w,c
  4869   0038A2  26D9               	addwf	fsr2l,f,c
  4870   0038A4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4871   0038A6  22DA               	addwfc	fsr2h,f,c
  4872   0038A8  50DF               	movf	indf2,w,c
  4873   0038AA  B4D8               	btfsc	status,2,c
  4874   0038AC  EF5A  F01C         	goto	u4031
  4875   0038B0  EF5C  F01C         	goto	u4030
  4876   0038B4                     u4031:
  4877   0038B4  EF90  F01C         	goto	l4182
  4878   0038B8                     u4030:
  4879   0038B8                     
  4880                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  4881   0038B8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  4882   0038BC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4883   0038C0  50DF               	movf	indf2,w,c
  4884   0038C2  6E10               	movwf	??_setMotorPWM^0,c
  4885   0038C4  5010               	movf	??_setMotorPWM^0,w,c
  4886   0038C6  6E01               	movwf	___wmul@multiplier^0,c
  4887   0038C8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4888   0038CA  EE20 F003          	lfsr	2,3
  4889   0038CE  500E               	movf	setMotorPWM@m^0,w,c
  4890   0038D0  26D9               	addwf	fsr2l,f,c
  4891   0038D2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4892   0038D4  22DA               	addwfc	fsr2h,f,c
  4893   0038D6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4894   0038DA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4895   0038DE  ECC4  F025         	call	___wmul	;wreg free
  4896   0038E2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  4897   0038E6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  4898   0038EA  0E00               	movlw	0
  4899   0038EC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4900   0038EE  0E64               	movlw	100
  4901   0038F0  6E09               	movwf	___lwdiv@divisor^0,c
  4902   0038F2  ECEA  F022         	call	___lwdiv	;wreg free
  4903   0038F6  EE20 F003          	lfsr	2,3
  4904   0038FA  500E               	movf	setMotorPWM@m^0,w,c
  4905   0038FC  26D9               	addwf	fsr2l,f,c
  4906   0038FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4907   003900  22DA               	addwfc	fsr2h,f,c
  4908   003902  50DF               	movf	indf2,w,c
  4909   003904  6E11               	movwf	(??_setMotorPWM+1)^0,c
  4910   003906  5007               	movf	?___lwdiv^0,w,c
  4911   003908  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  4912   00390A  6E12               	movwf	setMotorPWM@posDuty^0,c
  4913   00390C                     
  4914                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  4915   00390C  EE20 F003          	lfsr	2,3
  4916   003910  500E               	movf	setMotorPWM@m^0,w,c
  4917   003912  26D9               	addwf	fsr2l,f,c
  4918   003914  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4919   003916  22DA               	addwfc	fsr2h,f,c
  4920   003918  50DF               	movf	indf2,w,c
  4921   00391A  6E13               	movwf	setMotorPWM@negDuty^0,c
  4922                           
  4923                           ;dc_motor.c: 77:     }
  4924   00391C  EFB3  F01C         	goto	l4186
  4925   003920                     l4182:
  4926                           
  4927                           ;dc_motor.c: 79:         posDuty=0;
  4928   003920  0E00               	movlw	0
  4929   003922  6E12               	movwf	setMotorPWM@posDuty^0,c
  4930   003924                     
  4931                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  4932   003924  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  4933   003928  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4934   00392C  50DF               	movf	indf2,w,c
  4935   00392E  6E10               	movwf	??_setMotorPWM^0,c
  4936   003930  5010               	movf	??_setMotorPWM^0,w,c
  4937   003932  6E01               	movwf	___wmul@multiplier^0,c
  4938   003934  6A02               	clrf	(___wmul@multiplier+1)^0,c
  4939   003936  EE20 F003          	lfsr	2,3
  4940   00393A  500E               	movf	setMotorPWM@m^0,w,c
  4941   00393C  26D9               	addwf	fsr2l,f,c
  4942   00393E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4943   003940  22DA               	addwfc	fsr2h,f,c
  4944   003942  CFDE F003          	movff	postinc2,___wmul@multiplicand
  4945   003946  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  4946   00394A  ECC4  F025         	call	___wmul	;wreg free
  4947   00394E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  4948   003952  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  4949   003956  0E00               	movlw	0
  4950   003958  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  4951   00395A  0E64               	movlw	100
  4952   00395C  6E09               	movwf	___lwdiv@divisor^0,c
  4953   00395E  ECEA  F022         	call	___lwdiv	;wreg free
  4954   003962  5007               	movf	?___lwdiv^0,w,c
  4955   003964  6E13               	movwf	setMotorPWM@negDuty^0,c
  4956   003966                     l4186:
  4957                           
  4958                           ;dc_motor.c: 83:     if (m->direction) {
  4959   003966  EE20 F001          	lfsr	2,1
  4960   00396A  500E               	movf	setMotorPWM@m^0,w,c
  4961   00396C  26D9               	addwf	fsr2l,f,c
  4962   00396E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4963   003970  22DA               	addwfc	fsr2h,f,c
  4964   003972  50DF               	movf	indf2,w,c
  4965   003974  B4D8               	btfsc	status,2,c
  4966   003976  EFBF  F01C         	goto	u4041
  4967   00397A  EFC1  F01C         	goto	u4040
  4968   00397E                     u4041:
  4969   00397E  EFE3  F01C         	goto	l4190
  4970   003982                     u4040:
  4971   003982                     
  4972                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  4973   003982  EE20 F005          	lfsr	2,5
  4974   003986  500E               	movf	setMotorPWM@m^0,w,c
  4975   003988  26D9               	addwf	fsr2l,f,c
  4976   00398A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4977   00398C  22DA               	addwfc	fsr2h,f,c
  4978   00398E  CFDE F010          	movff	postinc2,??_setMotorPWM
  4979   003992  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  4980   003996  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  4981   00399A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4982   00399E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  4983                           
  4984                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  4985   0039A2  EE20 F007          	lfsr	2,7
  4986   0039A6  500E               	movf	setMotorPWM@m^0,w,c
  4987   0039A8  26D9               	addwf	fsr2l,f,c
  4988   0039AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  4989   0039AC  22DA               	addwfc	fsr2h,f,c
  4990   0039AE  CFDE F010          	movff	postinc2,??_setMotorPWM
  4991   0039B2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  4992   0039B6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  4993   0039BA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4994   0039BE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  4995                           
  4996                           ;dc_motor.c: 86:     } else {
  4997   0039C2  EF03  F01D         	goto	l198
  4998   0039C6                     l4190:
  4999                           
  5000                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  5001   0039C6  EE20 F005          	lfsr	2,5
  5002   0039CA  500E               	movf	setMotorPWM@m^0,w,c
  5003   0039CC  26D9               	addwf	fsr2l,f,c
  5004   0039CE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  5005   0039D0  22DA               	addwfc	fsr2h,f,c
  5006   0039D2  CFDE F010          	movff	postinc2,??_setMotorPWM
  5007   0039D6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  5008   0039DA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  5009   0039DE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5010   0039E2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  5011                           
  5012                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  5013   0039E6  EE20 F007          	lfsr	2,7
  5014   0039EA  500E               	movf	setMotorPWM@m^0,w,c
  5015   0039EC  26D9               	addwf	fsr2l,f,c
  5016   0039EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  5017   0039F0  22DA               	addwfc	fsr2h,f,c
  5018   0039F2  CFDE F010          	movff	postinc2,??_setMotorPWM
  5019   0039F6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  5020   0039FA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  5021   0039FE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5022   003A02  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  5023   003A06                     l198:
  5024   003A06  0012               	return		;funcret
  5025   003A08                     __end_of_setMotorPWM:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function ___wmul *****************
  5029 ;; Defined at:
  5030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  multiplier      2    0[COMRAM] unsigned int 
  5033 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  product         2    4[COMRAM] unsigned int 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2    0[COMRAM] unsigned int 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, prodl, prodh
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;Total ram usage:        6 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_setMotorPWM
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text29
  5059   004B88                     __ptext29:
  5060                           	callstack 0
  5061   004B88                     ___wmul:
  5062                           	callstack 26
  5063   004B88  5001               	movf	___wmul@multiplier^0,w,c
  5064   004B8A  0203               	mulwf	___wmul@multiplicand^0,c
  5065   004B8C  CFF3 F005          	movff	prodl,___wmul@product
  5066   004B90  CFF4 F006          	movff	prodh,___wmul@product+1
  5067   004B94  5001               	movf	___wmul@multiplier^0,w,c
  5068   004B96  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5069   004B98  50F3               	movf	243,w,c
  5070   004B9A  2606               	addwf	(___wmul@product+1)^0,f,c
  5071   004B9C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5072   004B9E  0203               	mulwf	___wmul@multiplicand^0,c
  5073   004BA0  50F3               	movf	243,w,c
  5074   004BA2  2606               	addwf	(___wmul@product+1)^0,f,c
  5075   004BA4  C005  F001         	movff	___wmul@product,?___wmul
  5076   004BA8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5077   004BAC  0012               	return		;funcret
  5078   004BAE                     __end_of___wmul:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function ___lwdiv *****************
  5082 ;; Defined at:
  5083 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  dividend        2    6[COMRAM] unsigned int 
  5086 ;;  divisor         2    8[COMRAM] unsigned int 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  quotient        2   10[COMRAM] unsigned int 
  5089 ;;  counter         1   12[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  2    6[COMRAM] unsigned int 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;Total ram usage:        7 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_setMotorPWM
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text30
  5113   0045D4                     __ptext30:
  5114                           	callstack 0
  5115   0045D4                     ___lwdiv:
  5116                           	callstack 26
  5117   0045D4  0E00               	movlw	0
  5118   0045D6  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5119   0045D8  0E00               	movlw	0
  5120   0045DA  6E0B               	movwf	___lwdiv@quotient^0,c
  5121   0045DC  5009               	movf	___lwdiv@divisor^0,w,c
  5122   0045DE  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5123   0045E0  B4D8               	btfsc	status,2,c
  5124   0045E2  EFF5  F022         	goto	u3661
  5125   0045E6  EFF7  F022         	goto	u3660
  5126   0045EA                     u3661:
  5127   0045EA  EF1F  F023         	goto	l1029
  5128   0045EE                     u3660:
  5129   0045EE  0E01               	movlw	1
  5130   0045F0  6E0D               	movwf	___lwdiv@counter^0,c
  5131   0045F2  EFFF  F022         	goto	l3936
  5132   0045F6                     l3934:
  5133   0045F6  90D8               	bcf	status,0,c
  5134   0045F8  3609               	rlcf	___lwdiv@divisor^0,f,c
  5135   0045FA  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5136   0045FC  2A0D               	incf	___lwdiv@counter^0,f,c
  5137   0045FE                     l3936:
  5138   0045FE  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  5139   004600  EF04  F023         	goto	u3671
  5140   004604  EF06  F023         	goto	u3670
  5141   004608                     u3671:
  5142   004608  EFFB  F022         	goto	l3934
  5143   00460C                     u3670:
  5144   00460C                     l3938:
  5145   00460C  90D8               	bcf	status,0,c
  5146   00460E  360B               	rlcf	___lwdiv@quotient^0,f,c
  5147   004610  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5148   004612  5009               	movf	___lwdiv@divisor^0,w,c
  5149   004614  5C07               	subwf	___lwdiv@dividend^0,w,c
  5150   004616  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5151   004618  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5152   00461A  A0D8               	btfss	status,0,c
  5153   00461C  EF12  F023         	goto	u3681
  5154   004620  EF14  F023         	goto	u3680
  5155   004624                     u3681:
  5156   004624  EF19  F023         	goto	l3946
  5157   004628                     u3680:
  5158   004628  5009               	movf	___lwdiv@divisor^0,w,c
  5159   00462A  5E07               	subwf	___lwdiv@dividend^0,f,c
  5160   00462C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  5161   00462E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5162   004630  800B               	bsf	___lwdiv@quotient^0,0,c
  5163   004632                     l3946:
  5164   004632  90D8               	bcf	status,0,c
  5165   004634  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5166   004636  3209               	rrcf	___lwdiv@divisor^0,f,c
  5167   004638  2E0D               	decfsz	___lwdiv@counter^0,f,c
  5168   00463A  EF06  F023         	goto	l3938
  5169   00463E                     l1029:
  5170   00463E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  5171   004642  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5172   004646  0012               	return		;funcret
  5173   004648                     __end_of___lwdiv:
  5174                           	callstack 0
  5175                           
  5176 ;; *************** function _LED_init *****************
  5177 ;; Defined at:
  5178 ;;		line 4 in file "LED.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		None
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;Total ram usage:        0 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text31
  5206   004C08                     __ptext31:
  5207                           	callstack 0
  5208   004C08                     _LED_init:
  5209                           	callstack 30
  5210   004C08                     
  5211                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5212   004C08  9884               	bcf	132,4,c	;volatile
  5213                           
  5214                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5215   004C0A  9088               	bcf	136,0,c	;volatile
  5216                           
  5217                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5218   004C0C  9086               	bcf	134,0,c	;volatile
  5219                           
  5220                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5221   004C0E  987C               	bcf	124,4,c	;volatile
  5222                           
  5223                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5224   004C10  9080               	bcf	128,0,c	;volatile
  5225                           
  5226                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5227   004C12  907E               	bcf	126,0,c	;volatile
  5228   004C14  0012               	return		;funcret
  5229   004C16                     __end_of_LED_init:
  5230                           	callstack 0
  5231                           
  5232 ;; *************** function _Color2String *****************
  5233 ;; Defined at:
  5234 ;;		line 39 in file "serial.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  buf             2  134[BANK0 ] PTR unsigned char 
  5237 ;;		 -> main@data(80), 
  5238 ;;  cf              2  136[BANK0 ] PTR struct RGBC_rel
  5239 ;;		 -> colorf(22), 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  colourname      2    0        PTR unsigned char 
  5242 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  5243 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  5244 ;;		 -> STR_2(1), 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;Total ram usage:        4 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 8
  5261 ;; This function calls:
  5262 ;;		_Hue2Colour
  5263 ;;		_sendStringSerial4
  5264 ;;		_sprintf
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text32
  5271   003EE2                     __ptext32:
  5272                           	callstack 0
  5273   003EE2                     _Color2String:
  5274                           	callstack 22
  5275   003EE2  C0E8  F071         	movff	Color2String@cf,Hue2Colour@cf
  5276   003EE6  C0E9  F072         	movff	Color2String@cf+1,Hue2Colour@cf+1
  5277   003EEA  ECCB  F00F         	call	_Hue2Colour	;wreg free
  5278   003EEE                     
  5279                           ;serial.c: 43:     sprintf(buf," Red %f Green,%f Blue,%f clear %f Hue %f \r",cf->Rf,
  5280   003EEE  C0E6  F0C1         	movff	Color2String@buf,sprintf@s
  5281   003EF2  C0E7  F0C2         	movff	Color2String@buf+1,sprintf@s+1
  5282   003EF6  0E01               	movlw	low STR_1
  5283   003EF8  0100               	movlb	0	; () banked
  5284   003EFA  6FC3               	movwf	sprintf@fmt& (0+255),b
  5285   003EFC  0E0E               	movlw	high STR_1
  5286   003EFE  6FC4               	movwf	(sprintf@fmt+1)& (0+255),b
  5287   003F00  C0E8  FFD9         	movff	Color2String@cf,fsr2l
  5288   003F04  C0E9  FFDA         	movff	Color2String@cf+1,fsr2h
  5289   003F08  CFDE F0C5          	movff	postinc2,?_sprintf+4
  5290   003F0C  CFDE F0C6          	movff	postinc2,?_sprintf+5
  5291   003F10  CFDE F0C7          	movff	postinc2,?_sprintf+6
  5292   003F14  CFDE F0C8          	movff	postinc2,?_sprintf+7
  5293   003F18  EE20 F004          	lfsr	2,4
  5294   003F1C  51E8               	movf	Color2String@cf& (0+255),w,b
  5295   003F1E  26D9               	addwf	fsr2l,f,c
  5296   003F20  51E9               	movf	(Color2String@cf+1)& (0+255),w,b
  5297   003F22  22DA               	addwfc	fsr2h,f,c
  5298   003F24  CFDE F0C9          	movff	postinc2,?_sprintf+8
  5299   003F28  CFDE F0CA          	movff	postinc2,?_sprintf+9
  5300   003F2C  CFDE F0CB          	movff	postinc2,?_sprintf+10
  5301   003F30  CFDE F0CC          	movff	postinc2,?_sprintf+11
  5302   003F34  EE20 F008          	lfsr	2,8
  5303   003F38  51E8               	movf	Color2String@cf& (0+255),w,b
  5304   003F3A  26D9               	addwf	fsr2l,f,c
  5305   003F3C  51E9               	movf	(Color2String@cf+1)& (0+255),w,b
  5306   003F3E  22DA               	addwfc	fsr2h,f,c
  5307   003F40  CFDE F0CD          	movff	postinc2,?_sprintf+12
  5308   003F44  CFDE F0CE          	movff	postinc2,?_sprintf+13
  5309   003F48  CFDE F0CF          	movff	postinc2,?_sprintf+14
  5310   003F4C  CFDE F0D0          	movff	postinc2,?_sprintf+15
  5311   003F50  EE20 F00C          	lfsr	2,12
  5312   003F54  51E8               	movf	Color2String@cf& (0+255),w,b
  5313   003F56  26D9               	addwf	fsr2l,f,c
  5314   003F58  51E9               	movf	(Color2String@cf+1)& (0+255),w,b
  5315   003F5A  22DA               	addwfc	fsr2h,f,c
  5316   003F5C  CFDE F0D1          	movff	postinc2,?_sprintf+16
  5317   003F60  CFDE F0D2          	movff	postinc2,?_sprintf+17
  5318   003F64  CFDE F0D3          	movff	postinc2,?_sprintf+18
  5319   003F68  CFDE F0D4          	movff	postinc2,?_sprintf+19
  5320   003F6C  EE20 F010          	lfsr	2,16
  5321   003F70  51E8               	movf	Color2String@cf& (0+255),w,b
  5322   003F72  26D9               	addwf	fsr2l,f,c
  5323   003F74  51E9               	movf	(Color2String@cf+1)& (0+255),w,b
  5324   003F76  22DA               	addwfc	fsr2h,f,c
  5325   003F78  CFDE F0D5          	movff	postinc2,?_sprintf+20
  5326   003F7C  CFDE F0D6          	movff	postinc2,?_sprintf+21
  5327   003F80  CFDE F0D7          	movff	postinc2,?_sprintf+22
  5328   003F84  CFDE F0D8          	movff	postinc2,?_sprintf+23
  5329   003F88  ECB0  F023         	call	_sprintf	;wreg free
  5330   003F8C                     
  5331                           ;serial.c: 46:     sendStringSerial4(buf);
  5332   003F8C  C0E6  F002         	movff	Color2String@buf,sendStringSerial4@string
  5333   003F90  C0E7  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  5334   003F94  EC65  F025         	call	_sendStringSerial4	;wreg free
  5335   003F98  0012               	return		;funcret
  5336   003F9A                     __end_of_Color2String:
  5337                           	callstack 0
  5338                           
  5339 ;; *************** function _sprintf *****************
  5340 ;; Defined at:
  5341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  s               2   97[BANK0 ] PTR unsigned char 
  5344 ;;		 -> main@data(80), 
  5345 ;;  fmt             2   99[BANK0 ] PTR const unsigned char 
  5346 ;;		 -> STR_1(43), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  f              11  123[BANK0 ] struct _IO_FILE
  5349 ;;  ap              2  121[BANK0 ] PTR void [1]
  5350 ;;		 -> ?_sprintf(2), 
  5351 ;;  ret             2    0        int 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2   97[BANK0 ] int 
  5354 ;; Registers used:
  5355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5361 ;;      Params:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;Total ram usage:       37 bytes
  5366 ;; Hardware stack levels used: 1
  5367 ;; Hardware stack levels required when called: 7
  5368 ;; This function calls:
  5369 ;;		_vfprintf
  5370 ;; This function is called by:
  5371 ;;		_Color2String
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text33
  5376   004760                     __ptext33:
  5377                           	callstack 0
  5378   004760                     _sprintf:
  5379                           	callstack 22
  5380   004760  0EC5               	movlw	low (?_sprintf+4)
  5381   004762  0100               	movlb	0	; () banked
  5382   004764  6FD9               	movwf	sprintf@ap& (0+255),b
  5383   004766  0E00               	movlw	high (?_sprintf+4)
  5384   004768  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  5385   00476A  C0C1  F0DB         	movff	sprintf@s,sprintf@f
  5386   00476E  C0C2  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5387   004772                     
  5388                           ; BSR set to: 0
  5389   004772  0E00               	movlw	0
  5390   004774  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5391   004776  0E00               	movlw	0
  5392   004778  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5393   00477A                     
  5394                           ; BSR set to: 0
  5395   00477A  0E00               	movlw	0
  5396   00477C  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  5397   00477E  0E00               	movlw	0
  5398   004780  6FE4               	movwf	(sprintf@f+9)& (0+255),b
  5399   004782                     
  5400                           ; BSR set to: 0
  5401   004782  0EDB               	movlw	low sprintf@f
  5402   004784  6FB9               	movwf	vfprintf@fp& (0+255),b
  5403   004786  0E00               	movlw	high sprintf@f
  5404   004788  6FBA               	movwf	(vfprintf@fp+1)& (0+255),b
  5405   00478A  C0C3  F0BB         	movff	sprintf@fmt,vfprintf@fmt
  5406   00478E  C0C4  F0BC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5407   004792  0ED9               	movlw	low sprintf@ap
  5408   004794  6FBD               	movwf	vfprintf@ap& (0+255),b
  5409   004796  0E00               	movlw	high sprintf@ap
  5410   004798  6FBE               	movwf	(vfprintf@ap+1)& (0+255),b
  5411   00479A  EC85  F023         	call	_vfprintf	;wreg free
  5412   00479E  0100               	movlb	0	; () banked
  5413   0047A0  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5414   0047A2  25C1               	addwf	sprintf@s& (0+255),w,b
  5415   0047A4  6ED9               	movwf	fsr2l,c
  5416   0047A6  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  5417   0047A8  21C2               	addwfc	(sprintf@s+1)& (0+255),w,b
  5418   0047AA  6EDA               	movwf	fsr2h,c
  5419   0047AC  0E00               	movlw	0
  5420   0047AE  6EDF               	movwf	indf2,c
  5421   0047B0                     
  5422                           ; BSR set to: 0
  5423   0047B0  0012               	return		;funcret
  5424   0047B2                     __end_of_sprintf:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _vfprintf *****************
  5428 ;; Defined at:
  5429 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  5432 ;;		 -> sprintf@f(11), 
  5433 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  5434 ;;		 -> STR_1(43), 
  5435 ;;  ap              2   93[BANK0 ] PTR PTR void 
  5436 ;;		 -> sprintf@ap(2), 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  cfmt            2   95[BANK0 ] PTR unsigned char 
  5439 ;;		 -> STR_1(43), 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  2   89[BANK0 ] int 
  5442 ;; Registers used:
  5443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5449 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;Total ram usage:        8 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; Hardware stack levels required when called: 6
  5456 ;; This function calls:
  5457 ;;		_vfpfcnvrt
  5458 ;; This function is called by:
  5459 ;;		_sprintf
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text34
  5464   00470A                     __ptext34:
  5465                           	callstack 0
  5466   00470A                     _vfprintf:
  5467                           	callstack 22
  5468   00470A                     
  5469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  5470   00470A  C0BB  F0BF         	movff	vfprintf@fmt,vfprintf@cfmt
  5471   00470E  C0BC  F0C0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  5474   004712  EF9A  F023         	goto	l4388
  5475   004716                     l4386:
  5476                           
  5477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5478   004716  C0B9  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  5479   00471A  C0BA  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5480   00471E  0EBF               	movlw	low vfprintf@cfmt
  5481   004720  0100               	movlb	0	; () banked
  5482   004722  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  5483   004724  0E00               	movlw	high vfprintf@cfmt
  5484   004726  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5485   004728  C0BD  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  5486   00472C  C0BE  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5487   004730  EC9D  F018         	call	_vfpfcnvrt	;wreg free
  5488   004734                     l4388:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  5491   004734  C0BF  FFF6         	movff	vfprintf@cfmt,tblptrl
  5492   004738  C0C0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5493   00473C                     	if	0	;tblptru may be non-zero
  5494   00473C                     	endif
  5495   00473C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5496   00473C  0E00               	movlw	low (__mediumconst shr (0+16))
  5497   00473E  6EF8               	movwf	tblptru,c
  5498   004740                     	endif
  5499   004740  0008               	tblrd		*
  5500   004742  50F5               	movf	tablat,w,c
  5501   004744  0900               	iorlw	0
  5502   004746  A4D8               	btfss	status,2,c
  5503   004748  EFA8  F023         	goto	u4171
  5504   00474C  EFAA  F023         	goto	u4170
  5505   004750                     u4171:
  5506   004750  EF8B  F023         	goto	l4386
  5507   004754                     u4170:
  5508   004754                     
  5509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  5510   004754  0E00               	movlw	0
  5511   004756  0100               	movlb	0	; () banked
  5512   004758  6FBA               	movwf	(?_vfprintf+1)& (0+255),b
  5513   00475A  0E00               	movlw	0
  5514   00475C  6FB9               	movwf	?_vfprintf& (0+255),b
  5515   00475E                     
  5516                           ; BSR set to: 0
  5517   00475E  0012               	return		;funcret
  5518   004760                     __end_of_vfprintf:
  5519                           	callstack 0
  5520                           
  5521 ;; *************** function _vfpfcnvrt *****************
  5522 ;; Defined at:
  5523 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  5526 ;;		 -> sprintf@f(11), 
  5527 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  5528 ;;		 -> vfprintf@cfmt(2), 
  5529 ;;  ap              2   74[BANK0 ] PTR PTR void 
  5530 ;;		 -> sprintf@ap(2), 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  convarg         8   78[BANK0 ] struct .
  5533 ;;  cp              2   87[BANK0 ] PTR unsigned char 
  5534 ;;		 -> STR_1(43), 
  5535 ;;  i               2    0        int 
  5536 ;;  done            2    0        int 
  5537 ;;  c               1   86[BANK0 ] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5547 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5551 ;;Total ram usage:       19 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 5
  5554 ;; This function calls:
  5555 ;;		_efgtoa
  5556 ;;		_fputc
  5557 ;; This function is called by:
  5558 ;;		_vfprintf
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text35
  5563   00313A                     __ptext35:
  5564                           	callstack 0
  5565   00313A                     _vfpfcnvrt:
  5566                           	callstack 22
  5567   00313A                     
  5568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  5569   00313A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5570   00313E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5571   003142  CFDE FFF6          	movff	postinc2,tblptrl
  5572   003146  CFDD FFF7          	movff	postdec2,tblptrh
  5573   00314A                     	if	0	;tblptru may be non-zero
  5574   00314A                     	endif
  5575   00314A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5576   00314A  0E00               	movlw	low (__mediumconst shr (0+16))
  5577   00314C  6EF8               	movwf	tblptru,c
  5578   00314E                     	endif
  5579   00314E  0008               	tblrd		*
  5580   003150  50F5               	movf	tablat,w,c
  5581   003152  0A25               	xorlw	37
  5582   003154  A4D8               	btfss	status,2,c
  5583   003156  EFAF  F018         	goto	u4051
  5584   00315A  EFB1  F018         	goto	u4050
  5585   00315E                     u4051:
  5586   00315E  EF9E  F019         	goto	l4238
  5587   003162                     u4050:
  5588   003162                     
  5589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  5590   003162  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5591   003166  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5592   00316A  2ADE               	incf	postinc2,f,c
  5593   00316C  0E00               	movlw	0
  5594   00316E  22DD               	addwfc	postdec2,f,c
  5595   003170                     
  5596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  5597   003170  0E00               	movlw	0
  5598   003172  0100               	movlb	0	; () banked
  5599   003174  6FF1               	movwf	(_width+1)& (0+255),b
  5600   003176  0E00               	movlw	0
  5601   003178  6FF0               	movwf	_width& (0+255),b
  5602   00317A  C0F0  F0F4         	movff	_width,_flags
  5603   00317E                     
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  5606   00317E  69F2               	setf	_prec& (0+255),b
  5607   003180  69F3               	setf	(_prec+1)& (0+255),b
  5608   003182                     
  5609                           ; BSR set to: 0
  5610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  5611   003182  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5612   003186  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5613   00318A  CFDE F0B7          	movff	postinc2,vfpfcnvrt@cp
  5614   00318E  CFDD F0B8          	movff	postdec2,vfpfcnvrt@cp+1
  5615   003192                     
  5616                           ; BSR set to: 0
  5617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  5618   003192  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5619   003196  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5620   00319A                     	if	0	;tblptru may be non-zero
  5621   00319A                     	endif
  5622   00319A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5623   00319A  0E00               	movlw	low (__mediumconst shr (0+16))
  5624   00319C  6EF8               	movwf	tblptru,c
  5625   00319E                     	endif
  5626   00319E  0008               	tblrd		*
  5627   0031A0  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  5628                           
  5629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  5630   0031A4  EFE0  F018         	goto	l4212
  5631   0031A8                     l4204:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  5635   0031A8  4BB7               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  5636   0031AA  2BB8               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  5637                           
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  5639   0031AC  EFF9  F018         	goto	l4214
  5640   0031B0                     l4206:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  5644   0031B0  0E6C               	movlw	108
  5645   0031B2  6FB6               	movwf	vfpfcnvrt@c& (0+255),b
  5646                           
  5647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  5648   0031B4  EFF9  F018         	goto	l4214
  5649   0031B8                     l4208:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  5653   0031B8  0E00               	movlw	0
  5654   0031BA  6FB6               	movwf	vfpfcnvrt@c& (0+255),b
  5655                           
  5656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  5657   0031BC  EFF9  F018         	goto	l4214
  5658   0031C0                     l4212:
  5659                           
  5660                           ; BSR set to: 0
  5661   0031C0  51B6               	movf	vfpfcnvrt@c& (0+255),w,b
  5662   0031C2  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  5663   0031C4  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5664                           
  5665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5666                           ; Switch size 1, requested type "simple"
  5667                           ; Number of cases is 1, Range of values is 0 to 0
  5668                           ; switch strategies available:
  5669                           ; Name         Instructions Cycles
  5670                           ; simple_byte            4     3 (average)
  5671                           ;	Chosen strategy is simple_byte
  5672   0031C6  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5673   0031C8  0A00               	xorlw	0	; case 0
  5674   0031CA  B4D8               	btfsc	status,2,c
  5675   0031CC  EFEA  F018         	goto	l5078
  5676   0031D0  EFDC  F018         	goto	l4208
  5677   0031D4                     l5078:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ; Switch size 1, requested type "simple"
  5681                           ; Number of cases is 3, Range of values is 76 to 108
  5682                           ; switch strategies available:
  5683                           ; Name         Instructions Cycles
  5684                           ; simple_byte           10     6 (average)
  5685                           ;	Chosen strategy is simple_byte
  5686   0031D4  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  5687   0031D6  0A4C               	xorlw	76	; case 76
  5688   0031D8  B4D8               	btfsc	status,2,c
  5689   0031DA  EFD4  F018         	goto	l4204
  5690   0031DE  0A2A               	xorlw	42	; case 102
  5691   0031E0  B4D8               	btfsc	status,2,c
  5692   0031E2  EFD8  F018         	goto	l4206
  5693   0031E6  0A0A               	xorlw	10	; case 108
  5694   0031E8  B4D8               	btfsc	status,2,c
  5695   0031EA  EFD4  F018         	goto	l4204
  5696   0031EE  EFDC  F018         	goto	l4208
  5697   0031F2                     l4214:
  5698                           
  5699                           ; BSR set to: 0
  5700   0031F2  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5701   0031F6  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5702   0031FA                     	if	0	;tblptru may be non-zero
  5703   0031FA                     	endif
  5704   0031FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5705   0031FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5706   0031FC  6EF8               	movwf	tblptru,c
  5707   0031FE                     	endif
  5708   0031FE  0008               	tblrd		*
  5709   003200  50F5               	movf	tablat,w,c
  5710   003202  0A66               	xorlw	102
  5711   003204  A4D8               	btfss	status,2,c
  5712   003206  EF07  F019         	goto	u4061
  5713   00320A  EF09  F019         	goto	u4060
  5714   00320E                     u4061:
  5715   00320E  EF95  F019         	goto	l4234
  5716   003212                     u4060:
  5717   003212  EF3F  F019         	goto	l4222
  5718   003216                     l4216:
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5722   003216  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5723   00321A  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5724   00321E  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  5725   003222  0E04               	movlw	4
  5726   003224  26DE               	addwf	postinc2,f,c
  5727   003226  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  5728   00322A  0E00               	movlw	0
  5729   00322C  22DD               	addwfc	postdec2,f,c
  5730   00322E  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5731   003232  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5732   003236  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg
  5733   00323A  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+1
  5734   00323E  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+2
  5735   003242  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+3
  5736                           
  5737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  5738   003246  EF54  F019         	goto	l4224
  5739   00324A                     l4218:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5743   00324A  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5744   00324E  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5745   003252  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  5746   003256  0E04               	movlw	4
  5747   003258  26DE               	addwf	postinc2,f,c
  5748   00325A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  5749   00325E  0E00               	movlw	0
  5750   003260  22DD               	addwfc	postdec2,f,c
  5751   003262  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5752   003266  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5753   00326A  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg
  5754   00326E  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+1
  5755   003272  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+2
  5756   003276  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+3
  5757                           
  5758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  5759   00327A  EF54  F019         	goto	l4224
  5760   00327E                     l4222:
  5761                           
  5762                           ; BSR set to: 0
  5763   00327E  51B6               	movf	vfpfcnvrt@c& (0+255),w,b
  5764   003280  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  5765   003282  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5766                           
  5767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5768                           ; Switch size 1, requested type "simple"
  5769                           ; Number of cases is 1, Range of values is 0 to 0
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ;	Chosen strategy is simple_byte
  5774   003284  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5775   003286  0A00               	xorlw	0	; case 0
  5776   003288  B4D8               	btfsc	status,2,c
  5777   00328A  EF49  F019         	goto	l5080
  5778   00328E  EF54  F019         	goto	l4224
  5779   003292                     l5080:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 2, Range of values is 76 to 108
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            7     4 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788   003292  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  5789   003294  0A4C               	xorlw	76	; case 76
  5790   003296  B4D8               	btfsc	status,2,c
  5791   003298  EF25  F019         	goto	l4218
  5792   00329C  0A20               	xorlw	32	; case 108
  5793   00329E  B4D8               	btfsc	status,2,c
  5794   0032A0  EF0B  F019         	goto	l4216
  5795   0032A4  EF54  F019         	goto	l4224
  5796   0032A8                     l4224:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  5800   0032A8  0E01               	movlw	1
  5801   0032AA  25B7               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5802   0032AC  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  5803   0032AE  0E00               	movlw	0
  5804   0032B0  21B8               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5805   0032B2  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5806   0032B4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5807   0032B8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5808   0032BC  C0AC  FFDE         	movff	??_vfpfcnvrt,postinc2
  5809   0032C0  C0AD  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  5812   0032C4  EF7D  F019         	goto	l4232
  5813   0032C8                     l4226:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  5817   0032C8  C0A6  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  5818   0032CC  C0A7  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5819   0032D0  C0AE  F073         	movff	vfpfcnvrt@convarg,efgtoa@f
  5820   0032D4  C0AF  F074         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  5821   0032D8  C0B0  F075         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  5822   0032DC  C0B1  F076         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  5823   0032E0  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5824   0032E4  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5825   0032E8                     	if	0	;tblptru may be non-zero
  5826   0032E8                     	endif
  5827   0032E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5828   0032E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5829   0032EA  6EF8               	movwf	tblptru,c
  5830   0032EC                     	endif
  5831   0032EC  0008               	tblrd		*
  5832   0032EE  CFF5 F077          	movff	tablat,efgtoa@c
  5833   0032F2  EC38  F007         	call	_efgtoa	;wreg free
  5834   0032F6  EFB4  F019         	goto	l1321
  5835   0032FA                     l4232:
  5836                           
  5837                           ; BSR set to: 0
  5838   0032FA  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5839   0032FE  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5840   003302                     	if	0	;tblptru may be non-zero
  5841   003302                     	endif
  5842   003302                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5843   003302  0E00               	movlw	low (__mediumconst shr (0+16))
  5844   003304  6EF8               	movwf	tblptru,c
  5845   003306                     	endif
  5846   003306  0008               	tblrd		*
  5847   003308  50F5               	movf	tablat,w,c
  5848   00330A  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  5849   00330C  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5850                           
  5851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 1, Range of values is 0 to 0
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte            4     3 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858   00330E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5859   003310  0A00               	xorlw	0	; case 0
  5860   003312  B4D8               	btfsc	status,2,c
  5861   003314  EF8E  F019         	goto	l5082
  5862   003318  EF95  F019         	goto	l4234
  5863   00331C                     l5082:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ; Switch size 1, requested type "simple"
  5867                           ; Number of cases is 1, Range of values is 102 to 102
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte            4     3 (average)
  5871                           ;	Chosen strategy is simple_byte
  5872   00331C  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  5873   00331E  0A66               	xorlw	102	; case 102
  5874   003320  B4D8               	btfsc	status,2,c
  5875   003322  EF64  F019         	goto	l4226
  5876   003326  EF95  F019         	goto	l4234
  5877   00332A                     l4234:
  5878                           
  5879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5880   00332A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5881   00332E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5882   003332  2ADE               	incf	postinc2,f,c
  5883   003334  0E00               	movlw	0
  5884   003336  22DD               	addwfc	postdec2,f,c
  5885   003338  EFB4  F019         	goto	l1321
  5886   00333C                     l4238:
  5887                           
  5888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5889   00333C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5890   003340  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5891   003344  CFDE FFF6          	movff	postinc2,tblptrl
  5892   003348  CFDD FFF7          	movff	postdec2,tblptrh
  5893   00334C                     	if	0	;tblptru may be non-zero
  5894   00334C                     	endif
  5895   00334C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5896   00334C  0E00               	movlw	low (__mediumconst shr (0+16))
  5897   00334E  6EF8               	movwf	tblptru,c
  5898   003350                     	endif
  5899   003350  0008               	tblrd		*
  5900   003352  50F5               	movf	tablat,w,c
  5901   003354  6E01               	movwf	fputc@c^0,c
  5902   003356  6A02               	clrf	(fputc@c+1)^0,c
  5903   003358  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5904   00335C  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5905   003360  EC0C  F01F         	call	_fputc	;wreg free
  5906   003364  EF95  F019         	goto	l4234
  5907   003368                     l1321:
  5908   003368  0012               	return		;funcret
  5909   00336A                     __end_of_vfpfcnvrt:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _efgtoa *****************
  5913 ;; Defined at:
  5914 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  5917 ;;		 -> sprintf@f(11), 
  5918 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  5919 ;;  c               1   23[BANK0 ] unsigned char 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  u               4   66[BANK0 ] struct flui
  5922 ;;  g               4   62[BANK0 ] struct flui
  5923 ;;  l               4   55[BANK0 ] struct flui
  5924 ;;  h               4   51[BANK0 ] struct flui
  5925 ;;  ou              4   45[BANK0 ] struct flui
  5926 ;;  n               2   60[BANK0 ] int 
  5927 ;;  i               2   49[BANK0 ] int 
  5928 ;;  w               2   43[BANK0 ] int 
  5929 ;;  e               2   41[BANK0 ] int 
  5930 ;;  m               2   39[BANK0 ] int 
  5931 ;;  d               2   37[BANK0 ] int 
  5932 ;;  t               2   30[BANK0 ] int 
  5933 ;;  p               2   28[BANK0 ] int 
  5934 ;;  ne              2   26[BANK0 ] int 
  5935 ;;  sign            1   59[BANK0 ] unsigned char 
  5936 ;;  nmode           1   36[BANK0 ] unsigned char 
  5937 ;;  mode            1   35[BANK0 ] unsigned char 
  5938 ;;  pp              1   34[BANK0 ] unsigned char 
  5939 ;;  esign           1    0        unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5949 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;Total ram usage:       53 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 4
  5956 ;; This function calls:
  5957 ;;		___fladd
  5958 ;;		___fldiv
  5959 ;;		___fleq
  5960 ;;		___flge
  5961 ;;		___flmul
  5962 ;;		___flneg
  5963 ;;		___flsub
  5964 ;;		___fltol
  5965 ;;		___fpclassifyf
  5966 ;;		_floorf
  5967 ;;		_labs
  5968 ;;		_memcpy
  5969 ;;		_pad
  5970 ;;		_strcpy
  5971 ;; This function is called by:
  5972 ;;		_vfpfcnvrt
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text36
  5977   000E70                     __ptext36:
  5978                           	callstack 0
  5979   000E70                     _efgtoa:
  5980                           	callstack 22
  5981   000E70                     
  5982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  5983   000E70  0E00               	movlw	0
  5984   000E72  0100               	movlb	0	; () banked
  5985   000E74  6F9B               	movwf	efgtoa@sign& (0+255),b
  5986   000E76                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  5989   000E76  C073  F09E         	movff	efgtoa@f,efgtoa@g
  5990   000E7A  C074  F09F         	movff	efgtoa@f+1,efgtoa@g+1
  5991   000E7E  C075  F0A0         	movff	efgtoa@f+2,efgtoa@g+2
  5992   000E82  C076  F0A1         	movff	efgtoa@f+3,efgtoa@g+3
  5993   000E86                     
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  5996   000E86  BFA1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5997   000E88  EF4A  F007         	goto	u3690
  5998   000E8C  EF48  F007         	goto	u3691
  5999   000E90                     u3691:
  6000   000E90  EF5E  F007         	goto	l3960
  6001   000E94                     u3690:
  6002   000E94                     
  6003                           ; BSR set to: 0
  6004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  6005   000E94  0E01               	movlw	1
  6006   000E96  6F9B               	movwf	efgtoa@sign& (0+255),b
  6007   000E98                     
  6008                           ; BSR set to: 0
  6009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  6010   000E98  C09E  F001         	movff	efgtoa@g,___flneg@f1
  6011   000E9C  C09F  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6012   000EA0  C0A0  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6013   000EA4  C0A1  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6014   000EA8  EC49  F025         	call	___flneg	;wreg free
  6015   000EAC  C001  F09E         	movff	?___flneg,efgtoa@g
  6016   000EB0  C002  F09F         	movff	?___flneg+1,efgtoa@g+1
  6017   000EB4  C003  F0A0         	movff	?___flneg+2,efgtoa@g+2
  6018   000EB8  C004  F0A1         	movff	?___flneg+3,efgtoa@g+3
  6019   000EBC                     l3960:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  6022   000EBC  0E00               	movlw	0
  6023   000EBE  0100               	movlb	0	; () banked
  6024   000EC0  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  6025   000EC2  0E00               	movlw	0
  6026   000EC4  6F9C               	movwf	efgtoa@n& (0+255),b
  6027   000EC6                     
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  6030   000EC6  C0F0  F08B         	movff	_width,efgtoa@w
  6031   000ECA  C0F1  F08C         	movff	_width+1,efgtoa@w+1
  6032   000ECE                     
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  6035   000ECE  519B               	movf	efgtoa@sign& (0+255),w,b
  6036   000ED0  B4D8               	btfsc	status,2,c
  6037   000ED2  EF6D  F007         	goto	u3701
  6038   000ED6  EF6F  F007         	goto	u3700
  6039   000EDA                     u3701:
  6040   000EDA  EF83  F007         	goto	l3974
  6041   000EDE                     u3700:
  6042   000EDE                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  6045   000EDE  519B               	movf	efgtoa@sign& (0+255),w,b
  6046   000EE0  A4D8               	btfss	status,2,c
  6047   000EE2  EF75  F007         	goto	u3711
  6048   000EE6  EF77  F007         	goto	u3710
  6049   000EEA                     u3711:
  6050   000EEA  EF7D  F007         	goto	l3970
  6051   000EEE                     u3710:
  6052   000EEE                     
  6053                           ; BSR set to: 0
  6054   000EEE  0E00               	movlw	0
  6055   000EF0  6F81               	movwf	(_efgtoa$2583+1)& (0+255),b
  6056   000EF2  0E2B               	movlw	43
  6057   000EF4  6F80               	movwf	_efgtoa$2583& (0+255),b
  6058   000EF6  EF81  F007         	goto	l3972
  6059   000EFA                     l3970:
  6060                           
  6061                           ; BSR set to: 0
  6062   000EFA  0E00               	movlw	0
  6063   000EFC  6F81               	movwf	(_efgtoa$2583+1)& (0+255),b
  6064   000EFE  0E2D               	movlw	45
  6065   000F00  6F80               	movwf	_efgtoa$2583& (0+255),b
  6066   000F02                     l3972:
  6067                           
  6068                           ; BSR set to: 0
  6069   000F02  C080  F09B         	movff	_efgtoa$2583,efgtoa@sign
  6070   000F06                     l3974:
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6074   000F06  C09E  F001         	movff	efgtoa@g,___fpclassifyf@x
  6075   000F0A  C09F  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6076   000F0E  C0A0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6077   000F12  C0A1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6078   000F16  EC8D  F01E         	call	___fpclassifyf	;wreg free
  6079   000F1A  0401               	decf	?___fpclassifyf^0,w,c
  6080   000F1C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6081   000F1E  A4D8               	btfss	status,2,c
  6082   000F20  EF94  F007         	goto	u3721
  6083   000F24  EF96  F007         	goto	u3720
  6084   000F28                     u3721:
  6085   000F28  EFC9  F007         	goto	l3992
  6086   000F2C                     u3720:
  6087   000F2C                     
  6088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  6089   000F2C  0100               	movlb	0	; () banked
  6090   000F2E  519B               	movf	efgtoa@sign& (0+255),w,b
  6091   000F30  B4D8               	btfsc	status,2,c
  6092   000F32  EF9D  F007         	goto	u3731
  6093   000F36  EF9F  F007         	goto	u3730
  6094   000F3A                     u3731:
  6095   000F3A  EFA8  F007         	goto	l3984
  6096   000F3E                     u3730:
  6097   000F3E                     
  6098                           ; BSR set to: 0
  6099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  6100   000F3E  C09B  F12C         	movff	efgtoa@sign,_dbuf
  6101   000F42                     
  6102                           ; BSR set to: 0
  6103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  6104   000F42  078B               	decf	efgtoa@w& (0+255),f,b
  6105   000F44  A0D8               	btfss	status,0,c
  6106   000F46  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  6107   000F48                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  6110   000F48  0E00               	movlw	0
  6111   000F4A  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  6112   000F4C  0E01               	movlw	1
  6113   000F4E  6F9C               	movwf	efgtoa@n& (0+255),b
  6114   000F50                     l3984:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  6118   000F50  0E2C               	movlw	low _dbuf
  6119   000F52  259C               	addwf	efgtoa@n& (0+255),w,b
  6120   000F54  6E01               	movwf	strcpy@dest^0,c
  6121   000F56  0E01               	movlw	high _dbuf
  6122   000F58  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6123   000F5A  6E02               	movwf	(strcpy@dest+1)^0,c
  6124   000F5C  0E63               	movlw	low STR_11
  6125   000F5E  6E03               	movwf	strcpy@src^0,c
  6126   000F60  0E0E               	movlw	high STR_11
  6127   000F62  6E04               	movwf	(strcpy@src+1)^0,c
  6128   000F64  ECC4  F024         	call	_strcpy	;wreg free
  6129   000F68                     l3986:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6132   000F68  0100               	movlb	0	; () banked
  6133   000F6A  0EFD               	movlw	253
  6134   000F6C  278B               	addwf	efgtoa@w& (0+255),f,b
  6135   000F6E  0EFF               	movlw	255
  6136   000F70  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6137   000F72                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6140   000F72  C071  F011         	movff	efgtoa@fp,pad@fp
  6141   000F76  C072  F012         	movff	efgtoa@fp+1,pad@fp+1
  6142   000F7A  0E2C               	movlw	low _dbuf
  6143   000F7C  6E13               	movwf	pad@buf^0,c
  6144   000F7E  0E01               	movlw	high _dbuf
  6145   000F80  6E14               	movwf	(pad@buf+1)^0,c
  6146   000F82  C08B  F015         	movff	efgtoa@w,pad@p
  6147   000F86  C08C  F016         	movff	efgtoa@w+1,pad@p+1
  6148   000F8A  ECAD  F022         	call	_pad	;wreg free
  6149   000F8E  EF34  F00C         	goto	l1261
  6150   000F92                     l3992:
  6151                           
  6152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6153   000F92  C09E  F001         	movff	efgtoa@g,___fpclassifyf@x
  6154   000F96  C09F  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6155   000F9A  C0A0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6156   000F9E  C0A1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6157   000FA2  EC8D  F01E         	call	___fpclassifyf	;wreg free
  6158   000FA6  5001               	movf	?___fpclassifyf^0,w,c
  6159   000FA8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6160   000FAA  A4D8               	btfss	status,2,c
  6161   000FAC  EFDA  F007         	goto	u3741
  6162   000FB0  EFDC  F007         	goto	u3740
  6163   000FB4                     u3741:
  6164   000FB4  EFFC  F007         	goto	l4010
  6165   000FB8                     u3740:
  6166   000FB8                     
  6167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  6168   000FB8  0100               	movlb	0	; () banked
  6169   000FBA  519B               	movf	efgtoa@sign& (0+255),w,b
  6170   000FBC  B4D8               	btfsc	status,2,c
  6171   000FBE  EFE3  F007         	goto	u3751
  6172   000FC2  EFE5  F007         	goto	u3750
  6173   000FC6                     u3751:
  6174   000FC6  EFEE  F007         	goto	l4002
  6175   000FCA                     u3750:
  6176   000FCA                     
  6177                           ; BSR set to: 0
  6178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  6179   000FCA  C09B  F12C         	movff	efgtoa@sign,_dbuf
  6180   000FCE                     
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  6183   000FCE  078B               	decf	efgtoa@w& (0+255),f,b
  6184   000FD0  A0D8               	btfss	status,0,c
  6185   000FD2  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  6186   000FD4                     
  6187                           ; BSR set to: 0
  6188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  6189   000FD4  0E00               	movlw	0
  6190   000FD6  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  6191   000FD8  0E01               	movlw	1
  6192   000FDA  6F9C               	movwf	efgtoa@n& (0+255),b
  6193   000FDC                     l4002:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  6197   000FDC  0E2C               	movlw	low _dbuf
  6198   000FDE  259C               	addwf	efgtoa@n& (0+255),w,b
  6199   000FE0  6E01               	movwf	strcpy@dest^0,c
  6200   000FE2  0E01               	movlw	high _dbuf
  6201   000FE4  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6202   000FE6  6E02               	movwf	(strcpy@dest+1)^0,c
  6203   000FE8  0E67               	movlw	low STR_14
  6204   000FEA  6E03               	movwf	strcpy@src^0,c
  6205   000FEC  0E0E               	movlw	high STR_14
  6206   000FEE  6E04               	movwf	(strcpy@src+1)^0,c
  6207   000FF0  ECC4  F024         	call	_strcpy	;wreg free
  6208   000FF4  EFB4  F007         	goto	l3986
  6209   000FF8                     l4010:
  6210                           
  6211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  6212   000FF8  0E00               	movlw	0
  6213   000FFA  0100               	movlb	0	; () banked
  6214   000FFC  6FA2               	movwf	efgtoa@u& (0+255),b
  6215   000FFE  0E00               	movlw	0
  6216   001000  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  6217   001002  0E80               	movlw	128
  6218   001004  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  6219   001006  0E3F               	movlw	63
  6220   001008  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  6223   00100A  0E00               	movlw	0
  6224   00100C  6F8A               	movwf	(efgtoa@e+1)& (0+255),b
  6225   00100E  0E00               	movlw	0
  6226   001010  6F89               	movwf	efgtoa@e& (0+255),b
  6227   001012                     
  6228                           ; BSR set to: 0
  6229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  6230   001012  C09E  F001         	movff	efgtoa@g,___fleq@ff1
  6231   001016  C09F  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6232   00101A  C0A0  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6233   00101E  C0A1  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6234   001022  0E00               	movlw	0
  6235   001024  6E05               	movwf	___fleq@ff2^0,c
  6236   001026  0E00               	movlw	0
  6237   001028  6E06               	movwf	(___fleq@ff2+1)^0,c
  6238   00102A  0E00               	movlw	0
  6239   00102C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6240   00102E  0E00               	movlw	0
  6241   001030  6E08               	movwf	(___fleq@ff2+3)^0,c
  6242   001032  ECCD  F01F         	call	___fleq	;wreg free
  6243   001036  B0D8               	btfsc	status,0,c
  6244   001038  EF20  F008         	goto	u3761
  6245   00103C  EF22  F008         	goto	u3760
  6246   001040                     u3761:
  6247   001040  EF01  F009         	goto	l1264
  6248   001044                     u3760:
  6249   001044  EF2F  F008         	goto	l4018
  6250   001048                     l1266:
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  6253   001048  C08D  F0A2         	movff	efgtoa@ou,efgtoa@u
  6254   00104C  C08E  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  6255   001050  C08F  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  6256   001054  C090  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  6257   001058                     
  6258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  6259   001058  0100               	movlb	0	; () banked
  6260   00105A  4B89               	infsnz	efgtoa@e& (0+255),f,b
  6261   00105C  2B8A               	incf	(efgtoa@e+1)& (0+255),f,b
  6262   00105E                     l4018:
  6263                           
  6264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6265   00105E  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  6266   001062  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  6267   001066  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  6268   00106A  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  6269   00106E  0E00               	movlw	0
  6270   001070  6E4F               	movwf	___flmul@a^0,c
  6271   001072  0E00               	movlw	0
  6272   001074  6E50               	movwf	(___flmul@a+1)^0,c
  6273   001076  0E20               	movlw	32
  6274   001078  6E51               	movwf	(___flmul@a+2)^0,c
  6275   00107A  0E41               	movlw	65
  6276   00107C  6E52               	movwf	(___flmul@a+3)^0,c
  6277   00107E  ECBA  F014         	call	___flmul	;wreg free
  6278   001082  C04B  F08D         	movff	?___flmul,efgtoa@ou
  6279   001086  C04C  F08E         	movff	?___flmul+1,efgtoa@ou+1
  6280   00108A  C04D  F08F         	movff	?___flmul+2,efgtoa@ou+2
  6281   00108E  C04E  F090         	movff	?___flmul+3,efgtoa@ou+3
  6282   001092  0100               	movlb	0	; () banked
  6283   001094  518D               	movf	efgtoa@ou& (0+255),w,b
  6284   001096  5D9E               	subwf	efgtoa@g& (0+255),w,b
  6285   001098  6E01               	movwf	labs@a^0,c
  6286   00109A  518E               	movf	(efgtoa@ou+1)& (0+255),w,b
  6287   00109C  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6288   00109E  6E02               	movwf	(labs@a+1)^0,c
  6289   0010A0  518F               	movf	(efgtoa@ou+2)& (0+255),w,b
  6290   0010A2  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6291   0010A4  6E03               	movwf	(labs@a+2)^0,c
  6292   0010A6  5190               	movf	(efgtoa@ou+3)& (0+255),w,b
  6293   0010A8  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6294   0010AA  6E04               	movwf	(labs@a+3)^0,c
  6295   0010AC  EC24  F023         	call	_labs	;wreg free
  6296   0010B0  BE04               	btfsc	(?_labs+3)^0,7,c
  6297   0010B2  EF66  F008         	goto	u3771
  6298   0010B6  5004               	movf	(?_labs+3)^0,w,c
  6299   0010B8  1003               	iorwf	(?_labs+2)^0,w,c
  6300   0010BA  1002               	iorwf	(?_labs+1)^0,w,c
  6301   0010BC  E109               	bnz	u3770
  6302   0010BE  0E02               	movlw	2
  6303   0010C0  5C01               	subwf	?_labs^0,w,c
  6304   0010C2  A0D8               	btfss	status,0,c
  6305   0010C4  EF66  F008         	goto	u3771
  6306   0010C8  EF68  F008         	goto	u3770
  6307   0010CC                     u3771:
  6308   0010CC  EF24  F008         	goto	l1266
  6309   0010D0                     u3770:
  6310   0010D0  C08D  F057         	movff	efgtoa@ou,___flge@ff1
  6311   0010D4  C08E  F058         	movff	efgtoa@ou+1,___flge@ff1+1
  6312   0010D8  C08F  F059         	movff	efgtoa@ou+2,___flge@ff1+2
  6313   0010DC  C090  F05A         	movff	efgtoa@ou+3,___flge@ff1+3
  6314   0010E0  C09E  F05B         	movff	efgtoa@g,___flge@ff2
  6315   0010E4  C09F  F05C         	movff	efgtoa@g+1,___flge@ff2+1
  6316   0010E8  C0A0  F05D         	movff	efgtoa@g+2,___flge@ff2+2
  6317   0010EC  C0A1  F05E         	movff	efgtoa@g+3,___flge@ff2+3
  6318   0010F0  EC0A  F01E         	call	___flge	;wreg free
  6319   0010F4  A0D8               	btfss	status,0,c
  6320   0010F6  EF7F  F008         	goto	u3781
  6321   0010FA  EF81  F008         	goto	u3780
  6322   0010FE                     u3781:
  6323   0010FE  EF24  F008         	goto	l1266
  6324   001102                     u3780:
  6325   001102                     
  6326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  6327   001102  0100               	movlb	0	; () banked
  6328   001104  51A2               	movf	efgtoa@u& (0+255),w,b
  6329   001106  5D9E               	subwf	efgtoa@g& (0+255),w,b
  6330   001108  6E01               	movwf	labs@a^0,c
  6331   00110A  51A3               	movf	(efgtoa@u+1)& (0+255),w,b
  6332   00110C  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6333   00110E  6E02               	movwf	(labs@a+1)^0,c
  6334   001110  51A4               	movf	(efgtoa@u+2)& (0+255),w,b
  6335   001112  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6336   001114  6E03               	movwf	(labs@a+2)^0,c
  6337   001116  51A5               	movf	(efgtoa@u+3)& (0+255),w,b
  6338   001118  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6339   00111A  6E04               	movwf	(labs@a+3)^0,c
  6340   00111C  EC24  F023         	call	_labs	;wreg free
  6341   001120  BE04               	btfsc	(?_labs+3)^0,7,c
  6342   001122  EFA0  F008         	goto	u3790
  6343   001126  5004               	movf	(?_labs+3)^0,w,c
  6344   001128  1003               	iorwf	(?_labs+2)^0,w,c
  6345   00112A  1002               	iorwf	(?_labs+1)^0,w,c
  6346   00112C  E107               	bnz	u3791
  6347   00112E  0E02               	movlw	2
  6348   001130  5C01               	subwf	?_labs^0,w,c
  6349   001132  B0D8               	btfsc	status,0,c
  6350   001134  EF9E  F008         	goto	u3791
  6351   001138  EFA0  F008         	goto	u3790
  6352   00113C                     u3791:
  6353   00113C  EFE8  F008         	goto	l4036
  6354   001140                     u3790:
  6355   001140                     l4026:
  6356                           
  6357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  6358   001140  C0A2  F09E         	movff	efgtoa@u,efgtoa@g
  6359   001144  C0A3  F09F         	movff	efgtoa@u+1,efgtoa@g+1
  6360   001148  C0A4  F0A0         	movff	efgtoa@u+2,efgtoa@g+2
  6361   00114C  C0A5  F0A1         	movff	efgtoa@u+3,efgtoa@g+3
  6362                           
  6363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  6364   001150  EF01  F009         	goto	l1264
  6365   001154                     l4028:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  6368   001154  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  6369   001158  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  6370   00115C  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  6371   001160  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  6372   001164  0E00               	movlw	0
  6373   001166  6E36               	movwf	___fldiv@a^0,c
  6374   001168  0E00               	movlw	0
  6375   00116A  6E37               	movwf	(___fldiv@a+1)^0,c
  6376   00116C  0E20               	movlw	32
  6377   00116E  6E38               	movwf	(___fldiv@a+2)^0,c
  6378   001170  0E41               	movlw	65
  6379   001172  6E39               	movwf	(___fldiv@a+3)^0,c
  6380   001174  ECD0  F016         	call	___fldiv	;wreg free
  6381   001178  C032  F0A2         	movff	?___fldiv,efgtoa@u
  6382   00117C  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  6383   001180  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  6384   001184  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  6385   001188                     
  6386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  6387   001188  0100               	movlb	0	; () banked
  6388   00118A  0789               	decf	efgtoa@e& (0+255),f,b
  6389   00118C  A0D8               	btfss	status,0,c
  6390   00118E  078A               	decf	(efgtoa@e+1)& (0+255),f,b
  6391   001190                     
  6392                           ; BSR set to: 0
  6393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  6394   001190  51A2               	movf	efgtoa@u& (0+255),w,b
  6395   001192  5D9E               	subwf	efgtoa@g& (0+255),w,b
  6396   001194  6E01               	movwf	labs@a^0,c
  6397   001196  51A3               	movf	(efgtoa@u+1)& (0+255),w,b
  6398   001198  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  6399   00119A  6E02               	movwf	(labs@a+1)^0,c
  6400   00119C  51A4               	movf	(efgtoa@u+2)& (0+255),w,b
  6401   00119E  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  6402   0011A0  6E03               	movwf	(labs@a+2)^0,c
  6403   0011A2  51A5               	movf	(efgtoa@u+3)& (0+255),w,b
  6404   0011A4  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  6405   0011A6  6E04               	movwf	(labs@a+3)^0,c
  6406   0011A8  EC24  F023         	call	_labs	;wreg free
  6407   0011AC  BE04               	btfsc	(?_labs+3)^0,7,c
  6408   0011AE  EFE6  F008         	goto	u3800
  6409   0011B2  5004               	movf	(?_labs+3)^0,w,c
  6410   0011B4  1003               	iorwf	(?_labs+2)^0,w,c
  6411   0011B6  1002               	iorwf	(?_labs+1)^0,w,c
  6412   0011B8  E107               	bnz	u3801
  6413   0011BA  0E02               	movlw	2
  6414   0011BC  5C01               	subwf	?_labs^0,w,c
  6415   0011BE  B0D8               	btfsc	status,0,c
  6416   0011C0  EFE4  F008         	goto	u3801
  6417   0011C4  EFE6  F008         	goto	u3800
  6418   0011C8                     u3801:
  6419   0011C8  EFE8  F008         	goto	l4036
  6420   0011CC                     u3800:
  6421   0011CC  EFA0  F008         	goto	l4026
  6422   0011D0                     l4036:
  6423                           
  6424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  6425   0011D0  C09E  F057         	movff	efgtoa@g,___flge@ff1
  6426   0011D4  C09F  F058         	movff	efgtoa@g+1,___flge@ff1+1
  6427   0011D8  C0A0  F059         	movff	efgtoa@g+2,___flge@ff1+2
  6428   0011DC  C0A1  F05A         	movff	efgtoa@g+3,___flge@ff1+3
  6429   0011E0  C0A2  F05B         	movff	efgtoa@u,___flge@ff2
  6430   0011E4  C0A3  F05C         	movff	efgtoa@u+1,___flge@ff2+1
  6431   0011E8  C0A4  F05D         	movff	efgtoa@u+2,___flge@ff2+2
  6432   0011EC  C0A5  F05E         	movff	efgtoa@u+3,___flge@ff2+3
  6433   0011F0  EC0A  F01E         	call	___flge	;wreg free
  6434   0011F4  A0D8               	btfss	status,0,c
  6435   0011F6  EFFF  F008         	goto	u3811
  6436   0011FA  EF01  F009         	goto	u3810
  6437   0011FE                     u3811:
  6438   0011FE  EFAA  F008         	goto	l4028
  6439   001202                     u3810:
  6440   001202                     l1264:
  6441                           
  6442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  6443   001202  C077  F083         	movff	efgtoa@c,efgtoa@mode
  6444                           
  6445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  6446   001206  C083  F084         	movff	efgtoa@mode,efgtoa@nmode
  6447   00120A                     
  6448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  6449   00120A  0100               	movlb	0	; () banked
  6450   00120C  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6451   00120E  EF0B  F009         	goto	u3821
  6452   001212  EF0D  F009         	goto	u3820
  6453   001216                     u3821:
  6454   001216  EF13  F009         	goto	l4042
  6455   00121A                     u3820:
  6456   00121A                     
  6457                           ; BSR set to: 0
  6458   00121A  C0F2  F07C         	movff	_prec,efgtoa@p
  6459   00121E  C0F3  F07D         	movff	_prec+1,efgtoa@p+1
  6460   001222  EF17  F009         	goto	l4044
  6461   001226                     l4042:
  6462                           
  6463                           ; BSR set to: 0
  6464   001226  0E00               	movlw	0
  6465   001228  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6466   00122A  0E06               	movlw	6
  6467   00122C  6F7C               	movwf	efgtoa@p& (0+255),b
  6468   00122E                     l4044:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  6472   00122E  C07C  F087         	movff	efgtoa@p,efgtoa@m
  6473   001232  C07D  F088         	movff	efgtoa@p+1,efgtoa@m+1
  6474   001236                     
  6475                           ; BSR set to: 0
  6476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  6477   001236  4B87               	infsnz	efgtoa@m& (0+255),f,b
  6478   001238  2B88               	incf	(efgtoa@m+1)& (0+255),f,b
  6479   00123A                     
  6480                           ; BSR set to: 0
  6481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  6482   00123A  0E66               	movlw	102
  6483   00123C  1984               	xorwf	efgtoa@nmode& (0+255),w,b
  6484   00123E  A4D8               	btfss	status,2,c
  6485   001240  EF24  F009         	goto	u3831
  6486   001244  EF26  F009         	goto	u3830
  6487   001248                     u3831:
  6488   001248  EF46  F009         	goto	l4058
  6489   00124C                     u3830:
  6490   00124C                     
  6491                           ; BSR set to: 0
  6492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  6493   00124C  BF8A               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6494   00124E  EF2D  F009         	goto	u3840
  6495   001252  EF2B  F009         	goto	u3841
  6496   001256                     u3841:
  6497   001256  EF39  F009         	goto	l4054
  6498   00125A                     u3840:
  6499   00125A                     
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  6502   00125A  0E00               	movlw	0
  6503   00125C  6FA2               	movwf	efgtoa@u& (0+255),b
  6504   00125E  0E00               	movlw	0
  6505   001260  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  6506   001262  0E80               	movlw	128
  6507   001264  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  6508   001266  0E3F               	movlw	63
  6509   001268  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  6510                           
  6511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  6512   00126A  0E00               	movlw	0
  6513   00126C  6F8A               	movwf	(efgtoa@e+1)& (0+255),b
  6514   00126E  0E00               	movlw	0
  6515   001270  6F89               	movwf	efgtoa@e& (0+255),b
  6516   001272                     l4054:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  6520   001272  0E67               	movlw	103
  6521   001274  1983               	xorwf	efgtoa@mode& (0+255),w,b
  6522   001276  B4D8               	btfsc	status,2,c
  6523   001278  EF40  F009         	goto	u3851
  6524   00127C  EF42  F009         	goto	u3850
  6525   001280                     u3851:
  6526   001280  EF46  F009         	goto	l4058
  6527   001284                     u3850:
  6528   001284                     
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  6531   001284  5189               	movf	efgtoa@e& (0+255),w,b
  6532   001286  2787               	addwf	efgtoa@m& (0+255),f,b
  6533   001288  518A               	movf	(efgtoa@e+1)& (0+255),w,b
  6534   00128A  2388               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6535   00128C                     l4058:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  6539   00128C  0E00               	movlw	0
  6540   00128E  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  6541   001290  0E00               	movlw	0
  6542   001292  6F91               	movwf	efgtoa@i& (0+255),b
  6543   001294                     
  6544                           ; BSR set to: 0
  6545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  6546   001294  C09E  F093         	movff	efgtoa@g,efgtoa@h
  6547   001298  C09F  F094         	movff	efgtoa@g+1,efgtoa@h+1
  6548   00129C  C0A0  F095         	movff	efgtoa@g+2,efgtoa@h+2
  6549   0012A0  C0A1  F096         	movff	efgtoa@g+3,efgtoa@h+3
  6550   0012A4                     
  6551                           ; BSR set to: 0
  6552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  6553   0012A4  C0A2  F08D         	movff	efgtoa@u,efgtoa@ou
  6554   0012A8  C0A3  F08E         	movff	efgtoa@u+1,efgtoa@ou+1
  6555   0012AC  C0A4  F08F         	movff	efgtoa@u+2,efgtoa@ou+2
  6556   0012B0  C0A5  F090         	movff	efgtoa@u+3,efgtoa@ou+3
  6557                           
  6558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6559   0012B4  EFD7  F009         	goto	l4072
  6560   0012B8                     l4064:
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  6564   0012B8  C093  F032         	movff	efgtoa@h,___fldiv@b
  6565   0012BC  C094  F033         	movff	efgtoa@h+1,___fldiv@b+1
  6566   0012C0  C095  F034         	movff	efgtoa@h+2,___fldiv@b+2
  6567   0012C4  C096  F035         	movff	efgtoa@h+3,___fldiv@b+3
  6568   0012C8  C0A2  F036         	movff	efgtoa@u,___fldiv@a
  6569   0012CC  C0A3  F037         	movff	efgtoa@u+1,___fldiv@a+1
  6570   0012D0  C0A4  F038         	movff	efgtoa@u+2,___fldiv@a+2
  6571   0012D4  C0A5  F039         	movff	efgtoa@u+3,___fldiv@a+3
  6572   0012D8  ECD0  F016         	call	___fldiv	;wreg free
  6573   0012DC  C032  F04B         	movff	?___fldiv,floorf@x
  6574   0012E0  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  6575   0012E4  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  6576   0012E8  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  6577   0012EC  ECB5  F019         	call	_floorf	;wreg free
  6578   0012F0  C04B  F097         	movff	?_floorf,efgtoa@l
  6579   0012F4  C04C  F098         	movff	?_floorf+1,efgtoa@l+1
  6580   0012F8  C04D  F099         	movff	?_floorf+2,efgtoa@l+2
  6581   0012FC  C04E  F09A         	movff	?_floorf+3,efgtoa@l+3
  6582                           
  6583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  6584   001300  C097  F001         	movff	efgtoa@l,___fltol@f1
  6585   001304  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6586   001308  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6587   00130C  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6588   001310  EC87  F01D         	call	___fltol	;wreg free
  6589   001314  C001  F085         	movff	?___fltol,efgtoa@d
  6590   001318  C002  F086         	movff	?___fltol+1,efgtoa@d+1
  6591   00131C                     
  6592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  6593   00131C  C093  F02A         	movff	efgtoa@h,___flsub@b
  6594   001320  C094  F02B         	movff	efgtoa@h+1,___flsub@b+1
  6595   001324  C095  F02C         	movff	efgtoa@h+2,___flsub@b+2
  6596   001328  C096  F02D         	movff	efgtoa@h+3,___flsub@b+3
  6597   00132C  C097  F04F         	movff	efgtoa@l,___flmul@a
  6598   001330  C098  F050         	movff	efgtoa@l+1,___flmul@a+1
  6599   001334  C099  F051         	movff	efgtoa@l+2,___flmul@a+2
  6600   001338  C09A  F052         	movff	efgtoa@l+3,___flmul@a+3
  6601   00133C  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  6602   001340  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  6603   001344  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  6604   001348  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  6605   00134C  ECBA  F014         	call	___flmul	;wreg free
  6606   001350  C04B  F02E         	movff	?___flmul,___flsub@a
  6607   001354  C04C  F02F         	movff	?___flmul+1,___flsub@a+1
  6608   001358  C04D  F030         	movff	?___flmul+2,___flsub@a+2
  6609   00135C  C04E  F031         	movff	?___flmul+3,___flsub@a+3
  6610   001360  ECA1  F024         	call	___flsub	;wreg free
  6611   001364  C02A  F093         	movff	?___flsub,efgtoa@h
  6612   001368  C02B  F094         	movff	?___flsub+1,efgtoa@h+1
  6613   00136C  C02C  F095         	movff	?___flsub+2,efgtoa@h+2
  6614   001370  C02D  F096         	movff	?___flsub+3,efgtoa@h+3
  6615   001374                     
  6616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  6617   001374  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  6618   001378  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  6619   00137C  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  6620   001380  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  6621   001384  0E00               	movlw	0
  6622   001386  6E36               	movwf	___fldiv@a^0,c
  6623   001388  0E00               	movlw	0
  6624   00138A  6E37               	movwf	(___fldiv@a+1)^0,c
  6625   00138C  0E20               	movlw	32
  6626   00138E  6E38               	movwf	(___fldiv@a+2)^0,c
  6627   001390  0E41               	movlw	65
  6628   001392  6E39               	movwf	(___fldiv@a+3)^0,c
  6629   001394  ECD0  F016         	call	___fldiv	;wreg free
  6630   001398  C032  F0A2         	movff	?___fldiv,efgtoa@u
  6631   00139C  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  6632   0013A0  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  6633   0013A4  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  6634   0013A8                     
  6635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  6636   0013A8  0100               	movlb	0	; () banked
  6637   0013AA  4B91               	infsnz	efgtoa@i& (0+255),f,b
  6638   0013AC  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  6639   0013AE                     l4072:
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  6643   0013AE  5187               	movf	efgtoa@m& (0+255),w,b
  6644   0013B0  5D91               	subwf	efgtoa@i& (0+255),w,b
  6645   0013B2  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  6646   0013B4  0A80               	xorlw	128
  6647   0013B6  6F78               	movwf	??_efgtoa& (0+255),b
  6648   0013B8  5188               	movf	(efgtoa@m+1)& (0+255),w,b
  6649   0013BA  0A80               	xorlw	128
  6650   0013BC  5978               	subwfb	??_efgtoa& (0+255),w,b
  6651   0013BE  A0D8               	btfss	status,0,c
  6652   0013C0  EFE4  F009         	goto	u3861
  6653   0013C4  EFE6  F009         	goto	u3860
  6654   0013C8                     u3861:
  6655   0013C8  EF5C  F009         	goto	l4064
  6656   0013CC                     u3860:
  6657   0013CC                     
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  6660   0013CC  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  6661   0013D0  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  6662   0013D4  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  6663   0013D8  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  6664   0013DC  0E00               	movlw	0
  6665   0013DE  6E4F               	movwf	___flmul@a^0,c
  6666   0013E0  0E00               	movlw	0
  6667   0013E2  6E50               	movwf	(___flmul@a+1)^0,c
  6668   0013E4  0EA0               	movlw	160
  6669   0013E6  6E51               	movwf	(___flmul@a+2)^0,c
  6670   0013E8  0E40               	movlw	64
  6671   0013EA  6E52               	movwf	(___flmul@a+3)^0,c
  6672   0013EC  ECBA  F014         	call	___flmul	;wreg free
  6673   0013F0  C04B  F097         	movff	?___flmul,efgtoa@l
  6674   0013F4  C04C  F098         	movff	?___flmul+1,efgtoa@l+1
  6675   0013F8  C04D  F099         	movff	?___flmul+2,efgtoa@l+2
  6676   0013FC  C04E  F09A         	movff	?___flmul+3,efgtoa@l+3
  6677   001400                     
  6678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  6679   001400  C093  F057         	movff	efgtoa@h,___flge@ff1
  6680   001404  C094  F058         	movff	efgtoa@h+1,___flge@ff1+1
  6681   001408  C095  F059         	movff	efgtoa@h+2,___flge@ff1+2
  6682   00140C  C096  F05A         	movff	efgtoa@h+3,___flge@ff1+3
  6683   001410  C097  F05B         	movff	efgtoa@l,___flge@ff2
  6684   001414  C098  F05C         	movff	efgtoa@l+1,___flge@ff2+1
  6685   001418  C099  F05D         	movff	efgtoa@l+2,___flge@ff2+2
  6686   00141C  C09A  F05E         	movff	efgtoa@l+3,___flge@ff2+3
  6687   001420  EC0A  F01E         	call	___flge	;wreg free
  6688   001424  B0D8               	btfsc	status,0,c
  6689   001426  EF17  F00A         	goto	u3871
  6690   00142A  EF19  F00A         	goto	u3870
  6691   00142E                     u3871:
  6692   00142E  EF24  F00A         	goto	l4080
  6693   001432                     u3870:
  6694   001432                     
  6695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  6696   001432  0E00               	movlw	0
  6697   001434  0100               	movlb	0	; () banked
  6698   001436  6F97               	movwf	efgtoa@l& (0+255),b
  6699   001438  0E00               	movlw	0
  6700   00143A  6F98               	movwf	(efgtoa@l+1)& (0+255),b
  6701   00143C  0E00               	movlw	0
  6702   00143E  6F99               	movwf	(efgtoa@l+2)& (0+255),b
  6703   001440  0E00               	movlw	0
  6704   001442  6F9A               	movwf	(efgtoa@l+3)& (0+255),b
  6705                           
  6706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  6707   001444  EF4D  F00A         	goto	l4086
  6708   001448                     l4080:
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  6711   001448  C093  F001         	movff	efgtoa@h,___fleq@ff1
  6712   00144C  C094  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6713   001450  C095  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6714   001454  C096  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6715   001458  C097  F005         	movff	efgtoa@l,___fleq@ff2
  6716   00145C  C098  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6717   001460  C099  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6718   001464  C09A  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6719   001468  ECCD  F01F         	call	___fleq	;wreg free
  6720   00146C  A0D8               	btfss	status,0,c
  6721   00146E  EF3B  F00A         	goto	u3881
  6722   001472  EF3D  F00A         	goto	u3880
  6723   001476                     u3881:
  6724   001476  EF4D  F00A         	goto	l4086
  6725   00147A                     u3880:
  6726   00147A  0100               	movlb	0	; () banked
  6727   00147C  B185               	btfsc	efgtoa@d& (0+255),0,b
  6728   00147E  EF43  F00A         	goto	u3891
  6729   001482  EF45  F00A         	goto	u3890
  6730   001486                     u3891:
  6731   001486  EF4D  F00A         	goto	l4086
  6732   00148A                     u3890:
  6733   00148A                     
  6734                           ; BSR set to: 0
  6735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  6736   00148A  0E00               	movlw	0
  6737   00148C  6F97               	movwf	efgtoa@l& (0+255),b
  6738   00148E  0E00               	movlw	0
  6739   001490  6F98               	movwf	(efgtoa@l+1)& (0+255),b
  6740   001492  0E00               	movlw	0
  6741   001494  6F99               	movwf	(efgtoa@l+2)& (0+255),b
  6742   001496  0E00               	movlw	0
  6743   001498  6F9A               	movwf	(efgtoa@l+3)& (0+255),b
  6744   00149A                     l4086:
  6745                           
  6746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  6747   00149A  C09E  F01A         	movff	efgtoa@g,___fladd@b
  6748   00149E  C09F  F01B         	movff	efgtoa@g+1,___fladd@b+1
  6749   0014A2  C0A0  F01C         	movff	efgtoa@g+2,___fladd@b+2
  6750   0014A6  C0A1  F01D         	movff	efgtoa@g+3,___fladd@b+3
  6751   0014AA  C097  F01E         	movff	efgtoa@l,___fladd@a
  6752   0014AE  C098  F01F         	movff	efgtoa@l+1,___fladd@a+1
  6753   0014B2  C099  F020         	movff	efgtoa@l+2,___fladd@a+2
  6754   0014B6  C09A  F021         	movff	efgtoa@l+3,___fladd@a+3
  6755   0014BA  EC5A  F012         	call	___fladd	;wreg free
  6756   0014BE  C01A  F093         	movff	?___fladd,efgtoa@h
  6757   0014C2  C01B  F094         	movff	?___fladd+1,efgtoa@h+1
  6758   0014C6  C01C  F095         	movff	?___fladd+2,efgtoa@h+2
  6759   0014CA  C01D  F096         	movff	?___fladd+3,efgtoa@h+3
  6760   0014CE                     
  6761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  6762   0014CE  C093  F057         	movff	efgtoa@h,___flge@ff1
  6763   0014D2  C094  F058         	movff	efgtoa@h+1,___flge@ff1+1
  6764   0014D6  C095  F059         	movff	efgtoa@h+2,___flge@ff1+2
  6765   0014DA  C096  F05A         	movff	efgtoa@h+3,___flge@ff1+3
  6766   0014DE  0E00               	movlw	0
  6767   0014E0  6E4F               	movwf	___flmul@a^0,c
  6768   0014E2  0E00               	movlw	0
  6769   0014E4  6E50               	movwf	(___flmul@a+1)^0,c
  6770   0014E6  0E20               	movlw	32
  6771   0014E8  6E51               	movwf	(___flmul@a+2)^0,c
  6772   0014EA  0E41               	movlw	65
  6773   0014EC  6E52               	movwf	(___flmul@a+3)^0,c
  6774   0014EE  C08D  F04B         	movff	efgtoa@ou,___flmul@b
  6775   0014F2  C08E  F04C         	movff	efgtoa@ou+1,___flmul@b+1
  6776   0014F6  C08F  F04D         	movff	efgtoa@ou+2,___flmul@b+2
  6777   0014FA  C090  F04E         	movff	efgtoa@ou+3,___flmul@b+3
  6778   0014FE  ECBA  F014         	call	___flmul	;wreg free
  6779   001502  C04B  F05B         	movff	?___flmul,___flge@ff2
  6780   001506  C04C  F05C         	movff	?___flmul+1,___flge@ff2+1
  6781   00150A  C04D  F05D         	movff	?___flmul+2,___flge@ff2+2
  6782   00150E  C04E  F05E         	movff	?___flmul+3,___flge@ff2+3
  6783   001512  EC0A  F01E         	call	___flge	;wreg free
  6784   001516  A0D8               	btfss	status,0,c
  6785   001518  EF90  F00A         	goto	u3901
  6786   00151C  EF92  F00A         	goto	u3900
  6787   001520                     u3901:
  6788   001520  EFBB  F00A         	goto	l4098
  6789   001524                     u3900:
  6790   001524                     
  6791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  6792   001524  0100               	movlb	0	; () banked
  6793   001526  4B89               	infsnz	efgtoa@e& (0+255),f,b
  6794   001528  2B8A               	incf	(efgtoa@e+1)& (0+255),f,b
  6795   00152A                     
  6796                           ; BSR set to: 0
  6797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  6798   00152A  C08D  F04B         	movff	efgtoa@ou,___flmul@b
  6799   00152E  C08E  F04C         	movff	efgtoa@ou+1,___flmul@b+1
  6800   001532  C08F  F04D         	movff	efgtoa@ou+2,___flmul@b+2
  6801   001536  C090  F04E         	movff	efgtoa@ou+3,___flmul@b+3
  6802   00153A  0E00               	movlw	0
  6803   00153C  6E4F               	movwf	___flmul@a^0,c
  6804   00153E  0E00               	movlw	0
  6805   001540  6E50               	movwf	(___flmul@a+1)^0,c
  6806   001542  0E20               	movlw	32
  6807   001544  6E51               	movwf	(___flmul@a+2)^0,c
  6808   001546  0E41               	movlw	65
  6809   001548  6E52               	movwf	(___flmul@a+3)^0,c
  6810   00154A  ECBA  F014         	call	___flmul	;wreg free
  6811   00154E  C04B  F08D         	movff	?___flmul,efgtoa@ou
  6812   001552  C04C  F08E         	movff	?___flmul+1,efgtoa@ou+1
  6813   001556  C04D  F08F         	movff	?___flmul+2,efgtoa@ou+2
  6814   00155A  C04E  F090         	movff	?___flmul+3,efgtoa@ou+3
  6815   00155E                     
  6816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  6817   00155E  0E66               	movlw	102
  6818   001560  0100               	movlb	0	; () banked
  6819   001562  1984               	xorwf	efgtoa@nmode& (0+255),w,b
  6820   001564  A4D8               	btfss	status,2,c
  6821   001566  EFB7  F00A         	goto	u3911
  6822   00156A  EFB9  F00A         	goto	u3910
  6823   00156E                     u3911:
  6824   00156E  EFBB  F00A         	goto	l4098
  6825   001572                     u3910:
  6826   001572                     
  6827                           ; BSR set to: 0
  6828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  6829   001572  4B87               	infsnz	efgtoa@m& (0+255),f,b
  6830   001574  2B88               	incf	(efgtoa@m+1)& (0+255),f,b
  6831   001576                     l4098:
  6832                           
  6833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  6834   001576  C08D  F0A2         	movff	efgtoa@ou,efgtoa@u
  6835   00157A  C08E  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  6836   00157E  C08F  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  6837   001582  C090  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  6838   001586                     
  6839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  6840   001586  C089  F07A         	movff	efgtoa@e,efgtoa@ne
  6841   00158A  C08A  F07B         	movff	efgtoa@e+1,efgtoa@ne+1
  6842   00158E                     
  6843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  6844   00158E  0E00               	movlw	0
  6845   001590  0100               	movlb	0	; () banked
  6846   001592  6F82               	movwf	efgtoa@pp& (0+255),b
  6847   001594                     
  6848                           ; BSR set to: 0
  6849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  6850   001594  0E00               	movlw	0
  6851   001596  6F7F               	movwf	(efgtoa@t+1)& (0+255),b
  6852   001598  0E00               	movlw	0
  6853   00159A  6F7E               	movwf	efgtoa@t& (0+255),b
  6854   00159C                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  6857   00159C  0E00               	movlw	0
  6858   00159E  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  6859   0015A0  0E00               	movlw	0
  6860   0015A2  6F91               	movwf	efgtoa@i& (0+255),b
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6863   0015A4  EFB9  F00B         	goto	l4148
  6864   0015A8                     l4108:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  6868   0015A8  C093  F032         	movff	efgtoa@h,___fldiv@b
  6869   0015AC  C094  F033         	movff	efgtoa@h+1,___fldiv@b+1
  6870   0015B0  C095  F034         	movff	efgtoa@h+2,___fldiv@b+2
  6871   0015B4  C096  F035         	movff	efgtoa@h+3,___fldiv@b+3
  6872   0015B8  C0A2  F036         	movff	efgtoa@u,___fldiv@a
  6873   0015BC  C0A3  F037         	movff	efgtoa@u+1,___fldiv@a+1
  6874   0015C0  C0A4  F038         	movff	efgtoa@u+2,___fldiv@a+2
  6875   0015C4  C0A5  F039         	movff	efgtoa@u+3,___fldiv@a+3
  6876   0015C8  ECD0  F016         	call	___fldiv	;wreg free
  6877   0015CC  C032  F04B         	movff	?___fldiv,floorf@x
  6878   0015D0  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  6879   0015D4  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  6880   0015D8  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  6881   0015DC  ECB5  F019         	call	_floorf	;wreg free
  6882   0015E0  C04B  F097         	movff	?_floorf,efgtoa@l
  6883   0015E4  C04C  F098         	movff	?_floorf+1,efgtoa@l+1
  6884   0015E8  C04D  F099         	movff	?_floorf+2,efgtoa@l+2
  6885   0015EC  C04E  F09A         	movff	?_floorf+3,efgtoa@l+3
  6886                           
  6887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  6888   0015F0  C097  F001         	movff	efgtoa@l,___fltol@f1
  6889   0015F4  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6890   0015F8  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6891   0015FC  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6892   001600  EC87  F01D         	call	___fltol	;wreg free
  6893   001604  BE02               	btfsc	(?___fltol+1)^0,7,c
  6894   001606  EF10  F00B         	goto	u3920
  6895   00160A  5002               	movf	(?___fltol+1)^0,w,c
  6896   00160C  E107               	bnz	u3921
  6897   00160E  0E0A               	movlw	10
  6898   001610  5C01               	subwf	?___fltol^0,w,c
  6899   001612  B0D8               	btfsc	status,0,c
  6900   001614  EF0E  F00B         	goto	u3921
  6901   001618  EF10  F00B         	goto	u3920
  6902   00161C                     u3921:
  6903   00161C  EF20  F00B         	goto	l4112
  6904   001620                     u3920:
  6905   001620  C097  F001         	movff	efgtoa@l,___fltol@f1
  6906   001624  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  6907   001628  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  6908   00162C  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  6909   001630  EC87  F01D         	call	___fltol	;wreg free
  6910   001634  C001  F085         	movff	?___fltol,efgtoa@d
  6911   001638  C002  F086         	movff	?___fltol+1,efgtoa@d+1
  6912   00163C  EF25  F00B         	goto	l1294
  6913   001640                     l4112:
  6914   001640  0E00               	movlw	0
  6915   001642  0100               	movlb	0	; () banked
  6916   001644  6F86               	movwf	(efgtoa@d+1)& (0+255),b
  6917   001646  0E09               	movlw	9
  6918   001648  6F85               	movwf	efgtoa@d& (0+255),b
  6919   00164A                     l1294:
  6920                           
  6921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  6922   00164A  0100               	movlb	0	; () banked
  6923   00164C  5182               	movf	efgtoa@pp& (0+255),w,b
  6924   00164E  A4D8               	btfss	status,2,c
  6925   001650  EF2C  F00B         	goto	u3931
  6926   001654  EF2E  F00B         	goto	u3930
  6927   001658                     u3931:
  6928   001658  EF56  F00B         	goto	l4132
  6929   00165C                     u3930:
  6930   00165C                     
  6931                           ; BSR set to: 0
  6932   00165C  BF7B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6933   00165E  EF35  F00B         	goto	u3940
  6934   001662  EF33  F00B         	goto	u3941
  6935   001666                     u3941:
  6936   001666  EF56  F00B         	goto	l4132
  6937   00166A                     u3940:
  6938   00166A                     
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  6941   00166A  0E2C               	movlw	low _dbuf
  6942   00166C  259C               	addwf	efgtoa@n& (0+255),w,b
  6943   00166E  6ED9               	movwf	fsr2l,c
  6944   001670  0E01               	movlw	high _dbuf
  6945   001672  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6946   001674  6EDA               	movwf	fsr2h,c
  6947   001676  0E2E               	movlw	46
  6948   001678  6EDF               	movwf	indf2,c
  6949   00167A                     
  6950                           ; BSR set to: 0
  6951   00167A  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  6952   00167C  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  6953   00167E                     
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  6956   00167E  078B               	decf	efgtoa@w& (0+255),f,b
  6957   001680  A0D8               	btfss	status,0,c
  6958   001682  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  6959   001684                     
  6960                           ; BSR set to: 0
  6961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  6962   001684  0E01               	movlw	1
  6963   001686  6F82               	movwf	efgtoa@pp& (0+255),b
  6964   001688  EF56  F00B         	goto	l4132
  6965   00168C                     l4124:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  6969   00168C  0E2C               	movlw	low _dbuf
  6970   00168E  259C               	addwf	efgtoa@n& (0+255),w,b
  6971   001690  6ED9               	movwf	fsr2l,c
  6972   001692  0E01               	movlw	high _dbuf
  6973   001694  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6974   001696  6EDA               	movwf	fsr2h,c
  6975   001698  0E30               	movlw	48
  6976   00169A  6EDF               	movwf	indf2,c
  6977   00169C                     
  6978                           ; BSR set to: 0
  6979   00169C  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  6980   00169E  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  6981   0016A0                     
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  6984   0016A0  078B               	decf	efgtoa@w& (0+255),f,b
  6985   0016A2  A0D8               	btfss	status,0,c
  6986   0016A4  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  6987   0016A6                     
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  6990   0016A6  077E               	decf	efgtoa@t& (0+255),f,b
  6991   0016A8  A0D8               	btfss	status,0,c
  6992   0016AA  077F               	decf	(efgtoa@t+1)& (0+255),f,b
  6993   0016AC                     l4132:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  6997   0016AC  517E               	movf	efgtoa@t& (0+255),w,b
  6998   0016AE  117F               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6999   0016B0  A4D8               	btfss	status,2,c
  7000   0016B2  EF5D  F00B         	goto	u3951
  7001   0016B6  EF5F  F00B         	goto	u3950
  7002   0016BA                     u3951:
  7003   0016BA  EF46  F00B         	goto	l4124
  7004   0016BE                     u3950:
  7005   0016BE                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7008   0016BE  0E2C               	movlw	low _dbuf
  7009   0016C0  259C               	addwf	efgtoa@n& (0+255),w,b
  7010   0016C2  6ED9               	movwf	fsr2l,c
  7011   0016C4  0E01               	movlw	high _dbuf
  7012   0016C6  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7013   0016C8  6EDA               	movwf	fsr2h,c
  7014   0016CA  5185               	movf	efgtoa@d& (0+255),w,b
  7015   0016CC  0F30               	addlw	48
  7016   0016CE  6EDF               	movwf	indf2,c
  7017   0016D0                     
  7018                           ; BSR set to: 0
  7019   0016D0  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  7020   0016D2  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  7021   0016D4                     
  7022                           ; BSR set to: 0
  7023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  7024   0016D4  078B               	decf	efgtoa@w& (0+255),f,b
  7025   0016D6  A0D8               	btfss	status,0,c
  7026   0016D8  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  7027   0016DA                     
  7028                           ; BSR set to: 0
  7029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  7030   0016DA  C093  F02A         	movff	efgtoa@h,___flsub@b
  7031   0016DE  C094  F02B         	movff	efgtoa@h+1,___flsub@b+1
  7032   0016E2  C095  F02C         	movff	efgtoa@h+2,___flsub@b+2
  7033   0016E6  C096  F02D         	movff	efgtoa@h+3,___flsub@b+3
  7034   0016EA  C097  F04F         	movff	efgtoa@l,___flmul@a
  7035   0016EE  C098  F050         	movff	efgtoa@l+1,___flmul@a+1
  7036   0016F2  C099  F051         	movff	efgtoa@l+2,___flmul@a+2
  7037   0016F6  C09A  F052         	movff	efgtoa@l+3,___flmul@a+3
  7038   0016FA  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  7039   0016FE  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  7040   001702  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  7041   001706  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  7042   00170A  ECBA  F014         	call	___flmul	;wreg free
  7043   00170E  C04B  F02E         	movff	?___flmul,___flsub@a
  7044   001712  C04C  F02F         	movff	?___flmul+1,___flsub@a+1
  7045   001716  C04D  F030         	movff	?___flmul+2,___flsub@a+2
  7046   00171A  C04E  F031         	movff	?___flmul+3,___flsub@a+3
  7047   00171E  ECA1  F024         	call	___flsub	;wreg free
  7048   001722  C02A  F093         	movff	?___flsub,efgtoa@h
  7049   001726  C02B  F094         	movff	?___flsub+1,efgtoa@h+1
  7050   00172A  C02C  F095         	movff	?___flsub+2,efgtoa@h+2
  7051   00172E  C02D  F096         	movff	?___flsub+3,efgtoa@h+3
  7052   001732                     
  7053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  7054   001732  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  7055   001736  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  7056   00173A  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  7057   00173E  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  7058   001742  0E00               	movlw	0
  7059   001744  6E36               	movwf	___fldiv@a^0,c
  7060   001746  0E00               	movlw	0
  7061   001748  6E37               	movwf	(___fldiv@a+1)^0,c
  7062   00174A  0E20               	movlw	32
  7063   00174C  6E38               	movwf	(___fldiv@a+2)^0,c
  7064   00174E  0E41               	movlw	65
  7065   001750  6E39               	movwf	(___fldiv@a+3)^0,c
  7066   001752  ECD0  F016         	call	___fldiv	;wreg free
  7067   001756  C032  F0A2         	movff	?___fldiv,efgtoa@u
  7068   00175A  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  7069   00175E  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  7070   001762  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  7071   001766                     
  7072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  7073   001766  0100               	movlb	0	; () banked
  7074   001768  077A               	decf	efgtoa@ne& (0+255),f,b
  7075   00176A  A0D8               	btfss	status,0,c
  7076   00176C  077B               	decf	(efgtoa@ne+1)& (0+255),f,b
  7077   00176E                     
  7078                           ; BSR set to: 0
  7079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  7080   00176E  4B91               	infsnz	efgtoa@i& (0+255),f,b
  7081   001770  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  7082   001772                     l4148:
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7086   001772  5187               	movf	efgtoa@m& (0+255),w,b
  7087   001774  5D91               	subwf	efgtoa@i& (0+255),w,b
  7088   001776  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  7089   001778  0A80               	xorlw	128
  7090   00177A  6F78               	movwf	??_efgtoa& (0+255),b
  7091   00177C  5188               	movf	(efgtoa@m+1)& (0+255),w,b
  7092   00177E  0A80               	xorlw	128
  7093   001780  5978               	subwfb	??_efgtoa& (0+255),w,b
  7094   001782  B0D8               	btfsc	status,0,c
  7095   001784  EFC6  F00B         	goto	u3961
  7096   001788  EFC8  F00B         	goto	u3960
  7097   00178C                     u3961:
  7098   00178C  EFD6  F00B         	goto	l4152
  7099   001790                     u3960:
  7100   001790                     
  7101                           ; BSR set to: 0
  7102   001790  BF9D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7103   001792  EFD4  F00B         	goto	u3971
  7104   001796  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  7105   001798  E109               	bnz	u3970
  7106   00179A  0E4B               	movlw	75
  7107   00179C  5D9C               	subwf	efgtoa@n& (0+255),w,b
  7108   00179E  A0D8               	btfss	status,0,c
  7109   0017A0  EFD4  F00B         	goto	u3971
  7110   0017A4  EFD6  F00B         	goto	u3970
  7111   0017A8                     u3971:
  7112   0017A8  EFD4  F00A         	goto	l4108
  7113   0017AC                     u3970:
  7114   0017AC                     l4152:
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  7118   0017AC  0E00               	movlw	0
  7119   0017AE  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  7120   0017B0  0E4F               	movlw	79
  7121   0017B2  6F91               	movwf	efgtoa@i& (0+255),b
  7122   0017B4                     
  7123                           ; BSR set to: 0
  7124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  7125   0017B4  0E2C               	movlw	low _dbuf
  7126   0017B6  2591               	addwf	efgtoa@i& (0+255),w,b
  7127   0017B8  6ED9               	movwf	fsr2l,c
  7128   0017BA  0E01               	movlw	high _dbuf
  7129   0017BC  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7130   0017BE  6EDA               	movwf	fsr2h,c
  7131   0017C0  0E00               	movlw	0
  7132   0017C2  6EDF               	movwf	indf2,c
  7133   0017C4                     
  7134                           ; BSR set to: 0
  7135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7136   0017C4  0E2C               	movlw	low _dbuf
  7137   0017C6  6F78               	movwf	??_efgtoa& (0+255),b
  7138   0017C8  0E01               	movlw	high _dbuf
  7139   0017CA  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  7140   0017CC  519C               	movf	efgtoa@n& (0+255),w,b
  7141   0017CE  5F78               	subwf	??_efgtoa& (0+255),f,b
  7142   0017D0  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  7143   0017D2  5B79               	subwfb	(??_efgtoa+1)& (0+255),f,b
  7144   0017D4  5191               	movf	efgtoa@i& (0+255),w,b
  7145   0017D6  2578               	addwf	??_efgtoa& (0+255),w,b
  7146   0017D8  6E01               	movwf	memcpy@d1^0,c
  7147   0017DA  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  7148   0017DC  2179               	addwfc	(??_efgtoa+1)& (0+255),w,b
  7149   0017DE  6E02               	movwf	(memcpy@d1+1)^0,c
  7150   0017E0  0E2C               	movlw	low _dbuf
  7151   0017E2  6E03               	movwf	memcpy@s1^0,c
  7152   0017E4  0E01               	movlw	high _dbuf
  7153   0017E6  6E04               	movwf	(memcpy@s1+1)^0,c
  7154   0017E8  C09C  F005         	movff	efgtoa@n,memcpy@n
  7155   0017EC  C09D  F006         	movff	efgtoa@n+1,memcpy@n+1
  7156   0017F0  EC79  F024         	call	_memcpy	;wreg free
  7157   0017F4                     
  7158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  7159   0017F4  0100               	movlb	0	; () banked
  7160   0017F6  519C               	movf	efgtoa@n& (0+255),w,b
  7161   0017F8  5D91               	subwf	efgtoa@i& (0+255),w,b
  7162   0017FA  6F9C               	movwf	efgtoa@n& (0+255),b
  7163   0017FC  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  7164   0017FE  5992               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7165   001800  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  7166   001802                     
  7167                           ; BSR set to: 0
  7168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  7169   001802  519B               	movf	efgtoa@sign& (0+255),w,b
  7170   001804  A4D8               	btfss	status,2,c
  7171   001806  EF07  F00C         	goto	u3981
  7172   00180A  EF0A  F00C         	goto	u3980
  7173   00180E                     u3981:
  7174   00180E  0E01               	movlw	1
  7175   001810  EF0B  F00C         	goto	u3990
  7176   001814                     u3980:
  7177   001814  0E00               	movlw	0
  7178   001816                     u3990:
  7179   001816  6F91               	movwf	efgtoa@i& (0+255),b
  7180   001818  6B92               	clrf	(efgtoa@i+1)& (0+255),b
  7181   00181A                     
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  7184   00181A  519B               	movf	efgtoa@sign& (0+255),w,b
  7185   00181C  B4D8               	btfsc	status,2,c
  7186   00181E  EF13  F00C         	goto	u4001
  7187   001822  EF15  F00C         	goto	u4000
  7188   001826                     u4001:
  7189   001826  EF20  F00C         	goto	l4166
  7190   00182A                     u4000:
  7191   00182A                     
  7192                           ; BSR set to: 0
  7193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  7194   00182A  079C               	decf	efgtoa@n& (0+255),f,b
  7195   00182C  A0D8               	btfss	status,0,c
  7196   00182E  079D               	decf	(efgtoa@n+1)& (0+255),f,b
  7197   001830  0E2C               	movlw	low _dbuf
  7198   001832  259C               	addwf	efgtoa@n& (0+255),w,b
  7199   001834  6ED9               	movwf	fsr2l,c
  7200   001836  0E01               	movlw	high _dbuf
  7201   001838  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7202   00183A  6EDA               	movwf	fsr2h,c
  7203   00183C  C09B  FFDF         	movff	efgtoa@sign,indf2
  7204   001840                     l4166:
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  7208   001840  5191               	movf	efgtoa@i& (0+255),w,b
  7209   001842  5F8B               	subwf	efgtoa@w& (0+255),f,b
  7210   001844  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  7211   001846  5B8C               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7212   001848                     
  7213                           ; BSR set to: 0
  7214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7215   001848  C071  F011         	movff	efgtoa@fp,pad@fp
  7216   00184C  C072  F012         	movff	efgtoa@fp+1,pad@fp+1
  7217   001850  0E2C               	movlw	low _dbuf
  7218   001852  259C               	addwf	efgtoa@n& (0+255),w,b
  7219   001854  6E13               	movwf	pad@buf^0,c
  7220   001856  0E01               	movlw	high _dbuf
  7221   001858  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7222   00185A  6E14               	movwf	(pad@buf+1)^0,c
  7223   00185C  C08B  F015         	movff	efgtoa@w,pad@p
  7224   001860  C08C  F016         	movff	efgtoa@w+1,pad@p+1
  7225   001864  ECAD  F022         	call	_pad	;wreg free
  7226   001868                     l1261:
  7227   001868  0012               	return		;funcret
  7228   00186A                     __end_of_efgtoa:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _strcpy *****************
  7232 ;; Defined at:
  7233 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7236 ;;		 -> dbuf(80), 
  7237 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7238 ;;		 -> STR_14(4), STR_11(4), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  d               2    6[COMRAM] PTR unsigned char 
  7241 ;;		 -> dbuf(80), 
  7242 ;;  s               2    4[COMRAM] PTR const unsigned char 
  7243 ;;		 -> STR_14(4), STR_11(4), 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    0[COMRAM] PTR unsigned char 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;Total ram usage:        8 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_efgtoa
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text37
  7267   004988                     __ptext37:
  7268                           	callstack 0
  7269   004988                     _strcpy:
  7270                           	callstack 25
  7271   004988  C003  F005         	movff	strcpy@src,strcpy@s
  7272   00498C  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  7273   004990  C001  F007         	movff	strcpy@dest,strcpy@d
  7274   004994  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  7275   004998                     l3876:
  7276   004998  C005  FFF6         	movff	strcpy@s,tblptrl
  7277   00499C  C006  FFF7         	movff	strcpy@s+1,tblptrh
  7278   0049A0  4A05               	infsnz	strcpy@s^0,f,c
  7279   0049A2  2A06               	incf	(strcpy@s+1)^0,f,c
  7280   0049A4                     	if	0	;tblptru may be non-zero
  7281   0049A4                     	endif
  7282   0049A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7283   0049A4  0E00               	movlw	low (__mediumconst shr (0+16))
  7284   0049A6  6EF8               	movwf	tblptru,c
  7285   0049A8                     	endif
  7286   0049A8  C007  FFD9         	movff	strcpy@d,fsr2l
  7287   0049AC  C008  FFDA         	movff	strcpy@d+1,fsr2h
  7288   0049B0  4A07               	infsnz	strcpy@d^0,f,c
  7289   0049B2  2A08               	incf	(strcpy@d+1)^0,f,c
  7290   0049B4  0008               	tblrd		*
  7291   0049B6  CFF5 FFDF          	movff	tablat,indf2
  7292   0049BA  50DF               	movf	indf2,w,c
  7293   0049BC  A4D8               	btfss	status,2,c
  7294   0049BE  EFE3  F024         	goto	u3531
  7295   0049C2  EFE5  F024         	goto	u3530
  7296   0049C6                     u3531:
  7297   0049C6  EFCC  F024         	goto	l3876
  7298   0049CA                     u3530:
  7299   0049CA  0012               	return		;funcret
  7300   0049CC                     __end_of_strcpy:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _pad *****************
  7304 ;; Defined at:
  7305 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7308 ;;		 -> sprintf@f(11), 
  7309 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7310 ;;		 -> dbuf(80), 
  7311 ;;  p               2   20[COMRAM] int 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  w               2   25[COMRAM] int 
  7314 ;;  i               2   23[COMRAM] int 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7324 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7327 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7328 ;;Total ram usage:       11 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 3
  7331 ;; This function calls:
  7332 ;;		_fputc
  7333 ;;		_fputs
  7334 ;; This function is called by:
  7335 ;;		_efgtoa
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text38
  7340   00455A                     __ptext38:
  7341                           	callstack 0
  7342   00455A                     _pad:
  7343                           	callstack 22
  7344   00455A                     
  7345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  7346   00455A  BE16               	btfsc	(pad@p+1)^0,7,c
  7347   00455C  EFB2  F022         	goto	u3441
  7348   004560  EFB4  F022         	goto	u3440
  7349   004564                     u3441:
  7350   004564  EFBA  F022         	goto	l3842
  7351   004568                     u3440:
  7352   004568  C015  F01A         	movff	pad@p,pad@w
  7353   00456C  C016  F01B         	movff	pad@p+1,pad@w+1
  7354   004570  EFBE  F022         	goto	l1246
  7355   004574                     l3842:
  7356   004574  0E00               	movlw	0
  7357   004576  6E1B               	movwf	(pad@w+1)^0,c
  7358   004578  0E00               	movlw	0
  7359   00457A  6E1A               	movwf	pad@w^0,c
  7360   00457C                     l1246:
  7361                           
  7362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7363   00457C  0E00               	movlw	0
  7364   00457E  6E19               	movwf	(pad@i+1)^0,c
  7365   004580  0E00               	movlw	0
  7366   004582  6E18               	movwf	pad@i^0,c
  7367                           
  7368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7369   004584  EFD0  F022         	goto	l3848
  7370   004588                     l3844:
  7371                           
  7372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7373   004588  0E00               	movlw	0
  7374   00458A  6E02               	movwf	(fputc@c+1)^0,c
  7375   00458C  0E20               	movlw	32
  7376   00458E  6E01               	movwf	fputc@c^0,c
  7377   004590  C011  F003         	movff	pad@fp,fputc@fp
  7378   004594  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7379   004598  EC0C  F01F         	call	_fputc	;wreg free
  7380   00459C                     
  7381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7382   00459C  4A18               	infsnz	pad@i^0,f,c
  7383   00459E  2A19               	incf	(pad@i+1)^0,f,c
  7384   0045A0                     l3848:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7387   0045A0  501A               	movf	pad@w^0,w,c
  7388   0045A2  5C18               	subwf	pad@i^0,w,c
  7389   0045A4  5019               	movf	(pad@i+1)^0,w,c
  7390   0045A6  0A80               	xorlw	128
  7391   0045A8  6E17               	movwf	??_pad^0,c
  7392   0045AA  501B               	movf	(pad@w+1)^0,w,c
  7393   0045AC  0A80               	xorlw	128
  7394   0045AE  5817               	subwfb	??_pad^0,w,c
  7395   0045B0  A0D8               	btfss	status,0,c
  7396   0045B2  EFDD  F022         	goto	u3451
  7397   0045B6  EFDF  F022         	goto	u3450
  7398   0045BA                     u3451:
  7399   0045BA  EFC4  F022         	goto	l3844
  7400   0045BE                     u3450:
  7401   0045BE                     
  7402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7403   0045BE  C013  F00A         	movff	pad@buf,fputs@s
  7404   0045C2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7405   0045C6  C011  F00C         	movff	pad@fp,fputs@fp
  7406   0045CA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7407   0045CE  ECE6  F024         	call	_fputs	;wreg free
  7408   0045D2  0012               	return		;funcret
  7409   0045D4                     __end_of_pad:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _fputs *****************
  7413 ;; Defined at:
  7414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7417 ;;		 -> dbuf(80), 
  7418 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7419 ;;		 -> sprintf@f(11), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  i               2   14[COMRAM] int 
  7422 ;;  c               1   13[COMRAM] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    9[COMRAM] int 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;Total ram usage:        7 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 2
  7439 ;; This function calls:
  7440 ;;		_fputc
  7441 ;; This function is called by:
  7442 ;;		_pad
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text39
  7447   0049CC                     __ptext39:
  7448                           	callstack 0
  7449   0049CC                     _fputs:
  7450                           	callstack 22
  7451   0049CC  0E00               	movlw	0
  7452   0049CE  6E10               	movwf	(fputs@i+1)^0,c
  7453   0049D0  0E00               	movlw	0
  7454   0049D2  6E0F               	movwf	fputs@i^0,c
  7455   0049D4  EFF7  F024         	goto	l3472
  7456   0049D8                     l3468:
  7457   0049D8  C00E  F001         	movff	fputs@c,fputc@c
  7458   0049DC  6A02               	clrf	(fputc@c+1)^0,c
  7459   0049DE  C00C  F003         	movff	fputs@fp,fputc@fp
  7460   0049E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7461   0049E6  EC0C  F01F         	call	_fputc	;wreg free
  7462   0049EA  4A0F               	infsnz	fputs@i^0,f,c
  7463   0049EC  2A10               	incf	(fputs@i+1)^0,f,c
  7464   0049EE                     l3472:
  7465   0049EE  500F               	movf	fputs@i^0,w,c
  7466   0049F0  240A               	addwf	fputs@s^0,w,c
  7467   0049F2  6ED9               	movwf	fsr2l,c
  7468   0049F4  5010               	movf	(fputs@i+1)^0,w,c
  7469   0049F6  200B               	addwfc	(fputs@s+1)^0,w,c
  7470   0049F8  6EDA               	movwf	fsr2h,c
  7471   0049FA  50DF               	movf	indf2,w,c
  7472   0049FC  6E0E               	movwf	fputs@c^0,c
  7473   0049FE  500E               	movf	fputs@c^0,w,c
  7474   004A00  A4D8               	btfss	status,2,c
  7475   004A02  EF05  F025         	goto	u2851
  7476   004A06  EF07  F025         	goto	u2850
  7477   004A0A                     u2851:
  7478   004A0A  EFEC  F024         	goto	l3468
  7479   004A0E                     u2850:
  7480   004A0E  0012               	return		;funcret
  7481   004A10                     __end_of_fputs:
  7482                           	callstack 0
  7483                           
  7484 ;; *************** function _fputc *****************
  7485 ;; Defined at:
  7486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  c               2    0[COMRAM] int 
  7489 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7490 ;;		 -> sprintf@f(11), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  2    0[COMRAM] int 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;Total ram usage:        9 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 1
  7509 ;; This function calls:
  7510 ;;		_putch
  7511 ;; This function is called by:
  7512 ;;		_pad
  7513 ;;		_vfpfcnvrt
  7514 ;;		_fputs
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text40
  7519   003E18                     __ptext40:
  7520                           	callstack 0
  7521   003E18                     _fputc:
  7522                           	callstack 25
  7523   003E18  5003               	movf	fputc@fp^0,w,c
  7524   003E1A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7525   003E1C  B4D8               	btfsc	status,2,c
  7526   003E1E  EF13  F01F         	goto	u2421
  7527   003E22  EF15  F01F         	goto	u2420
  7528   003E26                     u2421:
  7529   003E26  EF1E  F01F         	goto	l3254
  7530   003E2A                     u2420:
  7531   003E2A  5003               	movf	fputc@fp^0,w,c
  7532   003E2C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7533   003E2E  A4D8               	btfss	status,2,c
  7534   003E30  EF1C  F01F         	goto	u2431
  7535   003E34  EF1E  F01F         	goto	u2430
  7536   003E38                     u2431:
  7537   003E38  EF23  F01F         	goto	l3256
  7538   003E3C                     u2430:
  7539   003E3C                     l3254:
  7540   003E3C  5001               	movf	fputc@c^0,w,c
  7541   003E3E  EC29  F026         	call	_putch
  7542   003E42  EF70  F01F         	goto	l1377
  7543   003E46                     l3256:
  7544   003E46  EE20 F009          	lfsr	2,9
  7545   003E4A  5003               	movf	fputc@fp^0,w,c
  7546   003E4C  26D9               	addwf	fsr2l,f,c
  7547   003E4E  5004               	movf	(fputc@fp+1)^0,w,c
  7548   003E50  22DA               	addwfc	fsr2h,f,c
  7549   003E52  50DE               	movf	postinc2,w,c
  7550   003E54  10DE               	iorwf	postinc2,w,c
  7551   003E56  B4D8               	btfsc	status,2,c
  7552   003E58  EF30  F01F         	goto	u2441
  7553   003E5C  EF32  F01F         	goto	u2440
  7554   003E60                     u2441:
  7555   003E60  EF4D  F01F         	goto	l3260
  7556   003E64                     u2440:
  7557   003E64  EE20 F009          	lfsr	2,9
  7558   003E68  5003               	movf	fputc@fp^0,w,c
  7559   003E6A  26D9               	addwf	fsr2l,f,c
  7560   003E6C  5004               	movf	(fputc@fp+1)^0,w,c
  7561   003E6E  22DA               	addwfc	fsr2h,f,c
  7562   003E70  EE10 F003          	lfsr	1,3
  7563   003E74  5003               	movf	fputc@fp^0,w,c
  7564   003E76  26E1               	addwf	fsr1l,f,c
  7565   003E78  5004               	movf	(fputc@fp+1)^0,w,c
  7566   003E7A  22E2               	addwfc	fsr1h,f,c
  7567   003E7C  50DE               	movf	postinc2,w,c
  7568   003E7E  5CE6               	subwf	postinc1,w,c
  7569   003E80  50E6               	movf	postinc1,w,c
  7570   003E82  0A80               	xorlw	128
  7571   003E84  6E09               	movwf	(??_fputc+4)^0,c
  7572   003E86  50DE               	movf	postinc2,w,c
  7573   003E88  0A80               	xorlw	128
  7574   003E8A  5809               	subwfb	(??_fputc+4)^0,w,c
  7575   003E8C  B0D8               	btfsc	status,0,c
  7576   003E8E  EF4B  F01F         	goto	u2451
  7577   003E92  EF4D  F01F         	goto	u2450
  7578   003E96                     u2451:
  7579   003E96  EF70  F01F         	goto	l1377
  7580   003E9A                     u2450:
  7581   003E9A                     l3260:
  7582   003E9A  EE20 F003          	lfsr	2,3
  7583   003E9E  5003               	movf	fputc@fp^0,w,c
  7584   003EA0  26D9               	addwf	fsr2l,f,c
  7585   003EA2  5004               	movf	(fputc@fp+1)^0,w,c
  7586   003EA4  22DA               	addwfc	fsr2h,f,c
  7587   003EA6  CFDE F005          	movff	postinc2,??_fputc
  7588   003EAA  CFDD F006          	movff	postdec2,??_fputc+1
  7589   003EAE  C003  FFD9         	movff	fputc@fp,fsr2l
  7590   003EB2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7591   003EB6  CFDE F007          	movff	postinc2,??_fputc+2
  7592   003EBA  CFDD F008          	movff	postdec2,??_fputc+3
  7593   003EBE  5005               	movf	??_fputc^0,w,c
  7594   003EC0  2407               	addwf	(??_fputc+2)^0,w,c
  7595   003EC2  6ED9               	movwf	fsr2l,c
  7596   003EC4  5006               	movf	(??_fputc+1)^0,w,c
  7597   003EC6  2008               	addwfc	(??_fputc+3)^0,w,c
  7598   003EC8  6EDA               	movwf	fsr2h,c
  7599   003ECA  C001  FFDF         	movff	fputc@c,indf2
  7600   003ECE  EE20 F003          	lfsr	2,3
  7601   003ED2  5003               	movf	fputc@fp^0,w,c
  7602   003ED4  26D9               	addwf	fsr2l,f,c
  7603   003ED6  5004               	movf	(fputc@fp+1)^0,w,c
  7604   003ED8  22DA               	addwfc	fsr2h,f,c
  7605   003EDA  2ADE               	incf	postinc2,f,c
  7606   003EDC  0E00               	movlw	0
  7607   003EDE  22DD               	addwfc	postdec2,f,c
  7608   003EE0                     l1377:
  7609   003EE0  0012               	return		;funcret
  7610   003EE2                     __end_of_fputc:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _putch *****************
  7614 ;; Defined at:
  7615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  c               1    wreg     unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  c               1    0[COMRAM] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_fputc
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text41
  7643   004C52                     __ptext41:
  7644                           	callstack 0
  7645   004C52                     _putch:
  7646                           	callstack 25
  7647   004C52  0012               	return		;funcret
  7648   004C54                     __end_of_putch:
  7649                           	callstack 0
  7650                           
  7651 ;; *************** function _memcpy *****************
  7652 ;; Defined at:
  7653 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  d1              2    0[COMRAM] PTR void 
  7656 ;;		 -> dbuf(80), 
  7657 ;;  s1              2    2[COMRAM] PTR const void 
  7658 ;;		 -> dbuf(80), 
  7659 ;;  n               2    4[COMRAM] unsigned int 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7662 ;;		 -> dbuf(80), 
  7663 ;;  d               2    6[COMRAM] PTR unsigned char 
  7664 ;;		 -> dbuf(80), 
  7665 ;;  tmp             1   10[COMRAM] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  2    0[COMRAM] PTR void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;Total ram usage:       11 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_efgtoa
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text42
  7689   0048F2                     __ptext42:
  7690                           	callstack 0
  7691   0048F2                     _memcpy:
  7692                           	callstack 25
  7693   0048F2  C003  F009         	movff	memcpy@s1,memcpy@s
  7694   0048F6  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  7695   0048FA  C001  F007         	movff	memcpy@d1,memcpy@d
  7696   0048FE  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  7697   004902  EF93  F024         	goto	l3920
  7698   004906                     l3912:
  7699   004906  C009  FFD9         	movff	memcpy@s,fsr2l
  7700   00490A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  7701   00490E  50DF               	movf	indf2,w,c
  7702   004910  6E0B               	movwf	memcpy@tmp^0,c
  7703   004912  4A09               	infsnz	memcpy@s^0,f,c
  7704   004914  2A0A               	incf	(memcpy@s+1)^0,f,c
  7705   004916  C007  FFD9         	movff	memcpy@d,fsr2l
  7706   00491A  C008  FFDA         	movff	memcpy@d+1,fsr2h
  7707   00491E  C00B  FFDF         	movff	memcpy@tmp,indf2
  7708   004922  4A07               	infsnz	memcpy@d^0,f,c
  7709   004924  2A08               	incf	(memcpy@d+1)^0,f,c
  7710   004926                     l3920:
  7711   004926  0605               	decf	memcpy@n^0,f,c
  7712   004928  A0D8               	btfss	status,0,c
  7713   00492A  0606               	decf	(memcpy@n+1)^0,f,c
  7714   00492C  2805               	incf	memcpy@n^0,w,c
  7715   00492E  E106               	bnz	u3651
  7716   004930  2806               	incf	(memcpy@n+1)^0,w,c
  7717   004932  A4D8               	btfss	status,2,c
  7718   004934  EF9E  F024         	goto	u3651
  7719   004938  EFA0  F024         	goto	u3650
  7720   00493C                     u3651:
  7721   00493C  EF83  F024         	goto	l3912
  7722   004940                     u3650:
  7723   004940  0012               	return		;funcret
  7724   004942                     __end_of_memcpy:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _labs *****************
  7728 ;; Defined at:
  7729 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  a               4    0[COMRAM] long 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  4    0[COMRAM] long 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7747 ;;Total ram usage:        8 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_efgtoa
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text43
  7757   004648                     __ptext43:
  7758                           	callstack 0
  7759   004648                     _labs:
  7760                           	callstack 25
  7761   004648  BE04               	btfsc	(labs@a+3)^0,7,c
  7762   00464A  EF33  F023         	goto	u3540
  7763   00464E  5004               	movf	(labs@a+3)^0,w,c
  7764   004650  1003               	iorwf	(labs@a+2)^0,w,c
  7765   004652  1002               	iorwf	(labs@a+1)^0,w,c
  7766   004654  E106               	bnz	u3541
  7767   004656  0401               	decf	labs@a^0,w,c
  7768   004658  B0D8               	btfsc	status,0,c
  7769   00465A  EF31  F023         	goto	u3541
  7770   00465E  EF33  F023         	goto	u3540
  7771   004662                     u3541:
  7772   004662  EF4E  F023         	goto	l1356
  7773   004666                     u3540:
  7774   004666  C001  F005         	movff	labs@a,??_labs
  7775   00466A  C002  F006         	movff	labs@a+1,??_labs+1
  7776   00466E  C003  F007         	movff	labs@a+2,??_labs+2
  7777   004672  C004  F008         	movff	labs@a+3,??_labs+3
  7778   004676  1E05               	comf	??_labs^0,f,c
  7779   004678  1E06               	comf	(??_labs+1)^0,f,c
  7780   00467A  1E07               	comf	(??_labs+2)^0,f,c
  7781   00467C  1E08               	comf	(??_labs+3)^0,f,c
  7782   00467E  2A05               	incf	??_labs^0,f,c
  7783   004680  0E00               	movlw	0
  7784   004682  2206               	addwfc	(??_labs+1)^0,f,c
  7785   004684  2207               	addwfc	(??_labs+2)^0,f,c
  7786   004686  2208               	addwfc	(??_labs+3)^0,f,c
  7787   004688  C005  F001         	movff	??_labs,?_labs
  7788   00468C  C006  F002         	movff	??_labs+1,?_labs+1
  7789   004690  C007  F003         	movff	??_labs+2,?_labs+2
  7790   004694  C008  F004         	movff	??_labs+3,?_labs+3
  7791   004698  EF56  F023         	goto	l1359
  7792   00469C                     l1356:
  7793   00469C  C001  F001         	movff	labs@a,?_labs
  7794   0046A0  C002  F002         	movff	labs@a+1,?_labs+1
  7795   0046A4  C003  F003         	movff	labs@a+2,?_labs+2
  7796   0046A8  C004  F004         	movff	labs@a+3,?_labs+3
  7797   0046AC                     l1359:
  7798   0046AC  0012               	return		;funcret
  7799   0046AE                     __end_of_labs:
  7800                           	callstack 0
  7801                           
  7802 ;; *************** function _floorf *****************
  7803 ;; Defined at:
  7804 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  x               4   74[COMRAM] float 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  u               4   90[COMRAM] struct .
  7809 ;;  m               4   84[COMRAM] unsigned long 
  7810 ;;  e               2   88[COMRAM] int 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  4   74[COMRAM] float 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;Total ram usage:       20 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_efgtoa
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text44
  7834   00336A                     __ptext44:
  7835                           	callstack 0
  7836   00336A                     _floorf:
  7837                           	callstack 25
  7838   00336A  C128  F05B         	movff	floorf@F526,floorf@u
  7839   00336E  C129  F05C         	movff	floorf@F526+1,floorf@u+1
  7840   003372  C12A  F05D         	movff	floorf@F526+2,floorf@u+2
  7841   003376  C12B  F05E         	movff	floorf@F526+3,floorf@u+3
  7842   00337A  C04B  F05B         	movff	floorf@x,floorf@u
  7843   00337E  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  7844   003382  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  7845   003386  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  7846   00338A  0E81               	movlw	129
  7847   00338C  6E4F               	movwf	??_floorf^0,c
  7848   00338E  0EFF               	movlw	255
  7849   003390  6E50               	movwf	(??_floorf+1)^0,c
  7850   003392  C05B  F051         	movff	floorf@u,??_floorf+2
  7851   003396  C05C  F052         	movff	floorf@u+1,??_floorf+3
  7852   00339A  C05D  F053         	movff	floorf@u+2,??_floorf+4
  7853   00339E  C05E  F054         	movff	floorf@u+3,??_floorf+5
  7854   0033A2  0E18               	movlw	24
  7855   0033A4  EFD9  F019         	goto	u3550
  7856   0033A8                     u3555:
  7857   0033A8  90D8               	bcf	status,0,c
  7858   0033AA  3254               	rrcf	(??_floorf+5)^0,f,c
  7859   0033AC  3253               	rrcf	(??_floorf+4)^0,f,c
  7860   0033AE  3252               	rrcf	(??_floorf+3)^0,f,c
  7861   0033B0  3251               	rrcf	(??_floorf+2)^0,f,c
  7862   0033B2                     u3550:
  7863   0033B2  2EE8               	decfsz	wreg,f,c
  7864   0033B4  EFD4  F019         	goto	u3555
  7865   0033B8  5051               	movf	(??_floorf+2)^0,w,c
  7866   0033BA  244F               	addwf	??_floorf^0,w,c
  7867   0033BC  6E59               	movwf	floorf@e^0,c
  7868   0033BE  0E00               	movlw	0
  7869   0033C0  2050               	addwfc	(??_floorf+1)^0,w,c
  7870   0033C2  6E5A               	movwf	(floorf@e+1)^0,c
  7871   0033C4  BE5A               	btfsc	(floorf@e+1)^0,7,c
  7872   0033C6  EFEE  F019         	goto	u3561
  7873   0033CA  505A               	movf	(floorf@e+1)^0,w,c
  7874   0033CC  E109               	bnz	u3560
  7875   0033CE  0E17               	movlw	23
  7876   0033D0  5C59               	subwf	floorf@e^0,w,c
  7877   0033D2  A0D8               	btfss	status,0,c
  7878   0033D4  EFEE  F019         	goto	u3561
  7879   0033D8  EFF0  F019         	goto	u3560
  7880   0033DC                     u3561:
  7881   0033DC  EFFA  F019         	goto	l3888
  7882   0033E0                     u3560:
  7883   0033E0                     l3886:
  7884   0033E0  C04B  F04B         	movff	floorf@x,?_floorf
  7885   0033E4  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  7886   0033E8  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  7887   0033EC  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  7888   0033F0  EFBD  F01A         	goto	l1345
  7889   0033F4                     l3888:
  7890   0033F4  BE5A               	btfsc	(floorf@e+1)^0,7,c
  7891   0033F6  EFFF  F019         	goto	u3571
  7892   0033FA  EF01  F01A         	goto	u3570
  7893   0033FE                     u3571:
  7894   0033FE  EF71  F01A         	goto	l3898
  7895   003402                     u3570:
  7896   003402  C059  F04F         	movff	floorf@e,??_floorf
  7897   003406  0EFF               	movlw	255
  7898   003408  6E50               	movwf	(??_floorf+1)^0,c
  7899   00340A  0EFF               	movlw	255
  7900   00340C  6E51               	movwf	(??_floorf+2)^0,c
  7901   00340E  0E7F               	movlw	127
  7902   003410  6E52               	movwf	(??_floorf+3)^0,c
  7903   003412  0E00               	movlw	0
  7904   003414  6E53               	movwf	(??_floorf+4)^0,c
  7905   003416                     u3585:
  7906   003416  664F               	tstfsz	??_floorf^0,c
  7907   003418  EF10  F01A         	goto	u3586
  7908   00341C  EF18  F01A         	goto	u3587
  7909   003420                     u3586:
  7910   003420  3453               	rlcf	(??_floorf+4)^0,w,c
  7911   003422  3253               	rrcf	(??_floorf+4)^0,f,c
  7912   003424  3252               	rrcf	(??_floorf+3)^0,f,c
  7913   003426  3251               	rrcf	(??_floorf+2)^0,f,c
  7914   003428  3250               	rrcf	(??_floorf+1)^0,f,c
  7915   00342A  2E4F               	decfsz	??_floorf^0,f,c
  7916   00342C  EF0B  F01A         	goto	u3585
  7917   003430                     u3587:
  7918   003430  C050  F055         	movff	??_floorf+1,floorf@m
  7919   003434  C051  F056         	movff	??_floorf+2,floorf@m+1
  7920   003438  C052  F057         	movff	??_floorf+3,floorf@m+2
  7921   00343C  C053  F058         	movff	??_floorf+4,floorf@m+3
  7922   003440  5055               	movf	floorf@m^0,w,c
  7923   003442  145B               	andwf	floorf@u^0,w,c
  7924   003444  6E4F               	movwf	??_floorf^0,c
  7925   003446  5056               	movf	(floorf@m+1)^0,w,c
  7926   003448  145C               	andwf	(floorf@u+1)^0,w,c
  7927   00344A  6E50               	movwf	(??_floorf+1)^0,c
  7928   00344C  5057               	movf	(floorf@m+2)^0,w,c
  7929   00344E  145D               	andwf	(floorf@u+2)^0,w,c
  7930   003450  6E51               	movwf	(??_floorf+2)^0,c
  7931   003452  5058               	movf	(floorf@m+3)^0,w,c
  7932   003454  145E               	andwf	(floorf@u+3)^0,w,c
  7933   003456  6E52               	movwf	(??_floorf+3)^0,c
  7934   003458  504F               	movf	??_floorf^0,w,c
  7935   00345A  1050               	iorwf	(??_floorf+1)^0,w,c
  7936   00345C  1051               	iorwf	(??_floorf+2)^0,w,c
  7937   00345E  1052               	iorwf	(??_floorf+3)^0,w,c
  7938   003460  A4D8               	btfss	status,2,c
  7939   003462  EF35  F01A         	goto	u3591
  7940   003466  EF37  F01A         	goto	u3590
  7941   00346A                     u3591:
  7942   00346A  EF39  F01A         	goto	l3894
  7943   00346E                     u3590:
  7944   00346E  EFF0  F019         	goto	l3886
  7945   003472                     l3894:
  7946   003472  C05B  F04F         	movff	floorf@u,??_floorf
  7947   003476  C05C  F050         	movff	floorf@u+1,??_floorf+1
  7948   00347A  C05D  F051         	movff	floorf@u+2,??_floorf+2
  7949   00347E  C05E  F052         	movff	floorf@u+3,??_floorf+3
  7950   003482  0E20               	movlw	32
  7951   003484  EF49  F01A         	goto	u3600
  7952   003488                     u3605:
  7953   003488  90D8               	bcf	status,0,c
  7954   00348A  3252               	rrcf	(??_floorf+3)^0,f,c
  7955   00348C  3251               	rrcf	(??_floorf+2)^0,f,c
  7956   00348E  3250               	rrcf	(??_floorf+1)^0,f,c
  7957   003490  324F               	rrcf	??_floorf^0,f,c
  7958   003492                     u3600:
  7959   003492  2EE8               	decfsz	wreg,f,c
  7960   003494  EF44  F01A         	goto	u3605
  7961   003498  504F               	movf	??_floorf^0,w,c
  7962   00349A  1050               	iorwf	(??_floorf+1)^0,w,c
  7963   00349C  1051               	iorwf	(??_floorf+2)^0,w,c
  7964   00349E  1052               	iorwf	(??_floorf+3)^0,w,c
  7965   0034A0  B4D8               	btfsc	status,2,c
  7966   0034A2  EF55  F01A         	goto	u3611
  7967   0034A6  EF57  F01A         	goto	u3610
  7968   0034AA                     u3611:
  7969   0034AA  EF5F  F01A         	goto	l1348
  7970   0034AE                     u3610:
  7971   0034AE  5055               	movf	floorf@m^0,w,c
  7972   0034B0  265B               	addwf	floorf@u^0,f,c
  7973   0034B2  5056               	movf	(floorf@m+1)^0,w,c
  7974   0034B4  225C               	addwfc	(floorf@u+1)^0,f,c
  7975   0034B6  5057               	movf	(floorf@m+2)^0,w,c
  7976   0034B8  225D               	addwfc	(floorf@u+2)^0,f,c
  7977   0034BA  5058               	movf	(floorf@m+3)^0,w,c
  7978   0034BC  225E               	addwfc	(floorf@u+3)^0,f,c
  7979   0034BE                     l1348:
  7980   0034BE  1C55               	comf	floorf@m^0,w,c
  7981   0034C0  6E4F               	movwf	??_floorf^0,c
  7982   0034C2  1C56               	comf	(floorf@m+1)^0,w,c
  7983   0034C4  6E50               	movwf	(??_floorf+1)^0,c
  7984   0034C6  1C57               	comf	(floorf@m+2)^0,w,c
  7985   0034C8  6E51               	movwf	(??_floorf+2)^0,c
  7986   0034CA  1C58               	comf	(floorf@m+3)^0,w,c
  7987   0034CC  6E52               	movwf	(??_floorf+3)^0,c
  7988   0034CE  504F               	movf	??_floorf^0,w,c
  7989   0034D0  165B               	andwf	floorf@u^0,f,c
  7990   0034D2  5050               	movf	(??_floorf+1)^0,w,c
  7991   0034D4  165C               	andwf	(floorf@u+1)^0,f,c
  7992   0034D6  5051               	movf	(??_floorf+2)^0,w,c
  7993   0034D8  165D               	andwf	(floorf@u+2)^0,f,c
  7994   0034DA  5052               	movf	(??_floorf+3)^0,w,c
  7995   0034DC  165E               	andwf	(floorf@u+3)^0,f,c
  7996   0034DE  EFB5  F01A         	goto	l3906
  7997   0034E2                     l3898:
  7998   0034E2  C05B  F04F         	movff	floorf@u,??_floorf
  7999   0034E6  C05C  F050         	movff	floorf@u+1,??_floorf+1
  8000   0034EA  C05D  F051         	movff	floorf@u+2,??_floorf+2
  8001   0034EE  C05E  F052         	movff	floorf@u+3,??_floorf+3
  8002   0034F2  0E20               	movlw	32
  8003   0034F4  EF81  F01A         	goto	u3620
  8004   0034F8                     u3625:
  8005   0034F8  90D8               	bcf	status,0,c
  8006   0034FA  3252               	rrcf	(??_floorf+3)^0,f,c
  8007   0034FC  3251               	rrcf	(??_floorf+2)^0,f,c
  8008   0034FE  3250               	rrcf	(??_floorf+1)^0,f,c
  8009   003500  324F               	rrcf	??_floorf^0,f,c
  8010   003502                     u3620:
  8011   003502  2EE8               	decfsz	wreg,f,c
  8012   003504  EF7C  F01A         	goto	u3625
  8013   003508  504F               	movf	??_floorf^0,w,c
  8014   00350A  1050               	iorwf	(??_floorf+1)^0,w,c
  8015   00350C  1051               	iorwf	(??_floorf+2)^0,w,c
  8016   00350E  1052               	iorwf	(??_floorf+3)^0,w,c
  8017   003510  A4D8               	btfss	status,2,c
  8018   003512  EF8D  F01A         	goto	u3631
  8019   003516  EF8F  F01A         	goto	u3630
  8020   00351A                     u3631:
  8021   00351A  EF99  F01A         	goto	l3902
  8022   00351E                     u3630:
  8023   00351E  0E00               	movlw	0
  8024   003520  6E5B               	movwf	floorf@u^0,c
  8025   003522  0E00               	movlw	0
  8026   003524  6E5C               	movwf	(floorf@u+1)^0,c
  8027   003526  0E00               	movlw	0
  8028   003528  6E5D               	movwf	(floorf@u+2)^0,c
  8029   00352A  0E00               	movlw	0
  8030   00352C  6E5E               	movwf	(floorf@u+3)^0,c
  8031   00352E  EFB5  F01A         	goto	l3906
  8032   003532                     l3902:
  8033   003532  90D8               	bcf	status,0,c
  8034   003534  345B               	rlcf	floorf@u^0,w,c
  8035   003536  6E4F               	movwf	??_floorf^0,c
  8036   003538  345C               	rlcf	(floorf@u+1)^0,w,c
  8037   00353A  6E50               	movwf	(??_floorf+1)^0,c
  8038   00353C  345D               	rlcf	(floorf@u+2)^0,w,c
  8039   00353E  6E51               	movwf	(??_floorf+2)^0,c
  8040   003540  345E               	rlcf	(floorf@u+3)^0,w,c
  8041   003542  6E52               	movwf	(??_floorf+3)^0,c
  8042   003544  504F               	movf	??_floorf^0,w,c
  8043   003546  1050               	iorwf	(??_floorf+1)^0,w,c
  8044   003548  1051               	iorwf	(??_floorf+2)^0,w,c
  8045   00354A  1052               	iorwf	(??_floorf+3)^0,w,c
  8046   00354C  B4D8               	btfsc	status,2,c
  8047   00354E  EFAB  F01A         	goto	u3641
  8048   003552  EFAD  F01A         	goto	u3640
  8049   003556                     u3641:
  8050   003556  EFB5  F01A         	goto	l3906
  8051   00355A                     u3640:
  8052   00355A  0E00               	movlw	0
  8053   00355C  6E5B               	movwf	floorf@u^0,c
  8054   00355E  0E00               	movlw	0
  8055   003560  6E5C               	movwf	(floorf@u+1)^0,c
  8056   003562  0E80               	movlw	128
  8057   003564  6E5D               	movwf	(floorf@u+2)^0,c
  8058   003566  0EBF               	movlw	191
  8059   003568  6E5E               	movwf	(floorf@u+3)^0,c
  8060   00356A                     l3906:
  8061   00356A  C05B  F04B         	movff	floorf@u,?_floorf
  8062   00356E  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  8063   003572  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  8064   003576  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  8065   00357A                     l1345:
  8066   00357A  0012               	return		;funcret
  8067   00357C                     __end_of_floorf:
  8068                           	callstack 0
  8069                           
  8070 ;; *************** function ___fpclassifyf *****************
  8071 ;; Defined at:
  8072 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  x               4    0[COMRAM] float 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  u               4   10[COMRAM] struct .
  8077 ;;  e               2    8[COMRAM] int 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2    0[COMRAM] int 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8090 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;Total ram usage:       14 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_efgtoa
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text45
  8101   003D1A                     __ptext45:
  8102                           	callstack 0
  8103   003D1A                     ___fpclassifyf:
  8104                           	callstack 25
  8105   003D1A  C0EC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8106   003D1E  C0ED  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8107   003D22  C0EE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8108   003D26  C0EF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8109   003D2A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8110   003D2E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8111   003D32  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8112   003D36  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8113   003D3A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8114   003D3E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8115   003D42  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8116   003D46  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8117   003D4A  0E18               	movlw	24
  8118   003D4C  EFAD  F01E         	goto	u3460
  8119   003D50                     u3465:
  8120   003D50  90D8               	bcf	status,0,c
  8121   003D52  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8122   003D54  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8123   003D56  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8124   003D58  3205               	rrcf	??___fpclassifyf^0,f,c
  8125   003D5A                     u3460:
  8126   003D5A  2EE8               	decfsz	wreg,f,c
  8127   003D5C  EFA8  F01E         	goto	u3465
  8128   003D60  5005               	movf	??___fpclassifyf^0,w,c
  8129   003D62  6E09               	movwf	___fpclassifyf@e^0,c
  8130   003D64  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8131   003D66  5009               	movf	___fpclassifyf@e^0,w,c
  8132   003D68  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8133   003D6A  A4D8               	btfss	status,2,c
  8134   003D6C  EFBA  F01E         	goto	u3471
  8135   003D70  EFBC  F01E         	goto	u3470
  8136   003D74                     u3471:
  8137   003D74  EFDC  F01E         	goto	l3864
  8138   003D78                     u3470:
  8139   003D78  90D8               	bcf	status,0,c
  8140   003D7A  340B               	rlcf	___fpclassifyf@u^0,w,c
  8141   003D7C  6E05               	movwf	??___fpclassifyf^0,c
  8142   003D7E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8143   003D80  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8144   003D82  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8145   003D84  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8146   003D86  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8147   003D88  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8148   003D8A  5005               	movf	??___fpclassifyf^0,w,c
  8149   003D8C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8150   003D8E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8151   003D90  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8152   003D92  A4D8               	btfss	status,2,c
  8153   003D94  EFCE  F01E         	goto	u3481
  8154   003D98  EFD0  F01E         	goto	u3480
  8155   003D9C                     u3481:
  8156   003D9C  EFD6  F01E         	goto	l3860
  8157   003DA0                     u3480:
  8158   003DA0  0E00               	movlw	0
  8159   003DA2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8160   003DA4  0E02               	movlw	2
  8161   003DA6  6E01               	movwf	?___fpclassifyf^0,c
  8162   003DA8  EF0B  F01F         	goto	l1338
  8163   003DAC                     l3860:
  8164   003DAC  0E00               	movlw	0
  8165   003DAE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8166   003DB0  0E03               	movlw	3
  8167   003DB2  6E01               	movwf	?___fpclassifyf^0,c
  8168   003DB4  EF0B  F01F         	goto	l1338
  8169   003DB8                     l3864:
  8170   003DB8  2809               	incf	___fpclassifyf@e^0,w,c
  8171   003DBA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8172   003DBC  A4D8               	btfss	status,2,c
  8173   003DBE  EFE3  F01E         	goto	u3491
  8174   003DC2  EFE5  F01E         	goto	u3490
  8175   003DC6                     u3491:
  8176   003DC6  EF07  F01F         	goto	l3870
  8177   003DCA                     u3490:
  8178   003DCA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8179   003DCE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8180   003DD2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8181   003DD6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8182   003DDA  0E09               	movlw	9
  8183   003DDC                     u3505:
  8184   003DDC  90D8               	bcf	status,0,c
  8185   003DDE  3605               	rlcf	??___fpclassifyf^0,f,c
  8186   003DE0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8187   003DE2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8188   003DE4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8189   003DE6  2EE8               	decfsz	wreg,f,c
  8190   003DE8  EFEE  F01E         	goto	u3505
  8191   003DEC  5005               	movf	??___fpclassifyf^0,w,c
  8192   003DEE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8193   003DF0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8194   003DF2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8195   003DF4  B4D8               	btfsc	status,2,c
  8196   003DF6  EFFF  F01E         	goto	u3511
  8197   003DFA  EF02  F01F         	goto	u3510
  8198   003DFE                     u3511:
  8199   003DFE  0E01               	movlw	1
  8200   003E00  EF03  F01F         	goto	u3520
  8201   003E04                     u3510:
  8202   003E04  0E00               	movlw	0
  8203   003E06                     u3520:
  8204   003E06  6E01               	movwf	?___fpclassifyf^0,c
  8205   003E08  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8206   003E0A  EF0B  F01F         	goto	l1338
  8207   003E0E                     l3870:
  8208   003E0E  0E00               	movlw	0
  8209   003E10  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8210   003E12  0E04               	movlw	4
  8211   003E14  6E01               	movwf	?___fpclassifyf^0,c
  8212   003E16                     l1338:
  8213   003E16  0012               	return		;funcret
  8214   003E18                     __end_of___fpclassifyf:
  8215                           	callstack 0
  8216                           
  8217 ;; *************** function ___fltol *****************
  8218 ;; Defined at:
  8219 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;  f1              4    0[COMRAM] int 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  exp1            1    9[COMRAM] unsigned char 
  8224 ;;  sign1           1    8[COMRAM] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  4    0[COMRAM] long 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8237 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;Total ram usage:       10 bytes
  8239 ;; Hardware stack levels used: 1
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_Left45
  8244 ;;		_Right45
  8245 ;;		_reverseHalfSquare
  8246 ;;		_RGB2Hue
  8247 ;;		_efgtoa
  8248 ;;		_Yellow_rev1_R90
  8249 ;;		_Pink_rev1_L90
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text46
  8254   003B0E                     __ptext46:
  8255                           	callstack 0
  8256   003B0E                     ___fltol:
  8257                           	callstack 29
  8258   003B0E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8259   003B10  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8260   003B12  6E0A               	movwf	___fltol@exp1^0,c
  8261   003B14  500A               	movf	___fltol@exp1^0,w,c
  8262   003B16  A4D8               	btfss	status,2,c
  8263   003B18  EF90  F01D         	goto	u3371
  8264   003B1C  EF92  F01D         	goto	u3370
  8265   003B20                     u3371:
  8266   003B20  EF9C  F01D         	goto	l3800
  8267   003B24                     u3370:
  8268   003B24                     l3796:
  8269   003B24  0E00               	movlw	0
  8270   003B26  6E01               	movwf	?___fltol^0,c
  8271   003B28  0E00               	movlw	0
  8272   003B2A  6E02               	movwf	(?___fltol+1)^0,c
  8273   003B2C  0E00               	movlw	0
  8274   003B2E  6E03               	movwf	(?___fltol+2)^0,c
  8275   003B30  0E00               	movlw	0
  8276   003B32  6E04               	movwf	(?___fltol+3)^0,c
  8277   003B34  EF09  F01E         	goto	l835
  8278   003B38                     l3800:
  8279   003B38  C001  F005         	movff	___fltol@f1,??___fltol
  8280   003B3C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  8281   003B40  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  8282   003B44  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  8283   003B48  0E20               	movlw	32
  8284   003B4A  EFAC  F01D         	goto	u3380
  8285   003B4E                     u3385:
  8286   003B4E  90D8               	bcf	status,0,c
  8287   003B50  3208               	rrcf	(??___fltol+3)^0,f,c
  8288   003B52  3207               	rrcf	(??___fltol+2)^0,f,c
  8289   003B54  3206               	rrcf	(??___fltol+1)^0,f,c
  8290   003B56  3205               	rrcf	??___fltol^0,f,c
  8291   003B58                     u3380:
  8292   003B58  2EE8               	decfsz	wreg,f,c
  8293   003B5A  EFA7  F01D         	goto	u3385
  8294   003B5E  5005               	movf	??___fltol^0,w,c
  8295   003B60  6E09               	movwf	___fltol@sign1^0,c
  8296   003B62  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8297   003B64  0EFF               	movlw	255
  8298   003B66  1601               	andwf	___fltol@f1^0,f,c
  8299   003B68  0EFF               	movlw	255
  8300   003B6A  1602               	andwf	(___fltol@f1+1)^0,f,c
  8301   003B6C  0EFF               	movlw	255
  8302   003B6E  1603               	andwf	(___fltol@f1+2)^0,f,c
  8303   003B70  0E00               	movlw	0
  8304   003B72  1604               	andwf	(___fltol@f1+3)^0,f,c
  8305   003B74  0E96               	movlw	150
  8306   003B76  5E0A               	subwf	___fltol@exp1^0,f,c
  8307   003B78  BE0A               	btfsc	___fltol@exp1^0,7,c
  8308   003B7A  EFC3  F01D         	goto	u3390
  8309   003B7E  EFC1  F01D         	goto	u3391
  8310   003B82                     u3391:
  8311   003B82  EFD9  F01D         	goto	l3820
  8312   003B86                     u3390:
  8313   003B86  500A               	movf	___fltol@exp1^0,w,c
  8314   003B88  0A80               	xorlw	128
  8315   003B8A  0F97               	addlw	151
  8316   003B8C  B0D8               	btfsc	status,0,c
  8317   003B8E  EFCB  F01D         	goto	u3401
  8318   003B92  EFCD  F01D         	goto	u3400
  8319   003B96                     u3401:
  8320   003B96  EFCF  F01D         	goto	l3816
  8321   003B9A                     u3400:
  8322   003B9A  EF92  F01D         	goto	l3796
  8323   003B9E                     l3816:
  8324   003B9E  90D8               	bcf	status,0,c
  8325   003BA0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8326   003BA2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8327   003BA4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8328   003BA6  3201               	rrcf	___fltol@f1^0,f,c
  8329   003BA8  3E0A               	incfsz	___fltol@exp1^0,f,c
  8330   003BAA  EFCF  F01D         	goto	l3816
  8331   003BAE  EFF1  F01D         	goto	l3830
  8332   003BB2                     l3820:
  8333   003BB2  0E1F               	movlw	31
  8334   003BB4  640A               	cpfsgt	___fltol@exp1^0,c
  8335   003BB6  EFDF  F01D         	goto	u3411
  8336   003BBA  EFE1  F01D         	goto	u3410
  8337   003BBE                     u3411:
  8338   003BBE  EFE9  F01D         	goto	l3828
  8339   003BC2                     u3410:
  8340   003BC2  EF92  F01D         	goto	l3796
  8341   003BC6                     l3826:
  8342   003BC6  90D8               	bcf	status,0,c
  8343   003BC8  3601               	rlcf	___fltol@f1^0,f,c
  8344   003BCA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8345   003BCC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8346   003BCE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8347   003BD0  060A               	decf	___fltol@exp1^0,f,c
  8348   003BD2                     l3828:
  8349   003BD2  500A               	movf	___fltol@exp1^0,w,c
  8350   003BD4  A4D8               	btfss	status,2,c
  8351   003BD6  EFEF  F01D         	goto	u3421
  8352   003BDA  EFF1  F01D         	goto	u3420
  8353   003BDE                     u3421:
  8354   003BDE  EFE3  F01D         	goto	l3826
  8355   003BE2                     u3420:
  8356   003BE2                     l3830:
  8357   003BE2  5009               	movf	___fltol@sign1^0,w,c
  8358   003BE4  B4D8               	btfsc	status,2,c
  8359   003BE6  EFF7  F01D         	goto	u3431
  8360   003BEA  EFF9  F01D         	goto	u3430
  8361   003BEE                     u3431:
  8362   003BEE  EF01  F01E         	goto	l3834
  8363   003BF2                     u3430:
  8364   003BF2  1E04               	comf	(___fltol@f1+3)^0,f,c
  8365   003BF4  1E03               	comf	(___fltol@f1+2)^0,f,c
  8366   003BF6  1E02               	comf	(___fltol@f1+1)^0,f,c
  8367   003BF8  6C01               	negf	___fltol@f1^0,c
  8368   003BFA  0E00               	movlw	0
  8369   003BFC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8370   003BFE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8371   003C00  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8372   003C02                     l3834:
  8373   003C02  C001  F001         	movff	___fltol@f1,?___fltol
  8374   003C06  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  8375   003C0A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  8376   003C0E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  8377   003C12                     l835:
  8378   003C12  0012               	return		;funcret
  8379   003C14                     __end_of___fltol:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function ___flsub *****************
  8383 ;; Defined at:
  8384 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  b               4   41[COMRAM] long 
  8387 ;;  a               4   45[COMRAM] long 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  4   41[COMRAM] long 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8399 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;Total ram usage:        8 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; Hardware stack levels required when called: 1
  8406 ;; This function calls:
  8407 ;;		___fladd
  8408 ;; This function is called by:
  8409 ;;		_RGB2Hue
  8410 ;;		_efgtoa
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text47
  8415   004942                     __ptext47:
  8416                           	callstack 0
  8417   004942                     ___flsub:
  8418                           	callstack 28
  8419   004942  0E00               	movlw	0
  8420   004944  1A2E               	xorwf	___flsub@a^0,f,c
  8421   004946  0E00               	movlw	0
  8422   004948  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  8423   00494A  0E00               	movlw	0
  8424   00494C  1A30               	xorwf	(___flsub@a+2)^0,f,c
  8425   00494E  0E80               	movlw	128
  8426   004950  1A31               	xorwf	(___flsub@a+3)^0,f,c
  8427   004952  C02A  F01A         	movff	___flsub@b,___fladd@b
  8428   004956  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  8429   00495A  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  8430   00495E  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  8431   004962  C02E  F01E         	movff	___flsub@a,___fladd@a
  8432   004966  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  8433   00496A  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  8434   00496E  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  8435   004972  EC5A  F012         	call	___fladd	;wreg free
  8436   004976  C01A  F02A         	movff	?___fladd,?___flsub
  8437   00497A  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  8438   00497E  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  8439   004982  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  8440   004986  0012               	return		;funcret
  8441   004988                     __end_of___flsub:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function ___fladd *****************
  8445 ;; Defined at:
  8446 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  b               4   25[COMRAM] long 
  8449 ;;  a               4   29[COMRAM] long 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  grs             1   40[COMRAM] unsigned char 
  8452 ;;  bexp            1   39[COMRAM] unsigned char 
  8453 ;;  aexp            1   38[COMRAM] unsigned char 
  8454 ;;  signs           1   37[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  4   25[COMRAM] unsigned char 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2, status,0
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:       16 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_RGB2Hue
  8474 ;;		___flsub
  8475 ;;		_efgtoa
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text48
  8480   0024B4                     __ptext48:
  8481                           	callstack 0
  8482   0024B4                     ___fladd:
  8483                           	callstack 28
  8484   0024B4  501D               	movf	(___fladd@b+3)^0,w,c
  8485   0024B6  0B80               	andlw	128
  8486   0024B8  6E26               	movwf	___fladd@signs^0,c
  8487   0024BA  501D               	movf	(___fladd@b+3)^0,w,c
  8488   0024BC  241D               	addwf	(___fladd@b+3)^0,w,c
  8489   0024BE  6E28               	movwf	___fladd@bexp^0,c
  8490   0024C0  AE1C               	btfss	(___fladd@b+2)^0,7,c
  8491   0024C2  EF65  F012         	goto	u2461
  8492   0024C6  EF67  F012         	goto	u2460
  8493   0024CA                     u2461:
  8494   0024CA  EF68  F012         	goto	l3270
  8495   0024CE                     u2460:
  8496   0024CE  8028               	bsf	___fladd@bexp^0,0,c
  8497   0024D0                     l3270:
  8498   0024D0  5028               	movf	___fladd@bexp^0,w,c
  8499   0024D2  B4D8               	btfsc	status,2,c
  8500   0024D4  EF6E  F012         	goto	u2471
  8501   0024D8  EF70  F012         	goto	u2470
  8502   0024DC                     u2471:
  8503   0024DC  EF85  F012         	goto	l3280
  8504   0024E0                     u2470:
  8505   0024E0  2828               	incf	___fladd@bexp^0,w,c
  8506   0024E2  A4D8               	btfss	status,2,c
  8507   0024E4  EF76  F012         	goto	u2481
  8508   0024E8  EF78  F012         	goto	u2480
  8509   0024EC                     u2481:
  8510   0024EC  EF80  F012         	goto	l3276
  8511   0024F0                     u2480:
  8512   0024F0  0E00               	movlw	0
  8513   0024F2  6E1A               	movwf	___fladd@b^0,c
  8514   0024F4  0E00               	movlw	0
  8515   0024F6  6E1B               	movwf	(___fladd@b+1)^0,c
  8516   0024F8  0E00               	movlw	0
  8517   0024FA  6E1C               	movwf	(___fladd@b+2)^0,c
  8518   0024FC  0E00               	movlw	0
  8519   0024FE  6E1D               	movwf	(___fladd@b+3)^0,c
  8520   002500                     l3276:
  8521   002500  8E1C               	bsf	(___fladd@b+2)^0,7,c
  8522   002502  0E00               	movlw	0
  8523   002504  6E1D               	movwf	(___fladd@b+3)^0,c
  8524   002506  EF8D  F012         	goto	l3282
  8525   00250A                     l3280:
  8526   00250A  0E00               	movlw	0
  8527   00250C  6E1A               	movwf	___fladd@b^0,c
  8528   00250E  0E00               	movlw	0
  8529   002510  6E1B               	movwf	(___fladd@b+1)^0,c
  8530   002512  0E00               	movlw	0
  8531   002514  6E1C               	movwf	(___fladd@b+2)^0,c
  8532   002516  0E00               	movlw	0
  8533   002518  6E1D               	movwf	(___fladd@b+3)^0,c
  8534   00251A                     l3282:
  8535   00251A  5021               	movf	(___fladd@a+3)^0,w,c
  8536   00251C  0B80               	andlw	128
  8537   00251E  6E27               	movwf	___fladd@aexp^0,c
  8538   002520  5026               	movf	___fladd@signs^0,w,c
  8539   002522  1827               	xorwf	___fladd@aexp^0,w,c
  8540   002524  B4D8               	btfsc	status,2,c
  8541   002526  EF97  F012         	goto	u2491
  8542   00252A  EF99  F012         	goto	u2490
  8543   00252E                     u2491:
  8544   00252E  EF9A  F012         	goto	l3288
  8545   002532                     u2490:
  8546   002532  8C26               	bsf	___fladd@signs^0,6,c
  8547   002534                     l3288:
  8548   002534  5021               	movf	(___fladd@a+3)^0,w,c
  8549   002536  2421               	addwf	(___fladd@a+3)^0,w,c
  8550   002538  6E27               	movwf	___fladd@aexp^0,c
  8551   00253A  AE20               	btfss	(___fladd@a+2)^0,7,c
  8552   00253C  EFA2  F012         	goto	u2501
  8553   002540  EFA4  F012         	goto	u2500
  8554   002544                     u2501:
  8555   002544  EFA5  F012         	goto	l3294
  8556   002548                     u2500:
  8557   002548  8027               	bsf	___fladd@aexp^0,0,c
  8558   00254A                     l3294:
  8559   00254A  5027               	movf	___fladd@aexp^0,w,c
  8560   00254C  B4D8               	btfsc	status,2,c
  8561   00254E  EFAB  F012         	goto	u2511
  8562   002552  EFAD  F012         	goto	u2510
  8563   002556                     u2511:
  8564   002556  EFC2  F012         	goto	l3304
  8565   00255A                     u2510:
  8566   00255A  2827               	incf	___fladd@aexp^0,w,c
  8567   00255C  A4D8               	btfss	status,2,c
  8568   00255E  EFB3  F012         	goto	u2521
  8569   002562  EFB5  F012         	goto	u2520
  8570   002566                     u2521:
  8571   002566  EFBD  F012         	goto	l3300
  8572   00256A                     u2520:
  8573   00256A  0E00               	movlw	0
  8574   00256C  6E1E               	movwf	___fladd@a^0,c
  8575   00256E  0E00               	movlw	0
  8576   002570  6E1F               	movwf	(___fladd@a+1)^0,c
  8577   002572  0E00               	movlw	0
  8578   002574  6E20               	movwf	(___fladd@a+2)^0,c
  8579   002576  0E00               	movlw	0
  8580   002578  6E21               	movwf	(___fladd@a+3)^0,c
  8581   00257A                     l3300:
  8582   00257A  8E20               	bsf	(___fladd@a+2)^0,7,c
  8583   00257C  0E00               	movlw	0
  8584   00257E  6E21               	movwf	(___fladd@a+3)^0,c
  8585   002580  EFCA  F012         	goto	l3306
  8586   002584                     l3304:
  8587   002584  0E00               	movlw	0
  8588   002586  6E1E               	movwf	___fladd@a^0,c
  8589   002588  0E00               	movlw	0
  8590   00258A  6E1F               	movwf	(___fladd@a+1)^0,c
  8591   00258C  0E00               	movlw	0
  8592   00258E  6E20               	movwf	(___fladd@a+2)^0,c
  8593   002590  0E00               	movlw	0
  8594   002592  6E21               	movwf	(___fladd@a+3)^0,c
  8595   002594                     l3306:
  8596   002594  5028               	movf	___fladd@bexp^0,w,c
  8597   002596  5C27               	subwf	___fladd@aexp^0,w,c
  8598   002598  B0D8               	btfsc	status,0,c
  8599   00259A  EFD1  F012         	goto	u2531
  8600   00259E  EFD3  F012         	goto	u2530
  8601   0025A2                     u2531:
  8602   0025A2  EFFA  F012         	goto	l3342
  8603   0025A6                     u2530:
  8604   0025A6  AC26               	btfss	___fladd@signs^0,6,c
  8605   0025A8  EFD8  F012         	goto	u2541
  8606   0025AC  EFDA  F012         	goto	u2540
  8607   0025B0                     u2541:
  8608   0025B0  EFDC  F012         	goto	l3312
  8609   0025B4                     u2540:
  8610   0025B4  0E80               	movlw	128
  8611   0025B6  1A26               	xorwf	___fladd@signs^0,f,c
  8612   0025B8                     l3312:
  8613   0025B8  C028  F029         	movff	___fladd@bexp,___fladd@grs
  8614   0025BC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  8615   0025C0  C029  F027         	movff	___fladd@grs,___fladd@aexp
  8616   0025C4  C01A  F029         	movff	___fladd@b,___fladd@grs
  8617   0025C8  C01E  F01A         	movff	___fladd@a,___fladd@b
  8618   0025CC  C029  F01E         	movff	___fladd@grs,___fladd@a
  8619   0025D0  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  8620   0025D4  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  8621   0025D8  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  8622   0025DC  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  8623   0025E0  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  8624   0025E4  C029  F020         	movff	___fladd@grs,___fladd@a+2
  8625   0025E8  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  8626   0025EC  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  8627   0025F0  C029  F021         	movff	___fladd@grs,___fladd@a+3
  8628   0025F4                     l3342:
  8629   0025F4  0E00               	movlw	0
  8630   0025F6  6E29               	movwf	___fladd@grs^0,c
  8631   0025F8  5028               	movf	___fladd@bexp^0,w,c
  8632   0025FA  C027  F022         	movff	___fladd@aexp,??___fladd
  8633   0025FE  6A23               	clrf	(??___fladd+1)^0,c
  8634   002600  5E22               	subwf	??___fladd^0,f,c
  8635   002602  0E00               	movlw	0
  8636   002604  5A23               	subwfb	(??___fladd+1)^0,f,c
  8637   002606  BE23               	btfsc	(??___fladd+1)^0,7,c
  8638   002608  EF0F  F013         	goto	u2551
  8639   00260C  5023               	movf	(??___fladd+1)^0,w,c
  8640   00260E  E109               	bnz	u2550
  8641   002610  0E1A               	movlw	26
  8642   002612  5C22               	subwf	??___fladd^0,w,c
  8643   002614  A0D8               	btfss	status,0,c
  8644   002616  EF0F  F013         	goto	u2551
  8645   00261A  EF11  F013         	goto	u2550
  8646   00261E                     u2551:
  8647   00261E  EF48  F013         	goto	l1067
  8648   002622                     u2550:
  8649   002622  501A               	movf	___fladd@b^0,w,c
  8650   002624  101B               	iorwf	(___fladd@b+1)^0,w,c
  8651   002626  101C               	iorwf	(___fladd@b+2)^0,w,c
  8652   002628  101D               	iorwf	(___fladd@b+3)^0,w,c
  8653   00262A  A4D8               	btfss	status,2,c
  8654   00262C  EF1A  F013         	goto	u2561
  8655   002630  EF1D  F013         	goto	u2560
  8656   002634                     u2561:
  8657   002634  0E01               	movlw	1
  8658   002636  EF1E  F013         	goto	u2570
  8659   00263A                     u2560:
  8660   00263A  0E00               	movlw	0
  8661   00263C                     u2570:
  8662   00263C  6E29               	movwf	___fladd@grs^0,c
  8663   00263E  0E00               	movlw	0
  8664   002640  6E1A               	movwf	___fladd@b^0,c
  8665   002642  0E00               	movlw	0
  8666   002644  6E1B               	movwf	(___fladd@b+1)^0,c
  8667   002646  0E00               	movlw	0
  8668   002648  6E1C               	movwf	(___fladd@b+2)^0,c
  8669   00264A  0E00               	movlw	0
  8670   00264C  6E1D               	movwf	(___fladd@b+3)^0,c
  8671   00264E  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  8672   002652  EF51  F013         	goto	l1066
  8673   002656                     l1068:
  8674   002656  A029               	btfss	___fladd@grs^0,0,c
  8675   002658  EF30  F013         	goto	u2581
  8676   00265C  EF32  F013         	goto	u2580
  8677   002660                     u2581:
  8678   002660  EF38  F013         	goto	l3354
  8679   002664                     u2580:
  8680   002664  90D8               	bcf	status,0,c
  8681   002666  3029               	rrcf	___fladd@grs^0,w,c
  8682   002668  0901               	iorlw	1
  8683   00266A  6E29               	movwf	___fladd@grs^0,c
  8684   00266C  EF3A  F013         	goto	l3356
  8685   002670                     l3354:
  8686   002670  90D8               	bcf	status,0,c
  8687   002672  3229               	rrcf	___fladd@grs^0,f,c
  8688   002674                     l3356:
  8689   002674  A01A               	btfss	___fladd@b^0,0,c
  8690   002676  EF3F  F013         	goto	u2591
  8691   00267A  EF41  F013         	goto	u2590
  8692   00267E                     u2591:
  8693   00267E  EF42  F013         	goto	l3360
  8694   002682                     u2590:
  8695   002682  8E29               	bsf	___fladd@grs^0,7,c
  8696   002684                     l3360:
  8697   002684  341D               	rlcf	(___fladd@b+3)^0,w,c
  8698   002686  321D               	rrcf	(___fladd@b+3)^0,f,c
  8699   002688  321C               	rrcf	(___fladd@b+2)^0,f,c
  8700   00268A  321B               	rrcf	(___fladd@b+1)^0,f,c
  8701   00268C  321A               	rrcf	___fladd@b^0,f,c
  8702   00268E  2A28               	incf	___fladd@bexp^0,f,c
  8703   002690                     l1067:
  8704   002690  5027               	movf	___fladd@aexp^0,w,c
  8705   002692  5C28               	subwf	___fladd@bexp^0,w,c
  8706   002694  A0D8               	btfss	status,0,c
  8707   002696  EF4F  F013         	goto	u2601
  8708   00269A  EF51  F013         	goto	u2600
  8709   00269E                     u2601:
  8710   00269E  EF2B  F013         	goto	l1068
  8711   0026A2                     u2600:
  8712   0026A2                     l1066:
  8713   0026A2  BC26               	btfsc	___fladd@signs^0,6,c
  8714   0026A4  EF56  F013         	goto	u2611
  8715   0026A8  EF58  F013         	goto	u2610
  8716   0026AC                     u2611:
  8717   0026AC  EF98  F013         	goto	l3388
  8718   0026B0                     u2610:
  8719   0026B0  5028               	movf	___fladd@bexp^0,w,c
  8720   0026B2  A4D8               	btfss	status,2,c
  8721   0026B4  EF5E  F013         	goto	u2621
  8722   0026B8  EF60  F013         	goto	u2620
  8723   0026BC                     u2621:
  8724   0026BC  EF6A  F013         	goto	l3370
  8725   0026C0                     u2620:
  8726   0026C0  0E00               	movlw	0
  8727   0026C2  6E1A               	movwf	?___fladd^0,c
  8728   0026C4  0E00               	movlw	0
  8729   0026C6  6E1B               	movwf	(?___fladd+1)^0,c
  8730   0026C8  0E00               	movlw	0
  8731   0026CA  6E1C               	movwf	(?___fladd+2)^0,c
  8732   0026CC  0E00               	movlw	0
  8733   0026CE  6E1D               	movwf	(?___fladd+3)^0,c
  8734   0026D0  EFB9  F014         	goto	l1075
  8735   0026D4                     l3370:
  8736   0026D4  501E               	movf	___fladd@a^0,w,c
  8737   0026D6  261A               	addwf	___fladd@b^0,f,c
  8738   0026D8  501F               	movf	(___fladd@a+1)^0,w,c
  8739   0026DA  221B               	addwfc	(___fladd@b+1)^0,f,c
  8740   0026DC  5020               	movf	(___fladd@a+2)^0,w,c
  8741   0026DE  221C               	addwfc	(___fladd@b+2)^0,f,c
  8742   0026E0  5021               	movf	(___fladd@a+3)^0,w,c
  8743   0026E2  221D               	addwfc	(___fladd@b+3)^0,f,c
  8744   0026E4  A01D               	btfss	(___fladd@b+3)^0,0,c
  8745   0026E6  EF77  F013         	goto	u2631
  8746   0026EA  EF79  F013         	goto	u2630
  8747   0026EE                     u2631:
  8748   0026EE  EF25  F014         	goto	l3424
  8749   0026F2                     u2630:
  8750   0026F2  A029               	btfss	___fladd@grs^0,0,c
  8751   0026F4  EF7E  F013         	goto	u2641
  8752   0026F8  EF80  F013         	goto	u2640
  8753   0026FC                     u2641:
  8754   0026FC  EF86  F013         	goto	l3378
  8755   002700                     u2640:
  8756   002700  90D8               	bcf	status,0,c
  8757   002702  3029               	rrcf	___fladd@grs^0,w,c
  8758   002704  0901               	iorlw	1
  8759   002706  6E29               	movwf	___fladd@grs^0,c
  8760   002708  EF88  F013         	goto	l3380
  8761   00270C                     l3378:
  8762   00270C  90D8               	bcf	status,0,c
  8763   00270E  3229               	rrcf	___fladd@grs^0,f,c
  8764   002710                     l3380:
  8765   002710  A01A               	btfss	___fladd@b^0,0,c
  8766   002712  EF8D  F013         	goto	u2651
  8767   002716  EF8F  F013         	goto	u2650
  8768   00271A                     u2651:
  8769   00271A  EF90  F013         	goto	l3384
  8770   00271E                     u2650:
  8771   00271E  8E29               	bsf	___fladd@grs^0,7,c
  8772   002720                     l3384:
  8773   002720  341D               	rlcf	(___fladd@b+3)^0,w,c
  8774   002722  321D               	rrcf	(___fladd@b+3)^0,f,c
  8775   002724  321C               	rrcf	(___fladd@b+2)^0,f,c
  8776   002726  321B               	rrcf	(___fladd@b+1)^0,f,c
  8777   002728  321A               	rrcf	___fladd@b^0,f,c
  8778   00272A  2A28               	incf	___fladd@bexp^0,f,c
  8779   00272C  EF25  F014         	goto	l3424
  8780   002730                     l3388:
  8781   002730  501E               	movf	___fladd@a^0,w,c
  8782   002732  5C1A               	subwf	___fladd@b^0,w,c
  8783   002734  501F               	movf	(___fladd@a+1)^0,w,c
  8784   002736  581B               	subwfb	(___fladd@b+1)^0,w,c
  8785   002738  5020               	movf	(___fladd@a+2)^0,w,c
  8786   00273A  581C               	subwfb	(___fladd@b+2)^0,w,c
  8787   00273C  501D               	movf	(___fladd@b+3)^0,w,c
  8788   00273E  0A80               	xorlw	128
  8789   002740  6E22               	movwf	??___fladd^0,c
  8790   002742  5021               	movf	(___fladd@a+3)^0,w,c
  8791   002744  0A80               	xorlw	128
  8792   002746  5822               	subwfb	??___fladd^0,w,c
  8793   002748  B0D8               	btfsc	status,0,c
  8794   00274A  EFA9  F013         	goto	u2661
  8795   00274E  EFAB  F013         	goto	u2660
  8796   002752                     u2661:
  8797   002752  EFD6  F013         	goto	l3398
  8798   002756                     u2660:
  8799   002756  501A               	movf	___fladd@b^0,w,c
  8800   002758  5C1E               	subwf	___fladd@a^0,w,c
  8801   00275A  6E22               	movwf	??___fladd^0,c
  8802   00275C  501B               	movf	(___fladd@b+1)^0,w,c
  8803   00275E  581F               	subwfb	(___fladd@a+1)^0,w,c
  8804   002760  6E23               	movwf	(??___fladd+1)^0,c
  8805   002762  501C               	movf	(___fladd@b+2)^0,w,c
  8806   002764  5820               	subwfb	(___fladd@a+2)^0,w,c
  8807   002766  6E24               	movwf	(??___fladd+2)^0,c
  8808   002768  501D               	movf	(___fladd@b+3)^0,w,c
  8809   00276A  5821               	subwfb	(___fladd@a+3)^0,w,c
  8810   00276C  6E25               	movwf	(??___fladd+3)^0,c
  8811   00276E  0EFF               	movlw	255
  8812   002770  2422               	addwf	??___fladd^0,w,c
  8813   002772  6E1A               	movwf	___fladd@b^0,c
  8814   002774  0EFF               	movlw	255
  8815   002776  2023               	addwfc	(??___fladd+1)^0,w,c
  8816   002778  6E1B               	movwf	(___fladd@b+1)^0,c
  8817   00277A  0EFF               	movlw	255
  8818   00277C  2024               	addwfc	(??___fladd+2)^0,w,c
  8819   00277E  6E1C               	movwf	(___fladd@b+2)^0,c
  8820   002780  0EFF               	movlw	255
  8821   002782  2025               	addwfc	(??___fladd+3)^0,w,c
  8822   002784  6E1D               	movwf	(___fladd@b+3)^0,c
  8823   002786  0E80               	movlw	128
  8824   002788  1A26               	xorwf	___fladd@signs^0,f,c
  8825   00278A  6C29               	negf	___fladd@grs^0,c
  8826   00278C  5029               	movf	___fladd@grs^0,w,c
  8827   00278E  A4D8               	btfss	status,2,c
  8828   002790  EFCC  F013         	goto	u2671
  8829   002794  EFCE  F013         	goto	u2670
  8830   002798                     u2671:
  8831   002798  EFDE  F013         	goto	l1083
  8832   00279C                     u2670:
  8833   00279C  0E01               	movlw	1
  8834   00279E  261A               	addwf	___fladd@b^0,f,c
  8835   0027A0  0E00               	movlw	0
  8836   0027A2  221B               	addwfc	(___fladd@b+1)^0,f,c
  8837   0027A4  221C               	addwfc	(___fladd@b+2)^0,f,c
  8838   0027A6  221D               	addwfc	(___fladd@b+3)^0,f,c
  8839   0027A8  EFDE  F013         	goto	l1083
  8840   0027AC                     l3398:
  8841   0027AC  501E               	movf	___fladd@a^0,w,c
  8842   0027AE  5E1A               	subwf	___fladd@b^0,f,c
  8843   0027B0  501F               	movf	(___fladd@a+1)^0,w,c
  8844   0027B2  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  8845   0027B4  5020               	movf	(___fladd@a+2)^0,w,c
  8846   0027B6  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  8847   0027B8  5021               	movf	(___fladd@a+3)^0,w,c
  8848   0027BA  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  8849   0027BC                     l1083:
  8850   0027BC  501A               	movf	___fladd@b^0,w,c
  8851   0027BE  101B               	iorwf	(___fladd@b+1)^0,w,c
  8852   0027C0  101C               	iorwf	(___fladd@b+2)^0,w,c
  8853   0027C2  101D               	iorwf	(___fladd@b+3)^0,w,c
  8854   0027C4  A4D8               	btfss	status,2,c
  8855   0027C6  EFE7  F013         	goto	u2681
  8856   0027CA  EFE9  F013         	goto	u2680
  8857   0027CE                     u2681:
  8858   0027CE  EF1E  F014         	goto	l3422
  8859   0027D2                     u2680:
  8860   0027D2  5029               	movf	___fladd@grs^0,w,c
  8861   0027D4  A4D8               	btfss	status,2,c
  8862   0027D6  EFEF  F013         	goto	u2691
  8863   0027DA  EFF1  F013         	goto	u2690
  8864   0027DE                     u2691:
  8865   0027DE  EF1E  F014         	goto	l3422
  8866   0027E2                     u2690:
  8867   0027E2  0E00               	movlw	0
  8868   0027E4  6E1A               	movwf	?___fladd^0,c
  8869   0027E6  0E00               	movlw	0
  8870   0027E8  6E1B               	movwf	(?___fladd+1)^0,c
  8871   0027EA  0E00               	movlw	0
  8872   0027EC  6E1C               	movwf	(?___fladd+2)^0,c
  8873   0027EE  0E00               	movlw	0
  8874   0027F0  6E1D               	movwf	(?___fladd+3)^0,c
  8875   0027F2  EFB9  F014         	goto	l1075
  8876   0027F6                     l3406:
  8877   0027F6  90D8               	bcf	status,0,c
  8878   0027F8  361A               	rlcf	___fladd@b^0,f,c
  8879   0027FA  361B               	rlcf	(___fladd@b+1)^0,f,c
  8880   0027FC  361C               	rlcf	(___fladd@b+2)^0,f,c
  8881   0027FE  361D               	rlcf	(___fladd@b+3)^0,f,c
  8882   002800  AE29               	btfss	___fladd@grs^0,7,c
  8883   002802  EF05  F014         	goto	u2701
  8884   002806  EF07  F014         	goto	u2700
  8885   00280A                     u2701:
  8886   00280A  EF08  F014         	goto	l3412
  8887   00280E                     u2700:
  8888   00280E  801A               	bsf	___fladd@b^0,0,c
  8889   002810                     l3412:
  8890   002810  A029               	btfss	___fladd@grs^0,0,c
  8891   002812  EF0D  F014         	goto	u2711
  8892   002816  EF0F  F014         	goto	u2710
  8893   00281A                     u2711:
  8894   00281A  EF13  F014         	goto	l3416
  8895   00281E                     u2710:
  8896   00281E  80D8               	bsf	status,0,c
  8897   002820  3629               	rlcf	___fladd@grs^0,f,c
  8898   002822  EF15  F014         	goto	l3418
  8899   002826                     l3416:
  8900   002826  90D8               	bcf	status,0,c
  8901   002828  3629               	rlcf	___fladd@grs^0,f,c
  8902   00282A                     l3418:
  8903   00282A  5028               	movf	___fladd@bexp^0,w,c
  8904   00282C  B4D8               	btfsc	status,2,c
  8905   00282E  EF1B  F014         	goto	u2721
  8906   002832  EF1D  F014         	goto	u2720
  8907   002836                     u2721:
  8908   002836  EF1E  F014         	goto	l3422
  8909   00283A                     u2720:
  8910   00283A  0628               	decf	___fladd@bexp^0,f,c
  8911   00283C                     l3422:
  8912   00283C  AE1C               	btfss	(___fladd@b+2)^0,7,c
  8913   00283E  EF23  F014         	goto	u2731
  8914   002842  EF25  F014         	goto	u2730
  8915   002846                     u2731:
  8916   002846  EFFB  F013         	goto	l3406
  8917   00284A                     u2730:
  8918   00284A                     l3424:
  8919   00284A  0E00               	movlw	0
  8920   00284C  6E27               	movwf	___fladd@aexp^0,c
  8921   00284E  AE29               	btfss	___fladd@grs^0,7,c
  8922   002850  EF2C  F014         	goto	u2741
  8923   002854  EF2E  F014         	goto	u2740
  8924   002858                     u2741:
  8925   002858  EF46  F014         	goto	l1092
  8926   00285C                     u2740:
  8927   00285C  C029  F022         	movff	___fladd@grs,??___fladd
  8928   002860  0E7F               	movlw	127
  8929   002862  1622               	andwf	??___fladd^0,f,c
  8930   002864  B4D8               	btfsc	status,2,c
  8931   002866  EF37  F014         	goto	u2751
  8932   00286A  EF39  F014         	goto	u2750
  8933   00286E                     u2751:
  8934   00286E  EF3D  F014         	goto	l1093
  8935   002872                     u2750:
  8936   002872                     l3430:
  8937   002872  0E01               	movlw	1
  8938   002874  6E27               	movwf	___fladd@aexp^0,c
  8939   002876  EF46  F014         	goto	l1092
  8940   00287A                     l1093:
  8941   00287A  A01A               	btfss	___fladd@b^0,0,c
  8942   00287C  EF42  F014         	goto	u2761
  8943   002880  EF44  F014         	goto	u2760
  8944   002884                     u2761:
  8945   002884  EF46  F014         	goto	l1092
  8946   002888                     u2760:
  8947   002888  EF39  F014         	goto	l3430
  8948   00288C                     l1092:
  8949   00288C  5027               	movf	___fladd@aexp^0,w,c
  8950   00288E  B4D8               	btfsc	status,2,c
  8951   002890  EF4C  F014         	goto	u2771
  8952   002894  EF4E  F014         	goto	u2770
  8953   002898                     u2771:
  8954   002898  EF79  F014         	goto	l3442
  8955   00289C                     u2770:
  8956   00289C  0E01               	movlw	1
  8957   00289E  261A               	addwf	___fladd@b^0,f,c
  8958   0028A0  0E00               	movlw	0
  8959   0028A2  221B               	addwfc	(___fladd@b+1)^0,f,c
  8960   0028A4  221C               	addwfc	(___fladd@b+2)^0,f,c
  8961   0028A6  221D               	addwfc	(___fladd@b+3)^0,f,c
  8962   0028A8  A01D               	btfss	(___fladd@b+3)^0,0,c
  8963   0028AA  EF59  F014         	goto	u2781
  8964   0028AE  EF5B  F014         	goto	u2780
  8965   0028B2                     u2781:
  8966   0028B2  EF79  F014         	goto	l3442
  8967   0028B6                     u2780:
  8968   0028B6  C01A  F022         	movff	___fladd@b,??___fladd
  8969   0028BA  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  8970   0028BE  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  8971   0028C2  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  8972   0028C6  3425               	rlcf	(??___fladd+3)^0,w,c
  8973   0028C8  3225               	rrcf	(??___fladd+3)^0,f,c
  8974   0028CA  3224               	rrcf	(??___fladd+2)^0,f,c
  8975   0028CC  3223               	rrcf	(??___fladd+1)^0,f,c
  8976   0028CE  3222               	rrcf	??___fladd^0,f,c
  8977   0028D0  C022  F01A         	movff	??___fladd,___fladd@b
  8978   0028D4  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  8979   0028D8  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  8980   0028DC  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  8981   0028E0  2828               	incf	___fladd@bexp^0,w,c
  8982   0028E2  B4D8               	btfsc	status,2,c
  8983   0028E4  EF76  F014         	goto	u2791
  8984   0028E8  EF78  F014         	goto	u2790
  8985   0028EC                     u2791:
  8986   0028EC  EF79  F014         	goto	l3442
  8987   0028F0                     u2790:
  8988   0028F0  2A28               	incf	___fladd@bexp^0,f,c
  8989   0028F2                     l3442:
  8990   0028F2  2828               	incf	___fladd@bexp^0,w,c
  8991   0028F4  B4D8               	btfsc	status,2,c
  8992   0028F6  EF7F  F014         	goto	u2801
  8993   0028FA  EF81  F014         	goto	u2800
  8994   0028FE                     u2801:
  8995   0028FE  EF89  F014         	goto	l3446
  8996   002902                     u2800:
  8997   002902  5028               	movf	___fladd@bexp^0,w,c
  8998   002904  A4D8               	btfss	status,2,c
  8999   002906  EF87  F014         	goto	u2811
  9000   00290A  EF89  F014         	goto	u2810
  9001   00290E                     u2811:
  9002   00290E  EF9B  F014         	goto	l3450
  9003   002912                     u2810:
  9004   002912                     l3446:
  9005   002912  0E00               	movlw	0
  9006   002914  6E1A               	movwf	___fladd@b^0,c
  9007   002916  0E00               	movlw	0
  9008   002918  6E1B               	movwf	(___fladd@b+1)^0,c
  9009   00291A  0E00               	movlw	0
  9010   00291C  6E1C               	movwf	(___fladd@b+2)^0,c
  9011   00291E  0E00               	movlw	0
  9012   002920  6E1D               	movwf	(___fladd@b+3)^0,c
  9013   002922  5028               	movf	___fladd@bexp^0,w,c
  9014   002924  A4D8               	btfss	status,2,c
  9015   002926  EF97  F014         	goto	u2821
  9016   00292A  EF99  F014         	goto	u2820
  9017   00292E                     u2821:
  9018   00292E  EF9B  F014         	goto	l3450
  9019   002932                     u2820:
  9020   002932  0E00               	movlw	0
  9021   002934  6E26               	movwf	___fladd@signs^0,c
  9022   002936                     l3450:
  9023   002936  A028               	btfss	___fladd@bexp^0,0,c
  9024   002938  EFA0  F014         	goto	u2831
  9025   00293C  EFA2  F014         	goto	u2830
  9026   002940                     u2831:
  9027   002940  EFA5  F014         	goto	l3454
  9028   002944                     u2830:
  9029   002944  8E1C               	bsf	(___fladd@b+2)^0,7,c
  9030   002946  EFA6  F014         	goto	l3456
  9031   00294A                     l3454:
  9032   00294A  9E1C               	bcf	(___fladd@b+2)^0,7,c
  9033   00294C                     l3456:
  9034   00294C  90D8               	bcf	status,0,c
  9035   00294E  3028               	rrcf	___fladd@bexp^0,w,c
  9036   002950  6E1D               	movwf	(___fladd@b+3)^0,c
  9037   002952  AE26               	btfss	___fladd@signs^0,7,c
  9038   002954  EFAE  F014         	goto	u2841
  9039   002958  EFB0  F014         	goto	u2840
  9040   00295C                     u2841:
  9041   00295C  EFB1  F014         	goto	l3462
  9042   002960                     u2840:
  9043   002960  8E1D               	bsf	(___fladd@b+3)^0,7,c
  9044   002962                     l3462:
  9045   002962  C01A  F01A         	movff	___fladd@b,?___fladd
  9046   002966  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  9047   00296A  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  9048   00296E  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  9049   002972                     l1075:
  9050   002972  0012               	return		;funcret
  9051   002974                     __end_of___fladd:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function ___flneg *****************
  9055 ;; Defined at:
  9056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  f1              4    0[COMRAM] unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  4    0[COMRAM] unsigned char 
  9063 ;; Registers used:
  9064 ;;		wreg, status,2, status,0
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9070 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;Total ram usage:        4 bytes
  9075 ;; Hardware stack levels used: 1
  9076 ;; This function calls:
  9077 ;;		Nothing
  9078 ;; This function is called by:
  9079 ;;		_efgtoa
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text49
  9084   004A92                     __ptext49:
  9085                           	callstack 0
  9086   004A92                     ___flneg:
  9087                           	callstack 25
  9088   004A92  5001               	movf	___flneg@f1^0,w,c
  9089   004A94  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9090   004A96  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9091   004A98  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9092   004A9A  B4D8               	btfsc	status,2,c
  9093   004A9C  EF52  F025         	goto	u3361
  9094   004AA0  EF54  F025         	goto	u3360
  9095   004AA4                     u3361:
  9096   004AA4  EF5C  F025         	goto	l3790
  9097   004AA8                     u3360:
  9098   004AA8  0E00               	movlw	0
  9099   004AAA  1A01               	xorwf	___flneg@f1^0,f,c
  9100   004AAC  0E00               	movlw	0
  9101   004AAE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9102   004AB0  0E00               	movlw	0
  9103   004AB2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9104   004AB4  0E80               	movlw	128
  9105   004AB6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9106   004AB8                     l3790:
  9107   004AB8  C001  F001         	movff	___flneg@f1,?___flneg
  9108   004ABC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9109   004AC0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9110   004AC4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9111   004AC8  0012               	return		;funcret
  9112   004ACA                     __end_of___flneg:
  9113                           	callstack 0
  9114                           
  9115 ;; *************** function ___flmul *****************
  9116 ;; Defined at:
  9117 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  b               4   74[COMRAM] unsigned char 
  9120 ;;  a               4   78[COMRAM] unsigned char 
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;  prod            4    7[BANK0 ] struct .
  9123 ;;  grs             4    1[BANK0 ] unsigned long 
  9124 ;;  temp            2   11[BANK0 ] struct .
  9125 ;;  bexp            1    6[BANK0 ] unsigned char 
  9126 ;;  aexp            1    5[BANK0 ] unsigned char 
  9127 ;;  sign            1    0[BANK0 ] unsigned char 
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  4   74[COMRAM] unsigned char 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, prodl, prodh
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9137 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;Total ram usage:       25 bytes
  9142 ;; Hardware stack levels used: 1
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_Left45
  9147 ;;		_Right45
  9148 ;;		_reverseHalfSquare
  9149 ;;		_RGB2Hue
  9150 ;;		_efgtoa
  9151 ;;		_Yellow_rev1_R90
  9152 ;;		_Pink_rev1_L90
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text50
  9157   002974                     __ptext50:
  9158                           	callstack 0
  9159   002974                     ___flmul:
  9160                           	callstack 29
  9161   002974  504E               	movf	(___flmul@b+3)^0,w,c
  9162   002976  0B80               	andlw	128
  9163   002978  0100               	movlb	0	; () banked
  9164   00297A  6F60               	movwf	___flmul@sign& (0+255),b
  9165   00297C  504E               	movf	(___flmul@b+3)^0,w,c
  9166   00297E  244E               	addwf	(___flmul@b+3)^0,w,c
  9167   002980  6F66               	movwf	___flmul@bexp& (0+255),b
  9168   002982                     
  9169                           ; BSR set to: 0
  9170   002982  AE4D               	btfss	(___flmul@b+2)^0,7,c
  9171   002984  EFC6  F014         	goto	u3091
  9172   002988  EFC8  F014         	goto	u3090
  9173   00298C                     u3091:
  9174   00298C  EFC9  F014         	goto	l3618
  9175   002990                     u3090:
  9176   002990                     
  9177                           ; BSR set to: 0
  9178   002990  8166               	bsf	___flmul@bexp& (0+255),0,b
  9179   002992                     l3618:
  9180                           
  9181                           ; BSR set to: 0
  9182   002992  5166               	movf	___flmul@bexp& (0+255),w,b
  9183   002994  B4D8               	btfsc	status,2,c
  9184   002996  EFCF  F014         	goto	u3101
  9185   00299A  EFD1  F014         	goto	u3100
  9186   00299E                     u3101:
  9187   00299E  EFE4  F014         	goto	l3626
  9188   0029A2                     u3100:
  9189   0029A2                     
  9190                           ; BSR set to: 0
  9191   0029A2  2966               	incf	___flmul@bexp& (0+255),w,b
  9192   0029A4  A4D8               	btfss	status,2,c
  9193   0029A6  EFD7  F014         	goto	u3111
  9194   0029AA  EFD9  F014         	goto	u3110
  9195   0029AE                     u3111:
  9196   0029AE  EFE1  F014         	goto	l3624
  9197   0029B2                     u3110:
  9198   0029B2                     
  9199                           ; BSR set to: 0
  9200   0029B2  0E00               	movlw	0
  9201   0029B4  6E4B               	movwf	___flmul@b^0,c
  9202   0029B6  0E00               	movlw	0
  9203   0029B8  6E4C               	movwf	(___flmul@b+1)^0,c
  9204   0029BA  0E00               	movlw	0
  9205   0029BC  6E4D               	movwf	(___flmul@b+2)^0,c
  9206   0029BE  0E00               	movlw	0
  9207   0029C0  6E4E               	movwf	(___flmul@b+3)^0,c
  9208   0029C2                     l3624:
  9209                           
  9210                           ; BSR set to: 0
  9211   0029C2  8E4D               	bsf	(___flmul@b+2)^0,7,c
  9212   0029C4  EFEC  F014         	goto	l3628
  9213   0029C8                     l3626:
  9214                           
  9215                           ; BSR set to: 0
  9216   0029C8  0E00               	movlw	0
  9217   0029CA  6E4B               	movwf	___flmul@b^0,c
  9218   0029CC  0E00               	movlw	0
  9219   0029CE  6E4C               	movwf	(___flmul@b+1)^0,c
  9220   0029D0  0E00               	movlw	0
  9221   0029D2  6E4D               	movwf	(___flmul@b+2)^0,c
  9222   0029D4  0E00               	movlw	0
  9223   0029D6  6E4E               	movwf	(___flmul@b+3)^0,c
  9224   0029D8                     l3628:
  9225                           
  9226                           ; BSR set to: 0
  9227   0029D8  5052               	movf	(___flmul@a+3)^0,w,c
  9228   0029DA  0B80               	andlw	128
  9229   0029DC  1B60               	xorwf	___flmul@sign& (0+255),f,b
  9230   0029DE                     
  9231                           ; BSR set to: 0
  9232   0029DE  5052               	movf	(___flmul@a+3)^0,w,c
  9233   0029E0  2452               	addwf	(___flmul@a+3)^0,w,c
  9234   0029E2  6F65               	movwf	___flmul@aexp& (0+255),b
  9235   0029E4                     
  9236                           ; BSR set to: 0
  9237   0029E4  AE51               	btfss	(___flmul@a+2)^0,7,c
  9238   0029E6  EFF7  F014         	goto	u3121
  9239   0029EA  EFF9  F014         	goto	u3120
  9240   0029EE                     u3121:
  9241   0029EE  EFFA  F014         	goto	l3636
  9242   0029F2                     u3120:
  9243   0029F2                     
  9244                           ; BSR set to: 0
  9245   0029F2  8165               	bsf	___flmul@aexp& (0+255),0,b
  9246   0029F4                     l3636:
  9247                           
  9248                           ; BSR set to: 0
  9249   0029F4  5165               	movf	___flmul@aexp& (0+255),w,b
  9250   0029F6  B4D8               	btfsc	status,2,c
  9251   0029F8  EF00  F015         	goto	u3131
  9252   0029FC  EF02  F015         	goto	u3130
  9253   002A00                     u3131:
  9254   002A00  EF15  F015         	goto	l3644
  9255   002A04                     u3130:
  9256   002A04                     
  9257                           ; BSR set to: 0
  9258   002A04  2965               	incf	___flmul@aexp& (0+255),w,b
  9259   002A06  A4D8               	btfss	status,2,c
  9260   002A08  EF08  F015         	goto	u3141
  9261   002A0C  EF0A  F015         	goto	u3140
  9262   002A10                     u3141:
  9263   002A10  EF12  F015         	goto	l3642
  9264   002A14                     u3140:
  9265   002A14                     
  9266                           ; BSR set to: 0
  9267   002A14  0E00               	movlw	0
  9268   002A16  6E4F               	movwf	___flmul@a^0,c
  9269   002A18  0E00               	movlw	0
  9270   002A1A  6E50               	movwf	(___flmul@a+1)^0,c
  9271   002A1C  0E00               	movlw	0
  9272   002A1E  6E51               	movwf	(___flmul@a+2)^0,c
  9273   002A20  0E00               	movlw	0
  9274   002A22  6E52               	movwf	(___flmul@a+3)^0,c
  9275   002A24                     l3642:
  9276                           
  9277                           ; BSR set to: 0
  9278   002A24  8E51               	bsf	(___flmul@a+2)^0,7,c
  9279   002A26  EF1D  F015         	goto	l1152
  9280   002A2A                     l3644:
  9281                           
  9282                           ; BSR set to: 0
  9283   002A2A  0E00               	movlw	0
  9284   002A2C  6E4F               	movwf	___flmul@a^0,c
  9285   002A2E  0E00               	movlw	0
  9286   002A30  6E50               	movwf	(___flmul@a+1)^0,c
  9287   002A32  0E00               	movlw	0
  9288   002A34  6E51               	movwf	(___flmul@a+2)^0,c
  9289   002A36  0E00               	movlw	0
  9290   002A38  6E52               	movwf	(___flmul@a+3)^0,c
  9291   002A3A                     l1152:
  9292                           
  9293                           ; BSR set to: 0
  9294   002A3A  5165               	movf	___flmul@aexp& (0+255),w,b
  9295   002A3C  B4D8               	btfsc	status,2,c
  9296   002A3E  EF23  F015         	goto	u3151
  9297   002A42  EF25  F015         	goto	u3150
  9298   002A46                     u3151:
  9299   002A46  EF2D  F015         	goto	l3648
  9300   002A4A                     u3150:
  9301   002A4A                     
  9302                           ; BSR set to: 0
  9303   002A4A  5166               	movf	___flmul@bexp& (0+255),w,b
  9304   002A4C  A4D8               	btfss	status,2,c
  9305   002A4E  EF2B  F015         	goto	u3161
  9306   002A52  EF2D  F015         	goto	u3160
  9307   002A56                     u3161:
  9308   002A56  EF37  F015         	goto	l3652
  9309   002A5A                     u3160:
  9310   002A5A                     l3648:
  9311                           
  9312                           ; BSR set to: 0
  9313   002A5A  0E00               	movlw	0
  9314   002A5C  6E4B               	movwf	?___flmul^0,c
  9315   002A5E  0E00               	movlw	0
  9316   002A60  6E4C               	movwf	(?___flmul+1)^0,c
  9317   002A62  0E00               	movlw	0
  9318   002A64  6E4D               	movwf	(?___flmul+2)^0,c
  9319   002A66  0E00               	movlw	0
  9320   002A68  6E4E               	movwf	(?___flmul+3)^0,c
  9321   002A6A  EFCF  F016         	goto	l1156
  9322   002A6E                     l3652:
  9323                           
  9324                           ; BSR set to: 0
  9325   002A6E  5051               	movf	(___flmul@a+2)^0,w,c
  9326   002A70  024B               	mulwf	___flmul@b^0,c
  9327   002A72  CFF3 F06B          	movff	prodl,___flmul@temp
  9328   002A76  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9329   002A7A                     
  9330                           ; BSR set to: 0
  9331   002A7A  516B               	movf	___flmul@temp& (0+255),w,b
  9332   002A7C  6F61               	movwf	___flmul@grs& (0+255),b
  9333   002A7E  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  9334   002A80  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  9335   002A82  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  9336   002A84                     
  9337                           ; BSR set to: 0
  9338   002A84  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9339   002A86  6F67               	movwf	___flmul@prod& (0+255),b
  9340   002A88  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  9341   002A8A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  9342   002A8C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  9343   002A8E  5050               	movf	(___flmul@a+1)^0,w,c
  9344   002A90  024C               	mulwf	(___flmul@b+1)^0,c
  9345   002A92  CFF3 F06B          	movff	prodl,___flmul@temp
  9346   002A96  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9347   002A9A                     
  9348                           ; BSR set to: 0
  9349   002A9A  516B               	movf	___flmul@temp& (0+255),w,b
  9350   002A9C  2761               	addwf	___flmul@grs& (0+255),f,b
  9351   002A9E  0E00               	movlw	0
  9352   002AA0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9353   002AA2  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9354   002AA4  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9355   002AA6                     
  9356                           ; BSR set to: 0
  9357   002AA6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9358   002AA8  2767               	addwf	___flmul@prod& (0+255),f,b
  9359   002AAA  0E00               	movlw	0
  9360   002AAC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9361   002AAE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9362   002AB0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9363   002AB2  504F               	movf	___flmul@a^0,w,c
  9364   002AB4  024D               	mulwf	(___flmul@b+2)^0,c
  9365   002AB6  CFF3 F06B          	movff	prodl,___flmul@temp
  9366   002ABA  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9367   002ABE                     
  9368                           ; BSR set to: 0
  9369   002ABE  516B               	movf	___flmul@temp& (0+255),w,b
  9370   002AC0  2761               	addwf	___flmul@grs& (0+255),f,b
  9371   002AC2  0E00               	movlw	0
  9372   002AC4  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9373   002AC6  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9374   002AC8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9375   002ACA                     
  9376                           ; BSR set to: 0
  9377   002ACA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9378   002ACC  2767               	addwf	___flmul@prod& (0+255),f,b
  9379   002ACE  0E00               	movlw	0
  9380   002AD0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9381   002AD2  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9382   002AD4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9383   002AD6                     
  9384                           ; BSR set to: 0
  9385   002AD6  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  9386   002ADA  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  9387   002ADE  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  9388   002AE2  6B61               	clrf	___flmul@grs& (0+255),b
  9389   002AE4                     
  9390                           ; BSR set to: 0
  9391   002AE4  504F               	movf	___flmul@a^0,w,c
  9392   002AE6  024C               	mulwf	(___flmul@b+1)^0,c
  9393   002AE8  CFF3 F06B          	movff	prodl,___flmul@temp
  9394   002AEC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9395   002AF0                     
  9396                           ; BSR set to: 0
  9397   002AF0  516B               	movf	___flmul@temp& (0+255),w,b
  9398   002AF2  2761               	addwf	___flmul@grs& (0+255),f,b
  9399   002AF4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9400   002AF6  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9401   002AF8  0E00               	movlw	0
  9402   002AFA  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9403   002AFC  0E00               	movlw	0
  9404   002AFE  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9405   002B00                     
  9406                           ; BSR set to: 0
  9407   002B00  5050               	movf	(___flmul@a+1)^0,w,c
  9408   002B02  024B               	mulwf	___flmul@b^0,c
  9409   002B04  CFF3 F06B          	movff	prodl,___flmul@temp
  9410   002B08  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9411   002B0C                     
  9412                           ; BSR set to: 0
  9413   002B0C  516B               	movf	___flmul@temp& (0+255),w,b
  9414   002B0E  2761               	addwf	___flmul@grs& (0+255),f,b
  9415   002B10  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9416   002B12  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9417   002B14  0E00               	movlw	0
  9418   002B16  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9419   002B18  0E00               	movlw	0
  9420   002B1A  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9421   002B1C                     
  9422                           ; BSR set to: 0
  9423   002B1C  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  9424   002B20  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  9425   002B24  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  9426   002B28  6B61               	clrf	___flmul@grs& (0+255),b
  9427   002B2A  504F               	movf	___flmul@a^0,w,c
  9428   002B2C  024B               	mulwf	___flmul@b^0,c
  9429   002B2E  CFF3 F06B          	movff	prodl,___flmul@temp
  9430   002B32  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9431   002B36                     
  9432                           ; BSR set to: 0
  9433   002B36  516B               	movf	___flmul@temp& (0+255),w,b
  9434   002B38  2761               	addwf	___flmul@grs& (0+255),f,b
  9435   002B3A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9436   002B3C  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9437   002B3E  0E00               	movlw	0
  9438   002B40  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9439   002B42  0E00               	movlw	0
  9440   002B44  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9441   002B46                     
  9442                           ; BSR set to: 0
  9443   002B46  5051               	movf	(___flmul@a+2)^0,w,c
  9444   002B48  024C               	mulwf	(___flmul@b+1)^0,c
  9445   002B4A  CFF3 F06B          	movff	prodl,___flmul@temp
  9446   002B4E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9447   002B52  516B               	movf	___flmul@temp& (0+255),w,b
  9448   002B54  2767               	addwf	___flmul@prod& (0+255),f,b
  9449   002B56  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9450   002B58  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9451   002B5A  0E00               	movlw	0
  9452   002B5C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9453   002B5E  0E00               	movlw	0
  9454   002B60  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9455   002B62                     
  9456                           ; BSR set to: 0
  9457   002B62  5050               	movf	(___flmul@a+1)^0,w,c
  9458   002B64  024D               	mulwf	(___flmul@b+2)^0,c
  9459   002B66  CFF3 F06B          	movff	prodl,___flmul@temp
  9460   002B6A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9461   002B6E                     
  9462                           ; BSR set to: 0
  9463   002B6E  516B               	movf	___flmul@temp& (0+255),w,b
  9464   002B70  2767               	addwf	___flmul@prod& (0+255),f,b
  9465   002B72  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9466   002B74  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9467   002B76  0E00               	movlw	0
  9468   002B78  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9469   002B7A  0E00               	movlw	0
  9470   002B7C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9471   002B7E  5051               	movf	(___flmul@a+2)^0,w,c
  9472   002B80  024D               	mulwf	(___flmul@b+2)^0,c
  9473   002B82  CFF3 F06B          	movff	prodl,___flmul@temp
  9474   002B86  CFF4 F06C          	movff	prodh,___flmul@temp+1
  9475   002B8A                     
  9476                           ; BSR set to: 0
  9477   002B8A  516B               	movf	___flmul@temp& (0+255),w,b
  9478   002B8C  6E53               	movwf	??___flmul^0,c
  9479   002B8E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9480   002B90  6E54               	movwf	(??___flmul+1)^0,c
  9481   002B92  6A55               	clrf	(??___flmul+2)^0,c
  9482   002B94  6A56               	clrf	(??___flmul+3)^0,c
  9483   002B96  C055  F056         	movff	??___flmul+2,??___flmul+3
  9484   002B9A  C054  F055         	movff	??___flmul+1,??___flmul+2
  9485   002B9E  C053  F054         	movff	??___flmul,??___flmul+1
  9486   002BA2  6A53               	clrf	??___flmul^0,c
  9487   002BA4  5053               	movf	??___flmul^0,w,c
  9488   002BA6  2767               	addwf	___flmul@prod& (0+255),f,b
  9489   002BA8  5054               	movf	(??___flmul+1)^0,w,c
  9490   002BAA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9491   002BAC  5055               	movf	(??___flmul+2)^0,w,c
  9492   002BAE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9493   002BB0  5056               	movf	(??___flmul+3)^0,w,c
  9494   002BB2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9495   002BB4                     
  9496                           ; BSR set to: 0
  9497   002BB4  C061  F053         	movff	___flmul@grs,??___flmul
  9498   002BB8  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  9499   002BBC  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  9500   002BC0  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  9501   002BC4  0E19               	movlw	25
  9502   002BC6  EFEA  F015         	goto	u3170
  9503   002BCA                     u3175:
  9504   002BCA  90D8               	bcf	status,0,c
  9505   002BCC  3256               	rrcf	(??___flmul+3)^0,f,c
  9506   002BCE  3255               	rrcf	(??___flmul+2)^0,f,c
  9507   002BD0  3254               	rrcf	(??___flmul+1)^0,f,c
  9508   002BD2  3253               	rrcf	??___flmul^0,f,c
  9509   002BD4                     u3170:
  9510   002BD4  2EE8               	decfsz	wreg,f,c
  9511   002BD6  EFE5  F015         	goto	u3175
  9512   002BDA  5053               	movf	??___flmul^0,w,c
  9513   002BDC  2767               	addwf	___flmul@prod& (0+255),f,b
  9514   002BDE  5054               	movf	(??___flmul+1)^0,w,c
  9515   002BE0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9516   002BE2  5055               	movf	(??___flmul+2)^0,w,c
  9517   002BE4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9518   002BE6  5056               	movf	(??___flmul+3)^0,w,c
  9519   002BE8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9520   002BEA                     
  9521                           ; BSR set to: 0
  9522   002BEA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  9523   002BEE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  9524   002BF2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  9525   002BF6  6B61               	clrf	___flmul@grs& (0+255),b
  9526   002BF8                     
  9527                           ; BSR set to: 0
  9528   002BF8  5165               	movf	___flmul@aexp& (0+255),w,b
  9529   002BFA  C066  F053         	movff	___flmul@bexp,??___flmul
  9530   002BFE  6A54               	clrf	(??___flmul+1)^0,c
  9531   002C00  2653               	addwf	??___flmul^0,f,c
  9532   002C02  0E00               	movlw	0
  9533   002C04  2254               	addwfc	(??___flmul+1)^0,f,c
  9534   002C06  0E82               	movlw	130
  9535   002C08  2453               	addwf	??___flmul^0,w,c
  9536   002C0A  6F6B               	movwf	___flmul@temp& (0+255),b
  9537   002C0C  0EFF               	movlw	255
  9538   002C0E  2054               	addwfc	(??___flmul+1)^0,w,c
  9539   002C10  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  9540   002C12  EF20  F016         	goto	l3700
  9541   002C16                     l3694:
  9542                           
  9543                           ; BSR set to: 0
  9544   002C16  90D8               	bcf	status,0,c
  9545   002C18  3767               	rlcf	___flmul@prod& (0+255),f,b
  9546   002C1A  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9547   002C1C  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9548   002C1E  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9549   002C20                     
  9550                           ; BSR set to: 0
  9551   002C20  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  9552   002C22  EF15  F016         	goto	u3181
  9553   002C26  EF17  F016         	goto	u3180
  9554   002C2A                     u3181:
  9555   002C2A  EF18  F016         	goto	l1159
  9556   002C2E                     u3180:
  9557   002C2E                     
  9558                           ; BSR set to: 0
  9559   002C2E  8167               	bsf	___flmul@prod& (0+255),0,b
  9560   002C30                     l1159:
  9561                           
  9562                           ; BSR set to: 0
  9563   002C30  90D8               	bcf	status,0,c
  9564   002C32  3761               	rlcf	___flmul@grs& (0+255),f,b
  9565   002C34  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9566   002C36  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9567   002C38  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9568   002C3A  076B               	decf	___flmul@temp& (0+255),f,b
  9569   002C3C  A0D8               	btfss	status,0,c
  9570   002C3E  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  9571   002C40                     l3700:
  9572                           
  9573                           ; BSR set to: 0
  9574   002C40  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  9575   002C42  EF25  F016         	goto	u3191
  9576   002C46  EF27  F016         	goto	u3190
  9577   002C4A                     u3191:
  9578   002C4A  EF0B  F016         	goto	l3694
  9579   002C4E                     u3190:
  9580   002C4E                     
  9581                           ; BSR set to: 0
  9582   002C4E  0E00               	movlw	0
  9583   002C50  6F65               	movwf	___flmul@aexp& (0+255),b
  9584   002C52                     
  9585                           ; BSR set to: 0
  9586   002C52  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  9587   002C54  EF2E  F016         	goto	u3201
  9588   002C58  EF30  F016         	goto	u3200
  9589   002C5C                     u3201:
  9590   002C5C  EF54  F016         	goto	l1161
  9591   002C60                     u3200:
  9592   002C60                     
  9593                           ; BSR set to: 0
  9594   002C60  0EFF               	movlw	255
  9595   002C62  1561               	andwf	___flmul@grs& (0+255),w,b
  9596   002C64  6E53               	movwf	??___flmul^0,c
  9597   002C66  0EFF               	movlw	255
  9598   002C68  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  9599   002C6A  6E54               	movwf	(??___flmul+1)^0,c
  9600   002C6C  0EFF               	movlw	255
  9601   002C6E  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  9602   002C70  6E55               	movwf	(??___flmul+2)^0,c
  9603   002C72  0E7F               	movlw	127
  9604   002C74  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  9605   002C76  6E56               	movwf	(??___flmul+3)^0,c
  9606   002C78  5053               	movf	??___flmul^0,w,c
  9607   002C7A  1054               	iorwf	(??___flmul+1)^0,w,c
  9608   002C7C  1055               	iorwf	(??___flmul+2)^0,w,c
  9609   002C7E  1056               	iorwf	(??___flmul+3)^0,w,c
  9610   002C80  B4D8               	btfsc	status,2,c
  9611   002C82  EF45  F016         	goto	u3211
  9612   002C86  EF47  F016         	goto	u3210
  9613   002C8A                     u3211:
  9614   002C8A  EF4B  F016         	goto	l1162
  9615   002C8E                     u3210:
  9616   002C8E                     l3708:
  9617                           
  9618                           ; BSR set to: 0
  9619   002C8E  0E01               	movlw	1
  9620   002C90  6F65               	movwf	___flmul@aexp& (0+255),b
  9621   002C92  EF54  F016         	goto	l1161
  9622   002C96                     l1162:
  9623                           
  9624                           ; BSR set to: 0
  9625   002C96  A167               	btfss	___flmul@prod& (0+255),0,b
  9626   002C98  EF50  F016         	goto	u3221
  9627   002C9C  EF52  F016         	goto	u3220
  9628   002CA0                     u3221:
  9629   002CA0  EF54  F016         	goto	l1161
  9630   002CA4                     u3220:
  9631   002CA4  EF47  F016         	goto	l3708
  9632   002CA8                     l1161:
  9633                           
  9634                           ; BSR set to: 0
  9635   002CA8  5165               	movf	___flmul@aexp& (0+255),w,b
  9636   002CAA  B4D8               	btfsc	status,2,c
  9637   002CAC  EF5A  F016         	goto	u3231
  9638   002CB0  EF5C  F016         	goto	u3230
  9639   002CB4                     u3231:
  9640   002CB4  EF80  F016         	goto	l3720
  9641   002CB8                     u3230:
  9642   002CB8                     
  9643                           ; BSR set to: 0
  9644   002CB8  0E01               	movlw	1
  9645   002CBA  2767               	addwf	___flmul@prod& (0+255),f,b
  9646   002CBC  0E00               	movlw	0
  9647   002CBE  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9648   002CC0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9649   002CC2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9650   002CC4                     
  9651                           ; BSR set to: 0
  9652   002CC4  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  9653   002CC6  EF67  F016         	goto	u3241
  9654   002CCA  EF69  F016         	goto	u3240
  9655   002CCE                     u3241:
  9656   002CCE  EF80  F016         	goto	l3720
  9657   002CD2                     u3240:
  9658   002CD2                     
  9659                           ; BSR set to: 0
  9660   002CD2  C067  F053         	movff	___flmul@prod,??___flmul
  9661   002CD6  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  9662   002CDA  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  9663   002CDE  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  9664   002CE2  3456               	rlcf	(??___flmul+3)^0,w,c
  9665   002CE4  3256               	rrcf	(??___flmul+3)^0,f,c
  9666   002CE6  3255               	rrcf	(??___flmul+2)^0,f,c
  9667   002CE8  3254               	rrcf	(??___flmul+1)^0,f,c
  9668   002CEA  3253               	rrcf	??___flmul^0,f,c
  9669   002CEC  C053  F067         	movff	??___flmul,___flmul@prod
  9670   002CF0  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  9671   002CF4  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  9672   002CF8  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  9673   002CFC                     
  9674                           ; BSR set to: 0
  9675   002CFC  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  9676   002CFE  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  9677   002D00                     l3720:
  9678                           
  9679                           ; BSR set to: 0
  9680   002D00  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9681   002D02  EF8B  F016         	goto	u3251
  9682   002D06  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9683   002D08  E108               	bnz	u3250
  9684   002D0A  296B               	incf	___flmul@temp& (0+255),w,b
  9685   002D0C  A0D8               	btfss	status,0,c
  9686   002D0E  EF8B  F016         	goto	u3251
  9687   002D12  EF8D  F016         	goto	u3250
  9688   002D16                     u3251:
  9689   002D16  EF97  F016         	goto	l3724
  9690   002D1A                     u3250:
  9691   002D1A                     
  9692                           ; BSR set to: 0
  9693   002D1A  0E00               	movlw	0
  9694   002D1C  6F67               	movwf	___flmul@prod& (0+255),b
  9695   002D1E  0E00               	movlw	0
  9696   002D20  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  9697   002D22  0E80               	movlw	128
  9698   002D24  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  9699   002D26  0E7F               	movlw	127
  9700   002D28  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9701   002D2A  EFC5  F016         	goto	l3736
  9702   002D2E                     l3724:
  9703                           
  9704                           ; BSR set to: 0
  9705   002D2E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9706   002D30  EFA4  F016         	goto	u3260
  9707   002D34  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9708   002D36  E106               	bnz	u3261
  9709   002D38  056B               	decf	___flmul@temp& (0+255),w,b
  9710   002D3A  B0D8               	btfsc	status,0,c
  9711   002D3C  EFA2  F016         	goto	u3261
  9712   002D40  EFA4  F016         	goto	u3260
  9713   002D44                     u3261:
  9714   002D44  EFB0  F016         	goto	l1169
  9715   002D48                     u3260:
  9716   002D48                     
  9717                           ; BSR set to: 0
  9718   002D48  0E00               	movlw	0
  9719   002D4A  6F67               	movwf	___flmul@prod& (0+255),b
  9720   002D4C  0E00               	movlw	0
  9721   002D4E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  9722   002D50  0E00               	movlw	0
  9723   002D52  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  9724   002D54  0E00               	movlw	0
  9725   002D56  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9726   002D58  0E00               	movlw	0
  9727   002D5A  6F60               	movwf	___flmul@sign& (0+255),b
  9728   002D5C  EFC5  F016         	goto	l3736
  9729   002D60                     l1169:
  9730                           
  9731                           ; BSR set to: 0
  9732   002D60  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  9733   002D64                     
  9734                           ; BSR set to: 0
  9735   002D64  0EFF               	movlw	255
  9736   002D66  1767               	andwf	___flmul@prod& (0+255),f,b
  9737   002D68  0EFF               	movlw	255
  9738   002D6A  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  9739   002D6C  0E7F               	movlw	127
  9740   002D6E  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  9741   002D70  0E00               	movlw	0
  9742   002D72  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  9743   002D74                     
  9744                           ; BSR set to: 0
  9745   002D74  A166               	btfss	___flmul@bexp& (0+255),0,b
  9746   002D76  EFBF  F016         	goto	u3271
  9747   002D7A  EFC1  F016         	goto	u3270
  9748   002D7E                     u3271:
  9749   002D7E  EFC2  F016         	goto	l3734
  9750   002D82                     u3270:
  9751   002D82                     
  9752                           ; BSR set to: 0
  9753   002D82  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  9754   002D84                     l3734:
  9755                           
  9756                           ; BSR set to: 0
  9757   002D84  90D8               	bcf	status,0,c
  9758   002D86  3166               	rrcf	___flmul@bexp& (0+255),w,b
  9759   002D88  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9760   002D8A                     l3736:
  9761                           
  9762                           ; BSR set to: 0
  9763   002D8A  5160               	movf	___flmul@sign& (0+255),w,b
  9764   002D8C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9765   002D8E                     
  9766                           ; BSR set to: 0
  9767   002D8E  C067  F04B         	movff	___flmul@prod,?___flmul
  9768   002D92  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  9769   002D96  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  9770   002D9A  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  9771   002D9E                     l1156:
  9772                           
  9773                           ; BSR set to: 0
  9774   002D9E  0012               	return		;funcret
  9775   002DA0                     __end_of___flmul:
  9776                           	callstack 0
  9777                           
  9778 ;; *************** function ___fleq *****************
  9779 ;; Defined at:
  9780 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  ff1             4    0[COMRAM] unsigned char 
  9783 ;;  ff2             4    4[COMRAM] unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;		None               void
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9797 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9798 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;Total ram usage:       12 bytes
  9800 ;; Hardware stack levels used: 1
  9801 ;; This function calls:
  9802 ;;		Nothing
  9803 ;; This function is called by:
  9804 ;;		_RGB2Hue
  9805 ;;		_efgtoa
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text51
  9810   003F9A                     __ptext51:
  9811                           	callstack 0
  9812   003F9A                     ___fleq:
  9813                           	callstack 29
  9814   003F9A  0E00               	movlw	0
  9815   003F9C  1401               	andwf	___fleq@ff1^0,w,c
  9816   003F9E  6E09               	movwf	??___fleq^0,c
  9817   003FA0  0E00               	movlw	0
  9818   003FA2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9819   003FA4  6E0A               	movwf	(??___fleq+1)^0,c
  9820   003FA6  0E80               	movlw	128
  9821   003FA8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9822   003FAA  6E0B               	movwf	(??___fleq+2)^0,c
  9823   003FAC  0E7F               	movlw	127
  9824   003FAE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9825   003FB0  6E0C               	movwf	(??___fleq+3)^0,c
  9826   003FB2  5009               	movf	??___fleq^0,w,c
  9827   003FB4  100A               	iorwf	(??___fleq+1)^0,w,c
  9828   003FB6  100B               	iorwf	(??___fleq+2)^0,w,c
  9829   003FB8  100C               	iorwf	(??___fleq+3)^0,w,c
  9830   003FBA  A4D8               	btfss	status,2,c
  9831   003FBC  EFE2  F01F         	goto	u3281
  9832   003FC0  EFE4  F01F         	goto	u3280
  9833   003FC4                     u3281:
  9834   003FC4  EFEC  F01F         	goto	l3752
  9835   003FC8                     u3280:
  9836   003FC8  0E00               	movlw	0
  9837   003FCA  6E01               	movwf	___fleq@ff1^0,c
  9838   003FCC  0E00               	movlw	0
  9839   003FCE  6E02               	movwf	(___fleq@ff1+1)^0,c
  9840   003FD0  0E00               	movlw	0
  9841   003FD2  6E03               	movwf	(___fleq@ff1+2)^0,c
  9842   003FD4  0E00               	movlw	0
  9843   003FD6  6E04               	movwf	(___fleq@ff1+3)^0,c
  9844   003FD8                     l3752:
  9845   003FD8  0E00               	movlw	0
  9846   003FDA  1405               	andwf	___fleq@ff2^0,w,c
  9847   003FDC  6E09               	movwf	??___fleq^0,c
  9848   003FDE  0E00               	movlw	0
  9849   003FE0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9850   003FE2  6E0A               	movwf	(??___fleq+1)^0,c
  9851   003FE4  0E80               	movlw	128
  9852   003FE6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9853   003FE8  6E0B               	movwf	(??___fleq+2)^0,c
  9854   003FEA  0E7F               	movlw	127
  9855   003FEC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9856   003FEE  6E0C               	movwf	(??___fleq+3)^0,c
  9857   003FF0  5009               	movf	??___fleq^0,w,c
  9858   003FF2  100A               	iorwf	(??___fleq+1)^0,w,c
  9859   003FF4  100B               	iorwf	(??___fleq+2)^0,w,c
  9860   003FF6  100C               	iorwf	(??___fleq+3)^0,w,c
  9861   003FF8  A4D8               	btfss	status,2,c
  9862   003FFA  EF01  F020         	goto	u3291
  9863   003FFE  EF03  F020         	goto	u3290
  9864   004002                     u3291:
  9865   004002  EF0B  F020         	goto	l3756
  9866   004006                     u3290:
  9867   004006  0E00               	movlw	0
  9868   004008  6E05               	movwf	___fleq@ff2^0,c
  9869   00400A  0E00               	movlw	0
  9870   00400C  6E06               	movwf	(___fleq@ff2+1)^0,c
  9871   00400E  0E00               	movlw	0
  9872   004010  6E07               	movwf	(___fleq@ff2+2)^0,c
  9873   004012  0E00               	movlw	0
  9874   004014  6E08               	movwf	(___fleq@ff2+3)^0,c
  9875   004016                     l3756:
  9876   004016  5005               	movf	___fleq@ff2^0,w,c
  9877   004018  1801               	xorwf	___fleq@ff1^0,w,c
  9878   00401A  E10F               	bnz	u3300
  9879   00401C  5006               	movf	(___fleq@ff2+1)^0,w,c
  9880   00401E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9881   004020  E10C               	bnz	u3300
  9882   004022  5007               	movf	(___fleq@ff2+2)^0,w,c
  9883   004024  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9884   004026  E109               	bnz	u3300
  9885   004028  5008               	movf	(___fleq@ff2+3)^0,w,c
  9886   00402A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9887   00402C  B4D8               	btfsc	status,2,c
  9888   00402E  EF1B  F020         	goto	u3301
  9889   004032  EF1D  F020         	goto	u3300
  9890   004036                     u3301:
  9891   004036  EF20  F020         	goto	l3760
  9892   00403A                     u3300:
  9893   00403A  90D8               	bcf	status,0,c
  9894   00403C  EF21  F020         	goto	l797
  9895   004040                     l3760:
  9896   004040  80D8               	bsf	status,0,c
  9897   004042                     l797:
  9898   004042  0012               	return		;funcret
  9899   004044                     __end_of___fleq:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function ___fldiv *****************
  9903 ;; Defined at:
  9904 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  b               4   49[COMRAM] unsigned char 
  9907 ;;  a               4   53[COMRAM] unsigned char 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  grs             4   68[COMRAM] unsigned long 
  9910 ;;  rem             4   61[COMRAM] unsigned long 
  9911 ;;  new_exp         2   66[COMRAM] short 
  9912 ;;  aexp            1   73[COMRAM] unsigned char 
  9913 ;;  bexp            1   72[COMRAM] unsigned char 
  9914 ;;  sign            1   65[COMRAM] unsigned char 
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  4   49[COMRAM] unsigned char 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9924 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9927 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9928 ;;Total ram usage:       25 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; This function calls:
  9931 ;;		Nothing
  9932 ;; This function is called by:
  9933 ;;		_RGB2Hue
  9934 ;;		_efgtoa
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text52
  9939   002DA0                     __ptext52:
  9940                           	callstack 0
  9941   002DA0                     ___fldiv:
  9942                           	callstack 29
  9943   002DA0  5035               	movf	(___fldiv@b+3)^0,w,c
  9944   002DA2  0B80               	andlw	128
  9945   002DA4  6E42               	movwf	___fldiv@sign^0,c
  9946   002DA6  5035               	movf	(___fldiv@b+3)^0,w,c
  9947   002DA8  2435               	addwf	(___fldiv@b+3)^0,w,c
  9948   002DAA  6E49               	movwf	___fldiv@bexp^0,c
  9949   002DAC  AE34               	btfss	(___fldiv@b+2)^0,7,c
  9950   002DAE  EFDB  F016         	goto	u2861
  9951   002DB2  EFDD  F016         	goto	u2860
  9952   002DB6                     u2861:
  9953   002DB6  EFDE  F016         	goto	l3480
  9954   002DBA                     u2860:
  9955   002DBA  8049               	bsf	___fldiv@bexp^0,0,c
  9956   002DBC                     l3480:
  9957   002DBC  5049               	movf	___fldiv@bexp^0,w,c
  9958   002DBE  B4D8               	btfsc	status,2,c
  9959   002DC0  EFE4  F016         	goto	u2871
  9960   002DC4  EFE6  F016         	goto	u2870
  9961   002DC8                     u2871:
  9962   002DC8  EFFB  F016         	goto	l3490
  9963   002DCC                     u2870:
  9964   002DCC  2849               	incf	___fldiv@bexp^0,w,c
  9965   002DCE  A4D8               	btfss	status,2,c
  9966   002DD0  EFEC  F016         	goto	u2881
  9967   002DD4  EFEE  F016         	goto	u2880
  9968   002DD8                     u2881:
  9969   002DD8  EFF6  F016         	goto	l3486
  9970   002DDC                     u2880:
  9971   002DDC  0E00               	movlw	0
  9972   002DDE  6E32               	movwf	___fldiv@b^0,c
  9973   002DE0  0E00               	movlw	0
  9974   002DE2  6E33               	movwf	(___fldiv@b+1)^0,c
  9975   002DE4  0E00               	movlw	0
  9976   002DE6  6E34               	movwf	(___fldiv@b+2)^0,c
  9977   002DE8  0E00               	movlw	0
  9978   002DEA  6E35               	movwf	(___fldiv@b+3)^0,c
  9979   002DEC                     l3486:
  9980   002DEC  8E34               	bsf	(___fldiv@b+2)^0,7,c
  9981   002DEE  0E00               	movlw	0
  9982   002DF0  6E35               	movwf	(___fldiv@b+3)^0,c
  9983   002DF2  EF03  F017         	goto	l3492
  9984   002DF6                     l3490:
  9985   002DF6  0E00               	movlw	0
  9986   002DF8  6E32               	movwf	___fldiv@b^0,c
  9987   002DFA  0E00               	movlw	0
  9988   002DFC  6E33               	movwf	(___fldiv@b+1)^0,c
  9989   002DFE  0E00               	movlw	0
  9990   002E00  6E34               	movwf	(___fldiv@b+2)^0,c
  9991   002E02  0E00               	movlw	0
  9992   002E04  6E35               	movwf	(___fldiv@b+3)^0,c
  9993   002E06                     l3492:
  9994   002E06  5039               	movf	(___fldiv@a+3)^0,w,c
  9995   002E08  0B80               	andlw	128
  9996   002E0A  1A42               	xorwf	___fldiv@sign^0,f,c
  9997   002E0C  5039               	movf	(___fldiv@a+3)^0,w,c
  9998   002E0E  2439               	addwf	(___fldiv@a+3)^0,w,c
  9999   002E10  6E4A               	movwf	___fldiv@aexp^0,c
 10000   002E12  AE38               	btfss	(___fldiv@a+2)^0,7,c
 10001   002E14  EF0E  F017         	goto	u2891
 10002   002E18  EF10  F017         	goto	u2890
 10003   002E1C                     u2891:
 10004   002E1C  EF11  F017         	goto	l3500
 10005   002E20                     u2890:
 10006   002E20  804A               	bsf	___fldiv@aexp^0,0,c
 10007   002E22                     l3500:
 10008   002E22  504A               	movf	___fldiv@aexp^0,w,c
 10009   002E24  B4D8               	btfsc	status,2,c
 10010   002E26  EF17  F017         	goto	u2901
 10011   002E2A  EF19  F017         	goto	u2900
 10012   002E2E                     u2901:
 10013   002E2E  EF2E  F017         	goto	l3510
 10014   002E32                     u2900:
 10015   002E32  284A               	incf	___fldiv@aexp^0,w,c
 10016   002E34  A4D8               	btfss	status,2,c
 10017   002E36  EF1F  F017         	goto	u2911
 10018   002E3A  EF21  F017         	goto	u2910
 10019   002E3E                     u2911:
 10020   002E3E  EF29  F017         	goto	l3506
 10021   002E42                     u2910:
 10022   002E42  0E00               	movlw	0
 10023   002E44  6E36               	movwf	___fldiv@a^0,c
 10024   002E46  0E00               	movlw	0
 10025   002E48  6E37               	movwf	(___fldiv@a+1)^0,c
 10026   002E4A  0E00               	movlw	0
 10027   002E4C  6E38               	movwf	(___fldiv@a+2)^0,c
 10028   002E4E  0E00               	movlw	0
 10029   002E50  6E39               	movwf	(___fldiv@a+3)^0,c
 10030   002E52                     l3506:
 10031   002E52  8E38               	bsf	(___fldiv@a+2)^0,7,c
 10032   002E54  0E00               	movlw	0
 10033   002E56  6E39               	movwf	(___fldiv@a+3)^0,c
 10034   002E58  EF36  F017         	goto	l3512
 10035   002E5C                     l3510:
 10036   002E5C  0E00               	movlw	0
 10037   002E5E  6E36               	movwf	___fldiv@a^0,c
 10038   002E60  0E00               	movlw	0
 10039   002E62  6E37               	movwf	(___fldiv@a+1)^0,c
 10040   002E64  0E00               	movlw	0
 10041   002E66  6E38               	movwf	(___fldiv@a+2)^0,c
 10042   002E68  0E00               	movlw	0
 10043   002E6A  6E39               	movwf	(___fldiv@a+3)^0,c
 10044   002E6C                     l3512:
 10045   002E6C  5036               	movf	___fldiv@a^0,w,c
 10046   002E6E  1037               	iorwf	(___fldiv@a+1)^0,w,c
 10047   002E70  1038               	iorwf	(___fldiv@a+2)^0,w,c
 10048   002E72  1039               	iorwf	(___fldiv@a+3)^0,w,c
 10049   002E74  A4D8               	btfss	status,2,c
 10050   002E76  EF3F  F017         	goto	u2921
 10051   002E7A  EF41  F017         	goto	u2920
 10052   002E7E                     u2921:
 10053   002E7E  EF59  F017         	goto	l3524
 10054   002E82                     u2920:
 10055   002E82  0E00               	movlw	0
 10056   002E84  6E32               	movwf	___fldiv@b^0,c
 10057   002E86  0E00               	movlw	0
 10058   002E88  6E33               	movwf	(___fldiv@b+1)^0,c
 10059   002E8A  0E00               	movlw	0
 10060   002E8C  6E34               	movwf	(___fldiv@b+2)^0,c
 10061   002E8E  0E00               	movlw	0
 10062   002E90  6E35               	movwf	(___fldiv@b+3)^0,c
 10063   002E92  0E80               	movlw	128
 10064   002E94  1234               	iorwf	(___fldiv@b+2)^0,f,c
 10065   002E96  0E7F               	movlw	127
 10066   002E98  1235               	iorwf	(___fldiv@b+3)^0,f,c
 10067   002E9A                     l3518:
 10068   002E9A  5042               	movf	___fldiv@sign^0,w,c
 10069   002E9C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 10070   002E9E  C032  F032         	movff	___fldiv@b,?___fldiv
 10071   002EA2  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 10072   002EA6  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 10073   002EAA  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 10074   002EAE  EF9C  F018         	goto	l1120
 10075   002EB2                     l3524:
 10076   002EB2  5049               	movf	___fldiv@bexp^0,w,c
 10077   002EB4  A4D8               	btfss	status,2,c
 10078   002EB6  EF5F  F017         	goto	u2931
 10079   002EBA  EF61  F017         	goto	u2930
 10080   002EBE                     u2931:
 10081   002EBE  EF6B  F017         	goto	l3532
 10082   002EC2                     u2930:
 10083   002EC2  0E00               	movlw	0
 10084   002EC4  6E32               	movwf	?___fldiv^0,c
 10085   002EC6  0E00               	movlw	0
 10086   002EC8  6E33               	movwf	(?___fldiv+1)^0,c
 10087   002ECA  0E00               	movlw	0
 10088   002ECC  6E34               	movwf	(?___fldiv+2)^0,c
 10089   002ECE  0E00               	movlw	0
 10090   002ED0  6E35               	movwf	(?___fldiv+3)^0,c
 10091   002ED2  EF9C  F018         	goto	l1120
 10092   002ED6                     l3532:
 10093   002ED6  504A               	movf	___fldiv@aexp^0,w,c
 10094   002ED8  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 10095   002EDC  6A3B               	clrf	(??___fldiv+1)^0,c
 10096   002EDE  5E3A               	subwf	??___fldiv^0,f,c
 10097   002EE0  0E00               	movlw	0
 10098   002EE2  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 10099   002EE4  0E7F               	movlw	127
 10100   002EE6  243A               	addwf	??___fldiv^0,w,c
 10101   002EE8  6E43               	movwf	___fldiv@new_exp^0,c
 10102   002EEA  0E00               	movlw	0
 10103   002EEC  203B               	addwfc	(??___fldiv+1)^0,w,c
 10104   002EEE  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10105   002EF0  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 10106   002EF4  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 10107   002EF8  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 10108   002EFC  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 10109   002F00  0E00               	movlw	0
 10110   002F02  6E32               	movwf	___fldiv@b^0,c
 10111   002F04  0E00               	movlw	0
 10112   002F06  6E33               	movwf	(___fldiv@b+1)^0,c
 10113   002F08  0E00               	movlw	0
 10114   002F0A  6E34               	movwf	(___fldiv@b+2)^0,c
 10115   002F0C  0E00               	movlw	0
 10116   002F0E  6E35               	movwf	(___fldiv@b+3)^0,c
 10117   002F10  0E00               	movlw	0
 10118   002F12  6E45               	movwf	___fldiv@grs^0,c
 10119   002F14  0E00               	movlw	0
 10120   002F16  6E46               	movwf	(___fldiv@grs+1)^0,c
 10121   002F18  0E00               	movlw	0
 10122   002F1A  6E47               	movwf	(___fldiv@grs+2)^0,c
 10123   002F1C  0E00               	movlw	0
 10124   002F1E  6E48               	movwf	(___fldiv@grs+3)^0,c
 10125   002F20  0E00               	movlw	0
 10126   002F22  6E4A               	movwf	___fldiv@aexp^0,c
 10127   002F24  EFCC  F017         	goto	l1122
 10128   002F28                     l3542:
 10129   002F28  504A               	movf	___fldiv@aexp^0,w,c
 10130   002F2A  B4D8               	btfsc	status,2,c
 10131   002F2C  EF9A  F017         	goto	u2941
 10132   002F30  EF9C  F017         	goto	u2940
 10133   002F34                     u2941:
 10134   002F34  EFB3  F017         	goto	l3550
 10135   002F38                     u2940:
 10136   002F38  90D8               	bcf	status,0,c
 10137   002F3A  363E               	rlcf	___fldiv@rem^0,f,c
 10138   002F3C  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 10139   002F3E  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 10140   002F40  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 10141   002F42  90D8               	bcf	status,0,c
 10142   002F44  3632               	rlcf	___fldiv@b^0,f,c
 10143   002F46  3633               	rlcf	(___fldiv@b+1)^0,f,c
 10144   002F48  3634               	rlcf	(___fldiv@b+2)^0,f,c
 10145   002F4A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 10146   002F4C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10147   002F4E  EFAB  F017         	goto	u2951
 10148   002F52  EFAD  F017         	goto	u2950
 10149   002F56                     u2951:
 10150   002F56  EFAE  F017         	goto	l1125
 10151   002F5A                     u2950:
 10152   002F5A  8032               	bsf	___fldiv@b^0,0,c
 10153   002F5C                     l1125:
 10154   002F5C  90D8               	bcf	status,0,c
 10155   002F5E  3645               	rlcf	___fldiv@grs^0,f,c
 10156   002F60  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 10157   002F62  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 10158   002F64  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 10159   002F66                     l3550:
 10160   002F66  5036               	movf	___fldiv@a^0,w,c
 10161   002F68  5C3E               	subwf	___fldiv@rem^0,w,c
 10162   002F6A  5037               	movf	(___fldiv@a+1)^0,w,c
 10163   002F6C  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 10164   002F6E  5038               	movf	(___fldiv@a+2)^0,w,c
 10165   002F70  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 10166   002F72  5039               	movf	(___fldiv@a+3)^0,w,c
 10167   002F74  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 10168   002F76  A0D8               	btfss	status,0,c
 10169   002F78  EFC0  F017         	goto	u2961
 10170   002F7C  EFC2  F017         	goto	u2960
 10171   002F80                     u2961:
 10172   002F80  EFCB  F017         	goto	l3556
 10173   002F84                     u2960:
 10174   002F84  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 10175   002F86  5036               	movf	___fldiv@a^0,w,c
 10176   002F88  5E3E               	subwf	___fldiv@rem^0,f,c
 10177   002F8A  5037               	movf	(___fldiv@a+1)^0,w,c
 10178   002F8C  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 10179   002F8E  5038               	movf	(___fldiv@a+2)^0,w,c
 10180   002F90  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 10181   002F92  5039               	movf	(___fldiv@a+3)^0,w,c
 10182   002F94  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 10183   002F96                     l3556:
 10184   002F96  2A4A               	incf	___fldiv@aexp^0,f,c
 10185   002F98                     l1122:
 10186   002F98  0E19               	movlw	25
 10187   002F9A  644A               	cpfsgt	___fldiv@aexp^0,c
 10188   002F9C  EFD2  F017         	goto	u2971
 10189   002FA0  EFD4  F017         	goto	u2970
 10190   002FA4                     u2971:
 10191   002FA4  EF94  F017         	goto	l3542
 10192   002FA8                     u2970:
 10193   002FA8  503E               	movf	___fldiv@rem^0,w,c
 10194   002FAA  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 10195   002FAC  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 10196   002FAE  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 10197   002FB0  B4D8               	btfsc	status,2,c
 10198   002FB2  EFDD  F017         	goto	u2981
 10199   002FB6  EFDF  F017         	goto	u2980
 10200   002FBA                     u2981:
 10201   002FBA  EFF7  F017         	goto	l3568
 10202   002FBE                     u2980:
 10203   002FBE  8045               	bsf	___fldiv@grs^0,0,c
 10204   002FC0  EFF7  F017         	goto	l3568
 10205   002FC4                     l3562:
 10206   002FC4  90D8               	bcf	status,0,c
 10207   002FC6  3632               	rlcf	___fldiv@b^0,f,c
 10208   002FC8  3633               	rlcf	(___fldiv@b+1)^0,f,c
 10209   002FCA  3634               	rlcf	(___fldiv@b+2)^0,f,c
 10210   002FCC  3635               	rlcf	(___fldiv@b+3)^0,f,c
 10211   002FCE  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10212   002FD0  EFEC  F017         	goto	u2991
 10213   002FD4  EFEE  F017         	goto	u2990
 10214   002FD8                     u2991:
 10215   002FD8  EFEF  F017         	goto	l1131
 10216   002FDC                     u2990:
 10217   002FDC  8032               	bsf	___fldiv@b^0,0,c
 10218   002FDE                     l1131:
 10219   002FDE  90D8               	bcf	status,0,c
 10220   002FE0  3645               	rlcf	___fldiv@grs^0,f,c
 10221   002FE2  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 10222   002FE4  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 10223   002FE6  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 10224   002FE8  0643               	decf	___fldiv@new_exp^0,f,c
 10225   002FEA  A0D8               	btfss	status,0,c
 10226   002FEC  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 10227   002FEE                     l3568:
 10228   002FEE  AE34               	btfss	(___fldiv@b+2)^0,7,c
 10229   002FF0  EFFC  F017         	goto	u3001
 10230   002FF4  EFFE  F017         	goto	u3000
 10231   002FF8                     u3001:
 10232   002FF8  EFE2  F017         	goto	l3562
 10233   002FFC                     u3000:
 10234   002FFC  0E00               	movlw	0
 10235   002FFE  6E4A               	movwf	___fldiv@aexp^0,c
 10236   003000  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 10237   003002  EF05  F018         	goto	u3011
 10238   003006  EF07  F018         	goto	u3010
 10239   00300A                     u3011:
 10240   00300A  EF2B  F018         	goto	l1133
 10241   00300E                     u3010:
 10242   00300E  0EFF               	movlw	255
 10243   003010  1445               	andwf	___fldiv@grs^0,w,c
 10244   003012  6E3A               	movwf	??___fldiv^0,c
 10245   003014  0EFF               	movlw	255
 10246   003016  1446               	andwf	(___fldiv@grs+1)^0,w,c
 10247   003018  6E3B               	movwf	(??___fldiv+1)^0,c
 10248   00301A  0EFF               	movlw	255
 10249   00301C  1447               	andwf	(___fldiv@grs+2)^0,w,c
 10250   00301E  6E3C               	movwf	(??___fldiv+2)^0,c
 10251   003020  0E7F               	movlw	127
 10252   003022  1448               	andwf	(___fldiv@grs+3)^0,w,c
 10253   003024  6E3D               	movwf	(??___fldiv+3)^0,c
 10254   003026  503A               	movf	??___fldiv^0,w,c
 10255   003028  103B               	iorwf	(??___fldiv+1)^0,w,c
 10256   00302A  103C               	iorwf	(??___fldiv+2)^0,w,c
 10257   00302C  103D               	iorwf	(??___fldiv+3)^0,w,c
 10258   00302E  B4D8               	btfsc	status,2,c
 10259   003030  EF1C  F018         	goto	u3021
 10260   003034  EF1E  F018         	goto	u3020
 10261   003038                     u3021:
 10262   003038  EF22  F018         	goto	l1134
 10263   00303C                     u3020:
 10264   00303C                     l3576:
 10265   00303C  0E01               	movlw	1
 10266   00303E  6E4A               	movwf	___fldiv@aexp^0,c
 10267   003040  EF2B  F018         	goto	l1133
 10268   003044                     l1134:
 10269   003044  A032               	btfss	___fldiv@b^0,0,c
 10270   003046  EF27  F018         	goto	u3031
 10271   00304A  EF29  F018         	goto	u3030
 10272   00304E                     u3031:
 10273   00304E  EF2B  F018         	goto	l1133
 10274   003052                     u3030:
 10275   003052  EF1E  F018         	goto	l3576
 10276   003056                     l1133:
 10277   003056  504A               	movf	___fldiv@aexp^0,w,c
 10278   003058  B4D8               	btfsc	status,2,c
 10279   00305A  EF31  F018         	goto	u3041
 10280   00305E  EF33  F018         	goto	u3040
 10281   003062                     u3041:
 10282   003062  EF57  F018         	goto	l3588
 10283   003066                     u3040:
 10284   003066  0E01               	movlw	1
 10285   003068  2632               	addwf	___fldiv@b^0,f,c
 10286   00306A  0E00               	movlw	0
 10287   00306C  2233               	addwfc	(___fldiv@b+1)^0,f,c
 10288   00306E  2234               	addwfc	(___fldiv@b+2)^0,f,c
 10289   003070  2235               	addwfc	(___fldiv@b+3)^0,f,c
 10290   003072  A035               	btfss	(___fldiv@b+3)^0,0,c
 10291   003074  EF3E  F018         	goto	u3051
 10292   003078  EF40  F018         	goto	u3050
 10293   00307C                     u3051:
 10294   00307C  EF57  F018         	goto	l3588
 10295   003080                     u3050:
 10296   003080  C032  F03A         	movff	___fldiv@b,??___fldiv
 10297   003084  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 10298   003088  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 10299   00308C  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 10300   003090  343D               	rlcf	(??___fldiv+3)^0,w,c
 10301   003092  323D               	rrcf	(??___fldiv+3)^0,f,c
 10302   003094  323C               	rrcf	(??___fldiv+2)^0,f,c
 10303   003096  323B               	rrcf	(??___fldiv+1)^0,f,c
 10304   003098  323A               	rrcf	??___fldiv^0,f,c
 10305   00309A  C03A  F032         	movff	??___fldiv,___fldiv@b
 10306   00309E  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 10307   0030A2  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 10308   0030A6  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 10309   0030AA  4A43               	infsnz	___fldiv@new_exp^0,f,c
 10310   0030AC  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 10311   0030AE                     l3588:
 10312   0030AE  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10313   0030B0  EF62  F018         	goto	u3061
 10314   0030B4  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 10315   0030B6  E108               	bnz	u3060
 10316   0030B8  2843               	incf	___fldiv@new_exp^0,w,c
 10317   0030BA  A0D8               	btfss	status,0,c
 10318   0030BC  EF62  F018         	goto	u3061
 10319   0030C0  EF64  F018         	goto	u3060
 10320   0030C4                     u3061:
 10321   0030C4  EF6F  F018         	goto	l3592
 10322   0030C8                     u3060:
 10323   0030C8  0E00               	movlw	0
 10324   0030CA  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10325   0030CC  6843               	setf	___fldiv@new_exp^0,c
 10326   0030CE  0E00               	movlw	0
 10327   0030D0  6E32               	movwf	___fldiv@b^0,c
 10328   0030D2  0E00               	movlw	0
 10329   0030D4  6E33               	movwf	(___fldiv@b+1)^0,c
 10330   0030D6  0E00               	movlw	0
 10331   0030D8  6E34               	movwf	(___fldiv@b+2)^0,c
 10332   0030DA  0E00               	movlw	0
 10333   0030DC  6E35               	movwf	(___fldiv@b+3)^0,c
 10334   0030DE                     l3592:
 10335   0030DE  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10336   0030E0  EF7C  F018         	goto	u3070
 10337   0030E4  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 10338   0030E6  E106               	bnz	u3071
 10339   0030E8  0443               	decf	___fldiv@new_exp^0,w,c
 10340   0030EA  B0D8               	btfsc	status,0,c
 10341   0030EC  EF7A  F018         	goto	u3071
 10342   0030F0  EF7C  F018         	goto	u3070
 10343   0030F4                     u3071:
 10344   0030F4  EF8A  F018         	goto	l3596
 10345   0030F8                     u3070:
 10346   0030F8  0E00               	movlw	0
 10347   0030FA  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 10348   0030FC  0E00               	movlw	0
 10349   0030FE  6E43               	movwf	___fldiv@new_exp^0,c
 10350   003100  0E00               	movlw	0
 10351   003102  6E32               	movwf	___fldiv@b^0,c
 10352   003104  0E00               	movlw	0
 10353   003106  6E33               	movwf	(___fldiv@b+1)^0,c
 10354   003108  0E00               	movlw	0
 10355   00310A  6E34               	movwf	(___fldiv@b+2)^0,c
 10356   00310C  0E00               	movlw	0
 10357   00310E  6E35               	movwf	(___fldiv@b+3)^0,c
 10358   003110  0E00               	movlw	0
 10359   003112  6E42               	movwf	___fldiv@sign^0,c
 10360   003114                     l3596:
 10361   003114  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 10362   003118  A049               	btfss	___fldiv@bexp^0,0,c
 10363   00311A  EF91  F018         	goto	u3081
 10364   00311E  EF93  F018         	goto	u3080
 10365   003122                     u3081:
 10366   003122  EF96  F018         	goto	l3602
 10367   003126                     u3080:
 10368   003126  8E34               	bsf	(___fldiv@b+2)^0,7,c
 10369   003128  EF97  F018         	goto	l3604
 10370   00312C                     l3602:
 10371   00312C  9E34               	bcf	(___fldiv@b+2)^0,7,c
 10372   00312E                     l3604:
 10373   00312E  90D8               	bcf	status,0,c
 10374   003130  3049               	rrcf	___fldiv@bexp^0,w,c
 10375   003132  6E35               	movwf	(___fldiv@b+3)^0,c
 10376   003134  EF4D  F017         	goto	l3518
 10377   003138                     l1120:
 10378   003138  0012               	return		;funcret
 10379   00313A                     __end_of___fldiv:
 10380                           	callstack 0
 10381                           
 10382 ;; *************** function _sendStringSerial4 *****************
 10383 ;; Defined at:
 10384 ;;		line 49 in file "serial.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  string          2    1[COMRAM] PTR unsigned char 
 10387 ;;		 -> main@data(80), 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;		None
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10403 ;;Total ram usage:        2 bytes
 10404 ;; Hardware stack levels used: 1
 10405 ;; Hardware stack levels required when called: 1
 10406 ;; This function calls:
 10407 ;;		_sendCharSerial4
 10408 ;; This function is called by:
 10409 ;;		_Color2String
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text53
 10414   004ACA                     __ptext53:
 10415                           	callstack 0
 10416   004ACA                     _sendStringSerial4:
 10417                           	callstack 28
 10418   004ACA                     
 10419                           ;serial.c: 52:     while(*string != 0){
 10420   004ACA  EF74  F025         	goto	l4558
 10421   004ACE                     l4552:
 10422                           
 10423                           ;serial.c: 54:   sendCharSerial4(*string++);
 10424   004ACE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10425   004AD2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10426   004AD6  50DF               	movf	indf2,w,c
 10427   004AD8  ECF8  F025         	call	_sendCharSerial4
 10428   004ADC  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10429   004ADE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10430   004AE0                     
 10431                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10432   004AE0  0E6A               	movlw	106
 10433   004AE2                     u4987:
 10434   004AE2  2EE8               	decfsz	wreg,f,c
 10435   004AE4  D7FE               	bra	u4987
 10436   004AE6  D000               	nop2	
 10437   004AE8                     l4558:
 10438                           
 10439                           ;serial.c: 52:     while(*string != 0){
 10440   004AE8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10441   004AEC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10442   004AF0  50DF               	movf	indf2,w,c
 10443   004AF2  A4D8               	btfss	status,2,c
 10444   004AF4  EF7E  F025         	goto	u4351
 10445   004AF8  EF80  F025         	goto	u4350
 10446   004AFC                     u4351:
 10447   004AFC  EF67  F025         	goto	l4552
 10448   004B00                     u4350:
 10449   004B00  0012               	return		;funcret
 10450   004B02                     __end_of_sendStringSerial4:
 10451                           	callstack 0
 10452                           
 10453 ;; *************** function _sendCharSerial4 *****************
 10454 ;; Defined at:
 10455 ;;		line 34 in file "serial.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  charToSend      1    wreg     unsigned char 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;  charToSend      1    0[COMRAM] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;Total ram usage:        1 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_sendStringSerial4
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text54
 10483   004BF0                     __ptext54:
 10484                           	callstack 0
 10485   004BF0                     _sendCharSerial4:
 10486                           	callstack 28
 10487                           
 10488                           ;incstack = 0
 10489                           ;sendCharSerial4@charToSend stored from wreg
 10490   004BF0  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10491   004BF2                     l341:
 10492   004BF2  010E               	movlb	14	; () banked
 10493   004BF4  A537               	btfss	55,2,b	;volatile
 10494   004BF6  EFFF  F025         	goto	u4161
 10495   004BFA  EF01  F026         	goto	u4160
 10496   004BFE                     u4161:
 10497   004BFE  EFF9  F025         	goto	l341
 10498   004C02                     u4160:
 10499   004C02                     
 10500                           ; BSR set to: 14
 10501                           ;serial.c: 36:     TX4REG = charToSend;
 10502   004C02  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10503   004C06                     
 10504                           ; BSR set to: 14
 10505   004C06  0012               	return		;funcret
 10506   004C08                     __end_of_sendCharSerial4:
 10507                           	callstack 0
 10508                           
 10509 ;; *************** function _Hue2Colour *****************
 10510 ;; Defined at:
 10511 ;;		line 56 in file "colorfunctions.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;  cf              2   17[BANK0 ] PTR struct RGBC_rel
 10514 ;;		 -> colorf(22), 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  colourname      2   19[BANK0 ] PTR unsigned char 
 10517 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
 10518 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
 10519 ;;		 -> STR_2(1), 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  2   17[BANK0 ] PTR unsigned char 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10533 ;;Total ram usage:        4 bytes
 10534 ;; Hardware stack levels used: 1
 10535 ;; Hardware stack levels required when called: 1
 10536 ;; This function calls:
 10537 ;;		___flge
 10538 ;; This function is called by:
 10539 ;;		_Color2String
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text55
 10544   001F96                     __ptext55:
 10545                           	callstack 0
 10546   001F96                     _Hue2Colour:
 10547                           	callstack 28
 10548   001F96                     
 10549                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10550   001F96  0E2B               	movlw	low (STR_1+42)
 10551   001F98  0100               	movlb	0	; () banked
 10552   001F9A  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10553   001F9C  0E0E               	movlw	high (STR_1+42)
 10554   001F9E  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10555   001FA0                     
 10556                           ; BSR set to: 0
 10557                           ;colorfunctions.c: 60:     if (((cf->h)>352)&&((cf->h)<360))
 10558   001FA0  0E00               	movlw	0
 10559   001FA2  6E57               	movwf	___flge@ff1^0,c
 10560   001FA4  0E00               	movlw	0
 10561   001FA6  6E58               	movwf	(___flge@ff1+1)^0,c
 10562   001FA8  0EB0               	movlw	176
 10563   001FAA  6E59               	movwf	(___flge@ff1+2)^0,c
 10564   001FAC  0E43               	movlw	67
 10565   001FAE  6E5A               	movwf	(___flge@ff1+3)^0,c
 10566   001FB0  EE20 F010          	lfsr	2,16
 10567   001FB4  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10568   001FB6  26D9               	addwf	fsr2l,f,c
 10569   001FB8  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10570   001FBA  22DA               	addwfc	fsr2h,f,c
 10571   001FBC  CFDE F05B          	movff	postinc2,___flge@ff2
 10572   001FC0  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10573   001FC4  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10574   001FC8  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10575   001FCC  EC0A  F01E         	call	___flge	;wreg free
 10576   001FD0  B0D8               	btfsc	status,0,c
 10577   001FD2  EFED  F00F         	goto	u4191
 10578   001FD6  EFEF  F00F         	goto	u4190
 10579   001FDA                     u4191:
 10580   001FDA  EF1E  F010         	goto	l4478
 10581   001FDE                     u4190:
 10582   001FDE  0100               	movlb	0	; () banked
 10583   001FE0  EE20 F010          	lfsr	2,16
 10584   001FE4  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10585   001FE6  26D9               	addwf	fsr2l,f,c
 10586   001FE8  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10587   001FEA  22DA               	addwfc	fsr2h,f,c
 10588   001FEC  CFDE F057          	movff	postinc2,___flge@ff1
 10589   001FF0  CFDE F058          	movff	postinc2,___flge@ff1+1
 10590   001FF4  CFDE F059          	movff	postinc2,___flge@ff1+2
 10591   001FF8  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10592   001FFC  0E00               	movlw	0
 10593   001FFE  6E5B               	movwf	___flge@ff2^0,c
 10594   002000  0E00               	movlw	0
 10595   002002  6E5C               	movwf	(___flge@ff2+1)^0,c
 10596   002004  0EB4               	movlw	180
 10597   002006  6E5D               	movwf	(___flge@ff2+2)^0,c
 10598   002008  0E43               	movlw	67
 10599   00200A  6E5E               	movwf	(___flge@ff2+3)^0,c
 10600   00200C  EC0A  F01E         	call	___flge	;wreg free
 10601   002010  B0D8               	btfsc	status,0,c
 10602   002012  EF0D  F010         	goto	u4201
 10603   002016  EF0F  F010         	goto	u4200
 10604   00201A                     u4201:
 10605   00201A  EF1E  F010         	goto	l4478
 10606   00201E                     u4200:
 10607   00201E                     
 10608                           ;colorfunctions.c: 61:     {;colorfunctions.c: 63:         colourname = "Red";
 10609   00201E  0E6B               	movlw	low STR_3
 10610   002020  0100               	movlb	0	; () banked
 10611   002022  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10612   002024  0E0E               	movlw	high STR_3
 10613   002026  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10614   002028                     
 10615                           ; BSR set to: 0
 10616                           ;colorfunctions.c: 66:         cf->colourindex=0;
 10617   002028  EE20 F014          	lfsr	2,20
 10618   00202C  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10619   00202E  26D9               	addwf	fsr2l,f,c
 10620   002030  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10621   002032  22DA               	addwfc	fsr2h,f,c
 10622   002034  0E00               	movlw	0
 10623   002036  6EDE               	movwf	postinc2,c
 10624   002038  0E00               	movlw	0
 10625   00203A  6EDD               	movwf	postdec2,c
 10626   00203C                     l4478:
 10627                           
 10628                           ;colorfunctions.c: 68:      if (((cf->h)>75)&&((cf->h)<79))
 10629   00203C  0E00               	movlw	0
 10630   00203E  6E57               	movwf	___flge@ff1^0,c
 10631   002040  0E00               	movlw	0
 10632   002042  6E58               	movwf	(___flge@ff1+1)^0,c
 10633   002044  0E96               	movlw	150
 10634   002046  6E59               	movwf	(___flge@ff1+2)^0,c
 10635   002048  0E42               	movlw	66
 10636   00204A  6E5A               	movwf	(___flge@ff1+3)^0,c
 10637   00204C  0100               	movlb	0	; () banked
 10638   00204E  EE20 F010          	lfsr	2,16
 10639   002052  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10640   002054  26D9               	addwf	fsr2l,f,c
 10641   002056  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10642   002058  22DA               	addwfc	fsr2h,f,c
 10643   00205A  CFDE F05B          	movff	postinc2,___flge@ff2
 10644   00205E  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10645   002062  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10646   002066  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10647   00206A  EC0A  F01E         	call	___flge	;wreg free
 10648   00206E  B0D8               	btfsc	status,0,c
 10649   002070  EF3C  F010         	goto	u4211
 10650   002074  EF3E  F010         	goto	u4210
 10651   002078                     u4211:
 10652   002078  EF6F  F010         	goto	l4486
 10653   00207C                     u4210:
 10654   00207C  0100               	movlb	0	; () banked
 10655   00207E  EE20 F010          	lfsr	2,16
 10656   002082  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10657   002084  26D9               	addwf	fsr2l,f,c
 10658   002086  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10659   002088  22DA               	addwfc	fsr2h,f,c
 10660   00208A  CFDE F057          	movff	postinc2,___flge@ff1
 10661   00208E  CFDE F058          	movff	postinc2,___flge@ff1+1
 10662   002092  CFDE F059          	movff	postinc2,___flge@ff1+2
 10663   002096  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10664   00209A  0E00               	movlw	0
 10665   00209C  6E5B               	movwf	___flge@ff2^0,c
 10666   00209E  0E00               	movlw	0
 10667   0020A0  6E5C               	movwf	(___flge@ff2+1)^0,c
 10668   0020A2  0E9E               	movlw	158
 10669   0020A4  6E5D               	movwf	(___flge@ff2+2)^0,c
 10670   0020A6  0E42               	movlw	66
 10671   0020A8  6E5E               	movwf	(___flge@ff2+3)^0,c
 10672   0020AA  EC0A  F01E         	call	___flge	;wreg free
 10673   0020AE  B0D8               	btfsc	status,0,c
 10674   0020B0  EF5C  F010         	goto	u4221
 10675   0020B4  EF5E  F010         	goto	u4220
 10676   0020B8                     u4221:
 10677   0020B8  EF6F  F010         	goto	l4486
 10678   0020BC                     u4220:
 10679   0020BC                     
 10680                           ;colorfunctions.c: 69:     {;colorfunctions.c: 70:         colourname = "Green";
 10681   0020BC  0E58               	movlw	low STR_4
 10682   0020BE  0100               	movlb	0	; () banked
 10683   0020C0  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10684   0020C2  0E0E               	movlw	high STR_4
 10685   0020C4  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10686   0020C6                     
 10687                           ; BSR set to: 0
 10688                           ;colorfunctions.c: 71:         cf->colourindex=1;
 10689   0020C6  EE20 F014          	lfsr	2,20
 10690   0020CA  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10691   0020CC  26D9               	addwf	fsr2l,f,c
 10692   0020CE  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10693   0020D0  22DA               	addwfc	fsr2h,f,c
 10694   0020D2  0E01               	movlw	1
 10695   0020D4  6EDE               	movwf	postinc2,c
 10696   0020D6  0E00               	movlw	0
 10697   0020D8  6EDD               	movwf	postdec2,c
 10698                           
 10699                           ;colorfunctions.c: 72:     }
 10700   0020DA  EF55  F012         	goto	l4534
 10701   0020DE                     l4486:
 10702   0020DE  0E00               	movlw	0
 10703   0020E0  6E57               	movwf	___flge@ff1^0,c
 10704   0020E2  0E00               	movlw	0
 10705   0020E4  6E58               	movwf	(___flge@ff1+1)^0,c
 10706   0020E6  0E11               	movlw	17
 10707   0020E8  6E59               	movwf	(___flge@ff1+2)^0,c
 10708   0020EA  0E43               	movlw	67
 10709   0020EC  6E5A               	movwf	(___flge@ff1+3)^0,c
 10710   0020EE  0100               	movlb	0	; () banked
 10711   0020F0  EE20 F010          	lfsr	2,16
 10712   0020F4  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10713   0020F6  26D9               	addwf	fsr2l,f,c
 10714   0020F8  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10715   0020FA  22DA               	addwfc	fsr2h,f,c
 10716   0020FC  CFDE F05B          	movff	postinc2,___flge@ff2
 10717   002100  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10718   002104  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10719   002108  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10720   00210C  EC0A  F01E         	call	___flge	;wreg free
 10721   002110  B0D8               	btfsc	status,0,c
 10722   002112  EF8D  F010         	goto	u4231
 10723   002116  EF8F  F010         	goto	u4230
 10724   00211A                     u4231:
 10725   00211A  EFC0  F010         	goto	l4494
 10726   00211E                     u4230:
 10727   00211E  0100               	movlb	0	; () banked
 10728   002120  EE20 F010          	lfsr	2,16
 10729   002124  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10730   002126  26D9               	addwf	fsr2l,f,c
 10731   002128  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10732   00212A  22DA               	addwfc	fsr2h,f,c
 10733   00212C  CFDE F057          	movff	postinc2,___flge@ff1
 10734   002130  CFDE F058          	movff	postinc2,___flge@ff1+1
 10735   002134  CFDE F059          	movff	postinc2,___flge@ff1+2
 10736   002138  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10737   00213C  0E00               	movlw	0
 10738   00213E  6E5B               	movwf	___flge@ff2^0,c
 10739   002140  0E00               	movlw	0
 10740   002142  6E5C               	movwf	(___flge@ff2+1)^0,c
 10741   002144  0E24               	movlw	36
 10742   002146  6E5D               	movwf	(___flge@ff2+2)^0,c
 10743   002148  0E43               	movlw	67
 10744   00214A  6E5E               	movwf	(___flge@ff2+3)^0,c
 10745   00214C  EC0A  F01E         	call	___flge	;wreg free
 10746   002150  B0D8               	btfsc	status,0,c
 10747   002152  EFAD  F010         	goto	u4241
 10748   002156  EFAF  F010         	goto	u4240
 10749   00215A                     u4241:
 10750   00215A  EFC0  F010         	goto	l4494
 10751   00215E                     u4240:
 10752   00215E                     
 10753                           ;colorfunctions.c: 74:     {;colorfunctions.c: 75:         colourname = "Dark Blue";
 10754   00215E  0E37               	movlw	low STR_5
 10755   002160  0100               	movlb	0	; () banked
 10756   002162  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10757   002164  0E0E               	movlw	high STR_5
 10758   002166  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10759   002168                     
 10760                           ; BSR set to: 0
 10761                           ;colorfunctions.c: 76:         cf->colourindex=2;
 10762   002168  EE20 F014          	lfsr	2,20
 10763   00216C  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10764   00216E  26D9               	addwf	fsr2l,f,c
 10765   002170  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10766   002172  22DA               	addwfc	fsr2h,f,c
 10767   002174  0E02               	movlw	2
 10768   002176  6EDE               	movwf	postinc2,c
 10769   002178  0E00               	movlw	0
 10770   00217A  6EDD               	movwf	postdec2,c
 10771                           
 10772                           ;colorfunctions.c: 77:     }
 10773   00217C  EF55  F012         	goto	l4534
 10774   002180                     l4494:
 10775   002180  0E00               	movlw	0
 10776   002182  6E57               	movwf	___flge@ff1^0,c
 10777   002184  0E00               	movlw	0
 10778   002186  6E58               	movwf	(___flge@ff1+1)^0,c
 10779   002188  0EA8               	movlw	168
 10780   00218A  6E59               	movwf	(___flge@ff1+2)^0,c
 10781   00218C  0E41               	movlw	65
 10782   00218E  6E5A               	movwf	(___flge@ff1+3)^0,c
 10783   002190  0100               	movlb	0	; () banked
 10784   002192  EE20 F010          	lfsr	2,16
 10785   002196  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10786   002198  26D9               	addwf	fsr2l,f,c
 10787   00219A  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10788   00219C  22DA               	addwfc	fsr2h,f,c
 10789   00219E  CFDE F05B          	movff	postinc2,___flge@ff2
 10790   0021A2  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10791   0021A6  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10792   0021AA  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10793   0021AE  EC0A  F01E         	call	___flge	;wreg free
 10794   0021B2  B0D8               	btfsc	status,0,c
 10795   0021B4  EFDE  F010         	goto	u4251
 10796   0021B8  EFE0  F010         	goto	u4250
 10797   0021BC                     u4251:
 10798   0021BC  EF11  F011         	goto	l4502
 10799   0021C0                     u4250:
 10800   0021C0  0100               	movlb	0	; () banked
 10801   0021C2  EE20 F010          	lfsr	2,16
 10802   0021C6  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10803   0021C8  26D9               	addwf	fsr2l,f,c
 10804   0021CA  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10805   0021CC  22DA               	addwfc	fsr2h,f,c
 10806   0021CE  CFDE F057          	movff	postinc2,___flge@ff1
 10807   0021D2  CFDE F058          	movff	postinc2,___flge@ff1+1
 10808   0021D6  CFDE F059          	movff	postinc2,___flge@ff1+2
 10809   0021DA  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10810   0021DE  0E00               	movlw	0
 10811   0021E0  6E5B               	movwf	___flge@ff2^0,c
 10812   0021E2  0E00               	movlw	0
 10813   0021E4  6E5C               	movwf	(___flge@ff2+1)^0,c
 10814   0021E6  0EC8               	movlw	200
 10815   0021E8  6E5D               	movwf	(___flge@ff2+2)^0,c
 10816   0021EA  0E41               	movlw	65
 10817   0021EC  6E5E               	movwf	(___flge@ff2+3)^0,c
 10818   0021EE  EC0A  F01E         	call	___flge	;wreg free
 10819   0021F2  B0D8               	btfsc	status,0,c
 10820   0021F4  EFFE  F010         	goto	u4261
 10821   0021F8  EF00  F011         	goto	u4260
 10822   0021FC                     u4261:
 10823   0021FC  EF11  F011         	goto	l4502
 10824   002200                     u4260:
 10825   002200                     
 10826                           ;colorfunctions.c: 79:     {;colorfunctions.c: 80:         colourname = "Yellow";
 10827   002200  0E51               	movlw	low STR_6
 10828   002202  0100               	movlb	0	; () banked
 10829   002204  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10830   002206  0E0E               	movlw	high STR_6
 10831   002208  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10832   00220A                     
 10833                           ; BSR set to: 0
 10834                           ;colorfunctions.c: 81:         cf->colourindex=3;
 10835   00220A  EE20 F014          	lfsr	2,20
 10836   00220E  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10837   002210  26D9               	addwf	fsr2l,f,c
 10838   002212  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10839   002214  22DA               	addwfc	fsr2h,f,c
 10840   002216  0E03               	movlw	3
 10841   002218  6EDE               	movwf	postinc2,c
 10842   00221A  0E00               	movlw	0
 10843   00221C  6EDD               	movwf	postdec2,c
 10844                           
 10845                           ;colorfunctions.c: 82:     }
 10846   00221E  EF55  F012         	goto	l4534
 10847   002222                     l4502:
 10848   002222  0E00               	movlw	0
 10849   002224  6E57               	movwf	___flge@ff1^0,c
 10850   002226  0E00               	movlw	0
 10851   002228  6E58               	movwf	(___flge@ff1+1)^0,c
 10852   00222A  0E70               	movlw	112
 10853   00222C  6E59               	movwf	(___flge@ff1+2)^0,c
 10854   00222E  0E41               	movlw	65
 10855   002230  6E5A               	movwf	(___flge@ff1+3)^0,c
 10856   002232  0100               	movlb	0	; () banked
 10857   002234  EE20 F010          	lfsr	2,16
 10858   002238  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10859   00223A  26D9               	addwf	fsr2l,f,c
 10860   00223C  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10861   00223E  22DA               	addwfc	fsr2h,f,c
 10862   002240  CFDE F05B          	movff	postinc2,___flge@ff2
 10863   002244  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10864   002248  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10865   00224C  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10866   002250  EC0A  F01E         	call	___flge	;wreg free
 10867   002254  B0D8               	btfsc	status,0,c
 10868   002256  EF2F  F011         	goto	u4271
 10869   00225A  EF31  F011         	goto	u4270
 10870   00225E                     u4271:
 10871   00225E  EF62  F011         	goto	l4510
 10872   002262                     u4270:
 10873   002262  0100               	movlb	0	; () banked
 10874   002264  EE20 F010          	lfsr	2,16
 10875   002268  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10876   00226A  26D9               	addwf	fsr2l,f,c
 10877   00226C  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10878   00226E  22DA               	addwfc	fsr2h,f,c
 10879   002270  CFDE F057          	movff	postinc2,___flge@ff1
 10880   002274  CFDE F058          	movff	postinc2,___flge@ff1+1
 10881   002278  CFDE F059          	movff	postinc2,___flge@ff1+2
 10882   00227C  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10883   002280  0E00               	movlw	0
 10884   002282  6E5B               	movwf	___flge@ff2^0,c
 10885   002284  0E00               	movlw	0
 10886   002286  6E5C               	movwf	(___flge@ff2+1)^0,c
 10887   002288  0E98               	movlw	152
 10888   00228A  6E5D               	movwf	(___flge@ff2+2)^0,c
 10889   00228C  0E41               	movlw	65
 10890   00228E  6E5E               	movwf	(___flge@ff2+3)^0,c
 10891   002290  EC0A  F01E         	call	___flge	;wreg free
 10892   002294  B0D8               	btfsc	status,0,c
 10893   002296  EF4F  F011         	goto	u4281
 10894   00229A  EF51  F011         	goto	u4280
 10895   00229E                     u4281:
 10896   00229E  EF62  F011         	goto	l4510
 10897   0022A2                     u4280:
 10898   0022A2                     
 10899                           ;colorfunctions.c: 84:     {;colorfunctions.c: 85:         colourname = "Pink";
 10900   0022A2  0E5E               	movlw	low STR_7
 10901   0022A4  0100               	movlb	0	; () banked
 10902   0022A6  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10903   0022A8  0E0E               	movlw	high STR_7
 10904   0022AA  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10905   0022AC                     
 10906                           ; BSR set to: 0
 10907                           ;colorfunctions.c: 86:         cf->colourindex=4;
 10908   0022AC  EE20 F014          	lfsr	2,20
 10909   0022B0  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10910   0022B2  26D9               	addwf	fsr2l,f,c
 10911   0022B4  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10912   0022B6  22DA               	addwfc	fsr2h,f,c
 10913   0022B8  0E04               	movlw	4
 10914   0022BA  6EDE               	movwf	postinc2,c
 10915   0022BC  0E00               	movlw	0
 10916   0022BE  6EDD               	movwf	postdec2,c
 10917                           
 10918                           ;colorfunctions.c: 87:     }
 10919   0022C0  EF55  F012         	goto	l4534
 10920   0022C4                     l4510:
 10921   0022C4  0E00               	movlw	0
 10922   0022C6  6E57               	movwf	___flge@ff1^0,c
 10923   0022C8  0E00               	movlw	0
 10924   0022CA  6E58               	movwf	(___flge@ff1+1)^0,c
 10925   0022CC  0EE0               	movlw	224
 10926   0022CE  6E59               	movwf	(___flge@ff1+2)^0,c
 10927   0022D0  0E40               	movlw	64
 10928   0022D2  6E5A               	movwf	(___flge@ff1+3)^0,c
 10929   0022D4  0100               	movlb	0	; () banked
 10930   0022D6  EE20 F010          	lfsr	2,16
 10931   0022DA  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10932   0022DC  26D9               	addwf	fsr2l,f,c
 10933   0022DE  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10934   0022E0  22DA               	addwfc	fsr2h,f,c
 10935   0022E2  CFDE F05B          	movff	postinc2,___flge@ff2
 10936   0022E6  CFDE F05C          	movff	postinc2,___flge@ff2+1
 10937   0022EA  CFDE F05D          	movff	postinc2,___flge@ff2+2
 10938   0022EE  CFDE F05E          	movff	postinc2,___flge@ff2+3
 10939   0022F2  EC0A  F01E         	call	___flge	;wreg free
 10940   0022F6  B0D8               	btfsc	status,0,c
 10941   0022F8  EF80  F011         	goto	u4291
 10942   0022FC  EF82  F011         	goto	u4290
 10943   002300                     u4291:
 10944   002300  EFB3  F011         	goto	l4518
 10945   002304                     u4290:
 10946   002304  0100               	movlb	0	; () banked
 10947   002306  EE20 F010          	lfsr	2,16
 10948   00230A  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10949   00230C  26D9               	addwf	fsr2l,f,c
 10950   00230E  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10951   002310  22DA               	addwfc	fsr2h,f,c
 10952   002312  CFDE F057          	movff	postinc2,___flge@ff1
 10953   002316  CFDE F058          	movff	postinc2,___flge@ff1+1
 10954   00231A  CFDE F059          	movff	postinc2,___flge@ff1+2
 10955   00231E  CFDE F05A          	movff	postinc2,___flge@ff1+3
 10956   002322  0E00               	movlw	0
 10957   002324  6E5B               	movwf	___flge@ff2^0,c
 10958   002326  0E00               	movlw	0
 10959   002328  6E5C               	movwf	(___flge@ff2+1)^0,c
 10960   00232A  0E10               	movlw	16
 10961   00232C  6E5D               	movwf	(___flge@ff2+2)^0,c
 10962   00232E  0E41               	movlw	65
 10963   002330  6E5E               	movwf	(___flge@ff2+3)^0,c
 10964   002332  EC0A  F01E         	call	___flge	;wreg free
 10965   002336  B0D8               	btfsc	status,0,c
 10966   002338  EFA0  F011         	goto	u4301
 10967   00233C  EFA2  F011         	goto	u4300
 10968   002340                     u4301:
 10969   002340  EFB3  F011         	goto	l4518
 10970   002344                     u4300:
 10971   002344                     
 10972                           ;colorfunctions.c: 89:     {;colorfunctions.c: 90:         colourname = "Orange";
 10973   002344  0E4A               	movlw	low STR_8
 10974   002346  0100               	movlb	0	; () banked
 10975   002348  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 10976   00234A  0E0E               	movlw	high STR_8
 10977   00234C  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 10978   00234E                     
 10979                           ; BSR set to: 0
 10980                           ;colorfunctions.c: 91:         cf->colourindex=5;
 10981   00234E  EE20 F014          	lfsr	2,20
 10982   002352  5171               	movf	Hue2Colour@cf& (0+255),w,b
 10983   002354  26D9               	addwf	fsr2l,f,c
 10984   002356  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 10985   002358  22DA               	addwfc	fsr2h,f,c
 10986   00235A  0E05               	movlw	5
 10987   00235C  6EDE               	movwf	postinc2,c
 10988   00235E  0E00               	movlw	0
 10989   002360  6EDD               	movwf	postdec2,c
 10990                           
 10991                           ;colorfunctions.c: 92:     }
 10992   002362  EF55  F012         	goto	l4534
 10993   002366                     l4518:
 10994   002366  0E00               	movlw	0
 10995   002368  6E57               	movwf	___flge@ff1^0,c
 10996   00236A  0E00               	movlw	0
 10997   00236C  6E58               	movwf	(___flge@ff1+1)^0,c
 10998   00236E  0EAA               	movlw	170
 10999   002370  6E59               	movwf	(___flge@ff1+2)^0,c
 11000   002372  0E42               	movlw	66
 11001   002374  6E5A               	movwf	(___flge@ff1+3)^0,c
 11002   002376  0100               	movlb	0	; () banked
 11003   002378  EE20 F010          	lfsr	2,16
 11004   00237C  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11005   00237E  26D9               	addwf	fsr2l,f,c
 11006   002380  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11007   002382  22DA               	addwfc	fsr2h,f,c
 11008   002384  CFDE F05B          	movff	postinc2,___flge@ff2
 11009   002388  CFDE F05C          	movff	postinc2,___flge@ff2+1
 11010   00238C  CFDE F05D          	movff	postinc2,___flge@ff2+2
 11011   002390  CFDE F05E          	movff	postinc2,___flge@ff2+3
 11012   002394  EC0A  F01E         	call	___flge	;wreg free
 11013   002398  B0D8               	btfsc	status,0,c
 11014   00239A  EFD1  F011         	goto	u4311
 11015   00239E  EFD3  F011         	goto	u4310
 11016   0023A2                     u4311:
 11017   0023A2  EF04  F012         	goto	l4526
 11018   0023A6                     u4310:
 11019   0023A6  0100               	movlb	0	; () banked
 11020   0023A8  EE20 F010          	lfsr	2,16
 11021   0023AC  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11022   0023AE  26D9               	addwf	fsr2l,f,c
 11023   0023B0  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11024   0023B2  22DA               	addwfc	fsr2h,f,c
 11025   0023B4  CFDE F057          	movff	postinc2,___flge@ff1
 11026   0023B8  CFDE F058          	movff	postinc2,___flge@ff1+1
 11027   0023BC  CFDE F059          	movff	postinc2,___flge@ff1+2
 11028   0023C0  CFDE F05A          	movff	postinc2,___flge@ff1+3
 11029   0023C4  0E00               	movlw	0
 11030   0023C6  6E5B               	movwf	___flge@ff2^0,c
 11031   0023C8  0E00               	movlw	0
 11032   0023CA  6E5C               	movwf	(___flge@ff2+1)^0,c
 11033   0023CC  0EBC               	movlw	188
 11034   0023CE  6E5D               	movwf	(___flge@ff2+2)^0,c
 11035   0023D0  0E42               	movlw	66
 11036   0023D2  6E5E               	movwf	(___flge@ff2+3)^0,c
 11037   0023D4  EC0A  F01E         	call	___flge	;wreg free
 11038   0023D8  B0D8               	btfsc	status,0,c
 11039   0023DA  EFF1  F011         	goto	u4321
 11040   0023DE  EFF3  F011         	goto	u4320
 11041   0023E2                     u4321:
 11042   0023E2  EF04  F012         	goto	l4526
 11043   0023E6                     u4320:
 11044   0023E6                     
 11045                           ;colorfunctions.c: 94:     {;colorfunctions.c: 95:         colourname = "Light Blue";
 11046   0023E6  0E2C               	movlw	low STR_9
 11047   0023E8  0100               	movlb	0	; () banked
 11048   0023EA  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 11049   0023EC  0E0E               	movlw	high STR_9
 11050   0023EE  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 11051   0023F0                     
 11052                           ; BSR set to: 0
 11053                           ;colorfunctions.c: 96:         cf->colourindex=6;
 11054   0023F0  EE20 F014          	lfsr	2,20
 11055   0023F4  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11056   0023F6  26D9               	addwf	fsr2l,f,c
 11057   0023F8  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11058   0023FA  22DA               	addwfc	fsr2h,f,c
 11059   0023FC  0E06               	movlw	6
 11060   0023FE  6EDE               	movwf	postinc2,c
 11061   002400  0E00               	movlw	0
 11062   002402  6EDD               	movwf	postdec2,c
 11063                           
 11064                           ;colorfunctions.c: 97:     }
 11065   002404  EF55  F012         	goto	l4534
 11066   002408                     l4526:
 11067   002408  0E00               	movlw	0
 11068   00240A  6E57               	movwf	___flge@ff1^0,c
 11069   00240C  0E00               	movlw	0
 11070   00240E  6E58               	movwf	(___flge@ff1+1)^0,c
 11071   002410  0ED0               	movlw	208
 11072   002412  6E59               	movwf	(___flge@ff1+2)^0,c
 11073   002414  0E41               	movlw	65
 11074   002416  6E5A               	movwf	(___flge@ff1+3)^0,c
 11075   002418  0100               	movlb	0	; () banked
 11076   00241A  EE20 F010          	lfsr	2,16
 11077   00241E  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11078   002420  26D9               	addwf	fsr2l,f,c
 11079   002422  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11080   002424  22DA               	addwfc	fsr2h,f,c
 11081   002426  CFDE F05B          	movff	postinc2,___flge@ff2
 11082   00242A  CFDE F05C          	movff	postinc2,___flge@ff2+1
 11083   00242E  CFDE F05D          	movff	postinc2,___flge@ff2+2
 11084   002432  CFDE F05E          	movff	postinc2,___flge@ff2+3
 11085   002436  EC0A  F01E         	call	___flge	;wreg free
 11086   00243A  B0D8               	btfsc	status,0,c
 11087   00243C  EF22  F012         	goto	u4331
 11088   002440  EF24  F012         	goto	u4330
 11089   002444                     u4331:
 11090   002444  EF55  F012         	goto	l518
 11091   002448                     u4330:
 11092   002448  0100               	movlb	0	; () banked
 11093   00244A  EE20 F010          	lfsr	2,16
 11094   00244E  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11095   002450  26D9               	addwf	fsr2l,f,c
 11096   002452  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11097   002454  22DA               	addwfc	fsr2h,f,c
 11098   002456  CFDE F057          	movff	postinc2,___flge@ff1
 11099   00245A  CFDE F058          	movff	postinc2,___flge@ff1+1
 11100   00245E  CFDE F059          	movff	postinc2,___flge@ff1+2
 11101   002462  CFDE F05A          	movff	postinc2,___flge@ff1+3
 11102   002466  0E00               	movlw	0
 11103   002468  6E5B               	movwf	___flge@ff2^0,c
 11104   00246A  0E00               	movlw	0
 11105   00246C  6E5C               	movwf	(___flge@ff2+1)^0,c
 11106   00246E  0EE8               	movlw	232
 11107   002470  6E5D               	movwf	(___flge@ff2+2)^0,c
 11108   002472  0E41               	movlw	65
 11109   002474  6E5E               	movwf	(___flge@ff2+3)^0,c
 11110   002476  EC0A  F01E         	call	___flge	;wreg free
 11111   00247A  B0D8               	btfsc	status,0,c
 11112   00247C  EF42  F012         	goto	u4341
 11113   002480  EF44  F012         	goto	u4340
 11114   002484                     u4341:
 11115   002484  EF55  F012         	goto	l518
 11116   002488                     u4340:
 11117   002488                     
 11118                           ;colorfunctions.c: 99:     {;colorfunctions.c: 100:         colourname = "Eggshell";
 11119   002488  0E41               	movlw	low STR_10
 11120   00248A  0100               	movlb	0	; () banked
 11121   00248C  6F73               	movwf	Hue2Colour@colourname& (0+255),b
 11122   00248E  0E0E               	movlw	high STR_10
 11123   002490  6F74               	movwf	(Hue2Colour@colourname+1)& (0+255),b
 11124   002492                     
 11125                           ; BSR set to: 0
 11126                           ;colorfunctions.c: 101:         cf->colourindex=7;
 11127   002492  EE20 F014          	lfsr	2,20
 11128   002496  5171               	movf	Hue2Colour@cf& (0+255),w,b
 11129   002498  26D9               	addwf	fsr2l,f,c
 11130   00249A  5172               	movf	(Hue2Colour@cf+1)& (0+255),w,b
 11131   00249C  22DA               	addwfc	fsr2h,f,c
 11132   00249E  0E07               	movlw	7
 11133   0024A0  6EDE               	movwf	postinc2,c
 11134   0024A2  0E00               	movlw	0
 11135   0024A4  6EDD               	movwf	postdec2,c
 11136   0024A6  EF55  F012         	goto	l4534
 11137   0024AA                     l518:
 11138   0024AA                     l4534:
 11139                           
 11140                           ;colorfunctions.c: 104:     return colourname;
 11141   0024AA  C073  F071         	movff	Hue2Colour@colourname,?_Hue2Colour
 11142   0024AE  C074  F072         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11143   0024B2  0012               	return		;funcret
 11144   0024B4                     __end_of_Hue2Colour:
 11145                           	callstack 0
 11146                           
 11147 ;; *************** function ___flge *****************
 11148 ;; Defined at:
 11149 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  ff1             4   86[COMRAM] PTR unsigned char 
 11152 ;;  ff2             4   90[COMRAM] PTR unsigned char 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;		None               void
 11157 ;; Registers used:
 11158 ;;		wreg, status,2, status,0
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11168 ;;Total ram usage:       12 bytes
 11169 ;; Hardware stack levels used: 1
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_main
 11174 ;;		_RGB2Hue
 11175 ;;		_Hue2Colour
 11176 ;;		_efgtoa
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text56
 11181   003C14                     __ptext56:
 11182                           	callstack 0
 11183   003C14                     ___flge:
 11184                           	callstack 30
 11185   003C14  0E00               	movlw	0
 11186   003C16  1457               	andwf	___flge@ff1^0,w,c
 11187   003C18  0100               	movlb	0	; () banked
 11188   003C1A  6F6D               	movwf	??___flge& (0+255),b
 11189   003C1C  0E00               	movlw	0
 11190   003C1E  1458               	andwf	(___flge@ff1+1)^0,w,c
 11191   003C20  6F6E               	movwf	(??___flge+1)& (0+255),b
 11192   003C22  0E80               	movlw	128
 11193   003C24  1459               	andwf	(___flge@ff1+2)^0,w,c
 11194   003C26  6F6F               	movwf	(??___flge+2)& (0+255),b
 11195   003C28  0E7F               	movlw	127
 11196   003C2A  145A               	andwf	(___flge@ff1+3)^0,w,c
 11197   003C2C  6F70               	movwf	(??___flge+3)& (0+255),b
 11198   003C2E  516D               	movf	??___flge& (0+255),w,b
 11199   003C30  116E               	iorwf	(??___flge+1)& (0+255),w,b
 11200   003C32  116F               	iorwf	(??___flge+2)& (0+255),w,b
 11201   003C34  1170               	iorwf	(??___flge+3)& (0+255),w,b
 11202   003C36  A4D8               	btfss	status,2,c
 11203   003C38  EF20  F01E         	goto	u3311
 11204   003C3C  EF22  F01E         	goto	u3310
 11205   003C40                     u3311:
 11206   003C40  EF2A  F01E         	goto	l3768
 11207   003C44                     u3310:
 11208   003C44                     
 11209                           ; BSR set to: 0
 11210   003C44  0E00               	movlw	0
 11211   003C46  6E57               	movwf	___flge@ff1^0,c
 11212   003C48  0E00               	movlw	0
 11213   003C4A  6E58               	movwf	(___flge@ff1+1)^0,c
 11214   003C4C  0E00               	movlw	0
 11215   003C4E  6E59               	movwf	(___flge@ff1+2)^0,c
 11216   003C50  0E00               	movlw	0
 11217   003C52  6E5A               	movwf	(___flge@ff1+3)^0,c
 11218   003C54                     l3768:
 11219                           
 11220                           ; BSR set to: 0
 11221   003C54  0E00               	movlw	0
 11222   003C56  145B               	andwf	___flge@ff2^0,w,c
 11223   003C58  6F6D               	movwf	??___flge& (0+255),b
 11224   003C5A  0E00               	movlw	0
 11225   003C5C  145C               	andwf	(___flge@ff2+1)^0,w,c
 11226   003C5E  6F6E               	movwf	(??___flge+1)& (0+255),b
 11227   003C60  0E80               	movlw	128
 11228   003C62  145D               	andwf	(___flge@ff2+2)^0,w,c
 11229   003C64  6F6F               	movwf	(??___flge+2)& (0+255),b
 11230   003C66  0E7F               	movlw	127
 11231   003C68  145E               	andwf	(___flge@ff2+3)^0,w,c
 11232   003C6A  6F70               	movwf	(??___flge+3)& (0+255),b
 11233   003C6C  516D               	movf	??___flge& (0+255),w,b
 11234   003C6E  116E               	iorwf	(??___flge+1)& (0+255),w,b
 11235   003C70  116F               	iorwf	(??___flge+2)& (0+255),w,b
 11236   003C72  1170               	iorwf	(??___flge+3)& (0+255),w,b
 11237   003C74  A4D8               	btfss	status,2,c
 11238   003C76  EF3F  F01E         	goto	u3321
 11239   003C7A  EF41  F01E         	goto	u3320
 11240   003C7E                     u3321:
 11241   003C7E  EF49  F01E         	goto	l3772
 11242   003C82                     u3320:
 11243   003C82                     
 11244                           ; BSR set to: 0
 11245   003C82  0E00               	movlw	0
 11246   003C84  6E5B               	movwf	___flge@ff2^0,c
 11247   003C86  0E00               	movlw	0
 11248   003C88  6E5C               	movwf	(___flge@ff2+1)^0,c
 11249   003C8A  0E00               	movlw	0
 11250   003C8C  6E5D               	movwf	(___flge@ff2+2)^0,c
 11251   003C8E  0E00               	movlw	0
 11252   003C90  6E5E               	movwf	(___flge@ff2+3)^0,c
 11253   003C92                     l3772:
 11254                           
 11255                           ; BSR set to: 0
 11256   003C92  AE5A               	btfss	(___flge@ff1+3)^0,7,c
 11257   003C94  EF4E  F01E         	goto	u3331
 11258   003C98  EF50  F01E         	goto	u3330
 11259   003C9C                     u3331:
 11260   003C9C  EF59  F01E         	goto	l3776
 11261   003CA0                     u3330:
 11262   003CA0                     
 11263                           ; BSR set to: 0
 11264   003CA0  6C57               	negf	___flge@ff1^0,c
 11265   003CA2  1E58               	comf	(___flge@ff1+1)^0,f,c
 11266   003CA4  B0D8               	btfsc	status,0,c
 11267   003CA6  2A58               	incf	(___flge@ff1+1)^0,f,c
 11268   003CA8  1E59               	comf	(___flge@ff1+2)^0,f,c
 11269   003CAA  B0D8               	btfsc	status,0,c
 11270   003CAC  2A59               	incf	(___flge@ff1+2)^0,f,c
 11271   003CAE  0E80               	movlw	128
 11272   003CB0  565A               	subfwb	(___flge@ff1+3)^0,f,c
 11273   003CB2                     l3776:
 11274                           
 11275                           ; BSR set to: 0
 11276   003CB2  AE5E               	btfss	(___flge@ff2+3)^0,7,c
 11277   003CB4  EF5E  F01E         	goto	u3341
 11278   003CB8  EF60  F01E         	goto	u3340
 11279   003CBC                     u3341:
 11280   003CBC  EF69  F01E         	goto	l803
 11281   003CC0                     u3340:
 11282   003CC0                     
 11283                           ; BSR set to: 0
 11284   003CC0  6C5B               	negf	___flge@ff2^0,c
 11285   003CC2  1E5C               	comf	(___flge@ff2+1)^0,f,c
 11286   003CC4  B0D8               	btfsc	status,0,c
 11287   003CC6  2A5C               	incf	(___flge@ff2+1)^0,f,c
 11288   003CC8  1E5D               	comf	(___flge@ff2+2)^0,f,c
 11289   003CCA  B0D8               	btfsc	status,0,c
 11290   003CCC  2A5D               	incf	(___flge@ff2+2)^0,f,c
 11291   003CCE  0E80               	movlw	128
 11292   003CD0  565E               	subfwb	(___flge@ff2+3)^0,f,c
 11293   003CD2                     l803:
 11294                           
 11295                           ; BSR set to: 0
 11296   003CD2  0E00               	movlw	0
 11297   003CD4  1A57               	xorwf	___flge@ff1^0,f,c
 11298   003CD6  0E00               	movlw	0
 11299   003CD8  1A58               	xorwf	(___flge@ff1+1)^0,f,c
 11300   003CDA  0E00               	movlw	0
 11301   003CDC  1A59               	xorwf	(___flge@ff1+2)^0,f,c
 11302   003CDE  0E80               	movlw	128
 11303   003CE0  1A5A               	xorwf	(___flge@ff1+3)^0,f,c
 11304   003CE2  0E00               	movlw	0
 11305   003CE4  1A5B               	xorwf	___flge@ff2^0,f,c
 11306   003CE6  0E00               	movlw	0
 11307   003CE8  1A5C               	xorwf	(___flge@ff2+1)^0,f,c
 11308   003CEA  0E00               	movlw	0
 11309   003CEC  1A5D               	xorwf	(___flge@ff2+2)^0,f,c
 11310   003CEE  0E80               	movlw	128
 11311   003CF0  1A5E               	xorwf	(___flge@ff2+3)^0,f,c
 11312   003CF2  505B               	movf	___flge@ff2^0,w,c
 11313   003CF4  5C57               	subwf	___flge@ff1^0,w,c
 11314   003CF6  505C               	movf	(___flge@ff2+1)^0,w,c
 11315   003CF8  5858               	subwfb	(___flge@ff1+1)^0,w,c
 11316   003CFA  505D               	movf	(___flge@ff2+2)^0,w,c
 11317   003CFC  5859               	subwfb	(___flge@ff1+2)^0,w,c
 11318   003CFE  505E               	movf	(___flge@ff2+3)^0,w,c
 11319   003D00  585A               	subwfb	(___flge@ff1+3)^0,w,c
 11320   003D02  B0D8               	btfsc	status,0,c
 11321   003D04  EF86  F01E         	goto	u3351
 11322   003D08  EF88  F01E         	goto	u3350
 11323   003D0C                     u3351:
 11324   003D0C  EF8B  F01E         	goto	l3782
 11325   003D10                     u3350:
 11326   003D10                     
 11327                           ; BSR set to: 0
 11328   003D10  90D8               	bcf	status,0,c
 11329   003D12  EF8C  F01E         	goto	l808
 11330   003D16                     l3782:
 11331                           
 11332                           ; BSR set to: 0
 11333   003D16  80D8               	bsf	status,0,c
 11334   003D18                     l808:
 11335                           
 11336                           ; BSR set to: 0
 11337   003D18  0012               	return		;funcret
 11338   003D1A                     __end_of___flge:
 11339                           	callstack 0
 11340                           
 11341 ;; *************** function _ClickLEDOn *****************
 11342 ;; Defined at:
 11343 ;;		line 93 in file "colorclick.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;  power           1    wreg     unsigned char 
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;  power           1    0[COMRAM] unsigned char 
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  1    wreg      void 
 11350 ;; Registers used:
 11351 ;;		wreg, status,2
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11361 ;;Total ram usage:        1 bytes
 11362 ;; Hardware stack levels used: 1
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_main
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text57
 11371   004B02                     __ptext57:
 11372                           	callstack 0
 11373   004B02                     _ClickLEDOn:
 11374                           	callstack 30
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;incstack = 0
 11378                           ;ClickLEDOn@power stored from wreg
 11379   004B02  6E01               	movwf	ClickLEDOn@power^0,c
 11380   004B04                     
 11381                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11382   004B04  5001               	movf	ClickLEDOn@power^0,w,c
 11383   004B06  B4D8               	btfsc	status,2,c
 11384   004B08  EF88  F025         	goto	u4461
 11385   004B0C  EF8A  F025         	goto	u4460
 11386   004B10                     u4461:
 11387   004B10  EF8F  F025         	goto	l4714
 11388   004B14                     u4460:
 11389   004B14                     
 11390                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11391   004B14  827F               	bsf	127,1,c	;volatile
 11392                           
 11393                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11394   004B16  8879               	bsf	121,4,c	;volatile
 11395                           
 11396                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11397   004B18  8E7E               	bsf	126,7,c	;volatile
 11398                           
 11399                           ;colorclick.c: 99:     }
 11400   004B1A  EF9A  F025         	goto	l405
 11401   004B1E                     l4714:
 11402   004B1E  5001               	movf	ClickLEDOn@power^0,w,c
 11403   004B20  A4D8               	btfss	status,2,c
 11404   004B22  EF95  F025         	goto	u4471
 11405   004B26  EF97  F025         	goto	u4470
 11406   004B2A                     u4471:
 11407   004B2A  EF9A  F025         	goto	l405
 11408   004B2E                     u4470:
 11409   004B2E                     
 11410                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11411   004B2E  927F               	bcf	127,1,c	;volatile
 11412                           
 11413                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11414   004B30  9879               	bcf	121,4,c	;volatile
 11415                           
 11416                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11417   004B32  9E7E               	bcf	126,7,c	;volatile
 11418   004B34                     l405:
 11419   004B34  0012               	return		;funcret
 11420   004B36                     __end_of_ClickLEDOn:
 11421                           	callstack 0
 11422                           
 11423                           	psect	rparam
 11424   000000                     
 11425                           	psect	idloc
 11426                           
 11427                           ;Config register IDLOC0 @ 0x200000
 11428                           ;	unspecified, using default values
 11429   200000                     	org	2097152
 11430   200000  0FFF               	dw	4095
 11431                           
 11432                           ;Config register IDLOC1 @ 0x200002
 11433                           ;	unspecified, using default values
 11434   200002                     	org	2097154
 11435   200002  0FFF               	dw	4095
 11436                           
 11437                           ;Config register IDLOC2 @ 0x200004
 11438                           ;	unspecified, using default values
 11439   200004                     	org	2097156
 11440   200004  0FFF               	dw	4095
 11441                           
 11442                           ;Config register IDLOC3 @ 0x200006
 11443                           ;	unspecified, using default values
 11444   200006                     	org	2097158
 11445   200006  0FFF               	dw	4095
 11446                           
 11447                           ;Config register IDLOC4 @ 0x200008
 11448                           ;	unspecified, using default values
 11449   200008                     	org	2097160
 11450   200008  0FFF               	dw	4095
 11451                           
 11452                           ;Config register IDLOC5 @ 0x20000A
 11453                           ;	unspecified, using default values
 11454   20000A                     	org	2097162
 11455   20000A  0FFF               	dw	4095
 11456                           
 11457                           ;Config register IDLOC6 @ 0x20000C
 11458                           ;	unspecified, using default values
 11459   20000C                     	org	2097164
 11460   20000C  0FFF               	dw	4095
 11461                           
 11462                           ;Config register IDLOC7 @ 0x20000E
 11463                           ;	unspecified, using default values
 11464   20000E                     	org	2097166
 11465   20000E  0FFF               	dw	4095
 11466                           
 11467                           	psect	config
 11468                           
 11469                           ;Config register CONFIG1L @ 0x300000
 11470                           ;	External Oscillator mode Selection bits
 11471                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11472                           ;	Power-up default value for COSC bits
 11473                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11474   300000                     	org	3145728
 11475   300000  AA                 	db	170
 11476                           
 11477                           ;Config register CONFIG1H @ 0x300001
 11478                           ;	unspecified, using default values
 11479                           ;	Clock Out Enable bit
 11480                           ;	CLKOUTEN = 0x1, unprogrammed default
 11481                           ;	Clock Switch Enable bit
 11482                           ;	CSWEN = 0x1, unprogrammed default
 11483                           ;	Fail-Safe Clock Monitor Enable bit
 11484                           ;	FCMEN = 0x1, unprogrammed default
 11485   300001                     	org	3145729
 11486   300001  FF                 	db	255
 11487                           
 11488                           ;Config register CONFIG2L @ 0x300002
 11489                           ;	unspecified, using default values
 11490                           ;	Master Clear Enable bit
 11491                           ;	MCLRE = 0x1, unprogrammed default
 11492                           ;	Power-up Timer Enable bit
 11493                           ;	PWRTE = 0x1, unprogrammed default
 11494                           ;	Low-power BOR enable bit
 11495                           ;	LPBOREN = 0x1, unprogrammed default
 11496                           ;	Brown-out Reset Enable bits
 11497                           ;	BOREN = 0x3, unprogrammed default
 11498   300002                     	org	3145730
 11499   300002  FF                 	db	255
 11500                           
 11501                           ;Config register CONFIG2H @ 0x300003
 11502                           ;	unspecified, using default values
 11503                           ;	Brown Out Reset Voltage selection bits
 11504                           ;	BORV = 0x3, unprogrammed default
 11505                           ;	ZCD Disable bit
 11506                           ;	ZCD = 0x1, unprogrammed default
 11507                           ;	PPSLOCK bit One-Way Set Enable bit
 11508                           ;	PPS1WAY = 0x1, unprogrammed default
 11509                           ;	Stack Full/Underflow Reset Enable bit
 11510                           ;	STVREN = 0x1, unprogrammed default
 11511                           ;	Debugger Enable bit
 11512                           ;	DEBUG = 0x1, unprogrammed default
 11513                           ;	Extended Instruction Set Enable bit
 11514                           ;	XINST = 0x1, unprogrammed default
 11515   300003                     	org	3145731
 11516   300003  FF                 	db	255
 11517                           
 11518                           ;Config register CONFIG3L @ 0x300004
 11519                           ;	WDT Period Select bits
 11520                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11521                           ;	WDT operating mode
 11522                           ;	WDTE = OFF, WDT Disabled
 11523   300004                     	org	3145732
 11524   300004  9F                 	db	159
 11525                           
 11526                           ;Config register CONFIG3H @ 0x300005
 11527                           ;	unspecified, using default values
 11528                           ;	WDT Window Select bits
 11529                           ;	WDTCWS = 0x7, unprogrammed default
 11530                           ;	WDT input clock selector
 11531                           ;	WDTCCS = 0x7, unprogrammed default
 11532   300005                     	org	3145733
 11533   300005  FF                 	db	255
 11534                           
 11535                           ;Config register CONFIG4L @ 0x300006
 11536                           ;	unspecified, using default values
 11537                           ;	Write Protection Block 0
 11538                           ;	WRT0 = 0x1, unprogrammed default
 11539                           ;	Write Protection Block 1
 11540                           ;	WRT1 = 0x1, unprogrammed default
 11541                           ;	Write Protection Block 2
 11542                           ;	WRT2 = 0x1, unprogrammed default
 11543                           ;	Write Protection Block 3
 11544                           ;	WRT3 = 0x1, unprogrammed default
 11545                           ;	Write Protection Block 3
 11546                           ;	WRT4 = 0x1, unprogrammed default
 11547                           ;	Write Protection Block 3
 11548                           ;	WRT5 = 0x1, unprogrammed default
 11549                           ;	Write Protection Block 3
 11550                           ;	WRT6 = 0x1, unprogrammed default
 11551                           ;	Write Protection Block 3
 11552                           ;	WRT7 = 0x1, unprogrammed default
 11553   300006                     	org	3145734
 11554   300006  FF                 	db	255
 11555                           
 11556                           ;Config register CONFIG4H @ 0x300007
 11557                           ;	unspecified, using default values
 11558                           ;	Configuration Register Write Protection bit
 11559                           ;	WRTC = 0x1, unprogrammed default
 11560                           ;	Boot Block Write Protection bit
 11561                           ;	WRTB = 0x1, unprogrammed default
 11562                           ;	Data EEPROM Write Protection bit
 11563                           ;	WRTD = 0x1, unprogrammed default
 11564                           ;	Scanner Enable bit
 11565                           ;	SCANE = 0x1, unprogrammed default
 11566                           ;	Low Voltage Programming Enable bit
 11567                           ;	LVP = 0x1, unprogrammed default
 11568   300007                     	org	3145735
 11569   300007  FF                 	db	255
 11570                           
 11571                           ;Config register CONFIG5L @ 0x300008
 11572                           ;	unspecified, using default values
 11573                           ;	UserNVM Program Memory Code Protection bit
 11574                           ;	CP = 0x1, unprogrammed default
 11575                           ;	DataNVM Memory Code Protection bit
 11576                           ;	CPD = 0x1, unprogrammed default
 11577   300008                     	org	3145736
 11578   300008  FF                 	db	255
 11579                           
 11580                           ;Config register CONFIG5H @ 0x300009
 11581                           ;	unspecified, using default values
 11582   300009                     	org	3145737
 11583   300009  FF                 	db	255
 11584                           
 11585                           ;Config register CONFIG6L @ 0x30000A
 11586                           ;	unspecified, using default values
 11587                           ;	Table Read Protection Block 0
 11588                           ;	EBTR0 = 0x1, unprogrammed default
 11589                           ;	Table Read Protection Block 1
 11590                           ;	EBTR1 = 0x1, unprogrammed default
 11591                           ;	Table Read Protection Block 2
 11592                           ;	EBTR2 = 0x1, unprogrammed default
 11593                           ;	Table Read Protection Block 3
 11594                           ;	EBTR3 = 0x1, unprogrammed default
 11595                           ;	Table Read Protection Block 4
 11596                           ;	EBTR4 = 0x1, unprogrammed default
 11597                           ;	Table Read Protection Block 5
 11598                           ;	EBTR5 = 0x1, unprogrammed default
 11599                           ;	Table Read Protection Block 6
 11600                           ;	EBTR6 = 0x1, unprogrammed default
 11601                           ;	Table Read Protection Block 7
 11602                           ;	EBTR7 = 0x1, unprogrammed default
 11603   30000A                     	org	3145738
 11604   30000A  FF                 	db	255
 11605                           
 11606                           ;Config register CONFIG6H @ 0x30000B
 11607                           ;	unspecified, using default values
 11608                           ;	Boot Block Table Read Protection bit
 11609                           ;	EBTRB = 0x1, unprogrammed default
 11610   30000B                     	org	3145739
 11611   30000B  FF                 	db	255
 11612                           tosu	equ	0xFFF
 11613                           tosh	equ	0xFFE
 11614                           tosl	equ	0xFFD
 11615                           stkptr	equ	0xFFC
 11616                           pclatu	equ	0xFFB
 11617                           pclath	equ	0xFFA
 11618                           pcl	equ	0xFF9
 11619                           tblptru	equ	0xFF8
 11620                           tblptrh	equ	0xFF7
 11621                           tblptrl	equ	0xFF6
 11622                           tablat	equ	0xFF5
 11623                           prodh	equ	0xFF4
 11624                           prodl	equ	0xFF3
 11625                           indf0	equ	0xFEF
 11626                           postinc0	equ	0xFEE
 11627                           postdec0	equ	0xFED
 11628                           preinc0	equ	0xFEC
 11629                           plusw0	equ	0xFEB
 11630                           fsr0h	equ	0xFEA
 11631                           fsr0l	equ	0xFE9
 11632                           wreg	equ	0xFE8
 11633                           indf1	equ	0xFE7
 11634                           postinc1	equ	0xFE6
 11635                           postdec1	equ	0xFE5
 11636                           preinc1	equ	0xFE4
 11637                           plusw1	equ	0xFE3
 11638                           fsr1h	equ	0xFE2
 11639                           fsr1l	equ	0xFE1
 11640                           bsr	equ	0xFE0
 11641                           indf2	equ	0xFDF
 11642                           postinc2	equ	0xFDE
 11643                           postdec2	equ	0xFDD
 11644                           preinc2	equ	0xFDC
 11645                           plusw2	equ	0xFDB
 11646                           fsr2h	equ	0xFDA
 11647                           fsr2l	equ	0xFD9
 11648                           status	equ	0xFD8

Data Sizes:
    Strings     110
    Constant    0
    Data        9
    BSS         213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    140     157
    BANK1           256     81     245
    BANK2           256      0      40
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_14(CODE[4]), STR_11(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_14(CODE[4]), STR_11(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2534$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> main@data(BANK1[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2455$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2455$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 80
		 -> main@data(BANK1[80]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 80
		 -> main@data(BANK1[80]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->___flge
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flge
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _Orange_R135->_reverseHalfSquare
    _reverseHalfSquare->_fullSpeedReverse
    _fullSpeedReverse->_setMotorPWM
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_Color2String
    _RGB2Hue->___flge
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _Hue2Colour->___flge
    ___flge->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0   83607
                                            138 BANK0      2     2      0
                                              0 BANK1     81    81      0
                         _ClickLEDOn
                       _Color2String
                  _I2C_2_Master_Init
                           _LED_init
                        _Orange_R135
                            _RGB2Hue
                             ___flge
                   _color_click_init
                    _colour_read_all
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   20049
                                             17 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _Orange_R135                                          4     0      4   26508
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _reverseHalfSquare                                    6     2      4    7944
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedReverse                                     7     3      4    2767
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Right45                                              6     2      4    8596
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Left45                                               6     2      4    9204
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _stop                                                 4     0      4    3829
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    2133
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4   31064
                                            134 BANK0      4     0      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             39    15     24   26511
                                             97 BANK0     37    13     24
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   26158
                                             89 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6   25808
                                             70 BANK0     19    13      6
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   24473
                                             17 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1227
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3477
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2708
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3750
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     842
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2301
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Hue2Colour                                           4     2      2    3929
                                             17 BANK0      4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3294
                                             86 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
   _I2C_2_Master_Init
   _LED_init
   _Orange_R135
     _Left45
       _stop
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _turnLeft
         _setMotorPWM
     _Right45
       _stop
       _turnRight
         _setMotorPWM
     _TimerReset
     _reverseHalfSquare
       _fullSpeedReverse
         _setMotorPWM
       _stop
   _RGB2Hue
     ___fladd
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _initDCmotorsPWM
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      28       9       15.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     51      F5       7       95.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8C      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRhlhlll     52      0       0      40        0.0%
BITBIGSFRhlllh      37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      52        0.0%
BITBIGSFRhhhhh      29      0       0      32        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlllhhh     1E      0       0      46        0.0%
BITBIGSFRhhllh      1D      0       0      37        0.0%
BITBIGSFRlllhll     19      0       0      53        0.0%
BITBIGSFRhhhhl      13      0       0      33        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRhhhlh       E      0       0      34        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      51        0.0%
BITBIGSFRlllhlh      5      0       0      50        0.0%
BITBIGSFRlllhhl      3      0       0      49        0.0%
BITBIGSFRhllh        2      0       0      41        0.0%
BITBIGSFRhhlh        2      0       0      36        0.0%
BITBIGSFRhlhllh      1      0       0      39        0.0%
BITBIGSFRlllhhh      1      0       0      48        0.0%
BITBIGSFRhlhhh       1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      35        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219      56        0.0%
DATA                 0      0     219       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 20:29:19 2023

               _color_read_Red 47B2                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 48A2                             l30 4B60  
                           l33 4B86                             l42 4C34                             l27 4B5E  
                           l36 4C3E                             l45 4C20                             l39 4C2A  
                           l48 4A50            ___wmul@multiplicand 0003               _color_read_Clear 4852  
             _color_read_Green 4802                            l213 42B2                            l207 4184  
                          l231 4452                            l208 4186                            l240 44D8  
                          l218 421C                            l234 43CA                            l420 4C14  
                          l228 4558                            l332 4BCE                            l405 4B34  
                          l341 4BF2                            l271 40E8                            l191 4342  
                          l344 4C06                            l353 4B00                            l347 3F98  
                          l507 1F94                            l524 24B2                            l445 4C48  
                          l518 24AA                            l198 3A06                            l390 4800  
                          l384 4A90                            l393 4850                            l538 4BAC  
                          l803 3CD2                            l387 4BEE                            l812 4AC8  
                          l396 48F0                            l493 3B0C                            l399 48A0  
                          l808 3D18                            l835 3C12                            l499 1AC8  
                          l797 4042                            _pad 455A                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1F96  
                 ___fltol@exp1 000A                           l1120 3138                           l1200 366A  
                         l1122 2F98                           l1131 2FDE                           l1108 4986  
                         l1036 4646                           l1133 3056                           l1125 2F5C  
                         l1029 463E                           l1134 3044                           l1207 36C6  
                         l1152 2A3A                           l1216 47B0                           l1161 2CA8  
                         l1321 3368                           l1162 2C96                           l1066 26A2  
                         l1250 45D2                           l1083 27BC                           l1075 2972  
                         l1067 2690                           l1156 2D9E                           l1092 288C  
                         l1068 2656                           l1093 287A                           l1261 1868  
                         l1246 457C                           l1159 2C30                           l1264 1202  
                         l4000 0FD4                           l1328 475E                           l1169 2D60  
                         l1345 357A                           l1193 35D2                           l1338 3E16  
                         l1266 1048                           l4002 0FDC                           l4010 0FF8  
                         l3300 257A                           l1348 34BE                           l1356 469C  
                         l4100 1586                           l4020 1092                           l4012 1012  
                         l1196 372E                           l1365 4940                           l3310 25B4  
                         l3302 257C                           l1294 164A                           l4110 1620  
                         l4102 158E                           l4030 1188                           l4022 10D0  
                         l1359 46AC                           l3400 27D2                           l3320 25C8  
                         l3312 25B8                           l3304 2584                           l4120 167E  
                         l4112 1640                           l4104 1594                           l4040 121A  
                         l4032 1190                           l4024 1102                           l4016 1058  
                         l4200 3182                           l1377 3EE0                           l1385 4A0E  
                         l3410 280E                           l3402 27E2                           l3330 25DC  
                         l3322 25CC                           l3314 25BC                           l3306 2594  
                         l3250 3E18                           l1394 49CA                           l4130 16A6  
                         l4122 1684                           l4114 165C                           l4106 159C  
                         l4050 124C                           l4042 1226                           l4026 1140  
                         l4018 105E                           l4202 3192                           l3500 2E22  
                         l3420 283A                           l3412 2810                           l3340 25F0  
                         l3332 25E0                           l3324 25D0                           l3316 25C0  
                         l3308 25A6                           l1388 4C52                           l3260 3E9A  
                         l3252 3E2A                           l4140 16DA                           l4124 168C  
                         l4116 166A                           l4132 16AC                           l4108 15A8  
                         l4060 1294                           l4052 125A                           l4044 122E  
                         l4028 1154                           l4036 11D0                           l4204 31A8  
                         l4212 31C0                           l4300 412A                           l3502 2E32  
                         l3510 2E5C                           l3430 2872                           l3414 281E  
                         l3406 27F6                           l3422 283C                           l3350 264E  
                         l3334 25E4                           l3326 25D4                           l3318 25C4  
                         l3342 25F4                           l3270 24D0                           l3254 3E3C  
                         l4150 1790                           l4142 1732                           l4134 16BE  
                         l4126 169C                           l4118 167A                           l4070 13A8  
                         l4062 12A4                           l4054 1272                           l4046 1236  
                         l4038 120A                           l4222 327E                           l4206 31B0  
                         l4214 31F2                           l4310 416C                           l4302 4134  
                         l3600 3126                           l3520 2E9E                           l3512 2E6C  
                         l3504 2E42                           l3440 28F0                           l3416 2826  
                         l3408 2800                           l3424 284A                           l3360 2684  
                         l3352 2664                           l3344 25F8                           l3336 25E8  
                         l3328 25D8                           l3272 24E0                           l3280 250A  
                         l3264 24B4                           l3256 3E46                           l4160 1802  
                         l4152 17AC                           l4144 1766                           l4136 16D0  
                         l4128 16A0                           l4080 1448                           l4064 12B8  
                         l4072 13AE                           l4056 1284                           l4048 123A  
                         l4232 32FA                           l4224 32A8                           l4216 3216  
                         l4208 31B8                           l4304 4140                           l4312 421E  
                         l4400 4B48                           l3602 312C                           l3514 2E82  
                         l3506 2E52                           l3450 2936                           l3434 289C  
                         l3442 28F2                           l3426 284E                           l3418 282A  
                         l3370 26D4                           l3362 268E                           l3354 2670  
                         l3346 2622                           l3338 25EC                           l3290 253A  
                         l3282 251A                           l3274 24F0                           l3266 24C0  
                         l3258 3E64                           l4162 181A                           l4154 17B4  
                         l4146 176E                           l4138 16D4                           l4090 1524  
                         l4082 147A                           l4074 13CC                           l4066 131C  
                         l4058 128C                           l4226 32C8                           l4218 324A  
                         l4234 332A                           l4306 414C                           l4330 428A  
                         l4314 423E                           l4402 4B4A                           l4500 220A  
                         l3604 312E                           l3540 2F20                           l3532 2ED6  
                         l3516 2E92                           l3524 2EB2                           l3508 2E54  
                         l3700 2C40                           l3620 29A2                           l3612 2974  
                         l3460 2960                           l3452 2944                           l3444 2902  
                         l3436 28A8                           l3428 285C                           l3380 2710  
                         l3372 26E4                           l3364 26B0                           l3356 2674  
                         l3348 263E                           l3292 2548                           l3284 2520  
                         l3276 2500                           l3268 24CE                           l4164 182A  
                         l4156 17C4                           l4148 1772                           l4092 152A  
                         l4084 148A                           l4076 1400                           l4068 1374  
                         l4180 390C                           l4308 4154                           l4332 4298  
                         l4324 425E                           l4316 424A                           l4340 41B4  
                         l4404 4B4C                           l4172 4B60                           l4510 22C4  
                         l4502 2222                           l3550 2F66                           l3542 2F28  
                         l3534 2EF0                           l3526 2EC2                           l3518 2E9A  
                         l3702 2C4E                           l3630 29DE                           l3622 29B2  
                         l3614 2982                           l3462 2962                           l3454 294A  
                         l3446 2912                           l3438 28B6                           l3390 2756  
                         l3382 271E                           l3374 26F2                           l3366 26C0  
                         l3358 2682                           l3294 254A                           l3286 2532  
                         l3278 2502                           l3470 49EA                           l4166 1840  
                         l4158 17F4                           l4094 155E                           l4086 149A  
                         l4078 1432                           l4238 333C                           l4190 39C6  
                         l4182 3920                           l4334 429C                           l4326 4272  
                         l4318 4256                           l4430 43E2                           l4350 41DC  
                         l4342 41C0                           l4174 4B70                           l4262 4C36  
                         l4270 4C2C                           l4520 23A6                           l4512 2304  
                         l4504 2262                           l3560 2FBE                           l3552 2F84  
                         l3544 2F38                           l3536 2F00                           l3528 2EC2  
                         l3480 2DBC                           l3712 2CB8                           l3720 2D00  
                         l3704 2C52                           l3640 2A14                           l3632 29E4  
                         l3624 29C2                           l3616 2990                           l3456 294C  
                         l3448 2932                           l3392 278A                           l3384 2720  
                         l3376 2700                           l3296 255A                           l3288 2534  
                         l3800 3B38                           l3472 49EE                           l4168 1848  
                         l4096 1572                           l4088 14CE                           l5080 3292  
                         l4192 313A                           l4184 3924                           l4176 389C  
                         l4328 427E                           l4432 43FA                           l4352 41E8  
                         l4336 4188                           l4440 4344                           l4360 44DA  
                         l4600 3614                           l4264 4C3A                           l4272 4C30  
                         l4280 4A16                           l4530 2488                           l4522 23E6  
                         l4514 2344                           l4506 22A2                           l3570 2FFC  
                         l3562 2FC4                           l3554 2F86                           l3546 2F4C  
                         l3538 2F10                           l3482 2DCC                           l3490 2DF6  
                         l3474 2DA0                           l3730 2D74                           l3722 2D1A  
                         l3714 2CC4                           l3706 2C60                           l3642 2A24  
                         l3634 29F2                           l3626 29C8                           l3618 2992  
                         l3458 2952                           l3394 278C                           l3386 272A  
                         l3378 270C                           l3298 256A                           l3810 3B86  
                         l3802 3B62                           l3466 49CC                           l4098 1576  
                         l5082 331C                           l4194 3162                           l4186 3966  
                         l4178 38B8                           l4434 4424                           l4426 43CC  
                         l4354 41F4                           l4338 41A8                           l4450 43B0  
                         l4442 4346                           l4370 4516                           l4362 44FA  
                         l4610 369C                           l4602 3620                           l4274 4C18  
                         l4282 4A1E                           l4266 4C22                           l4532 2492  
                         l4524 23F0                           l4516 234E                           l4508 22AC  
                         l4380 4BF2                           l3580 3066                           l3572 3000  
                         l3564 2FCE                           l3556 2F96                           l3548 2F5A  
                         l3492 2E06                           l3484 2DDC                           l3476 2DAC  
                         l3732 2D82                           l3724 2D2E                           l3716 2CD2  
                         l3708 2C8E                           l3660 2AA6                           l3652 2A6E  
                         l3644 2A2A                           l3636 29F4                           l3628 29D8  
                         l3396 279C                           l3388 2730                           l3820 3BB2  
                         l3804 3B64                           l3900 351E                           l3468 49D8  
                         l4196 3170                           l4540 4772                           l4188 3982  
                         l4292 40EA                           l4436 4438                           l4428 43CE  
                         l4356 4202                           l4348 41C8                           l4452 43C8  
                         l4444 435A                           l4372 4522                           l4460 4480  
                         l4620 36DA                           l4612 36A8                           l4604 3652  
                         l4276 4C1C                           l4284 4A26                           l4268 4C26  
                         l4700 3AD4                           l4710 4B04                           l4526 2408  
                         l4518 2366                           l4534 24AA                           l4470 1FA0  
                         l4382 4C02                           l4550 4ACA                           l3590 30C8  
                         l3582 3072                           l3574 300E                           l3566 2FDC  
                         l3558 2FA8                           l3494 2E0C                           l3486 2DEC  
                         l3478 2DBA                           l3750 3FC8                           l3734 2D84  
                         l3726 2D48                           l3718 2CFC                           l3670 2AF0  
                         l3662 2ABE                           l3654 2A7A                           l3646 2A4A  
                         l3638 2A04                           l3398 27AC                           l3742 4942  
                         l3830 3BE2                           l3806 3B74                           l3902 3532  
                         l3910 48F2                           l5078 31D4                           l4198 317E  
                         l4390 4754                           l4542 477A                           l4294 40F0  
                         l4438 4450                           l4358 4206                           l4446 4372  
                         l4374 452E                           l4462 44AC                           l4622 36FE  
                         l4614 36B6                           l4606 3654                           l4286 4A4C  
                         l4278 4A12                           l4702 3AF0                           ?_pad 0011  
                         l4712 4B14                           l4528 2448                           l4480 207C  
                         l4472 1FDE                           l4552 4ACE                           l3592 30DE  
                         l3584 3080                           l3576 303C                           l3568 2FEE  
                         l3496 2E12                           l3488 2DEE                           l3760 4040  
                         l3752 3FD8                           l3728 2D64                           l3736 2D8A  
                         l3680 2B46                           l3672 2B00                           l3664 2ACA  
                         l3656 2A84                           l3648 2A5A                           l3744 4952  
                         l3832 3BF2                           l3816 3B9E                           l3808 3B78  
                         l3904 355A                           l3912 4906                           l3920 4926  
                         l3840 4568                           l4384 470A                           l4544 4782  
                         l4704 3EE2                           l4296 4108                           l4448 439C  
                         l4376 453E                           l4368 4502                           l4464 44C0  
                         l4456 4454                           l4624 370E                           l4616 36D4  
                         l4608 3660                           l4720 18B2                           l4560 4BD2  
                         l4288 4A4E                           l4640 4BC8                           l4632 4BAE  
                         l4714 4B1E                           l3770 3C82                           l4490 215E  
                         l4482 20BC                           l4474 201E                           l4554 4ADC  
                         l3594 30F8                           l3586 30AA                           l3498 2E20  
                         l3754 4006                           l3738 2D8E                           l3690 2BEA  
                         l3682 2B62                           l3674 2B0C                           l3666 2AD6  
                         l3658 2A9A                           l3834 3C02                           l3826 3BC6  
                         l3818 3BA8                           l3906 356A                           l3914 4912  
                         l3850 45BE                           l3842 4574                           l4386 4716  
                         l4546 479E                           l4538 4760                           l4706 3EEE  
                         l3930 45DC                           l3922 4B88                           l4298 4112  
                         l4466 4C40                           l4378 4542                           l4458 4468  
                         l4626 371C                           l4618 36D6                           l4730 19B4  
                         l4722 18FA                           l4394 4B36                           l4650 4A60  
                         l4570 4848                           l4562 47B2                           l4642 4BCA  
                         l4634 4BB2                           l4716 4B2E                           l3780 3D10  
                         l3772 3C92                           l3764 3C14                           l4492 2168  
                         l4484 20C6                           l4476 2028                           l4468 1F96  
                         l4556 4AE0                           l3596 3114                           l3588 30AE  
                         l3756 4016                           l3748 3F9A                           l3692 2BF8  
                         l3684 2B6E                           l3676 2B1C                           l3668 2AE4  
                         l3828 3BD2                           l3860 3DAC                           l3852 3D1A  
                         l3916 4916                           l3844 4588                           l4388 4734  
                         l4708 3F8C                           l3940 4612                           l3932 45EE  
                         l3924 4BA4                           l4628 371E                           l4740 1B10  
                         l4732 19DC                           l4724 191C                           l4396 4B40  
                         l4660 4A88                           l4652 4A70                           l4580 4852  
                         l4564 47F8                           l4644 4BCC                           l4636 4BBC  
                         l4900 387A                           l3782 3D16                           l3774 3CA0  
                         l3766 3C44                           l4494 2180                           l4486 20DE  
                         l4478 203C                           l4558 4AE8                           l3598 3118  
                         l3758 403A                           l3694 2C16                           l3686 2B8A  
                         l3678 2B36                           l3790 4AB8                           l3870 3E0E  
                         l3854 3D3A                           l3918 4922                           l3846 459C  
                         l3838 455A                           l3950 0E70                           l3942 4628  
                         l3934 45F6                           l4590 359C                           l4750 1CDE  
                         l4742 1B58                           l4734 1A24                           l4726 1926  
                         l4718 186A                           l4398 4B46                           l4662 4A8A  
                         l4654 4A7A                           l4646 4A52                           l4574 48A2  
                         l4582 4898                           l4670 42B4                           l4638 4BBE  
                         l4902 3880                           l3776 3CB2                           l3768 3C54  
                         l4496 21C0                           l4488 211E                           l3696 2C20  
                         l3688 2BB4                           l3856 3D78                           l3864 3DB8  
                         l3880 4666                           l3848 45A0                           l3960 0EBC  
                         l3952 0E76                           l3944 4630                           l3936 45FE  
                         l3928 45D4                           l4592 35E2                           l4760 1F46  
                         l4752 1D9C                           l4744 1B7C                           l4736 1A70  
                         l4728 196C                           l4664 4A8C                           l4656 4A84  
                         l4648 4A56                           l4576 48E8                           l4568 4802  
                         l4680 431C                           l4672 42C4                           l4840 3734  
                         l3778 3CC0                           l4498 2200                           l3698 2C2E  
                         l3786 4A92                           l3794 3B0E                           l3866 3DCA  
                         l3858 3DA0                           l3890 3402                           l3882 336A  
                         l3874 4988                           l3970 0EFA                           l3962 0EC6  
                         l3954 0E86                           l3946 4632                           l3938 460C  
                         l4762 4044                           l4594 35F8                           l4586 357E  
                         l4754 1E06                           l4746 1C4A                           l4738 1A9E  
                         l4666 4A8E                           l4658 4A86                           l4690 4336  
                         l4682 431E                           l4674 42EA                           l4850 374C  
                         l4842 3738                           l3788 4AA8                           l3796 3B24  
                         l3884 338A                           l3876 4998                           l3980 0F42  
                         l3972 0F02                           l3964 0ECE                           l3956 0E94  
                         l4668 4C08                           l3948 4638                           l4764 4054  
                         l4588 358E                           l4756 1EC4                           l4748 1C92  
                         l4692 4340                           l4684 4328                           l4676 42EE  
                         l4860 376A                           l4852 3752                           l4844 373C  
                         l3894 3472                           l3886 33E0                           l3878 4648  
                         l3982 0F48                           l3966 0EDE                           l3974 0F06  
                         l3958 0E98                           l4766 40A4                           l4598 360C  
                         l4758 1F2A                           l4694 3A08                           l4686 432A  
                         l4678 4312                           l4870 3786                           l4862 3772  
                         l4854 3756                           l4846 3740                           l4838 3730  
                         l3896 34AE                           l3888 33F4                           l3984 0F50  
                         l3976 0F2C                           l3992 0F92                           l3968 0EEE  
                         l4768 40AC                           l4696 3AA0                           l4688 4334  
                         l4880 37C0                           l4872 378E                           l4864 3776  
                         l4856 375A                           l4848 3740                           l3898 34E2  
                         l3994 0FB8                           l3986 0F68                           l3978 0F3E  
                         l4698 3AB8                           l4890 382A                           l4882 37F2  
                         l4874 3796                           l4866 377A                           l4858 3762  
                         l3996 0FCA                           l3988 0F72                           l4892 3836  
                         l4884 37F8                           l4876 379E                           l4868 377E  
                         l3998 0FCE                           l4894 3844                           l4886 37FE  
                         l4878 37AA                           l4896 385A                           l4888 3818  
                         l4898 3874                           STR_1 0E01                           STR_2 0E2B  
                         STR_3 0E6B                           STR_4 0E58                           STR_5 0E37  
                         STR_6 0E51                           STR_7 0E5E                           STR_8 0E4A  
                         STR_9 0E2C                           u3000 2FFC                           u3001 2FF8  
                         u3010 300E                           u3011 300A                           u3020 303C  
                         u3100 29A2                           u3021 3038                           u3101 299E  
                         u3030 3052                           u3110 29B2                           u3031 304E  
                         u3111 29AE                           u3040 3066                           u3200 2C60  
                         u3120 29F2                           u4000 182A                   _BAUD4CONbits 000EE9  
                         u3041 3062                           u3201 2C5C                           u3121 29EE  
                         u4001 1826                           u3050 3080                           u3210 2C8E  
                         u3130 2A04                           u4010 4B70                           u3051 307C  
                         u3211 2C8A                           u3131 2A00                           u4011 4B6C  
                         u3060 30C8                           u3300 403A                           u3220 2CA4  
                         u3140 2A14                           u2500 2548                           u2420 3E2A  
                         u4100 412A                           u4020 4B86                           u3061 30C4  
                         u3301 4036                           u3221 2CA0                           u3141 2A10  
                         u2501 2544                           u2421 3E26                           u4101 4126  
                         u4021 4B82                           u3310 3C44                           u3070 30F8  
                         u3230 2CB8                           u3150 2A4A                           u2510 255A  
                         u2430 3E3C                           u4030 38B8                           u4110 416C  
                         u3311 3C40                           u3071 30F4                           u3231 2CB4  
                         u3151 2A46                           u2511 2556                           u2431 3E38  
                         u4031 38B4                           u4111 4168                           u3320 3C82  
                         u4200 201E                           u3080 3126                           u3240 2CD2  
                         u3160 2A5A                           u2600 26A2                           u2520 256A  
                         u3400 3B9A                           u2440 3E64                           u4040 3982  
                         u4120 4184                           u3321 3C7E                           u4201 201A  
                         u3081 3122                           u3241 2CCE                           u3161 2A56  
                         u2601 269E                           u2521 2566                           u3401 3B96  
                         u2441 3E60                           u4041 397E                           u4121 4180  
                         u3330 3CA0                           u4210 207C                           u3250 2D1A  
                         u3170 2BD4                           u3090 2990                           u2610 26B0  
                         u2530 25A6                           u3410 3BC2                           u2450 3E9A  
                         u4050 3162                           u4130 42B2                           _T2PR 000FBC  
                         u3331 3C9C                           u4211 2078                           u3251 2D16  
                         u3091 298C                           u2611 26AC                           u2531 25A2  
                         u3411 3BBE                           u2451 3E96                           u4051 315E  
                         u4131 42AE                           u3340 3CC0                           u4300 2344  
                         u4220 20BC                           u3260 2D48                           u3180 2C2E  
                         u2700 280E                           u2620 26C0                           u2540 25B4  
                         u2460 24CE                           u3420 3BE2                           u4060 3212  
                         u4140 421C                           u3341 3CBC                           u4301 2340  
                         u4221 20B8                           u3261 2D44                           u3181 2C2A  
                         u2701 280A                           u2621 26BC                           u2541 25B0  
                         u2461 24CA                           u3421 3BDE                           u4061 320E  
                         u4141 4218                           u3350 3D10                           u4310 23A6  
                         u4230 211E                           u3270 2D82                           u3190 2C4E  
                         u2710 281E                           u2630 26F2                           u2550 2622  
                         u2470 24E0                           u3430 3BF2                           u3510 3E04  
                         u4150 4558                           u4070 4A3A                           u3351 3D0C  
                         u4311 23A2                           u4231 211A                           u3271 2D7E  
                         u3191 2C4A                           u3175 2BCA                           u2711 281A  
                         u2631 26EE                           u2551 261E                           u2471 24DC  
                         u3431 3BEE                           u3511 3DFE                           u4151 4554  
                         u4071 4A32                           u4320 23E6                           u4240 215E  
                         u4160 4C02                           u3280 3FC8                           u3360 4AA8  
                         u2800 2902                           u2720 283A                           u2640 2700  
                         u2560 263A                           u2480 24F0                           u3520 3E06  
                         u3600 3492                           u3440 4568                           u4400 3698  
                         u4321 23E2                           u4241 215A                           u4161 4BFE  
                         u3281 3FC4                           u3361 4AA4                           u2801 28FE  
                         u2721 2836                           u2641 26FC                           u2561 2634  
                         u2481 24EC                           u3505 3DDC                           u3441 4564  
                         u4401 3694                           u4330 2448                           u4250 21C0  
                         u3290 4006                           u2810 2912                           u2730 284A  
                         u2650 271E                           u2570 263C                           u2490 2532  
                         u3370 3B24                           u3610 34AE                           u3450 45BE  
                         u3530 49CA                           u4170 4754                           u4090 4108  
                         u4410 36B6                           u4331 2444                           u4251 21BC  
                         u3291 4002                           u2811 290E                           u2731 2846  
                         u2651 271A                           u2491 252E                           u3371 3B20  
                         u3611 34AA                           u3451 45BA                           u3531 49C6  
                         u4171 4750                           u4091 4104                           u4411 36B2  
                         u4340 2488                           u4260 2200                           u2900 2E32  
                         u2820 2932                           u2740 285C                           u2660 2756  
                         u2580 2664                           u3380 3B58                           u3460 3D5A  
                         u3620 3502                           u3540 4666                           u3700 0EDE  
                         u4420 36C6                           u4500 196C                           u4341 2484  
                         u4261 21FC                           u2901 2E2E                           u2821 292E  
                         u2741 2858                           u2661 2752                           u2581 2660  
                         u3605 3488                           u3541 4662                           u3701 0EDA  
                         u4421 36C2                           u4501 1968                           u4270 2262  
                         u4190 1FDE                           u4350 4B00                           u2910 2E42  
                         u2830 2944                           u2750 2872                           u2670 279C  
                         u2590 2682                           u3390 3B86                           u3470 3D78  
                         u3630 351E                           u3550 33B2                           u3710 0EEE  
                         u4430 36D4                           u4510 19B4                           u4271 225E  
                         u4191 1FDA                           u4351 4AFC                           u2911 2E3E  
                         u2831 2940                           u2751 286E                           u2671 2798  
                         u2591 267E                           u3391 3B82                           u3471 3D74  
                         u3631 351A                           u3711 0EEA                           u4431 36D0  
                         u4511 19B0                           u4280 22A2                           u2920 2E82  
                         u2840 2960                           u2760 2888                           u2680 27D2  
                         u3480 3DA0                           u3640 355A                           u3560 33E0  
                         u3800 11CC                           u3720 0F2C                           u4440 370E  
                         u4360 358E                           u4520 1A24                           u4088 4A3C  
                         u4281 229E                           u2921 2E7E                           u2841 295C  
                         u2761 2884                           u2681 27CE                           u3385 3B4E  
                         u3481 3D9C                           u3465 3D50                           u3641 3556  
                         u3625 34F8                           u3561 33DC                           u3801 11C8  
                         u3721 0F28                           u4441 370A                           u4361 358A  
                         u4521 1A20                           u4290 2304                           u2930 2EC2  
                         u2770 289C                           u2690 27E2                           u3490 3DCA  
                         u3570 3402                           u3650 4940                           u2850 4A0E  
                         u3810 1202                           u3730 0F3E                           u4450 371C  
                         u4370 359C                           u4530 1A70                           u4291 2300  
                         u2931 2EBE                           u2771 2898                           u2691 27DE  
                         u3491 3DC6                           u3571 33FE                           u3555 33A8  
                         u3651 493C                           u2851 4A0A                           u3811 11FE  
                         u3731 0F3A                           u4451 3718                           u4371 3598  
                         u4531 1A6C                           u4460 4B14                           u2940 2F38  
                         u2860 2DBA                           u2780 28B6                           u3900 1524  
                         u3820 121A                           u3740 0FB8                           u3660 45EE  
                         u4380 35F8                           u4540 1B10                           u4461 4B10  
                         u2941 2F34                           u2861 2DB6                           u2781 28B2  
                         u3901 1520                           u3821 1216                           u3741 0FB4  
                         u3661 45EA                           u4381 35F4                           u4541 1B0C  
                         u4470 4B2E                           u2950 2F5A                           u2870 2DCC  
                         u2790 28F0                           u3590 346E                           u3910 1572  
                         u3830 124C                           u3750 0FCA                           u3670 460C  
                         u4390 364E                           u4550 1B58                           u4471 4B2A  
                         u2951 2F56                           u2871 2DC8                           u2791 28EC  
                         u3591 346A                           u3911 156E                           u3831 1248  
                         u3751 0FC6                           u3671 4608                           u4391 364A  
                         u4551 1B54                           u2960 2F84                           u2880 2DDC  
                         u3920 1620                           u3840 125A                           u3760 1044  
                         u3680 4628                           u4560 1C92                           u4480 18B2  
                         u2961 2F80                           u2881 2DD8                           u3585 3416  
                         u3921 161C                           u3841 1256                           u3761 1040  
                         u3681 4624                           u4561 1C8E                           u4481 18AE  
                         u2970 2FA8                           u2890 2E20                           u3586 3420  
                         u3930 165C                           u3850 1284                           u3770 10D0  
                         u3690 0E94                           u4570 1CDE                           u4490 18FA  
                         u2971 2FA4                           u2891 2E1C                           u3587 3430  
                         u3931 1658                           u3851 1280                           u3771 10CC  
                         u3691 0E90                           u4571 1CDA                           u4491 18F6  
                         u2980 2FBE                           u3940 166A                           u3860 13CC  
                         u3780 1102                           u4580 1F46                           u4660 37F2  
                         u2981 2FBA                           u3941 1666                           u3861 13C8  
                         u3781 10FE                           u4581 1F42                           u4661 37EE  
                         u2990 2FDC                           u3950 16BE                           u3870 1432  
                         u3790 1140                           u4590 4054                           u4670 382A  
                         u2991 2FD8                           u3951 16BA                           u3871 142E  
                         u3791 113C                           u4591 4050                           u4671 3826  
                         u3960 1790                           u3880 147A                           u3961 178C  
                         u3881 1476                           u3970 17AC                           u3890 148A  
                         u3971 17A8                           u3891 1486                           u4907 4390  
                         u4827 380A                           u3980 1814                           u3981 180E  
                         u4917 43BA                           u4837 3866                           u3990 1816  
                         u4927 41F6                           u4847 4A66                           u4937 43EC  
                         u4857 4472                           u4947 4418                           u4867 449E  
                         u4957 4442                           u4877 44CA                           u4967 428C  
                         u4887 4534                           u4977 414E                           u4897 4364  
                         u4987 4AE2            reverseHalfSquare@mL 001B            reverseHalfSquare@mR 001D  
                         _dbuf 012C                           _labs 4648                           _main 3730  
                         _prec 00F2                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         _stop 40EA                     _ClickLEDOn 4B02                  ___fpclassifyf 3D1A  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 4802                   ___param_bank 000000  
                   _Hue2Colour 1F96                __end_of_Right45 43CC                          ??_pad 0017  
             __end_of_LED_init 4C16                  ___fltol@sign1 0009                          ?_labs 0001  
              __end_of___fladd 2974                          ?_main 0001                __end_of___fldiv 313A  
              __end_of___flneg 4ACA                          STR_10 0E41                          STR_11 0E63  
                        STR_14 0E67                __end_of___flmul 2DA0                __end_of___flsub 4988  
              __end_of___fltol 3C14                          ?_stop 0014                __end_of___lwdiv 4648  
                 vfpfcnvrt@fmt 00A8                          _TMR0H 000FD4                          _TMR0L 000FD3  
      __end_of_sendCharSerial4 4C08     __end_of_I2C_2_Master_Start 4C40     __end_of_I2C_2_Master_Write 4C22  
                        _flags 00F4                          _fputc 3E18                          _fputs 49CC  
            fullSpeedReverse@i 0019                          labs@a 0001                          pad@fp 0011  
                        _width 00F0                          _putch 4C52                          tablat 000FF5  
                        plusw2 000FDB                          status 000FD8                __end_of_sprintf 47B2  
               ?___fpclassifyf 0001           __end_of_Color2String 3F9A        __end_of_color_read_Blue 48F2  
        _I2C_2_Master_RepStart 4C22                ?_color_read_Red 0005                __initialization 46AE  
                 __end_of_labs 46AE                   __end_of_main 389C                   __end_of_stop 4188  
                       ??_labs 0005                         ??_main 00EA                         ??_stop 0018  
                __activetblptr 000003                      ??_RGB2Hue 0073                  ??_Orange_R135 0025  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                _colour_read_all 3A08                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88       __end_of_color_click_init 4A92  
                       _RX4PPS 000E15                         _TX4REG 000EE4                    ?_ClickLEDOn 0001  
             __end_of___xxtofl 3730                         _Left45 43CC                      ??_Right45 001E  
             _fullSpeedReverse 44DA                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00BF  
                       ___flge 3C14                         ___fleq 3F9A                      ??___fladd 0022  
                  ?_Hue2Colour 0071                         ___wmul 4B88                      ??___fldiv 003A  
                    ??___flneg 0005                  Orange_R135@mL 0021                      ??___flmul 0053  
                Orange_R135@mR 0023                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 0E70                      ??___lwdiv 000B                     _TimerReset 4C40  
                       _colorf 017C                         _floorf 336A                         _memcpy 48F2  
                       clear_0 46E6                         clear_1 46F2                         clear_2 46FE  
           fullSpeedReverse@mL 0014             fullSpeedReverse@mR 0016                         _motorL 019B  
                       _motorR 0192                         isa$std 000001                         pad@buf 0013  
                       _strcpy 4988                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                   __pdataCOMRAM 005F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 4760                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 42B4  
                   ___flge@ff1 0057                     ___flge@ff2 005B                ??___fpclassifyf 0005  
                 ___xxtofl@arg 0016                   ___xxtofl@exp 0015                   ___xxtofl@val 000C  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005            __end_of_Orange_R135 40EA  
                   __accesstop 0060        __end_of__initialization 4704       __end_of_color_read_Clear 48A2  
                   ___flneg@f1 0001       __end_of_color_read_Green 4852         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                      ?_LED_init 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 4C4A  
                __end_of_fputc 3EE2                  __end_of_fputs 4A10                  __end_of_putch 4C54  
                    RGB2Hue@cf 0071                    _ForwardFlag 005F        __end_of_colour_read_all 3B0E  
                      ??_fputc 0005                        ??_fputs 000E                        ??_putch 0001  
                   __pbssBANK0 00EC                     __pbssBANK1 0100                     __pbssBANK2 0200  
                   ??_LED_init 0001                        ?_Left45 001A              _color_writetoaddr 4BD0  
                 _T2CLKCONbits 000FBF                        ?___flge 0057                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001                        ?_efgtoa 0071  
                  ?_TimerReset 0001                        ?_floorf 004B                        ?_memcpy 0001  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                   _Color2String 3EE2  
                      _RGB2Hue 186A                      ?___xxtofl 000C                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                    _Orange_R135 4044                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 4BF0             _I2C_2_Master_Start 4C36                     _initUSART4 4BAE  
           _I2C_2_Master_Write 4C16                        _Right45 4344                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 24B4                        ___fldiv 2DA0                        ___flneg 4A92  
                      ___flmul 2974                        ___flsub 4942                        ___fltol 3B0E  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 45D4            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00B9                   __psmallconst 0E00                        __pcinit 46AE  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 3730  
                      __ptext1 4BAE                        __ptext2 42B4                        __ptext3 3A08  
                      __ptext4 47B2                        __ptext5 4802                        __ptext6 4852  
                      __ptext7 48A2                        __ptext8 4C22                        __ptext9 4A10  
                    _T2CONbits 000FBD               ?_colour_read_all 001A                     ??___xxtofl 0010  
               Color2String@cf 00E8       __end_of_fullSpeedReverse 455A                      _T2HLTbits 000FBE  
                      efgtoa@c 0077                        efgtoa@d 0085                        efgtoa@e 0089  
                      efgtoa@f 0073                        efgtoa@g 009E                        efgtoa@h 0093  
                      efgtoa@i 0091                        efgtoa@l 0097                        efgtoa@m 0087  
                      efgtoa@n 009C                        efgtoa@p 007C                        efgtoa@t 007E  
                      efgtoa@u 00A2                        efgtoa@w 008B                        _sprintf 4760  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 4704  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
                 ??_ClickLEDOn 0001              ?_color_click_init 0001                 __45drightdelay 00F9  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 336A                     efgtoa@mode 0083  
                   efgtoa@sign 009B              _reverseHalfSquare 4454                        postdec1 000FE5  
                      postdec2 000FDD                   ??_Hue2Colour 005F                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 00AE  
                   ??_vfprintf 005F             ?_reverseHalfSquare 001B                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 42B4                     ??_turnLeft 0018  
           setMotorPWM@negDuty 0013              __end_of_turnRight 421E                    ___fladd@grs 0029  
          ??_reverseHalfSquare 001F             __end_of_ClickLEDOn 4B36                  ___xxtofl@sign 0014  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
               _movementMemory 0100             __end_of_Hue2Colour 24B4                    ___flmul@grs 0061  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0005                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001      __end_of_reverseHalfSquare 44DA  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                 __end_of_Left45 4454  
                 _RGB2Hue$2940 0077                 __end_of___flge 3D1A                 __end_of___fleq 4044  
                  vfpfcnvrt@ap 00AA                    vfpfcnvrt@cp 00B7                    vfpfcnvrt@fp 00A6  
               __end_of___wmul 4BAE                  __pidataCOMRAM 4C54                 __end_of_efgtoa 186A  
               __end_of_floorf 357C                 __end_of_memcpy 4942                     floorf@F526 0128  
                    Right45@mL 001A                      Right45@mR 001C                 __end_of_strcpy 49CC  
                   RGB2Hue@max 007B                     RGB2Hue@min 007D            color_read_Clear@tmp 000A  
          start_initialization 46AE                    __end_of_pad 45D4                    __halfsquare 00F5  
        __end_of___fpclassifyf 3E18                       ??_Left45 001E            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 4344                    vfprintf@fmt 00BB                       ??___flge 006D  
                     ??___fleq 0009                       ??___wmul 0005                       ??_efgtoa 0078  
                 ??_TimerReset 0001                    __pdataBANK0 00F5                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 001E  
                    ___fladd@b 001A                ClickLEDOn@power 0001                      ___fldiv@a 0036  
                    ___fldiv@b 0032                       ?_RGB2Hue 0071                      ___flmul@a 004F  
                    ___flmul@b 004B                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 01A4                   ?_Orange_R135 0021  
           __end_of_TimerReset 4C4A                       ?_Right45 001A                    _efgtoa$2583 0080  
             ___lwdiv@dividend 0007                       ?___fladd 001A                       ?___fldiv 0032  
                     ?___flneg 0001                       ?___flmul 004B                       ?___flsub 002A  
                     ?___fltol 0001                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 4B60  
            _I2C_2_Master_Init 4B36              _I2C_2_Master_Read 4A10                  __45dleftdelay 00FB  
            _I2C_2_Master_Stop 4C2C              ?_fullSpeedReverse 0014             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00C1             ??_fullSpeedReverse 0018           Hue2Colour@colourname 0073  
            colour_read_all@cf 001A                   Hue2Colour@cf 0071              _sendStringSerial4 4ACA  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                     _LED_init 4C08             ?_sendStringSerial4 0002                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
                     Left45@mL 001A                       Left45@mR 001C              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 313A      __end_of_I2C_2_Master_Idle 4B88      __end_of_I2C_2_Master_Init 4B60  
    __end_of_I2C_2_Master_Read 4A52              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4C36  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
                    _turnRight 4188                     vfpfcnvrt@c 00B6                       __1square 00F7  
                    copy_data0 46C2      __end_of_sendStringSerial4 4B02  __end_of_I2C_2_Master_RepStart 4C2C  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 3A08                   ??_initUSART4 0001  
                     __Hrparam 0000                      memcpy@tmp 000B                     vfprintf@ap 00BD  
                     __Lrparam 0000                     vfprintf@fp 00B9                     ?_vfpfcnvrt 00A6  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00EC                     sprintf@fmt 00C3  
                     ___xxtofl 357C                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
              ___lwdiv@divisor 0009             __end_of_initUSART4 4BD0                ___lwdiv@counter 000D  
                   ?_turnRight 0014                       __ptext10 4A52                       __ptext11 4BD0  
                     __ptext20 4454                       __ptext12 4C16                       __ptext21 44DA  
                     __ptext13 4C2C                       __ptext30 45D4                       __ptext22 4C40  
                     __ptext14 4C36                       __ptext31 4C08                       __ptext23 4344  
                     __ptext15 4B60                       __ptext40 3E18                       __ptext32 3EE2  
                     __ptext24 4188                       __ptext16 4B36                       __ptext41 4C52  
                     __ptext33 4760                       __ptext25 43CC                       __ptext17 186A  
                     __ptext50 2974                       __ptext42 48F2                       __ptext34 470A  
                     __ptext26 421E                       __ptext18 357C                       __ptext51 3F9A  
                     __ptext43 4648                       __ptext35 313A                       __ptext27 40EA  
                     __ptext19 4044                       __ptext52 2DA0                       __ptext44 336A  
                     __ptext36 0E70                       __ptext28 389C                       __ptext53 4ACA  
                     __ptext45 3D1A                       __ptext37 4988                       __ptext29 4B88  
                     __ptext54 4BF0                       __ptext46 3B0E                       __ptext38 455A  
                     __ptext55 1F96                       __ptext47 4942                       __ptext39 49CC  
                     __ptext56 3C14                       __ptext48 24B4                       __ptext57 4B02  
                     __ptext49 4A92                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
              Color2String@buf 00E6               colour_read_all@B 0024               colour_read_all@C 0028  
             colour_read_all@G 0020               colour_read_all@R 001C                     turnRight@i 0018  
                     efgtoa@fp 0071                       efgtoa@ne 007A                       efgtoa@pp 0082  
                     efgtoa@ou 008D                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 470A                       main@data 01A4                       main@wall 01F4  
                     _turnLeft 421E                  ?_Color2String 00E6                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 389C                      sprintf@ap 00D9  
                    strcpy@src 0003                      turnLeft@i 0018              ??_colour_read_all 001C  
                  efgtoa@nmode 0084                    ??_vfpfcnvrt 00AC               _color_click_init 4A52  
               ??_Color2String 005F                       sprintf@f 00DB                       sprintf@s 00C1  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                    _timerMemory 0200  
                  ??_turnRight 0018                  ___fladd@signs 0026                     _TX4STAbits 000EE8  
              _sendCharSerial4 4BF0                   ___fladd@aexp 0027                   ___fladd@bexp 0028  
