

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 14:58:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88   000000                     
    89                           ; Generated 06/04/2022 GMT
    90                           ; 
    91                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18LF67K40 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123   000000                     
   124                           	psect	idataBANK0
   125   004A86                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _ForwardFlag
   129   004A86  01                 	db	1
   130                           
   131                           	psect	idataBANK1
   132   004A24                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for stoa@F1144
   136   004A24  28                 	db	40
   137   004A25  6E                 	db	110
   138   004A26  75                 	db	117
   139   004A27  6C                 	db	108
   140   004A28  6C                 	db	108
   141   004A29  29                 	db	41
   142   004A2A  00                 	db	0
   143                           
   144                           ;initializer for __recogniseColour
   145   004A2B  028A               	dw	650
   146                           
   147                           ;initializer for __halfsquare
   148   004A2D  015E               	dw	350
   149                           
   150                           ;initializer for __1square
   151   004A2F  02BC               	dw	700
   152                           
   153                           ;initializer for __45drightdelay
   154   004A31  009B               	dw	155
   155                           
   156                           ;initializer for __45dleftdelay
   157   004A33  0092               	dw	146
   158   000000                     _TX4REG	set	3812
   159   000000                     _RC4STAbits	set	3815
   160   000000                     _SP4BRGH	set	3814
   161   000000                     _LATFbits	set	3966
   162   000000                     _LATDbits	set	3964
   163   000000                     _LATGbits	set	3967
   164   000000                     _TRISEbits	set	3973
   165   000000                     _TRISFbits	set	3974
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _SSP2CON2bits	set	3802
   169   000000                     _RX4PPS	set	3605
   170   000000                     _SSP2CLKPPS	set	3612
   171   000000                     _SSP2DATPPS	set	3613
   172   000000                     _ANSELDbits	set	3751
   173   000000                     _SSP2ADD	set	3798
   174   000000                     _SSP2CON1bits	set	3801
   175   000000                     _RC4REG	set	3811
   176   000000                     _SP4BRGL	set	3813
   177   000000                     _TX4STAbits	set	3816
   178   000000                     _BAUD4CONbits	set	3817
   179   000000                     _SSP2CON2	set	3802
   180   000000                     _TRISDbits	set	3972
   181   000000                     _CCPR4H	set	3873
   182   000000                     _CCPR3H	set	3877
   183   000000                     _SSP2STAT	set	3800
   184   000000                     _ANSELFbits	set	3764
   185   000000                     _SSP2BUF	set	3797
   186   000000                     _PIE0bits	set	3625
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189   000000                     _RC7PPS	set	3689
   190   000000                     _RD5PPS	set	3695
   191   000000                     _RE2PPS	set	3700
   192   000000                     _RD6PPS	set	3696
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _CCP2CONbits	set	4007
   198   000000                     _LATAbits	set	3961
   199   000000                     _CCP3CONbits	set	3878
   200   000000                     _LATCbits	set	3963
   201   000000                     _LATEbits	set	3965
   202   000000                     _TRISCbits	set	3971
   203   000000                     _CCP4CONbits	set	3874
   204   000000                     _TRISHbits	set	3976
   205   000000                     _TRISGbits	set	3975
   206   000000                     _PORTFbits	set	3982
   207   000000                     _TRISAbits	set	3969
   208   000000                     _LATHbits	set	3968
   209   000000                     _RE4PPS	set	3702
   210   000000                     _RG6PPS	set	3720
   211   000000                     _TMR0L	set	4051
   212   000000                     _TMR0H	set	4052
   213   000000                     _T0CON0bits	set	4053
   214   000000                     _T0CON1bits	set	4054
   215   000000                     _T2CLKCONbits	set	4031
   216   000000                     _T2HLTbits	set	4030
   217   000000                     _INTCONbits	set	4082
   218   000000                     _PIE4bits	set	3629
   219   000000                     _PIR0bits	set	3635
   220                           
   221                           	psect	smallconst
   222   000E00                     __psmallconst:
   223                           	callstack 0
   224   000E00  00                 	db	0
   225   000E01                     STR_1:
   226                           
   227                           ; BSR set to: 14
   228   000E01  43                 	db	67	;'C'
   229   000E02  6F                 	db	111	;'o'
   230   000E03  6C                 	db	108	;'l'
   231   000E04  6F                 	db	111	;'o'
   232   000E05  75                 	db	117	;'u'
   233   000E06  72                 	db	114	;'r'
   234   000E07  20                 	db	32
   235   000E08  69                 	db	105	;'i'
   236   000E09  73                 	db	115	;'s'
   237   000E0A  20                 	db	32
   238   000E0B  25                 	db	37
   239   000E0C  73                 	db	115	;'s'
   240   000E0D  20                 	db	32
   241   000E0E  20                 	db	32
   242   000E0F  0D                 	db	13
   243   000E10  00                 	db	0
   244   000E11                     STR_9:
   245                           
   246                           ; BSR set to: 14
   247   000E11  4C                 	db	76	;'L'
   248   000E12  69                 	db	105	;'i'
   249   000E13  67                 	db	103	;'g'
   250   000E14  68                 	db	104	;'h'
   251   000E15  74                 	db	116	;'t'
   252   000E16  20                 	db	32
   253   000E17  42                 	db	66	;'B'
   254   000E18  6C                 	db	108	;'l'
   255   000E19  75                 	db	117	;'u'
   256   000E1A  65                 	db	101	;'e'
   257   000E1B  00                 	db	0
   258   000E1C                     STR_5:
   259                           
   260                           ; BSR set to: 14
   261   000E1C  44                 	db	68	;'D'
   262   000E1D  61                 	db	97	;'a'
   263   000E1E  72                 	db	114	;'r'
   264   000E1F  6B                 	db	107	;'k'
   265   000E20  20                 	db	32
   266   000E21  42                 	db	66	;'B'
   267   000E22  6C                 	db	108	;'l'
   268   000E23  75                 	db	117	;'u'
   269   000E24  65                 	db	101	;'e'
   270   000E25  00                 	db	0
   271   000E26                     STR_10:
   272                           
   273                           ; BSR set to: 14
   274   000E26  45                 	db	69	;'E'
   275   000E27  67                 	db	103	;'g'
   276   000E28  67                 	db	103	;'g'
   277   000E29  73                 	db	115	;'s'
   278   000E2A  68                 	db	104	;'h'
   279   000E2B  65                 	db	101	;'e'
   280   000E2C  6C                 	db	108	;'l'
   281   000E2D  6C                 	db	108	;'l'
   282   000E2E  00                 	db	0
   283   000E2F                     STR_8:
   284                           
   285                           ; BSR set to: 14
   286   000E2F  4F                 	db	79	;'O'
   287   000E30  72                 	db	114	;'r'
   288   000E31  61                 	db	97	;'a'
   289   000E32  6E                 	db	110	;'n'
   290   000E33  67                 	db	103	;'g'
   291   000E34  65                 	db	101	;'e'
   292   000E35  00                 	db	0
   293   000E36                     STR_6:
   294                           
   295                           ; BSR set to: 14
   296   000E36  59                 	db	89	;'Y'
   297   000E37  65                 	db	101	;'e'
   298   000E38  6C                 	db	108	;'l'
   299   000E39  6C                 	db	108	;'l'
   300   000E3A  6F                 	db	111	;'o'
   301   000E3B  77                 	db	119	;'w'
   302   000E3C  00                 	db	0
   303   000E3D                     STR_4:
   304                           
   305                           ; BSR set to: 14
   306   000E3D  47                 	db	71	;'G'
   307   000E3E  72                 	db	114	;'r'
   308   000E3F  65                 	db	101	;'e'
   309   000E40  65                 	db	101	;'e'
   310   000E41  6E                 	db	110	;'n'
   311   000E42  00                 	db	0
   312   000E43                     STR_7:
   313                           
   314                           ; BSR set to: 14
   315   000E43  50                 	db	80	;'P'
   316   000E44  69                 	db	105	;'i'
   317   000E45  6E                 	db	110	;'n'
   318   000E46  6B                 	db	107	;'k'
   319   000E47  00                 	db	0
   320   000E48                     STR_11:
   321                           
   322                           ; BSR set to: 14
   323   000E48  6C                 	db	108	;'l'
   324   000E49  6C                 	db	108	;'l'
   325   000E4A  73                 	db	115	;'s'
   326   000E4B  00                 	db	0
   327   000E4C                     STR_3:
   328                           
   329                           ; BSR set to: 14
   330   000E4C  52                 	db	82	;'R'
   331   000E4D  65                 	db	101	;'e'
   332   000E4E  64                 	db	100	;'d'
   333   000E4F  00                 	db	0
   334   000E50  00                 	db	0	; dummy byte at the end
   335   000000                     
   336                           ; #config settings
   337                           
   338                           	psect	cinit
   339   004462                     __pcinit:
   340                           	callstack 0
   341   004462                     start_initialization:
   342                           	callstack 0
   343   004462                     __initialization:
   344                           	callstack 0
   345                           
   346                           ; Initialize objects allocated to BANK1 (17 bytes)
   347                           ; load TBLPTR registers with __pidataBANK1
   348   004462  0E24               	movlw	low __pidataBANK1
   349   004464  6EF6               	movwf	tblptrl,c
   350   004466  0E4A               	movlw	high __pidataBANK1
   351   004468  6EF7               	movwf	tblptrh,c
   352   00446A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   353   00446C  6EF8               	movwf	tblptru,c
   354   00446E  EE01  F0AE         	lfsr	0,__pdataBANK1
   355   004472  EE10 F011          	lfsr	1,17
   356   004476                     copy_data0:
   357   004476  0009               	tblrd		*+
   358   004478  CFF5 FFEE          	movff	tablat,postinc0
   359   00447C  50E5               	movf	postdec1,w,c
   360   00447E  50E1               	movf	fsr1l,w,c
   361   004480  E1FA               	bnz	copy_data0
   362                           
   363                           ; Initialize objects allocated to BANK0 (1 bytes)
   364                           ; load TBLPTR registers with __pidataBANK0
   365   004482  0E86               	movlw	low __pidataBANK0
   366   004484  6EF6               	movwf	tblptrl,c
   367   004486  0E4A               	movlw	high __pidataBANK0
   368   004488  6EF7               	movwf	tblptrh,c
   369   00448A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   370   00448C  6EF8               	movwf	tblptru,c
   371   00448E  0009               	tblrd		*+	;fetch initializer
   372   004490  CFF5 F0FF          	movff	tablat,__pdataBANK0
   373                           
   374                           ; Clear objects allocated to BANK1 (174 bytes)
   375   004494  EE01  F000         	lfsr	0,__pbssBANK1
   376   004498  0EAE               	movlw	174
   377   00449A                     clear_0:
   378   00449A  6AEE               	clrf	postinc0,c
   379   00449C  06E8               	decf	wreg,f,c
   380   00449E  E1FD               	bnz	clear_0
   381                           
   382                           ; Clear objects allocated to BANK0 (29 bytes)
   383   0044A0  EE00  F0E2         	lfsr	0,__pbssBANK0
   384   0044A4  0E1D               	movlw	29
   385   0044A6                     clear_1:
   386   0044A6  6AEE               	clrf	postinc0,c
   387   0044A8  06E8               	decf	wreg,f,c
   388   0044AA  E1FD               	bnz	clear_1
   389   0044AC                     end_of_initialization:
   390                           	callstack 0
   391   0044AC                     __end_of__initialization:
   392                           	callstack 0
   393   0044AC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394   0044AE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395   0044B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   396   0044B2  6EF8               	movwf	tblptru,c
   397   0044B4  0100               	movlb	0
   398   0044B6  EFAE  F015         	goto	_main	;jump to C main() function
   399                           
   400                           	psect	bssBANK0
   401   0000E2                     __pbssBANK0:
   402                           	callstack 0
   403   0000E2                     _width:
   404                           	callstack 0
   405   0000E2                     	ds	2
   406   0000E4                     _prec:
   407                           	callstack 0
   408   0000E4                     	ds	2
   409   0000E6                     _retracingDone:
   410                           	callstack 0
   411   0000E6                     	ds	2
   412   0000E8                     _movementCount:
   413                           	callstack 0
   414   0000E8                     	ds	2
   415   0000EA                     _maxTime:
   416                           	callstack 0
   417   0000EA                     	ds	2
   418   0000EC                     _flags:
   419                           	callstack 0
   420   0000EC                     	ds	1
   421   0000ED                     _motorR:
   422                           	callstack 0
   423   0000ED                     	ds	9
   424   0000F6                     _motorL:
   425                           	callstack 0
   426   0000F6                     	ds	9
   427                           
   428                           	psect	dataBANK0
   429   0000FF                     __pdataBANK0:
   430                           	callstack 0
   431   0000FF                     _ForwardFlag:
   432                           	callstack 0
   433   0000FF                     	ds	1
   434                           
   435                           	psect	bssBANK1
   436   000100                     __pbssBANK1:
   437                           	callstack 0
   438   000100                     	ds	32
   439   000120                     _timerMemory:
   440                           	callstack 0
   441   000120                     	ds	80
   442   000170                     _movementMemory:
   443                           	callstack 0
   444   000170                     	ds	40
   445   000198                     _colorf:
   446                           	callstack 0
   447   000198                     	ds	22
   448                           
   449                           	psect	dataBANK1
   450   0001AE                     __pdataBANK1:
   451                           	callstack 0
   452   0001AE                     stoa@F1144:
   453                           	callstack 0
   454   0001AE                     	ds	7
   455   0001B5                     __recogniseColour:
   456                           	callstack 0
   457   0001B5                     	ds	2
   458   0001B7                     __halfsquare:
   459                           	callstack 0
   460   0001B7                     	ds	2
   461   0001B9                     __1square:
   462                           	callstack 0
   463   0001B9                     	ds	2
   464   0001BB                     __45drightdelay:
   465                           	callstack 0
   466   0001BB                     	ds	2
   467   0001BD                     __45dleftdelay:
   468                           	callstack 0
   469   0001BD                     	ds	2
   470                           
   471                           	psect	cstackBANK0
   472   000060                     __pcstackBANK0:
   473                           	callstack 0
   474   000060                     White@mL:
   475                           	callstack 0
   476   000060                     Color2String@colourname:
   477                           	callstack 0
   478   000060                     ___fldiv@rem:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x0
   482   000060                     	ds	2
   483   000062                     White@mR:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x2
   487   000062                     	ds	2
   488   000064                     ___fldiv@sign:
   489                           	callstack 0
   490   000064                     White@movementCount:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x4
   494   000064                     	ds	1
   495   000065                     ___fldiv@new_exp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x5
   499   000065                     	ds	1
   500   000066                     White@movementMemory:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504   000066                     	ds	1
   505   000067                     ___fldiv@grs:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x7
   509   000067                     	ds	1
   510   000068                     White@timerMemory:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x8
   514   000068                     	ds	2
   515   00006A                     White@tempTimer:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0xA
   519   00006A                     	ds	1
   520   00006B                     ___fldiv@bexp:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0xB
   524   00006B                     	ds	1
   525   00006C                     ___fldiv@aexp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0xC
   529   00006C                     	ds	1
   530   00006D                     RGB2Hue@cf:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xD
   534   00006D                     	ds	1
   535   00006E                     White@i:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0xE
   539   00006E                     	ds	1
   540   00006F                     ??_RGB2Hue:
   541                           
   542                           ; 1 bytes @ 0xF
   543   00006F                     	ds	4
   544   000073                     _RGB2Hue$3161:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x13
   548   000073                     	ds	4
   549   000077                     RGB2Hue@max:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x17
   553   000077                     	ds	2
   554   000079                     RGB2Hue@min:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x19
   558   000079                     	ds	2
   559   00007B                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x1B
   562   00007B                     	ds	2
   563   00007D                     main@data:
   564                           	callstack 0
   565                           
   566                           ; 100 bytes @ 0x1D
   567   00007D                     	ds	100
   568   0000E1                     main@wall:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x81
   572   0000E1                     	ds	1
   573                           
   574                           	psect	cstackCOMRAM
   575   000001                     __pcstackCOMRAM:
   576                           	callstack 0
   577   000001                     ??_I2C_2_Master_Idle:
   578   000001                     ?_strlen:
   579                           	callstack 0
   580   000001                     ?_strncmp:
   581                           	callstack 0
   582   000001                     ?___wmul:
   583                           	callstack 0
   584   000001                     ?___fltol:
   585                           	callstack 0
   586   000001                     sendCharSerial4@charToSend:
   587                           	callstack 0
   588   000001                     ClickLEDOn@power:
   589                           	callstack 0
   590   000001                     initDCmotorsPWM@PWMperiod:
   591                           	callstack 0
   592   000001                     memoryUpdateMovement@cf:
   593                           	callstack 0
   594   000001                     ___wmul@multiplier:
   595                           	callstack 0
   596   000001                     fputc@c:
   597                           	callstack 0
   598   000001                     strlen@s:
   599                           	callstack 0
   600   000001                     strncmp@_l:
   601                           	callstack 0
   602   000001                     ___fleq@ff1:
   603                           	callstack 0
   604   000001                     ___fltol@f1:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x0
   608   000001                     	ds	1
   609   000002                     ??_I2C_2_Master_Read:
   610   000002                     I2C_2_Master_Write@data_byte:
   611                           	callstack 0
   612   000002                     sendStringSerial4@string:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x1
   616   000002                     	ds	1
   617   000003                     I2C_2_Master_Read@ack:
   618                           	callstack 0
   619   000003                     color_writetoaddr@value:
   620                           	callstack 0
   621   000003                     memoryUpdateMovement@movementCount:
   622                           	callstack 0
   623   000003                     ___wmul@multiplicand:
   624                           	callstack 0
   625   000003                     fputc@fp:
   626                           	callstack 0
   627   000003                     strlen@a:
   628                           	callstack 0
   629   000003                     strncmp@_r:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2
   633   000003                     	ds	1
   634   000004                     I2C_2_Master_Read@tmp:
   635                           	callstack 0
   636   000004                     color_writetoaddr@address:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x3
   640   000004                     	ds	1
   641   000005                     ??_color_click_init:
   642   000005                     ??_fputc:
   643   000005                     ??___fltol:
   644   000005                     ?_color_read_Red:
   645                           	callstack 0
   646   000005                     ?_color_read_Green:
   647                           	callstack 0
   648   000005                     ?_color_read_Blue:
   649                           	callstack 0
   650   000005                     ?_color_read_Clear:
   651                           	callstack 0
   652   000005                     memoryUpdateMovement@movementMemory:
   653                           	callstack 0
   654   000005                     ___wmul@product:
   655                           	callstack 0
   656   000005                     strncmp@n:
   657                           	callstack 0
   658   000005                     ___fleq@ff2:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x4
   662   000005                     	ds	2
   663   000007                     ??_strncmp:
   664   000007                     ??_color_read_Red:
   665   000007                     ??_color_read_Green:
   666   000007                     ??_color_read_Blue:
   667   000007                     ??_color_read_Clear:
   668   000007                     ?___lwdiv:
   669                           	callstack 0
   670   000007                     memoryUpdateMovement@colourcode:
   671                           	callstack 0
   672   000007                     ___lwdiv@dividend:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676   000007                     	ds	1
   677   000008                     strncmp@l:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x7
   681   000008                     	ds	1
   682   000009                     ??___fleq:
   683   000009                     ___fltol@sign1:
   684                           	callstack 0
   685   000009                     ___lwdiv@divisor:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689   000009                     	ds	1
   690   00000A                     ___fltol@exp1:
   691                           	callstack 0
   692   00000A                     color_read_Red@tmp:
   693                           	callstack 0
   694   00000A                     color_read_Green@tmp:
   695                           	callstack 0
   696   00000A                     color_read_Blue@tmp:
   697                           	callstack 0
   698   00000A                     color_read_Clear@tmp:
   699                           	callstack 0
   700   00000A                     stoa@fp:
   701                           	callstack 0
   702   00000A                     strncmp@r:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x9
   706   00000A                     	ds	1
   707   00000B                     ___lwdiv@quotient:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xA
   711   00000B                     	ds	1
   712   00000C                     ?___xxtofl:
   713                           	callstack 0
   714   00000C                     stoa@s:
   715                           	callstack 0
   716   00000C                     ___xxtofl@val:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0xB
   720   00000C                     	ds	1
   721   00000D                     ___lwdiv@counter:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0xC
   725   00000D                     	ds	1
   726   00000E                     ??_stoa:
   727   00000E                     setMotorPWM@m:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xD
   731   00000E                     	ds	1
   732   00000F                     stoa@nuls:
   733                           	callstack 0
   734                           
   735                           ; 7 bytes @ 0xE
   736   00000F                     	ds	1
   737   000010                     ??_setMotorPWM:
   738   000010                     ??___xxtofl:
   739                           
   740                           ; 1 bytes @ 0xF
   741   000010                     	ds	2
   742   000012                     setMotorPWM@posDuty:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x11
   746   000012                     	ds	1
   747   000013                     setMotorPWM@negDuty:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x12
   751   000013                     	ds	1
   752   000014                     ___xxtofl@sign:
   753                           	callstack 0
   754   000014                     stop@mL:
   755                           	callstack 0
   756   000014                     turnLeft@mL:
   757                           	callstack 0
   758   000014                     turnRight@mL:
   759                           	callstack 0
   760   000014                     fullSpeedAhead@mL:
   761                           	callstack 0
   762   000014                     fullSpeedReverse@mL:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x13
   766   000014                     	ds	1
   767   000015                     ___xxtofl@exp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x14
   771   000015                     	ds	1
   772   000016                     stop@mR:
   773                           	callstack 0
   774   000016                     turnLeft@mR:
   775                           	callstack 0
   776   000016                     turnRight@mR:
   777                           	callstack 0
   778   000016                     fullSpeedAhead@mR:
   779                           	callstack 0
   780   000016                     fullSpeedReverse@mR:
   781                           	callstack 0
   782   000016                     stoa@w:
   783                           	callstack 0
   784   000016                     ___xxtofl@arg:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x15
   788   000016                     	ds	2
   789   000018                     ??_fullSpeedAhead:
   790   000018                     ??_stop:
   791   000018                     ??_fullSpeedReverse:
   792   000018                     turnLeft@i:
   793                           	callstack 0
   794   000018                     turnRight@i:
   795                           	callstack 0
   796   000018                     stoa@i:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x17
   800   000018                     	ds	1
   801   000019                     fullSpeedAhead@i:
   802                           	callstack 0
   803   000019                     fullSpeedReverse@i:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x18
   807   000019                     	ds	1
   808   00001A                     ?___flmul:
   809                           	callstack 0
   810   00001A                     Left45@mL:
   811                           	callstack 0
   812   00001A                     Right45@mL:
   813                           	callstack 0
   814   00001A                     colour_read_all@cf:
   815                           	callstack 0
   816   00001A                     stoa@cp:
   817                           	callstack 0
   818   00001A                     ___flmul@b:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x19
   822   00001A                     	ds	1
   823   00001B                     reverseHalfSquare@mL:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x1A
   827   00001B                     	ds	1
   828   00001C                     Left45@mR:
   829                           	callstack 0
   830   00001C                     Right45@mR:
   831                           	callstack 0
   832   00001C                     stoa@l:
   833                           	callstack 0
   834   00001C                     colour_read_all@R:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x1B
   838   00001C                     	ds	1
   839   00001D                     reverseHalfSquare@mR:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x1C
   843   00001D                     	ds	1
   844   00001E                     ??_Left45:
   845   00001E                     ??_Right45:
   846   00001E                     stoa@p:
   847                           	callstack 0
   848   00001E                     ___flmul@a:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x1D
   852   00001E                     	ds	1
   853   00001F                     ??_reverseHalfSquare:
   854                           
   855                           ; 1 bytes @ 0x1E
   856   00001F                     	ds	1
   857   000020                     rotate180left@mL:
   858                           	callstack 0
   859   000020                     vfpfcnvrt@fp:
   860                           	callstack 0
   861   000020                     colour_read_all@G:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x1F
   865   000020                     	ds	1
   866   000021                     Red_R90@mL:
   867                           	callstack 0
   868   000021                     Green_L90@mL:
   869                           	callstack 0
   870   000021                     Yellow_rev1_R90@mL:
   871                           	callstack 0
   872   000021                     Pink_rev1_L90@mL:
   873                           	callstack 0
   874   000021                     Orange_R135@mL:
   875                           	callstack 0
   876   000021                     LightBlue_L135@mL:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x20
   880   000021                     	ds	1
   881   000022                     ??___flmul:
   882   000022                     rotate180left@mR:
   883                           	callstack 0
   884   000022                     vfpfcnvrt@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	1
   889   000023                     Red_R90@mR:
   890                           	callstack 0
   891   000023                     Green_L90@mR:
   892                           	callstack 0
   893   000023                     Yellow_rev1_R90@mR:
   894                           	callstack 0
   895   000023                     Pink_rev1_L90@mR:
   896                           	callstack 0
   897   000023                     Orange_R135@mR:
   898                           	callstack 0
   899   000023                     LightBlue_L135@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x22
   903   000023                     	ds	1
   904   000024                     Blue_T180@mL:
   905                           	callstack 0
   906   000024                     vfpfcnvrt@ap:
   907                           	callstack 0
   908   000024                     colour_read_all@B:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x23
   912   000024                     	ds	1
   913   000025                     ??_Yellow_rev1_R90:
   914   000025                     ??_Pink_rev1_L90:
   915   000025                     
   916                           ; 1 bytes @ 0x24
   917   000025                     	ds	1
   918   000026                     ??_vfpfcnvrt:
   919   000026                     ___flmul@sign:
   920                           	callstack 0
   921   000026                     Blue_T180@mR:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x25
   925   000026                     	ds	1
   926   000027                     ___flmul@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x26
   930   000027                     	ds	1
   931   000028                     _vfpfcnvrt$2859:
   932                           	callstack 0
   933   000028                     colour_read_all@C:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x27
   937   000028                     	ds	2
   938   00002A                     ?_vfprintf:
   939                           	callstack 0
   940   00002A                     vfprintf@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x29
   944   00002A                     	ds	1
   945   00002B                     ___flmul@aexp:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x2A
   949   00002B                     	ds	1
   950   00002C                     ___flmul@bexp:
   951                           	callstack 0
   952   00002C                     vfprintf@fmt:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2B
   956   00002C                     	ds	1
   957   00002D                     ___flmul@prod:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x2C
   961   00002D                     	ds	1
   962   00002E                     vfprintf@ap:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x2D
   966   00002E                     	ds	2
   967   000030                     vfprintf@cfmt:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x2F
   971   000030                     	ds	1
   972   000031                     ___flmul@temp:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x30
   976   000031                     	ds	1
   977   000032                     ?_sprintf:
   978                           	callstack 0
   979   000032                     sprintf@s:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x31
   983   000032                     	ds	1
   984   000033                     ?_getTimerValue:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x32
   988   000033                     	ds	1
   989   000034                     sprintf@fmt:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x33
   993   000034                     	ds	3
   994   000037                     ??_getTimerValue:
   995                           
   996                           ; 1 bytes @ 0x36
   997   000037                     	ds	1
   998   000038                     sprintf@ap:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x37
  1002   000038                     	ds	1
  1003   000039                     getTimerValue@timerCount:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x38
  1007   000039                     	ds	1
  1008   00003A                     sprintf@f:
  1009                           	callstack 0
  1010                           
  1011                           ; 11 bytes @ 0x39
  1012   00003A                     	ds	1
  1013   00003B                     ?___fladd:
  1014                           	callstack 0
  1015   00003B                     ___fladd@b:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x3A
  1019   00003B                     	ds	4
  1020   00003F                     ___fladd@a:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x3E
  1024   00003F                     	ds	4
  1025   000043                     ??___fladd:
  1026                           
  1027                           ; 1 bytes @ 0x42
  1028   000043                     	ds	4
  1029   000047                     ___fladd@signs:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x46
  1033   000047                     	ds	1
  1034   000048                     ___fladd@aexp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x47
  1038   000048                     	ds	1
  1039   000049                     ___fladd@bexp:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x48
  1043   000049                     	ds	1
  1044   00004A                     ___fladd@grs:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x49
  1048   00004A                     	ds	1
  1049   00004B                     ?___flsub:
  1050                           	callstack 0
  1051   00004B                     memoryUpdateTime@movementCount:
  1052                           	callstack 0
  1053   00004B                     ___flge@ff1:
  1054                           	callstack 0
  1055   00004B                     ___flsub@b:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x4A
  1059   00004B                     	ds	2
  1060   00004D                     memoryUpdateTime@timerMemory:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4C
  1064   00004D                     	ds	2
  1065   00004F                     ___flge@ff2:
  1066                           	callstack 0
  1067   00004F                     ___flsub@a:
  1068                           	callstack 0
  1069   00004F                     _memoryUpdateTime$3162:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x4E
  1073   00004F                     	ds	4
  1074   000053                     ??___flge:
  1075   000053                     ?___fldiv:
  1076                           	callstack 0
  1077   000053                     memoryUpdateTime@timerVal:
  1078                           	callstack 0
  1079   000053                     ___fldiv@b:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x52
  1083   000053                     	ds	4
  1084   000057                     ??_White:
  1085   000057                     ?_Hue2Colour:
  1086                           	callstack 0
  1087   000057                     Hue2Colour@cf:
  1088                           	callstack 0
  1089   000057                     ___fldiv@a:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x56
  1093   000057                     	ds	2
  1094   000059                     Hue2Colour@colourname:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x58
  1098   000059                     	ds	2
  1099   00005B                     ??___fldiv:
  1100   00005B                     Color2String@buf:
  1101                           	callstack 0
  1102   00005B                     Colour2Action@cf:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x5A
  1106   00005B                     	ds	2
  1107   00005D                     Color2String@cf:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x5C
  1111   00005D                     	ds	2
  1112   00005F                     
  1113                           ; 1 bytes @ 0x5E
  1114 ;;
  1115 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1116 ;;
  1117 ;; *************** function _main *****************
  1118 ;; Defined at:
  1119 ;;		line 19 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  data          100   29[BANK0 ] unsigned char [100]
  1124 ;;  buf            20    0        unsigned char [20]
  1125 ;;  PWMcycle        2    0        unsigned int 
  1126 ;;  wall            1  129[BANK0 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1137 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1139 ;;      Totals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1140 ;;Total ram usage:      103 bytes
  1141 ;; Hardware stack levels required when called: 9
  1142 ;; This function calls:
  1143 ;;		_ClickLEDOn
  1144 ;;		_Color2String
  1145 ;;		_Colour2Action
  1146 ;;		_Hue2Colour
  1147 ;;		_I2C_2_Master_Init
  1148 ;;		_Interrupts_init
  1149 ;;		_LED_init
  1150 ;;		_RGB2Hue
  1151 ;;		_Timer0_init
  1152 ;;		_TimerReset
  1153 ;;		___flge
  1154 ;;		_color_click_init
  1155 ;;		_colour_read_all
  1156 ;;		_fullSpeedAhead
  1157 ;;		_initDCmotorsPWM
  1158 ;;		_initUSART4
  1159 ;;		_memoryUpdateMovement
  1160 ;;		_memoryUpdateTime
  1161 ;;		_stop
  1162 ;; This function is called by:
  1163 ;;		Startup code after reset
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text0
  1168   002B5C                     __ptext0:
  1169                           	callstack 0
  1170   002B5C                     _main:
  1171                           	callstack 22
  1172   002B5C                     
  1173                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1174   002B5C  ECE5  F024         	call	_initUSART4	;wreg free
  1175   002B60                     
  1176                           ;main.c: 23:     color_click_init();
  1177   002B60  EC0A  F024         	call	_color_click_init	;wreg free
  1178   002B64                     
  1179                           ;main.c: 24:     I2C_2_Master_Init();
  1180   002B64  EC97  F024         	call	_I2C_2_Master_Init	;wreg free
  1181   002B68                     
  1182                           ;main.c: 25:     LED_init();
  1183   002B68  EC1B  F025         	call	_LED_init	;wreg free
  1184   002B6C                     
  1185                           ;main.c: 26:     Interrupts_init();
  1186   002B6C  EC28  F025         	call	_Interrupts_init	;wreg free
  1187   002B70                     
  1188                           ;main.c: 27:     Timer0_init();
  1189   002B70  ECD3  F024         	call	_Timer0_init	;wreg free
  1190   002B74                     
  1191                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1192   002B74  0E00               	movlw	0
  1193   002B76  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1194   002B78  0E63               	movlw	99
  1195   002B7A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1196   002B7C  ECB5  F01F         	call	_initDCmotorsPWM	;wreg free
  1197   002B80                     
  1198                           ;main.c: 31:     motorL.power=0;
  1199   002B80  0E00               	movlw	0
  1200   002B82  0100               	movlb	0	; () banked
  1201   002B84  6FF6               	movwf	_motorL& (0+255),b
  1202   002B86                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 32:     motorL.direction=1;
  1205   002B86  0E01               	movlw	1
  1206   002B88  6FF7               	movwf	(_motorL+1)& (0+255),b
  1207   002B8A                     
  1208                           ; BSR set to: 0
  1209                           ;main.c: 33:     motorL.brakemode=1;
  1210   002B8A  0E01               	movlw	1
  1211   002B8C  6FF8               	movwf	(_motorL+2)& (0+255),b
  1212   002B8E                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1215   002B8E  0EAA               	movlw	170
  1216   002B90  6FFB               	movwf	(_motorL+5)& (0+255),b
  1217   002B92  0E0F               	movlw	15
  1218   002B94  6FFC               	movwf	(_motorL+6)& (0+255),b
  1219   002B96                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1222   002B96  0EA6               	movlw	166
  1223   002B98  6FFD               	movwf	(_motorL+7)& (0+255),b
  1224   002B9A  0E0F               	movlw	15
  1225   002B9C  6FFE               	movwf	(_motorL+8)& (0+255),b
  1226   002B9E                     
  1227                           ; BSR set to: 0
  1228                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1229   002B9E  0E00               	movlw	0
  1230   002BA0  6FFA               	movwf	(_motorL+4)& (0+255),b
  1231   002BA2  0E63               	movlw	99
  1232   002BA4  6FF9               	movwf	(_motorL+3)& (0+255),b
  1233   002BA6                     
  1234                           ; BSR set to: 0
  1235                           ;main.c: 38:     motorR.power=0;
  1236   002BA6  0E00               	movlw	0
  1237   002BA8  6FED               	movwf	_motorR& (0+255),b
  1238   002BAA                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 39:     motorR.direction=1;
  1241   002BAA  0E01               	movlw	1
  1242   002BAC  6FEE               	movwf	(_motorR+1)& (0+255),b
  1243   002BAE                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 40:     motorR.brakemode=1;
  1246   002BAE  0E01               	movlw	1
  1247   002BB0  6FEF               	movwf	(_motorR+2)& (0+255),b
  1248   002BB2                     
  1249                           ; BSR set to: 0
  1250                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1251   002BB2  0E25               	movlw	37
  1252   002BB4  6FF2               	movwf	(_motorR+5)& (0+255),b
  1253   002BB6  0E0F               	movlw	15
  1254   002BB8  6FF3               	movwf	(_motorR+6)& (0+255),b
  1255   002BBA                     
  1256                           ; BSR set to: 0
  1257                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1258   002BBA  0E21               	movlw	33
  1259   002BBC  6FF4               	movwf	(_motorR+7)& (0+255),b
  1260   002BBE  0E0F               	movlw	15
  1261   002BC0  6FF5               	movwf	(_motorR+8)& (0+255),b
  1262   002BC2                     
  1263                           ; BSR set to: 0
  1264                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1265   002BC2  0E00               	movlw	0
  1266   002BC4  6FF1               	movwf	(_motorR+4)& (0+255),b
  1267   002BC6  0E63               	movlw	99
  1268   002BC8  6FF0               	movwf	(_motorR+3)& (0+255),b
  1269   002BCA                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1272   002BCA  8486               	bsf	134,2,c	;volatile
  1273   002BCC                     
  1274                           ; BSR set to: 0
  1275                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1276   002BCC  010E               	movlb	14	; () banked
  1277   002BCE  95B4               	bcf	180,2,b	;volatile
  1278   002BD0                     l133:
  1279                           
  1280                           ;main.c: 47:     while(PORTFbits.RF2){
  1281   002BD0  B48E               	btfsc	142,2,c	;volatile
  1282   002BD2  EFED  F015         	goto	u4211
  1283   002BD6  EFEF  F015         	goto	u4210
  1284   002BDA                     u4211:
  1285   002BDA  EFE8  F015         	goto	l133
  1286   002BDE                     u4210:
  1287   002BDE                     
  1288                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1289   002BDE  0E29               	movlw	41
  1290   002BE0  0100               	movlb	0	; () banked
  1291   002BE2  6F7C               	movwf	(??_main+1)& (0+255),b
  1292   002BE4  0E96               	movlw	150
  1293   002BE6  6F7B               	movwf	??_main& (0+255),b
  1294   002BE8  0E7F               	movlw	127
  1295   002BEA                     u4287:
  1296   002BEA  2EE8               	decfsz	wreg,f,c
  1297   002BEC  D7FE               	bra	u4287
  1298   002BEE  2F7B               	decfsz	??_main& (0+255),f,b
  1299   002BF0  D7FC               	bra	u4287
  1300   002BF2  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1301   002BF4  D7FA               	bra	u4287
  1302   002BF6                     
  1303                           ;main.c: 50:     TimerReset();
  1304   002BF6  EC3D  F025         	call	_TimerReset	;wreg free
  1305   002BFA                     
  1306                           ;main.c: 51:     char wall=0;
  1307   002BFA  0E00               	movlw	0
  1308   002BFC  0100               	movlb	0	; () banked
  1309   002BFE  6FE1               	movwf	main@wall& (0+255),b
  1310   002C00                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 53:     ClickLEDOn(0);
  1313   002C00  0E00               	movlw	0
  1314   002C02  EC65  F024         	call	_ClickLEDOn
  1315                           
  1316                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1317   002C06  EFB1  F016         	goto	l4514
  1318   002C0A                     l4470:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1322   002C0A  0EF6               	movlw	low _motorL
  1323   002C0C  6E14               	movwf	fullSpeedAhead@mL^0,c
  1324   002C0E  0E00               	movlw	high _motorL
  1325   002C10  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1326   002C12  0EED               	movlw	low _motorR
  1327   002C14  6E16               	movwf	fullSpeedAhead@mR^0,c
  1328   002C16  0E00               	movlw	high _motorR
  1329   002C18  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1330   002C1A  ECCA  F020         	call	_fullSpeedAhead	;wreg free
  1331                           
  1332                           ;main.c: 59:         while (!wall){
  1333   002C1E  EF61  F016         	goto	l4488
  1334   002C22                     l4472:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 60:             colour_read_all(&colorf);
  1338   002C22  0E98               	movlw	low _colorf
  1339   002C24  6E1A               	movwf	colour_read_all@cf^0,c
  1340   002C26  0E01               	movlw	high _colorf
  1341   002C28  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1342   002C2A  EC84  F01A         	call	_colour_read_all	;wreg free
  1343   002C2E                     
  1344                           ;main.c: 61:             Color2String(data,&colorf);
  1345   002C2E  0E7D               	movlw	low main@data
  1346   002C30  6E5B               	movwf	Color2String@buf^0,c
  1347   002C32  0E00               	movlw	high main@data
  1348   002C34  6E5C               	movwf	(Color2String@buf+1)^0,c
  1349   002C36  0E98               	movlw	low _colorf
  1350   002C38  6E5D               	movwf	Color2String@cf^0,c
  1351   002C3A  0E01               	movlw	high _colorf
  1352   002C3C  6E5E               	movwf	(Color2String@cf+1)^0,c
  1353   002C3E  EC2A  F024         	call	_Color2String	;wreg free
  1354   002C42                     
  1355                           ;main.c: 64:              if (colorf.Cf<100)
  1356   002C42  C1A4  F04B         	movff	_colorf+12,___flge@ff1
  1357   002C46  C1A5  F04C         	movff	_colorf+13,___flge@ff1+1
  1358   002C4A  C1A6  F04D         	movff	_colorf+14,___flge@ff1+2
  1359   002C4E  C1A7  F04E         	movff	_colorf+15,___flge@ff1+3
  1360   002C52  0E00               	movlw	0
  1361   002C54  6E4F               	movwf	___flge@ff2^0,c
  1362   002C56  0E00               	movlw	0
  1363   002C58  6E50               	movwf	(___flge@ff2+1)^0,c
  1364   002C5A  0EC8               	movlw	200
  1365   002C5C  6E51               	movwf	(___flge@ff2+2)^0,c
  1366   002C5E  0E42               	movlw	66
  1367   002C60  6E52               	movwf	(___flge@ff2+3)^0,c
  1368   002C62  EC8A  F01B         	call	___flge	;wreg free
  1369   002C66  B0D8               	btfsc	status,0,c
  1370   002C68  EF38  F016         	goto	u4221
  1371   002C6C  EF3A  F016         	goto	u4220
  1372   002C70                     u4221:
  1373   002C70  EF61  F016         	goto	l4488
  1374   002C74                     u4220:
  1375   002C74                     
  1376                           ;main.c: 65:              {;main.c: 72:             memoryUpdateTime(movementCount,timer
      +                          Memory);
  1377   002C74  C0E8  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1378   002C78  C0E9  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1379   002C7C  0E20               	movlw	low _timerMemory
  1380   002C7E  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1381   002C80  0E01               	movlw	high _timerMemory
  1382   002C82  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1383   002C84  ECD4  F01E         	call	_memoryUpdateTime	;wreg free
  1384   002C88                     
  1385                           ;main.c: 74:             wall=1;
  1386   002C88  0E01               	movlw	1
  1387   002C8A  0100               	movlb	0	; () banked
  1388   002C8C  6FE1               	movwf	main@wall& (0+255),b
  1389   002C8E                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 75:             ClickLEDOn(1);
  1392   002C8E  0E01               	movlw	1
  1393   002C90  EC65  F024         	call	_ClickLEDOn
  1394   002C94                     
  1395                           ;main.c: 76:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1396   002C94  0EA3               	movlw	163
  1397   002C96  0100               	movlb	0	; () banked
  1398   002C98  6F7C               	movwf	(??_main+1)& (0+255),b
  1399   002C9A  0E57               	movlw	87
  1400   002C9C  6F7B               	movwf	??_main& (0+255),b
  1401   002C9E  0E02               	movlw	2
  1402   002CA0                     u4297:
  1403   002CA0  2EE8               	decfsz	wreg,f,c
  1404   002CA2  D7FE               	bra	u4297
  1405   002CA4  2F7B               	decfsz	??_main& (0+255),f,b
  1406   002CA6  D7FC               	bra	u4297
  1407   002CA8  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1408   002CAA  D7FA               	bra	u4297
  1409   002CAC  F000               	nop	
  1410   002CAE                     
  1411                           ;main.c: 77:             stop(&motorL,&motorR);
  1412   002CAE  0EF6               	movlw	low _motorL
  1413   002CB0  6E14               	movwf	stop@mL^0,c
  1414   002CB2  0E00               	movlw	high _motorL
  1415   002CB4  6E15               	movwf	(stop@mL+1)^0,c
  1416   002CB6  0EED               	movlw	low _motorR
  1417   002CB8  6E16               	movwf	stop@mR^0,c
  1418   002CBA  0E00               	movlw	high _motorR
  1419   002CBC  6E17               	movwf	(stop@mR+1)^0,c
  1420   002CBE  ECDD  F01D         	call	_stop	;wreg free
  1421   002CC2                     l4488:
  1422                           
  1423                           ;main.c: 59:         while (!wall){
  1424   002CC2  0100               	movlb	0	; () banked
  1425   002CC4  51E1               	movf	main@wall& (0+255),w,b
  1426   002CC6  B4D8               	btfsc	status,2,c
  1427   002CC8  EF68  F016         	goto	u4231
  1428   002CCC  EF6A  F016         	goto	u4230
  1429   002CD0                     u4231:
  1430   002CD0  EF11  F016         	goto	l4472
  1431   002CD4                     u4230:
  1432   002CD4                     
  1433                           ; BSR set to: 0
  1434                           ;main.c: 80:         colour_read_all(&colorf);
  1435   002CD4  0E98               	movlw	low _colorf
  1436   002CD6  6E1A               	movwf	colour_read_all@cf^0,c
  1437   002CD8  0E01               	movlw	high _colorf
  1438   002CDA  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1439   002CDC  EC84  F01A         	call	_colour_read_all	;wreg free
  1440   002CE0                     
  1441                           ;main.c: 81:         wall=0;
  1442   002CE0  0E00               	movlw	0
  1443   002CE2  0100               	movlb	0	; () banked
  1444   002CE4  6FE1               	movwf	main@wall& (0+255),b
  1445   002CE6                     
  1446                           ; BSR set to: 0
  1447                           ;main.c: 82:         ClickLEDOn(0);
  1448   002CE6  0E00               	movlw	0
  1449   002CE8  EC65  F024         	call	_ClickLEDOn
  1450   002CEC                     
  1451                           ;main.c: 83:         RGB2Hue(&colorf);
  1452   002CEC  0E98               	movlw	low _colorf
  1453   002CEE  0100               	movlb	0	; () banked
  1454   002CF0  6F6D               	movwf	RGB2Hue@cf& (0+255),b
  1455   002CF2  0E01               	movlw	high _colorf
  1456   002CF4  6F6E               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1457   002CF6  EC29  F007         	call	_RGB2Hue	;wreg free
  1458   002CFA                     
  1459                           ;main.c: 84:         Hue2Colour(&colorf);
  1460   002CFA  0E98               	movlw	low _colorf
  1461   002CFC  6E57               	movwf	Hue2Colour@cf^0,c
  1462   002CFE  0E01               	movlw	high _colorf
  1463   002D00  6E58               	movwf	(Hue2Colour@cf+1)^0,c
  1464   002D02  ECBF  F00A         	call	_Hue2Colour	;wreg free
  1465   002D06                     
  1466                           ;main.c: 85:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1467   002D06  0E98               	movlw	low _colorf
  1468   002D08  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1469   002D0A  0E01               	movlw	high _colorf
  1470   002D0C  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1471   002D0E  C0E8  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1472   002D12  C0E9  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1473   002D16  0E70               	movlw	low _movementMemory
  1474   002D18  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1475   002D1A  0E01               	movlw	high _movementMemory
  1476   002D1C  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1477   002D1E  EC7F  F024         	call	_memoryUpdateMovement	;wreg free
  1478   002D22                     
  1479                           ;main.c: 86:         Colour2Action(&colorf);
  1480   002D22  0E98               	movlw	low _colorf
  1481   002D24  6E5B               	movwf	Colour2Action@cf^0,c
  1482   002D26  0E01               	movlw	high _colorf
  1483   002D28  6E5C               	movwf	(Colour2Action@cf+1)^0,c
  1484   002D2A  ECBD  F016         	call	_Colour2Action	;wreg free
  1485   002D2E                     
  1486                           ;main.c: 87:         if (colorf.colourindex == 7)
  1487   002D2E  0E07               	movlw	7
  1488   002D30  0101               	movlb	1	; () banked
  1489   002D32  19AC               	xorwf	(_colorf+20)& (0+255),w,b
  1490   002D34  11AD               	iorwf	(_colorf+21)& (0+255),w,b
  1491   002D36  A4D8               	btfss	status,2,c
  1492   002D38  EFA0  F016         	goto	u4241
  1493   002D3C  EFA2  F016         	goto	u4240
  1494   002D40                     u4241:
  1495   002D40  EFAC  F016         	goto	l4510
  1496   002D44                     u4240:
  1497   002D44                     l4508:
  1498   002D44  0100               	movlb	0	; () banked
  1499   002D46  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1500   002D48  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1501   002D4A  B4D8               	btfsc	status,2,c
  1502   002D4C  EFAA  F016         	goto	u4251
  1503   002D50  EFAC  F016         	goto	u4250
  1504   002D54                     u4251:
  1505   002D54  EFA2  F016         	goto	l4508
  1506   002D58                     u4250:
  1507   002D58                     l4510:
  1508                           
  1509                           ;main.c: 91:         TimerReset();
  1510   002D58  EC3D  F025         	call	_TimerReset	;wreg free
  1511   002D5C                     
  1512                           ;main.c: 92:         movementCount++;
  1513   002D5C  0100               	movlb	0	; () banked
  1514   002D5E  4BE8               	infsnz	_movementCount& (0+255),f,b	;volatile
  1515   002D60  2BE9               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1516   002D62                     l4514:
  1517                           
  1518                           ;main.c: 56:     while (!retracingDone){
  1519   002D62  0100               	movlb	0	; () banked
  1520   002D64  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1521   002D66  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1522   002D68  B4D8               	btfsc	status,2,c
  1523   002D6A  EFB9  F016         	goto	u4261
  1524   002D6E  EFBB  F016         	goto	u4260
  1525   002D72                     u4261:
  1526   002D72  EF05  F016         	goto	l4470
  1527   002D76                     u4260:
  1528   002D76                     
  1529                           ; BSR set to: 0
  1530   002D76  EF16  F000         	goto	start
  1531   002D7A                     __end_of_main:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _memoryUpdateTime *****************
  1535 ;; Defined at:
  1536 ;;		line 16 in file "memory.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  movementCoun    2   74[COMRAM] volatile unsigned int 
  1539 ;;  timerMemory     2   76[COMRAM] PTR volatile float 
  1540 ;;		 -> timerMemory(80), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  timerVal        4   82[COMRAM] float 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:       12 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 3
  1559 ;; This function calls:
  1560 ;;		___fladd
  1561 ;;		_getTimerValue
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text1
  1568   003DA8                     __ptext1:
  1569                           	callstack 0
  1570   003DA8                     _memoryUpdateTime:
  1571                           	callstack 27
  1572   003DA8                     
  1573                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1574   003DA8  0E00               	movlw	0
  1575   003DAA  6E3F               	movwf	___fladd@a^0,c
  1576   003DAC  0E00               	movlw	0
  1577   003DAE  6E40               	movwf	(___fladd@a+1)^0,c
  1578   003DB0  0EAF               	movlw	175
  1579   003DB2  6E41               	movwf	(___fladd@a+2)^0,c
  1580   003DB4  0EC3               	movlw	195
  1581   003DB6  6E42               	movwf	(___fladd@a+3)^0,c
  1582   003DB8  EC00  F022         	call	_getTimerValue	;wreg free
  1583   003DBC  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1584   003DC0  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1585   003DC4  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1586   003DC8  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1587   003DCC  EC36  F00D         	call	___fladd	;wreg free
  1588   003DD0  C03B  F04F         	movff	?___fladd,_memoryUpdateTime$3162
  1589   003DD4  C03C  F050         	movff	?___fladd+1,_memoryUpdateTime$3162+1
  1590   003DD8  C03D  F051         	movff	?___fladd+2,_memoryUpdateTime$3162+2
  1591   003DDC  C03E  F052         	movff	?___fladd+3,_memoryUpdateTime$3162+3
  1592   003DE0                     
  1593                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1594   003DE0  C04F  F03B         	movff	_memoryUpdateTime$3162,___fladd@b
  1595   003DE4  C050  F03C         	movff	_memoryUpdateTime$3162+1,___fladd@b+1
  1596   003DE8  C051  F03D         	movff	_memoryUpdateTime$3162+2,___fladd@b+2
  1597   003DEC  C052  F03E         	movff	_memoryUpdateTime$3162+3,___fladd@b+3
  1598   003DF0  0E00               	movlw	0
  1599   003DF2  6E3F               	movwf	___fladd@a^0,c
  1600   003DF4  0E80               	movlw	128
  1601   003DF6  6E40               	movwf	(___fladd@a+1)^0,c
  1602   003DF8  0E22               	movlw	34
  1603   003DFA  6E41               	movwf	(___fladd@a+2)^0,c
  1604   003DFC  0EC4               	movlw	196
  1605   003DFE  6E42               	movwf	(___fladd@a+3)^0,c
  1606   003E00  EC36  F00D         	call	___fladd	;wreg free
  1607   003E04  C03B  F053         	movff	?___fladd,memoryUpdateTime@timerVal
  1608   003E08  C03C  F054         	movff	?___fladd+1,memoryUpdateTime@timerVal+1
  1609   003E0C  C03D  F055         	movff	?___fladd+2,memoryUpdateTime@timerVal+2
  1610   003E10  C03E  F056         	movff	?___fladd+3,memoryUpdateTime@timerVal+3
  1611   003E14                     
  1612                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1613   003E14  90D8               	bcf	status,0,c
  1614   003E16  344B               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1615   003E18  6ED9               	movwf	fsr2l,c
  1616   003E1A  344C               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1617   003E1C  6EDA               	movwf	fsr2h,c
  1618   003E1E  90D8               	bcf	status,0,c
  1619   003E20  36D9               	rlcf	fsr2l,f,c
  1620   003E22  36DA               	rlcf	fsr2h,f,c
  1621   003E24  504D               	movf	memoryUpdateTime@timerMemory^0,w,c
  1622   003E26  26D9               	addwf	fsr2l,f,c
  1623   003E28  504E               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1624   003E2A  22DA               	addwfc	fsr2h,f,c
  1625   003E2C  C053  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1626   003E30  C054  FFDE         	movff	memoryUpdateTime@timerVal+1,postinc2
  1627   003E34  C055  FFDE         	movff	memoryUpdateTime@timerVal+2,postinc2
  1628   003E38  C056  FFDE         	movff	memoryUpdateTime@timerVal+3,postinc2
  1629   003E3C  0012               	return		;funcret
  1630   003E3E                     __end_of_memoryUpdateTime:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _memoryUpdateMovement *****************
  1634 ;; Defined at:
  1635 ;;		line 10 in file "memory.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  cf              2    0[COMRAM] PTR struct RGBC_rel
  1638 ;;		 -> colorf(22), 
  1639 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1640 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1641 ;;		 -> movementMemory(40), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  colourcode      2    6[COMRAM] int 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:        8 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text2
  1668   0048FE                     __ptext2:
  1669                           	callstack 0
  1670   0048FE                     _memoryUpdateMovement:
  1671                           	callstack 29
  1672   0048FE                     
  1673                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC_rel *cf, volatile unsigned int move
      +                          mentCount, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int 
      +                          colourcode = cf->colourindex;
  1674   0048FE  EE20 F014          	lfsr	2,20
  1675   004902  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1676   004904  26D9               	addwf	fsr2l,f,c
  1677   004906  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1678   004908  22DA               	addwfc	fsr2h,f,c
  1679   00490A  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1680   00490E  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1681                           
  1682                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1683   004912  90D8               	bcf	status,0,c
  1684   004914  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1685   004916  6ED9               	movwf	fsr2l,c
  1686   004918  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1687   00491A  6EDA               	movwf	fsr2h,c
  1688   00491C  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1689   00491E  26D9               	addwf	fsr2l,f,c
  1690   004920  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1691   004922  22DA               	addwfc	fsr2h,f,c
  1692   004924  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1693   004928  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1694   00492C  0012               	return		;funcret
  1695   00492E                     __end_of_memoryUpdateMovement:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _initUSART4 *****************
  1699 ;; Defined at:
  1700 ;;		line 7 in file "serial.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text3
  1729   0049CA                     __ptext3:
  1730                           	callstack 0
  1731   0049CA                     _initUSART4:
  1732                           	callstack 29
  1733   0049CA                     
  1734                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1735   0049CA  8883               	bsf	131,4,c	;volatile
  1736                           
  1737                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1738   0049CC  8283               	bsf	131,1,c	;volatile
  1739   0049CE                     
  1740                           ;serial.c: 10:     RC0PPS = 0x12;
  1741   0049CE  0E12               	movlw	18
  1742   0049D0  010E               	movlb	14	; () banked
  1743   0049D2  6F62               	movwf	98,b	;volatile
  1744                           
  1745                           ;serial.c: 11:     RX4PPS = 0x11;
  1746   0049D4  0E11               	movlw	17
  1747   0049D6  6F15               	movwf	21,b	;volatile
  1748   0049D8                     
  1749                           ; BSR set to: 14
  1750                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1751   0049D8  97E9               	bcf	233,3,b	;volatile
  1752   0049DA                     
  1753                           ; BSR set to: 14
  1754                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1755   0049DA  95E8               	bcf	232,2,b	;volatile
  1756                           
  1757                           ;serial.c: 15:     SP4BRGL = 51;
  1758   0049DC  0E33               	movlw	51
  1759   0049DE  6FE5               	movwf	229,b	;volatile
  1760                           
  1761                           ;serial.c: 16:     SP4BRGH = 0;
  1762   0049E0  0E00               	movlw	0
  1763   0049E2  6FE6               	movwf	230,b	;volatile
  1764   0049E4                     
  1765                           ; BSR set to: 14
  1766                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1767   0049E4  89E7               	bsf	231,4,b	;volatile
  1768   0049E6                     
  1769                           ; BSR set to: 14
  1770                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1771   0049E6  8BE8               	bsf	232,5,b	;volatile
  1772   0049E8                     
  1773                           ; BSR set to: 14
  1774                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1775   0049E8  8FE7               	bsf	231,7,b	;volatile
  1776   0049EA                     
  1777                           ; BSR set to: 14
  1778   0049EA  0012               	return		;funcret
  1779   0049EC                     __end_of_initUSART4:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _initDCmotorsPWM *****************
  1783 ;; Defined at:
  1784 ;;		line 11 in file "dc_motor.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;Total ram usage:        2 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813   003F6A                     __ptext4:
  1814                           	callstack 0
  1815   003F6A                     _initDCmotorsPWM:
  1816                           	callstack 29
  1817   003F6A                     
  1818                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1819   003F6A  9485               	bcf	133,2,c	;volatile
  1820                           
  1821                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1822   003F6C  9E83               	bcf	131,7,c	;volatile
  1823                           
  1824                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1825   003F6E  9885               	bcf	133,4,c	;volatile
  1826                           
  1827                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1828   003F70  9C87               	bcf	135,6,c	;volatile
  1829                           
  1830                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1831   003F72  947D               	bcf	125,2,c	;volatile
  1832                           
  1833                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1834   003F74  9E7B               	bcf	123,7,c	;volatile
  1835                           
  1836                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1837   003F76  987D               	bcf	125,4,c	;volatile
  1838                           
  1839                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1840   003F78  9C7F               	bcf	127,6,c	;volatile
  1841   003F7A                     
  1842                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1843   003F7A  0E05               	movlw	5
  1844   003F7C  010E               	movlb	14	; () banked
  1845   003F7E  6F74               	movwf	116,b	;volatile
  1846                           
  1847                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1848   003F80  0E06               	movlw	6
  1849   003F82  6F76               	movwf	118,b	;volatile
  1850                           
  1851                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1852   003F84  0E07               	movlw	7
  1853   003F86  6F69               	movwf	105,b	;volatile
  1854                           
  1855                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1856   003F88  0E08               	movlw	8
  1857   003F8A  6F88               	movwf	136,b	;volatile
  1858                           
  1859                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1860   003F8C  50BD               	movf	189,w,c	;volatile
  1861   003F8E  0B8F               	andlw	-113
  1862   003F90  0940               	iorlw	64
  1863   003F92  6EBD               	movwf	189,c	;volatile
  1864                           
  1865                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1866   003F94  0EE0               	movlw	-32
  1867   003F96  16BE               	andwf	190,f,c	;volatile
  1868                           
  1869                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1870   003F98  50BF               	movf	191,w,c	;volatile
  1871   003F9A  0BF0               	andlw	-16
  1872   003F9C  0901               	iorlw	1
  1873   003F9E  6EBF               	movwf	191,c	;volatile
  1874   003FA0                     
  1875                           ; BSR set to: 14
  1876                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1877   003FA0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1878   003FA4                     
  1879                           ; BSR set to: 14
  1880                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1881   003FA4  8EBD               	bsf	189,7,c	;volatile
  1882                           
  1883                           ;dc_motor.c: 40:     CCPR1H=0;
  1884   003FA6  0E00               	movlw	0
  1885   003FA8  6EAA               	movwf	170,c	;volatile
  1886                           
  1887                           ;dc_motor.c: 41:     CCPR2H=0;
  1888   003FAA  0E00               	movlw	0
  1889   003FAC  6EA6               	movwf	166,c	;volatile
  1890                           
  1891                           ;dc_motor.c: 42:     CCPR3H=0;
  1892   003FAE  0E00               	movlw	0
  1893   003FB0  010F               	movlb	15	; () banked
  1894   003FB2  6F25               	movwf	37,b	;volatile
  1895                           
  1896                           ;dc_motor.c: 43:     CCPR4H=0;
  1897   003FB4  0E00               	movlw	0
  1898   003FB6  6F21               	movwf	33,b	;volatile
  1899                           
  1900                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1901   003FB8  0EFC               	movlw	-4
  1902   003FBA  16AD               	andwf	173,f,c	;volatile
  1903                           
  1904                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1905   003FBC  0EF3               	movlw	-13
  1906   003FBE  16AD               	andwf	173,f,c	;volatile
  1907                           
  1908                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1909   003FC0  0ECF               	movlw	-49
  1910   003FC2  16AD               	andwf	173,f,c	;volatile
  1911                           
  1912                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1913   003FC4  0E3F               	movlw	-193
  1914   003FC6  16AD               	andwf	173,f,c	;volatile
  1915   003FC8                     
  1916                           ; BSR set to: 15
  1917                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1918   003FC8  88AB               	bsf	171,4,c	;volatile
  1919                           
  1920                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1921   003FCA  50AB               	movf	171,w,c	;volatile
  1922   003FCC  0BF0               	andlw	-16
  1923   003FCE  090C               	iorlw	12
  1924   003FD0  6EAB               	movwf	171,c	;volatile
  1925   003FD2                     
  1926                           ; BSR set to: 15
  1927                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1928   003FD2  8EAB               	bsf	171,7,c	;volatile
  1929   003FD4                     
  1930                           ; BSR set to: 15
  1931                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1932   003FD4  88A7               	bsf	167,4,c	;volatile
  1933                           
  1934                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1935   003FD6  50A7               	movf	167,w,c	;volatile
  1936   003FD8  0BF0               	andlw	-16
  1937   003FDA  090C               	iorlw	12
  1938   003FDC  6EA7               	movwf	167,c	;volatile
  1939   003FDE                     
  1940                           ; BSR set to: 15
  1941                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1942   003FDE  8EA7               	bsf	167,7,c	;volatile
  1943   003FE0                     
  1944                           ; BSR set to: 15
  1945                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1946   003FE0  8926               	bsf	38,4,b	;volatile
  1947                           
  1948                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1949   003FE2  5126               	movf	38,w,b	;volatile
  1950   003FE4  0BF0               	andlw	-16
  1951   003FE6  090C               	iorlw	12
  1952   003FE8  6F26               	movwf	38,b	;volatile
  1953   003FEA                     
  1954                           ; BSR set to: 15
  1955                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1956   003FEA  8F26               	bsf	38,7,b	;volatile
  1957   003FEC                     
  1958                           ; BSR set to: 15
  1959                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1960   003FEC  8922               	bsf	34,4,b	;volatile
  1961                           
  1962                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1963   003FEE  5122               	movf	34,w,b	;volatile
  1964   003FF0  0BF0               	andlw	-16
  1965   003FF2  090C               	iorlw	12
  1966   003FF4  6F22               	movwf	34,b	;volatile
  1967   003FF6                     
  1968                           ; BSR set to: 15
  1969                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1970   003FF6  8F22               	bsf	34,7,b	;volatile
  1971   003FF8                     
  1972                           ; BSR set to: 15
  1973   003FF8  0012               	return		;funcret
  1974   003FFA                     __end_of_initDCmotorsPWM:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _colour_read_all *****************
  1978 ;; Defined at:
  1979 ;;		line 8 in file "colorfunctions.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1982 ;;		 -> colorf(22), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  C               4   39[COMRAM] float 
  1985 ;;  B               4   35[COMRAM] float 
  1986 ;;  G               4   31[COMRAM] float 
  1987 ;;  R               4   27[COMRAM] float 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:       18 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 4
  2004 ;; This function calls:
  2005 ;;		___xxtofl
  2006 ;;		_color_read_Blue
  2007 ;;		_color_read_Clear
  2008 ;;		_color_read_Green
  2009 ;;		_color_read_Red
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text5
  2016   003508                     __ptext5:
  2017                           	callstack 0
  2018   003508                     _colour_read_all:
  2019                           	callstack 26
  2020   003508                     
  2021                           ;colorfunctions.c: 10:     float R = color_read_Red();
  2022   003508  ECB0  F022         	call	_color_read_Red	;wreg free
  2023   00350C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2024   003510  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2025   003514  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2026   003516  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2027   003518  0E00               	movlw	0
  2028   00351A  ECA9  F017         	call	___xxtofl
  2029   00351E  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  2030   003522  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  2031   003526  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  2032   00352A  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  2033                           
  2034                           ;colorfunctions.c: 11:     float G= color_read_Green();
  2035   00352E  ECD8  F022         	call	_color_read_Green	;wreg free
  2036   003532  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2037   003536  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2038   00353A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2039   00353C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2040   00353E  0E00               	movlw	0
  2041   003540  ECA9  F017         	call	___xxtofl
  2042   003544  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  2043   003548  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  2044   00354C  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  2045   003550  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  2046                           
  2047                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  2048   003554  EC28  F023         	call	_color_read_Blue	;wreg free
  2049   003558  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2050   00355C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2051   003560  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2052   003562  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2053   003564  0E00               	movlw	0
  2054   003566  ECA9  F017         	call	___xxtofl
  2055   00356A  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  2056   00356E  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  2057   003572  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  2058   003576  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  2059                           
  2060                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  2061   00357A  EC00  F023         	call	_color_read_Clear	;wreg free
  2062   00357E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2063   003582  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2064   003586  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2065   003588  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2066   00358A  0E00               	movlw	0
  2067   00358C  ECA9  F017         	call	___xxtofl
  2068   003590  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  2069   003594  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  2070   003598  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  2071   00359C  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  2072   0035A0                     
  2073                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  2074   0035A0  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  2075   0035A4  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  2076   0035A8  C01C  FFDE         	movff	colour_read_all@R,postinc2
  2077   0035AC  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  2078   0035B0  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  2079   0035B4  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  2080   0035B8                     
  2081                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2082   0035B8  EE20 F008          	lfsr	2,8
  2083   0035BC  501A               	movf	colour_read_all@cf^0,w,c
  2084   0035BE  26D9               	addwf	fsr2l,f,c
  2085   0035C0  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2086   0035C2  22DA               	addwfc	fsr2h,f,c
  2087   0035C4  C024  FFDE         	movff	colour_read_all@B,postinc2
  2088   0035C8  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  2089   0035CC  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  2090   0035D0  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  2091   0035D4                     
  2092                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2093   0035D4  EE20 F004          	lfsr	2,4
  2094   0035D8  501A               	movf	colour_read_all@cf^0,w,c
  2095   0035DA  26D9               	addwf	fsr2l,f,c
  2096   0035DC  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2097   0035DE  22DA               	addwfc	fsr2h,f,c
  2098   0035E0  C020  FFDE         	movff	colour_read_all@G,postinc2
  2099   0035E4  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  2100   0035E8  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  2101   0035EC  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  2102   0035F0                     
  2103                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2104   0035F0  EE20 F00C          	lfsr	2,12
  2105   0035F4  501A               	movf	colour_read_all@cf^0,w,c
  2106   0035F6  26D9               	addwf	fsr2l,f,c
  2107   0035F8  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2108   0035FA  22DA               	addwfc	fsr2h,f,c
  2109   0035FC  C028  FFDE         	movff	colour_read_all@C,postinc2
  2110   003600  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2111   003604  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2112   003608  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2113   00360C  0012               	return		;funcret
  2114   00360E                     __end_of_colour_read_all:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _color_read_Red *****************
  2118 ;; Defined at:
  2119 ;;		line 38 in file "colorclick.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  tmp             2    9[COMRAM] unsigned int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    4[COMRAM] unsigned int 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;Total ram usage:        7 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 3
  2140 ;; This function calls:
  2141 ;;		_I2C_2_Master_Read
  2142 ;;		_I2C_2_Master_RepStart
  2143 ;;		_I2C_2_Master_Start
  2144 ;;		_I2C_2_Master_Stop
  2145 ;;		_I2C_2_Master_Write
  2146 ;; This function is called by:
  2147 ;;		_colour_read_all
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text6
  2152   004560                     __ptext6:
  2153                           	callstack 0
  2154   004560                     _color_read_Red:
  2155                           	callstack 26
  2156   004560                     
  2157                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2158   004560  EC38  F025         	call	_I2C_2_Master_Start	;wreg free
  2159                           
  2160                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2161   004564  0E52               	movlw	82
  2162   004566  EC22  F025         	call	_I2C_2_Master_Write
  2163                           
  2164                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2165   00456A  0EB6               	movlw	182
  2166   00456C  EC22  F025         	call	_I2C_2_Master_Write
  2167                           
  2168                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2169   004570  EC2E  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2170                           
  2171                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2172   004574  0E53               	movlw	83
  2173   004576  EC22  F025         	call	_I2C_2_Master_Write
  2174                           
  2175                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2176   00457A  0E01               	movlw	1
  2177   00457C  ECE9  F023         	call	_I2C_2_Master_Read
  2178   004580  6E07               	movwf	??_color_read_Red^0,c
  2179   004582  5007               	movf	??_color_read_Red^0,w,c
  2180   004584  6E0A               	movwf	color_read_Red@tmp^0,c
  2181   004586  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2182                           
  2183                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2184   004588  0E00               	movlw	0
  2185   00458A  ECE9  F023         	call	_I2C_2_Master_Read
  2186   00458E  6E07               	movwf	??_color_read_Red^0,c
  2187   004590  5007               	movf	??_color_read_Red^0,w,c
  2188   004592  6E09               	movwf	(??_color_read_Red+2)^0,c
  2189   004594  6A08               	clrf	(??_color_read_Red+1)^0,c
  2190   004596  500A               	movf	color_read_Red@tmp^0,w,c
  2191   004598  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2192   00459A  6E0A               	movwf	color_read_Red@tmp^0,c
  2193   00459C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2194   00459E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2195   0045A0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2196                           
  2197                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2198   0045A2  EC33  F025         	call	_I2C_2_Master_Stop	;wreg free
  2199   0045A6                     
  2200                           ;colorclick.c: 49:  return tmp;
  2201   0045A6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2202   0045AA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2203   0045AE  0012               	return		;funcret
  2204   0045B0                     __end_of_color_read_Red:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _color_read_Green *****************
  2208 ;; Defined at:
  2209 ;;		line 51 in file "colorclick.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  tmp             2    9[COMRAM] unsigned int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2    4[COMRAM] unsigned int 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;Total ram usage:        7 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 3
  2230 ;; This function calls:
  2231 ;;		_I2C_2_Master_Read
  2232 ;;		_I2C_2_Master_RepStart
  2233 ;;		_I2C_2_Master_Start
  2234 ;;		_I2C_2_Master_Stop
  2235 ;;		_I2C_2_Master_Write
  2236 ;; This function is called by:
  2237 ;;		_colour_read_all
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text7
  2242   0045B0                     __ptext7:
  2243                           	callstack 0
  2244   0045B0                     _color_read_Green:
  2245                           	callstack 26
  2246   0045B0                     
  2247                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2248   0045B0  EC38  F025         	call	_I2C_2_Master_Start	;wreg free
  2249                           
  2250                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2251   0045B4  0E52               	movlw	82
  2252   0045B6  EC22  F025         	call	_I2C_2_Master_Write
  2253                           
  2254                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2255   0045BA  0EB8               	movlw	184
  2256   0045BC  EC22  F025         	call	_I2C_2_Master_Write
  2257                           
  2258                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2259   0045C0  EC2E  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2260                           
  2261                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2262   0045C4  0E53               	movlw	83
  2263   0045C6  EC22  F025         	call	_I2C_2_Master_Write
  2264                           
  2265                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2266   0045CA  0E01               	movlw	1
  2267   0045CC  ECE9  F023         	call	_I2C_2_Master_Read
  2268   0045D0  6E07               	movwf	??_color_read_Green^0,c
  2269   0045D2  5007               	movf	??_color_read_Green^0,w,c
  2270   0045D4  6E0A               	movwf	color_read_Green@tmp^0,c
  2271   0045D6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2272                           
  2273                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2274   0045D8  0E00               	movlw	0
  2275   0045DA  ECE9  F023         	call	_I2C_2_Master_Read
  2276   0045DE  6E07               	movwf	??_color_read_Green^0,c
  2277   0045E0  5007               	movf	??_color_read_Green^0,w,c
  2278   0045E2  6E09               	movwf	(??_color_read_Green+2)^0,c
  2279   0045E4  6A08               	clrf	(??_color_read_Green+1)^0,c
  2280   0045E6  500A               	movf	color_read_Green@tmp^0,w,c
  2281   0045E8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2282   0045EA  6E0A               	movwf	color_read_Green@tmp^0,c
  2283   0045EC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2284   0045EE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2285   0045F0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2286                           
  2287                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2288   0045F2  EC33  F025         	call	_I2C_2_Master_Stop	;wreg free
  2289   0045F6                     
  2290                           ;colorclick.c: 62:     return tmp;
  2291   0045F6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2292   0045FA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2293   0045FE  0012               	return		;funcret
  2294   004600                     __end_of_color_read_Green:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _color_read_Clear *****************
  2298 ;; Defined at:
  2299 ;;		line 80 in file "colorclick.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  tmp             2    9[COMRAM] unsigned int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    4[COMRAM] unsigned int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2317 ;;Total ram usage:        7 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 3
  2320 ;; This function calls:
  2321 ;;		_I2C_2_Master_Read
  2322 ;;		_I2C_2_Master_RepStart
  2323 ;;		_I2C_2_Master_Start
  2324 ;;		_I2C_2_Master_Stop
  2325 ;;		_I2C_2_Master_Write
  2326 ;; This function is called by:
  2327 ;;		_colour_read_all
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text8
  2332   004600                     __ptext8:
  2333                           	callstack 0
  2334   004600                     _color_read_Clear:
  2335                           	callstack 26
  2336   004600                     
  2337                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2338   004600  EC38  F025         	call	_I2C_2_Master_Start	;wreg free
  2339                           
  2340                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2341   004604  0E52               	movlw	82
  2342   004606  EC22  F025         	call	_I2C_2_Master_Write
  2343                           
  2344                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2345   00460A  0EB4               	movlw	180
  2346   00460C  EC22  F025         	call	_I2C_2_Master_Write
  2347                           
  2348                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2349   004610  EC2E  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2350                           
  2351                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2352   004614  0E53               	movlw	83
  2353   004616  EC22  F025         	call	_I2C_2_Master_Write
  2354                           
  2355                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2356   00461A  0E01               	movlw	1
  2357   00461C  ECE9  F023         	call	_I2C_2_Master_Read
  2358   004620  6E07               	movwf	??_color_read_Clear^0,c
  2359   004622  5007               	movf	??_color_read_Clear^0,w,c
  2360   004624  6E0A               	movwf	color_read_Clear@tmp^0,c
  2361   004626  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2362                           
  2363                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2364   004628  0E00               	movlw	0
  2365   00462A  ECE9  F023         	call	_I2C_2_Master_Read
  2366   00462E  6E07               	movwf	??_color_read_Clear^0,c
  2367   004630  5007               	movf	??_color_read_Clear^0,w,c
  2368   004632  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2369   004634  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2370   004636  500A               	movf	color_read_Clear@tmp^0,w,c
  2371   004638  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2372   00463A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2373   00463C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2374   00463E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2375   004640  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2376                           
  2377                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2378   004642  EC33  F025         	call	_I2C_2_Master_Stop	;wreg free
  2379   004646                     
  2380                           ;colorclick.c: 91:     return tmp;
  2381   004646  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2382   00464A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2383   00464E  0012               	return		;funcret
  2384   004650                     __end_of_color_read_Clear:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _color_read_Blue *****************
  2388 ;; Defined at:
  2389 ;;		line 65 in file "colorclick.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  tmp             2    9[COMRAM] unsigned int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    4[COMRAM] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2405 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2406 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2407 ;;Total ram usage:        7 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 3
  2410 ;; This function calls:
  2411 ;;		_I2C_2_Master_Read
  2412 ;;		_I2C_2_Master_RepStart
  2413 ;;		_I2C_2_Master_Start
  2414 ;;		_I2C_2_Master_Stop
  2415 ;;		_I2C_2_Master_Write
  2416 ;; This function is called by:
  2417 ;;		_colour_read_all
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text9
  2422   004650                     __ptext9:
  2423                           	callstack 0
  2424   004650                     _color_read_Blue:
  2425                           	callstack 26
  2426   004650                     
  2427                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2428   004650  EC38  F025         	call	_I2C_2_Master_Start	;wreg free
  2429                           
  2430                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2431   004654  0E52               	movlw	82
  2432   004656  EC22  F025         	call	_I2C_2_Master_Write
  2433                           
  2434                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2435   00465A  0EBA               	movlw	186
  2436   00465C  EC22  F025         	call	_I2C_2_Master_Write
  2437                           
  2438                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2439   004660  EC2E  F025         	call	_I2C_2_Master_RepStart	;wreg free
  2440                           
  2441                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2442   004664  0E53               	movlw	83
  2443   004666  EC22  F025         	call	_I2C_2_Master_Write
  2444                           
  2445                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2446   00466A  0E01               	movlw	1
  2447   00466C  ECE9  F023         	call	_I2C_2_Master_Read
  2448   004670  6E07               	movwf	??_color_read_Blue^0,c
  2449   004672  5007               	movf	??_color_read_Blue^0,w,c
  2450   004674  6E0A               	movwf	color_read_Blue@tmp^0,c
  2451   004676  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2452                           
  2453                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2454   004678  0E00               	movlw	0
  2455   00467A  ECE9  F023         	call	_I2C_2_Master_Read
  2456   00467E  6E07               	movwf	??_color_read_Blue^0,c
  2457   004680  5007               	movf	??_color_read_Blue^0,w,c
  2458   004682  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2459   004684  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2460   004686  500A               	movf	color_read_Blue@tmp^0,w,c
  2461   004688  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2462   00468A  6E0A               	movwf	color_read_Blue@tmp^0,c
  2463   00468C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2464   00468E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2465   004690  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2466                           
  2467                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2468   004692  EC33  F025         	call	_I2C_2_Master_Stop	;wreg free
  2469   004696                     
  2470                           ;colorclick.c: 76:     return tmp;
  2471   004696  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2472   00469A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2473   00469E  0012               	return		;funcret
  2474   0046A0                     __end_of_color_read_Blue:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _I2C_2_Master_RepStart *****************
  2478 ;; Defined at:
  2479 ;;		line 33 in file "i2c.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 2
  2500 ;; This function calls:
  2501 ;;		_I2C_2_Master_Idle
  2502 ;; This function is called by:
  2503 ;;		_color_read_Red
  2504 ;;		_color_read_Green
  2505 ;;		_color_read_Blue
  2506 ;;		_color_read_Clear
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text10
  2511   004A5C                     __ptext10:
  2512                           	callstack 0
  2513   004A5C                     _I2C_2_Master_RepStart:
  2514                           	callstack 26
  2515   004A5C                     
  2516                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2517   004A5C  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2518   004A60                     
  2519                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2520   004A60  010E               	movlb	14	; () banked
  2521   004A62  83DA               	bsf	218,1,b	;volatile
  2522   004A64                     
  2523                           ; BSR set to: 14
  2524   004A64  0012               	return		;funcret
  2525   004A66                     __end_of_I2C_2_Master_RepStart:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _I2C_2_Master_Read *****************
  2529 ;; Defined at:
  2530 ;;		line 51 in file "i2c.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  ack             1    wreg     unsigned char 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  ack             1    2[COMRAM] unsigned char 
  2535 ;;  tmp             1    3[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      unsigned char 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;Total ram usage:        3 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		_I2C_2_Master_Idle
  2554 ;; This function is called by:
  2555 ;;		_color_read_Red
  2556 ;;		_color_read_Green
  2557 ;;		_color_read_Blue
  2558 ;;		_color_read_Clear
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text11
  2563   0047D2                     __ptext11:
  2564                           	callstack 0
  2565   0047D2                     _I2C_2_Master_Read:
  2566                           	callstack 26
  2567                           
  2568                           ; BSR set to: 14
  2569                           ;incstack = 0
  2570                           ;I2C_2_Master_Read@ack stored from wreg
  2571   0047D2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2572   0047D4                     
  2573                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2574   0047D4  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2575   0047D8                     
  2576                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2577   0047D8  010E               	movlb	14	; () banked
  2578   0047DA  87DA               	bsf	218,3,b	;volatile
  2579                           
  2580                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2581   0047DC  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2582   0047E0                     
  2583                           ;i2c.c: 57:   tmp = SSP2BUF;
  2584   0047E0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2585                           
  2586                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2587   0047E4  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2588   0047E8                     
  2589                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2590   0047E8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2591   0047EA  B4D8               	btfsc	status,2,c
  2592   0047EC  EFFA  F023         	goto	u2801
  2593   0047F0  EFFE  F023         	goto	u2800
  2594   0047F4                     u2801:
  2595   0047F4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2596   0047F6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2597   0047F8  EFFF  F023         	goto	u2818
  2598   0047FC                     u2800:
  2599   0047FC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2600   0047FE                     u2818:
  2601   0047FE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2602   004800  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2603   004802  010E               	movlb	14	; () banked
  2604   004804  51DA               	movf	218,w,b	;volatile
  2605   004806  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2606   004808  0BDF               	andlw	-33
  2607   00480A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2608   00480C  6FDA               	movwf	218,b	;volatile
  2609   00480E                     
  2610                           ; BSR set to: 14
  2611                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2612   00480E  89DA               	bsf	218,4,b	;volatile
  2613   004810                     
  2614                           ; BSR set to: 14
  2615                           ;i2c.c: 61:   return tmp;
  2616   004810  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2617   004812                     
  2618                           ; BSR set to: 14
  2619   004812  0012               	return		;funcret
  2620   004814                     __end_of_I2C_2_Master_Read:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _color_click_init *****************
  2624 ;; Defined at:
  2625 ;;		line 6 in file "colorclick.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 4
  2646 ;; This function calls:
  2647 ;;		_I2C_2_Master_Init
  2648 ;;		_color_writetoaddr
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text12
  2655   004814                     __ptext12:
  2656                           	callstack 0
  2657   004814                     _color_click_init:
  2658                           	callstack 26
  2659   004814                     
  2660                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2661   004814  EC97  F024         	call	_I2C_2_Master_Init	;wreg free
  2662   004818                     
  2663                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2664   004818  0E01               	movlw	1
  2665   00481A  6E03               	movwf	color_writetoaddr@value^0,c
  2666   00481C  0E00               	movlw	0
  2667   00481E  ECF6  F024         	call	_color_writetoaddr
  2668   004822                     
  2669                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2670   004822  0E3F               	movlw	63
  2671   004824  6E05               	movwf	??_color_click_init^0,c
  2672   004826  0E55               	movlw	85
  2673   004828                     u4307:
  2674   004828  2EE8               	decfsz	wreg,f,c
  2675   00482A  D7FE               	bra	u4307
  2676   00482C  2E05               	decfsz	??_color_click_init^0,f,c
  2677   00482E  D7FC               	bra	u4307
  2678   004830  F000               	nop	
  2679   004832                     
  2680                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2681   004832  0E03               	movlw	3
  2682   004834  6E03               	movwf	color_writetoaddr@value^0,c
  2683   004836  0E00               	movlw	0
  2684   004838  ECF6  F024         	call	_color_writetoaddr
  2685   00483C                     
  2686                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2687   00483C  0ED6               	movlw	214
  2688   00483E  6E03               	movwf	color_writetoaddr@value^0,c
  2689   004840  0E01               	movlw	1
  2690   004842  ECF6  F024         	call	_color_writetoaddr
  2691   004846                     
  2692                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2693   004846  927F               	bcf	127,1,c	;volatile
  2694   004848                     
  2695                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2696   004848  9287               	bcf	135,1,c	;volatile
  2697   00484A                     
  2698                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2699   00484A  9879               	bcf	121,4,c	;volatile
  2700   00484C                     
  2701                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2702   00484C  9881               	bcf	129,4,c	;volatile
  2703   00484E                     
  2704                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2705   00484E  9E7E               	bcf	126,7,c	;volatile
  2706   004850                     
  2707                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2708   004850  9E86               	bcf	134,7,c	;volatile
  2709   004852  0012               	return		;funcret
  2710   004854                     __end_of_color_click_init:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _color_writetoaddr *****************
  2714 ;; Defined at:
  2715 ;;		line 30 in file "colorclick.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  address         1    wreg     unsigned char 
  2718 ;;  value           1    2[COMRAM] unsigned char 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  address         1    3[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2730 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;Total ram usage:        2 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 3
  2737 ;; This function calls:
  2738 ;;		_I2C_2_Master_Start
  2739 ;;		_I2C_2_Master_Stop
  2740 ;;		_I2C_2_Master_Write
  2741 ;; This function is called by:
  2742 ;;		_color_click_init
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text13
  2747   0049EC                     __ptext13:
  2748                           	callstack 0
  2749   0049EC                     _color_writetoaddr:
  2750                           	callstack 26
  2751                           
  2752                           ;incstack = 0
  2753                           ;color_writetoaddr@address stored from wreg
  2754   0049EC  6E04               	movwf	color_writetoaddr@address^0,c
  2755   0049EE                     
  2756                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2757   0049EE  EC38  F025         	call	_I2C_2_Master_Start	;wreg free
  2758                           
  2759                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2760   0049F2  0E52               	movlw	82
  2761   0049F4  EC22  F025         	call	_I2C_2_Master_Write
  2762                           
  2763                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2764   0049F8  5004               	movf	color_writetoaddr@address^0,w,c
  2765   0049FA  0980               	iorlw	128
  2766   0049FC  EC22  F025         	call	_I2C_2_Master_Write
  2767                           
  2768                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2769   004A00  5003               	movf	color_writetoaddr@value^0,w,c
  2770   004A02  EC22  F025         	call	_I2C_2_Master_Write
  2771                           
  2772                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2773   004A06  EC33  F025         	call	_I2C_2_Master_Stop	;wreg free
  2774   004A0A  0012               	return		;funcret
  2775   004A0C                     __end_of_color_writetoaddr:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _I2C_2_Master_Write *****************
  2779 ;; Defined at:
  2780 ;;		line 45 in file "i2c.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  data_byte       1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  data_byte       1    1[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 2
  2801 ;; This function calls:
  2802 ;;		_I2C_2_Master_Idle
  2803 ;; This function is called by:
  2804 ;;		_color_writetoaddr
  2805 ;;		_color_read_Red
  2806 ;;		_color_read_Green
  2807 ;;		_color_read_Blue
  2808 ;;		_color_read_Clear
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text14
  2813   004A44                     __ptext14:
  2814                           	callstack 0
  2815   004A44                     _I2C_2_Master_Write:
  2816                           	callstack 26
  2817                           
  2818                           ;incstack = 0
  2819                           ;I2C_2_Master_Write@data_byte stored from wreg
  2820   004A44  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2821   004A46                     
  2822                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2823   004A46  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2824   004A4A                     
  2825                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2826   004A4A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2827   004A4E  0012               	return		;funcret
  2828   004A50                     __end_of_I2C_2_Master_Write:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _I2C_2_Master_Stop *****************
  2832 ;; Defined at:
  2833 ;;		line 39 in file "i2c.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 2
  2854 ;; This function calls:
  2855 ;;		_I2C_2_Master_Idle
  2856 ;; This function is called by:
  2857 ;;		_color_writetoaddr
  2858 ;;		_color_read_Red
  2859 ;;		_color_read_Green
  2860 ;;		_color_read_Blue
  2861 ;;		_color_read_Clear
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text15
  2866   004A66                     __ptext15:
  2867                           	callstack 0
  2868   004A66                     _I2C_2_Master_Stop:
  2869                           	callstack 26
  2870   004A66                     
  2871                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2872   004A66  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2873   004A6A                     
  2874                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2875   004A6A  010E               	movlb	14	; () banked
  2876   004A6C  85DA               	bsf	218,2,b	;volatile
  2877   004A6E                     
  2878                           ; BSR set to: 14
  2879   004A6E  0012               	return		;funcret
  2880   004A70                     __end_of_I2C_2_Master_Stop:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _I2C_2_Master_Start *****************
  2884 ;; Defined at:
  2885 ;;		line 27 in file "i2c.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 2
  2906 ;; This function calls:
  2907 ;;		_I2C_2_Master_Idle
  2908 ;; This function is called by:
  2909 ;;		_color_writetoaddr
  2910 ;;		_color_read_Red
  2911 ;;		_color_read_Green
  2912 ;;		_color_read_Blue
  2913 ;;		_color_read_Clear
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text16
  2918   004A70                     __ptext16:
  2919                           	callstack 0
  2920   004A70                     _I2C_2_Master_Start:
  2921                           	callstack 26
  2922   004A70                     
  2923                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2924   004A70  ECAC  F024         	call	_I2C_2_Master_Idle	;wreg free
  2925   004A74                     
  2926                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2927   004A74  010E               	movlb	14	; () banked
  2928   004A76  81DA               	bsf	218,0,b	;volatile
  2929   004A78                     
  2930                           ; BSR set to: 14
  2931   004A78  0012               	return		;funcret
  2932   004A7A                     __end_of_I2C_2_Master_Start:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _I2C_2_Master_Idle *****************
  2936 ;; Defined at:
  2937 ;;		line 22 in file "i2c.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_I2C_2_Master_Start
  2962 ;;		_I2C_2_Master_RepStart
  2963 ;;		_I2C_2_Master_Stop
  2964 ;;		_I2C_2_Master_Write
  2965 ;;		_I2C_2_Master_Read
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text17
  2970   004958                     __ptext17:
  2971                           	callstack 0
  2972   004958                     _I2C_2_Master_Idle:
  2973                           	callstack 26
  2974   004958                     l30:
  2975   004958  010E               	movlb	14	; () banked
  2976   00495A  B5D8               	btfsc	216,2,b	;volatile
  2977   00495C  EFB2  F024         	goto	u2451
  2978   004960  EFB4  F024         	goto	u2450
  2979   004964                     u2451:
  2980   004964  EFAC  F024         	goto	l30
  2981   004968                     u2450:
  2982   004968                     
  2983                           ; BSR set to: 14
  2984   004968  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2985   00496C  0E1F               	movlw	31
  2986   00496E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2987   004970  A4D8               	btfss	status,2,c
  2988   004972  EFBD  F024         	goto	u2461
  2989   004976  EFBF  F024         	goto	u2460
  2990   00497A                     u2461:
  2991   00497A  EFAC  F024         	goto	l30
  2992   00497E                     u2460:
  2993   00497E                     
  2994                           ; BSR set to: 14
  2995   00497E  0012               	return		;funcret
  2996   004980                     __end_of_I2C_2_Master_Idle:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _I2C_2_Master_Init *****************
  3000 ;; Defined at:
  3001 ;;		line 4 in file "i2c.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;;		_color_click_init
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text18
  3031   00492E                     __ptext18:
  3032                           	callstack 0
  3033   00492E                     _I2C_2_Master_Init:
  3034                           	callstack 28
  3035   00492E                     
  3036                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3037   00492E  010E               	movlb	14	; () banked
  3038   004930  51D9               	movf	217,w,b	;volatile
  3039   004932  0BF0               	andlw	-16
  3040   004934  0908               	iorlw	8
  3041   004936  6FD9               	movwf	217,b	;volatile
  3042   004938                     
  3043                           ; BSR set to: 14
  3044                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3045   004938  8BD9               	bsf	217,5,b	;volatile
  3046                           
  3047                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3048   00493A  0E9F               	movlw	159
  3049   00493C  6FD6               	movwf	214,b	;volatile
  3050   00493E                     
  3051                           ; BSR set to: 14
  3052                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3053   00493E  8A84               	bsf	132,5,c	;volatile
  3054   004940                     
  3055                           ; BSR set to: 14
  3056                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3057   004940  8C84               	bsf	132,6,c	;volatile
  3058   004942                     
  3059                           ; BSR set to: 14
  3060                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3061   004942  9BA7               	bcf	167,5,b	;volatile
  3062   004944                     
  3063                           ; BSR set to: 14
  3064                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3065   004944  9DA7               	bcf	167,6,b	;volatile
  3066                           
  3067                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3068   004946  0E1D               	movlw	29
  3069   004948  6F1D               	movwf	29,b	;volatile
  3070                           
  3071                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3072   00494A  0E1E               	movlw	30
  3073   00494C  6F1C               	movwf	28,b	;volatile
  3074                           
  3075                           ;i2c.c: 18:   RD5PPS=0x1C;
  3076   00494E  0E1C               	movlw	28
  3077   004950  6F6F               	movwf	111,b	;volatile
  3078                           
  3079                           ;i2c.c: 19:   RD6PPS=0x1B;
  3080   004952  0E1B               	movlw	27
  3081   004954  6F70               	movwf	112,b	;volatile
  3082   004956                     
  3083                           ; BSR set to: 14
  3084   004956  0012               	return		;funcret
  3085   004958                     __end_of_I2C_2_Master_Init:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _Timer0_init *****************
  3089 ;; Defined at:
  3090 ;;		line 7 in file "timer.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text19
  3119   0049A6                     __ptext19:
  3120                           	callstack 0
  3121   0049A6                     _Timer0_init:
  3122                           	callstack 29
  3123   0049A6                     
  3124                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3125   0049A6  50D6               	movf	214,w,c	;volatile
  3126   0049A8  0B1F               	andlw	-225
  3127   0049AA  0940               	iorlw	64
  3128   0049AC  6ED6               	movwf	214,c	;volatile
  3129   0049AE                     
  3130                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3131   0049AE  88D6               	bsf	214,4,c	;volatile
  3132                           
  3133                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3134   0049B0  50D6               	movf	214,w,c	;volatile
  3135   0049B2  0BF0               	andlw	-16
  3136   0049B4  090D               	iorlw	13
  3137   0049B6  6ED6               	movwf	214,c	;volatile
  3138   0049B8                     
  3139                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3140   0049B8  88D5               	bsf	213,4,c	;volatile
  3141   0049BA                     
  3142                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3143   0049BA  010E               	movlb	14	; () banked
  3144   0049BC  8B29               	bsf	41,5,b	;volatile
  3145                           
  3146                           ;timer.c: 17:     TMR0H=0;
  3147   0049BE  0E00               	movlw	0
  3148   0049C0  6ED4               	movwf	212,c	;volatile
  3149                           
  3150                           ;timer.c: 18:     TMR0L=0;
  3151   0049C2  0E00               	movlw	0
  3152   0049C4  6ED3               	movwf	211,c	;volatile
  3153   0049C6                     
  3154                           ; BSR set to: 14
  3155                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3156   0049C6  8ED5               	bsf	213,7,c	;volatile
  3157   0049C8                     
  3158                           ; BSR set to: 14
  3159   0049C8  0012               	return		;funcret
  3160   0049CA                     __end_of_Timer0_init:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _RGB2Hue *****************
  3164 ;; Defined at:
  3165 ;;		line 23 in file "colorfunctions.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  cf              2   13[BANK0 ] PTR struct RGBC_rel
  3168 ;;		 -> colorf(22), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  min             2   25[BANK0 ] int 
  3171 ;;  max             2   23[BANK0 ] int 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;Total ram usage:       14 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 3
  3188 ;; This function calls:
  3189 ;;		___fladd
  3190 ;;		___fldiv
  3191 ;;		___fleq
  3192 ;;		___flge
  3193 ;;		___flmul
  3194 ;;		___flsub
  3195 ;;		___fltol
  3196 ;;		___xxtofl
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text20
  3203   000E52                     __ptext20:
  3204                           	callstack 0
  3205   000E52                     _RGB2Hue:
  3206                           	callstack 27
  3207   000E52                     
  3208                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3209   000E52  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3210   000E56  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3211   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3212   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3213   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3214   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3215   000E6A  0100               	movlb	0	; () banked
  3216   000E6C  EE20 F004          	lfsr	2,4
  3217   000E70  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3218   000E72  26D9               	addwf	fsr2l,f,c
  3219   000E74  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3220   000E76  22DA               	addwfc	fsr2h,f,c
  3221   000E78  CFDE F005          	movff	postinc2,___fleq@ff2
  3222   000E7C  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3223   000E80  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3224   000E84  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3225   000E88  ECE0  F01C         	call	___fleq	;wreg free
  3226   000E8C  A0D8               	btfss	status,0,c
  3227   000E8E  EF4B  F007         	goto	u4021
  3228   000E92  EF4D  F007         	goto	u4020
  3229   000E96                     u4021:
  3230   000E96  EF82  F007         	goto	l4346
  3231   000E9A                     u4020:
  3232   000E9A  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3233   000E9E  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3234   000EA2  CFDE F001          	movff	postinc2,___fleq@ff1
  3235   000EA6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3236   000EAA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3237   000EAE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3238   000EB2  0100               	movlb	0	; () banked
  3239   000EB4  EE20 F008          	lfsr	2,8
  3240   000EB8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3241   000EBA  26D9               	addwf	fsr2l,f,c
  3242   000EBC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3243   000EBE  22DA               	addwfc	fsr2h,f,c
  3244   000EC0  CFDE F005          	movff	postinc2,___fleq@ff2
  3245   000EC4  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3246   000EC8  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3247   000ECC  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3248   000ED0  ECE0  F01C         	call	___fleq	;wreg free
  3249   000ED4  A0D8               	btfss	status,0,c
  3250   000ED6  EF6F  F007         	goto	u4031
  3251   000EDA  EF71  F007         	goto	u4030
  3252   000EDE                     u4031:
  3253   000EDE  EF82  F007         	goto	l4346
  3254   000EE2                     u4030:
  3255   000EE2                     
  3256                           ;colorfunctions.c: 25:         cf->h=0;
  3257   000EE2  0100               	movlb	0	; () banked
  3258   000EE4  EE20 F010          	lfsr	2,16
  3259   000EE8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3260   000EEA  26D9               	addwf	fsr2l,f,c
  3261   000EEC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3262   000EEE  22DA               	addwfc	fsr2h,f,c
  3263   000EF0  0E00               	movlw	0
  3264   000EF2  6EDE               	movwf	postinc2,c
  3265   000EF4  0E00               	movlw	0
  3266   000EF6  6EDE               	movwf	postinc2,c
  3267   000EF8  0E00               	movlw	0
  3268   000EFA  6EDE               	movwf	postinc2,c
  3269   000EFC  0E00               	movlw	0
  3270   000EFE  6EDD               	movwf	postdec2,c
  3271                           
  3272                           ;colorfunctions.c: 26:     } else{
  3273   000F00  EFBE  F00A         	goto	l604
  3274   000F04                     l4346:
  3275                           
  3276                           ;colorfunctions.c: 28:         signed int min=0;
  3277   000F04  0E00               	movlw	0
  3278   000F06  0100               	movlb	0	; () banked
  3279   000F08  6F7A               	movwf	(RGB2Hue@min+1)& (0+255),b
  3280   000F0A  0E00               	movlw	0
  3281   000F0C  6F79               	movwf	RGB2Hue@min& (0+255),b
  3282   000F0E                     
  3283                           ; BSR set to: 0
  3284                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3285   000F0E  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3286   000F12  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3287   000F16  CFDE F04B          	movff	postinc2,___flge@ff1
  3288   000F1A  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3289   000F1E  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3290   000F22  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3291   000F26  EE20 F004          	lfsr	2,4
  3292   000F2A  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3293   000F2C  26D9               	addwf	fsr2l,f,c
  3294   000F2E  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3295   000F30  22DA               	addwfc	fsr2h,f,c
  3296   000F32  CFDE F04F          	movff	postinc2,___flge@ff2
  3297   000F36  CFDE F050          	movff	postinc2,___flge@ff2+1
  3298   000F3A  CFDE F051          	movff	postinc2,___flge@ff2+2
  3299   000F3E  CFDE F052          	movff	postinc2,___flge@ff2+3
  3300   000F42  EC8A  F01B         	call	___flge	;wreg free
  3301   000F46  B0D8               	btfsc	status,0,c
  3302   000F48  EFA8  F007         	goto	u4041
  3303   000F4C  EFAA  F007         	goto	u4040
  3304   000F50                     u4041:
  3305   000F50  EFE2  F007         	goto	l4354
  3306   000F54                     u4040:
  3307   000F54  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3308   000F58  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3309   000F5C  CFDE F04B          	movff	postinc2,___flge@ff1
  3310   000F60  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3311   000F64  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3312   000F68  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3313   000F6C  0100               	movlb	0	; () banked
  3314   000F6E  EE20 F008          	lfsr	2,8
  3315   000F72  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3316   000F74  26D9               	addwf	fsr2l,f,c
  3317   000F76  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3318   000F78  22DA               	addwfc	fsr2h,f,c
  3319   000F7A  CFDE F04F          	movff	postinc2,___flge@ff2
  3320   000F7E  CFDE F050          	movff	postinc2,___flge@ff2+1
  3321   000F82  CFDE F051          	movff	postinc2,___flge@ff2+2
  3322   000F86  CFDE F052          	movff	postinc2,___flge@ff2+3
  3323   000F8A  EC8A  F01B         	call	___flge	;wreg free
  3324   000F8E  B0D8               	btfsc	status,0,c
  3325   000F90  EFCC  F007         	goto	u4051
  3326   000F94  EFCE  F007         	goto	u4050
  3327   000F98                     u4051:
  3328   000F98  EFE2  F007         	goto	l4354
  3329   000F9C                     u4050:
  3330   000F9C                     
  3331                           ;colorfunctions.c: 31:             min=cf->Rf;
  3332   000F9C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3333   000FA0  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3334   000FA4  CFDE F001          	movff	postinc2,___fltol@f1
  3335   000FA8  CFDE F002          	movff	postinc2,___fltol@f1+1
  3336   000FAC  CFDE F003          	movff	postinc2,___fltol@f1+2
  3337   000FB0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3338   000FB4  EC07  F01B         	call	___fltol	;wreg free
  3339   000FB8  C001  F079         	movff	?___fltol,RGB2Hue@min
  3340   000FBC  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3341                           
  3342                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3343   000FC0  EF58  F008         	goto	l596
  3344   000FC4                     l4354:
  3345   000FC4  0100               	movlb	0	; () banked
  3346   000FC6  EE20 F004          	lfsr	2,4
  3347   000FCA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3348   000FCC  26D9               	addwf	fsr2l,f,c
  3349   000FCE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3350   000FD0  22DA               	addwfc	fsr2h,f,c
  3351   000FD2  CFDE F04B          	movff	postinc2,___flge@ff1
  3352   000FD6  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3353   000FDA  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3354   000FDE  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3355   000FE2  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3356   000FE6  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3357   000FEA  CFDE F04F          	movff	postinc2,___flge@ff2
  3358   000FEE  CFDE F050          	movff	postinc2,___flge@ff2+1
  3359   000FF2  CFDE F051          	movff	postinc2,___flge@ff2+2
  3360   000FF6  CFDE F052          	movff	postinc2,___flge@ff2+3
  3361   000FFA  EC8A  F01B         	call	___flge	;wreg free
  3362   000FFE  B0D8               	btfsc	status,0,c
  3363   001000  EF04  F008         	goto	u4061
  3364   001004  EF06  F008         	goto	u4060
  3365   001008                     u4061:
  3366   001008  EF43  F008         	goto	l4360
  3367   00100C                     u4060:
  3368   00100C  0100               	movlb	0	; () banked
  3369   00100E  EE20 F004          	lfsr	2,4
  3370   001012  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3371   001014  26D9               	addwf	fsr2l,f,c
  3372   001016  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3373   001018  22DA               	addwfc	fsr2h,f,c
  3374   00101A  CFDE F04B          	movff	postinc2,___flge@ff1
  3375   00101E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3376   001022  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3377   001026  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3378   00102A  EE20 F008          	lfsr	2,8
  3379   00102E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3380   001030  26D9               	addwf	fsr2l,f,c
  3381   001032  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3382   001034  22DA               	addwfc	fsr2h,f,c
  3383   001036  CFDE F04F          	movff	postinc2,___flge@ff2
  3384   00103A  CFDE F050          	movff	postinc2,___flge@ff2+1
  3385   00103E  CFDE F051          	movff	postinc2,___flge@ff2+2
  3386   001042  CFDE F052          	movff	postinc2,___flge@ff2+3
  3387   001046  EC8A  F01B         	call	___flge	;wreg free
  3388   00104A  B0D8               	btfsc	status,0,c
  3389   00104C  EF2A  F008         	goto	u4071
  3390   001050  EF2C  F008         	goto	u4070
  3391   001054                     u4071:
  3392   001054  EF43  F008         	goto	l4360
  3393   001058                     u4070:
  3394   001058                     
  3395                           ;colorfunctions.c: 33:             min=cf->Gf;
  3396   001058  0100               	movlb	0	; () banked
  3397   00105A  EE20 F004          	lfsr	2,4
  3398   00105E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3399   001060  26D9               	addwf	fsr2l,f,c
  3400   001062  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3401   001064  22DA               	addwfc	fsr2h,f,c
  3402   001066  CFDE F001          	movff	postinc2,___fltol@f1
  3403   00106A  CFDE F002          	movff	postinc2,___fltol@f1+1
  3404   00106E  CFDE F003          	movff	postinc2,___fltol@f1+2
  3405   001072  CFDE F004          	movff	postinc2,___fltol@f1+3
  3406   001076  EC07  F01B         	call	___fltol	;wreg free
  3407   00107A  C001  F079         	movff	?___fltol,RGB2Hue@min
  3408   00107E  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3409                           
  3410                           ;colorfunctions.c: 34:         } else{
  3411   001082  EF58  F008         	goto	l596
  3412   001086                     l4360:
  3413                           
  3414                           ;colorfunctions.c: 35:             min=cf->Bf;
  3415   001086  0100               	movlb	0	; () banked
  3416   001088  EE20 F008          	lfsr	2,8
  3417   00108C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3418   00108E  26D9               	addwf	fsr2l,f,c
  3419   001090  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3420   001092  22DA               	addwfc	fsr2h,f,c
  3421   001094  CFDE F001          	movff	postinc2,___fltol@f1
  3422   001098  CFDE F002          	movff	postinc2,___fltol@f1+1
  3423   00109C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3424   0010A0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3425   0010A4  EC07  F01B         	call	___fltol	;wreg free
  3426   0010A8  C001  F079         	movff	?___fltol,RGB2Hue@min
  3427   0010AC  C002  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3428   0010B0                     l596:
  3429                           
  3430                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3431   0010B0  0100               	movlb	0	; () banked
  3432   0010B2  EE20 F004          	lfsr	2,4
  3433   0010B6  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3434   0010B8  26D9               	addwf	fsr2l,f,c
  3435   0010BA  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3436   0010BC  22DA               	addwfc	fsr2h,f,c
  3437   0010BE  CFDE F04B          	movff	postinc2,___flge@ff1
  3438   0010C2  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3439   0010C6  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3440   0010CA  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3441   0010CE  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3442   0010D2  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3443   0010D6  CFDE F04F          	movff	postinc2,___flge@ff2
  3444   0010DA  CFDE F050          	movff	postinc2,___flge@ff2+1
  3445   0010DE  CFDE F051          	movff	postinc2,___flge@ff2+2
  3446   0010E2  CFDE F052          	movff	postinc2,___flge@ff2+3
  3447   0010E6  EC8A  F01B         	call	___flge	;wreg free
  3448   0010EA  B0D8               	btfsc	status,0,c
  3449   0010EC  EF7A  F008         	goto	u4081
  3450   0010F0  EF7C  F008         	goto	u4080
  3451   0010F4                     u4081:
  3452   0010F4  EF19  F009         	goto	l4368
  3453   0010F8                     u4080:
  3454   0010F8  0100               	movlb	0	; () banked
  3455   0010FA  EE20 F008          	lfsr	2,8
  3456   0010FE  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3457   001100  26D9               	addwf	fsr2l,f,c
  3458   001102  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3459   001104  22DA               	addwfc	fsr2h,f,c
  3460   001106  CFDE F04B          	movff	postinc2,___flge@ff1
  3461   00110A  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3462   00110E  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3463   001112  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3464   001116  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3465   00111A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3466   00111E  CFDE F04F          	movff	postinc2,___flge@ff2
  3467   001122  CFDE F050          	movff	postinc2,___flge@ff2+1
  3468   001126  CFDE F051          	movff	postinc2,___flge@ff2+2
  3469   00112A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3470   00112E  EC8A  F01B         	call	___flge	;wreg free
  3471   001132  B0D8               	btfsc	status,0,c
  3472   001134  EF9E  F008         	goto	u4091
  3473   001138  EFA0  F008         	goto	u4090
  3474   00113C                     u4091:
  3475   00113C  EF19  F009         	goto	l4368
  3476   001140                     u4090:
  3477   001140                     
  3478                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3479   001140  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3480   001144  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3481   001148  CFDE F001          	movff	postinc2,___fltol@f1
  3482   00114C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3483   001150  CFDE F003          	movff	postinc2,___fltol@f1+2
  3484   001154  CFDE F004          	movff	postinc2,___fltol@f1+3
  3485   001158  EC07  F01B         	call	___fltol	;wreg free
  3486   00115C  C001  F077         	movff	?___fltol,RGB2Hue@max
  3487   001160  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3488   001164                     
  3489                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3490   001164  0100               	movlb	0	; () banked
  3491   001166  5179               	movf	RGB2Hue@min& (0+255),w,b
  3492   001168  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3493   00116A  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3494   00116C  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3495   00116E  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3496   001170  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3497   001172  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3498   001176  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3499   00117A  0E00               	movlw	0
  3500   00117C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3501   00117E  0EFF               	movlw	-1
  3502   001180  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3503   001182  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3504   001184  0E01               	movlw	1
  3505   001186  ECA9  F017         	call	___xxtofl
  3506   00118A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3507   00118E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3508   001192  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3509   001196  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3510   00119A  0100               	movlb	0	; () banked
  3511   00119C  EE20 F008          	lfsr	2,8
  3512   0011A0  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3513   0011A2  26D9               	addwf	fsr2l,f,c
  3514   0011A4  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3515   0011A6  22DA               	addwfc	fsr2h,f,c
  3516   0011A8  CFDE F04F          	movff	postinc2,___flsub@a
  3517   0011AC  CFDE F050          	movff	postinc2,___flsub@a+1
  3518   0011B0  CFDE F051          	movff	postinc2,___flsub@a+2
  3519   0011B4  CFDE F052          	movff	postinc2,___flsub@a+3
  3520   0011B8  EE20 F004          	lfsr	2,4
  3521   0011BC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3522   0011BE  26D9               	addwf	fsr2l,f,c
  3523   0011C0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3524   0011C2  22DA               	addwfc	fsr2h,f,c
  3525   0011C4  CFDE F04B          	movff	postinc2,___flsub@b
  3526   0011C8  CFDE F04C          	movff	postinc2,___flsub@b+1
  3527   0011CC  CFDE F04D          	movff	postinc2,___flsub@b+2
  3528   0011D0  CFDE F04E          	movff	postinc2,___flsub@b+3
  3529   0011D4  ECC6  F023         	call	___flsub	;wreg free
  3530   0011D8  C04B  F053         	movff	?___flsub,___fldiv@b
  3531   0011DC  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3532   0011E0  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3533   0011E4  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3534   0011E8  ECE0  F013         	call	___fldiv	;wreg free
  3535   0011EC  C053  F01A         	movff	?___fldiv,___flmul@b
  3536   0011F0  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3537   0011F4  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3538   0011F8  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3539   0011FC  0E00               	movlw	0
  3540   0011FE  6E1E               	movwf	___flmul@a^0,c
  3541   001200  0E00               	movlw	0
  3542   001202  6E1F               	movwf	(___flmul@a+1)^0,c
  3543   001204  0E70               	movlw	112
  3544   001206  6E20               	movwf	(___flmul@a+2)^0,c
  3545   001208  0E42               	movlw	66
  3546   00120A  6E21               	movwf	(___flmul@a+3)^0,c
  3547   00120C  ECCB  F011         	call	___flmul	;wreg free
  3548   001210  0100               	movlb	0	; () banked
  3549   001212  EE20 F010          	lfsr	2,16
  3550   001216  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3551   001218  26D9               	addwf	fsr2l,f,c
  3552   00121A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3553   00121C  22DA               	addwfc	fsr2h,f,c
  3554   00121E  C01A  FFDE         	movff	?___flmul,postinc2
  3555   001222  C01B  FFDE         	movff	?___flmul+1,postinc2
  3556   001226  C01C  FFDE         	movff	?___flmul+2,postinc2
  3557   00122A  C01D  FFDE         	movff	?___flmul+3,postinc2
  3558                           
  3559                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3560   00122E  EF89  F00A         	goto	l4380
  3561   001232                     l4368:
  3562   001232  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3563   001236  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3564   00123A  CFDE F04B          	movff	postinc2,___flge@ff1
  3565   00123E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3566   001242  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3567   001246  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3568   00124A  0100               	movlb	0	; () banked
  3569   00124C  EE20 F004          	lfsr	2,4
  3570   001250  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3571   001252  26D9               	addwf	fsr2l,f,c
  3572   001254  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3573   001256  22DA               	addwfc	fsr2h,f,c
  3574   001258  CFDE F04F          	movff	postinc2,___flge@ff2
  3575   00125C  CFDE F050          	movff	postinc2,___flge@ff2+1
  3576   001260  CFDE F051          	movff	postinc2,___flge@ff2+2
  3577   001264  CFDE F052          	movff	postinc2,___flge@ff2+3
  3578   001268  EC8A  F01B         	call	___flge	;wreg free
  3579   00126C  B0D8               	btfsc	status,0,c
  3580   00126E  EF3B  F009         	goto	u4101
  3581   001272  EF3D  F009         	goto	u4100
  3582   001276                     u4101:
  3583   001276  EFF7  F009         	goto	l4376
  3584   00127A                     u4100:
  3585   00127A  0100               	movlb	0	; () banked
  3586   00127C  EE20 F008          	lfsr	2,8
  3587   001280  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3588   001282  26D9               	addwf	fsr2l,f,c
  3589   001284  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3590   001286  22DA               	addwfc	fsr2h,f,c
  3591   001288  CFDE F04B          	movff	postinc2,___flge@ff1
  3592   00128C  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3593   001290  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3594   001294  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3595   001298  EE20 F004          	lfsr	2,4
  3596   00129C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3597   00129E  26D9               	addwf	fsr2l,f,c
  3598   0012A0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3599   0012A2  22DA               	addwfc	fsr2h,f,c
  3600   0012A4  CFDE F04F          	movff	postinc2,___flge@ff2
  3601   0012A8  CFDE F050          	movff	postinc2,___flge@ff2+1
  3602   0012AC  CFDE F051          	movff	postinc2,___flge@ff2+2
  3603   0012B0  CFDE F052          	movff	postinc2,___flge@ff2+3
  3604   0012B4  EC8A  F01B         	call	___flge	;wreg free
  3605   0012B8  B0D8               	btfsc	status,0,c
  3606   0012BA  EF61  F009         	goto	u4111
  3607   0012BE  EF63  F009         	goto	u4110
  3608   0012C2                     u4111:
  3609   0012C2  EFF7  F009         	goto	l4376
  3610   0012C6                     u4110:
  3611   0012C6                     
  3612                           ;colorfunctions.c: 44:             max=cf->Gf;
  3613   0012C6  0100               	movlb	0	; () banked
  3614   0012C8  EE20 F004          	lfsr	2,4
  3615   0012CC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3616   0012CE  26D9               	addwf	fsr2l,f,c
  3617   0012D0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3618   0012D2  22DA               	addwfc	fsr2h,f,c
  3619   0012D4  CFDE F001          	movff	postinc2,___fltol@f1
  3620   0012D8  CFDE F002          	movff	postinc2,___fltol@f1+1
  3621   0012DC  CFDE F003          	movff	postinc2,___fltol@f1+2
  3622   0012E0  CFDE F004          	movff	postinc2,___fltol@f1+3
  3623   0012E4  EC07  F01B         	call	___fltol	;wreg free
  3624   0012E8  C001  F077         	movff	?___fltol,RGB2Hue@max
  3625   0012EC  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3626                           
  3627                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3628   0012F0  0100               	movlb	0	; () banked
  3629   0012F2  5179               	movf	RGB2Hue@min& (0+255),w,b
  3630   0012F4  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3631   0012F6  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3632   0012F8  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3633   0012FA  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3634   0012FC  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3635   0012FE  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3636   001302  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3637   001306  0E00               	movlw	0
  3638   001308  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3639   00130A  0EFF               	movlw	-1
  3640   00130C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3641   00130E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3642   001310  0E01               	movlw	1
  3643   001312  ECA9  F017         	call	___xxtofl
  3644   001316  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3645   00131A  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3646   00131E  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3647   001322  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3648   001326  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3649   00132A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3650   00132E  CFDE F04F          	movff	postinc2,___flsub@a
  3651   001332  CFDE F050          	movff	postinc2,___flsub@a+1
  3652   001336  CFDE F051          	movff	postinc2,___flsub@a+2
  3653   00133A  CFDE F052          	movff	postinc2,___flsub@a+3
  3654   00133E  0100               	movlb	0	; () banked
  3655   001340  EE20 F008          	lfsr	2,8
  3656   001344  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3657   001346  26D9               	addwf	fsr2l,f,c
  3658   001348  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3659   00134A  22DA               	addwfc	fsr2h,f,c
  3660   00134C  CFDE F04B          	movff	postinc2,___flsub@b
  3661   001350  CFDE F04C          	movff	postinc2,___flsub@b+1
  3662   001354  CFDE F04D          	movff	postinc2,___flsub@b+2
  3663   001358  CFDE F04E          	movff	postinc2,___flsub@b+3
  3664   00135C  ECC6  F023         	call	___flsub	;wreg free
  3665   001360  C04B  F053         	movff	?___flsub,___fldiv@b
  3666   001364  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3667   001368  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3668   00136C  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3669   001370  ECE0  F013         	call	___fldiv	;wreg free
  3670   001374  C053  F073         	movff	?___fldiv,_RGB2Hue$3161
  3671   001378  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3161+1
  3672   00137C  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3161+2
  3673   001380  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3161+3
  3674   001384                     
  3675                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3676   001384  0E00               	movlw	0
  3677   001386  6E3F               	movwf	___fladd@a^0,c
  3678   001388  0E00               	movlw	0
  3679   00138A  6E40               	movwf	(___fladd@a+1)^0,c
  3680   00138C  0E00               	movlw	0
  3681   00138E  6E41               	movwf	(___fladd@a+2)^0,c
  3682   001390  0E40               	movlw	64
  3683   001392  6E42               	movwf	(___fladd@a+3)^0,c
  3684   001394  C073  F03B         	movff	_RGB2Hue$3161,___fladd@b
  3685   001398  C074  F03C         	movff	_RGB2Hue$3161+1,___fladd@b+1
  3686   00139C  C075  F03D         	movff	_RGB2Hue$3161+2,___fladd@b+2
  3687   0013A0  C076  F03E         	movff	_RGB2Hue$3161+3,___fladd@b+3
  3688   0013A4  EC36  F00D         	call	___fladd	;wreg free
  3689   0013A8  C03B  F01A         	movff	?___fladd,___flmul@b
  3690   0013AC  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3691   0013B0  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3692   0013B4  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3693   0013B8  0E00               	movlw	0
  3694   0013BA  6E1E               	movwf	___flmul@a^0,c
  3695   0013BC  0E00               	movlw	0
  3696   0013BE  6E1F               	movwf	(___flmul@a+1)^0,c
  3697   0013C0  0E70               	movlw	112
  3698   0013C2  6E20               	movwf	(___flmul@a+2)^0,c
  3699   0013C4  0E42               	movlw	66
  3700   0013C6  6E21               	movwf	(___flmul@a+3)^0,c
  3701   0013C8  ECCB  F011         	call	___flmul	;wreg free
  3702   0013CC  0100               	movlb	0	; () banked
  3703   0013CE  EE20 F010          	lfsr	2,16
  3704   0013D2  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3705   0013D4  26D9               	addwf	fsr2l,f,c
  3706   0013D6  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3707   0013D8  22DA               	addwfc	fsr2h,f,c
  3708   0013DA  C01A  FFDE         	movff	?___flmul,postinc2
  3709   0013DE  C01B  FFDE         	movff	?___flmul+1,postinc2
  3710   0013E2  C01C  FFDE         	movff	?___flmul+2,postinc2
  3711   0013E6  C01D  FFDE         	movff	?___flmul+3,postinc2
  3712                           
  3713                           ;colorfunctions.c: 46:         }else{
  3714   0013EA  EF89  F00A         	goto	l4380
  3715   0013EE                     l4376:
  3716                           
  3717                           ;colorfunctions.c: 47:             max=cf->Bf;
  3718   0013EE  0100               	movlb	0	; () banked
  3719   0013F0  EE20 F008          	lfsr	2,8
  3720   0013F4  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3721   0013F6  26D9               	addwf	fsr2l,f,c
  3722   0013F8  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3723   0013FA  22DA               	addwfc	fsr2h,f,c
  3724   0013FC  CFDE F001          	movff	postinc2,___fltol@f1
  3725   001400  CFDE F002          	movff	postinc2,___fltol@f1+1
  3726   001404  CFDE F003          	movff	postinc2,___fltol@f1+2
  3727   001408  CFDE F004          	movff	postinc2,___fltol@f1+3
  3728   00140C  EC07  F01B         	call	___fltol	;wreg free
  3729   001410  C001  F077         	movff	?___fltol,RGB2Hue@max
  3730   001414  C002  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3731                           
  3732                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3733   001418  0100               	movlb	0	; () banked
  3734   00141A  5179               	movf	RGB2Hue@min& (0+255),w,b
  3735   00141C  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3736   00141E  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3737   001420  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3738   001422  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3739   001424  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3740   001426  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3741   00142A  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3742   00142E  0E00               	movlw	0
  3743   001430  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3744   001432  0EFF               	movlw	-1
  3745   001434  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3746   001436  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3747   001438  0E01               	movlw	1
  3748   00143A  ECA9  F017         	call	___xxtofl
  3749   00143E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3750   001442  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3751   001446  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3752   00144A  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3753   00144E  0100               	movlb	0	; () banked
  3754   001450  EE20 F004          	lfsr	2,4
  3755   001454  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3756   001456  26D9               	addwf	fsr2l,f,c
  3757   001458  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3758   00145A  22DA               	addwfc	fsr2h,f,c
  3759   00145C  CFDE F04F          	movff	postinc2,___flsub@a
  3760   001460  CFDE F050          	movff	postinc2,___flsub@a+1
  3761   001464  CFDE F051          	movff	postinc2,___flsub@a+2
  3762   001468  CFDE F052          	movff	postinc2,___flsub@a+3
  3763   00146C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3764   001470  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3765   001474  CFDE F04B          	movff	postinc2,___flsub@b
  3766   001478  CFDE F04C          	movff	postinc2,___flsub@b+1
  3767   00147C  CFDE F04D          	movff	postinc2,___flsub@b+2
  3768   001480  CFDE F04E          	movff	postinc2,___flsub@b+3
  3769   001484  ECC6  F023         	call	___flsub	;wreg free
  3770   001488  C04B  F053         	movff	?___flsub,___fldiv@b
  3771   00148C  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3772   001490  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3773   001494  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3774   001498  ECE0  F013         	call	___fldiv	;wreg free
  3775   00149C  C053  F073         	movff	?___fldiv,_RGB2Hue$3161
  3776   0014A0  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3161+1
  3777   0014A4  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3161+2
  3778   0014A8  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3161+3
  3779   0014AC                     
  3780                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3781   0014AC  0E00               	movlw	0
  3782   0014AE  6E3F               	movwf	___fladd@a^0,c
  3783   0014B0  0E00               	movlw	0
  3784   0014B2  6E40               	movwf	(___fladd@a+1)^0,c
  3785   0014B4  0E80               	movlw	128
  3786   0014B6  6E41               	movwf	(___fladd@a+2)^0,c
  3787   0014B8  0E40               	movlw	64
  3788   0014BA  6E42               	movwf	(___fladd@a+3)^0,c
  3789   0014BC  C073  F03B         	movff	_RGB2Hue$3161,___fladd@b
  3790   0014C0  C074  F03C         	movff	_RGB2Hue$3161+1,___fladd@b+1
  3791   0014C4  C075  F03D         	movff	_RGB2Hue$3161+2,___fladd@b+2
  3792   0014C8  C076  F03E         	movff	_RGB2Hue$3161+3,___fladd@b+3
  3793   0014CC  EC36  F00D         	call	___fladd	;wreg free
  3794   0014D0  C03B  F01A         	movff	?___fladd,___flmul@b
  3795   0014D4  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3796   0014D8  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3797   0014DC  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3798   0014E0  0E00               	movlw	0
  3799   0014E2  6E1E               	movwf	___flmul@a^0,c
  3800   0014E4  0E00               	movlw	0
  3801   0014E6  6E1F               	movwf	(___flmul@a+1)^0,c
  3802   0014E8  0E70               	movlw	112
  3803   0014EA  6E20               	movwf	(___flmul@a+2)^0,c
  3804   0014EC  0E42               	movlw	66
  3805   0014EE  6E21               	movwf	(___flmul@a+3)^0,c
  3806   0014F0  ECCB  F011         	call	___flmul	;wreg free
  3807   0014F4  0100               	movlb	0	; () banked
  3808   0014F6  EE20 F010          	lfsr	2,16
  3809   0014FA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3810   0014FC  26D9               	addwf	fsr2l,f,c
  3811   0014FE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3812   001500  22DA               	addwfc	fsr2h,f,c
  3813   001502  C01A  FFDE         	movff	?___flmul,postinc2
  3814   001506  C01B  FFDE         	movff	?___flmul+1,postinc2
  3815   00150A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3816   00150E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3817   001512                     l4380:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3821   001512  EE20 F010          	lfsr	2,16
  3822   001516  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3823   001518  26D9               	addwf	fsr2l,f,c
  3824   00151A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3825   00151C  22DA               	addwfc	fsr2h,f,c
  3826   00151E  0E03               	movlw	3
  3827   001520  BEDB               	btfsc	plusw2,7,c
  3828   001522  EF97  F00A         	goto	u4120
  3829   001526  EF95  F00A         	goto	u4121
  3830   00152A                     u4121:
  3831   00152A  EFBE  F00A         	goto	l604
  3832   00152E                     u4120:
  3833   00152E                     
  3834                           ; BSR set to: 0
  3835                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3836   00152E  EE20 F010          	lfsr	2,16
  3837   001532  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3838   001534  26D9               	addwf	fsr2l,f,c
  3839   001536  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3840   001538  22DA               	addwfc	fsr2h,f,c
  3841   00153A  CFDE F03B          	movff	postinc2,___fladd@b
  3842   00153E  CFDE F03C          	movff	postinc2,___fladd@b+1
  3843   001542  CFDE F03D          	movff	postinc2,___fladd@b+2
  3844   001546  CFDE F03E          	movff	postinc2,___fladd@b+3
  3845   00154A  0E00               	movlw	0
  3846   00154C  6E3F               	movwf	___fladd@a^0,c
  3847   00154E  0E00               	movlw	0
  3848   001550  6E40               	movwf	(___fladd@a+1)^0,c
  3849   001552  0EB4               	movlw	180
  3850   001554  6E41               	movwf	(___fladd@a+2)^0,c
  3851   001556  0E43               	movlw	67
  3852   001558  6E42               	movwf	(___fladd@a+3)^0,c
  3853   00155A  EC36  F00D         	call	___fladd	;wreg free
  3854   00155E  0100               	movlb	0	; () banked
  3855   001560  EE20 F010          	lfsr	2,16
  3856   001564  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3857   001566  26D9               	addwf	fsr2l,f,c
  3858   001568  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3859   00156A  22DA               	addwfc	fsr2h,f,c
  3860   00156C  C03B  FFDE         	movff	?___fladd,postinc2
  3861   001570  C03C  FFDE         	movff	?___fladd+1,postinc2
  3862   001574  C03D  FFDE         	movff	?___fladd+2,postinc2
  3863   001578  C03E  FFDE         	movff	?___fladd+3,postinc2
  3864   00157C                     l604:
  3865                           
  3866                           ; BSR set to: 0
  3867   00157C  0012               	return		;funcret
  3868   00157E                     __end_of_RGB2Hue:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function ___fltol *****************
  3872 ;; Defined at:
  3873 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  f1              4    0[COMRAM] void 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  exp1            1    9[COMRAM] unsigned char 
  3878 ;;  sign1           1    8[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  4    0[COMRAM] long 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;Total ram usage:       10 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 1
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_Left45
  3899 ;;		_Right45
  3900 ;;		_reverseHalfSquare
  3901 ;;		_Yellow_rev1_R90
  3902 ;;		_Pink_rev1_L90
  3903 ;;		_RGB2Hue
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text21
  3908   00360E                     __ptext21:
  3909                           	callstack 0
  3910   00360E                     ___fltol:
  3911                           	callstack 28
  3912   00360E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3913   003610  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3914   003612  6E0A               	movwf	___fltol@exp1^0,c
  3915   003614  500A               	movf	___fltol@exp1^0,w,c
  3916   003616  A4D8               	btfss	status,2,c
  3917   003618  EF10  F01B         	goto	u3931
  3918   00361C  EF12  F01B         	goto	u3930
  3919   003620                     u3931:
  3920   003620  EF1C  F01B         	goto	l4198
  3921   003624                     u3930:
  3922   003624                     l4194:
  3923   003624  0E00               	movlw	0
  3924   003626  6E01               	movwf	?___fltol^0,c
  3925   003628  0E00               	movlw	0
  3926   00362A  6E02               	movwf	(?___fltol+1)^0,c
  3927   00362C  0E00               	movlw	0
  3928   00362E  6E03               	movwf	(?___fltol+2)^0,c
  3929   003630  0E00               	movlw	0
  3930   003632  6E04               	movwf	(?___fltol+3)^0,c
  3931   003634  EF89  F01B         	goto	l984
  3932   003638                     l4198:
  3933   003638  C001  F005         	movff	___fltol@f1,??___fltol
  3934   00363C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3935   003640  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3936   003644  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3937   003648  0E20               	movlw	32
  3938   00364A  EF2C  F01B         	goto	u3940
  3939   00364E                     u3945:
  3940   00364E  90D8               	bcf	status,0,c
  3941   003650  3208               	rrcf	(??___fltol+3)^0,f,c
  3942   003652  3207               	rrcf	(??___fltol+2)^0,f,c
  3943   003654  3206               	rrcf	(??___fltol+1)^0,f,c
  3944   003656  3205               	rrcf	??___fltol^0,f,c
  3945   003658                     u3940:
  3946   003658  2EE8               	decfsz	wreg,f,c
  3947   00365A  EF27  F01B         	goto	u3945
  3948   00365E  5005               	movf	??___fltol^0,w,c
  3949   003660  6E09               	movwf	___fltol@sign1^0,c
  3950   003662  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3951   003664  0EFF               	movlw	255
  3952   003666  1601               	andwf	___fltol@f1^0,f,c
  3953   003668  0EFF               	movlw	255
  3954   00366A  1602               	andwf	(___fltol@f1+1)^0,f,c
  3955   00366C  0EFF               	movlw	255
  3956   00366E  1603               	andwf	(___fltol@f1+2)^0,f,c
  3957   003670  0E00               	movlw	0
  3958   003672  1604               	andwf	(___fltol@f1+3)^0,f,c
  3959   003674  0E96               	movlw	150
  3960   003676  5E0A               	subwf	___fltol@exp1^0,f,c
  3961   003678  BE0A               	btfsc	___fltol@exp1^0,7,c
  3962   00367A  EF43  F01B         	goto	u3950
  3963   00367E  EF41  F01B         	goto	u3951
  3964   003682                     u3951:
  3965   003682  EF59  F01B         	goto	l4218
  3966   003686                     u3950:
  3967   003686  500A               	movf	___fltol@exp1^0,w,c
  3968   003688  0A80               	xorlw	128
  3969   00368A  0F97               	addlw	151
  3970   00368C  B0D8               	btfsc	status,0,c
  3971   00368E  EF4B  F01B         	goto	u3961
  3972   003692  EF4D  F01B         	goto	u3960
  3973   003696                     u3961:
  3974   003696  EF4F  F01B         	goto	l4214
  3975   00369A                     u3960:
  3976   00369A  EF12  F01B         	goto	l4194
  3977   00369E                     l4214:
  3978   00369E  90D8               	bcf	status,0,c
  3979   0036A0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3980   0036A2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3981   0036A4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3982   0036A6  3201               	rrcf	___fltol@f1^0,f,c
  3983   0036A8  3E0A               	incfsz	___fltol@exp1^0,f,c
  3984   0036AA  EF4F  F01B         	goto	l4214
  3985   0036AE  EF71  F01B         	goto	l4228
  3986   0036B2                     l4218:
  3987   0036B2  0E1F               	movlw	31
  3988   0036B4  640A               	cpfsgt	___fltol@exp1^0,c
  3989   0036B6  EF5F  F01B         	goto	u3971
  3990   0036BA  EF61  F01B         	goto	u3970
  3991   0036BE                     u3971:
  3992   0036BE  EF69  F01B         	goto	l4226
  3993   0036C2                     u3970:
  3994   0036C2  EF12  F01B         	goto	l4194
  3995   0036C6                     l4224:
  3996   0036C6  90D8               	bcf	status,0,c
  3997   0036C8  3601               	rlcf	___fltol@f1^0,f,c
  3998   0036CA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3999   0036CC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4000   0036CE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4001   0036D0  060A               	decf	___fltol@exp1^0,f,c
  4002   0036D2                     l4226:
  4003   0036D2  500A               	movf	___fltol@exp1^0,w,c
  4004   0036D4  A4D8               	btfss	status,2,c
  4005   0036D6  EF6F  F01B         	goto	u3981
  4006   0036DA  EF71  F01B         	goto	u3980
  4007   0036DE                     u3981:
  4008   0036DE  EF63  F01B         	goto	l4224
  4009   0036E2                     u3980:
  4010   0036E2                     l4228:
  4011   0036E2  5009               	movf	___fltol@sign1^0,w,c
  4012   0036E4  B4D8               	btfsc	status,2,c
  4013   0036E6  EF77  F01B         	goto	u3991
  4014   0036EA  EF79  F01B         	goto	u3990
  4015   0036EE                     u3991:
  4016   0036EE  EF81  F01B         	goto	l4232
  4017   0036F2                     u3990:
  4018   0036F2  1E04               	comf	(___fltol@f1+3)^0,f,c
  4019   0036F4  1E03               	comf	(___fltol@f1+2)^0,f,c
  4020   0036F6  1E02               	comf	(___fltol@f1+1)^0,f,c
  4021   0036F8  6C01               	negf	___fltol@f1^0,c
  4022   0036FA  0E00               	movlw	0
  4023   0036FC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4024   0036FE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4025   003700  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4026   003702                     l4232:
  4027   003702  C001  F001         	movff	___fltol@f1,?___fltol
  4028   003706  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4029   00370A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4030   00370E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4031   003712                     l984:
  4032   003712  0012               	return		;funcret
  4033   003714                     __end_of___fltol:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function ___flsub *****************
  4037 ;; Defined at:
  4038 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  b               4   74[COMRAM] long 
  4041 ;;  a               4   78[COMRAM] long 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  4   74[COMRAM] long 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;Total ram usage:        8 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 2
  4060 ;; This function calls:
  4061 ;;		___fladd
  4062 ;; This function is called by:
  4063 ;;		_memoryUpdateTime
  4064 ;;		_RGB2Hue
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text22
  4069   00478C                     __ptext22:
  4070                           	callstack 0
  4071   00478C                     ___flsub:
  4072                           	callstack 27
  4073   00478C  0E00               	movlw	0
  4074   00478E  1A4F               	xorwf	___flsub@a^0,f,c
  4075   004790  0E00               	movlw	0
  4076   004792  1A50               	xorwf	(___flsub@a+1)^0,f,c
  4077   004794  0E00               	movlw	0
  4078   004796  1A51               	xorwf	(___flsub@a+2)^0,f,c
  4079   004798  0E80               	movlw	128
  4080   00479A  1A52               	xorwf	(___flsub@a+3)^0,f,c
  4081   00479C  C04B  F03B         	movff	___flsub@b,___fladd@b
  4082   0047A0  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  4083   0047A4  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  4084   0047A8  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  4085   0047AC  C04F  F03F         	movff	___flsub@a,___fladd@a
  4086   0047B0  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  4087   0047B4  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  4088   0047B8  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  4089   0047BC  EC36  F00D         	call	___fladd	;wreg free
  4090   0047C0  C03B  F04B         	movff	?___fladd,?___flsub
  4091   0047C4  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  4092   0047C8  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  4093   0047CC  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  4094   0047D0  0012               	return		;funcret
  4095   0047D2                     __end_of___flsub:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function ___fleq *****************
  4099 ;; Defined at:
  4100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  ff1             4    0[COMRAM] long 
  4103 ;;  ff2             4    4[COMRAM] long 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;		None               void
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4115 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;Total ram usage:       12 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_RGB2Hue
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text23
  4130   0039C0                     __ptext23:
  4131                           	callstack 0
  4132   0039C0                     ___fleq:
  4133                           	callstack 28
  4134   0039C0  0E00               	movlw	0
  4135   0039C2  1401               	andwf	___fleq@ff1^0,w,c
  4136   0039C4  6E09               	movwf	??___fleq^0,c
  4137   0039C6  0E00               	movlw	0
  4138   0039C8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4139   0039CA  6E0A               	movwf	(??___fleq+1)^0,c
  4140   0039CC  0E80               	movlw	128
  4141   0039CE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4142   0039D0  6E0B               	movwf	(??___fleq+2)^0,c
  4143   0039D2  0E7F               	movlw	127
  4144   0039D4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4145   0039D6  6E0C               	movwf	(??___fleq+3)^0,c
  4146   0039D8  5009               	movf	??___fleq^0,w,c
  4147   0039DA  100A               	iorwf	(??___fleq+1)^0,w,c
  4148   0039DC  100B               	iorwf	(??___fleq+2)^0,w,c
  4149   0039DE  100C               	iorwf	(??___fleq+3)^0,w,c
  4150   0039E0  A4D8               	btfss	status,2,c
  4151   0039E2  EFF5  F01C         	goto	u3901
  4152   0039E6  EFF7  F01C         	goto	u3900
  4153   0039EA                     u3901:
  4154   0039EA  EFFF  F01C         	goto	l4180
  4155   0039EE                     u3900:
  4156   0039EE  0E00               	movlw	0
  4157   0039F0  6E01               	movwf	___fleq@ff1^0,c
  4158   0039F2  0E00               	movlw	0
  4159   0039F4  6E02               	movwf	(___fleq@ff1+1)^0,c
  4160   0039F6  0E00               	movlw	0
  4161   0039F8  6E03               	movwf	(___fleq@ff1+2)^0,c
  4162   0039FA  0E00               	movlw	0
  4163   0039FC  6E04               	movwf	(___fleq@ff1+3)^0,c
  4164   0039FE                     l4180:
  4165   0039FE  0E00               	movlw	0
  4166   003A00  1405               	andwf	___fleq@ff2^0,w,c
  4167   003A02  6E09               	movwf	??___fleq^0,c
  4168   003A04  0E00               	movlw	0
  4169   003A06  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4170   003A08  6E0A               	movwf	(??___fleq+1)^0,c
  4171   003A0A  0E80               	movlw	128
  4172   003A0C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4173   003A0E  6E0B               	movwf	(??___fleq+2)^0,c
  4174   003A10  0E7F               	movlw	127
  4175   003A12  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4176   003A14  6E0C               	movwf	(??___fleq+3)^0,c
  4177   003A16  5009               	movf	??___fleq^0,w,c
  4178   003A18  100A               	iorwf	(??___fleq+1)^0,w,c
  4179   003A1A  100B               	iorwf	(??___fleq+2)^0,w,c
  4180   003A1C  100C               	iorwf	(??___fleq+3)^0,w,c
  4181   003A1E  A4D8               	btfss	status,2,c
  4182   003A20  EF14  F01D         	goto	u3911
  4183   003A24  EF16  F01D         	goto	u3910
  4184   003A28                     u3911:
  4185   003A28  EF1E  F01D         	goto	l4184
  4186   003A2C                     u3910:
  4187   003A2C  0E00               	movlw	0
  4188   003A2E  6E05               	movwf	___fleq@ff2^0,c
  4189   003A30  0E00               	movlw	0
  4190   003A32  6E06               	movwf	(___fleq@ff2+1)^0,c
  4191   003A34  0E00               	movlw	0
  4192   003A36  6E07               	movwf	(___fleq@ff2+2)^0,c
  4193   003A38  0E00               	movlw	0
  4194   003A3A  6E08               	movwf	(___fleq@ff2+3)^0,c
  4195   003A3C                     l4184:
  4196   003A3C  5005               	movf	___fleq@ff2^0,w,c
  4197   003A3E  1801               	xorwf	___fleq@ff1^0,w,c
  4198   003A40  E10F               	bnz	u3920
  4199   003A42  5006               	movf	(___fleq@ff2+1)^0,w,c
  4200   003A44  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4201   003A46  E10C               	bnz	u3920
  4202   003A48  5007               	movf	(___fleq@ff2+2)^0,w,c
  4203   003A4A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4204   003A4C  E109               	bnz	u3920
  4205   003A4E  5008               	movf	(___fleq@ff2+3)^0,w,c
  4206   003A50  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4207   003A52  B4D8               	btfsc	status,2,c
  4208   003A54  EF2E  F01D         	goto	u3921
  4209   003A58  EF30  F01D         	goto	u3920
  4210   003A5C                     u3921:
  4211   003A5C  EF33  F01D         	goto	l4188
  4212   003A60                     u3920:
  4213   003A60  90D8               	bcf	status,0,c
  4214   003A62  EF34  F01D         	goto	l946
  4215   003A66                     l4188:
  4216   003A66  80D8               	bsf	status,0,c
  4217   003A68                     l946:
  4218   003A68  0012               	return		;funcret
  4219   003A6A                     __end_of___fleq:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function ___fldiv *****************
  4223 ;; Defined at:
  4224 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  b               4   82[COMRAM] long 
  4227 ;;  a               4   86[COMRAM] long 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  grs             4    7[BANK0 ] unsigned long 
  4230 ;;  rem             4    0[BANK0 ] unsigned long 
  4231 ;;  new_exp         2    5[BANK0 ] short 
  4232 ;;  aexp            1   12[BANK0 ] unsigned char 
  4233 ;;  bexp            1   11[BANK0 ] unsigned char 
  4234 ;;  sign            1    4[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  4   82[COMRAM] unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;Total ram usage:       25 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_RGB2Hue
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text24
  4259   0027C0                     __ptext24:
  4260                           	callstack 0
  4261   0027C0                     ___fldiv:
  4262                           	callstack 28
  4263   0027C0  5056               	movf	(___fldiv@b+3)^0,w,c
  4264   0027C2  0B80               	andlw	128
  4265   0027C4  0100               	movlb	0	; () banked
  4266   0027C6  6F64               	movwf	___fldiv@sign& (0+255),b
  4267   0027C8  5056               	movf	(___fldiv@b+3)^0,w,c
  4268   0027CA  2456               	addwf	(___fldiv@b+3)^0,w,c
  4269   0027CC  6F6B               	movwf	___fldiv@bexp& (0+255),b
  4270   0027CE                     
  4271                           ; BSR set to: 0
  4272   0027CE  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4273   0027D0  EFEC  F013         	goto	u3671
  4274   0027D4  EFEE  F013         	goto	u3670
  4275   0027D8                     u3671:
  4276   0027D8  EFEF  F013         	goto	l4038
  4277   0027DC                     u3670:
  4278   0027DC                     
  4279                           ; BSR set to: 0
  4280   0027DC  816B               	bsf	___fldiv@bexp& (0+255),0,b
  4281   0027DE                     l4038:
  4282                           
  4283                           ; BSR set to: 0
  4284   0027DE  516B               	movf	___fldiv@bexp& (0+255),w,b
  4285   0027E0  B4D8               	btfsc	status,2,c
  4286   0027E2  EFF5  F013         	goto	u3681
  4287   0027E6  EFF7  F013         	goto	u3680
  4288   0027EA                     u3681:
  4289   0027EA  EF0C  F014         	goto	l4048
  4290   0027EE                     u3680:
  4291   0027EE                     
  4292                           ; BSR set to: 0
  4293   0027EE  296B               	incf	___fldiv@bexp& (0+255),w,b
  4294   0027F0  A4D8               	btfss	status,2,c
  4295   0027F2  EFFD  F013         	goto	u3691
  4296   0027F6  EFFF  F013         	goto	u3690
  4297   0027FA                     u3691:
  4298   0027FA  EF07  F014         	goto	l4044
  4299   0027FE                     u3690:
  4300   0027FE                     
  4301                           ; BSR set to: 0
  4302   0027FE  0E00               	movlw	0
  4303   002800  6E53               	movwf	___fldiv@b^0,c
  4304   002802  0E00               	movlw	0
  4305   002804  6E54               	movwf	(___fldiv@b+1)^0,c
  4306   002806  0E00               	movlw	0
  4307   002808  6E55               	movwf	(___fldiv@b+2)^0,c
  4308   00280A  0E00               	movlw	0
  4309   00280C  6E56               	movwf	(___fldiv@b+3)^0,c
  4310   00280E                     l4044:
  4311                           
  4312                           ; BSR set to: 0
  4313   00280E  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4314   002810                     
  4315                           ; BSR set to: 0
  4316   002810  0E00               	movlw	0
  4317   002812  6E56               	movwf	(___fldiv@b+3)^0,c
  4318   002814  EF14  F014         	goto	l4050
  4319   002818                     l4048:
  4320                           
  4321                           ; BSR set to: 0
  4322   002818  0E00               	movlw	0
  4323   00281A  6E53               	movwf	___fldiv@b^0,c
  4324   00281C  0E00               	movlw	0
  4325   00281E  6E54               	movwf	(___fldiv@b+1)^0,c
  4326   002820  0E00               	movlw	0
  4327   002822  6E55               	movwf	(___fldiv@b+2)^0,c
  4328   002824  0E00               	movlw	0
  4329   002826  6E56               	movwf	(___fldiv@b+3)^0,c
  4330   002828                     l4050:
  4331                           
  4332                           ; BSR set to: 0
  4333   002828  505A               	movf	(___fldiv@a+3)^0,w,c
  4334   00282A  0B80               	andlw	128
  4335   00282C  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  4336   00282E                     
  4337                           ; BSR set to: 0
  4338   00282E  505A               	movf	(___fldiv@a+3)^0,w,c
  4339   002830  245A               	addwf	(___fldiv@a+3)^0,w,c
  4340   002832  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4341   002834                     
  4342                           ; BSR set to: 0
  4343   002834  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4344   002836  EF1F  F014         	goto	u3701
  4345   00283A  EF21  F014         	goto	u3700
  4346   00283E                     u3701:
  4347   00283E  EF22  F014         	goto	l4058
  4348   002842                     u3700:
  4349   002842                     
  4350                           ; BSR set to: 0
  4351   002842  816C               	bsf	___fldiv@aexp& (0+255),0,b
  4352   002844                     l4058:
  4353                           
  4354                           ; BSR set to: 0
  4355   002844  516C               	movf	___fldiv@aexp& (0+255),w,b
  4356   002846  B4D8               	btfsc	status,2,c
  4357   002848  EF28  F014         	goto	u3711
  4358   00284C  EF2A  F014         	goto	u3710
  4359   002850                     u3711:
  4360   002850  EF3F  F014         	goto	l4068
  4361   002854                     u3710:
  4362   002854                     
  4363                           ; BSR set to: 0
  4364   002854  296C               	incf	___fldiv@aexp& (0+255),w,b
  4365   002856  A4D8               	btfss	status,2,c
  4366   002858  EF30  F014         	goto	u3721
  4367   00285C  EF32  F014         	goto	u3720
  4368   002860                     u3721:
  4369   002860  EF3A  F014         	goto	l4064
  4370   002864                     u3720:
  4371   002864                     
  4372                           ; BSR set to: 0
  4373   002864  0E00               	movlw	0
  4374   002866  6E57               	movwf	___fldiv@a^0,c
  4375   002868  0E00               	movlw	0
  4376   00286A  6E58               	movwf	(___fldiv@a+1)^0,c
  4377   00286C  0E00               	movlw	0
  4378   00286E  6E59               	movwf	(___fldiv@a+2)^0,c
  4379   002870  0E00               	movlw	0
  4380   002872  6E5A               	movwf	(___fldiv@a+3)^0,c
  4381   002874                     l4064:
  4382                           
  4383                           ; BSR set to: 0
  4384   002874  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4385   002876                     
  4386                           ; BSR set to: 0
  4387   002876  0E00               	movlw	0
  4388   002878  6E5A               	movwf	(___fldiv@a+3)^0,c
  4389   00287A  EF47  F014         	goto	l4070
  4390   00287E                     l4068:
  4391                           
  4392                           ; BSR set to: 0
  4393   00287E  0E00               	movlw	0
  4394   002880  6E57               	movwf	___fldiv@a^0,c
  4395   002882  0E00               	movlw	0
  4396   002884  6E58               	movwf	(___fldiv@a+1)^0,c
  4397   002886  0E00               	movlw	0
  4398   002888  6E59               	movwf	(___fldiv@a+2)^0,c
  4399   00288A  0E00               	movlw	0
  4400   00288C  6E5A               	movwf	(___fldiv@a+3)^0,c
  4401   00288E                     l4070:
  4402                           
  4403                           ; BSR set to: 0
  4404   00288E  5057               	movf	___fldiv@a^0,w,c
  4405   002890  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4406   002892  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4407   002894  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4408   002896  A4D8               	btfss	status,2,c
  4409   002898  EF50  F014         	goto	u3731
  4410   00289C  EF52  F014         	goto	u3730
  4411   0028A0                     u3731:
  4412   0028A0  EF6A  F014         	goto	l4082
  4413   0028A4                     u3730:
  4414   0028A4                     
  4415                           ; BSR set to: 0
  4416   0028A4  0E00               	movlw	0
  4417   0028A6  6E53               	movwf	___fldiv@b^0,c
  4418   0028A8  0E00               	movlw	0
  4419   0028AA  6E54               	movwf	(___fldiv@b+1)^0,c
  4420   0028AC  0E00               	movlw	0
  4421   0028AE  6E55               	movwf	(___fldiv@b+2)^0,c
  4422   0028B0  0E00               	movlw	0
  4423   0028B2  6E56               	movwf	(___fldiv@b+3)^0,c
  4424   0028B4                     
  4425                           ; BSR set to: 0
  4426   0028B4  0E80               	movlw	128
  4427   0028B6  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4428   0028B8  0E7F               	movlw	127
  4429   0028BA  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4430   0028BC                     l4076:
  4431                           
  4432                           ; BSR set to: 0
  4433   0028BC  5164               	movf	___fldiv@sign& (0+255),w,b
  4434   0028BE  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4435   0028C0                     
  4436                           ; BSR set to: 0
  4437   0028C0  C053  F053         	movff	___fldiv@b,?___fldiv
  4438   0028C4  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4439   0028C8  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4440   0028CC  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4441   0028D0  EFAD  F015         	goto	l1269
  4442   0028D4                     l4082:
  4443                           
  4444                           ; BSR set to: 0
  4445   0028D4  516B               	movf	___fldiv@bexp& (0+255),w,b
  4446   0028D6  A4D8               	btfss	status,2,c
  4447   0028D8  EF70  F014         	goto	u3741
  4448   0028DC  EF72  F014         	goto	u3740
  4449   0028E0                     u3741:
  4450   0028E0  EF7C  F014         	goto	l4090
  4451   0028E4                     u3740:
  4452   0028E4                     
  4453                           ; BSR set to: 0
  4454   0028E4  0E00               	movlw	0
  4455   0028E6  6E53               	movwf	?___fldiv^0,c
  4456   0028E8  0E00               	movlw	0
  4457   0028EA  6E54               	movwf	(?___fldiv+1)^0,c
  4458   0028EC  0E00               	movlw	0
  4459   0028EE  6E55               	movwf	(?___fldiv+2)^0,c
  4460   0028F0  0E00               	movlw	0
  4461   0028F2  6E56               	movwf	(?___fldiv+3)^0,c
  4462   0028F4  EFAD  F015         	goto	l1269
  4463   0028F8                     l4090:
  4464                           
  4465                           ; BSR set to: 0
  4466   0028F8  516C               	movf	___fldiv@aexp& (0+255),w,b
  4467   0028FA  C06B  F05B         	movff	___fldiv@bexp,??___fldiv
  4468   0028FE  6A5C               	clrf	(??___fldiv+1)^0,c
  4469   002900  5E5B               	subwf	??___fldiv^0,f,c
  4470   002902  0E00               	movlw	0
  4471   002904  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4472   002906  0E7F               	movlw	127
  4473   002908  245B               	addwf	??___fldiv^0,w,c
  4474   00290A  6F65               	movwf	___fldiv@new_exp& (0+255),b
  4475   00290C  0E00               	movlw	0
  4476   00290E  205C               	addwfc	(??___fldiv+1)^0,w,c
  4477   002910  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4478   002912                     
  4479                           ; BSR set to: 0
  4480   002912  C053  F060         	movff	___fldiv@b,___fldiv@rem
  4481   002916  C054  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  4482   00291A  C055  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  4483   00291E  C056  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  4484   002922                     
  4485                           ; BSR set to: 0
  4486   002922  0E00               	movlw	0
  4487   002924  6E53               	movwf	___fldiv@b^0,c
  4488   002926  0E00               	movlw	0
  4489   002928  6E54               	movwf	(___fldiv@b+1)^0,c
  4490   00292A  0E00               	movlw	0
  4491   00292C  6E55               	movwf	(___fldiv@b+2)^0,c
  4492   00292E  0E00               	movlw	0
  4493   002930  6E56               	movwf	(___fldiv@b+3)^0,c
  4494   002932                     
  4495                           ; BSR set to: 0
  4496   002932  0E00               	movlw	0
  4497   002934  6F67               	movwf	___fldiv@grs& (0+255),b
  4498   002936  0E00               	movlw	0
  4499   002938  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  4500   00293A  0E00               	movlw	0
  4501   00293C  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  4502   00293E  0E00               	movlw	0
  4503   002940  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  4504   002942                     
  4505                           ; BSR set to: 0
  4506   002942  0E00               	movlw	0
  4507   002944  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4508   002946  EFDD  F014         	goto	l1271
  4509   00294A                     l4100:
  4510                           
  4511                           ; BSR set to: 0
  4512   00294A  516C               	movf	___fldiv@aexp& (0+255),w,b
  4513   00294C  B4D8               	btfsc	status,2,c
  4514   00294E  EFAB  F014         	goto	u3751
  4515   002952  EFAD  F014         	goto	u3750
  4516   002956                     u3751:
  4517   002956  EFC4  F014         	goto	l4108
  4518   00295A                     u3750:
  4519   00295A                     
  4520                           ; BSR set to: 0
  4521   00295A  90D8               	bcf	status,0,c
  4522   00295C  3760               	rlcf	___fldiv@rem& (0+255),f,b
  4523   00295E  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4524   002960  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4525   002962  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4526   002964  90D8               	bcf	status,0,c
  4527   002966  3653               	rlcf	___fldiv@b^0,f,c
  4528   002968  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4529   00296A  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4530   00296C  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4531   00296E                     
  4532                           ; BSR set to: 0
  4533   00296E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4534   002970  EFBC  F014         	goto	u3761
  4535   002974  EFBE  F014         	goto	u3760
  4536   002978                     u3761:
  4537   002978  EFBF  F014         	goto	l1274
  4538   00297C                     u3760:
  4539   00297C                     
  4540                           ; BSR set to: 0
  4541   00297C  8053               	bsf	___fldiv@b^0,0,c
  4542   00297E                     l1274:
  4543                           
  4544                           ; BSR set to: 0
  4545   00297E  90D8               	bcf	status,0,c
  4546   002980  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4547   002982  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4548   002984  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4549   002986  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4550   002988                     l4108:
  4551                           
  4552                           ; BSR set to: 0
  4553   002988  5057               	movf	___fldiv@a^0,w,c
  4554   00298A  5D60               	subwf	___fldiv@rem& (0+255),w,b
  4555   00298C  5058               	movf	(___fldiv@a+1)^0,w,c
  4556   00298E  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4557   002990  5059               	movf	(___fldiv@a+2)^0,w,c
  4558   002992  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4559   002994  505A               	movf	(___fldiv@a+3)^0,w,c
  4560   002996  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4561   002998  A0D8               	btfss	status,0,c
  4562   00299A  EFD1  F014         	goto	u3771
  4563   00299E  EFD3  F014         	goto	u3770
  4564   0029A2                     u3771:
  4565   0029A2  EFDC  F014         	goto	l4114
  4566   0029A6                     u3770:
  4567   0029A6                     
  4568                           ; BSR set to: 0
  4569   0029A6  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4570   0029A8                     
  4571                           ; BSR set to: 0
  4572   0029A8  5057               	movf	___fldiv@a^0,w,c
  4573   0029AA  5F60               	subwf	___fldiv@rem& (0+255),f,b
  4574   0029AC  5058               	movf	(___fldiv@a+1)^0,w,c
  4575   0029AE  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4576   0029B0  5059               	movf	(___fldiv@a+2)^0,w,c
  4577   0029B2  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4578   0029B4  505A               	movf	(___fldiv@a+3)^0,w,c
  4579   0029B6  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4580   0029B8                     l4114:
  4581                           
  4582                           ; BSR set to: 0
  4583   0029B8  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  4584   0029BA                     l1271:
  4585                           
  4586                           ; BSR set to: 0
  4587   0029BA  0E19               	movlw	25
  4588   0029BC  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  4589   0029BE  EFE3  F014         	goto	u3781
  4590   0029C2  EFE5  F014         	goto	u3780
  4591   0029C6                     u3781:
  4592   0029C6  EFA5  F014         	goto	l4100
  4593   0029CA                     u3780:
  4594   0029CA                     
  4595                           ; BSR set to: 0
  4596   0029CA  5160               	movf	___fldiv@rem& (0+255),w,b
  4597   0029CC  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4598   0029CE  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4599   0029D0  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4600   0029D2  B4D8               	btfsc	status,2,c
  4601   0029D4  EFEE  F014         	goto	u3791
  4602   0029D8  EFF0  F014         	goto	u3790
  4603   0029DC                     u3791:
  4604   0029DC  EF08  F015         	goto	l4126
  4605   0029E0                     u3790:
  4606   0029E0                     
  4607                           ; BSR set to: 0
  4608   0029E0  8167               	bsf	___fldiv@grs& (0+255),0,b
  4609   0029E2  EF08  F015         	goto	l4126
  4610   0029E6                     l4120:
  4611                           
  4612                           ; BSR set to: 0
  4613   0029E6  90D8               	bcf	status,0,c
  4614   0029E8  3653               	rlcf	___fldiv@b^0,f,c
  4615   0029EA  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4616   0029EC  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4617   0029EE  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4618   0029F0                     
  4619                           ; BSR set to: 0
  4620   0029F0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4621   0029F2  EFFD  F014         	goto	u3801
  4622   0029F6  EFFF  F014         	goto	u3800
  4623   0029FA                     u3801:
  4624   0029FA  EF00  F015         	goto	l1280
  4625   0029FE                     u3800:
  4626   0029FE                     
  4627                           ; BSR set to: 0
  4628   0029FE  8053               	bsf	___fldiv@b^0,0,c
  4629   002A00                     l1280:
  4630                           
  4631                           ; BSR set to: 0
  4632   002A00  90D8               	bcf	status,0,c
  4633   002A02  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4634   002A04  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4635   002A06  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4636   002A08  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4637   002A0A  0765               	decf	___fldiv@new_exp& (0+255),f,b
  4638   002A0C  A0D8               	btfss	status,0,c
  4639   002A0E  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4640   002A10                     l4126:
  4641                           
  4642                           ; BSR set to: 0
  4643   002A10  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4644   002A12  EF0D  F015         	goto	u3811
  4645   002A16  EF0F  F015         	goto	u3810
  4646   002A1A                     u3811:
  4647   002A1A  EFF3  F014         	goto	l4120
  4648   002A1E                     u3810:
  4649   002A1E                     
  4650                           ; BSR set to: 0
  4651   002A1E  0E00               	movlw	0
  4652   002A20  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4653   002A22                     
  4654                           ; BSR set to: 0
  4655   002A22  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4656   002A24  EF16  F015         	goto	u3821
  4657   002A28  EF18  F015         	goto	u3820
  4658   002A2C                     u3821:
  4659   002A2C  EF3C  F015         	goto	l1282
  4660   002A30                     u3820:
  4661   002A30                     
  4662                           ; BSR set to: 0
  4663   002A30  0EFF               	movlw	255
  4664   002A32  1567               	andwf	___fldiv@grs& (0+255),w,b
  4665   002A34  6E5B               	movwf	??___fldiv^0,c
  4666   002A36  0EFF               	movlw	255
  4667   002A38  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4668   002A3A  6E5C               	movwf	(??___fldiv+1)^0,c
  4669   002A3C  0EFF               	movlw	255
  4670   002A3E  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4671   002A40  6E5D               	movwf	(??___fldiv+2)^0,c
  4672   002A42  0E7F               	movlw	127
  4673   002A44  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4674   002A46  6E5E               	movwf	(??___fldiv+3)^0,c
  4675   002A48  505B               	movf	??___fldiv^0,w,c
  4676   002A4A  105C               	iorwf	(??___fldiv+1)^0,w,c
  4677   002A4C  105D               	iorwf	(??___fldiv+2)^0,w,c
  4678   002A4E  105E               	iorwf	(??___fldiv+3)^0,w,c
  4679   002A50  B4D8               	btfsc	status,2,c
  4680   002A52  EF2D  F015         	goto	u3831
  4681   002A56  EF2F  F015         	goto	u3830
  4682   002A5A                     u3831:
  4683   002A5A  EF33  F015         	goto	l1283
  4684   002A5E                     u3830:
  4685   002A5E                     l4134:
  4686                           
  4687                           ; BSR set to: 0
  4688   002A5E  0E01               	movlw	1
  4689   002A60  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4690   002A62  EF3C  F015         	goto	l1282
  4691   002A66                     l1283:
  4692                           
  4693                           ; BSR set to: 0
  4694   002A66  A053               	btfss	___fldiv@b^0,0,c
  4695   002A68  EF38  F015         	goto	u3841
  4696   002A6C  EF3A  F015         	goto	u3840
  4697   002A70                     u3841:
  4698   002A70  EF3C  F015         	goto	l1282
  4699   002A74                     u3840:
  4700   002A74  EF2F  F015         	goto	l4134
  4701   002A78                     l1282:
  4702                           
  4703                           ; BSR set to: 0
  4704   002A78  516C               	movf	___fldiv@aexp& (0+255),w,b
  4705   002A7A  B4D8               	btfsc	status,2,c
  4706   002A7C  EF42  F015         	goto	u3851
  4707   002A80  EF44  F015         	goto	u3850
  4708   002A84                     u3851:
  4709   002A84  EF68  F015         	goto	l4146
  4710   002A88                     u3850:
  4711   002A88                     
  4712                           ; BSR set to: 0
  4713   002A88  0E01               	movlw	1
  4714   002A8A  2653               	addwf	___fldiv@b^0,f,c
  4715   002A8C  0E00               	movlw	0
  4716   002A8E  2254               	addwfc	(___fldiv@b+1)^0,f,c
  4717   002A90  2255               	addwfc	(___fldiv@b+2)^0,f,c
  4718   002A92  2256               	addwfc	(___fldiv@b+3)^0,f,c
  4719   002A94                     
  4720                           ; BSR set to: 0
  4721   002A94  A056               	btfss	(___fldiv@b+3)^0,0,c
  4722   002A96  EF4F  F015         	goto	u3861
  4723   002A9A  EF51  F015         	goto	u3860
  4724   002A9E                     u3861:
  4725   002A9E  EF68  F015         	goto	l4146
  4726   002AA2                     u3860:
  4727   002AA2                     
  4728                           ; BSR set to: 0
  4729   002AA2  C053  F05B         	movff	___fldiv@b,??___fldiv
  4730   002AA6  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  4731   002AAA  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  4732   002AAE  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  4733   002AB2  345E               	rlcf	(??___fldiv+3)^0,w,c
  4734   002AB4  325E               	rrcf	(??___fldiv+3)^0,f,c
  4735   002AB6  325D               	rrcf	(??___fldiv+2)^0,f,c
  4736   002AB8  325C               	rrcf	(??___fldiv+1)^0,f,c
  4737   002ABA  325B               	rrcf	??___fldiv^0,f,c
  4738   002ABC  C05B  F053         	movff	??___fldiv,___fldiv@b
  4739   002AC0  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  4740   002AC4  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  4741   002AC8  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  4742   002ACC                     
  4743                           ; BSR set to: 0
  4744   002ACC  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  4745   002ACE  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4746   002AD0                     l4146:
  4747                           
  4748                           ; BSR set to: 0
  4749   002AD0  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4750   002AD2  EF73  F015         	goto	u3871
  4751   002AD6  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4752   002AD8  E108               	bnz	u3870
  4753   002ADA  2965               	incf	___fldiv@new_exp& (0+255),w,b
  4754   002ADC  A0D8               	btfss	status,0,c
  4755   002ADE  EF73  F015         	goto	u3871
  4756   002AE2  EF75  F015         	goto	u3870
  4757   002AE6                     u3871:
  4758   002AE6  EF80  F015         	goto	l4150
  4759   002AEA                     u3870:
  4760   002AEA                     
  4761                           ; BSR set to: 0
  4762   002AEA  0E00               	movlw	0
  4763   002AEC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4764   002AEE  6965               	setf	___fldiv@new_exp& (0+255),b
  4765   002AF0  0E00               	movlw	0
  4766   002AF2  6E53               	movwf	___fldiv@b^0,c
  4767   002AF4  0E00               	movlw	0
  4768   002AF6  6E54               	movwf	(___fldiv@b+1)^0,c
  4769   002AF8  0E00               	movlw	0
  4770   002AFA  6E55               	movwf	(___fldiv@b+2)^0,c
  4771   002AFC  0E00               	movlw	0
  4772   002AFE  6E56               	movwf	(___fldiv@b+3)^0,c
  4773   002B00                     l4150:
  4774                           
  4775                           ; BSR set to: 0
  4776   002B00  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4777   002B02  EF8D  F015         	goto	u3880
  4778   002B06  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4779   002B08  E106               	bnz	u3881
  4780   002B0A  0565               	decf	___fldiv@new_exp& (0+255),w,b
  4781   002B0C  B0D8               	btfsc	status,0,c
  4782   002B0E  EF8B  F015         	goto	u3881
  4783   002B12  EF8D  F015         	goto	u3880
  4784   002B16                     u3881:
  4785   002B16  EF9B  F015         	goto	l4154
  4786   002B1A                     u3880:
  4787   002B1A                     
  4788                           ; BSR set to: 0
  4789   002B1A  0E00               	movlw	0
  4790   002B1C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4791   002B1E  0E00               	movlw	0
  4792   002B20  6F65               	movwf	___fldiv@new_exp& (0+255),b
  4793   002B22  0E00               	movlw	0
  4794   002B24  6E53               	movwf	___fldiv@b^0,c
  4795   002B26  0E00               	movlw	0
  4796   002B28  6E54               	movwf	(___fldiv@b+1)^0,c
  4797   002B2A  0E00               	movlw	0
  4798   002B2C  6E55               	movwf	(___fldiv@b+2)^0,c
  4799   002B2E  0E00               	movlw	0
  4800   002B30  6E56               	movwf	(___fldiv@b+3)^0,c
  4801   002B32  0E00               	movlw	0
  4802   002B34  6F64               	movwf	___fldiv@sign& (0+255),b
  4803   002B36                     l4154:
  4804                           
  4805                           ; BSR set to: 0
  4806   002B36  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  4807   002B3A                     
  4808                           ; BSR set to: 0
  4809   002B3A  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  4810   002B3C  EFA2  F015         	goto	u3891
  4811   002B40  EFA4  F015         	goto	u3890
  4812   002B44                     u3891:
  4813   002B44  EFA7  F015         	goto	l4160
  4814   002B48                     u3890:
  4815   002B48                     
  4816                           ; BSR set to: 0
  4817   002B48  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4818   002B4A  EFA8  F015         	goto	l4162
  4819   002B4E                     l4160:
  4820                           
  4821                           ; BSR set to: 0
  4822   002B4E  9E55               	bcf	(___fldiv@b+2)^0,7,c
  4823   002B50                     l4162:
  4824                           
  4825                           ; BSR set to: 0
  4826   002B50  90D8               	bcf	status,0,c
  4827   002B52  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  4828   002B54  6E56               	movwf	(___fldiv@b+3)^0,c
  4829   002B56  EF5E  F014         	goto	l4076
  4830   002B5A                     l1269:
  4831                           
  4832                           ; BSR set to: 0
  4833   002B5A  0012               	return		;funcret
  4834   002B5C                     __end_of___fldiv:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _LED_init *****************
  4838 ;; Defined at:
  4839 ;;		line 4 in file "LED.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		None
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;Total ram usage:        0 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text25
  4868   004A36                     __ptext25:
  4869                           	callstack 0
  4870   004A36                     _LED_init:
  4871                           	callstack 29
  4872   004A36                     
  4873                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  4874   004A36  9884               	bcf	132,4,c	;volatile
  4875                           
  4876                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  4877   004A38  9088               	bcf	136,0,c	;volatile
  4878                           
  4879                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  4880   004A3A  9086               	bcf	134,0,c	;volatile
  4881                           
  4882                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  4883   004A3C  987C               	bcf	124,4,c	;volatile
  4884                           
  4885                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  4886   004A3E  9080               	bcf	128,0,c	;volatile
  4887                           
  4888                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  4889   004A40  907E               	bcf	126,0,c	;volatile
  4890   004A42  0012               	return		;funcret
  4891   004A44                     __end_of_LED_init:
  4892                           	callstack 0
  4893                           
  4894 ;; *************** function _Interrupts_init *****************
  4895 ;; Defined at:
  4896 ;;		line 5 in file "interrupts.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		None
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; Hardware stack levels required when called: 1
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text26
  4925   004A50                     __ptext26:
  4926                           	callstack 0
  4927   004A50                     _Interrupts_init:
  4928                           	callstack 29
  4929   004A50                     
  4930                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  4931   004A50  010E               	movlb	14	; () banked
  4932   004A52  872D               	bsf	45,3,b	;volatile
  4933                           
  4934                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  4935   004A54  8AF2               	bsf	242,5,c	;volatile
  4936                           
  4937                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  4938   004A56  8CF2               	bsf	242,6,c	;volatile
  4939                           
  4940                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  4941   004A58  8EF2               	bsf	242,7,c	;volatile
  4942   004A5A                     
  4943                           ; BSR set to: 14
  4944   004A5A  0012               	return		;funcret
  4945   004A5C                     __end_of_Interrupts_init:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _Colour2Action *****************
  4949 ;; Defined at:
  4950 ;;		line 105 in file "colorfunctions.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  cf              2   90[COMRAM] PTR struct RGBC_rel
  4953 ;;		 -> colorf(22), 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 8
  4972 ;; This function calls:
  4973 ;;		_Blue_T180
  4974 ;;		_Green_L90
  4975 ;;		_LightBlue_L135
  4976 ;;		_Orange_R135
  4977 ;;		_Pink_rev1_L90
  4978 ;;		_Red_R90
  4979 ;;		_White
  4980 ;;		_Yellow_rev1_R90
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text27
  4987   002D7A                     __ptext27:
  4988                           	callstack 0
  4989   002D7A                     _Colour2Action:
  4990                           	callstack 22
  4991   002D7A                     
  4992                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  4993   002D7A  EE20 F014          	lfsr	2,20
  4994   002D7E  505B               	movf	Colour2Action@cf^0,w,c
  4995   002D80  26D9               	addwf	fsr2l,f,c
  4996   002D82  505C               	movf	(Colour2Action@cf+1)^0,w,c
  4997   002D84  22DA               	addwfc	fsr2h,f,c
  4998   002D86  50DE               	movf	postinc2,w,c
  4999   002D88  10DE               	iorwf	postinc2,w,c
  5000   002D8A  A4D8               	btfss	status,2,c
  5001   002D8C  EFCA  F016         	goto	u4131
  5002   002D90  EFCC  F016         	goto	u4130
  5003   002D94                     u4131:
  5004   002D94  EFD8  F016         	goto	l4390
  5005   002D98                     u4130:
  5006   002D98                     
  5007                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  5008   002D98  0EF6               	movlw	low _motorL
  5009   002D9A  6E21               	movwf	Red_R90@mL^0,c
  5010   002D9C  0E00               	movlw	high _motorL
  5011   002D9E  6E22               	movwf	(Red_R90@mL+1)^0,c
  5012   002DA0  0EED               	movlw	low _motorR
  5013   002DA2  6E23               	movwf	Red_R90@mR^0,c
  5014   002DA4  0E00               	movlw	high _motorR
  5015   002DA6  6E24               	movwf	(Red_R90@mR+1)^0,c
  5016   002DA8  EC4A  F021         	call	_Red_R90	;wreg free
  5017                           
  5018                           ;colorfunctions.c: 110:     }
  5019   002DAC  EFA8  F017         	goto	l639
  5020   002DB0                     l4390:
  5021   002DB0  EE20 F014          	lfsr	2,20
  5022   002DB4  505B               	movf	Colour2Action@cf^0,w,c
  5023   002DB6  26D9               	addwf	fsr2l,f,c
  5024   002DB8  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5025   002DBA  22DA               	addwfc	fsr2h,f,c
  5026   002DBC  04DE               	decf	postinc2,w,c
  5027   002DBE  10DE               	iorwf	postinc2,w,c
  5028   002DC0  A4D8               	btfss	status,2,c
  5029   002DC2  EFE5  F016         	goto	u4141
  5030   002DC6  EFE7  F016         	goto	u4140
  5031   002DCA                     u4141:
  5032   002DCA  EFF3  F016         	goto	l4394
  5033   002DCE                     u4140:
  5034   002DCE                     
  5035                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  5036   002DCE  0EF6               	movlw	low _motorL
  5037   002DD0  6E21               	movwf	Green_L90@mL^0,c
  5038   002DD2  0E00               	movlw	high _motorL
  5039   002DD4  6E22               	movwf	(Green_L90@mL+1)^0,c
  5040   002DD6  0EED               	movlw	low _motorR
  5041   002DD8  6E23               	movwf	Green_L90@mR^0,c
  5042   002DDA  0E00               	movlw	high _motorR
  5043   002DDC  6E24               	movwf	(Green_L90@mR+1)^0,c
  5044   002DDE  EC88  F021         	call	_Green_L90	;wreg free
  5045                           
  5046                           ;colorfunctions.c: 114:     }
  5047   002DE2  EFA8  F017         	goto	l639
  5048   002DE6                     l4394:
  5049   002DE6  EE20 F014          	lfsr	2,20
  5050   002DEA  505B               	movf	Colour2Action@cf^0,w,c
  5051   002DEC  26D9               	addwf	fsr2l,f,c
  5052   002DEE  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5053   002DF0  22DA               	addwfc	fsr2h,f,c
  5054   002DF2  0E02               	movlw	2
  5055   002DF4  18DE               	xorwf	postinc2,w,c
  5056   002DF6  10DE               	iorwf	postinc2,w,c
  5057   002DF8  A4D8               	btfss	status,2,c
  5058   002DFA  EF01  F017         	goto	u4151
  5059   002DFE  EF03  F017         	goto	u4150
  5060   002E02                     u4151:
  5061   002E02  EF0F  F017         	goto	l4398
  5062   002E06                     u4150:
  5063   002E06                     
  5064                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  5065   002E06  0EF6               	movlw	low _motorL
  5066   002E08  6E24               	movwf	Blue_T180@mL^0,c
  5067   002E0A  0E00               	movlw	high _motorL
  5068   002E0C  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5069   002E0E  0EED               	movlw	low _motorR
  5070   002E10  6E26               	movwf	Blue_T180@mR^0,c
  5071   002E12  0E00               	movlw	high _motorR
  5072   002E14  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5073   002E16  EC5D  F022         	call	_Blue_T180	;wreg free
  5074                           
  5075                           ;colorfunctions.c: 118:     }
  5076   002E1A  EFA8  F017         	goto	l639
  5077   002E1E                     l4398:
  5078   002E1E  EE20 F014          	lfsr	2,20
  5079   002E22  505B               	movf	Colour2Action@cf^0,w,c
  5080   002E24  26D9               	addwf	fsr2l,f,c
  5081   002E26  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5082   002E28  22DA               	addwfc	fsr2h,f,c
  5083   002E2A  0E03               	movlw	3
  5084   002E2C  18DE               	xorwf	postinc2,w,c
  5085   002E2E  10DE               	iorwf	postinc2,w,c
  5086   002E30  A4D8               	btfss	status,2,c
  5087   002E32  EF1D  F017         	goto	u4161
  5088   002E36  EF1F  F017         	goto	u4160
  5089   002E3A                     u4161:
  5090   002E3A  EF2B  F017         	goto	l4402
  5091   002E3E                     u4160:
  5092   002E3E                     
  5093                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5094   002E3E  0EF6               	movlw	low _motorL
  5095   002E40  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5096   002E42  0E00               	movlw	high _motorL
  5097   002E44  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5098   002E46  0EED               	movlw	low _motorR
  5099   002E48  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5100   002E4A  0E00               	movlw	high _motorR
  5101   002E4C  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5102   002E4E  EC35  F01D         	call	_Yellow_rev1_R90	;wreg free
  5103                           
  5104                           ;colorfunctions.c: 122:     }
  5105   002E52  EFA8  F017         	goto	l639
  5106   002E56                     l4402:
  5107   002E56  EE20 F014          	lfsr	2,20
  5108   002E5A  505B               	movf	Colour2Action@cf^0,w,c
  5109   002E5C  26D9               	addwf	fsr2l,f,c
  5110   002E5E  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5111   002E60  22DA               	addwfc	fsr2h,f,c
  5112   002E62  0E04               	movlw	4
  5113   002E64  18DE               	xorwf	postinc2,w,c
  5114   002E66  10DE               	iorwf	postinc2,w,c
  5115   002E68  A4D8               	btfss	status,2,c
  5116   002E6A  EF39  F017         	goto	u4171
  5117   002E6E  EF3B  F017         	goto	u4170
  5118   002E72                     u4171:
  5119   002E72  EF47  F017         	goto	l4406
  5120   002E76                     u4170:
  5121   002E76                     
  5122                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5123   002E76  0EF6               	movlw	low _motorL
  5124   002E78  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5125   002E7A  0E00               	movlw	high _motorL
  5126   002E7C  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5127   002E7E  0EED               	movlw	low _motorR
  5128   002E80  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5129   002E82  0E00               	movlw	high _motorR
  5130   002E84  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5131   002E86  EC89  F01D         	call	_Pink_rev1_L90	;wreg free
  5132                           
  5133                           ;colorfunctions.c: 126:     }
  5134   002E8A  EFA8  F017         	goto	l639
  5135   002E8E                     l4406:
  5136   002E8E  EE20 F014          	lfsr	2,20
  5137   002E92  505B               	movf	Colour2Action@cf^0,w,c
  5138   002E94  26D9               	addwf	fsr2l,f,c
  5139   002E96  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5140   002E98  22DA               	addwfc	fsr2h,f,c
  5141   002E9A  0E05               	movlw	5
  5142   002E9C  18DE               	xorwf	postinc2,w,c
  5143   002E9E  10DE               	iorwf	postinc2,w,c
  5144   002EA0  A4D8               	btfss	status,2,c
  5145   002EA2  EF55  F017         	goto	u4181
  5146   002EA6  EF57  F017         	goto	u4180
  5147   002EAA                     u4181:
  5148   002EAA  EF63  F017         	goto	l4410
  5149   002EAE                     u4180:
  5150   002EAE                     
  5151                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  5152   002EAE  0EF6               	movlw	low _motorL
  5153   002EB0  6E21               	movwf	Orange_R135@mL^0,c
  5154   002EB2  0E00               	movlw	high _motorL
  5155   002EB4  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5156   002EB6  0EED               	movlw	low _motorR
  5157   002EB8  6E23               	movwf	Orange_R135@mR^0,c
  5158   002EBA  0E00               	movlw	high _motorR
  5159   002EBC  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5160   002EBE  EC30  F01E         	call	_Orange_R135	;wreg free
  5161                           
  5162                           ;colorfunctions.c: 130:     }
  5163   002EC2  EFA8  F017         	goto	l639
  5164   002EC6                     l4410:
  5165   002EC6  EE20 F014          	lfsr	2,20
  5166   002ECA  505B               	movf	Colour2Action@cf^0,w,c
  5167   002ECC  26D9               	addwf	fsr2l,f,c
  5168   002ECE  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5169   002ED0  22DA               	addwfc	fsr2h,f,c
  5170   002ED2  0E06               	movlw	6
  5171   002ED4  18DE               	xorwf	postinc2,w,c
  5172   002ED6  10DE               	iorwf	postinc2,w,c
  5173   002ED8  A4D8               	btfss	status,2,c
  5174   002EDA  EF71  F017         	goto	u4191
  5175   002EDE  EF73  F017         	goto	u4190
  5176   002EE2                     u4191:
  5177   002EE2  EF7F  F017         	goto	l4414
  5178   002EE6                     u4190:
  5179   002EE6                     
  5180                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5181   002EE6  0EF6               	movlw	low _motorL
  5182   002EE8  6E21               	movwf	LightBlue_L135@mL^0,c
  5183   002EEA  0E00               	movlw	high _motorL
  5184   002EEC  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5185   002EEE  0EED               	movlw	low _motorR
  5186   002EF0  6E23               	movwf	LightBlue_L135@mR^0,c
  5187   002EF2  0E00               	movlw	high _motorR
  5188   002EF4  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5189   002EF6  EC82  F01E         	call	_LightBlue_L135	;wreg free
  5190                           
  5191                           ;colorfunctions.c: 134:     }
  5192   002EFA  EFA8  F017         	goto	l639
  5193   002EFE                     l4414:
  5194   002EFE  EE20 F014          	lfsr	2,20
  5195   002F02  505B               	movf	Colour2Action@cf^0,w,c
  5196   002F04  26D9               	addwf	fsr2l,f,c
  5197   002F06  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5198   002F08  22DA               	addwfc	fsr2h,f,c
  5199   002F0A  0E07               	movlw	7
  5200   002F0C  18DE               	xorwf	postinc2,w,c
  5201   002F0E  10DE               	iorwf	postinc2,w,c
  5202   002F10  A4D8               	btfss	status,2,c
  5203   002F12  EF8D  F017         	goto	u4201
  5204   002F16  EF8F  F017         	goto	u4200
  5205   002F1A                     u4201:
  5206   002F1A  EFA8  F017         	goto	l633
  5207   002F1E                     u4200:
  5208   002F1E                     
  5209                           ;colorfunctions.c: 136:     {;colorfunctions.c: 137:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5210   002F1E  0EF6               	movlw	low _motorL
  5211   002F20  0100               	movlb	0	; () banked
  5212   002F22  6F60               	movwf	White@mL& (0+255),b
  5213   002F24  0E00               	movlw	high _motorL
  5214   002F26  6F61               	movwf	(White@mL+1)& (0+255),b
  5215   002F28  0EED               	movlw	low _motorR
  5216   002F2A  6F62               	movwf	White@mR& (0+255),b
  5217   002F2C  0E00               	movlw	high _motorR
  5218   002F2E  6F63               	movwf	(White@mR+1)& (0+255),b
  5219   002F30  C0E8  F064         	movff	_movementCount,White@movementCount	;volatile
  5220   002F34  C0E9  F065         	movff	_movementCount+1,White@movementCount+1	;volatile
  5221   002F38  0E70               	movlw	low _movementMemory
  5222   002F3A  6F66               	movwf	White@movementMemory& (0+255),b
  5223   002F3C  0E01               	movlw	high _movementMemory
  5224   002F3E  6F67               	movwf	(White@movementMemory+1)& (0+255),b
  5225   002F40  0E20               	movlw	low _timerMemory
  5226   002F42  6F68               	movwf	White@timerMemory& (0+255),b
  5227   002F44  0E01               	movlw	high _timerMemory
  5228   002F46  6F69               	movwf	(White@timerMemory+1)& (0+255),b
  5229   002F48  EC96  F00F         	call	_White	;wreg free
  5230   002F4C  EFA8  F017         	goto	l639
  5231   002F50                     l633:
  5232   002F50                     l639:
  5233   002F50  0012               	return		;funcret
  5234   002F52                     __end_of_Colour2Action:
  5235                           	callstack 0
  5236                           
  5237 ;; *************** function _White *****************
  5238 ;; Defined at:
  5239 ;;		line 334 in file "dc_motor.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  5242 ;;		 -> motorL(9), 
  5243 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  5244 ;;		 -> motorR(9), 
  5245 ;;  movementCoun    2    4[BANK0 ] unsigned int 
  5246 ;;  movementMemo    2    6[BANK0 ] PTR volatile unsigned in
  5247 ;;		 -> movementMemory(40), 
  5248 ;;  timerMemory     2    8[BANK0 ] PTR volatile float 
  5249 ;;		 -> timerMemory(80), 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  tempTimer       4   10[BANK0 ] float 
  5252 ;;  i               2   14[BANK0 ] int 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5262 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;Total ram usage:       20 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 7
  5269 ;; This function calls:
  5270 ;;		_Blue_T180
  5271 ;;		_Green_L90
  5272 ;;		_LightBlue_L135
  5273 ;;		_Orange_R135
  5274 ;;		_Pink_rev1_L90
  5275 ;;		_Red_R90
  5276 ;;		_TimerReset
  5277 ;;		_Yellow_rev1_R90
  5278 ;;		___fladd
  5279 ;;		___flge
  5280 ;;		_fullSpeedAhead
  5281 ;;		_getTimerValue
  5282 ;;		_reverseHalfSquare
  5283 ;;		_rotate180left
  5284 ;;		_stop
  5285 ;; This function is called by:
  5286 ;;		_Colour2Action
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text28
  5291   001F2C                     __ptext28:
  5292                           	callstack 0
  5293   001F2C                     _White:
  5294                           	callstack 22
  5295   001F2C                     
  5296                           ;dc_motor.c: 334: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile float *timerMemory);dc_motor.c
      +                          : 335: {;dc_motor.c: 336:     LATDbits.LATD4 = 1;;
  5297   001F2C  887C               	bsf	124,4,c	;volatile
  5298                           
  5299                           ;dc_motor.c: 338:     while (!retracingDone){
  5300   001F2E  EFA9  F011         	goto	l3976
  5301   001F32                     l3898:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;dc_motor.c: 339:         reverseHalfSquare(mL,mR);
  5305   001F32  C060  F01B         	movff	White@mL,reverseHalfSquare@mL
  5306   001F36  C061  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5307   001F3A  C062  F01D         	movff	White@mR,reverseHalfSquare@mR
  5308   001F3E  C063  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5309   001F42  EC87  F020         	call	_reverseHalfSquare	;wreg free
  5310                           
  5311                           ;dc_motor.c: 340:         rotate180left(mL,mR);
  5312   001F46  C060  F020         	movff	White@mL,rotate180left@mL
  5313   001F4A  C061  F021         	movff	White@mL+1,rotate180left@mL+1
  5314   001F4E  C062  F022         	movff	White@mR,rotate180left@mR
  5315   001F52  C063  F023         	movff	White@mR+1,rotate180left@mR+1
  5316   001F56  EC87  F022         	call	_rotate180left	;wreg free
  5317   001F5A                     
  5318                           ;dc_motor.c: 341:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5319   001F5A  0E29               	movlw	41
  5320   001F5C  6E58               	movwf	(??_White+1)^0,c
  5321   001F5E  0E96               	movlw	150
  5322   001F60  6E57               	movwf	??_White^0,c
  5323   001F62  0E7F               	movlw	127
  5324   001F64                     u4317:
  5325   001F64  2EE8               	decfsz	wreg,f,c
  5326   001F66  D7FE               	bra	u4317
  5327   001F68  2E57               	decfsz	??_White^0,f,c
  5328   001F6A  D7FC               	bra	u4317
  5329   001F6C  2E58               	decfsz	(??_White+1)^0,f,c
  5330   001F6E  D7FA               	bra	u4317
  5331   001F70  F000               	nop	
  5332   001F72                     
  5333                           ;dc_motor.c: 342:         ForwardFlag = 0;
  5334   001F72  0E00               	movlw	0
  5335   001F74  0100               	movlb	0	; () banked
  5336   001F76  6FFF               	movwf	_ForwardFlag& (0+255),b	;volatile
  5337   001F78                     
  5338                           ; BSR set to: 0
  5339                           ;dc_motor.c: 343:         retracingDone = 1;
  5340   001F78  0E00               	movlw	0
  5341   001F7A  6FE7               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5342   001F7C  0E01               	movlw	1
  5343   001F7E  6FE6               	movwf	_retracingDone& (0+255),b	;volatile
  5344   001F80                     
  5345                           ; BSR set to: 0
  5346                           ;dc_motor.c: 345:         for (int i=movementCount; i>=0;i--){
  5347   001F80  C064  F06E         	movff	White@movementCount,White@i
  5348   001F84  C065  F06F         	movff	White@movementCount+1,White@i+1
  5349   001F88                     l3908:
  5350                           
  5351                           ; BSR set to: 0
  5352   001F88  BF6F               	btfsc	(White@i+1)& (0+255),7,b
  5353   001F8A  EFCB  F00F         	goto	u3520
  5354   001F8E  EFC9  F00F         	goto	u3521
  5355   001F92                     u3521:
  5356   001F92  EFCD  F00F         	goto	l325
  5357   001F96                     u3520:
  5358   001F96  EFA9  F011         	goto	l3976
  5359   001F9A                     l325:
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;dc_motor.c: 346:             LATDbits.LATD4 = 1;;
  5363   001F9A  887C               	bsf	124,4,c	;volatile
  5364   001F9C                     
  5365                           ; BSR set to: 0
  5366                           ;dc_motor.c: 347:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5367   001F9C  0E11               	movlw	17
  5368   001F9E  6E58               	movwf	(??_White+1)^0,c
  5369   001FA0  0E3C               	movlw	60
  5370   001FA2  6E57               	movwf	??_White^0,c
  5371   001FA4  0ECB               	movlw	203
  5372   001FA6                     u4327:
  5373   001FA6  2EE8               	decfsz	wreg,f,c
  5374   001FA8  D7FE               	bra	u4327
  5375   001FAA  2E57               	decfsz	??_White^0,f,c
  5376   001FAC  D7FC               	bra	u4327
  5377   001FAE  2E58               	decfsz	(??_White+1)^0,f,c
  5378   001FB0  D7FA               	bra	u4327
  5379   001FB2  F000               	nop	
  5380   001FB4                     
  5381                           ;dc_motor.c: 348:             if (movementMemory[i]==0){
  5382   001FB4  90D8               	bcf	status,0,c
  5383   001FB6  0100               	movlb	0	; () banked
  5384   001FB8  356E               	rlcf	White@i& (0+255),w,b
  5385   001FBA  6ED9               	movwf	fsr2l,c
  5386   001FBC  356F               	rlcf	(White@i+1)& (0+255),w,b
  5387   001FBE  6EDA               	movwf	fsr2h,c
  5388   001FC0  5166               	movf	White@movementMemory& (0+255),w,b
  5389   001FC2  26D9               	addwf	fsr2l,f,c
  5390   001FC4  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5391   001FC6  22DA               	addwfc	fsr2h,f,c
  5392   001FC8  50DE               	movf	postinc2,w,c
  5393   001FCA  10DE               	iorwf	postinc2,w,c
  5394   001FCC  A4D8               	btfss	status,2,c
  5395   001FCE  EFEB  F00F         	goto	u3531
  5396   001FD2  EFED  F00F         	goto	u3530
  5397   001FD6                     u3531:
  5398   001FD6  EFF9  F00F         	goto	l3918
  5399   001FDA                     u3530:
  5400   001FDA                     
  5401                           ; BSR set to: 0
  5402                           ;dc_motor.c: 349:                 Red_R90(mL,mR);}
  5403   001FDA  C060  F021         	movff	White@mL,Red_R90@mL
  5404   001FDE  C061  F022         	movff	White@mL+1,Red_R90@mL+1
  5405   001FE2  C062  F023         	movff	White@mR,Red_R90@mR
  5406   001FE6  C063  F024         	movff	White@mR+1,Red_R90@mR+1
  5407   001FEA  EC4A  F021         	call	_Red_R90	;wreg free
  5408   001FEE  EFD1  F010         	goto	l3946
  5409   001FF2                     l3918:
  5410                           
  5411                           ; BSR set to: 0
  5412   001FF2  90D8               	bcf	status,0,c
  5413   001FF4  356E               	rlcf	White@i& (0+255),w,b
  5414   001FF6  6ED9               	movwf	fsr2l,c
  5415   001FF8  356F               	rlcf	(White@i+1)& (0+255),w,b
  5416   001FFA  6EDA               	movwf	fsr2h,c
  5417   001FFC  5166               	movf	White@movementMemory& (0+255),w,b
  5418   001FFE  26D9               	addwf	fsr2l,f,c
  5419   002000  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5420   002002  22DA               	addwfc	fsr2h,f,c
  5421   002004  04DE               	decf	postinc2,w,c
  5422   002006  10DE               	iorwf	postinc2,w,c
  5423   002008  A4D8               	btfss	status,2,c
  5424   00200A  EF09  F010         	goto	u3541
  5425   00200E  EF0B  F010         	goto	u3540
  5426   002012                     u3541:
  5427   002012  EF17  F010         	goto	l3922
  5428   002016                     u3540:
  5429   002016                     
  5430                           ; BSR set to: 0
  5431                           ;dc_motor.c: 351:                 Green_L90(mL,mR);}
  5432   002016  C060  F021         	movff	White@mL,Green_L90@mL
  5433   00201A  C061  F022         	movff	White@mL+1,Green_L90@mL+1
  5434   00201E  C062  F023         	movff	White@mR,Green_L90@mR
  5435   002022  C063  F024         	movff	White@mR+1,Green_L90@mR+1
  5436   002026  EC88  F021         	call	_Green_L90	;wreg free
  5437   00202A  EFD1  F010         	goto	l3946
  5438   00202E                     l3922:
  5439                           
  5440                           ; BSR set to: 0
  5441   00202E  90D8               	bcf	status,0,c
  5442   002030  356E               	rlcf	White@i& (0+255),w,b
  5443   002032  6ED9               	movwf	fsr2l,c
  5444   002034  356F               	rlcf	(White@i+1)& (0+255),w,b
  5445   002036  6EDA               	movwf	fsr2h,c
  5446   002038  5166               	movf	White@movementMemory& (0+255),w,b
  5447   00203A  26D9               	addwf	fsr2l,f,c
  5448   00203C  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5449   00203E  22DA               	addwfc	fsr2h,f,c
  5450   002040  0E02               	movlw	2
  5451   002042  18DE               	xorwf	postinc2,w,c
  5452   002044  10DE               	iorwf	postinc2,w,c
  5453   002046  A4D8               	btfss	status,2,c
  5454   002048  EF28  F010         	goto	u3551
  5455   00204C  EF2A  F010         	goto	u3550
  5456   002050                     u3551:
  5457   002050  EF36  F010         	goto	l3926
  5458   002054                     u3550:
  5459   002054                     
  5460                           ; BSR set to: 0
  5461                           ;dc_motor.c: 353:                 Blue_T180(mL,mR);}
  5462   002054  C060  F024         	movff	White@mL,Blue_T180@mL
  5463   002058  C061  F025         	movff	White@mL+1,Blue_T180@mL+1
  5464   00205C  C062  F026         	movff	White@mR,Blue_T180@mR
  5465   002060  C063  F027         	movff	White@mR+1,Blue_T180@mR+1
  5466   002064  EC5D  F022         	call	_Blue_T180	;wreg free
  5467   002068  EFD1  F010         	goto	l3946
  5468   00206C                     l3926:
  5469                           
  5470                           ; BSR set to: 0
  5471   00206C  90D8               	bcf	status,0,c
  5472   00206E  356E               	rlcf	White@i& (0+255),w,b
  5473   002070  6ED9               	movwf	fsr2l,c
  5474   002072  356F               	rlcf	(White@i+1)& (0+255),w,b
  5475   002074  6EDA               	movwf	fsr2h,c
  5476   002076  5166               	movf	White@movementMemory& (0+255),w,b
  5477   002078  26D9               	addwf	fsr2l,f,c
  5478   00207A  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5479   00207C  22DA               	addwfc	fsr2h,f,c
  5480   00207E  0E03               	movlw	3
  5481   002080  18DE               	xorwf	postinc2,w,c
  5482   002082  10DE               	iorwf	postinc2,w,c
  5483   002084  A4D8               	btfss	status,2,c
  5484   002086  EF47  F010         	goto	u3561
  5485   00208A  EF49  F010         	goto	u3560
  5486   00208E                     u3561:
  5487   00208E  EF55  F010         	goto	l3930
  5488   002092                     u3560:
  5489   002092                     
  5490                           ; BSR set to: 0
  5491                           ;dc_motor.c: 355:                 Yellow_rev1_R90(mL,mR);}
  5492   002092  C060  F021         	movff	White@mL,Yellow_rev1_R90@mL
  5493   002096  C061  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  5494   00209A  C062  F023         	movff	White@mR,Yellow_rev1_R90@mR
  5495   00209E  C063  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  5496   0020A2  EC35  F01D         	call	_Yellow_rev1_R90	;wreg free
  5497   0020A6  EFD1  F010         	goto	l3946
  5498   0020AA                     l3930:
  5499                           
  5500                           ; BSR set to: 0
  5501   0020AA  90D8               	bcf	status,0,c
  5502   0020AC  356E               	rlcf	White@i& (0+255),w,b
  5503   0020AE  6ED9               	movwf	fsr2l,c
  5504   0020B0  356F               	rlcf	(White@i+1)& (0+255),w,b
  5505   0020B2  6EDA               	movwf	fsr2h,c
  5506   0020B4  5166               	movf	White@movementMemory& (0+255),w,b
  5507   0020B6  26D9               	addwf	fsr2l,f,c
  5508   0020B8  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5509   0020BA  22DA               	addwfc	fsr2h,f,c
  5510   0020BC  0E04               	movlw	4
  5511   0020BE  18DE               	xorwf	postinc2,w,c
  5512   0020C0  10DE               	iorwf	postinc2,w,c
  5513   0020C2  A4D8               	btfss	status,2,c
  5514   0020C4  EF66  F010         	goto	u3571
  5515   0020C8  EF68  F010         	goto	u3570
  5516   0020CC                     u3571:
  5517   0020CC  EF74  F010         	goto	l3934
  5518   0020D0                     u3570:
  5519   0020D0                     
  5520                           ; BSR set to: 0
  5521                           ;dc_motor.c: 357:                 Pink_rev1_L90(mL,mR);}
  5522   0020D0  C060  F021         	movff	White@mL,Pink_rev1_L90@mL
  5523   0020D4  C061  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  5524   0020D8  C062  F023         	movff	White@mR,Pink_rev1_L90@mR
  5525   0020DC  C063  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  5526   0020E0  EC89  F01D         	call	_Pink_rev1_L90	;wreg free
  5527   0020E4  EFD1  F010         	goto	l3946
  5528   0020E8                     l3934:
  5529                           
  5530                           ; BSR set to: 0
  5531   0020E8  90D8               	bcf	status,0,c
  5532   0020EA  356E               	rlcf	White@i& (0+255),w,b
  5533   0020EC  6ED9               	movwf	fsr2l,c
  5534   0020EE  356F               	rlcf	(White@i+1)& (0+255),w,b
  5535   0020F0  6EDA               	movwf	fsr2h,c
  5536   0020F2  5166               	movf	White@movementMemory& (0+255),w,b
  5537   0020F4  26D9               	addwf	fsr2l,f,c
  5538   0020F6  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5539   0020F8  22DA               	addwfc	fsr2h,f,c
  5540   0020FA  0E05               	movlw	5
  5541   0020FC  18DE               	xorwf	postinc2,w,c
  5542   0020FE  10DE               	iorwf	postinc2,w,c
  5543   002100  A4D8               	btfss	status,2,c
  5544   002102  EF85  F010         	goto	u3581
  5545   002106  EF87  F010         	goto	u3580
  5546   00210A                     u3581:
  5547   00210A  EF93  F010         	goto	l3938
  5548   00210E                     u3580:
  5549   00210E                     
  5550                           ; BSR set to: 0
  5551                           ;dc_motor.c: 359:                 Orange_R135(mL,mR);}
  5552   00210E  C060  F021         	movff	White@mL,Orange_R135@mL
  5553   002112  C061  F022         	movff	White@mL+1,Orange_R135@mL+1
  5554   002116  C062  F023         	movff	White@mR,Orange_R135@mR
  5555   00211A  C063  F024         	movff	White@mR+1,Orange_R135@mR+1
  5556   00211E  EC30  F01E         	call	_Orange_R135	;wreg free
  5557   002122  EFD1  F010         	goto	l3946
  5558   002126                     l3938:
  5559                           
  5560                           ; BSR set to: 0
  5561   002126  90D8               	bcf	status,0,c
  5562   002128  356E               	rlcf	White@i& (0+255),w,b
  5563   00212A  6ED9               	movwf	fsr2l,c
  5564   00212C  356F               	rlcf	(White@i+1)& (0+255),w,b
  5565   00212E  6EDA               	movwf	fsr2h,c
  5566   002130  5166               	movf	White@movementMemory& (0+255),w,b
  5567   002132  26D9               	addwf	fsr2l,f,c
  5568   002134  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5569   002136  22DA               	addwfc	fsr2h,f,c
  5570   002138  0E06               	movlw	6
  5571   00213A  18DE               	xorwf	postinc2,w,c
  5572   00213C  10DE               	iorwf	postinc2,w,c
  5573   00213E  A4D8               	btfss	status,2,c
  5574   002140  EFA4  F010         	goto	u3591
  5575   002144  EFA6  F010         	goto	u3590
  5576   002148                     u3591:
  5577   002148  EFB2  F010         	goto	l3942
  5578   00214C                     u3590:
  5579   00214C                     
  5580                           ; BSR set to: 0
  5581                           ;dc_motor.c: 361:                 LightBlue_L135(mL,mR);}
  5582   00214C  C060  F021         	movff	White@mL,LightBlue_L135@mL
  5583   002150  C061  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  5584   002154  C062  F023         	movff	White@mR,LightBlue_L135@mR
  5585   002158  C063  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  5586   00215C  EC82  F01E         	call	_LightBlue_L135	;wreg free
  5587   002160  EFD1  F010         	goto	l3946
  5588   002164                     l3942:
  5589                           
  5590                           ; BSR set to: 0
  5591   002164  90D8               	bcf	status,0,c
  5592   002166  356E               	rlcf	White@i& (0+255),w,b
  5593   002168  6ED9               	movwf	fsr2l,c
  5594   00216A  356F               	rlcf	(White@i+1)& (0+255),w,b
  5595   00216C  6EDA               	movwf	fsr2h,c
  5596   00216E  5166               	movf	White@movementMemory& (0+255),w,b
  5597   002170  26D9               	addwf	fsr2l,f,c
  5598   002172  5167               	movf	(White@movementMemory+1)& (0+255),w,b
  5599   002174  22DA               	addwfc	fsr2h,f,c
  5600   002176  0E07               	movlw	7
  5601   002178  18DE               	xorwf	postinc2,w,c
  5602   00217A  10DE               	iorwf	postinc2,w,c
  5603   00217C  A4D8               	btfss	status,2,c
  5604   00217E  EFC3  F010         	goto	u3601
  5605   002182  EFC5  F010         	goto	u3600
  5606   002186                     u3601:
  5607   002186  EFD1  F010         	goto	l336
  5608   00218A                     u3600:
  5609   00218A                     
  5610                           ; BSR set to: 0
  5611                           ;dc_motor.c: 363:                 stop(mL,mR);}
  5612   00218A  C060  F014         	movff	White@mL,stop@mL
  5613   00218E  C061  F015         	movff	White@mL+1,stop@mL+1
  5614   002192  C062  F016         	movff	White@mR,stop@mR
  5615   002196  C063  F017         	movff	White@mR+1,stop@mR+1
  5616   00219A  ECDD  F01D         	call	_stop	;wreg free
  5617   00219E  EFD1  F010         	goto	l3946
  5618   0021A2                     l336:
  5619   0021A2                     l3946:
  5620                           
  5621                           ;dc_motor.c: 364:             LATDbits.LATD4 = 1;;
  5622   0021A2  887C               	bsf	124,4,c	;volatile
  5623   0021A4                     
  5624                           ;dc_motor.c: 366:             float tempTimer = 0;
  5625   0021A4  0E00               	movlw	0
  5626   0021A6  0100               	movlb	0	; () banked
  5627   0021A8  6F6A               	movwf	White@tempTimer& (0+255),b
  5628   0021AA  0E00               	movlw	0
  5629   0021AC  6F6B               	movwf	(White@tempTimer+1)& (0+255),b
  5630   0021AE  0E00               	movlw	0
  5631   0021B0  6F6C               	movwf	(White@tempTimer+2)& (0+255),b
  5632   0021B2  0E00               	movlw	0
  5633   0021B4  6F6D               	movwf	(White@tempTimer+3)& (0+255),b
  5634   0021B6                     
  5635                           ; BSR set to: 0
  5636                           ;dc_motor.c: 367:             TimerReset();
  5637   0021B6  EC3D  F025         	call	_TimerReset	;wreg free
  5638   0021BA                     
  5639                           ;dc_motor.c: 368:             fullSpeedAhead(mL,mR);
  5640   0021BA  C060  F014         	movff	White@mL,fullSpeedAhead@mL
  5641   0021BE  C061  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  5642   0021C2  C062  F016         	movff	White@mR,fullSpeedAhead@mR
  5643   0021C6  C063  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  5644   0021CA  ECCA  F020         	call	_fullSpeedAhead	;wreg free
  5645   0021CE                     
  5646                           ;dc_motor.c: 369:             if (timerMemory[i]<0)
  5647   0021CE  90D8               	bcf	status,0,c
  5648   0021D0  0100               	movlb	0	; () banked
  5649   0021D2  356E               	rlcf	White@i& (0+255),w,b
  5650   0021D4  6ED9               	movwf	fsr2l,c
  5651   0021D6  356F               	rlcf	(White@i+1)& (0+255),w,b
  5652   0021D8  6EDA               	movwf	fsr2h,c
  5653   0021DA  90D8               	bcf	status,0,c
  5654   0021DC  36D9               	rlcf	fsr2l,f,c
  5655   0021DE  36DA               	rlcf	fsr2h,f,c
  5656   0021E0  5168               	movf	White@timerMemory& (0+255),w,b
  5657   0021E2  26D9               	addwf	fsr2l,f,c
  5658   0021E4  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5659   0021E6  22DA               	addwfc	fsr2h,f,c
  5660   0021E8  0E03               	movlw	3
  5661   0021EA  BEDB               	btfsc	plusw2,7,c
  5662   0021EC  EFFC  F010         	goto	u3610
  5663   0021F0  EFFA  F010         	goto	u3611
  5664   0021F4                     u3611:
  5665   0021F4  EF42  F011         	goto	l3962
  5666   0021F8                     u3610:
  5667   0021F8  EF08  F011         	goto	l3960
  5668   0021FC                     l3958:
  5669                           
  5670                           ;dc_motor.c: 372:                 {;dc_motor.c: 373:                     tempTimer = get
      +                          TimerValue();
  5671   0021FC  EC00  F022         	call	_getTimerValue	;wreg free
  5672   002200  C033  F06A         	movff	?_getTimerValue,White@tempTimer
  5673   002204  C034  F06B         	movff	?_getTimerValue+1,White@tempTimer+1
  5674   002208  C035  F06C         	movff	?_getTimerValue+2,White@tempTimer+2
  5675   00220C  C036  F06D         	movff	?_getTimerValue+3,White@tempTimer+3
  5676   002210                     l3960:
  5677                           
  5678                           ;dc_motor.c: 371:                 while(tempTimer <(timerMemory[i]+_recogniseColour))
  5679   002210  C06A  F04B         	movff	White@tempTimer,___flge@ff1
  5680   002214  C06B  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  5681   002218  C06C  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  5682   00221C  C06D  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  5683   002220  0E00               	movlw	0
  5684   002222  6E3F               	movwf	___fladd@a^0,c
  5685   002224  0E80               	movlw	128
  5686   002226  6E40               	movwf	(___fladd@a+1)^0,c
  5687   002228  0E22               	movlw	34
  5688   00222A  6E41               	movwf	(___fladd@a+2)^0,c
  5689   00222C  0E44               	movlw	68
  5690   00222E  6E42               	movwf	(___fladd@a+3)^0,c
  5691   002230  90D8               	bcf	status,0,c
  5692   002232  0100               	movlb	0	; () banked
  5693   002234  356E               	rlcf	White@i& (0+255),w,b
  5694   002236  6ED9               	movwf	fsr2l,c
  5695   002238  356F               	rlcf	(White@i+1)& (0+255),w,b
  5696   00223A  6EDA               	movwf	fsr2h,c
  5697   00223C  90D8               	bcf	status,0,c
  5698   00223E  36D9               	rlcf	fsr2l,f,c
  5699   002240  36DA               	rlcf	fsr2h,f,c
  5700   002242  5168               	movf	White@timerMemory& (0+255),w,b
  5701   002244  26D9               	addwf	fsr2l,f,c
  5702   002246  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5703   002248  22DA               	addwfc	fsr2h,f,c
  5704   00224A  CFDE F03B          	movff	postinc2,___fladd@b
  5705   00224E  CFDE F03C          	movff	postinc2,___fladd@b+1
  5706   002252  CFDE F03D          	movff	postinc2,___fladd@b+2
  5707   002256  CFDE F03E          	movff	postinc2,___fladd@b+3
  5708   00225A  EC36  F00D         	call	___fladd	;wreg free
  5709   00225E  C03B  F04F         	movff	?___fladd,___flge@ff2
  5710   002262  C03C  F050         	movff	?___fladd+1,___flge@ff2+1
  5711   002266  C03D  F051         	movff	?___fladd+2,___flge@ff2+2
  5712   00226A  C03E  F052         	movff	?___fladd+3,___flge@ff2+3
  5713   00226E  EC8A  F01B         	call	___flge	;wreg free
  5714   002272  A0D8               	btfss	status,0,c
  5715   002274  EF3E  F011         	goto	u3621
  5716   002278  EF40  F011         	goto	u3620
  5717   00227C                     u3621:
  5718   00227C  EFFE  F010         	goto	l3958
  5719   002280                     u3620:
  5720   002280  EF99  F011         	goto	l3970
  5721   002284                     l3962:
  5722                           
  5723                           ; BSR set to: 0
  5724   002284  0E00               	movlw	0
  5725   002286  6E4B               	movwf	___flge@ff1^0,c
  5726   002288  0E00               	movlw	0
  5727   00228A  6E4C               	movwf	(___flge@ff1+1)^0,c
  5728   00228C  0E00               	movlw	0
  5729   00228E  6E4D               	movwf	(___flge@ff1+2)^0,c
  5730   002290  0E00               	movlw	0
  5731   002292  6E4E               	movwf	(___flge@ff1+3)^0,c
  5732   002294  90D8               	bcf	status,0,c
  5733   002296  356E               	rlcf	White@i& (0+255),w,b
  5734   002298  6ED9               	movwf	fsr2l,c
  5735   00229A  356F               	rlcf	(White@i+1)& (0+255),w,b
  5736   00229C  6EDA               	movwf	fsr2h,c
  5737   00229E  90D8               	bcf	status,0,c
  5738   0022A0  36D9               	rlcf	fsr2l,f,c
  5739   0022A2  36DA               	rlcf	fsr2h,f,c
  5740   0022A4  5168               	movf	White@timerMemory& (0+255),w,b
  5741   0022A6  26D9               	addwf	fsr2l,f,c
  5742   0022A8  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5743   0022AA  22DA               	addwfc	fsr2h,f,c
  5744   0022AC  CFDE F04F          	movff	postinc2,___flge@ff2
  5745   0022B0  CFDE F050          	movff	postinc2,___flge@ff2+1
  5746   0022B4  CFDE F051          	movff	postinc2,___flge@ff2+2
  5747   0022B8  CFDE F052          	movff	postinc2,___flge@ff2+3
  5748   0022BC  EC8A  F01B         	call	___flge	;wreg free
  5749   0022C0  B0D8               	btfsc	status,0,c
  5750   0022C2  EF65  F011         	goto	u3631
  5751   0022C6  EF67  F011         	goto	u3630
  5752   0022CA                     u3631:
  5753   0022CA  EF99  F011         	goto	l3970
  5754   0022CE                     u3630:
  5755   0022CE  EF73  F011         	goto	l3968
  5756   0022D2                     l3966:
  5757                           
  5758                           ;dc_motor.c: 377:                 {;dc_motor.c: 378:                     tempTimer = get
      +                          TimerValue();
  5759   0022D2  EC00  F022         	call	_getTimerValue	;wreg free
  5760   0022D6  C033  F06A         	movff	?_getTimerValue,White@tempTimer
  5761   0022DA  C034  F06B         	movff	?_getTimerValue+1,White@tempTimer+1
  5762   0022DE  C035  F06C         	movff	?_getTimerValue+2,White@tempTimer+2
  5763   0022E2  C036  F06D         	movff	?_getTimerValue+3,White@tempTimer+3
  5764   0022E6                     l3968:
  5765                           
  5766                           ;dc_motor.c: 376:                 while(tempTimer<timerMemory[i])
  5767   0022E6  C06A  F04B         	movff	White@tempTimer,___flge@ff1
  5768   0022EA  C06B  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  5769   0022EE  C06C  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  5770   0022F2  C06D  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  5771   0022F6  90D8               	bcf	status,0,c
  5772   0022F8  0100               	movlb	0	; () banked
  5773   0022FA  356E               	rlcf	White@i& (0+255),w,b
  5774   0022FC  6ED9               	movwf	fsr2l,c
  5775   0022FE  356F               	rlcf	(White@i+1)& (0+255),w,b
  5776   002300  6EDA               	movwf	fsr2h,c
  5777   002302  90D8               	bcf	status,0,c
  5778   002304  36D9               	rlcf	fsr2l,f,c
  5779   002306  36DA               	rlcf	fsr2h,f,c
  5780   002308  5168               	movf	White@timerMemory& (0+255),w,b
  5781   00230A  26D9               	addwf	fsr2l,f,c
  5782   00230C  5169               	movf	(White@timerMemory+1)& (0+255),w,b
  5783   00230E  22DA               	addwfc	fsr2h,f,c
  5784   002310  CFDE F04F          	movff	postinc2,___flge@ff2
  5785   002314  CFDE F050          	movff	postinc2,___flge@ff2+1
  5786   002318  CFDE F051          	movff	postinc2,___flge@ff2+2
  5787   00231C  CFDE F052          	movff	postinc2,___flge@ff2+3
  5788   002320  EC8A  F01B         	call	___flge	;wreg free
  5789   002324  A0D8               	btfss	status,0,c
  5790   002326  EF97  F011         	goto	u3641
  5791   00232A  EF99  F011         	goto	u3640
  5792   00232E                     u3641:
  5793   00232E  EF69  F011         	goto	l3966
  5794   002332                     u3640:
  5795   002332                     l3970:
  5796                           
  5797                           ;dc_motor.c: 381:             stop(mL,mR);
  5798   002332  C060  F014         	movff	White@mL,stop@mL
  5799   002336  C061  F015         	movff	White@mL+1,stop@mL+1
  5800   00233A  C062  F016         	movff	White@mR,stop@mR
  5801   00233E  C063  F017         	movff	White@mR+1,stop@mR+1
  5802   002342  ECDD  F01D         	call	_stop	;wreg free
  5803   002346                     
  5804                           ;dc_motor.c: 382:         }
  5805   002346  0100               	movlb	0	; () banked
  5806   002348  076E               	decf	White@i& (0+255),f,b
  5807   00234A  A0D8               	btfss	status,0,c
  5808   00234C  076F               	decf	(White@i+1)& (0+255),f,b
  5809   00234E  EFC4  F00F         	goto	l3908
  5810   002352                     l3976:
  5811                           
  5812                           ;dc_motor.c: 338:     while (!retracingDone){
  5813   002352  0100               	movlb	0	; () banked
  5814   002354  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  5815   002356  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  5816   002358  B4D8               	btfsc	status,2,c
  5817   00235A  EFB1  F011         	goto	u3651
  5818   00235E  EFB3  F011         	goto	u3650
  5819   002362                     u3651:
  5820   002362  EF99  F00F         	goto	l3898
  5821   002366                     u3650:
  5822   002366                     
  5823                           ; BSR set to: 0
  5824                           ;dc_motor.c: 384:     stop(mL,mR);
  5825   002366  C060  F014         	movff	White@mL,stop@mL
  5826   00236A  C061  F015         	movff	White@mL+1,stop@mL+1
  5827   00236E  C062  F016         	movff	White@mR,stop@mR
  5828   002372  C063  F017         	movff	White@mR+1,stop@mR+1
  5829   002376  ECDD  F01D         	call	_stop	;wreg free
  5830   00237A                     
  5831                           ;dc_motor.c: 385:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5832   00237A  0E52               	movlw	82
  5833   00237C  6E58               	movwf	(??_White+1)^0,c
  5834   00237E  0E2B               	movlw	43
  5835   002380  6E57               	movwf	??_White^0,c
  5836   002382  0E00               	movlw	0
  5837   002384                     u4337:
  5838   002384  2EE8               	decfsz	wreg,f,c
  5839   002386  D7FE               	bra	u4337
  5840   002388  2E57               	decfsz	??_White^0,f,c
  5841   00238A  D7FC               	bra	u4337
  5842   00238C  2E58               	decfsz	(??_White+1)^0,f,c
  5843   00238E  D7FA               	bra	u4337
  5844   002390  D000               	nop2	
  5845   002392                     
  5846                           ;dc_motor.c: 386:     LATDbits.LATD4 = 0;;
  5847   002392  987C               	bcf	124,4,c	;volatile
  5848   002394  0012               	return		;funcret
  5849   002396                     __end_of_White:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function _getTimerValue *****************
  5853 ;; Defined at:
  5854 ;;		line 28 in file "timer.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  timerCount      2   56[COMRAM] int 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  4   50[COMRAM] float 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 2
  5875 ;; This function calls:
  5876 ;;		___flmul
  5877 ;;		___xxtofl
  5878 ;; This function is called by:
  5879 ;;		_White
  5880 ;;		_memoryUpdateTime
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text29
  5885   004400                     __ptext29:
  5886                           	callstack 0
  5887   004400                     _getTimerValue:
  5888                           	callstack 27
  5889   004400                     
  5890                           ;timer.c: 30:     int timerCount;;timer.c: 32:     timerCount = TMR0L;
  5891   004400  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  5892   004404  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  5893   004406                     
  5894                           ;timer.c: 34:     timerCount |= (int)(TMR0H << 8);
  5895   004406  50D4               	movf	212,w,c	;volatile
  5896   004408  6E38               	movwf	(??_getTimerValue+1)^0,c
  5897   00440A  6A37               	clrf	??_getTimerValue^0,c
  5898   00440C  5037               	movf	??_getTimerValue^0,w,c
  5899   00440E  1239               	iorwf	getTimerValue@timerCount^0,f,c
  5900   004410  5038               	movf	(??_getTimerValue+1)^0,w,c
  5901   004412  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  5902   004414                     
  5903                           ;timer.c: 35:     return timerCount*1.048576;
  5904   004414  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  5905   004418  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  5906   00441C  0E00               	movlw	0
  5907   00441E  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  5908   004420  0EFF               	movlw	-1
  5909   004422  6E0E               	movwf	(___xxtofl@val+2)^0,c
  5910   004424  6E0F               	movwf	(___xxtofl@val+3)^0,c
  5911   004426  0E01               	movlw	1
  5912   004428  ECA9  F017         	call	___xxtofl
  5913   00442C  C00C  F01A         	movff	?___xxtofl,___flmul@b
  5914   004430  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  5915   004434  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  5916   004438  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  5917   00443C  0EBD               	movlw	189
  5918   00443E  6E1E               	movwf	___flmul@a^0,c
  5919   004440  0E37               	movlw	55
  5920   004442  6E1F               	movwf	(___flmul@a+1)^0,c
  5921   004444  0E86               	movlw	134
  5922   004446  6E20               	movwf	(___flmul@a+2)^0,c
  5923   004448  0E3F               	movlw	63
  5924   00444A  6E21               	movwf	(___flmul@a+3)^0,c
  5925   00444C  ECCB  F011         	call	___flmul	;wreg free
  5926   004450  C01A  F033         	movff	?___flmul,?_getTimerValue
  5927   004454  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  5928   004458  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  5929   00445C  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  5930   004460  0012               	return		;funcret
  5931   004462                     __end_of_getTimerValue:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function ___xxtofl *****************
  5935 ;; Defined at:
  5936 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  sign            1    wreg     unsigned char 
  5939 ;;  val             4   11[COMRAM] long 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  sign            1   19[COMRAM] unsigned char 
  5942 ;;  arg             4   21[COMRAM] unsigned long 
  5943 ;;  exp             1   20[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  4   11[COMRAM] unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;Total ram usage:       14 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_Left45
  5964 ;;		_Right45
  5965 ;;		_reverseHalfSquare
  5966 ;;		_Yellow_rev1_R90
  5967 ;;		_Pink_rev1_L90
  5968 ;;		_White
  5969 ;;		_memoryUpdateTime
  5970 ;;		_getTimerValue
  5971 ;;		_colour_read_all
  5972 ;;		_RGB2Hue
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text30
  5977   002F52                     __ptext30:
  5978                           	callstack 0
  5979   002F52                     ___xxtofl:
  5980                           	callstack 27
  5981                           
  5982                           ;incstack = 0
  5983                           ;___xxtofl@sign stored from wreg
  5984   002F52  6E14               	movwf	___xxtofl@sign^0,c
  5985   002F54  5014               	movf	___xxtofl@sign^0,w,c
  5986   002F56  B4D8               	btfsc	status,2,c
  5987   002F58  EFB0  F017         	goto	u2661
  5988   002F5C  EFB2  F017         	goto	u2660
  5989   002F60                     u2661:
  5990   002F60  EFD4  F017         	goto	l1342
  5991   002F64                     u2660:
  5992   002F64  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5993   002F66  EFB9  F017         	goto	u2670
  5994   002F6A  EFB7  F017         	goto	u2671
  5995   002F6E                     u2671:
  5996   002F6E  EFD4  F017         	goto	l1342
  5997   002F72                     u2670:
  5998   002F72  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  5999   002F76  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6000   002F7A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6001   002F7E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6002   002F82  1E10               	comf	??___xxtofl^0,f,c
  6003   002F84  1E11               	comf	(??___xxtofl+1)^0,f,c
  6004   002F86  1E12               	comf	(??___xxtofl+2)^0,f,c
  6005   002F88  1E13               	comf	(??___xxtofl+3)^0,f,c
  6006   002F8A  2A10               	incf	??___xxtofl^0,f,c
  6007   002F8C  0E00               	movlw	0
  6008   002F8E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6009   002F90  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6010   002F92  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6011   002F94  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6012   002F98  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6013   002F9C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6014   002FA0  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6015   002FA4  EFDC  F017         	goto	l3388
  6016   002FA8                     l1342:
  6017   002FA8  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6018   002FAC  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6019   002FB0  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6020   002FB4  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6021   002FB8                     l3388:
  6022   002FB8  500C               	movf	___xxtofl@val^0,w,c
  6023   002FBA  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6024   002FBC  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6025   002FBE  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6026   002FC0  A4D8               	btfss	status,2,c
  6027   002FC2  EFE5  F017         	goto	u2681
  6028   002FC6  EFE7  F017         	goto	u2680
  6029   002FCA                     u2681:
  6030   002FCA  EFF1  F017         	goto	l3394
  6031   002FCE                     u2680:
  6032   002FCE  0E00               	movlw	0
  6033   002FD0  6E0C               	movwf	?___xxtofl^0,c
  6034   002FD2  0E00               	movlw	0
  6035   002FD4  6E0D               	movwf	(?___xxtofl+1)^0,c
  6036   002FD6  0E00               	movlw	0
  6037   002FD8  6E0E               	movwf	(?___xxtofl+2)^0,c
  6038   002FDA  0E00               	movlw	0
  6039   002FDC  6E0F               	movwf	(?___xxtofl+3)^0,c
  6040   002FDE  EF82  F018         	goto	l1345
  6041   002FE2                     l3394:
  6042   002FE2  0E96               	movlw	150
  6043   002FE4  6E15               	movwf	___xxtofl@exp^0,c
  6044   002FE6  EFFB  F017         	goto	l3398
  6045   002FEA                     l3396:
  6046   002FEA  2A15               	incf	___xxtofl@exp^0,f,c
  6047   002FEC  90D8               	bcf	status,0,c
  6048   002FEE  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6049   002FF0  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6050   002FF2  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6051   002FF4  3216               	rrcf	___xxtofl@arg^0,f,c
  6052   002FF6                     l3398:
  6053   002FF6  0E00               	movlw	0
  6054   002FF8  1416               	andwf	___xxtofl@arg^0,w,c
  6055   002FFA  6E10               	movwf	??___xxtofl^0,c
  6056   002FFC  0E00               	movlw	0
  6057   002FFE  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6058   003000  6E11               	movwf	(??___xxtofl+1)^0,c
  6059   003002  0E00               	movlw	0
  6060   003004  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6061   003006  6E12               	movwf	(??___xxtofl+2)^0,c
  6062   003008  0EFE               	movlw	254
  6063   00300A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6064   00300C  6E13               	movwf	(??___xxtofl+3)^0,c
  6065   00300E  5010               	movf	??___xxtofl^0,w,c
  6066   003010  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6067   003012  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6068   003014  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6069   003016  A4D8               	btfss	status,2,c
  6070   003018  EF10  F018         	goto	u2691
  6071   00301C  EF12  F018         	goto	u2690
  6072   003020                     u2691:
  6073   003020  EFF5  F017         	goto	l3396
  6074   003024                     u2690:
  6075   003024  EF20  F018         	goto	l1349
  6076   003028                     l3400:
  6077   003028  2A15               	incf	___xxtofl@exp^0,f,c
  6078   00302A  0E01               	movlw	1
  6079   00302C  2616               	addwf	___xxtofl@arg^0,f,c
  6080   00302E  0E00               	movlw	0
  6081   003030  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6082   003032  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6083   003034  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6084   003036  90D8               	bcf	status,0,c
  6085   003038  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6086   00303A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6087   00303C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6088   00303E  3216               	rrcf	___xxtofl@arg^0,f,c
  6089   003040                     l1349:
  6090   003040  0E00               	movlw	0
  6091   003042  1416               	andwf	___xxtofl@arg^0,w,c
  6092   003044  6E10               	movwf	??___xxtofl^0,c
  6093   003046  0E00               	movlw	0
  6094   003048  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6095   00304A  6E11               	movwf	(??___xxtofl+1)^0,c
  6096   00304C  0E00               	movlw	0
  6097   00304E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6098   003050  6E12               	movwf	(??___xxtofl+2)^0,c
  6099   003052  0EFF               	movlw	255
  6100   003054  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6101   003056  6E13               	movwf	(??___xxtofl+3)^0,c
  6102   003058  5010               	movf	??___xxtofl^0,w,c
  6103   00305A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6104   00305C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6105   00305E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6106   003060  A4D8               	btfss	status,2,c
  6107   003062  EF35  F018         	goto	u2701
  6108   003066  EF37  F018         	goto	u2700
  6109   00306A                     u2701:
  6110   00306A  EF14  F018         	goto	l3400
  6111   00306E                     u2700:
  6112   00306E  EF3F  F018         	goto	l3408
  6113   003072                     l3406:
  6114   003072  0615               	decf	___xxtofl@exp^0,f,c
  6115   003074  90D8               	bcf	status,0,c
  6116   003076  3616               	rlcf	___xxtofl@arg^0,f,c
  6117   003078  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6118   00307A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6119   00307C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6120   00307E                     l3408:
  6121   00307E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6122   003080  EF44  F018         	goto	u2711
  6123   003084  EF46  F018         	goto	u2710
  6124   003088                     u2711:
  6125   003088  EF4E  F018         	goto	l1356
  6126   00308C                     u2710:
  6127   00308C  0E02               	movlw	2
  6128   00308E  6015               	cpfslt	___xxtofl@exp^0,c
  6129   003090  EF4C  F018         	goto	u2721
  6130   003094  EF4E  F018         	goto	u2720
  6131   003098                     u2721:
  6132   003098  EF39  F018         	goto	l3406
  6133   00309C                     u2720:
  6134   00309C                     l1356:
  6135   00309C  B015               	btfsc	___xxtofl@exp^0,0,c
  6136   00309E  EF53  F018         	goto	u2731
  6137   0030A2  EF55  F018         	goto	u2730
  6138   0030A6                     u2731:
  6139   0030A6  EF56  F018         	goto	l3414
  6140   0030AA                     u2730:
  6141   0030AA  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6142   0030AC                     l3414:
  6143   0030AC  90D8               	bcf	status,0,c
  6144   0030AE  3215               	rrcf	___xxtofl@exp^0,f,c
  6145   0030B0  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6146   0030B4  6A11               	clrf	(??___xxtofl+1)^0,c
  6147   0030B6  6A12               	clrf	(??___xxtofl+2)^0,c
  6148   0030B8  6A13               	clrf	(??___xxtofl+3)^0,c
  6149   0030BA  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6150   0030BE  6A12               	clrf	(??___xxtofl+2)^0,c
  6151   0030C0  6A11               	clrf	(??___xxtofl+1)^0,c
  6152   0030C2  6A10               	clrf	??___xxtofl^0,c
  6153   0030C4  5010               	movf	??___xxtofl^0,w,c
  6154   0030C6  1216               	iorwf	___xxtofl@arg^0,f,c
  6155   0030C8  5011               	movf	(??___xxtofl+1)^0,w,c
  6156   0030CA  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6157   0030CC  5012               	movf	(??___xxtofl+2)^0,w,c
  6158   0030CE  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6159   0030D0  5013               	movf	(??___xxtofl+3)^0,w,c
  6160   0030D2  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6161   0030D4  5014               	movf	___xxtofl@sign^0,w,c
  6162   0030D6  B4D8               	btfsc	status,2,c
  6163   0030D8  EF70  F018         	goto	u2741
  6164   0030DC  EF72  F018         	goto	u2740
  6165   0030E0                     u2741:
  6166   0030E0  EF7A  F018         	goto	l3424
  6167   0030E4                     u2740:
  6168   0030E4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6169   0030E6  EF79  F018         	goto	u2750
  6170   0030EA  EF77  F018         	goto	u2751
  6171   0030EE                     u2751:
  6172   0030EE  EF7A  F018         	goto	l3424
  6173   0030F2                     u2750:
  6174   0030F2  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6175   0030F4                     l3424:
  6176   0030F4  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6177   0030F8  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6178   0030FC  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6179   003100  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6180   003104                     l1345:
  6181   003104  0012               	return		;funcret
  6182   003106                     __end_of___xxtofl:
  6183                           	callstack 0
  6184                           
  6185 ;; *************** function ___flmul *****************
  6186 ;; Defined at:
  6187 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  b               4   25[COMRAM] unsigned char 
  6190 ;;  a               4   29[COMRAM] unsigned char 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  prod            4   44[COMRAM] struct .
  6193 ;;  grs             4   38[COMRAM] unsigned long 
  6194 ;;  temp            2   48[COMRAM] struct .
  6195 ;;  bexp            1   43[COMRAM] unsigned char 
  6196 ;;  aexp            1   42[COMRAM] unsigned char 
  6197 ;;  sign            1   37[COMRAM] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  4   25[COMRAM] unsigned char 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0, prodl, prodh
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6207 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6208 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6211 ;;Total ram usage:       25 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 1
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_Left45
  6218 ;;		_Right45
  6219 ;;		_reverseHalfSquare
  6220 ;;		_Yellow_rev1_R90
  6221 ;;		_Pink_rev1_L90
  6222 ;;		_getTimerValue
  6223 ;;		_RGB2Hue
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text31
  6228   002396                     __ptext31:
  6229                           	callstack 0
  6230   002396                     ___flmul:
  6231                           	callstack 27
  6232   002396  501D               	movf	(___flmul@b+3)^0,w,c
  6233   002398  0B80               	andlw	128
  6234   00239A  6E26               	movwf	___flmul@sign^0,c
  6235   00239C  501D               	movf	(___flmul@b+3)^0,w,c
  6236   00239E  241D               	addwf	(___flmul@b+3)^0,w,c
  6237   0023A0  6E2C               	movwf	___flmul@bexp^0,c
  6238   0023A2  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6239   0023A4  EFD6  F011         	goto	u2471
  6240   0023A8  EFD8  F011         	goto	u2470
  6241   0023AC                     u2471:
  6242   0023AC  EFD9  F011         	goto	l3258
  6243   0023B0                     u2470:
  6244   0023B0  802C               	bsf	___flmul@bexp^0,0,c
  6245   0023B2                     l3258:
  6246   0023B2  502C               	movf	___flmul@bexp^0,w,c
  6247   0023B4  B4D8               	btfsc	status,2,c
  6248   0023B6  EFDF  F011         	goto	u2481
  6249   0023BA  EFE1  F011         	goto	u2480
  6250   0023BE                     u2481:
  6251   0023BE  EFF4  F011         	goto	l3266
  6252   0023C2                     u2480:
  6253   0023C2  282C               	incf	___flmul@bexp^0,w,c
  6254   0023C4  A4D8               	btfss	status,2,c
  6255   0023C6  EFE7  F011         	goto	u2491
  6256   0023CA  EFE9  F011         	goto	u2490
  6257   0023CE                     u2491:
  6258   0023CE  EFF1  F011         	goto	l3264
  6259   0023D2                     u2490:
  6260   0023D2  0E00               	movlw	0
  6261   0023D4  6E1A               	movwf	___flmul@b^0,c
  6262   0023D6  0E00               	movlw	0
  6263   0023D8  6E1B               	movwf	(___flmul@b+1)^0,c
  6264   0023DA  0E00               	movlw	0
  6265   0023DC  6E1C               	movwf	(___flmul@b+2)^0,c
  6266   0023DE  0E00               	movlw	0
  6267   0023E0  6E1D               	movwf	(___flmul@b+3)^0,c
  6268   0023E2                     l3264:
  6269   0023E2  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6270   0023E4  EFFC  F011         	goto	l3268
  6271   0023E8                     l3266:
  6272   0023E8  0E00               	movlw	0
  6273   0023EA  6E1A               	movwf	___flmul@b^0,c
  6274   0023EC  0E00               	movlw	0
  6275   0023EE  6E1B               	movwf	(___flmul@b+1)^0,c
  6276   0023F0  0E00               	movlw	0
  6277   0023F2  6E1C               	movwf	(___flmul@b+2)^0,c
  6278   0023F4  0E00               	movlw	0
  6279   0023F6  6E1D               	movwf	(___flmul@b+3)^0,c
  6280   0023F8                     l3268:
  6281   0023F8  5021               	movf	(___flmul@a+3)^0,w,c
  6282   0023FA  0B80               	andlw	128
  6283   0023FC  1A26               	xorwf	___flmul@sign^0,f,c
  6284   0023FE  5021               	movf	(___flmul@a+3)^0,w,c
  6285   002400  2421               	addwf	(___flmul@a+3)^0,w,c
  6286   002402  6E2B               	movwf	___flmul@aexp^0,c
  6287   002404  AE20               	btfss	(___flmul@a+2)^0,7,c
  6288   002406  EF07  F012         	goto	u2501
  6289   00240A  EF09  F012         	goto	u2500
  6290   00240E                     u2501:
  6291   00240E  EF0A  F012         	goto	l3276
  6292   002412                     u2500:
  6293   002412  802B               	bsf	___flmul@aexp^0,0,c
  6294   002414                     l3276:
  6295   002414  502B               	movf	___flmul@aexp^0,w,c
  6296   002416  B4D8               	btfsc	status,2,c
  6297   002418  EF10  F012         	goto	u2511
  6298   00241C  EF12  F012         	goto	u2510
  6299   002420                     u2511:
  6300   002420  EF25  F012         	goto	l3284
  6301   002424                     u2510:
  6302   002424  282B               	incf	___flmul@aexp^0,w,c
  6303   002426  A4D8               	btfss	status,2,c
  6304   002428  EF18  F012         	goto	u2521
  6305   00242C  EF1A  F012         	goto	u2520
  6306   002430                     u2521:
  6307   002430  EF22  F012         	goto	l3282
  6308   002434                     u2520:
  6309   002434  0E00               	movlw	0
  6310   002436  6E1E               	movwf	___flmul@a^0,c
  6311   002438  0E00               	movlw	0
  6312   00243A  6E1F               	movwf	(___flmul@a+1)^0,c
  6313   00243C  0E00               	movlw	0
  6314   00243E  6E20               	movwf	(___flmul@a+2)^0,c
  6315   002440  0E00               	movlw	0
  6316   002442  6E21               	movwf	(___flmul@a+3)^0,c
  6317   002444                     l3282:
  6318   002444  8E20               	bsf	(___flmul@a+2)^0,7,c
  6319   002446  EF2D  F012         	goto	l1301
  6320   00244A                     l3284:
  6321   00244A  0E00               	movlw	0
  6322   00244C  6E1E               	movwf	___flmul@a^0,c
  6323   00244E  0E00               	movlw	0
  6324   002450  6E1F               	movwf	(___flmul@a+1)^0,c
  6325   002452  0E00               	movlw	0
  6326   002454  6E20               	movwf	(___flmul@a+2)^0,c
  6327   002456  0E00               	movlw	0
  6328   002458  6E21               	movwf	(___flmul@a+3)^0,c
  6329   00245A                     l1301:
  6330   00245A  502B               	movf	___flmul@aexp^0,w,c
  6331   00245C  B4D8               	btfsc	status,2,c
  6332   00245E  EF33  F012         	goto	u2531
  6333   002462  EF35  F012         	goto	u2530
  6334   002466                     u2531:
  6335   002466  EF3D  F012         	goto	l3288
  6336   00246A                     u2530:
  6337   00246A  502C               	movf	___flmul@bexp^0,w,c
  6338   00246C  A4D8               	btfss	status,2,c
  6339   00246E  EF3B  F012         	goto	u2541
  6340   002472  EF3D  F012         	goto	u2540
  6341   002476                     u2541:
  6342   002476  EF47  F012         	goto	l3292
  6343   00247A                     u2540:
  6344   00247A                     l3288:
  6345   00247A  0E00               	movlw	0
  6346   00247C  6E1A               	movwf	?___flmul^0,c
  6347   00247E  0E00               	movlw	0
  6348   002480  6E1B               	movwf	(?___flmul+1)^0,c
  6349   002482  0E00               	movlw	0
  6350   002484  6E1C               	movwf	(?___flmul+2)^0,c
  6351   002486  0E00               	movlw	0
  6352   002488  6E1D               	movwf	(?___flmul+3)^0,c
  6353   00248A  EFDF  F013         	goto	l1305
  6354   00248E                     l3292:
  6355   00248E  5020               	movf	(___flmul@a+2)^0,w,c
  6356   002490  021A               	mulwf	___flmul@b^0,c
  6357   002492  CFF3 F031          	movff	prodl,___flmul@temp
  6358   002496  CFF4 F032          	movff	prodh,___flmul@temp+1
  6359   00249A  5031               	movf	___flmul@temp^0,w,c
  6360   00249C  6E27               	movwf	___flmul@grs^0,c
  6361   00249E  6A28               	clrf	(___flmul@grs+1)^0,c
  6362   0024A0  6A29               	clrf	(___flmul@grs+2)^0,c
  6363   0024A2  6A2A               	clrf	(___flmul@grs+3)^0,c
  6364   0024A4  5032               	movf	(___flmul@temp+1)^0,w,c
  6365   0024A6  6E2D               	movwf	___flmul@prod^0,c
  6366   0024A8  6A2E               	clrf	(___flmul@prod+1)^0,c
  6367   0024AA  6A2F               	clrf	(___flmul@prod+2)^0,c
  6368   0024AC  6A30               	clrf	(___flmul@prod+3)^0,c
  6369   0024AE  501F               	movf	(___flmul@a+1)^0,w,c
  6370   0024B0  021B               	mulwf	(___flmul@b+1)^0,c
  6371   0024B2  CFF3 F031          	movff	prodl,___flmul@temp
  6372   0024B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  6373   0024BA  5031               	movf	___flmul@temp^0,w,c
  6374   0024BC  2627               	addwf	___flmul@grs^0,f,c
  6375   0024BE  0E00               	movlw	0
  6376   0024C0  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6377   0024C2  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6378   0024C4  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6379   0024C6  5032               	movf	(___flmul@temp+1)^0,w,c
  6380   0024C8  262D               	addwf	___flmul@prod^0,f,c
  6381   0024CA  0E00               	movlw	0
  6382   0024CC  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6383   0024CE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6384   0024D0  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6385   0024D2  501E               	movf	___flmul@a^0,w,c
  6386   0024D4  021C               	mulwf	(___flmul@b+2)^0,c
  6387   0024D6  CFF3 F031          	movff	prodl,___flmul@temp
  6388   0024DA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6389   0024DE  5031               	movf	___flmul@temp^0,w,c
  6390   0024E0  2627               	addwf	___flmul@grs^0,f,c
  6391   0024E2  0E00               	movlw	0
  6392   0024E4  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6393   0024E6  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6394   0024E8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6395   0024EA  5032               	movf	(___flmul@temp+1)^0,w,c
  6396   0024EC  262D               	addwf	___flmul@prod^0,f,c
  6397   0024EE  0E00               	movlw	0
  6398   0024F0  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6399   0024F2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6400   0024F4  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6401   0024F6  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6402   0024FA  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6403   0024FE  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6404   002502  6A27               	clrf	___flmul@grs^0,c
  6405   002504  501E               	movf	___flmul@a^0,w,c
  6406   002506  021B               	mulwf	(___flmul@b+1)^0,c
  6407   002508  CFF3 F031          	movff	prodl,___flmul@temp
  6408   00250C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6409   002510  5031               	movf	___flmul@temp^0,w,c
  6410   002512  2627               	addwf	___flmul@grs^0,f,c
  6411   002514  5032               	movf	(___flmul@temp+1)^0,w,c
  6412   002516  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6413   002518  0E00               	movlw	0
  6414   00251A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6415   00251C  0E00               	movlw	0
  6416   00251E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6417   002520  501F               	movf	(___flmul@a+1)^0,w,c
  6418   002522  021A               	mulwf	___flmul@b^0,c
  6419   002524  CFF3 F031          	movff	prodl,___flmul@temp
  6420   002528  CFF4 F032          	movff	prodh,___flmul@temp+1
  6421   00252C  5031               	movf	___flmul@temp^0,w,c
  6422   00252E  2627               	addwf	___flmul@grs^0,f,c
  6423   002530  5032               	movf	(___flmul@temp+1)^0,w,c
  6424   002532  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6425   002534  0E00               	movlw	0
  6426   002536  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6427   002538  0E00               	movlw	0
  6428   00253A  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6429   00253C  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6430   002540  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6431   002544  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6432   002548  6A27               	clrf	___flmul@grs^0,c
  6433   00254A  501E               	movf	___flmul@a^0,w,c
  6434   00254C  021A               	mulwf	___flmul@b^0,c
  6435   00254E  CFF3 F031          	movff	prodl,___flmul@temp
  6436   002552  CFF4 F032          	movff	prodh,___flmul@temp+1
  6437   002556  5031               	movf	___flmul@temp^0,w,c
  6438   002558  2627               	addwf	___flmul@grs^0,f,c
  6439   00255A  5032               	movf	(___flmul@temp+1)^0,w,c
  6440   00255C  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6441   00255E  0E00               	movlw	0
  6442   002560  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6443   002562  0E00               	movlw	0
  6444   002564  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6445   002566  5020               	movf	(___flmul@a+2)^0,w,c
  6446   002568  021B               	mulwf	(___flmul@b+1)^0,c
  6447   00256A  CFF3 F031          	movff	prodl,___flmul@temp
  6448   00256E  CFF4 F032          	movff	prodh,___flmul@temp+1
  6449   002572  5031               	movf	___flmul@temp^0,w,c
  6450   002574  262D               	addwf	___flmul@prod^0,f,c
  6451   002576  5032               	movf	(___flmul@temp+1)^0,w,c
  6452   002578  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6453   00257A  0E00               	movlw	0
  6454   00257C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6455   00257E  0E00               	movlw	0
  6456   002580  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6457   002582  501F               	movf	(___flmul@a+1)^0,w,c
  6458   002584  021C               	mulwf	(___flmul@b+2)^0,c
  6459   002586  CFF3 F031          	movff	prodl,___flmul@temp
  6460   00258A  CFF4 F032          	movff	prodh,___flmul@temp+1
  6461   00258E  5031               	movf	___flmul@temp^0,w,c
  6462   002590  262D               	addwf	___flmul@prod^0,f,c
  6463   002592  5032               	movf	(___flmul@temp+1)^0,w,c
  6464   002594  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6465   002596  0E00               	movlw	0
  6466   002598  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6467   00259A  0E00               	movlw	0
  6468   00259C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6469   00259E  5020               	movf	(___flmul@a+2)^0,w,c
  6470   0025A0  021C               	mulwf	(___flmul@b+2)^0,c
  6471   0025A2  CFF3 F031          	movff	prodl,___flmul@temp
  6472   0025A6  CFF4 F032          	movff	prodh,___flmul@temp+1
  6473   0025AA  5031               	movf	___flmul@temp^0,w,c
  6474   0025AC  6E22               	movwf	??___flmul^0,c
  6475   0025AE  5032               	movf	(___flmul@temp+1)^0,w,c
  6476   0025B0  6E23               	movwf	(??___flmul+1)^0,c
  6477   0025B2  6A24               	clrf	(??___flmul+2)^0,c
  6478   0025B4  6A25               	clrf	(??___flmul+3)^0,c
  6479   0025B6  C024  F025         	movff	??___flmul+2,??___flmul+3
  6480   0025BA  C023  F024         	movff	??___flmul+1,??___flmul+2
  6481   0025BE  C022  F023         	movff	??___flmul,??___flmul+1
  6482   0025C2  6A22               	clrf	??___flmul^0,c
  6483   0025C4  5022               	movf	??___flmul^0,w,c
  6484   0025C6  262D               	addwf	___flmul@prod^0,f,c
  6485   0025C8  5023               	movf	(??___flmul+1)^0,w,c
  6486   0025CA  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6487   0025CC  5024               	movf	(??___flmul+2)^0,w,c
  6488   0025CE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6489   0025D0  5025               	movf	(??___flmul+3)^0,w,c
  6490   0025D2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6491   0025D4  C027  F022         	movff	___flmul@grs,??___flmul
  6492   0025D8  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  6493   0025DC  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  6494   0025E0  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  6495   0025E4  0E19               	movlw	25
  6496   0025E6  EFFA  F012         	goto	u2550
  6497   0025EA                     u2555:
  6498   0025EA  90D8               	bcf	status,0,c
  6499   0025EC  3225               	rrcf	(??___flmul+3)^0,f,c
  6500   0025EE  3224               	rrcf	(??___flmul+2)^0,f,c
  6501   0025F0  3223               	rrcf	(??___flmul+1)^0,f,c
  6502   0025F2  3222               	rrcf	??___flmul^0,f,c
  6503   0025F4                     u2550:
  6504   0025F4  2EE8               	decfsz	wreg,f,c
  6505   0025F6  EFF5  F012         	goto	u2555
  6506   0025FA  5022               	movf	??___flmul^0,w,c
  6507   0025FC  262D               	addwf	___flmul@prod^0,f,c
  6508   0025FE  5023               	movf	(??___flmul+1)^0,w,c
  6509   002600  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6510   002602  5024               	movf	(??___flmul+2)^0,w,c
  6511   002604  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6512   002606  5025               	movf	(??___flmul+3)^0,w,c
  6513   002608  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6514   00260A  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6515   00260E  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6516   002612  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6517   002616  6A27               	clrf	___flmul@grs^0,c
  6518   002618  502B               	movf	___flmul@aexp^0,w,c
  6519   00261A  C02C  F022         	movff	___flmul@bexp,??___flmul
  6520   00261E  6A23               	clrf	(??___flmul+1)^0,c
  6521   002620  2622               	addwf	??___flmul^0,f,c
  6522   002622  0E00               	movlw	0
  6523   002624  2223               	addwfc	(??___flmul+1)^0,f,c
  6524   002626  0E82               	movlw	130
  6525   002628  2422               	addwf	??___flmul^0,w,c
  6526   00262A  6E31               	movwf	___flmul@temp^0,c
  6527   00262C  0EFF               	movlw	255
  6528   00262E  2023               	addwfc	(??___flmul+1)^0,w,c
  6529   002630  6E32               	movwf	(___flmul@temp+1)^0,c
  6530   002632  EF30  F013         	goto	l3340
  6531   002636                     l3334:
  6532   002636  90D8               	bcf	status,0,c
  6533   002638  362D               	rlcf	___flmul@prod^0,f,c
  6534   00263A  362E               	rlcf	(___flmul@prod+1)^0,f,c
  6535   00263C  362F               	rlcf	(___flmul@prod+2)^0,f,c
  6536   00263E  3630               	rlcf	(___flmul@prod+3)^0,f,c
  6537   002640  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6538   002642  EF25  F013         	goto	u2561
  6539   002646  EF27  F013         	goto	u2560
  6540   00264A                     u2561:
  6541   00264A  EF28  F013         	goto	l1308
  6542   00264E                     u2560:
  6543   00264E  802D               	bsf	___flmul@prod^0,0,c
  6544   002650                     l1308:
  6545   002650  90D8               	bcf	status,0,c
  6546   002652  3627               	rlcf	___flmul@grs^0,f,c
  6547   002654  3628               	rlcf	(___flmul@grs+1)^0,f,c
  6548   002656  3629               	rlcf	(___flmul@grs+2)^0,f,c
  6549   002658  362A               	rlcf	(___flmul@grs+3)^0,f,c
  6550   00265A  0631               	decf	___flmul@temp^0,f,c
  6551   00265C  A0D8               	btfss	status,0,c
  6552   00265E  0632               	decf	(___flmul@temp+1)^0,f,c
  6553   002660                     l3340:
  6554   002660  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  6555   002662  EF35  F013         	goto	u2571
  6556   002666  EF37  F013         	goto	u2570
  6557   00266A                     u2571:
  6558   00266A  EF1B  F013         	goto	l3334
  6559   00266E                     u2570:
  6560   00266E  0E00               	movlw	0
  6561   002670  6E2B               	movwf	___flmul@aexp^0,c
  6562   002672  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6563   002674  EF3E  F013         	goto	u2581
  6564   002678  EF40  F013         	goto	u2580
  6565   00267C                     u2581:
  6566   00267C  EF64  F013         	goto	l1310
  6567   002680                     u2580:
  6568   002680  0EFF               	movlw	255
  6569   002682  1427               	andwf	___flmul@grs^0,w,c
  6570   002684  6E22               	movwf	??___flmul^0,c
  6571   002686  0EFF               	movlw	255
  6572   002688  1428               	andwf	(___flmul@grs+1)^0,w,c
  6573   00268A  6E23               	movwf	(??___flmul+1)^0,c
  6574   00268C  0EFF               	movlw	255
  6575   00268E  1429               	andwf	(___flmul@grs+2)^0,w,c
  6576   002690  6E24               	movwf	(??___flmul+2)^0,c
  6577   002692  0E7F               	movlw	127
  6578   002694  142A               	andwf	(___flmul@grs+3)^0,w,c
  6579   002696  6E25               	movwf	(??___flmul+3)^0,c
  6580   002698  5022               	movf	??___flmul^0,w,c
  6581   00269A  1023               	iorwf	(??___flmul+1)^0,w,c
  6582   00269C  1024               	iorwf	(??___flmul+2)^0,w,c
  6583   00269E  1025               	iorwf	(??___flmul+3)^0,w,c
  6584   0026A0  B4D8               	btfsc	status,2,c
  6585   0026A2  EF55  F013         	goto	u2591
  6586   0026A6  EF57  F013         	goto	u2590
  6587   0026AA                     u2591:
  6588   0026AA  EF5B  F013         	goto	l1311
  6589   0026AE                     u2590:
  6590   0026AE                     l3348:
  6591   0026AE  0E01               	movlw	1
  6592   0026B0  6E2B               	movwf	___flmul@aexp^0,c
  6593   0026B2  EF64  F013         	goto	l1310
  6594   0026B6                     l1311:
  6595   0026B6  A02D               	btfss	___flmul@prod^0,0,c
  6596   0026B8  EF60  F013         	goto	u2601
  6597   0026BC  EF62  F013         	goto	u2600
  6598   0026C0                     u2601:
  6599   0026C0  EF64  F013         	goto	l1310
  6600   0026C4                     u2600:
  6601   0026C4  EF57  F013         	goto	l3348
  6602   0026C8                     l1310:
  6603   0026C8  502B               	movf	___flmul@aexp^0,w,c
  6604   0026CA  B4D8               	btfsc	status,2,c
  6605   0026CC  EF6A  F013         	goto	u2611
  6606   0026D0  EF6C  F013         	goto	u2610
  6607   0026D4                     u2611:
  6608   0026D4  EF90  F013         	goto	l3360
  6609   0026D8                     u2610:
  6610   0026D8  0E01               	movlw	1
  6611   0026DA  262D               	addwf	___flmul@prod^0,f,c
  6612   0026DC  0E00               	movlw	0
  6613   0026DE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6614   0026E0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6615   0026E2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6616   0026E4  A030               	btfss	(___flmul@prod+3)^0,0,c
  6617   0026E6  EF77  F013         	goto	u2621
  6618   0026EA  EF79  F013         	goto	u2620
  6619   0026EE                     u2621:
  6620   0026EE  EF90  F013         	goto	l3360
  6621   0026F2                     u2620:
  6622   0026F2  C02D  F022         	movff	___flmul@prod,??___flmul
  6623   0026F6  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  6624   0026FA  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  6625   0026FE  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  6626   002702  3425               	rlcf	(??___flmul+3)^0,w,c
  6627   002704  3225               	rrcf	(??___flmul+3)^0,f,c
  6628   002706  3224               	rrcf	(??___flmul+2)^0,f,c
  6629   002708  3223               	rrcf	(??___flmul+1)^0,f,c
  6630   00270A  3222               	rrcf	??___flmul^0,f,c
  6631   00270C  C022  F02D         	movff	??___flmul,___flmul@prod
  6632   002710  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  6633   002714  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  6634   002718  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  6635   00271C  4A31               	infsnz	___flmul@temp^0,f,c
  6636   00271E  2A32               	incf	(___flmul@temp+1)^0,f,c
  6637   002720                     l3360:
  6638   002720  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6639   002722  EF9B  F013         	goto	u2631
  6640   002726  5032               	movf	(___flmul@temp+1)^0,w,c
  6641   002728  E108               	bnz	u2630
  6642   00272A  2831               	incf	___flmul@temp^0,w,c
  6643   00272C  A0D8               	btfss	status,0,c
  6644   00272E  EF9B  F013         	goto	u2631
  6645   002732  EF9D  F013         	goto	u2630
  6646   002736                     u2631:
  6647   002736  EFA7  F013         	goto	l3364
  6648   00273A                     u2630:
  6649   00273A  0E00               	movlw	0
  6650   00273C  6E2D               	movwf	___flmul@prod^0,c
  6651   00273E  0E00               	movlw	0
  6652   002740  6E2E               	movwf	(___flmul@prod+1)^0,c
  6653   002742  0E80               	movlw	128
  6654   002744  6E2F               	movwf	(___flmul@prod+2)^0,c
  6655   002746  0E7F               	movlw	127
  6656   002748  6E30               	movwf	(___flmul@prod+3)^0,c
  6657   00274A  EFD5  F013         	goto	l3376
  6658   00274E                     l3364:
  6659   00274E  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6660   002750  EFB4  F013         	goto	u2640
  6661   002754  5032               	movf	(___flmul@temp+1)^0,w,c
  6662   002756  E106               	bnz	u2641
  6663   002758  0431               	decf	___flmul@temp^0,w,c
  6664   00275A  B0D8               	btfsc	status,0,c
  6665   00275C  EFB2  F013         	goto	u2641
  6666   002760  EFB4  F013         	goto	u2640
  6667   002764                     u2641:
  6668   002764  EFC0  F013         	goto	l1318
  6669   002768                     u2640:
  6670   002768  0E00               	movlw	0
  6671   00276A  6E2D               	movwf	___flmul@prod^0,c
  6672   00276C  0E00               	movlw	0
  6673   00276E  6E2E               	movwf	(___flmul@prod+1)^0,c
  6674   002770  0E00               	movlw	0
  6675   002772  6E2F               	movwf	(___flmul@prod+2)^0,c
  6676   002774  0E00               	movlw	0
  6677   002776  6E30               	movwf	(___flmul@prod+3)^0,c
  6678   002778  0E00               	movlw	0
  6679   00277A  6E26               	movwf	___flmul@sign^0,c
  6680   00277C  EFD5  F013         	goto	l3376
  6681   002780                     l1318:
  6682   002780  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  6683   002784  0EFF               	movlw	255
  6684   002786  162D               	andwf	___flmul@prod^0,f,c
  6685   002788  0EFF               	movlw	255
  6686   00278A  162E               	andwf	(___flmul@prod+1)^0,f,c
  6687   00278C  0E7F               	movlw	127
  6688   00278E  162F               	andwf	(___flmul@prod+2)^0,f,c
  6689   002790  0E00               	movlw	0
  6690   002792  1630               	andwf	(___flmul@prod+3)^0,f,c
  6691   002794  A02C               	btfss	___flmul@bexp^0,0,c
  6692   002796  EFCF  F013         	goto	u2651
  6693   00279A  EFD1  F013         	goto	u2650
  6694   00279E                     u2651:
  6695   00279E  EFD2  F013         	goto	l3374
  6696   0027A2                     u2650:
  6697   0027A2  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  6698   0027A4                     l3374:
  6699   0027A4  90D8               	bcf	status,0,c
  6700   0027A6  302C               	rrcf	___flmul@bexp^0,w,c
  6701   0027A8  6E30               	movwf	(___flmul@prod+3)^0,c
  6702   0027AA                     l3376:
  6703   0027AA  5026               	movf	___flmul@sign^0,w,c
  6704   0027AC  1230               	iorwf	(___flmul@prod+3)^0,f,c
  6705   0027AE  C02D  F01A         	movff	___flmul@prod,?___flmul
  6706   0027B2  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  6707   0027B6  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  6708   0027BA  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  6709   0027BE                     l1305:
  6710   0027BE  0012               	return		;funcret
  6711   0027C0                     __end_of___flmul:
  6712                           	callstack 0
  6713                           
  6714 ;; *************** function _fullSpeedAhead *****************
  6715 ;; Defined at:
  6716 ;;		line 149 in file "dc_motor.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6719 ;;		 -> motorL(9), 
  6720 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6721 ;;		 -> motorR(9), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  i               2   24[COMRAM] unsigned int 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;Total ram usage:        7 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 3
  6740 ;; This function calls:
  6741 ;;		_setMotorPWM
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;;		_White
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text32
  6749   004194                     __ptext32:
  6750                           	callstack 0
  6751   004194                     _fullSpeedAhead:
  6752                           	callstack 27
  6753   004194                     
  6754                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6755   004194  EE20 F001          	lfsr	2,1
  6756   004198  5014               	movf	fullSpeedAhead@mL^0,w,c
  6757   00419A  26D9               	addwf	fsr2l,f,c
  6758   00419C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6759   00419E  22DA               	addwfc	fsr2h,f,c
  6760   0041A0  0E01               	movlw	1
  6761   0041A2  6EDF               	movwf	indf2,c
  6762                           
  6763                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6764   0041A4  EE20 F001          	lfsr	2,1
  6765   0041A8  5016               	movf	fullSpeedAhead@mR^0,w,c
  6766   0041AA  26D9               	addwf	fsr2l,f,c
  6767   0041AC  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6768   0041AE  22DA               	addwfc	fsr2h,f,c
  6769   0041B0  0E01               	movlw	1
  6770   0041B2  6EDF               	movwf	indf2,c
  6771   0041B4                     
  6772                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6773   0041B4  0E00               	movlw	0
  6774   0041B6  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6775   0041B8  0E00               	movlw	0
  6776   0041BA  6E19               	movwf	fullSpeedAhead@i^0,c
  6777   0041BC                     l3502:
  6778                           
  6779                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6780   0041BC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6781   0041C0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6782   0041C4  2ADF               	incf	indf2,f,c
  6783                           
  6784                           ;dc_motor.c: 157:         (mR->power)++;
  6785   0041C6  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6786   0041CA  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6787   0041CE  2ADF               	incf	indf2,f,c
  6788   0041D0                     
  6789                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6790   0041D0  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6791   0041D4  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6792   0041D8  EC83  F018         	call	_setMotorPWM	;wreg free
  6793   0041DC                     
  6794                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6795   0041DC  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6796   0041E0  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6797   0041E4  EC83  F018         	call	_setMotorPWM	;wreg free
  6798   0041E8                     
  6799                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6800   0041E8  0E09               	movlw	9
  6801   0041EA  6E18               	movwf	??_fullSpeedAhead^0,c
  6802   0041EC  0E4E               	movlw	78
  6803   0041EE                     u4347:
  6804   0041EE  2EE8               	decfsz	wreg,f,c
  6805   0041F0  D7FE               	bra	u4347
  6806   0041F2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6807   0041F4  D7FC               	bra	u4347
  6808   0041F6  D000               	nop2	
  6809   0041F8                     
  6810                           ;dc_motor.c: 161:     }
  6811   0041F8  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6812   0041FA  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6813   0041FC  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6814   0041FE  E109               	bnz	u2820
  6815   004200  0E32               	movlw	50
  6816   004202  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6817   004204  A0D8               	btfss	status,0,c
  6818   004206  EF07  F021         	goto	u2821
  6819   00420A  EF09  F021         	goto	u2820
  6820   00420E                     u2821:
  6821   00420E  EFDE  F020         	goto	l3502
  6822   004212                     u2820:
  6823   004212  0012               	return		;funcret
  6824   004214                     __end_of_fullSpeedAhead:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function ___fladd *****************
  6828 ;; Defined at:
  6829 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  b               4   58[COMRAM] void 
  6832 ;;  a               4   62[COMRAM] void 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  grs             1   73[COMRAM] unsigned char 
  6835 ;;  bexp            1   72[COMRAM] unsigned char 
  6836 ;;  aexp            1   71[COMRAM] unsigned char 
  6837 ;;  signs           1   70[COMRAM] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  4   58[COMRAM] unsigned char 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;Total ram usage:       16 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 1
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_White
  6858 ;;		_RGB2Hue
  6859 ;;		___flsub
  6860 ;;		_memoryUpdateTime
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text33
  6865   001A6C                     __ptext33:
  6866                           	callstack 0
  6867   001A6C                     ___fladd:
  6868                           	callstack 28
  6869   001A6C  503E               	movf	(___fladd@b+3)^0,w,c
  6870   001A6E  0B80               	andlw	128
  6871   001A70  6E47               	movwf	___fladd@signs^0,c
  6872   001A72  503E               	movf	(___fladd@b+3)^0,w,c
  6873   001A74  243E               	addwf	(___fladd@b+3)^0,w,c
  6874   001A76  6E49               	movwf	___fladd@bexp^0,c
  6875   001A78  AE3D               	btfss	(___fladd@b+2)^0,7,c
  6876   001A7A  EF41  F00D         	goto	u2911
  6877   001A7E  EF43  F00D         	goto	u2910
  6878   001A82                     u2911:
  6879   001A82  EF44  F00D         	goto	l3586
  6880   001A86                     u2910:
  6881   001A86  8049               	bsf	___fladd@bexp^0,0,c
  6882   001A88                     l3586:
  6883   001A88  5049               	movf	___fladd@bexp^0,w,c
  6884   001A8A  B4D8               	btfsc	status,2,c
  6885   001A8C  EF4A  F00D         	goto	u2921
  6886   001A90  EF4C  F00D         	goto	u2920
  6887   001A94                     u2921:
  6888   001A94  EF61  F00D         	goto	l3596
  6889   001A98                     u2920:
  6890   001A98  2849               	incf	___fladd@bexp^0,w,c
  6891   001A9A  A4D8               	btfss	status,2,c
  6892   001A9C  EF52  F00D         	goto	u2931
  6893   001AA0  EF54  F00D         	goto	u2930
  6894   001AA4                     u2931:
  6895   001AA4  EF5C  F00D         	goto	l3592
  6896   001AA8                     u2930:
  6897   001AA8  0E00               	movlw	0
  6898   001AAA  6E3B               	movwf	___fladd@b^0,c
  6899   001AAC  0E00               	movlw	0
  6900   001AAE  6E3C               	movwf	(___fladd@b+1)^0,c
  6901   001AB0  0E00               	movlw	0
  6902   001AB2  6E3D               	movwf	(___fladd@b+2)^0,c
  6903   001AB4  0E00               	movlw	0
  6904   001AB6  6E3E               	movwf	(___fladd@b+3)^0,c
  6905   001AB8                     l3592:
  6906   001AB8  8E3D               	bsf	(___fladd@b+2)^0,7,c
  6907   001ABA  0E00               	movlw	0
  6908   001ABC  6E3E               	movwf	(___fladd@b+3)^0,c
  6909   001ABE  EF69  F00D         	goto	l3598
  6910   001AC2                     l3596:
  6911   001AC2  0E00               	movlw	0
  6912   001AC4  6E3B               	movwf	___fladd@b^0,c
  6913   001AC6  0E00               	movlw	0
  6914   001AC8  6E3C               	movwf	(___fladd@b+1)^0,c
  6915   001ACA  0E00               	movlw	0
  6916   001ACC  6E3D               	movwf	(___fladd@b+2)^0,c
  6917   001ACE  0E00               	movlw	0
  6918   001AD0  6E3E               	movwf	(___fladd@b+3)^0,c
  6919   001AD2                     l3598:
  6920   001AD2  5042               	movf	(___fladd@a+3)^0,w,c
  6921   001AD4  0B80               	andlw	128
  6922   001AD6  6E48               	movwf	___fladd@aexp^0,c
  6923   001AD8  5047               	movf	___fladd@signs^0,w,c
  6924   001ADA  1848               	xorwf	___fladd@aexp^0,w,c
  6925   001ADC  B4D8               	btfsc	status,2,c
  6926   001ADE  EF73  F00D         	goto	u2941
  6927   001AE2  EF75  F00D         	goto	u2940
  6928   001AE6                     u2941:
  6929   001AE6  EF76  F00D         	goto	l3604
  6930   001AEA                     u2940:
  6931   001AEA  8C47               	bsf	___fladd@signs^0,6,c
  6932   001AEC                     l3604:
  6933   001AEC  5042               	movf	(___fladd@a+3)^0,w,c
  6934   001AEE  2442               	addwf	(___fladd@a+3)^0,w,c
  6935   001AF0  6E48               	movwf	___fladd@aexp^0,c
  6936   001AF2  AE41               	btfss	(___fladd@a+2)^0,7,c
  6937   001AF4  EF7E  F00D         	goto	u2951
  6938   001AF8  EF80  F00D         	goto	u2950
  6939   001AFC                     u2951:
  6940   001AFC  EF81  F00D         	goto	l3610
  6941   001B00                     u2950:
  6942   001B00  8048               	bsf	___fladd@aexp^0,0,c
  6943   001B02                     l3610:
  6944   001B02  5048               	movf	___fladd@aexp^0,w,c
  6945   001B04  B4D8               	btfsc	status,2,c
  6946   001B06  EF87  F00D         	goto	u2961
  6947   001B0A  EF89  F00D         	goto	u2960
  6948   001B0E                     u2961:
  6949   001B0E  EF9E  F00D         	goto	l3620
  6950   001B12                     u2960:
  6951   001B12  2848               	incf	___fladd@aexp^0,w,c
  6952   001B14  A4D8               	btfss	status,2,c
  6953   001B16  EF8F  F00D         	goto	u2971
  6954   001B1A  EF91  F00D         	goto	u2970
  6955   001B1E                     u2971:
  6956   001B1E  EF99  F00D         	goto	l3616
  6957   001B22                     u2970:
  6958   001B22  0E00               	movlw	0
  6959   001B24  6E3F               	movwf	___fladd@a^0,c
  6960   001B26  0E00               	movlw	0
  6961   001B28  6E40               	movwf	(___fladd@a+1)^0,c
  6962   001B2A  0E00               	movlw	0
  6963   001B2C  6E41               	movwf	(___fladd@a+2)^0,c
  6964   001B2E  0E00               	movlw	0
  6965   001B30  6E42               	movwf	(___fladd@a+3)^0,c
  6966   001B32                     l3616:
  6967   001B32  8E41               	bsf	(___fladd@a+2)^0,7,c
  6968   001B34  0E00               	movlw	0
  6969   001B36  6E42               	movwf	(___fladd@a+3)^0,c
  6970   001B38  EFA6  F00D         	goto	l3622
  6971   001B3C                     l3620:
  6972   001B3C  0E00               	movlw	0
  6973   001B3E  6E3F               	movwf	___fladd@a^0,c
  6974   001B40  0E00               	movlw	0
  6975   001B42  6E40               	movwf	(___fladd@a+1)^0,c
  6976   001B44  0E00               	movlw	0
  6977   001B46  6E41               	movwf	(___fladd@a+2)^0,c
  6978   001B48  0E00               	movlw	0
  6979   001B4A  6E42               	movwf	(___fladd@a+3)^0,c
  6980   001B4C                     l3622:
  6981   001B4C  5049               	movf	___fladd@bexp^0,w,c
  6982   001B4E  5C48               	subwf	___fladd@aexp^0,w,c
  6983   001B50  B0D8               	btfsc	status,0,c
  6984   001B52  EFAD  F00D         	goto	u2981
  6985   001B56  EFAF  F00D         	goto	u2980
  6986   001B5A                     u2981:
  6987   001B5A  EFD6  F00D         	goto	l3658
  6988   001B5E                     u2980:
  6989   001B5E  AC47               	btfss	___fladd@signs^0,6,c
  6990   001B60  EFB4  F00D         	goto	u2991
  6991   001B64  EFB6  F00D         	goto	u2990
  6992   001B68                     u2991:
  6993   001B68  EFB8  F00D         	goto	l3628
  6994   001B6C                     u2990:
  6995   001B6C  0E80               	movlw	128
  6996   001B6E  1A47               	xorwf	___fladd@signs^0,f,c
  6997   001B70                     l3628:
  6998   001B70  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  6999   001B74  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7000   001B78  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  7001   001B7C  C03B  F04A         	movff	___fladd@b,___fladd@grs
  7002   001B80  C03F  F03B         	movff	___fladd@a,___fladd@b
  7003   001B84  C04A  F03F         	movff	___fladd@grs,___fladd@a
  7004   001B88  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  7005   001B8C  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  7006   001B90  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  7007   001B94  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  7008   001B98  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  7009   001B9C  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  7010   001BA0  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  7011   001BA4  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  7012   001BA8  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  7013   001BAC                     l3658:
  7014   001BAC  0E00               	movlw	0
  7015   001BAE  6E4A               	movwf	___fladd@grs^0,c
  7016   001BB0  5049               	movf	___fladd@bexp^0,w,c
  7017   001BB2  C048  F043         	movff	___fladd@aexp,??___fladd
  7018   001BB6  6A44               	clrf	(??___fladd+1)^0,c
  7019   001BB8  5E43               	subwf	??___fladd^0,f,c
  7020   001BBA  0E00               	movlw	0
  7021   001BBC  5A44               	subwfb	(??___fladd+1)^0,f,c
  7022   001BBE  BE44               	btfsc	(??___fladd+1)^0,7,c
  7023   001BC0  EFEB  F00D         	goto	u3001
  7024   001BC4  5044               	movf	(??___fladd+1)^0,w,c
  7025   001BC6  E109               	bnz	u3000
  7026   001BC8  0E1A               	movlw	26
  7027   001BCA  5C43               	subwf	??___fladd^0,w,c
  7028   001BCC  A0D8               	btfss	status,0,c
  7029   001BCE  EFEB  F00D         	goto	u3001
  7030   001BD2  EFED  F00D         	goto	u3000
  7031   001BD6                     u3001:
  7032   001BD6  EF24  F00E         	goto	l1216
  7033   001BDA                     u3000:
  7034   001BDA  503B               	movf	___fladd@b^0,w,c
  7035   001BDC  103C               	iorwf	(___fladd@b+1)^0,w,c
  7036   001BDE  103D               	iorwf	(___fladd@b+2)^0,w,c
  7037   001BE0  103E               	iorwf	(___fladd@b+3)^0,w,c
  7038   001BE2  A4D8               	btfss	status,2,c
  7039   001BE4  EFF6  F00D         	goto	u3011
  7040   001BE8  EFF9  F00D         	goto	u3010
  7041   001BEC                     u3011:
  7042   001BEC  0E01               	movlw	1
  7043   001BEE  EFFA  F00D         	goto	u3020
  7044   001BF2                     u3010:
  7045   001BF2  0E00               	movlw	0
  7046   001BF4                     u3020:
  7047   001BF4  6E4A               	movwf	___fladd@grs^0,c
  7048   001BF6  0E00               	movlw	0
  7049   001BF8  6E3B               	movwf	___fladd@b^0,c
  7050   001BFA  0E00               	movlw	0
  7051   001BFC  6E3C               	movwf	(___fladd@b+1)^0,c
  7052   001BFE  0E00               	movlw	0
  7053   001C00  6E3D               	movwf	(___fladd@b+2)^0,c
  7054   001C02  0E00               	movlw	0
  7055   001C04  6E3E               	movwf	(___fladd@b+3)^0,c
  7056   001C06  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7057   001C0A  EF2D  F00E         	goto	l1215
  7058   001C0E                     l1217:
  7059   001C0E  A04A               	btfss	___fladd@grs^0,0,c
  7060   001C10  EF0C  F00E         	goto	u3031
  7061   001C14  EF0E  F00E         	goto	u3030
  7062   001C18                     u3031:
  7063   001C18  EF14  F00E         	goto	l3670
  7064   001C1C                     u3030:
  7065   001C1C  90D8               	bcf	status,0,c
  7066   001C1E  304A               	rrcf	___fladd@grs^0,w,c
  7067   001C20  0901               	iorlw	1
  7068   001C22  6E4A               	movwf	___fladd@grs^0,c
  7069   001C24  EF16  F00E         	goto	l3672
  7070   001C28                     l3670:
  7071   001C28  90D8               	bcf	status,0,c
  7072   001C2A  324A               	rrcf	___fladd@grs^0,f,c
  7073   001C2C                     l3672:
  7074   001C2C  A03B               	btfss	___fladd@b^0,0,c
  7075   001C2E  EF1B  F00E         	goto	u3041
  7076   001C32  EF1D  F00E         	goto	u3040
  7077   001C36                     u3041:
  7078   001C36  EF1E  F00E         	goto	l3676
  7079   001C3A                     u3040:
  7080   001C3A  8E4A               	bsf	___fladd@grs^0,7,c
  7081   001C3C                     l3676:
  7082   001C3C  343E               	rlcf	(___fladd@b+3)^0,w,c
  7083   001C3E  323E               	rrcf	(___fladd@b+3)^0,f,c
  7084   001C40  323D               	rrcf	(___fladd@b+2)^0,f,c
  7085   001C42  323C               	rrcf	(___fladd@b+1)^0,f,c
  7086   001C44  323B               	rrcf	___fladd@b^0,f,c
  7087   001C46  2A49               	incf	___fladd@bexp^0,f,c
  7088   001C48                     l1216:
  7089   001C48  5048               	movf	___fladd@aexp^0,w,c
  7090   001C4A  5C49               	subwf	___fladd@bexp^0,w,c
  7091   001C4C  A0D8               	btfss	status,0,c
  7092   001C4E  EF2B  F00E         	goto	u3051
  7093   001C52  EF2D  F00E         	goto	u3050
  7094   001C56                     u3051:
  7095   001C56  EF07  F00E         	goto	l1217
  7096   001C5A                     u3050:
  7097   001C5A                     l1215:
  7098   001C5A  BC47               	btfsc	___fladd@signs^0,6,c
  7099   001C5C  EF32  F00E         	goto	u3061
  7100   001C60  EF34  F00E         	goto	u3060
  7101   001C64                     u3061:
  7102   001C64  EF74  F00E         	goto	l3704
  7103   001C68                     u3060:
  7104   001C68  5049               	movf	___fladd@bexp^0,w,c
  7105   001C6A  A4D8               	btfss	status,2,c
  7106   001C6C  EF3A  F00E         	goto	u3071
  7107   001C70  EF3C  F00E         	goto	u3070
  7108   001C74                     u3071:
  7109   001C74  EF46  F00E         	goto	l3686
  7110   001C78                     u3070:
  7111   001C78  0E00               	movlw	0
  7112   001C7A  6E3B               	movwf	?___fladd^0,c
  7113   001C7C  0E00               	movlw	0
  7114   001C7E  6E3C               	movwf	(?___fladd+1)^0,c
  7115   001C80  0E00               	movlw	0
  7116   001C82  6E3D               	movwf	(?___fladd+2)^0,c
  7117   001C84  0E00               	movlw	0
  7118   001C86  6E3E               	movwf	(?___fladd+3)^0,c
  7119   001C88  EF95  F00F         	goto	l1224
  7120   001C8C                     l3686:
  7121   001C8C  503F               	movf	___fladd@a^0,w,c
  7122   001C8E  263B               	addwf	___fladd@b^0,f,c
  7123   001C90  5040               	movf	(___fladd@a+1)^0,w,c
  7124   001C92  223C               	addwfc	(___fladd@b+1)^0,f,c
  7125   001C94  5041               	movf	(___fladd@a+2)^0,w,c
  7126   001C96  223D               	addwfc	(___fladd@b+2)^0,f,c
  7127   001C98  5042               	movf	(___fladd@a+3)^0,w,c
  7128   001C9A  223E               	addwfc	(___fladd@b+3)^0,f,c
  7129   001C9C  A03E               	btfss	(___fladd@b+3)^0,0,c
  7130   001C9E  EF53  F00E         	goto	u3081
  7131   001CA2  EF55  F00E         	goto	u3080
  7132   001CA6                     u3081:
  7133   001CA6  EF01  F00F         	goto	l3740
  7134   001CAA                     u3080:
  7135   001CAA  A04A               	btfss	___fladd@grs^0,0,c
  7136   001CAC  EF5A  F00E         	goto	u3091
  7137   001CB0  EF5C  F00E         	goto	u3090
  7138   001CB4                     u3091:
  7139   001CB4  EF62  F00E         	goto	l3694
  7140   001CB8                     u3090:
  7141   001CB8  90D8               	bcf	status,0,c
  7142   001CBA  304A               	rrcf	___fladd@grs^0,w,c
  7143   001CBC  0901               	iorlw	1
  7144   001CBE  6E4A               	movwf	___fladd@grs^0,c
  7145   001CC0  EF64  F00E         	goto	l3696
  7146   001CC4                     l3694:
  7147   001CC4  90D8               	bcf	status,0,c
  7148   001CC6  324A               	rrcf	___fladd@grs^0,f,c
  7149   001CC8                     l3696:
  7150   001CC8  A03B               	btfss	___fladd@b^0,0,c
  7151   001CCA  EF69  F00E         	goto	u3101
  7152   001CCE  EF6B  F00E         	goto	u3100
  7153   001CD2                     u3101:
  7154   001CD2  EF6C  F00E         	goto	l3700
  7155   001CD6                     u3100:
  7156   001CD6  8E4A               	bsf	___fladd@grs^0,7,c
  7157   001CD8                     l3700:
  7158   001CD8  343E               	rlcf	(___fladd@b+3)^0,w,c
  7159   001CDA  323E               	rrcf	(___fladd@b+3)^0,f,c
  7160   001CDC  323D               	rrcf	(___fladd@b+2)^0,f,c
  7161   001CDE  323C               	rrcf	(___fladd@b+1)^0,f,c
  7162   001CE0  323B               	rrcf	___fladd@b^0,f,c
  7163   001CE2  2A49               	incf	___fladd@bexp^0,f,c
  7164   001CE4  EF01  F00F         	goto	l3740
  7165   001CE8                     l3704:
  7166   001CE8  503F               	movf	___fladd@a^0,w,c
  7167   001CEA  5C3B               	subwf	___fladd@b^0,w,c
  7168   001CEC  5040               	movf	(___fladd@a+1)^0,w,c
  7169   001CEE  583C               	subwfb	(___fladd@b+1)^0,w,c
  7170   001CF0  5041               	movf	(___fladd@a+2)^0,w,c
  7171   001CF2  583D               	subwfb	(___fladd@b+2)^0,w,c
  7172   001CF4  503E               	movf	(___fladd@b+3)^0,w,c
  7173   001CF6  0A80               	xorlw	128
  7174   001CF8  6E43               	movwf	??___fladd^0,c
  7175   001CFA  5042               	movf	(___fladd@a+3)^0,w,c
  7176   001CFC  0A80               	xorlw	128
  7177   001CFE  5843               	subwfb	??___fladd^0,w,c
  7178   001D00  B0D8               	btfsc	status,0,c
  7179   001D02  EF85  F00E         	goto	u3111
  7180   001D06  EF87  F00E         	goto	u3110
  7181   001D0A                     u3111:
  7182   001D0A  EFB2  F00E         	goto	l3714
  7183   001D0E                     u3110:
  7184   001D0E  503B               	movf	___fladd@b^0,w,c
  7185   001D10  5C3F               	subwf	___fladd@a^0,w,c
  7186   001D12  6E43               	movwf	??___fladd^0,c
  7187   001D14  503C               	movf	(___fladd@b+1)^0,w,c
  7188   001D16  5840               	subwfb	(___fladd@a+1)^0,w,c
  7189   001D18  6E44               	movwf	(??___fladd+1)^0,c
  7190   001D1A  503D               	movf	(___fladd@b+2)^0,w,c
  7191   001D1C  5841               	subwfb	(___fladd@a+2)^0,w,c
  7192   001D1E  6E45               	movwf	(??___fladd+2)^0,c
  7193   001D20  503E               	movf	(___fladd@b+3)^0,w,c
  7194   001D22  5842               	subwfb	(___fladd@a+3)^0,w,c
  7195   001D24  6E46               	movwf	(??___fladd+3)^0,c
  7196   001D26  0EFF               	movlw	255
  7197   001D28  2443               	addwf	??___fladd^0,w,c
  7198   001D2A  6E3B               	movwf	___fladd@b^0,c
  7199   001D2C  0EFF               	movlw	255
  7200   001D2E  2044               	addwfc	(??___fladd+1)^0,w,c
  7201   001D30  6E3C               	movwf	(___fladd@b+1)^0,c
  7202   001D32  0EFF               	movlw	255
  7203   001D34  2045               	addwfc	(??___fladd+2)^0,w,c
  7204   001D36  6E3D               	movwf	(___fladd@b+2)^0,c
  7205   001D38  0EFF               	movlw	255
  7206   001D3A  2046               	addwfc	(??___fladd+3)^0,w,c
  7207   001D3C  6E3E               	movwf	(___fladd@b+3)^0,c
  7208   001D3E  0E80               	movlw	128
  7209   001D40  1A47               	xorwf	___fladd@signs^0,f,c
  7210   001D42  6C4A               	negf	___fladd@grs^0,c
  7211   001D44  504A               	movf	___fladd@grs^0,w,c
  7212   001D46  A4D8               	btfss	status,2,c
  7213   001D48  EFA8  F00E         	goto	u3121
  7214   001D4C  EFAA  F00E         	goto	u3120
  7215   001D50                     u3121:
  7216   001D50  EFBA  F00E         	goto	l1232
  7217   001D54                     u3120:
  7218   001D54  0E01               	movlw	1
  7219   001D56  263B               	addwf	___fladd@b^0,f,c
  7220   001D58  0E00               	movlw	0
  7221   001D5A  223C               	addwfc	(___fladd@b+1)^0,f,c
  7222   001D5C  223D               	addwfc	(___fladd@b+2)^0,f,c
  7223   001D5E  223E               	addwfc	(___fladd@b+3)^0,f,c
  7224   001D60  EFBA  F00E         	goto	l1232
  7225   001D64                     l3714:
  7226   001D64  503F               	movf	___fladd@a^0,w,c
  7227   001D66  5E3B               	subwf	___fladd@b^0,f,c
  7228   001D68  5040               	movf	(___fladd@a+1)^0,w,c
  7229   001D6A  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  7230   001D6C  5041               	movf	(___fladd@a+2)^0,w,c
  7231   001D6E  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  7232   001D70  5042               	movf	(___fladd@a+3)^0,w,c
  7233   001D72  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  7234   001D74                     l1232:
  7235   001D74  503B               	movf	___fladd@b^0,w,c
  7236   001D76  103C               	iorwf	(___fladd@b+1)^0,w,c
  7237   001D78  103D               	iorwf	(___fladd@b+2)^0,w,c
  7238   001D7A  103E               	iorwf	(___fladd@b+3)^0,w,c
  7239   001D7C  A4D8               	btfss	status,2,c
  7240   001D7E  EFC3  F00E         	goto	u3131
  7241   001D82  EFC5  F00E         	goto	u3130
  7242   001D86                     u3131:
  7243   001D86  EFFA  F00E         	goto	l3738
  7244   001D8A                     u3130:
  7245   001D8A  504A               	movf	___fladd@grs^0,w,c
  7246   001D8C  A4D8               	btfss	status,2,c
  7247   001D8E  EFCB  F00E         	goto	u3141
  7248   001D92  EFCD  F00E         	goto	u3140
  7249   001D96                     u3141:
  7250   001D96  EFFA  F00E         	goto	l3738
  7251   001D9A                     u3140:
  7252   001D9A  0E00               	movlw	0
  7253   001D9C  6E3B               	movwf	?___fladd^0,c
  7254   001D9E  0E00               	movlw	0
  7255   001DA0  6E3C               	movwf	(?___fladd+1)^0,c
  7256   001DA2  0E00               	movlw	0
  7257   001DA4  6E3D               	movwf	(?___fladd+2)^0,c
  7258   001DA6  0E00               	movlw	0
  7259   001DA8  6E3E               	movwf	(?___fladd+3)^0,c
  7260   001DAA  EF95  F00F         	goto	l1224
  7261   001DAE                     l3722:
  7262   001DAE  90D8               	bcf	status,0,c
  7263   001DB0  363B               	rlcf	___fladd@b^0,f,c
  7264   001DB2  363C               	rlcf	(___fladd@b+1)^0,f,c
  7265   001DB4  363D               	rlcf	(___fladd@b+2)^0,f,c
  7266   001DB6  363E               	rlcf	(___fladd@b+3)^0,f,c
  7267   001DB8  AE4A               	btfss	___fladd@grs^0,7,c
  7268   001DBA  EFE1  F00E         	goto	u3151
  7269   001DBE  EFE3  F00E         	goto	u3150
  7270   001DC2                     u3151:
  7271   001DC2  EFE4  F00E         	goto	l3728
  7272   001DC6                     u3150:
  7273   001DC6  803B               	bsf	___fladd@b^0,0,c
  7274   001DC8                     l3728:
  7275   001DC8  A04A               	btfss	___fladd@grs^0,0,c
  7276   001DCA  EFE9  F00E         	goto	u3161
  7277   001DCE  EFEB  F00E         	goto	u3160
  7278   001DD2                     u3161:
  7279   001DD2  EFEF  F00E         	goto	l3732
  7280   001DD6                     u3160:
  7281   001DD6  80D8               	bsf	status,0,c
  7282   001DD8  364A               	rlcf	___fladd@grs^0,f,c
  7283   001DDA  EFF1  F00E         	goto	l3734
  7284   001DDE                     l3732:
  7285   001DDE  90D8               	bcf	status,0,c
  7286   001DE0  364A               	rlcf	___fladd@grs^0,f,c
  7287   001DE2                     l3734:
  7288   001DE2  5049               	movf	___fladd@bexp^0,w,c
  7289   001DE4  B4D8               	btfsc	status,2,c
  7290   001DE6  EFF7  F00E         	goto	u3171
  7291   001DEA  EFF9  F00E         	goto	u3170
  7292   001DEE                     u3171:
  7293   001DEE  EFFA  F00E         	goto	l3738
  7294   001DF2                     u3170:
  7295   001DF2  0649               	decf	___fladd@bexp^0,f,c
  7296   001DF4                     l3738:
  7297   001DF4  AE3D               	btfss	(___fladd@b+2)^0,7,c
  7298   001DF6  EFFF  F00E         	goto	u3181
  7299   001DFA  EF01  F00F         	goto	u3180
  7300   001DFE                     u3181:
  7301   001DFE  EFD7  F00E         	goto	l3722
  7302   001E02                     u3180:
  7303   001E02                     l3740:
  7304   001E02  0E00               	movlw	0
  7305   001E04  6E48               	movwf	___fladd@aexp^0,c
  7306   001E06  AE4A               	btfss	___fladd@grs^0,7,c
  7307   001E08  EF08  F00F         	goto	u3191
  7308   001E0C  EF0A  F00F         	goto	u3190
  7309   001E10                     u3191:
  7310   001E10  EF22  F00F         	goto	l1241
  7311   001E14                     u3190:
  7312   001E14  C04A  F043         	movff	___fladd@grs,??___fladd
  7313   001E18  0E7F               	movlw	127
  7314   001E1A  1643               	andwf	??___fladd^0,f,c
  7315   001E1C  B4D8               	btfsc	status,2,c
  7316   001E1E  EF13  F00F         	goto	u3201
  7317   001E22  EF15  F00F         	goto	u3200
  7318   001E26                     u3201:
  7319   001E26  EF19  F00F         	goto	l1242
  7320   001E2A                     u3200:
  7321   001E2A                     l3746:
  7322   001E2A  0E01               	movlw	1
  7323   001E2C  6E48               	movwf	___fladd@aexp^0,c
  7324   001E2E  EF22  F00F         	goto	l1241
  7325   001E32                     l1242:
  7326   001E32  A03B               	btfss	___fladd@b^0,0,c
  7327   001E34  EF1E  F00F         	goto	u3211
  7328   001E38  EF20  F00F         	goto	u3210
  7329   001E3C                     u3211:
  7330   001E3C  EF22  F00F         	goto	l1241
  7331   001E40                     u3210:
  7332   001E40  EF15  F00F         	goto	l3746
  7333   001E44                     l1241:
  7334   001E44  5048               	movf	___fladd@aexp^0,w,c
  7335   001E46  B4D8               	btfsc	status,2,c
  7336   001E48  EF28  F00F         	goto	u3221
  7337   001E4C  EF2A  F00F         	goto	u3220
  7338   001E50                     u3221:
  7339   001E50  EF55  F00F         	goto	l3758
  7340   001E54                     u3220:
  7341   001E54  0E01               	movlw	1
  7342   001E56  263B               	addwf	___fladd@b^0,f,c
  7343   001E58  0E00               	movlw	0
  7344   001E5A  223C               	addwfc	(___fladd@b+1)^0,f,c
  7345   001E5C  223D               	addwfc	(___fladd@b+2)^0,f,c
  7346   001E5E  223E               	addwfc	(___fladd@b+3)^0,f,c
  7347   001E60  A03E               	btfss	(___fladd@b+3)^0,0,c
  7348   001E62  EF35  F00F         	goto	u3231
  7349   001E66  EF37  F00F         	goto	u3230
  7350   001E6A                     u3231:
  7351   001E6A  EF55  F00F         	goto	l3758
  7352   001E6E                     u3230:
  7353   001E6E  C03B  F043         	movff	___fladd@b,??___fladd
  7354   001E72  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  7355   001E76  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  7356   001E7A  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  7357   001E7E  3446               	rlcf	(??___fladd+3)^0,w,c
  7358   001E80  3246               	rrcf	(??___fladd+3)^0,f,c
  7359   001E82  3245               	rrcf	(??___fladd+2)^0,f,c
  7360   001E84  3244               	rrcf	(??___fladd+1)^0,f,c
  7361   001E86  3243               	rrcf	??___fladd^0,f,c
  7362   001E88  C043  F03B         	movff	??___fladd,___fladd@b
  7363   001E8C  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  7364   001E90  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  7365   001E94  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  7366   001E98  2849               	incf	___fladd@bexp^0,w,c
  7367   001E9A  B4D8               	btfsc	status,2,c
  7368   001E9C  EF52  F00F         	goto	u3241
  7369   001EA0  EF54  F00F         	goto	u3240
  7370   001EA4                     u3241:
  7371   001EA4  EF55  F00F         	goto	l3758
  7372   001EA8                     u3240:
  7373   001EA8  2A49               	incf	___fladd@bexp^0,f,c
  7374   001EAA                     l3758:
  7375   001EAA  2849               	incf	___fladd@bexp^0,w,c
  7376   001EAC  B4D8               	btfsc	status,2,c
  7377   001EAE  EF5B  F00F         	goto	u3251
  7378   001EB2  EF5D  F00F         	goto	u3250
  7379   001EB6                     u3251:
  7380   001EB6  EF65  F00F         	goto	l3762
  7381   001EBA                     u3250:
  7382   001EBA  5049               	movf	___fladd@bexp^0,w,c
  7383   001EBC  A4D8               	btfss	status,2,c
  7384   001EBE  EF63  F00F         	goto	u3261
  7385   001EC2  EF65  F00F         	goto	u3260
  7386   001EC6                     u3261:
  7387   001EC6  EF77  F00F         	goto	l3766
  7388   001ECA                     u3260:
  7389   001ECA                     l3762:
  7390   001ECA  0E00               	movlw	0
  7391   001ECC  6E3B               	movwf	___fladd@b^0,c
  7392   001ECE  0E00               	movlw	0
  7393   001ED0  6E3C               	movwf	(___fladd@b+1)^0,c
  7394   001ED2  0E00               	movlw	0
  7395   001ED4  6E3D               	movwf	(___fladd@b+2)^0,c
  7396   001ED6  0E00               	movlw	0
  7397   001ED8  6E3E               	movwf	(___fladd@b+3)^0,c
  7398   001EDA  5049               	movf	___fladd@bexp^0,w,c
  7399   001EDC  A4D8               	btfss	status,2,c
  7400   001EDE  EF73  F00F         	goto	u3271
  7401   001EE2  EF75  F00F         	goto	u3270
  7402   001EE6                     u3271:
  7403   001EE6  EF77  F00F         	goto	l3766
  7404   001EEA                     u3270:
  7405   001EEA  0E00               	movlw	0
  7406   001EEC  6E47               	movwf	___fladd@signs^0,c
  7407   001EEE                     l3766:
  7408   001EEE  A049               	btfss	___fladd@bexp^0,0,c
  7409   001EF0  EF7C  F00F         	goto	u3281
  7410   001EF4  EF7E  F00F         	goto	u3280
  7411   001EF8                     u3281:
  7412   001EF8  EF81  F00F         	goto	l3770
  7413   001EFC                     u3280:
  7414   001EFC  8E3D               	bsf	(___fladd@b+2)^0,7,c
  7415   001EFE  EF82  F00F         	goto	l3772
  7416   001F02                     l3770:
  7417   001F02  9E3D               	bcf	(___fladd@b+2)^0,7,c
  7418   001F04                     l3772:
  7419   001F04  90D8               	bcf	status,0,c
  7420   001F06  3049               	rrcf	___fladd@bexp^0,w,c
  7421   001F08  6E3E               	movwf	(___fladd@b+3)^0,c
  7422   001F0A  AE47               	btfss	___fladd@signs^0,7,c
  7423   001F0C  EF8A  F00F         	goto	u3291
  7424   001F10  EF8C  F00F         	goto	u3290
  7425   001F14                     u3291:
  7426   001F14  EF8D  F00F         	goto	l3778
  7427   001F18                     u3290:
  7428   001F18  8E3E               	bsf	(___fladd@b+3)^0,7,c
  7429   001F1A                     l3778:
  7430   001F1A  C03B  F03B         	movff	___fladd@b,?___fladd
  7431   001F1E  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  7432   001F22  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  7433   001F26  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  7434   001F2A                     l1224:
  7435   001F2A  0012               	return		;funcret
  7436   001F2C                     __end_of___fladd:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function _Yellow_rev1_R90 *****************
  7440 ;; Defined at:
  7441 ;;		line 266 in file "dc_motor.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7444 ;;		 -> motorL(9), 
  7445 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7446 ;;		 -> motorR(9), 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;Total ram usage:        6 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 5
  7465 ;; This function calls:
  7466 ;;		_Left45
  7467 ;;		_Right45
  7468 ;;		_fullSpeedReverse
  7469 ;;		_reverseHalfSquare
  7470 ;; This function is called by:
  7471 ;;		_White
  7472 ;;		_Colour2Action
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text34
  7477   003A6A                     __ptext34:
  7478                           	callstack 0
  7479   003A6A                     _Yellow_rev1_R90:
  7480                           	callstack 24
  7481   003A6A                     
  7482                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7483   003A6A  0100               	movlb	0	; () banked
  7484   003A6C  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7485   003A6E  B4D8               	btfsc	status,2,c
  7486   003A70  EF3C  F01D         	goto	u2861
  7487   003A74  EF3E  F01D         	goto	u2860
  7488   003A78                     u2861:
  7489   003A78  EF74  F01D         	goto	l3542
  7490   003A7C                     u2860:
  7491   003A7C                     
  7492                           ; BSR set to: 0
  7493                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7494   003A7C  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7495   003A80  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7496   003A84  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7497   003A88  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7498   003A8C  EC87  F020         	call	_reverseHalfSquare	;wreg free
  7499                           
  7500                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7501   003A90  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7502   003A94  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7503   003A98  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7504   003A9C  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7505   003AA0  EC0A  F021         	call	_fullSpeedReverse	;wreg free
  7506   003AA4                     
  7507                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7508   003AA4  0E39               	movlw	57
  7509   003AA6  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7510   003AA8  0ED2               	movlw	210
  7511   003AAA  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7512   003AAC  0E4C               	movlw	76
  7513   003AAE                     u4357:
  7514   003AAE  2EE8               	decfsz	wreg,f,c
  7515   003AB0  D7FE               	bra	u4357
  7516   003AB2  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7517   003AB4  D7FC               	bra	u4357
  7518   003AB6  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7519   003AB8  D7FA               	bra	u4357
  7520   003ABA  D000               	nop2	
  7521   003ABC                     
  7522                           ;dc_motor.c: 274:         Right45(mL,mR);
  7523   003ABC  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7524   003AC0  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7525   003AC4  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7526   003AC8  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7527   003ACC  ECFD  F01F         	call	_Right45	;wreg free
  7528   003AD0                     
  7529                           ;dc_motor.c: 275:         Right45(mL,mR);
  7530   003AD0  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7531   003AD4  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7532   003AD8  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7533   003ADC  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7534   003AE0  ECFD  F01F         	call	_Right45	;wreg free
  7535                           
  7536                           ;dc_motor.c: 276:     }
  7537   003AE4  EF88  F01D         	goto	l305
  7538   003AE8                     l3542:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;dc_motor.c: 280:         Left45(mL,mR);
  7542   003AE8  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7543   003AEC  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7544   003AF0  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7545   003AF4  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7546   003AF8  EC42  F020         	call	_Left45	;wreg free
  7547                           
  7548                           ;dc_motor.c: 281:         Left45(mL,mR);
  7549   003AFC  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7550   003B00  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7551   003B04  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7552   003B08  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7553   003B0C  EC42  F020         	call	_Left45	;wreg free
  7554   003B10                     l305:
  7555   003B10  0012               	return		;funcret
  7556   003B12                     __end_of_Yellow_rev1_R90:
  7557                           	callstack 0
  7558                           
  7559 ;; *************** function _TimerReset *****************
  7560 ;; Defined at:
  7561 ;;		line 23 in file "timer.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;		None
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;Total ram usage:        0 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 1
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_main
  7586 ;;		_White
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text35
  7591   004A7A                     __ptext35:
  7592                           	callstack 0
  7593   004A7A                     _TimerReset:
  7594                           	callstack 29
  7595   004A7A                     
  7596                           ;timer.c: 25:     TMR0L = 0;
  7597   004A7A  0E00               	movlw	0
  7598   004A7C  6ED3               	movwf	211,c	;volatile
  7599                           
  7600                           ;timer.c: 26:     TMR0H = 0;
  7601   004A7E  0E00               	movlw	0
  7602   004A80  6ED4               	movwf	212,c	;volatile
  7603   004A82  0012               	return		;funcret
  7604   004A84                     __end_of_TimerReset:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _Red_R90 *****************
  7608 ;; Defined at:
  7609 ;;		line 226 in file "dc_motor.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7612 ;;		 -> motorL(9), 
  7613 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7614 ;;		 -> motorR(9), 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:        4 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 5
  7633 ;; This function calls:
  7634 ;;		_Left45
  7635 ;;		_Right45
  7636 ;;		_reverseHalfSquare
  7637 ;; This function is called by:
  7638 ;;		_White
  7639 ;;		_Colour2Action
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text36
  7644   004294                     __ptext36:
  7645                           	callstack 0
  7646   004294                     _Red_R90:
  7647                           	callstack 23
  7648   004294                     
  7649                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7650   004294  0100               	movlb	0	; () banked
  7651   004296  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7652   004298  B4D8               	btfsc	status,2,c
  7653   00429A  EF51  F021         	goto	u2831
  7654   00429E  EF53  F021         	goto	u2830
  7655   0042A2                     u2831:
  7656   0042A2  EF73  F021         	goto	l3518
  7657   0042A6                     u2830:
  7658   0042A6                     
  7659                           ; BSR set to: 0
  7660                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7661   0042A6  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7662   0042AA  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7663   0042AE  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7664   0042B2  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7665   0042B6  EC87  F020         	call	_reverseHalfSquare	;wreg free
  7666                           
  7667                           ;dc_motor.c: 230:         Right45(mL,mR);
  7668   0042BA  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7669   0042BE  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7670   0042C2  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7671   0042C6  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7672   0042CA  ECFD  F01F         	call	_Right45	;wreg free
  7673                           
  7674                           ;dc_motor.c: 231:         Right45(mL,mR);
  7675   0042CE  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7676   0042D2  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7677   0042D6  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7678   0042DA  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7679   0042DE  ECFD  F01F         	call	_Right45	;wreg free
  7680                           
  7681                           ;dc_motor.c: 232:     }
  7682   0042E2  EF87  F021         	goto	l290
  7683   0042E6                     l3518:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;dc_motor.c: 235:         Left45(mL,mR);
  7687   0042E6  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7688   0042EA  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7689   0042EE  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7690   0042F2  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7691   0042F6  EC42  F020         	call	_Left45	;wreg free
  7692                           
  7693                           ;dc_motor.c: 236:         Left45(mL,mR);
  7694   0042FA  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7695   0042FE  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7696   004302  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7697   004306  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7698   00430A  EC42  F020         	call	_Left45	;wreg free
  7699   00430E                     l290:
  7700   00430E  0012               	return		;funcret
  7701   004310                     __end_of_Red_R90:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _Pink_rev1_L90 *****************
  7705 ;; Defined at:
  7706 ;;		line 284 in file "dc_motor.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7709 ;;		 -> motorL(9), 
  7710 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7711 ;;		 -> motorR(9), 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;Total ram usage:        6 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 5
  7730 ;; This function calls:
  7731 ;;		_Left45
  7732 ;;		_Right45
  7733 ;;		_fullSpeedReverse
  7734 ;;		_reverseHalfSquare
  7735 ;; This function is called by:
  7736 ;;		_White
  7737 ;;		_Colour2Action
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text37
  7742   003B12                     __ptext37:
  7743                           	callstack 0
  7744   003B12                     _Pink_rev1_L90:
  7745                           	callstack 23
  7746   003B12                     
  7747                           ;dc_motor.c: 284: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 285: {;dc_motor.c: 286:     if (ForwardFlag){
  7748   003B12  0100               	movlb	0	; () banked
  7749   003B14  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7750   003B16  B4D8               	btfsc	status,2,c
  7751   003B18  EF90  F01D         	goto	u2871
  7752   003B1C  EF92  F01D         	goto	u2870
  7753   003B20                     u2871:
  7754   003B20  EFC8  F01D         	goto	l3554
  7755   003B24                     u2870:
  7756   003B24                     
  7757                           ; BSR set to: 0
  7758                           ;dc_motor.c: 287:         reverseHalfSquare(mL,mR);
  7759   003B24  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7760   003B28  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7761   003B2C  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7762   003B30  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7763   003B34  EC87  F020         	call	_reverseHalfSquare	;wreg free
  7764                           
  7765                           ;dc_motor.c: 289:         fullSpeedReverse(mL,mR);
  7766   003B38  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7767   003B3C  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7768   003B40  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7769   003B44  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7770   003B48  EC0A  F021         	call	_fullSpeedReverse	;wreg free
  7771   003B4C                     
  7772                           ;dc_motor.c: 290:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7773   003B4C  0E39               	movlw	57
  7774   003B4E  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7775   003B50  0ED2               	movlw	210
  7776   003B52  6E25               	movwf	??_Pink_rev1_L90^0,c
  7777   003B54  0E4C               	movlw	76
  7778   003B56                     u4367:
  7779   003B56  2EE8               	decfsz	wreg,f,c
  7780   003B58  D7FE               	bra	u4367
  7781   003B5A  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7782   003B5C  D7FC               	bra	u4367
  7783   003B5E  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7784   003B60  D7FA               	bra	u4367
  7785   003B62  D000               	nop2	
  7786   003B64                     
  7787                           ;dc_motor.c: 291:         Left45(mL,mR);
  7788   003B64  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7789   003B68  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7790   003B6C  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7791   003B70  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7792   003B74  EC42  F020         	call	_Left45	;wreg free
  7793   003B78                     
  7794                           ;dc_motor.c: 292:         Left45(mL,mR);
  7795   003B78  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7796   003B7C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7797   003B80  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7798   003B84  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7799   003B88  EC42  F020         	call	_Left45	;wreg free
  7800                           
  7801                           ;dc_motor.c: 293:     }
  7802   003B8C  EFDC  F01D         	goto	l310
  7803   003B90                     l3554:
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;dc_motor.c: 296:         Right45(mL,mR);
  7807   003B90  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7808   003B94  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7809   003B98  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7810   003B9C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7811   003BA0  ECFD  F01F         	call	_Right45	;wreg free
  7812                           
  7813                           ;dc_motor.c: 297:         Right45(mL,mR);
  7814   003BA4  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7815   003BA8  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7816   003BAC  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7817   003BB0  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7818   003BB4  ECFD  F01F         	call	_Right45	;wreg free
  7819   003BB8                     l310:
  7820   003BB8  0012               	return		;funcret
  7821   003BBA                     __end_of_Pink_rev1_L90:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function _Orange_R135 *****************
  7825 ;; Defined at:
  7826 ;;		line 300 in file "dc_motor.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7829 ;;		 -> motorL(9), 
  7830 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7831 ;;		 -> motorR(9), 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;Total ram usage:        4 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 5
  7850 ;; This function calls:
  7851 ;;		_Left45
  7852 ;;		_Right45
  7853 ;;		_reverseHalfSquare
  7854 ;; This function is called by:
  7855 ;;		_White
  7856 ;;		_Colour2Action
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text38
  7861   003C60                     __ptext38:
  7862                           	callstack 0
  7863   003C60                     _Orange_R135:
  7864                           	callstack 23
  7865   003C60                     
  7866                           ;dc_motor.c: 300: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           301: {;dc_motor.c: 302:     if (ForwardFlag){
  7867   003C60  0100               	movlb	0	; () banked
  7868   003C62  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7869   003C64  B4D8               	btfsc	status,2,c
  7870   003C66  EF37  F01E         	goto	u2881
  7871   003C6A  EF39  F01E         	goto	u2880
  7872   003C6E                     u2881:
  7873   003C6E  EF63  F01E         	goto	l3560
  7874   003C72                     u2880:
  7875   003C72                     
  7876                           ; BSR set to: 0
  7877                           ;dc_motor.c: 303:         reverseHalfSquare(mL,mR);
  7878   003C72  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7879   003C76  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7880   003C7A  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7881   003C7E  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7882   003C82  EC87  F020         	call	_reverseHalfSquare	;wreg free
  7883                           
  7884                           ;dc_motor.c: 305:         Right45(mL,mR);
  7885   003C86  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7886   003C8A  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7887   003C8E  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7888   003C92  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7889   003C96  ECFD  F01F         	call	_Right45	;wreg free
  7890                           
  7891                           ;dc_motor.c: 306:         Right45(mL,mR);
  7892   003C9A  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7893   003C9E  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7894   003CA2  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7895   003CA6  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7896   003CAA  ECFD  F01F         	call	_Right45	;wreg free
  7897                           
  7898                           ;dc_motor.c: 307:         Right45(mL,mR);
  7899   003CAE  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7900   003CB2  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7901   003CB6  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7902   003CBA  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7903   003CBE  ECFD  F01F         	call	_Right45	;wreg free
  7904                           
  7905                           ;dc_motor.c: 308:     }
  7906   003CC2  EF81  F01E         	goto	l315
  7907   003CC6                     l3560:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;dc_motor.c: 311:         Left45(mL,mR);
  7911   003CC6  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7912   003CCA  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7913   003CCE  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7914   003CD2  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7915   003CD6  EC42  F020         	call	_Left45	;wreg free
  7916                           
  7917                           ;dc_motor.c: 312:         Left45(mL,mR);
  7918   003CDA  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7919   003CDE  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7920   003CE2  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7921   003CE6  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7922   003CEA  EC42  F020         	call	_Left45	;wreg free
  7923                           
  7924                           ;dc_motor.c: 313:         Left45(mL,mR);
  7925   003CEE  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7926   003CF2  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7927   003CF6  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7928   003CFA  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7929   003CFE  EC42  F020         	call	_Left45	;wreg free
  7930   003D02                     l315:
  7931   003D02  0012               	return		;funcret
  7932   003D04                     __end_of_Orange_R135:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function _LightBlue_L135 *****************
  7936 ;; Defined at:
  7937 ;;		line 316 in file "dc_motor.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7940 ;;		 -> motorL(9), 
  7941 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7942 ;;		 -> motorR(9), 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7958 ;;Total ram usage:        4 bytes
  7959 ;; Hardware stack levels used: 1
  7960 ;; Hardware stack levels required when called: 5
  7961 ;; This function calls:
  7962 ;;		_Left45
  7963 ;;		_Right45
  7964 ;;		_reverseHalfSquare
  7965 ;; This function is called by:
  7966 ;;		_White
  7967 ;;		_Colour2Action
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text39
  7972   003D04                     __ptext39:
  7973                           	callstack 0
  7974   003D04                     _LightBlue_L135:
  7975                           	callstack 23
  7976   003D04                     
  7977                           ;dc_motor.c: 316: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 317: {;dc_motor.c: 319:      if (ForwardFlag){
  7978   003D04  0100               	movlb	0	; () banked
  7979   003D06  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7980   003D08  B4D8               	btfsc	status,2,c
  7981   003D0A  EF89  F01E         	goto	u2891
  7982   003D0E  EF8B  F01E         	goto	u2890
  7983   003D12                     u2891:
  7984   003D12  EFB5  F01E         	goto	l3566
  7985   003D16                     u2890:
  7986   003D16                     
  7987                           ; BSR set to: 0
  7988                           ;dc_motor.c: 320:         reverseHalfSquare(mL,mR);
  7989   003D16  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7990   003D1A  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7991   003D1E  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7992   003D22  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7993   003D26  EC87  F020         	call	_reverseHalfSquare	;wreg free
  7994                           
  7995                           ;dc_motor.c: 322:         Left45(mL,mR);
  7996   003D2A  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7997   003D2E  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7998   003D32  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7999   003D36  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8000   003D3A  EC42  F020         	call	_Left45	;wreg free
  8001                           
  8002                           ;dc_motor.c: 323:         Left45(mL,mR);
  8003   003D3E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8004   003D42  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8005   003D46  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8006   003D4A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8007   003D4E  EC42  F020         	call	_Left45	;wreg free
  8008                           
  8009                           ;dc_motor.c: 324:         Left45(mL,mR);
  8010   003D52  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8011   003D56  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8012   003D5A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8013   003D5E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8014   003D62  EC42  F020         	call	_Left45	;wreg free
  8015                           
  8016                           ;dc_motor.c: 326:     }
  8017   003D66  EFD3  F01E         	goto	l320
  8018   003D6A                     l3566:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;dc_motor.c: 329:         Right45(mL,mR);
  8022   003D6A  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8023   003D6E  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8024   003D72  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8025   003D76  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8026   003D7A  ECFD  F01F         	call	_Right45	;wreg free
  8027                           
  8028                           ;dc_motor.c: 330:         Right45(mL,mR);
  8029   003D7E  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8030   003D82  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8031   003D86  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8032   003D8A  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8033   003D8E  ECFD  F01F         	call	_Right45	;wreg free
  8034                           
  8035                           ;dc_motor.c: 331:         Right45(mL,mR);
  8036   003D92  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8037   003D96  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8038   003D9A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8039   003D9E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8040   003DA2  ECFD  F01F         	call	_Right45	;wreg free
  8041   003DA6                     l320:
  8042   003DA6  0012               	return		;funcret
  8043   003DA8                     __end_of_LightBlue_L135:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _Green_L90 *****************
  8047 ;; Defined at:
  8048 ;;		line 240 in file "dc_motor.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8051 ;;		 -> motorL(9), 
  8052 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8053 ;;		 -> motorR(9), 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;Total ram usage:        4 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 5
  8072 ;; This function calls:
  8073 ;;		_Left45
  8074 ;;		_Right45
  8075 ;;		_reverseHalfSquare
  8076 ;; This function is called by:
  8077 ;;		_White
  8078 ;;		_Colour2Action
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text40
  8083   004310                     __ptext40:
  8084                           	callstack 0
  8085   004310                     _Green_L90:
  8086                           	callstack 23
  8087   004310                     
  8088                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  8089   004310  0100               	movlb	0	; () banked
  8090   004312  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8091   004314  B4D8               	btfsc	status,2,c
  8092   004316  EF8F  F021         	goto	u2841
  8093   00431A  EF91  F021         	goto	u2840
  8094   00431E                     u2841:
  8095   00431E  EFB1  F021         	goto	l3524
  8096   004322                     u2840:
  8097   004322                     
  8098                           ; BSR set to: 0
  8099                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  8100   004322  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  8101   004326  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  8102   00432A  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  8103   00432E  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  8104   004332  EC87  F020         	call	_reverseHalfSquare	;wreg free
  8105                           
  8106                           ;dc_motor.c: 245:         Left45(mL,mR);
  8107   004336  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8108   00433A  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8109   00433E  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8110   004342  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8111   004346  EC42  F020         	call	_Left45	;wreg free
  8112                           
  8113                           ;dc_motor.c: 246:         Left45(mL,mR);
  8114   00434A  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8115   00434E  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8116   004352  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8117   004356  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8118   00435A  EC42  F020         	call	_Left45	;wreg free
  8119                           
  8120                           ;dc_motor.c: 247:     }
  8121   00435E  EFC5  F021         	goto	l295
  8122   004362                     l3524:
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;dc_motor.c: 250:         Right45(mL,mR);
  8126   004362  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8127   004366  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8128   00436A  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8129   00436E  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8130   004372  ECFD  F01F         	call	_Right45	;wreg free
  8131                           
  8132                           ;dc_motor.c: 251:         Right45(mL,mR);
  8133   004376  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8134   00437A  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8135   00437E  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8136   004382  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8137   004386  ECFD  F01F         	call	_Right45	;wreg free
  8138   00438A                     l295:
  8139   00438A  0012               	return		;funcret
  8140   00438C                     __end_of_Green_L90:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function _Right45 *****************
  8144 ;; Defined at:
  8145 ;;		line 193 in file "dc_motor.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8148 ;;		 -> motorL(9), 
  8149 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8150 ;;		 -> motorR(9), 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;Total ram usage:        6 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 4
  8169 ;; This function calls:
  8170 ;;		_stop
  8171 ;;		_turnRight
  8172 ;; This function is called by:
  8173 ;;		_Red_R90
  8174 ;;		_Green_L90
  8175 ;;		_Yellow_rev1_R90
  8176 ;;		_Pink_rev1_L90
  8177 ;;		_Orange_R135
  8178 ;;		_LightBlue_L135
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text41
  8183   003FFA                     __ptext41:
  8184                           	callstack 0
  8185   003FFA                     _Right45:
  8186                           	callstack 24
  8187   003FFA                     
  8188                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  8189   003FFA  8080               	bsf	128,0,c	;volatile
  8190   003FFC                     
  8191                           ;dc_motor.c: 197:     stop(mL,mR);
  8192   003FFC  C01A  F014         	movff	Right45@mL,stop@mL
  8193   004000  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8194   004004  C01C  F016         	movff	Right45@mR,stop@mR
  8195   004008  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8196   00400C  ECDD  F01D         	call	_stop	;wreg free
  8197   004010                     
  8198                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8199   004010  0E05               	movlw	5
  8200   004012  6E1F               	movwf	(??_Right45+1)^0,c
  8201   004014  0E0F               	movlw	15
  8202   004016  6E1E               	movwf	??_Right45^0,c
  8203   004018  0EF1               	movlw	241
  8204   00401A                     u4377:
  8205   00401A  2EE8               	decfsz	wreg,f,c
  8206   00401C  D7FE               	bra	u4377
  8207   00401E  2E1E               	decfsz	??_Right45^0,f,c
  8208   004020  D7FC               	bra	u4377
  8209   004022  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8210   004024  D7FA               	bra	u4377
  8211   004026  F000               	nop	
  8212   004028                     
  8213                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8214   004028  C01A  F014         	movff	Right45@mL,turnRight@mL
  8215   00402C  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8216   004030  C01C  F016         	movff	Right45@mR,turnRight@mR
  8217   004034  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8218   004038  EC1F  F01F         	call	_turnRight	;wreg free
  8219                           
  8220                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8221   00403C  0E0D               	movlw	13
  8222   00403E  6E1F               	movwf	(??_Right45+1)^0,c
  8223   004040  0E95               	movlw	149
  8224   004042  6E1E               	movwf	??_Right45^0,c
  8225   004044  0EBD               	movlw	189
  8226   004046                     u4387:
  8227   004046  2EE8               	decfsz	wreg,f,c
  8228   004048  D7FE               	bra	u4387
  8229   00404A  2E1E               	decfsz	??_Right45^0,f,c
  8230   00404C  D7FC               	bra	u4387
  8231   00404E  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8232   004050  D7FA               	bra	u4387
  8233   004052  F000               	nop	
  8234   004054                     
  8235                           ;dc_motor.c: 201:     stop(mL,mR);
  8236   004054  C01A  F014         	movff	Right45@mL,stop@mL
  8237   004058  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8238   00405C  C01C  F016         	movff	Right45@mR,stop@mR
  8239   004060  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8240   004064  ECDD  F01D         	call	_stop	;wreg free
  8241   004068                     
  8242                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8243   004068  0E05               	movlw	5
  8244   00406A  6E1F               	movwf	(??_Right45+1)^0,c
  8245   00406C  0E0F               	movlw	15
  8246   00406E  6E1E               	movwf	??_Right45^0,c
  8247   004070  0EF1               	movlw	241
  8248   004072                     u4397:
  8249   004072  2EE8               	decfsz	wreg,f,c
  8250   004074  D7FE               	bra	u4397
  8251   004076  2E1E               	decfsz	??_Right45^0,f,c
  8252   004078  D7FC               	bra	u4397
  8253   00407A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8254   00407C  D7FA               	bra	u4397
  8255   00407E  F000               	nop	
  8256   004080                     
  8257                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8258   004080  9080               	bcf	128,0,c	;volatile
  8259   004082  0012               	return		;funcret
  8260   004084                     __end_of_Right45:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _turnRight *****************
  8264 ;; Defined at:
  8265 ;;		line 132 in file "dc_motor.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8268 ;;		 -> motorL(9), 
  8269 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8270 ;;		 -> motorR(9), 
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  i               2   23[COMRAM] unsigned int 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8282 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;Total ram usage:        6 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 3
  8289 ;; This function calls:
  8290 ;;		_setMotorPWM
  8291 ;; This function is called by:
  8292 ;;		_Right45
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text42
  8297   003E3E                     __ptext42:
  8298                           	callstack 0
  8299   003E3E                     _turnRight:
  8300                           	callstack 24
  8301   003E3E                     
  8302                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8303   003E3E  EE20 F001          	lfsr	2,1
  8304   003E42  5014               	movf	turnRight@mL^0,w,c
  8305   003E44  26D9               	addwf	fsr2l,f,c
  8306   003E46  5015               	movf	(turnRight@mL+1)^0,w,c
  8307   003E48  22DA               	addwfc	fsr2h,f,c
  8308   003E4A  0E01               	movlw	1
  8309   003E4C  6EDF               	movwf	indf2,c
  8310                           
  8311                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8312   003E4E  EE20 F001          	lfsr	2,1
  8313   003E52  5016               	movf	turnRight@mR^0,w,c
  8314   003E54  26D9               	addwf	fsr2l,f,c
  8315   003E56  5017               	movf	(turnRight@mR+1)^0,w,c
  8316   003E58  22DA               	addwfc	fsr2h,f,c
  8317   003E5A  0E00               	movlw	0
  8318   003E5C  6EDF               	movwf	indf2,c
  8319   003E5E                     
  8320                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8321   003E5E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8322   003E62  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8323   003E66  EC83  F018         	call	_setMotorPWM	;wreg free
  8324   003E6A                     
  8325                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8326   003E6A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8327   003E6E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8328   003E72  EC83  F018         	call	_setMotorPWM	;wreg free
  8329   003E76                     
  8330                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8331   003E76  0E00               	movlw	0
  8332   003E78  6E19               	movwf	(turnRight@i+1)^0,c
  8333   003E7A  0E00               	movlw	0
  8334   003E7C  6E18               	movwf	turnRight@i^0,c
  8335   003E7E                     l3124:
  8336                           
  8337                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8338   003E7E  C014  FFD9         	movff	turnRight@mL,fsr2l
  8339   003E82  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8340   003E86  2ADF               	incf	indf2,f,c
  8341                           
  8342                           ;dc_motor.c: 141:         mR->power++;
  8343   003E88  C016  FFD9         	movff	turnRight@mR,fsr2l
  8344   003E8C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8345   003E90  2ADF               	incf	indf2,f,c
  8346   003E92                     
  8347                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8348   003E92  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8349   003E96  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8350   003E9A  EC83  F018         	call	_setMotorPWM	;wreg free
  8351   003E9E                     
  8352                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8353   003E9E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8354   003EA2  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8355   003EA6  EC83  F018         	call	_setMotorPWM	;wreg free
  8356   003EAA                     
  8357                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8358   003EAA  0EE4               	movlw	228
  8359   003EAC                     u4407:
  8360   003EAC  D000               	nop2	
  8361   003EAE  D000               	nop2	
  8362   003EB0  2EE8               	decfsz	wreg,f,c
  8363   003EB2  D7FC               	bra	u4407
  8364   003EB4  D000               	nop2	
  8365   003EB6  D000               	nop2	
  8366   003EB8                     
  8367                           ;dc_motor.c: 145:     }
  8368   003EB8  4A18               	infsnz	turnRight@i^0,f,c
  8369   003EBA  2A19               	incf	(turnRight@i+1)^0,f,c
  8370   003EBC  5019               	movf	(turnRight@i+1)^0,w,c
  8371   003EBE  E109               	bnz	u2310
  8372   003EC0  0E32               	movlw	50
  8373   003EC2  5C18               	subwf	turnRight@i^0,w,c
  8374   003EC4  A0D8               	btfss	status,0,c
  8375   003EC6  EF67  F01F         	goto	u2311
  8376   003ECA  EF69  F01F         	goto	u2310
  8377   003ECE                     u2311:
  8378   003ECE  EF3F  F01F         	goto	l3124
  8379   003ED2                     u2310:
  8380   003ED2  0012               	return		;funcret
  8381   003ED4                     __end_of_turnRight:
  8382                           	callstack 0
  8383                           
  8384 ;; *************** function _Blue_T180 *****************
  8385 ;; Defined at:
  8386 ;;		line 255 in file "dc_motor.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8389 ;;		 -> motorL(9), 
  8390 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8391 ;;		 -> motorR(9), 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;Total ram usage:        4 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 6
  8410 ;; This function calls:
  8411 ;;		_reverseHalfSquare
  8412 ;;		_rotate180left
  8413 ;; This function is called by:
  8414 ;;		_White
  8415 ;;		_Colour2Action
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text43
  8420   0044BA                     __ptext43:
  8421                           	callstack 0
  8422   0044BA                     _Blue_T180:
  8423                           	callstack 22
  8424   0044BA                     
  8425                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8426   0044BA  0100               	movlb	0	; () banked
  8427   0044BC  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8428   0044BE  B4D8               	btfsc	status,2,c
  8429   0044C0  EF64  F022         	goto	u2851
  8430   0044C4  EF66  F022         	goto	u2850
  8431   0044C8                     u2851:
  8432   0044C8  EF7C  F022         	goto	l3530
  8433   0044CC                     u2850:
  8434   0044CC                     
  8435                           ; BSR set to: 0
  8436                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8437   0044CC  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8438   0044D0  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8439   0044D4  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8440   0044D8  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8441   0044DC  EC87  F020         	call	_reverseHalfSquare	;wreg free
  8442                           
  8443                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8444   0044E0  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8445   0044E4  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8446   0044E8  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8447   0044EC  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8448   0044F0  EC87  F022         	call	_rotate180left	;wreg free
  8449                           
  8450                           ;dc_motor.c: 261:     }else{
  8451   0044F4  EF86  F022         	goto	l300
  8452   0044F8                     l3530:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8456   0044F8  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8457   0044FC  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8458   004500  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8459   004504  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8460   004508  EC87  F022         	call	_rotate180left	;wreg free
  8461   00450C                     l300:
  8462   00450C  0012               	return		;funcret
  8463   00450E                     __end_of_Blue_T180:
  8464                           	callstack 0
  8465                           
  8466 ;; *************** function _rotate180left *****************
  8467 ;; Defined at:
  8468 ;;		line 207 in file "dc_motor.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8471 ;;		 -> motorL(9), 
  8472 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8473 ;;		 -> motorR(9), 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;Total ram usage:        4 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; Hardware stack levels required when called: 5
  8492 ;; This function calls:
  8493 ;;		_Left45
  8494 ;; This function is called by:
  8495 ;;		_Blue_T180
  8496 ;;		_White
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text44
  8501   00450E                     __ptext44:
  8502                           	callstack 0
  8503   00450E                     _rotate180left:
  8504                           	callstack 23
  8505   00450E                     
  8506                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8507   00450E  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8508   004512  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8509   004516  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8510   00451A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8511   00451E  EC42  F020         	call	_Left45	;wreg free
  8512                           
  8513                           ;dc_motor.c: 211:     Left45(mL,mR);
  8514   004522  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8515   004526  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8516   00452A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8517   00452E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8518   004532  EC42  F020         	call	_Left45	;wreg free
  8519                           
  8520                           ;dc_motor.c: 212:     Left45(mL,mR);
  8521   004536  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8522   00453A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8523   00453E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8524   004542  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8525   004546  EC42  F020         	call	_Left45	;wreg free
  8526                           
  8527                           ;dc_motor.c: 213:     Left45(mL,mR);
  8528   00454A  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8529   00454E  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8530   004552  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8531   004556  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8532   00455A  EC42  F020         	call	_Left45	;wreg free
  8533   00455E  0012               	return		;funcret
  8534   004560                     __end_of_rotate180left:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _Left45 *****************
  8538 ;; Defined at:
  8539 ;;		line 179 in file "dc_motor.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8542 ;;		 -> motorL(9), 
  8543 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8544 ;;		 -> motorR(9), 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;Total ram usage:        6 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; Hardware stack levels required when called: 4
  8563 ;; This function calls:
  8564 ;;		_stop
  8565 ;;		_turnLeft
  8566 ;; This function is called by:
  8567 ;;		_rotate180left
  8568 ;;		_Red_R90
  8569 ;;		_Green_L90
  8570 ;;		_Yellow_rev1_R90
  8571 ;;		_Pink_rev1_L90
  8572 ;;		_Orange_R135
  8573 ;;		_LightBlue_L135
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text45
  8578   004084                     __ptext45:
  8579                           	callstack 0
  8580   004084                     _Left45:
  8581                           	callstack 24
  8582   004084                     
  8583                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8584   004084  807E               	bsf	126,0,c	;volatile
  8585   004086                     
  8586                           ;dc_motor.c: 183:     stop(mL,mR);
  8587   004086  C01A  F014         	movff	Left45@mL,stop@mL
  8588   00408A  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8589   00408E  C01C  F016         	movff	Left45@mR,stop@mR
  8590   004092  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8591   004096  ECDD  F01D         	call	_stop	;wreg free
  8592   00409A                     
  8593                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8594   00409A  0E05               	movlw	5
  8595   00409C  6E1F               	movwf	(??_Left45+1)^0,c
  8596   00409E  0E0F               	movlw	15
  8597   0040A0  6E1E               	movwf	??_Left45^0,c
  8598   0040A2  0EF1               	movlw	241
  8599   0040A4                     u4417:
  8600   0040A4  2EE8               	decfsz	wreg,f,c
  8601   0040A6  D7FE               	bra	u4417
  8602   0040A8  2E1E               	decfsz	??_Left45^0,f,c
  8603   0040AA  D7FC               	bra	u4417
  8604   0040AC  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8605   0040AE  D7FA               	bra	u4417
  8606   0040B0  F000               	nop	
  8607   0040B2                     
  8608                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8609   0040B2  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8610   0040B6  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8611   0040BA  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8612   0040BE  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8613   0040C2  EC6A  F01F         	call	_turnLeft	;wreg free
  8614                           
  8615                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8616   0040C6  0E0C               	movlw	12
  8617   0040C8  6E1F               	movwf	(??_Left45+1)^0,c
  8618   0040CA  0EDA               	movlw	218
  8619   0040CC  6E1E               	movwf	??_Left45^0,c
  8620   0040CE  0EBA               	movlw	186
  8621   0040D0                     u4427:
  8622   0040D0  2EE8               	decfsz	wreg,f,c
  8623   0040D2  D7FE               	bra	u4427
  8624   0040D4  2E1E               	decfsz	??_Left45^0,f,c
  8625   0040D6  D7FC               	bra	u4427
  8626   0040D8  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8627   0040DA  D7FA               	bra	u4427
  8628   0040DC  D000               	nop2	
  8629   0040DE                     
  8630                           ;dc_motor.c: 187:     stop(mL,mR);
  8631   0040DE  C01A  F014         	movff	Left45@mL,stop@mL
  8632   0040E2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8633   0040E6  C01C  F016         	movff	Left45@mR,stop@mR
  8634   0040EA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8635   0040EE  ECDD  F01D         	call	_stop	;wreg free
  8636   0040F2                     
  8637                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8638   0040F2  0E05               	movlw	5
  8639   0040F4  6E1F               	movwf	(??_Left45+1)^0,c
  8640   0040F6  0E0F               	movlw	15
  8641   0040F8  6E1E               	movwf	??_Left45^0,c
  8642   0040FA  0EF1               	movlw	241
  8643   0040FC                     u4437:
  8644   0040FC  2EE8               	decfsz	wreg,f,c
  8645   0040FE  D7FE               	bra	u4437
  8646   004100  2E1E               	decfsz	??_Left45^0,f,c
  8647   004102  D7FC               	bra	u4437
  8648   004104  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8649   004106  D7FA               	bra	u4437
  8650   004108  F000               	nop	
  8651   00410A                     
  8652                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8653   00410A  907E               	bcf	126,0,c	;volatile
  8654   00410C  0012               	return		;funcret
  8655   00410E                     __end_of_Left45:
  8656                           	callstack 0
  8657                           
  8658 ;; *************** function _turnLeft *****************
  8659 ;; Defined at:
  8660 ;;		line 113 in file "dc_motor.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8663 ;;		 -> motorL(9), 
  8664 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8665 ;;		 -> motorR(9), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  i               2   23[COMRAM] unsigned int 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;Total ram usage:        6 bytes
  8682 ;; Hardware stack levels used: 1
  8683 ;; Hardware stack levels required when called: 3
  8684 ;; This function calls:
  8685 ;;		_setMotorPWM
  8686 ;; This function is called by:
  8687 ;;		_Left45
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text46
  8692   003ED4                     __ptext46:
  8693                           	callstack 0
  8694   003ED4                     _turnLeft:
  8695                           	callstack 24
  8696   003ED4                     
  8697                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8698   003ED4  EE20 F001          	lfsr	2,1
  8699   003ED8  5014               	movf	turnLeft@mL^0,w,c
  8700   003EDA  26D9               	addwf	fsr2l,f,c
  8701   003EDC  5015               	movf	(turnLeft@mL+1)^0,w,c
  8702   003EDE  22DA               	addwfc	fsr2h,f,c
  8703   003EE0  0E00               	movlw	0
  8704   003EE2  6EDF               	movwf	indf2,c
  8705                           
  8706                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8707   003EE4  EE20 F001          	lfsr	2,1
  8708   003EE8  5016               	movf	turnLeft@mR^0,w,c
  8709   003EEA  26D9               	addwf	fsr2l,f,c
  8710   003EEC  5017               	movf	(turnLeft@mR+1)^0,w,c
  8711   003EEE  22DA               	addwfc	fsr2h,f,c
  8712   003EF0  0E01               	movlw	1
  8713   003EF2  6EDF               	movwf	indf2,c
  8714   003EF4                     
  8715                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8716   003EF4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8717   003EF8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8718   003EFC  EC83  F018         	call	_setMotorPWM	;wreg free
  8719   003F00                     
  8720                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8721   003F00  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8722   003F04  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8723   003F08  EC83  F018         	call	_setMotorPWM	;wreg free
  8724   003F0C                     
  8725                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8726   003F0C  0E00               	movlw	0
  8727   003F0E  6E19               	movwf	(turnLeft@i+1)^0,c
  8728   003F10  0E00               	movlw	0
  8729   003F12  6E18               	movwf	turnLeft@i^0,c
  8730   003F14                     l3076:
  8731                           
  8732                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8733   003F14  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8734   003F18  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8735   003F1C  2ADF               	incf	indf2,f,c
  8736                           
  8737                           ;dc_motor.c: 123:         mR->power++;
  8738   003F1E  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8739   003F22  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8740   003F26  2ADF               	incf	indf2,f,c
  8741   003F28                     
  8742                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8743   003F28  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8744   003F2C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8745   003F30  EC83  F018         	call	_setMotorPWM	;wreg free
  8746   003F34                     
  8747                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8748   003F34  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8749   003F38  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8750   003F3C  EC83  F018         	call	_setMotorPWM	;wreg free
  8751   003F40                     
  8752                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8753   003F40  0EE4               	movlw	228
  8754   003F42                     u4447:
  8755   003F42  D000               	nop2	
  8756   003F44  D000               	nop2	
  8757   003F46  2EE8               	decfsz	wreg,f,c
  8758   003F48  D7FC               	bra	u4447
  8759   003F4A  D000               	nop2	
  8760   003F4C  D000               	nop2	
  8761   003F4E                     
  8762                           ;dc_motor.c: 127:     }
  8763   003F4E  4A18               	infsnz	turnLeft@i^0,f,c
  8764   003F50  2A19               	incf	(turnLeft@i+1)^0,f,c
  8765   003F52  5019               	movf	(turnLeft@i+1)^0,w,c
  8766   003F54  E109               	bnz	u2240
  8767   003F56  0E32               	movlw	50
  8768   003F58  5C18               	subwf	turnLeft@i^0,w,c
  8769   003F5A  A0D8               	btfss	status,0,c
  8770   003F5C  EFB2  F01F         	goto	u2241
  8771   003F60  EFB4  F01F         	goto	u2240
  8772   003F64                     u2241:
  8773   003F64  EF8A  F01F         	goto	l3076
  8774   003F68                     u2240:
  8775   003F68  0012               	return		;funcret
  8776   003F6A                     __end_of_turnLeft:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function _reverseHalfSquare *****************
  8780 ;; Defined at:
  8781 ;;		line 216 in file "dc_motor.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8784 ;;		 -> motorL(9), 
  8785 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8786 ;;		 -> motorR(9), 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;Total ram usage:        6 bytes
  8803 ;; Hardware stack levels used: 1
  8804 ;; Hardware stack levels required when called: 4
  8805 ;; This function calls:
  8806 ;;		_fullSpeedReverse
  8807 ;;		_stop
  8808 ;; This function is called by:
  8809 ;;		_Red_R90
  8810 ;;		_Green_L90
  8811 ;;		_Blue_T180
  8812 ;;		_Yellow_rev1_R90
  8813 ;;		_Pink_rev1_L90
  8814 ;;		_Orange_R135
  8815 ;;		_LightBlue_L135
  8816 ;;		_White
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text47
  8821   00410E                     __ptext47:
  8822                           	callstack 0
  8823   00410E                     _reverseHalfSquare:
  8824                           	callstack 24
  8825   00410E                     
  8826                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8827   00410E  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8828   004112  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8829   004116  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8830   00411A  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8831   00411E  ECDD  F01D         	call	_stop	;wreg free
  8832   004122                     
  8833                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8834   004122  0E09               	movlw	9
  8835   004124  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8836   004126  0E1E               	movlw	30
  8837   004128  6E1F               	movwf	??_reverseHalfSquare^0,c
  8838   00412A  0EE4               	movlw	228
  8839   00412C                     u4457:
  8840   00412C  2EE8               	decfsz	wreg,f,c
  8841   00412E  D7FE               	bra	u4457
  8842   004130  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8843   004132  D7FC               	bra	u4457
  8844   004134  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8845   004136  D7FA               	bra	u4457
  8846   004138  D000               	nop2	
  8847   00413A                     
  8848                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8849   00413A  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8850   00413E  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8851   004142  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8852   004146  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8853   00414A  EC0A  F021         	call	_fullSpeedReverse	;wreg free
  8854                           
  8855                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8856   00414E  0E1D               	movlw	29
  8857   004150  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8858   004152  0E69               	movlw	105
  8859   004154  6E1F               	movwf	??_reverseHalfSquare^0,c
  8860   004156  0EA5               	movlw	165
  8861   004158                     u4467:
  8862   004158  2EE8               	decfsz	wreg,f,c
  8863   00415A  D7FE               	bra	u4467
  8864   00415C  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8865   00415E  D7FC               	bra	u4467
  8866   004160  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8867   004162  D7FA               	bra	u4467
  8868   004164  F000               	nop	
  8869   004166                     
  8870                           ;dc_motor.c: 222:     stop(mL,mR);
  8871   004166  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8872   00416A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8873   00416E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8874   004172  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8875   004176  ECDD  F01D         	call	_stop	;wreg free
  8876   00417A                     
  8877                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8878   00417A  0E09               	movlw	9
  8879   00417C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8880   00417E  0E1E               	movlw	30
  8881   004180  6E1F               	movwf	??_reverseHalfSquare^0,c
  8882   004182  0EE4               	movlw	228
  8883   004184                     u4477:
  8884   004184  2EE8               	decfsz	wreg,f,c
  8885   004186  D7FE               	bra	u4477
  8886   004188  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8887   00418A  D7FC               	bra	u4477
  8888   00418C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8889   00418E  D7FA               	bra	u4477
  8890   004190  D000               	nop2	
  8891   004192  0012               	return		;funcret
  8892   004194                     __end_of_reverseHalfSquare:
  8893                           	callstack 0
  8894                           
  8895 ;; *************** function _stop *****************
  8896 ;; Defined at:
  8897 ;;		line 93 in file "dc_motor.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8900 ;;		 -> motorL(9), 
  8901 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8902 ;;		 -> motorR(9), 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:        5 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 3
  8921 ;; This function calls:
  8922 ;;		_setMotorPWM
  8923 ;; This function is called by:
  8924 ;;		_main
  8925 ;;		_Left45
  8926 ;;		_Right45
  8927 ;;		_reverseHalfSquare
  8928 ;;		_White
  8929 ;;		_maxTimeReturn
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text48
  8934   003BBA                     __ptext48:
  8935                           	callstack 0
  8936   003BBA                     _stop:
  8937                           	callstack 27
  8938   003BBA                     
  8939                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8940   003BBA  887C               	bsf	124,4,c	;volatile
  8941                           
  8942                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8943   003BBC  EF16  F01E         	goto	l3060
  8944   003BC0                     l3046:
  8945                           
  8946                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8947   003BC0  C014  FFD9         	movff	stop@mL,fsr2l
  8948   003BC4  C015  FFDA         	movff	stop@mL+1,fsr2h
  8949   003BC8  50DF               	movf	indf2,w,c
  8950   003BCA  B4D8               	btfsc	status,2,c
  8951   003BCC  EFEA  F01D         	goto	u2201
  8952   003BD0  EFEC  F01D         	goto	u2200
  8953   003BD4                     u2201:
  8954   003BD4  EFF1  F01D         	goto	l3050
  8955   003BD8                     u2200:
  8956   003BD8                     
  8957                           ;dc_motor.c: 100:             mL->power--;
  8958   003BD8  C014  FFD9         	movff	stop@mL,fsr2l
  8959   003BDC  C015  FFDA         	movff	stop@mL+1,fsr2h
  8960   003BE0  06DF               	decf	indf2,f,c
  8961   003BE2                     l3050:
  8962                           
  8963                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8964   003BE2  C016  FFD9         	movff	stop@mR,fsr2l
  8965   003BE6  C017  FFDA         	movff	stop@mR+1,fsr2h
  8966   003BEA  50DF               	movf	indf2,w,c
  8967   003BEC  B4D8               	btfsc	status,2,c
  8968   003BEE  EFFB  F01D         	goto	u2211
  8969   003BF2  EFFD  F01D         	goto	u2210
  8970   003BF6                     u2211:
  8971   003BF6  EF02  F01E         	goto	l3054
  8972   003BFA                     u2210:
  8973   003BFA                     
  8974                           ;dc_motor.c: 103:             mR->power--;
  8975   003BFA  C016  FFD9         	movff	stop@mR,fsr2l
  8976   003BFE  C017  FFDA         	movff	stop@mR+1,fsr2h
  8977   003C02  06DF               	decf	indf2,f,c
  8978   003C04                     l3054:
  8979                           
  8980                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8981   003C04  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8982   003C08  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8983   003C0C  EC83  F018         	call	_setMotorPWM	;wreg free
  8984   003C10                     
  8985                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8986   003C10  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8987   003C14  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8988   003C18  EC83  F018         	call	_setMotorPWM	;wreg free
  8989   003C1C                     
  8990                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8991   003C1C  0E09               	movlw	9
  8992   003C1E  6E18               	movwf	??_stop^0,c
  8993   003C20  0E4E               	movlw	78
  8994   003C22                     u4487:
  8995   003C22  2EE8               	decfsz	wreg,f,c
  8996   003C24  D7FE               	bra	u4487
  8997   003C26  2E18               	decfsz	??_stop^0,f,c
  8998   003C28  D7FC               	bra	u4487
  8999   003C2A  D000               	nop2	
  9000   003C2C                     l3060:
  9001                           
  9002                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  9003   003C2C  C014  FFD9         	movff	stop@mL,fsr2l
  9004   003C30  C015  FFDA         	movff	stop@mL+1,fsr2h
  9005   003C34  50DF               	movf	indf2,w,c
  9006   003C36  B4D8               	btfsc	status,2,c
  9007   003C38  EF20  F01E         	goto	u2221
  9008   003C3C  EF22  F01E         	goto	u2220
  9009   003C40                     u2221:
  9010   003C40  EF2E  F01E         	goto	l252
  9011   003C44                     u2220:
  9012   003C44  C016  FFD9         	movff	stop@mR,fsr2l
  9013   003C48  C017  FFDA         	movff	stop@mR+1,fsr2h
  9014   003C4C  50DF               	movf	indf2,w,c
  9015   003C4E  A4D8               	btfss	status,2,c
  9016   003C50  EF2C  F01E         	goto	u2231
  9017   003C54  EF2E  F01E         	goto	u2230
  9018   003C58                     u2231:
  9019   003C58  EFE0  F01D         	goto	l3046
  9020   003C5C                     u2230:
  9021   003C5C                     l252:
  9022                           
  9023                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  9024   003C5C  987C               	bcf	124,4,c	;volatile
  9025   003C5E  0012               	return		;funcret
  9026   003C60                     __end_of_stop:
  9027                           	callstack 0
  9028                           
  9029 ;; *************** function _fullSpeedReverse *****************
  9030 ;; Defined at:
  9031 ;;		line 163 in file "dc_motor.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9034 ;;		 -> motorL(9), 
  9035 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9036 ;;		 -> motorR(9), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  i               2   24[COMRAM] unsigned int 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      void 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9051 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9052 ;;Total ram usage:        7 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; Hardware stack levels required when called: 3
  9055 ;; This function calls:
  9056 ;;		_setMotorPWM
  9057 ;; This function is called by:
  9058 ;;		_reverseHalfSquare
  9059 ;;		_Yellow_rev1_R90
  9060 ;;		_Pink_rev1_L90
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text49
  9065   004214                     __ptext49:
  9066                           	callstack 0
  9067   004214                     _fullSpeedReverse:
  9068                           	callstack 24
  9069   004214                     
  9070                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  9071   004214  EE20 F001          	lfsr	2,1
  9072   004218  5014               	movf	fullSpeedReverse@mL^0,w,c
  9073   00421A  26D9               	addwf	fsr2l,f,c
  9074   00421C  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9075   00421E  22DA               	addwfc	fsr2h,f,c
  9076   004220  0E00               	movlw	0
  9077   004222  6EDF               	movwf	indf2,c
  9078                           
  9079                           ;dc_motor.c: 166:  (mR->direction) = 0;
  9080   004224  EE20 F001          	lfsr	2,1
  9081   004228  5016               	movf	fullSpeedReverse@mR^0,w,c
  9082   00422A  26D9               	addwf	fsr2l,f,c
  9083   00422C  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9084   00422E  22DA               	addwfc	fsr2h,f,c
  9085   004230  0E00               	movlw	0
  9086   004232  6EDF               	movwf	indf2,c
  9087   004234                     
  9088                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  9089   004234  0E00               	movlw	0
  9090   004236  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9091   004238  0E00               	movlw	0
  9092   00423A  6E19               	movwf	fullSpeedReverse@i^0,c
  9093   00423C                     l3144:
  9094                           
  9095                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  9096   00423C  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  9097   004240  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  9098   004244  2ADF               	incf	indf2,f,c
  9099                           
  9100                           ;dc_motor.c: 171:         (mR->power)++;
  9101   004246  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  9102   00424A  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  9103   00424E  2ADF               	incf	indf2,f,c
  9104   004250                     
  9105                           ;dc_motor.c: 172:         setMotorPWM(mL);
  9106   004250  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  9107   004254  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  9108   004258  EC83  F018         	call	_setMotorPWM	;wreg free
  9109   00425C                     
  9110                           ;dc_motor.c: 173:         setMotorPWM(mR);
  9111   00425C  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  9112   004260  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  9113   004264  EC83  F018         	call	_setMotorPWM	;wreg free
  9114   004268                     
  9115                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9116   004268  0E09               	movlw	9
  9117   00426A  6E18               	movwf	??_fullSpeedReverse^0,c
  9118   00426C  0E4E               	movlw	78
  9119   00426E                     u4497:
  9120   00426E  2EE8               	decfsz	wreg,f,c
  9121   004270  D7FE               	bra	u4497
  9122   004272  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  9123   004274  D7FC               	bra	u4497
  9124   004276  D000               	nop2	
  9125   004278                     
  9126                           ;dc_motor.c: 175:     }
  9127   004278  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  9128   00427A  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  9129   00427C  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  9130   00427E  E109               	bnz	u2320
  9131   004280  0E32               	movlw	50
  9132   004282  5C19               	subwf	fullSpeedReverse@i^0,w,c
  9133   004284  A0D8               	btfss	status,0,c
  9134   004286  EF47  F021         	goto	u2321
  9135   00428A  EF49  F021         	goto	u2320
  9136   00428E                     u2321:
  9137   00428E  EF1E  F021         	goto	l3144
  9138   004292                     u2320:
  9139   004292  0012               	return		;funcret
  9140   004294                     __end_of_fullSpeedReverse:
  9141                           	callstack 0
  9142                           
  9143 ;; *************** function _setMotorPWM *****************
  9144 ;; Defined at:
  9145 ;;		line 70 in file "dc_motor.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9148 ;;		 -> motorR(9), motorL(9), 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  negDuty         1   18[COMRAM] unsigned char 
  9151 ;;  posDuty         1   17[COMRAM] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      void 
  9154 ;; Registers used:
  9155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9165 ;;Total ram usage:        6 bytes
  9166 ;; Hardware stack levels used: 1
  9167 ;; Hardware stack levels required when called: 2
  9168 ;; This function calls:
  9169 ;;		___lwdiv
  9170 ;;		___wmul
  9171 ;; This function is called by:
  9172 ;;		_stop
  9173 ;;		_turnLeft
  9174 ;;		_turnRight
  9175 ;;		_fullSpeedAhead
  9176 ;;		_fullSpeedReverse
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text50
  9181   003106                     __ptext50:
  9182                           	callstack 0
  9183   003106                     _setMotorPWM:
  9184                           	callstack 27
  9185   003106                     
  9186                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  9187   003106  EE20 F002          	lfsr	2,2
  9188   00310A  500E               	movf	setMotorPWM@m^0,w,c
  9189   00310C  26D9               	addwf	fsr2l,f,c
  9190   00310E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9191   003110  22DA               	addwfc	fsr2h,f,c
  9192   003112  50DF               	movf	indf2,w,c
  9193   003114  B4D8               	btfsc	status,2,c
  9194   003116  EF8F  F018         	goto	u2181
  9195   00311A  EF91  F018         	goto	u2180
  9196   00311E                     u2181:
  9197   00311E  EFC5  F018         	goto	l3034
  9198   003122                     u2180:
  9199   003122                     
  9200                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9201   003122  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9202   003126  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9203   00312A  50DF               	movf	indf2,w,c
  9204   00312C  6E10               	movwf	??_setMotorPWM^0,c
  9205   00312E  5010               	movf	??_setMotorPWM^0,w,c
  9206   003130  6E01               	movwf	___wmul@multiplier^0,c
  9207   003132  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9208   003134  EE20 F003          	lfsr	2,3
  9209   003138  500E               	movf	setMotorPWM@m^0,w,c
  9210   00313A  26D9               	addwf	fsr2l,f,c
  9211   00313C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9212   00313E  22DA               	addwfc	fsr2h,f,c
  9213   003140  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9214   003144  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9215   003148  ECC0  F024         	call	___wmul	;wreg free
  9216   00314C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9217   003150  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9218   003154  0E00               	movlw	0
  9219   003156  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9220   003158  0E64               	movlw	100
  9221   00315A  6E09               	movwf	___lwdiv@divisor^0,c
  9222   00315C  ECC6  F021         	call	___lwdiv	;wreg free
  9223   003160  EE20 F003          	lfsr	2,3
  9224   003164  500E               	movf	setMotorPWM@m^0,w,c
  9225   003166  26D9               	addwf	fsr2l,f,c
  9226   003168  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9227   00316A  22DA               	addwfc	fsr2h,f,c
  9228   00316C  50DF               	movf	indf2,w,c
  9229   00316E  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9230   003170  5007               	movf	?___lwdiv^0,w,c
  9231   003172  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9232   003174  6E12               	movwf	setMotorPWM@posDuty^0,c
  9233   003176                     
  9234                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9235   003176  EE20 F003          	lfsr	2,3
  9236   00317A  500E               	movf	setMotorPWM@m^0,w,c
  9237   00317C  26D9               	addwf	fsr2l,f,c
  9238   00317E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9239   003180  22DA               	addwfc	fsr2h,f,c
  9240   003182  50DF               	movf	indf2,w,c
  9241   003184  6E13               	movwf	setMotorPWM@negDuty^0,c
  9242                           
  9243                           ;dc_motor.c: 77:     }
  9244   003186  EFE8  F018         	goto	l3038
  9245   00318A                     l3034:
  9246                           
  9247                           ;dc_motor.c: 79:         posDuty=0;
  9248   00318A  0E00               	movlw	0
  9249   00318C  6E12               	movwf	setMotorPWM@posDuty^0,c
  9250   00318E                     
  9251                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9252   00318E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9253   003192  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9254   003196  50DF               	movf	indf2,w,c
  9255   003198  6E10               	movwf	??_setMotorPWM^0,c
  9256   00319A  5010               	movf	??_setMotorPWM^0,w,c
  9257   00319C  6E01               	movwf	___wmul@multiplier^0,c
  9258   00319E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9259   0031A0  EE20 F003          	lfsr	2,3
  9260   0031A4  500E               	movf	setMotorPWM@m^0,w,c
  9261   0031A6  26D9               	addwf	fsr2l,f,c
  9262   0031A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9263   0031AA  22DA               	addwfc	fsr2h,f,c
  9264   0031AC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9265   0031B0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9266   0031B4  ECC0  F024         	call	___wmul	;wreg free
  9267   0031B8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9268   0031BC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9269   0031C0  0E00               	movlw	0
  9270   0031C2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9271   0031C4  0E64               	movlw	100
  9272   0031C6  6E09               	movwf	___lwdiv@divisor^0,c
  9273   0031C8  ECC6  F021         	call	___lwdiv	;wreg free
  9274   0031CC  5007               	movf	?___lwdiv^0,w,c
  9275   0031CE  6E13               	movwf	setMotorPWM@negDuty^0,c
  9276   0031D0                     l3038:
  9277                           
  9278                           ;dc_motor.c: 83:     if (m->direction) {
  9279   0031D0  EE20 F001          	lfsr	2,1
  9280   0031D4  500E               	movf	setMotorPWM@m^0,w,c
  9281   0031D6  26D9               	addwf	fsr2l,f,c
  9282   0031D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9283   0031DA  22DA               	addwfc	fsr2h,f,c
  9284   0031DC  50DF               	movf	indf2,w,c
  9285   0031DE  B4D8               	btfsc	status,2,c
  9286   0031E0  EFF4  F018         	goto	u2191
  9287   0031E4  EFF6  F018         	goto	u2190
  9288   0031E8                     u2191:
  9289   0031E8  EF18  F019         	goto	l3042
  9290   0031EC                     u2190:
  9291   0031EC                     
  9292                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9293   0031EC  EE20 F005          	lfsr	2,5
  9294   0031F0  500E               	movf	setMotorPWM@m^0,w,c
  9295   0031F2  26D9               	addwf	fsr2l,f,c
  9296   0031F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9297   0031F6  22DA               	addwfc	fsr2h,f,c
  9298   0031F8  CFDE F010          	movff	postinc2,??_setMotorPWM
  9299   0031FC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9300   003200  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9301   003204  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9302   003208  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9303                           
  9304                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9305   00320C  EE20 F007          	lfsr	2,7
  9306   003210  500E               	movf	setMotorPWM@m^0,w,c
  9307   003212  26D9               	addwf	fsr2l,f,c
  9308   003214  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9309   003216  22DA               	addwfc	fsr2h,f,c
  9310   003218  CFDE F010          	movff	postinc2,??_setMotorPWM
  9311   00321C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9312   003220  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9313   003224  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9314   003228  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9315                           
  9316                           ;dc_motor.c: 86:     } else {
  9317   00322C  EF38  F019         	goto	l243
  9318   003230                     l3042:
  9319                           
  9320                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9321   003230  EE20 F005          	lfsr	2,5
  9322   003234  500E               	movf	setMotorPWM@m^0,w,c
  9323   003236  26D9               	addwf	fsr2l,f,c
  9324   003238  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9325   00323A  22DA               	addwfc	fsr2h,f,c
  9326   00323C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9327   003240  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9328   003244  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9329   003248  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9330   00324C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9331                           
  9332                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9333   003250  EE20 F007          	lfsr	2,7
  9334   003254  500E               	movf	setMotorPWM@m^0,w,c
  9335   003256  26D9               	addwf	fsr2l,f,c
  9336   003258  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9337   00325A  22DA               	addwfc	fsr2h,f,c
  9338   00325C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9339   003260  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9340   003264  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9341   003268  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9342   00326C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9343   003270                     l243:
  9344   003270  0012               	return		;funcret
  9345   003272                     __end_of_setMotorPWM:
  9346                           	callstack 0
  9347                           
  9348 ;; *************** function ___wmul *****************
  9349 ;; Defined at:
  9350 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  multiplier      2    0[COMRAM] unsigned int 
  9353 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;  product         2    4[COMRAM] unsigned int 
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  2    0[COMRAM] unsigned int 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0, prodl, prodh
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9369 ;;Total ram usage:        6 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; Hardware stack levels required when called: 1
  9372 ;; This function calls:
  9373 ;;		Nothing
  9374 ;; This function is called by:
  9375 ;;		_setMotorPWM
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text51
  9380   004980                     __ptext51:
  9381                           	callstack 0
  9382   004980                     ___wmul:
  9383                           	callstack 27
  9384   004980  5001               	movf	___wmul@multiplier^0,w,c
  9385   004982  0203               	mulwf	___wmul@multiplicand^0,c
  9386   004984  CFF3 F005          	movff	prodl,___wmul@product
  9387   004988  CFF4 F006          	movff	prodh,___wmul@product+1
  9388   00498C  5001               	movf	___wmul@multiplier^0,w,c
  9389   00498E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9390   004990  50F3               	movf	243,w,c
  9391   004992  2606               	addwf	(___wmul@product+1)^0,f,c
  9392   004994  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9393   004996  0203               	mulwf	___wmul@multiplicand^0,c
  9394   004998  50F3               	movf	243,w,c
  9395   00499A  2606               	addwf	(___wmul@product+1)^0,f,c
  9396   00499C  C005  F001         	movff	___wmul@product,?___wmul
  9397   0049A0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9398   0049A4  0012               	return		;funcret
  9399   0049A6                     __end_of___wmul:
  9400                           	callstack 0
  9401                           
  9402 ;; *************** function ___lwdiv *****************
  9403 ;; Defined at:
  9404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  dividend        2    6[COMRAM] unsigned int 
  9407 ;;  divisor         2    8[COMRAM] unsigned int 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  quotient        2   10[COMRAM] unsigned int 
  9410 ;;  counter         1   12[COMRAM] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  2    6[COMRAM] unsigned int 
  9413 ;; Registers used:
  9414 ;;		wreg, status,2, status,0
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;Total ram usage:        7 bytes
  9425 ;; Hardware stack levels used: 1
  9426 ;; Hardware stack levels required when called: 1
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_setMotorPWM
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text52
  9435   00438C                     __ptext52:
  9436                           	callstack 0
  9437   00438C                     ___lwdiv:
  9438                           	callstack 27
  9439   00438C  0E00               	movlw	0
  9440   00438E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9441   004390  0E00               	movlw	0
  9442   004392  6E0B               	movwf	___lwdiv@quotient^0,c
  9443   004394  5009               	movf	___lwdiv@divisor^0,w,c
  9444   004396  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9445   004398  B4D8               	btfsc	status,2,c
  9446   00439A  EFD1  F021         	goto	u2151
  9447   00439E  EFD3  F021         	goto	u2150
  9448   0043A2                     u2151:
  9449   0043A2  EFFB  F021         	goto	l1178
  9450   0043A6                     u2150:
  9451   0043A6  0E01               	movlw	1
  9452   0043A8  6E0D               	movwf	___lwdiv@counter^0,c
  9453   0043AA  EFDB  F021         	goto	l3014
  9454   0043AE                     l3012:
  9455   0043AE  90D8               	bcf	status,0,c
  9456   0043B0  3609               	rlcf	___lwdiv@divisor^0,f,c
  9457   0043B2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9458   0043B4  2A0D               	incf	___lwdiv@counter^0,f,c
  9459   0043B6                     l3014:
  9460   0043B6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9461   0043B8  EFE0  F021         	goto	u2161
  9462   0043BC  EFE2  F021         	goto	u2160
  9463   0043C0                     u2161:
  9464   0043C0  EFD7  F021         	goto	l3012
  9465   0043C4                     u2160:
  9466   0043C4                     l3016:
  9467   0043C4  90D8               	bcf	status,0,c
  9468   0043C6  360B               	rlcf	___lwdiv@quotient^0,f,c
  9469   0043C8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9470   0043CA  5009               	movf	___lwdiv@divisor^0,w,c
  9471   0043CC  5C07               	subwf	___lwdiv@dividend^0,w,c
  9472   0043CE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9473   0043D0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9474   0043D2  A0D8               	btfss	status,0,c
  9475   0043D4  EFEE  F021         	goto	u2171
  9476   0043D8  EFF0  F021         	goto	u2170
  9477   0043DC                     u2171:
  9478   0043DC  EFF5  F021         	goto	l3024
  9479   0043E0                     u2170:
  9480   0043E0  5009               	movf	___lwdiv@divisor^0,w,c
  9481   0043E2  5E07               	subwf	___lwdiv@dividend^0,f,c
  9482   0043E4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9483   0043E6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9484   0043E8  800B               	bsf	___lwdiv@quotient^0,0,c
  9485   0043EA                     l3024:
  9486   0043EA  90D8               	bcf	status,0,c
  9487   0043EC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9488   0043EE  3209               	rrcf	___lwdiv@divisor^0,f,c
  9489   0043F0  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9490   0043F2  EFE2  F021         	goto	l3016
  9491   0043F6                     l1178:
  9492   0043F6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9493   0043FA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9494   0043FE  0012               	return		;funcret
  9495   004400                     __end_of___lwdiv:
  9496                           	callstack 0
  9497                           
  9498 ;; *************** function _Color2String *****************
  9499 ;; Defined at:
  9500 ;;		line 39 in file "serial.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  buf             2   90[COMRAM] PTR unsigned char 
  9503 ;;		 -> main@data(100), 
  9504 ;;  cf              2   92[COMRAM] PTR struct RGBC_rel
  9505 ;;		 -> colorf(22), 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  colourname      2    0[BANK0 ] PTR unsigned char 
  9508 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
  9509 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
  9510 ;;		 -> STR_2(1), 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;Total ram usage:        6 bytes
  9525 ;; Hardware stack levels used: 1
  9526 ;; Hardware stack levels required when called: 7
  9527 ;; This function calls:
  9528 ;;		_Hue2Colour
  9529 ;;		_sendStringSerial4
  9530 ;;		_sprintf
  9531 ;; This function is called by:
  9532 ;;		_main
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text53
  9537   004854                     __ptext53:
  9538                           	callstack 0
  9539   004854                     _Color2String:
  9540                           	callstack 23
  9541   004854                     
  9542                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9543   004854  C05D  F057         	movff	Color2String@cf,Hue2Colour@cf
  9544   004858  C05E  F058         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9545   00485C  ECBF  F00A         	call	_Hue2Colour	;wreg free
  9546   004860  C057  F060         	movff	?_Hue2Colour,Color2String@colourname
  9547   004864  C058  F061         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9548   004868                     
  9549                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9550   004868  C05B  F032         	movff	Color2String@buf,sprintf@s
  9551   00486C  C05C  F033         	movff	Color2String@buf+1,sprintf@s+1
  9552   004870  0E01               	movlw	low STR_1
  9553   004872  6E34               	movwf	sprintf@fmt^0,c
  9554   004874  0E0E               	movlw	high STR_1
  9555   004876  6E35               	movwf	(sprintf@fmt+1)^0,c
  9556   004878  C060  F036         	movff	Color2String@colourname,?_sprintf+4
  9557   00487C  C061  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9558   004880  EC78  F023         	call	_sprintf	;wreg free
  9559   004884                     
  9560                           ;serial.c: 45:     sendStringSerial4(buf);
  9561   004884  C05B  F002         	movff	Color2String@buf,sendStringSerial4@string
  9562   004888  C05C  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9563   00488C  EC49  F024         	call	_sendStringSerial4	;wreg free
  9564   004890  0012               	return		;funcret
  9565   004892                     __end_of_Color2String:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _sprintf *****************
  9569 ;; Defined at:
  9570 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  s               2   49[COMRAM] PTR unsigned char 
  9573 ;;		 -> main@data(100), 
  9574 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9575 ;;		 -> STR_1(16), 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  f              11   57[COMRAM] struct _IO_FILE
  9578 ;;  ap              2   55[COMRAM] PTR void [1]
  9579 ;;		 -> ?_sprintf(2), 
  9580 ;;  ret             2    0        int 
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  2   49[COMRAM] int 
  9583 ;; Registers used:
  9584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9590 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9593 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;Total ram usage:       19 bytes
  9595 ;; Hardware stack levels used: 1
  9596 ;; Hardware stack levels required when called: 6
  9597 ;; This function calls:
  9598 ;;		_vfprintf
  9599 ;; This function is called by:
  9600 ;;		_Color2String
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text54
  9605   0046F0                     __ptext54:
  9606                           	callstack 0
  9607   0046F0                     _sprintf:
  9608                           	callstack 23
  9609   0046F0  0E36               	movlw	low (?_sprintf+4)
  9610   0046F2  6E38               	movwf	sprintf@ap^0,c
  9611   0046F4  0E00               	movlw	high (?_sprintf+4)
  9612   0046F6  6E39               	movwf	(sprintf@ap+1)^0,c
  9613   0046F8  C032  F03A         	movff	sprintf@s,sprintf@f
  9614   0046FC  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9615   004700  0E00               	movlw	0
  9616   004702  6E3E               	movwf	(sprintf@f+4)^0,c
  9617   004704  0E00               	movlw	0
  9618   004706  6E3D               	movwf	(sprintf@f+3)^0,c
  9619   004708  0E00               	movlw	0
  9620   00470A  6E44               	movwf	(sprintf@f+10)^0,c
  9621   00470C  0E00               	movlw	0
  9622   00470E  6E43               	movwf	(sprintf@f+9)^0,c
  9623   004710  0E3A               	movlw	low sprintf@f
  9624   004712  6E2A               	movwf	vfprintf@fp^0,c
  9625   004714  0E00               	movlw	high sprintf@f
  9626   004716  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9627   004718  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9628   00471C  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9629   004720  0E38               	movlw	low sprintf@ap
  9630   004722  6E2E               	movwf	vfprintf@ap^0,c
  9631   004724  0E00               	movlw	high sprintf@ap
  9632   004726  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9633   004728  EC9F  F023         	call	_vfprintf	;wreg free
  9634   00472C  503D               	movf	(sprintf@f+3)^0,w,c
  9635   00472E  2432               	addwf	sprintf@s^0,w,c
  9636   004730  6ED9               	movwf	fsr2l,c
  9637   004732  503E               	movf	(sprintf@f+4)^0,w,c
  9638   004734  2033               	addwfc	(sprintf@s+1)^0,w,c
  9639   004736  6EDA               	movwf	fsr2h,c
  9640   004738  0E00               	movlw	0
  9641   00473A  6EDF               	movwf	indf2,c
  9642   00473C  0012               	return		;funcret
  9643   00473E                     __end_of_sprintf:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _vfprintf *****************
  9647 ;; Defined at:
  9648 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9651 ;;		 -> sprintf@f(11), 
  9652 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9653 ;;		 -> STR_1(16), 
  9654 ;;  ap              2   45[COMRAM] PTR PTR void 
  9655 ;;		 -> sprintf@ap(2), 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9658 ;;		 -> STR_1(16), 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  2   41[COMRAM] int 
  9661 ;; Registers used:
  9662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9668 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9671 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;Total ram usage:        8 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 5
  9675 ;; This function calls:
  9676 ;;		_vfpfcnvrt
  9677 ;; This function is called by:
  9678 ;;		_sprintf
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text55
  9683   00473E                     __ptext55:
  9684                           	callstack 0
  9685   00473E                     _vfprintf:
  9686                           	callstack 23
  9687   00473E                     
  9688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9689   00473E  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9690   004742  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9693   004746  EFB3  F023         	goto	l3808
  9694   00474A                     l3806:
  9695                           
  9696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9697   00474A  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9698   00474E  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9699   004752  0E30               	movlw	low vfprintf@cfmt
  9700   004754  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9701   004756  0E00               	movlw	high vfprintf@cfmt
  9702   004758  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9703   00475A  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9704   00475E  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9705   004762  EC39  F019         	call	_vfpfcnvrt	;wreg free
  9706   004766                     l3808:
  9707                           
  9708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9709   004766  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9710   00476A  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9711   00476E                     	if	0	;tblptru may be non-zero
  9712   00476E                     	endif
  9713   00476E                     	if	0	;tblptru may be non-zero
  9714   00476E                     	endif
  9715   00476E  0008               	tblrd		*
  9716   004770  50F5               	movf	tablat,w,c
  9717   004772  0900               	iorlw	0
  9718   004774  A4D8               	btfss	status,2,c
  9719   004776  EFBF  F023         	goto	u3351
  9720   00477A  EFC1  F023         	goto	u3350
  9721   00477E                     u3351:
  9722   00477E  EFA5  F023         	goto	l3806
  9723   004782                     u3350:
  9724   004782                     
  9725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9726   004782  0E00               	movlw	0
  9727   004784  6E2B               	movwf	(?_vfprintf+1)^0,c
  9728   004786  0E00               	movlw	0
  9729   004788  6E2A               	movwf	?_vfprintf^0,c
  9730   00478A  0012               	return		;funcret
  9731   00478C                     __end_of_vfprintf:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _vfpfcnvrt *****************
  9735 ;; Defined at:
  9736 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9739 ;;		 -> sprintf@f(11), 
  9740 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9741 ;;		 -> vfprintf@cfmt(2), 
  9742 ;;  ap              2   35[COMRAM] PTR PTR void 
  9743 ;;		 -> sprintf@ap(2), 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  convarg         8    0        struct .
  9746 ;;  cp              3    0        PTR unsigned char 
  9747 ;;  i               2    0        int 
  9748 ;;  done            2    0        int 
  9749 ;;  c               1    0        unsigned char 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9759 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9762 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;Total ram usage:       10 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 4
  9766 ;; This function calls:
  9767 ;;		_fputc
  9768 ;;		_stoa
  9769 ;;		_strncmp
  9770 ;; This function is called by:
  9771 ;;		_vfprintf
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           	psect	text56
  9776   003272                     __ptext56:
  9777                           	callstack 0
  9778   003272                     _vfpfcnvrt:
  9779                           	callstack 23
  9780   003272                     
  9781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9782   003272  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9783   003276  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9784   00327A  CFDE FFF6          	movff	postinc2,tblptrl
  9785   00327E  CFDD FFF7          	movff	postdec2,tblptrh
  9786   003282                     	if	0	;tblptru may be non-zero
  9787   003282                     	endif
  9788   003282                     	if	0	;tblptru may be non-zero
  9789   003282                     	endif
  9790   003282  0008               	tblrd		*
  9791   003284  50F5               	movf	tablat,w,c
  9792   003286  0A25               	xorlw	37
  9793   003288  A4D8               	btfss	status,2,c
  9794   00328A  EF49  F019         	goto	u2761
  9795   00328E  EF4B  F019         	goto	u2760
  9796   003292                     u2761:
  9797   003292  EFD1  F019         	goto	l3456
  9798   003296                     u2760:
  9799   003296                     
  9800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9801   003296  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9802   00329A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9803   00329E  2ADE               	incf	postinc2,f,c
  9804   0032A0  0E00               	movlw	0
  9805   0032A2  22DD               	addwfc	postdec2,f,c
  9806   0032A4                     
  9807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9808   0032A4  0E00               	movlw	0
  9809   0032A6  0100               	movlb	0	; () banked
  9810   0032A8  6FE3               	movwf	(_width+1)& (0+255),b
  9811   0032AA  0E00               	movlw	0
  9812   0032AC  6FE2               	movwf	_width& (0+255),b
  9813   0032AE  C0E2  F0EC         	movff	_width,_flags
  9814   0032B2                     
  9815                           ; BSR set to: 0
  9816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9817   0032B2  69E4               	setf	_prec& (0+255),b
  9818   0032B4  69E5               	setf	(_prec+1)& (0+255),b
  9819   0032B6                     
  9820                           ; BSR set to: 0
  9821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9822   0032B6  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9823   0032BA  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9824   0032BE  CFDE FFF6          	movff	postinc2,tblptrl
  9825   0032C2  CFDD FFF7          	movff	postdec2,tblptrh
  9826   0032C6                     	if	0	;tblptru may be non-zero
  9827   0032C6                     	endif
  9828   0032C6                     	if	0	;tblptru may be non-zero
  9829   0032C6                     	endif
  9830   0032C6  0008               	tblrd		*
  9831   0032C8  50F5               	movf	tablat,w,c
  9832   0032CA  0A73               	xorlw	115
  9833   0032CC  B4D8               	btfsc	status,2,c
  9834   0032CE  EF6B  F019         	goto	u2771
  9835   0032D2  EF6D  F019         	goto	u2770
  9836   0032D6                     u2771:
  9837   0032D6  EF88  F019         	goto	l3440
  9838   0032DA                     u2770:
  9839   0032DA                     
  9840                           ; BSR set to: 0
  9841   0032DA  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9842   0032DE  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9843   0032E2  CFDE F001          	movff	postinc2,strncmp@_l
  9844   0032E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  9845   0032EA  0E48               	movlw	low STR_11
  9846   0032EC  6E03               	movwf	strncmp@_r^0,c
  9847   0032EE  0E0E               	movlw	high STR_11
  9848   0032F0  6E04               	movwf	(strncmp@_r+1)^0,c
  9849   0032F2  0E00               	movlw	0
  9850   0032F4  6E06               	movwf	(strncmp@n+1)^0,c
  9851   0032F6  0E03               	movlw	3
  9852   0032F8  6E05               	movwf	strncmp@n^0,c
  9853   0032FA  EC0C  F01C         	call	_strncmp	;wreg free
  9854   0032FE  5001               	movf	?_strncmp^0,w,c
  9855   003300  1002               	iorwf	(?_strncmp+1)^0,w,c
  9856   003302  A4D8               	btfss	status,2,c
  9857   003304  EF86  F019         	goto	u2781
  9858   003308  EF88  F019         	goto	u2780
  9859   00330C                     u2781:
  9860   00330C  EFC8  F019         	goto	l3452
  9861   003310                     u2780:
  9862   003310                     l3440:
  9863                           
  9864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9865   003310  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9866   003314  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9867   003318  CFDE FFF6          	movff	postinc2,tblptrl
  9868   00331C  CFDD FFF7          	movff	postdec2,tblptrh
  9869   003320                     	if	0	;tblptru may be non-zero
  9870   003320                     	endif
  9871   003320                     	if	0	;tblptru may be non-zero
  9872   003320                     	endif
  9873   003320  0008               	tblrd		*
  9874   003322  50F5               	movf	tablat,w,c
  9875   003324  0A73               	xorlw	115
  9876   003326  B4D8               	btfsc	status,2,c
  9877   003328  EF98  F019         	goto	u2791
  9878   00332C  EF9A  F019         	goto	u2790
  9879   003330                     u2791:
  9880   003330  EFA0  F019         	goto	l3444
  9881   003334                     u2790:
  9882   003334  0E00               	movlw	0
  9883   003336  6E29               	movwf	(_vfpfcnvrt$2859+1)^0,c
  9884   003338  0E03               	movlw	3
  9885   00333A  6E28               	movwf	_vfpfcnvrt$2859^0,c
  9886   00333C  EFA4  F019         	goto	l3446
  9887   003340                     l3444:
  9888   003340  0E00               	movlw	0
  9889   003342  6E29               	movwf	(_vfpfcnvrt$2859+1)^0,c
  9890   003344  0E01               	movlw	1
  9891   003346  6E28               	movwf	_vfpfcnvrt$2859^0,c
  9892   003348                     l3446:
  9893   003348  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9894   00334C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9895   003350  5028               	movf	_vfpfcnvrt$2859^0,w,c
  9896   003352  26DE               	addwf	postinc2,f,c
  9897   003354  5029               	movf	(_vfpfcnvrt$2859+1)^0,w,c
  9898   003356  22DD               	addwfc	postdec2,f,c
  9899   003358                     
  9900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9901   003358  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9902   00335C  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9903   003360  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9904   003364  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9905   003368  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9906   00336C  0E02               	movlw	2
  9907   00336E  26DE               	addwf	postinc2,f,c
  9908   003370  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9909   003374  0E00               	movlw	0
  9910   003376  22DD               	addwfc	postdec2,f,c
  9911   003378  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9912   00337C  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9913   003380  CFDE F00C          	movff	postinc2,stoa@s
  9914   003384  CFDD F00D          	movff	postdec2,stoa@s+1
  9915   003388  ECE6  F019         	call	_stoa	;wreg free
  9916   00338C  EFE5  F019         	goto	l1422
  9917   003390                     l3452:
  9918                           
  9919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9920   003390  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9921   003394  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9922   003398  2ADE               	incf	postinc2,f,c
  9923   00339A  0E00               	movlw	0
  9924   00339C  22DD               	addwfc	postdec2,f,c
  9925   00339E  EFE5  F019         	goto	l1422
  9926   0033A2                     l3456:
  9927                           
  9928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9929   0033A2  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9930   0033A6  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9931   0033AA  CFDE FFF6          	movff	postinc2,tblptrl
  9932   0033AE  CFDD FFF7          	movff	postdec2,tblptrh
  9933   0033B2                     	if	0	;tblptru may be non-zero
  9934   0033B2                     	endif
  9935   0033B2                     	if	0	;tblptru may be non-zero
  9936   0033B2                     	endif
  9937   0033B2  0008               	tblrd		*
  9938   0033B4  50F5               	movf	tablat,w,c
  9939   0033B6  6E01               	movwf	fputc@c^0,c
  9940   0033B8  6A02               	clrf	(fputc@c+1)^0,c
  9941   0033BA  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9942   0033BE  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9943   0033C2  EC7B  F01C         	call	_fputc	;wreg free
  9944   0033C6  EFC8  F019         	goto	l3452
  9945   0033CA                     l1422:
  9946   0033CA  0012               	return		;funcret
  9947   0033CC                     __end_of_vfpfcnvrt:
  9948                           	callstack 0
  9949                           
  9950 ;; *************** function _strncmp *****************
  9951 ;; Defined at:
  9952 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9955 ;;		 -> STR_1(16), 
  9956 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9957 ;;		 -> STR_13(4), 
  9958 ;;  n               2    4[COMRAM] unsigned int 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9961 ;;		 -> STR_13(4), 
  9962 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9963 ;;		 -> STR_1(16), 
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  2    0[COMRAM] int 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9973 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9975 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9976 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9977 ;;Total ram usage:       11 bytes
  9978 ;; Hardware stack levels used: 1
  9979 ;; Hardware stack levels required when called: 1
  9980 ;; This function calls:
  9981 ;;		Nothing
  9982 ;; This function is called by:
  9983 ;;		_vfpfcnvrt
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text57
  9988   003818                     __ptext57:
  9989                           	callstack 0
  9990   003818                     _strncmp:
  9991                           	callstack 25
  9992   003818  C001  F008         	movff	strncmp@_l,strncmp@l
  9993   00381C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9994   003820  C003  F00A         	movff	strncmp@_r,strncmp@r
  9995   003824  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9996   003828  0605               	decf	strncmp@n^0,f,c
  9997   00382A  A0D8               	btfss	status,0,c
  9998   00382C  0606               	decf	(strncmp@n+1)^0,f,c
  9999   00382E  2805               	incf	strncmp@n^0,w,c
 10000   003830  E106               	bnz	u2401
 10001   003832  2806               	incf	(strncmp@n+1)^0,w,c
 10002   003834  A4D8               	btfss	status,2,c
 10003   003836  EF1F  F01C         	goto	u2401
 10004   00383A  EF21  F01C         	goto	u2400
 10005   00383E                     u2401:
 10006   00383E  EF2E  F01C         	goto	l3210
 10007   003842                     u2400:
 10008   003842  0E00               	movlw	0
 10009   003844  6E02               	movwf	(?_strncmp+1)^0,c
 10010   003846  0E00               	movlw	0
 10011   003848  6E01               	movwf	?_strncmp^0,c
 10012   00384A  EF7A  F01C         	goto	l1461
 10013   00384E                     l3208:
 10014   00384E  4A08               	infsnz	strncmp@l^0,f,c
 10015   003850  2A09               	incf	(strncmp@l+1)^0,f,c
 10016   003852  4A0A               	infsnz	strncmp@r^0,f,c
 10017   003854  2A0B               	incf	(strncmp@r+1)^0,f,c
 10018   003856  0605               	decf	strncmp@n^0,f,c
 10019   003858  A0D8               	btfss	status,0,c
 10020   00385A  0606               	decf	(strncmp@n+1)^0,f,c
 10021   00385C                     l3210:
 10022   00385C  C008  FFF6         	movff	strncmp@l,tblptrl
 10023   003860  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10024   003864                     	if	0	;tblptru may be non-zero
 10025   003864                     	endif
 10026   003864                     	if	0	;tblptru may be non-zero
 10027   003864                     	endif
 10028   003864  0008               	tblrd		*
 10029   003866  50F5               	movf	tablat,w,c
 10030   003868  0900               	iorlw	0
 10031   00386A  B4D8               	btfsc	status,2,c
 10032   00386C  EF3A  F01C         	goto	u2411
 10033   003870  EF3C  F01C         	goto	u2410
 10034   003874                     u2411:
 10035   003874  EF68  F01C         	goto	l3218
 10036   003878                     u2410:
 10037   003878  C00A  FFF6         	movff	strncmp@r,tblptrl
 10038   00387C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10039   003880                     	if	0	;tblptru may be non-zero
 10040   003880                     	endif
 10041   003880                     	if	0	;tblptru may be non-zero
 10042   003880                     	endif
 10043   003880  0008               	tblrd		*
 10044   003882  50F5               	movf	tablat,w,c
 10045   003884  0900               	iorlw	0
 10046   003886  B4D8               	btfsc	status,2,c
 10047   003888  EF48  F01C         	goto	u2421
 10048   00388C  EF4A  F01C         	goto	u2420
 10049   003890                     u2421:
 10050   003890  EF68  F01C         	goto	l3218
 10051   003894                     u2420:
 10052   003894  5005               	movf	strncmp@n^0,w,c
 10053   003896  1006               	iorwf	(strncmp@n+1)^0,w,c
 10054   003898  B4D8               	btfsc	status,2,c
 10055   00389A  EF51  F01C         	goto	u2431
 10056   00389E  EF53  F01C         	goto	u2430
 10057   0038A2                     u2431:
 10058   0038A2  EF68  F01C         	goto	l3218
 10059   0038A6                     u2430:
 10060   0038A6  C008  FFF6         	movff	strncmp@l,tblptrl
 10061   0038AA  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10062   0038AE                     	if	0	;tblptru may be non-zero
 10063   0038AE                     	endif
 10064   0038AE                     	if	0	;tblptru may be non-zero
 10065   0038AE                     	endif
 10066   0038AE  0008               	tblrd		*
 10067   0038B0  CFF5 F007          	movff	tablat,??_strncmp
 10068   0038B4  C00A  FFF6         	movff	strncmp@r,tblptrl
 10069   0038B8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10070   0038BC                     	if	0	;tblptru may be non-zero
 10071   0038BC                     	endif
 10072   0038BC                     	if	0	;tblptru may be non-zero
 10073   0038BC                     	endif
 10074   0038BC  0008               	tblrd		*
 10075   0038BE  50F5               	movf	tablat,w,c
 10076   0038C0  1807               	xorwf	??_strncmp^0,w,c
 10077   0038C2  B4D8               	btfsc	status,2,c
 10078   0038C4  EF66  F01C         	goto	u2441
 10079   0038C8  EF68  F01C         	goto	u2440
 10080   0038CC                     u2441:
 10081   0038CC  EF27  F01C         	goto	l3208
 10082   0038D0                     u2440:
 10083   0038D0                     l3218:
 10084   0038D0  C008  FFF6         	movff	strncmp@l,tblptrl
 10085   0038D4  C009  FFF7         	movff	strncmp@l+1,tblptrh
 10086   0038D8                     	if	0	;tblptru may be non-zero
 10087   0038D8                     	endif
 10088   0038D8                     	if	0	;tblptru may be non-zero
 10089   0038D8                     	endif
 10090   0038D8  0008               	tblrd		*
 10091   0038DA  CFF5 F007          	movff	tablat,??_strncmp
 10092   0038DE  C00A  FFF6         	movff	strncmp@r,tblptrl
 10093   0038E2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
 10094   0038E6                     	if	0	;tblptru may be non-zero
 10095   0038E6                     	endif
 10096   0038E6                     	if	0	;tblptru may be non-zero
 10097   0038E6                     	endif
 10098   0038E6  0008               	tblrd		*
 10099   0038E8  50F5               	movf	tablat,w,c
 10100   0038EA  5C07               	subwf	??_strncmp^0,w,c
 10101   0038EC  6E01               	movwf	?_strncmp^0,c
 10102   0038EE  6A02               	clrf	(?_strncmp+1)^0,c
 10103   0038F0  A0D8               	btfss	status,0,c
 10104   0038F2  0602               	decf	(?_strncmp+1)^0,f,c
 10105   0038F4                     l1461:
 10106   0038F4  0012               	return		;funcret
 10107   0038F6                     __end_of_strncmp:
 10108                           	callstack 0
 10109                           
 10110 ;; *************** function _stoa *****************
 10111 ;; Defined at:
 10112 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 10115 ;;		 -> sprintf@f(11), 
 10116 ;;  s               2   11[COMRAM] PTR unsigned char 
 10117 ;;		 -> ?_sprintf(2), STR_10(9), STR_9(11), STR_8(7), 
 10118 ;;		 -> STR_7(5), STR_6(7), STR_5(10), STR_4(6), 
 10119 ;;		 -> STR_3(4), STR_2(1), 
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  nuls            7   14[COMRAM] unsigned char [7]
 10122 ;;  p               2   29[COMRAM] int 
 10123 ;;  l               2   27[COMRAM] int 
 10124 ;;  cp              2   25[COMRAM] PTR unsigned char 
 10125 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10126 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10127 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10128 ;;  i               2   23[COMRAM] int 
 10129 ;;  w               2   21[COMRAM] int 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10140 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10142 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10143 ;;Total ram usage:       22 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; Hardware stack levels required when called: 3
 10146 ;; This function calls:
 10147 ;;		_fputc
 10148 ;;		_strlen
 10149 ;; This function is called by:
 10150 ;;		_vfpfcnvrt
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text58
 10155   0033CC                     __ptext58:
 10156                           	callstack 0
 10157   0033CC                     _stoa:
 10158                           	callstack 23
 10159   0033CC                     
 10160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
 10161   0033CC  EE21  F0AE         	lfsr	2,stoa@F1144
 10162   0033D0  EE10  F00F         	lfsr	1,stoa@nuls
 10163   0033D4  0E06               	movlw	6
 10164   0033D6                     u2331:
 10165   0033D6  CFDB FFE3          	movff	plusw2,plusw1
 10166   0033DA  06E8               	decf	wreg,f,c
 10167   0033DC  E2FC               	bc	u2331
 10168   0033DE                     
 10169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
 10170   0033DE  C00C  F01A         	movff	stoa@s,stoa@cp
 10171   0033E2  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
 10172   0033E6                     
 10173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
 10174   0033E6  501A               	movf	stoa@cp^0,w,c
 10175   0033E8  101B               	iorwf	(stoa@cp+1)^0,w,c
 10176   0033EA  A4D8               	btfss	status,2,c
 10177   0033EC  EFFA  F019         	goto	u2341
 10178   0033F0  EFFC  F019         	goto	u2340
 10179   0033F4                     u2341:
 10180   0033F4  EF00  F01A         	goto	l3178
 10181   0033F8                     u2340:
 10182   0033F8                     
 10183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
 10184   0033F8  0E0F               	movlw	low stoa@nuls
 10185   0033FA  6E1A               	movwf	stoa@cp^0,c
 10186   0033FC  0E00               	movlw	high stoa@nuls
 10187   0033FE  6E1B               	movwf	(stoa@cp+1)^0,c
 10188   003400                     l3178:
 10189                           
 10190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
 10191   003400  C01A  F001         	movff	stoa@cp,strlen@s
 10192   003404  C01B  F002         	movff	stoa@cp+1,strlen@s+1
 10193   003408  EC50  F023         	call	_strlen	;wreg free
 10194   00340C  C001  F01C         	movff	?_strlen,stoa@l
 10195   003410  C002  F01D         	movff	?_strlen+1,stoa@l+1
 10196   003414                     
 10197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 10198   003414  C0E4  F01E         	movff	_prec,stoa@p
 10199   003418  C0E5  F01F         	movff	_prec+1,stoa@p+1
 10200   00341C                     
 10201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 10202   00341C  BE1F               	btfsc	(stoa@p+1)^0,7,c
 10203   00341E  EF13  F01A         	goto	u2351
 10204   003422  EF15  F01A         	goto	u2350
 10205   003426                     u2351:
 10206   003426  EF2A  F01A         	goto	l1402
 10207   00342A                     u2350:
 10208   00342A  501C               	movf	stoa@l^0,w,c
 10209   00342C  5C1E               	subwf	stoa@p^0,w,c
 10210   00342E  501F               	movf	(stoa@p+1)^0,w,c
 10211   003430  0A80               	xorlw	128
 10212   003432  6E0E               	movwf	??_stoa^0,c
 10213   003434  501D               	movf	(stoa@l+1)^0,w,c
 10214   003436  0A80               	xorlw	128
 10215   003438  580E               	subwfb	??_stoa^0,w,c
 10216   00343A  A0D8               	btfss	status,0,c
 10217   00343C  EF22  F01A         	goto	u2361
 10218   003440  EF24  F01A         	goto	u2360
 10219   003444                     u2361:
 10220   003444  EF26  F01A         	goto	l1400
 10221   003448                     u2360:
 10222   003448  EF2A  F01A         	goto	l1402
 10223   00344C                     l1400:
 10224   00344C  C01E  F01C         	movff	stoa@p,stoa@l
 10225   003450  C01F  F01D         	movff	stoa@p+1,stoa@l+1
 10226   003454                     l1402:
 10227                           
 10228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 10229   003454  C01C  F01E         	movff	stoa@l,stoa@p
 10230   003458  C01D  F01F         	movff	stoa@l+1,stoa@p+1
 10231                           
 10232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 10233   00345C  C0E2  F016         	movff	_width,stoa@w
 10234   003460  C0E3  F017         	movff	_width+1,stoa@w+1
 10235                           
 10236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10237   003464  EF40  F01A         	goto	l3190
 10238   003468                     l3186:
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 10241   003468  0E00               	movlw	0
 10242   00346A  6E02               	movwf	(fputc@c+1)^0,c
 10243   00346C  0E20               	movlw	32
 10244   00346E  6E01               	movwf	fputc@c^0,c
 10245   003470  C00A  F003         	movff	stoa@fp,fputc@fp
 10246   003474  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10247   003478  EC7B  F01C         	call	_fputc	;wreg free
 10248   00347C                     
 10249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10250   00347C  4A1C               	infsnz	stoa@l^0,f,c
 10251   00347E  2A1D               	incf	(stoa@l+1)^0,f,c
 10252   003480                     l3190:
 10253                           
 10254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10255   003480  5016               	movf	stoa@w^0,w,c
 10256   003482  5C1C               	subwf	stoa@l^0,w,c
 10257   003484  501D               	movf	(stoa@l+1)^0,w,c
 10258   003486  0A80               	xorlw	128
 10259   003488  6E0E               	movwf	??_stoa^0,c
 10260   00348A  5017               	movf	(stoa@w+1)^0,w,c
 10261   00348C  0A80               	xorlw	128
 10262   00348E  580E               	subwfb	??_stoa^0,w,c
 10263   003490  A0D8               	btfss	status,0,c
 10264   003492  EF4D  F01A         	goto	u2371
 10265   003496  EF4F  F01A         	goto	u2370
 10266   00349A                     u2371:
 10267   00349A  EF34  F01A         	goto	l3186
 10268   00349E                     u2370:
 10269   00349E                     
 10270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10271   00349E  0E00               	movlw	0
 10272   0034A0  6E19               	movwf	(stoa@i+1)^0,c
 10273   0034A2  0E00               	movlw	0
 10274   0034A4  6E18               	movwf	stoa@i^0,c
 10275                           
 10276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10277   0034A6  EF74  F01A         	goto	l3200
 10278   0034AA                     l3194:
 10279                           
 10280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10281   0034AA  C01A  FFF6         	movff	stoa@cp,tblptrl
 10282   0034AE  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10283   0034B2  0E00               	movlw	low (__smallconst shr (0+16))
 10284   0034B4  6EF8               	movwf	tblptru,c
 10285   0034B6  0E0D               	movlw	(high __ramtop+-1)
 10286   0034B8  64F7               	cpfsgt	tblptrh,c
 10287   0034BA  D003               	bra	u2387
 10288   0034BC  0008               	tblrd		*
 10289   0034BE  50F5               	movf	tablat,w,c
 10290   0034C0  D005               	bra	u2380
 10291   0034C2                     u2387:
 10292   0034C2  CFF6 FFE1          	movff	tblptrl,fsr1l
 10293   0034C6  CFF7 FFE2          	movff	tblptrh,fsr1h
 10294   0034CA  50E7               	movf	indf1,w,c
 10295   0034CC                     u2380:
 10296   0034CC  6E0E               	movwf	??_stoa^0,c
 10297   0034CE  500E               	movf	??_stoa^0,w,c
 10298   0034D0  6E01               	movwf	fputc@c^0,c
 10299   0034D2  6A02               	clrf	(fputc@c+1)^0,c
 10300   0034D4  C00A  F003         	movff	stoa@fp,fputc@fp
 10301   0034D8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10302   0034DC  EC7B  F01C         	call	_fputc	;wreg free
 10303   0034E0                     
 10304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10305   0034E0  4A1A               	infsnz	stoa@cp^0,f,c
 10306   0034E2  2A1B               	incf	(stoa@cp+1)^0,f,c
 10307   0034E4                     
 10308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10309   0034E4  4A18               	infsnz	stoa@i^0,f,c
 10310   0034E6  2A19               	incf	(stoa@i+1)^0,f,c
 10311   0034E8                     l3200:
 10312                           
 10313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10314   0034E8  501E               	movf	stoa@p^0,w,c
 10315   0034EA  5C18               	subwf	stoa@i^0,w,c
 10316   0034EC  5019               	movf	(stoa@i+1)^0,w,c
 10317   0034EE  0A80               	xorlw	128
 10318   0034F0  6E0E               	movwf	??_stoa^0,c
 10319   0034F2  501F               	movf	(stoa@p+1)^0,w,c
 10320   0034F4  0A80               	xorlw	128
 10321   0034F6  580E               	subwfb	??_stoa^0,w,c
 10322   0034F8  A0D8               	btfss	status,0,c
 10323   0034FA  EF81  F01A         	goto	u2391
 10324   0034FE  EF83  F01A         	goto	u2390
 10325   003502                     u2391:
 10326   003502  EF55  F01A         	goto	l3194
 10327   003506                     u2390:
 10328   003506  0012               	return		;funcret
 10329   003508                     __end_of_stoa:
 10330                           	callstack 0
 10331                           
 10332 ;; *************** function _strlen *****************
 10333 ;; Defined at:
 10334 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10337 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10338 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10339 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10342 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_10(9), STR_9(11), 
 10343 ;;		 -> STR_8(7), STR_7(5), STR_6(7), STR_5(10), 
 10344 ;;		 -> STR_4(6), STR_3(4), STR_2(1), 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2    0[COMRAM] unsigned int 
 10347 ;; Registers used:
 10348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10358 ;;Total ram usage:        4 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 1
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_stoa
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           	psect	text59
 10369   0046A0                     __ptext59:
 10370                           	callstack 0
 10371   0046A0                     _strlen:
 10372                           	callstack 24
 10373   0046A0  C001  F003         	movff	strlen@s,strlen@a
 10374   0046A4  C002  F004         	movff	strlen@s+1,strlen@a+1
 10375   0046A8  EF58  F023         	goto	l3106
 10376   0046AC                     l3104:
 10377   0046AC  4A01               	infsnz	strlen@s^0,f,c
 10378   0046AE  2A02               	incf	(strlen@s+1)^0,f,c
 10379   0046B0                     l3106:
 10380   0046B0  C001  FFF6         	movff	strlen@s,tblptrl
 10381   0046B4  C002  FFF7         	movff	strlen@s+1,tblptrh
 10382   0046B8  0E00               	movlw	low (__smallconst shr (0+16))
 10383   0046BA  6EF8               	movwf	tblptru,c
 10384   0046BC  0E0D               	movlw	(high __ramtop+-1)
 10385   0046BE  64F7               	cpfsgt	tblptrh,c
 10386   0046C0  D003               	bra	u2297
 10387   0046C2  0008               	tblrd		*
 10388   0046C4  50F5               	movf	tablat,w,c
 10389   0046C6  D005               	bra	u2290
 10390   0046C8                     u2297:
 10391   0046C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10392   0046CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10393   0046D0  50E7               	movf	indf1,w,c
 10394   0046D2                     u2290:
 10395   0046D2  0900               	iorlw	0
 10396   0046D4  A4D8               	btfss	status,2,c
 10397   0046D6  EF6F  F023         	goto	u2301
 10398   0046DA  EF71  F023         	goto	u2300
 10399   0046DE                     u2301:
 10400   0046DE  EF56  F023         	goto	l3104
 10401   0046E2                     u2300:
 10402   0046E2  5003               	movf	strlen@a^0,w,c
 10403   0046E4  5C01               	subwf	strlen@s^0,w,c
 10404   0046E6  6E01               	movwf	?_strlen^0,c
 10405   0046E8  5004               	movf	(strlen@a+1)^0,w,c
 10406   0046EA  5802               	subwfb	(strlen@s+1)^0,w,c
 10407   0046EC  6E02               	movwf	(?_strlen+1)^0,c
 10408   0046EE  0012               	return		;funcret
 10409   0046F0                     __end_of_strlen:
 10410                           	callstack 0
 10411                           
 10412 ;; *************** function _fputc *****************
 10413 ;; Defined at:
 10414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  c               2    0[COMRAM] int 
 10417 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10418 ;;		 -> sprintf@f(11), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;		None
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  2    0[COMRAM] int 
 10423 ;; Registers used:
 10424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10432 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10433 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10434 ;;Total ram usage:        9 bytes
 10435 ;; Hardware stack levels used: 1
 10436 ;; Hardware stack levels required when called: 2
 10437 ;; This function calls:
 10438 ;;		_putch
 10439 ;; This function is called by:
 10440 ;;		_stoa
 10441 ;;		_vfpfcnvrt
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text60
 10446   0038F6                     __ptext60:
 10447                           	callstack 0
 10448   0038F6                     _fputc:
 10449                           	callstack 23
 10450   0038F6  5003               	movf	fputc@fp^0,w,c
 10451   0038F8  1004               	iorwf	(fputc@fp+1)^0,w,c
 10452   0038FA  B4D8               	btfsc	status,2,c
 10453   0038FC  EF82  F01C         	goto	u2251
 10454   003900  EF84  F01C         	goto	u2250
 10455   003904                     u2251:
 10456   003904  EF8D  F01C         	goto	l3092
 10457   003908                     u2250:
 10458   003908  5003               	movf	fputc@fp^0,w,c
 10459   00390A  1004               	iorwf	(fputc@fp+1)^0,w,c
 10460   00390C  A4D8               	btfss	status,2,c
 10461   00390E  EF8B  F01C         	goto	u2261
 10462   003912  EF8D  F01C         	goto	u2260
 10463   003916                     u2261:
 10464   003916  EF92  F01C         	goto	l3094
 10465   00391A                     u2260:
 10466   00391A                     l3092:
 10467   00391A  5001               	movf	fputc@c^0,w,c
 10468   00391C  EC42  F025         	call	_putch
 10469   003920  EFDF  F01C         	goto	l1440
 10470   003924                     l3094:
 10471   003924  EE20 F009          	lfsr	2,9
 10472   003928  5003               	movf	fputc@fp^0,w,c
 10473   00392A  26D9               	addwf	fsr2l,f,c
 10474   00392C  5004               	movf	(fputc@fp+1)^0,w,c
 10475   00392E  22DA               	addwfc	fsr2h,f,c
 10476   003930  50DE               	movf	postinc2,w,c
 10477   003932  10DE               	iorwf	postinc2,w,c
 10478   003934  B4D8               	btfsc	status,2,c
 10479   003936  EF9F  F01C         	goto	u2271
 10480   00393A  EFA1  F01C         	goto	u2270
 10481   00393E                     u2271:
 10482   00393E  EFBC  F01C         	goto	l3098
 10483   003942                     u2270:
 10484   003942  EE20 F009          	lfsr	2,9
 10485   003946  5003               	movf	fputc@fp^0,w,c
 10486   003948  26D9               	addwf	fsr2l,f,c
 10487   00394A  5004               	movf	(fputc@fp+1)^0,w,c
 10488   00394C  22DA               	addwfc	fsr2h,f,c
 10489   00394E  EE10 F003          	lfsr	1,3
 10490   003952  5003               	movf	fputc@fp^0,w,c
 10491   003954  26E1               	addwf	fsr1l,f,c
 10492   003956  5004               	movf	(fputc@fp+1)^0,w,c
 10493   003958  22E2               	addwfc	fsr1h,f,c
 10494   00395A  50DE               	movf	postinc2,w,c
 10495   00395C  5CE6               	subwf	postinc1,w,c
 10496   00395E  50E6               	movf	postinc1,w,c
 10497   003960  0A80               	xorlw	128
 10498   003962  6E09               	movwf	(??_fputc+4)^0,c
 10499   003964  50DE               	movf	postinc2,w,c
 10500   003966  0A80               	xorlw	128
 10501   003968  5809               	subwfb	(??_fputc+4)^0,w,c
 10502   00396A  B0D8               	btfsc	status,0,c
 10503   00396C  EFBA  F01C         	goto	u2281
 10504   003970  EFBC  F01C         	goto	u2280
 10505   003974                     u2281:
 10506   003974  EFDF  F01C         	goto	l1440
 10507   003978                     u2280:
 10508   003978                     l3098:
 10509   003978  EE20 F003          	lfsr	2,3
 10510   00397C  5003               	movf	fputc@fp^0,w,c
 10511   00397E  26D9               	addwf	fsr2l,f,c
 10512   003980  5004               	movf	(fputc@fp+1)^0,w,c
 10513   003982  22DA               	addwfc	fsr2h,f,c
 10514   003984  CFDE F005          	movff	postinc2,??_fputc
 10515   003988  CFDD F006          	movff	postdec2,??_fputc+1
 10516   00398C  C003  FFD9         	movff	fputc@fp,fsr2l
 10517   003990  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10518   003994  CFDE F007          	movff	postinc2,??_fputc+2
 10519   003998  CFDD F008          	movff	postdec2,??_fputc+3
 10520   00399C  5005               	movf	??_fputc^0,w,c
 10521   00399E  2407               	addwf	(??_fputc+2)^0,w,c
 10522   0039A0  6ED9               	movwf	fsr2l,c
 10523   0039A2  5006               	movf	(??_fputc+1)^0,w,c
 10524   0039A4  2008               	addwfc	(??_fputc+3)^0,w,c
 10525   0039A6  6EDA               	movwf	fsr2h,c
 10526   0039A8  C001  FFDF         	movff	fputc@c,indf2
 10527   0039AC  EE20 F003          	lfsr	2,3
 10528   0039B0  5003               	movf	fputc@fp^0,w,c
 10529   0039B2  26D9               	addwf	fsr2l,f,c
 10530   0039B4  5004               	movf	(fputc@fp+1)^0,w,c
 10531   0039B6  22DA               	addwfc	fsr2h,f,c
 10532   0039B8  2ADE               	incf	postinc2,f,c
 10533   0039BA  0E00               	movlw	0
 10534   0039BC  22DD               	addwfc	postdec2,f,c
 10535   0039BE                     l1440:
 10536   0039BE  0012               	return		;funcret
 10537   0039C0                     __end_of_fputc:
 10538                           	callstack 0
 10539                           
 10540 ;; *************** function _putch *****************
 10541 ;; Defined at:
 10542 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  c               1    wreg     unsigned char 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;  c               1    0[COMRAM] unsigned char 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10560 ;;Total ram usage:        0 bytes
 10561 ;; Hardware stack levels used: 1
 10562 ;; Hardware stack levels required when called: 1
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_fputc
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text61
 10571   004A84                     __ptext61:
 10572                           	callstack 0
 10573   004A84                     _putch:
 10574                           	callstack 23
 10575   004A84  0012               	return		;funcret
 10576   004A86                     __end_of_putch:
 10577                           	callstack 0
 10578                           
 10579 ;; *************** function _sendStringSerial4 *****************
 10580 ;; Defined at:
 10581 ;;		line 48 in file "serial.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  string          2    1[COMRAM] PTR unsigned char 
 10584 ;;		 -> main@data(100), 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;Total ram usage:        2 bytes
 10601 ;; Hardware stack levels used: 1
 10602 ;; Hardware stack levels required when called: 2
 10603 ;; This function calls:
 10604 ;;		_sendCharSerial4
 10605 ;; This function is called by:
 10606 ;;		_Color2String
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text62
 10611   004892                     __ptext62:
 10612                           	callstack 0
 10613   004892                     _sendStringSerial4:
 10614                           	callstack 27
 10615   004892                     
 10616                           ;serial.c: 51:     while(*string != 0){
 10617   004892  EF58  F024         	goto	l4004
 10618   004896                     l3998:
 10619                           
 10620                           ;serial.c: 53:   sendCharSerial4(*string++);
 10621   004896  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10622   00489A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10623   00489E  50DF               	movf	indf2,w,c
 10624   0048A0  EC06  F025         	call	_sendCharSerial4
 10625   0048A4  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10626   0048A6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10627   0048A8                     
 10628                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10629   0048A8  0E6A               	movlw	106
 10630   0048AA                     u4507:
 10631   0048AA  2EE8               	decfsz	wreg,f,c
 10632   0048AC  D7FE               	bra	u4507
 10633   0048AE  D000               	nop2	
 10634   0048B0                     l4004:
 10635                           
 10636                           ;serial.c: 51:     while(*string != 0){
 10637   0048B0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10638   0048B4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10639   0048B8  50DF               	movf	indf2,w,c
 10640   0048BA  A4D8               	btfss	status,2,c
 10641   0048BC  EF62  F024         	goto	u3661
 10642   0048C0  EF64  F024         	goto	u3660
 10643   0048C4                     u3661:
 10644   0048C4  EF4B  F024         	goto	l3998
 10645   0048C8                     u3660:
 10646   0048C8  0012               	return		;funcret
 10647   0048CA                     __end_of_sendStringSerial4:
 10648                           	callstack 0
 10649                           
 10650 ;; *************** function _sendCharSerial4 *****************
 10651 ;; Defined at:
 10652 ;;		line 34 in file "serial.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  charToSend      1    wreg     unsigned char 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  charToSend      1    0[COMRAM] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;Total ram usage:        1 bytes
 10671 ;; Hardware stack levels used: 1
 10672 ;; Hardware stack levels required when called: 1
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_sendStringSerial4
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text63
 10681   004A0C                     __ptext63:
 10682                           	callstack 0
 10683   004A0C                     _sendCharSerial4:
 10684                           	callstack 27
 10685                           
 10686                           ;incstack = 0
 10687                           ;sendCharSerial4@charToSend stored from wreg
 10688   004A0C  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10689   004A0E                     l396:
 10690   004A0E  010E               	movlb	14	; () banked
 10691   004A10  A537               	btfss	55,2,b	;volatile
 10692   004A12  EF0D  F025         	goto	u2901
 10693   004A16  EF0F  F025         	goto	u2900
 10694   004A1A                     u2901:
 10695   004A1A  EF07  F025         	goto	l396
 10696   004A1E                     u2900:
 10697   004A1E                     
 10698                           ; BSR set to: 14
 10699                           ;serial.c: 36:     TX4REG = charToSend;
 10700   004A1E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10701   004A22                     
 10702                           ; BSR set to: 14
 10703   004A22  0012               	return		;funcret
 10704   004A24                     __end_of_sendCharSerial4:
 10705                           	callstack 0
 10706                           
 10707 ;; *************** function _Hue2Colour *****************
 10708 ;; Defined at:
 10709 ;;		line 56 in file "colorfunctions.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
 10712 ;;		 -> colorf(22), 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  colourname      2   88[COMRAM] PTR unsigned char 
 10715 ;;		 -> STR_10(9), STR_9(11), STR_8(7), STR_7(5), 
 10716 ;;		 -> STR_6(7), STR_5(10), STR_4(6), STR_3(4), 
 10717 ;;		 -> STR_2(1), 
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  2   86[COMRAM] PTR unsigned char 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;Total ram usage:        4 bytes
 10732 ;; Hardware stack levels used: 1
 10733 ;; Hardware stack levels required when called: 2
 10734 ;; This function calls:
 10735 ;;		___flge
 10736 ;; This function is called by:
 10737 ;;		_main
 10738 ;;		_Color2String
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text64
 10743   00157E                     __ptext64:
 10744                           	callstack 0
 10745   00157E                     _Hue2Colour:
 10746                           	callstack 28
 10747   00157E                     
 10748                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10749   00157E  0E10               	movlw	low (STR_1+15)
 10750   001580  6E59               	movwf	Hue2Colour@colourname^0,c
 10751   001582  0E0E               	movlw	high (STR_1+15)
 10752   001584  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10753   001586                     
 10754                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
 10755   001586  0E00               	movlw	0
 10756   001588  6E4B               	movwf	___flge@ff1^0,c
 10757   00158A  0E00               	movlw	0
 10758   00158C  6E4C               	movwf	(___flge@ff1+1)^0,c
 10759   00158E  0EB0               	movlw	176
 10760   001590  6E4D               	movwf	(___flge@ff1+2)^0,c
 10761   001592  0E43               	movlw	67
 10762   001594  6E4E               	movwf	(___flge@ff1+3)^0,c
 10763   001596  EE20 F010          	lfsr	2,16
 10764   00159A  5057               	movf	Hue2Colour@cf^0,w,c
 10765   00159C  26D9               	addwf	fsr2l,f,c
 10766   00159E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10767   0015A0  22DA               	addwfc	fsr2h,f,c
 10768   0015A2  CFDE F04F          	movff	postinc2,___flge@ff2
 10769   0015A6  CFDE F050          	movff	postinc2,___flge@ff2+1
 10770   0015AA  CFDE F051          	movff	postinc2,___flge@ff2+2
 10771   0015AE  CFDE F052          	movff	postinc2,___flge@ff2+3
 10772   0015B2  EC8A  F01B         	call	___flge	;wreg free
 10773   0015B6  B0D8               	btfsc	status,0,c
 10774   0015B8  EFE0  F00A         	goto	u3361
 10775   0015BC  EFE2  F00A         	goto	u3360
 10776   0015C0                     u3361:
 10777   0015C0  EF0F  F00B         	goto	l3836
 10778   0015C4                     u3360:
 10779   0015C4  EE20 F010          	lfsr	2,16
 10780   0015C8  5057               	movf	Hue2Colour@cf^0,w,c
 10781   0015CA  26D9               	addwf	fsr2l,f,c
 10782   0015CC  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10783   0015CE  22DA               	addwfc	fsr2h,f,c
 10784   0015D0  CFDE F04B          	movff	postinc2,___flge@ff1
 10785   0015D4  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10786   0015D8  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10787   0015DC  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10788   0015E0  0E00               	movlw	0
 10789   0015E2  6E4F               	movwf	___flge@ff2^0,c
 10790   0015E4  0E00               	movlw	0
 10791   0015E6  6E50               	movwf	(___flge@ff2+1)^0,c
 10792   0015E8  0EB4               	movlw	180
 10793   0015EA  6E51               	movwf	(___flge@ff2+2)^0,c
 10794   0015EC  0E43               	movlw	67
 10795   0015EE  6E52               	movwf	(___flge@ff2+3)^0,c
 10796   0015F0  EC8A  F01B         	call	___flge	;wreg free
 10797   0015F4  B0D8               	btfsc	status,0,c
 10798   0015F6  EFFF  F00A         	goto	u3371
 10799   0015FA  EF01  F00B         	goto	u3370
 10800   0015FE                     u3371:
 10801   0015FE  EF0F  F00B         	goto	l3836
 10802   001602                     u3370:
 10803   001602                     
 10804                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10805   001602  0E4C               	movlw	low STR_3
 10806   001604  6E59               	movwf	Hue2Colour@colourname^0,c
 10807   001606  0E0E               	movlw	high STR_3
 10808   001608  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10809   00160A                     
 10810                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10811   00160A  EE20 F014          	lfsr	2,20
 10812   00160E  5057               	movf	Hue2Colour@cf^0,w,c
 10813   001610  26D9               	addwf	fsr2l,f,c
 10814   001612  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10815   001614  22DA               	addwfc	fsr2h,f,c
 10816   001616  0E00               	movlw	0
 10817   001618  6EDE               	movwf	postinc2,c
 10818   00161A  0E00               	movlw	0
 10819   00161C  6EDD               	movwf	postdec2,c
 10820   00161E                     l3836:
 10821                           
 10822                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
 10823   00161E  0E00               	movlw	0
 10824   001620  6E4B               	movwf	___flge@ff1^0,c
 10825   001622  0E00               	movlw	0
 10826   001624  6E4C               	movwf	(___flge@ff1+1)^0,c
 10827   001626  0E96               	movlw	150
 10828   001628  6E4D               	movwf	(___flge@ff1+2)^0,c
 10829   00162A  0E42               	movlw	66
 10830   00162C  6E4E               	movwf	(___flge@ff1+3)^0,c
 10831   00162E  EE20 F010          	lfsr	2,16
 10832   001632  5057               	movf	Hue2Colour@cf^0,w,c
 10833   001634  26D9               	addwf	fsr2l,f,c
 10834   001636  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10835   001638  22DA               	addwfc	fsr2h,f,c
 10836   00163A  CFDE F04F          	movff	postinc2,___flge@ff2
 10837   00163E  CFDE F050          	movff	postinc2,___flge@ff2+1
 10838   001642  CFDE F051          	movff	postinc2,___flge@ff2+2
 10839   001646  CFDE F052          	movff	postinc2,___flge@ff2+3
 10840   00164A  EC8A  F01B         	call	___flge	;wreg free
 10841   00164E  B0D8               	btfsc	status,0,c
 10842   001650  EF2C  F00B         	goto	u3381
 10843   001654  EF2E  F00B         	goto	u3380
 10844   001658                     u3381:
 10845   001658  EF5D  F00B         	goto	l3844
 10846   00165C                     u3380:
 10847   00165C  EE20 F010          	lfsr	2,16
 10848   001660  5057               	movf	Hue2Colour@cf^0,w,c
 10849   001662  26D9               	addwf	fsr2l,f,c
 10850   001664  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10851   001666  22DA               	addwfc	fsr2h,f,c
 10852   001668  CFDE F04B          	movff	postinc2,___flge@ff1
 10853   00166C  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10854   001670  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10855   001674  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10856   001678  0E00               	movlw	0
 10857   00167A  6E4F               	movwf	___flge@ff2^0,c
 10858   00167C  0E00               	movlw	0
 10859   00167E  6E50               	movwf	(___flge@ff2+1)^0,c
 10860   001680  0E9E               	movlw	158
 10861   001682  6E51               	movwf	(___flge@ff2+2)^0,c
 10862   001684  0E42               	movlw	66
 10863   001686  6E52               	movwf	(___flge@ff2+3)^0,c
 10864   001688  EC8A  F01B         	call	___flge	;wreg free
 10865   00168C  B0D8               	btfsc	status,0,c
 10866   00168E  EF4B  F00B         	goto	u3391
 10867   001692  EF4D  F00B         	goto	u3390
 10868   001696                     u3391:
 10869   001696  EF5D  F00B         	goto	l3844
 10870   00169A                     u3390:
 10871   00169A                     
 10872                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10873   00169A  0E3D               	movlw	low STR_4
 10874   00169C  6E59               	movwf	Hue2Colour@colourname^0,c
 10875   00169E  0E0E               	movlw	high STR_4
 10876   0016A0  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10877   0016A2                     
 10878                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10879   0016A2  EE20 F014          	lfsr	2,20
 10880   0016A6  5057               	movf	Hue2Colour@cf^0,w,c
 10881   0016A8  26D9               	addwf	fsr2l,f,c
 10882   0016AA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10883   0016AC  22DA               	addwfc	fsr2h,f,c
 10884   0016AE  0E01               	movlw	1
 10885   0016B0  6EDE               	movwf	postinc2,c
 10886   0016B2  0E00               	movlw	0
 10887   0016B4  6EDD               	movwf	postdec2,c
 10888                           
 10889                           ;colorfunctions.c: 71:     }
 10890   0016B6  EF31  F00D         	goto	l3892
 10891   0016BA                     l3844:
 10892   0016BA  0E00               	movlw	0
 10893   0016BC  6E4B               	movwf	___flge@ff1^0,c
 10894   0016BE  0E00               	movlw	0
 10895   0016C0  6E4C               	movwf	(___flge@ff1+1)^0,c
 10896   0016C2  0E11               	movlw	17
 10897   0016C4  6E4D               	movwf	(___flge@ff1+2)^0,c
 10898   0016C6  0E43               	movlw	67
 10899   0016C8  6E4E               	movwf	(___flge@ff1+3)^0,c
 10900   0016CA  EE20 F010          	lfsr	2,16
 10901   0016CE  5057               	movf	Hue2Colour@cf^0,w,c
 10902   0016D0  26D9               	addwf	fsr2l,f,c
 10903   0016D2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10904   0016D4  22DA               	addwfc	fsr2h,f,c
 10905   0016D6  CFDE F04F          	movff	postinc2,___flge@ff2
 10906   0016DA  CFDE F050          	movff	postinc2,___flge@ff2+1
 10907   0016DE  CFDE F051          	movff	postinc2,___flge@ff2+2
 10908   0016E2  CFDE F052          	movff	postinc2,___flge@ff2+3
 10909   0016E6  EC8A  F01B         	call	___flge	;wreg free
 10910   0016EA  B0D8               	btfsc	status,0,c
 10911   0016EC  EF7A  F00B         	goto	u3401
 10912   0016F0  EF7C  F00B         	goto	u3400
 10913   0016F4                     u3401:
 10914   0016F4  EFAB  F00B         	goto	l3852
 10915   0016F8                     u3400:
 10916   0016F8  EE20 F010          	lfsr	2,16
 10917   0016FC  5057               	movf	Hue2Colour@cf^0,w,c
 10918   0016FE  26D9               	addwf	fsr2l,f,c
 10919   001700  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10920   001702  22DA               	addwfc	fsr2h,f,c
 10921   001704  CFDE F04B          	movff	postinc2,___flge@ff1
 10922   001708  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10923   00170C  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10924   001710  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10925   001714  0E00               	movlw	0
 10926   001716  6E4F               	movwf	___flge@ff2^0,c
 10927   001718  0E00               	movlw	0
 10928   00171A  6E50               	movwf	(___flge@ff2+1)^0,c
 10929   00171C  0E24               	movlw	36
 10930   00171E  6E51               	movwf	(___flge@ff2+2)^0,c
 10931   001720  0E43               	movlw	67
 10932   001722  6E52               	movwf	(___flge@ff2+3)^0,c
 10933   001724  EC8A  F01B         	call	___flge	;wreg free
 10934   001728  B0D8               	btfsc	status,0,c
 10935   00172A  EF99  F00B         	goto	u3411
 10936   00172E  EF9B  F00B         	goto	u3410
 10937   001732                     u3411:
 10938   001732  EFAB  F00B         	goto	l3852
 10939   001736                     u3410:
 10940   001736                     
 10941                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10942   001736  0E1C               	movlw	low STR_5
 10943   001738  6E59               	movwf	Hue2Colour@colourname^0,c
 10944   00173A  0E0E               	movlw	high STR_5
 10945   00173C  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 10946   00173E                     
 10947                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10948   00173E  EE20 F014          	lfsr	2,20
 10949   001742  5057               	movf	Hue2Colour@cf^0,w,c
 10950   001744  26D9               	addwf	fsr2l,f,c
 10951   001746  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10952   001748  22DA               	addwfc	fsr2h,f,c
 10953   00174A  0E02               	movlw	2
 10954   00174C  6EDE               	movwf	postinc2,c
 10955   00174E  0E00               	movlw	0
 10956   001750  6EDD               	movwf	postdec2,c
 10957                           
 10958                           ;colorfunctions.c: 76:     }
 10959   001752  EF31  F00D         	goto	l3892
 10960   001756                     l3852:
 10961   001756  0E00               	movlw	0
 10962   001758  6E4B               	movwf	___flge@ff1^0,c
 10963   00175A  0E00               	movlw	0
 10964   00175C  6E4C               	movwf	(___flge@ff1+1)^0,c
 10965   00175E  0EA8               	movlw	168
 10966   001760  6E4D               	movwf	(___flge@ff1+2)^0,c
 10967   001762  0E41               	movlw	65
 10968   001764  6E4E               	movwf	(___flge@ff1+3)^0,c
 10969   001766  EE20 F010          	lfsr	2,16
 10970   00176A  5057               	movf	Hue2Colour@cf^0,w,c
 10971   00176C  26D9               	addwf	fsr2l,f,c
 10972   00176E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10973   001770  22DA               	addwfc	fsr2h,f,c
 10974   001772  CFDE F04F          	movff	postinc2,___flge@ff2
 10975   001776  CFDE F050          	movff	postinc2,___flge@ff2+1
 10976   00177A  CFDE F051          	movff	postinc2,___flge@ff2+2
 10977   00177E  CFDE F052          	movff	postinc2,___flge@ff2+3
 10978   001782  EC8A  F01B         	call	___flge	;wreg free
 10979   001786  B0D8               	btfsc	status,0,c
 10980   001788  EFC8  F00B         	goto	u3421
 10981   00178C  EFCA  F00B         	goto	u3420
 10982   001790                     u3421:
 10983   001790  EFF9  F00B         	goto	l3860
 10984   001794                     u3420:
 10985   001794  EE20 F010          	lfsr	2,16
 10986   001798  5057               	movf	Hue2Colour@cf^0,w,c
 10987   00179A  26D9               	addwf	fsr2l,f,c
 10988   00179C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 10989   00179E  22DA               	addwfc	fsr2h,f,c
 10990   0017A0  CFDE F04B          	movff	postinc2,___flge@ff1
 10991   0017A4  CFDE F04C          	movff	postinc2,___flge@ff1+1
 10992   0017A8  CFDE F04D          	movff	postinc2,___flge@ff1+2
 10993   0017AC  CFDE F04E          	movff	postinc2,___flge@ff1+3
 10994   0017B0  0E00               	movlw	0
 10995   0017B2  6E4F               	movwf	___flge@ff2^0,c
 10996   0017B4  0E00               	movlw	0
 10997   0017B6  6E50               	movwf	(___flge@ff2+1)^0,c
 10998   0017B8  0EC8               	movlw	200
 10999   0017BA  6E51               	movwf	(___flge@ff2+2)^0,c
 11000   0017BC  0E41               	movlw	65
 11001   0017BE  6E52               	movwf	(___flge@ff2+3)^0,c
 11002   0017C0  EC8A  F01B         	call	___flge	;wreg free
 11003   0017C4  B0D8               	btfsc	status,0,c
 11004   0017C6  EFE7  F00B         	goto	u3431
 11005   0017CA  EFE9  F00B         	goto	u3430
 11006   0017CE                     u3431:
 11007   0017CE  EFF9  F00B         	goto	l3860
 11008   0017D2                     u3430:
 11009   0017D2                     
 11010                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 11011   0017D2  0E36               	movlw	low STR_6
 11012   0017D4  6E59               	movwf	Hue2Colour@colourname^0,c
 11013   0017D6  0E0E               	movlw	high STR_6
 11014   0017D8  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11015   0017DA                     
 11016                           ;colorfunctions.c: 80:         cf->colourindex=3;
 11017   0017DA  EE20 F014          	lfsr	2,20
 11018   0017DE  5057               	movf	Hue2Colour@cf^0,w,c
 11019   0017E0  26D9               	addwf	fsr2l,f,c
 11020   0017E2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11021   0017E4  22DA               	addwfc	fsr2h,f,c
 11022   0017E6  0E03               	movlw	3
 11023   0017E8  6EDE               	movwf	postinc2,c
 11024   0017EA  0E00               	movlw	0
 11025   0017EC  6EDD               	movwf	postdec2,c
 11026                           
 11027                           ;colorfunctions.c: 81:     }
 11028   0017EE  EF31  F00D         	goto	l3892
 11029   0017F2                     l3860:
 11030   0017F2  0E00               	movlw	0
 11031   0017F4  6E4B               	movwf	___flge@ff1^0,c
 11032   0017F6  0E00               	movlw	0
 11033   0017F8  6E4C               	movwf	(___flge@ff1+1)^0,c
 11034   0017FA  0E70               	movlw	112
 11035   0017FC  6E4D               	movwf	(___flge@ff1+2)^0,c
 11036   0017FE  0E41               	movlw	65
 11037   001800  6E4E               	movwf	(___flge@ff1+3)^0,c
 11038   001802  EE20 F010          	lfsr	2,16
 11039   001806  5057               	movf	Hue2Colour@cf^0,w,c
 11040   001808  26D9               	addwf	fsr2l,f,c
 11041   00180A  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11042   00180C  22DA               	addwfc	fsr2h,f,c
 11043   00180E  CFDE F04F          	movff	postinc2,___flge@ff2
 11044   001812  CFDE F050          	movff	postinc2,___flge@ff2+1
 11045   001816  CFDE F051          	movff	postinc2,___flge@ff2+2
 11046   00181A  CFDE F052          	movff	postinc2,___flge@ff2+3
 11047   00181E  EC8A  F01B         	call	___flge	;wreg free
 11048   001822  B0D8               	btfsc	status,0,c
 11049   001824  EF16  F00C         	goto	u3441
 11050   001828  EF18  F00C         	goto	u3440
 11051   00182C                     u3441:
 11052   00182C  EF47  F00C         	goto	l3868
 11053   001830                     u3440:
 11054   001830  EE20 F010          	lfsr	2,16
 11055   001834  5057               	movf	Hue2Colour@cf^0,w,c
 11056   001836  26D9               	addwf	fsr2l,f,c
 11057   001838  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11058   00183A  22DA               	addwfc	fsr2h,f,c
 11059   00183C  CFDE F04B          	movff	postinc2,___flge@ff1
 11060   001840  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11061   001844  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11062   001848  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11063   00184C  0E00               	movlw	0
 11064   00184E  6E4F               	movwf	___flge@ff2^0,c
 11065   001850  0E00               	movlw	0
 11066   001852  6E50               	movwf	(___flge@ff2+1)^0,c
 11067   001854  0E98               	movlw	152
 11068   001856  6E51               	movwf	(___flge@ff2+2)^0,c
 11069   001858  0E41               	movlw	65
 11070   00185A  6E52               	movwf	(___flge@ff2+3)^0,c
 11071   00185C  EC8A  F01B         	call	___flge	;wreg free
 11072   001860  B0D8               	btfsc	status,0,c
 11073   001862  EF35  F00C         	goto	u3451
 11074   001866  EF37  F00C         	goto	u3450
 11075   00186A                     u3451:
 11076   00186A  EF47  F00C         	goto	l3868
 11077   00186E                     u3450:
 11078   00186E                     
 11079                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 11080   00186E  0E43               	movlw	low STR_7
 11081   001870  6E59               	movwf	Hue2Colour@colourname^0,c
 11082   001872  0E0E               	movlw	high STR_7
 11083   001874  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11084   001876                     
 11085                           ;colorfunctions.c: 85:         cf->colourindex=4;
 11086   001876  EE20 F014          	lfsr	2,20
 11087   00187A  5057               	movf	Hue2Colour@cf^0,w,c
 11088   00187C  26D9               	addwf	fsr2l,f,c
 11089   00187E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11090   001880  22DA               	addwfc	fsr2h,f,c
 11091   001882  0E04               	movlw	4
 11092   001884  6EDE               	movwf	postinc2,c
 11093   001886  0E00               	movlw	0
 11094   001888  6EDD               	movwf	postdec2,c
 11095                           
 11096                           ;colorfunctions.c: 86:     }
 11097   00188A  EF31  F00D         	goto	l3892
 11098   00188E                     l3868:
 11099   00188E  0E00               	movlw	0
 11100   001890  6E4B               	movwf	___flge@ff1^0,c
 11101   001892  0E00               	movlw	0
 11102   001894  6E4C               	movwf	(___flge@ff1+1)^0,c
 11103   001896  0EE0               	movlw	224
 11104   001898  6E4D               	movwf	(___flge@ff1+2)^0,c
 11105   00189A  0E40               	movlw	64
 11106   00189C  6E4E               	movwf	(___flge@ff1+3)^0,c
 11107   00189E  EE20 F010          	lfsr	2,16
 11108   0018A2  5057               	movf	Hue2Colour@cf^0,w,c
 11109   0018A4  26D9               	addwf	fsr2l,f,c
 11110   0018A6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11111   0018A8  22DA               	addwfc	fsr2h,f,c
 11112   0018AA  CFDE F04F          	movff	postinc2,___flge@ff2
 11113   0018AE  CFDE F050          	movff	postinc2,___flge@ff2+1
 11114   0018B2  CFDE F051          	movff	postinc2,___flge@ff2+2
 11115   0018B6  CFDE F052          	movff	postinc2,___flge@ff2+3
 11116   0018BA  EC8A  F01B         	call	___flge	;wreg free
 11117   0018BE  B0D8               	btfsc	status,0,c
 11118   0018C0  EF64  F00C         	goto	u3461
 11119   0018C4  EF66  F00C         	goto	u3460
 11120   0018C8                     u3461:
 11121   0018C8  EF95  F00C         	goto	l3876
 11122   0018CC                     u3460:
 11123   0018CC  EE20 F010          	lfsr	2,16
 11124   0018D0  5057               	movf	Hue2Colour@cf^0,w,c
 11125   0018D2  26D9               	addwf	fsr2l,f,c
 11126   0018D4  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11127   0018D6  22DA               	addwfc	fsr2h,f,c
 11128   0018D8  CFDE F04B          	movff	postinc2,___flge@ff1
 11129   0018DC  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11130   0018E0  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11131   0018E4  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11132   0018E8  0E00               	movlw	0
 11133   0018EA  6E4F               	movwf	___flge@ff2^0,c
 11134   0018EC  0E00               	movlw	0
 11135   0018EE  6E50               	movwf	(___flge@ff2+1)^0,c
 11136   0018F0  0E10               	movlw	16
 11137   0018F2  6E51               	movwf	(___flge@ff2+2)^0,c
 11138   0018F4  0E41               	movlw	65
 11139   0018F6  6E52               	movwf	(___flge@ff2+3)^0,c
 11140   0018F8  EC8A  F01B         	call	___flge	;wreg free
 11141   0018FC  B0D8               	btfsc	status,0,c
 11142   0018FE  EF83  F00C         	goto	u3471
 11143   001902  EF85  F00C         	goto	u3470
 11144   001906                     u3471:
 11145   001906  EF95  F00C         	goto	l3876
 11146   00190A                     u3470:
 11147   00190A                     
 11148                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 11149   00190A  0E2F               	movlw	low STR_8
 11150   00190C  6E59               	movwf	Hue2Colour@colourname^0,c
 11151   00190E  0E0E               	movlw	high STR_8
 11152   001910  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11153   001912                     
 11154                           ;colorfunctions.c: 90:         cf->colourindex=5;
 11155   001912  EE20 F014          	lfsr	2,20
 11156   001916  5057               	movf	Hue2Colour@cf^0,w,c
 11157   001918  26D9               	addwf	fsr2l,f,c
 11158   00191A  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11159   00191C  22DA               	addwfc	fsr2h,f,c
 11160   00191E  0E05               	movlw	5
 11161   001920  6EDE               	movwf	postinc2,c
 11162   001922  0E00               	movlw	0
 11163   001924  6EDD               	movwf	postdec2,c
 11164                           
 11165                           ;colorfunctions.c: 91:     }
 11166   001926  EF31  F00D         	goto	l3892
 11167   00192A                     l3876:
 11168   00192A  0E00               	movlw	0
 11169   00192C  6E4B               	movwf	___flge@ff1^0,c
 11170   00192E  0E00               	movlw	0
 11171   001930  6E4C               	movwf	(___flge@ff1+1)^0,c
 11172   001932  0EAA               	movlw	170
 11173   001934  6E4D               	movwf	(___flge@ff1+2)^0,c
 11174   001936  0E42               	movlw	66
 11175   001938  6E4E               	movwf	(___flge@ff1+3)^0,c
 11176   00193A  EE20 F010          	lfsr	2,16
 11177   00193E  5057               	movf	Hue2Colour@cf^0,w,c
 11178   001940  26D9               	addwf	fsr2l,f,c
 11179   001942  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11180   001944  22DA               	addwfc	fsr2h,f,c
 11181   001946  CFDE F04F          	movff	postinc2,___flge@ff2
 11182   00194A  CFDE F050          	movff	postinc2,___flge@ff2+1
 11183   00194E  CFDE F051          	movff	postinc2,___flge@ff2+2
 11184   001952  CFDE F052          	movff	postinc2,___flge@ff2+3
 11185   001956  EC8A  F01B         	call	___flge	;wreg free
 11186   00195A  B0D8               	btfsc	status,0,c
 11187   00195C  EFB2  F00C         	goto	u3481
 11188   001960  EFB4  F00C         	goto	u3480
 11189   001964                     u3481:
 11190   001964  EFE3  F00C         	goto	l3884
 11191   001968                     u3480:
 11192   001968  EE20 F010          	lfsr	2,16
 11193   00196C  5057               	movf	Hue2Colour@cf^0,w,c
 11194   00196E  26D9               	addwf	fsr2l,f,c
 11195   001970  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11196   001972  22DA               	addwfc	fsr2h,f,c
 11197   001974  CFDE F04B          	movff	postinc2,___flge@ff1
 11198   001978  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11199   00197C  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11200   001980  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11201   001984  0E00               	movlw	0
 11202   001986  6E4F               	movwf	___flge@ff2^0,c
 11203   001988  0E00               	movlw	0
 11204   00198A  6E50               	movwf	(___flge@ff2+1)^0,c
 11205   00198C  0EBC               	movlw	188
 11206   00198E  6E51               	movwf	(___flge@ff2+2)^0,c
 11207   001990  0E42               	movlw	66
 11208   001992  6E52               	movwf	(___flge@ff2+3)^0,c
 11209   001994  EC8A  F01B         	call	___flge	;wreg free
 11210   001998  B0D8               	btfsc	status,0,c
 11211   00199A  EFD1  F00C         	goto	u3491
 11212   00199E  EFD3  F00C         	goto	u3490
 11213   0019A2                     u3491:
 11214   0019A2  EFE3  F00C         	goto	l3884
 11215   0019A6                     u3490:
 11216   0019A6                     
 11217                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 11218   0019A6  0E11               	movlw	low STR_9
 11219   0019A8  6E59               	movwf	Hue2Colour@colourname^0,c
 11220   0019AA  0E0E               	movlw	high STR_9
 11221   0019AC  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11222   0019AE                     
 11223                           ;colorfunctions.c: 95:         cf->colourindex=6;
 11224   0019AE  EE20 F014          	lfsr	2,20
 11225   0019B2  5057               	movf	Hue2Colour@cf^0,w,c
 11226   0019B4  26D9               	addwf	fsr2l,f,c
 11227   0019B6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11228   0019B8  22DA               	addwfc	fsr2h,f,c
 11229   0019BA  0E06               	movlw	6
 11230   0019BC  6EDE               	movwf	postinc2,c
 11231   0019BE  0E00               	movlw	0
 11232   0019C0  6EDD               	movwf	postdec2,c
 11233                           
 11234                           ;colorfunctions.c: 96:     }
 11235   0019C2  EF31  F00D         	goto	l3892
 11236   0019C6                     l3884:
 11237   0019C6  0E00               	movlw	0
 11238   0019C8  6E4B               	movwf	___flge@ff1^0,c
 11239   0019CA  0E00               	movlw	0
 11240   0019CC  6E4C               	movwf	(___flge@ff1+1)^0,c
 11241   0019CE  0ED0               	movlw	208
 11242   0019D0  6E4D               	movwf	(___flge@ff1+2)^0,c
 11243   0019D2  0E41               	movlw	65
 11244   0019D4  6E4E               	movwf	(___flge@ff1+3)^0,c
 11245   0019D6  EE20 F010          	lfsr	2,16
 11246   0019DA  5057               	movf	Hue2Colour@cf^0,w,c
 11247   0019DC  26D9               	addwf	fsr2l,f,c
 11248   0019DE  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11249   0019E0  22DA               	addwfc	fsr2h,f,c
 11250   0019E2  CFDE F04F          	movff	postinc2,___flge@ff2
 11251   0019E6  CFDE F050          	movff	postinc2,___flge@ff2+1
 11252   0019EA  CFDE F051          	movff	postinc2,___flge@ff2+2
 11253   0019EE  CFDE F052          	movff	postinc2,___flge@ff2+3
 11254   0019F2  EC8A  F01B         	call	___flge	;wreg free
 11255   0019F6  B0D8               	btfsc	status,0,c
 11256   0019F8  EF00  F00D         	goto	u3501
 11257   0019FC  EF02  F00D         	goto	u3500
 11258   001A00                     u3501:
 11259   001A00  EF31  F00D         	goto	l615
 11260   001A04                     u3500:
 11261   001A04  EE20 F010          	lfsr	2,16
 11262   001A08  5057               	movf	Hue2Colour@cf^0,w,c
 11263   001A0A  26D9               	addwf	fsr2l,f,c
 11264   001A0C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11265   001A0E  22DA               	addwfc	fsr2h,f,c
 11266   001A10  CFDE F04B          	movff	postinc2,___flge@ff1
 11267   001A14  CFDE F04C          	movff	postinc2,___flge@ff1+1
 11268   001A18  CFDE F04D          	movff	postinc2,___flge@ff1+2
 11269   001A1C  CFDE F04E          	movff	postinc2,___flge@ff1+3
 11270   001A20  0E00               	movlw	0
 11271   001A22  6E4F               	movwf	___flge@ff2^0,c
 11272   001A24  0E00               	movlw	0
 11273   001A26  6E50               	movwf	(___flge@ff2+1)^0,c
 11274   001A28  0EE8               	movlw	232
 11275   001A2A  6E51               	movwf	(___flge@ff2+2)^0,c
 11276   001A2C  0E41               	movlw	65
 11277   001A2E  6E52               	movwf	(___flge@ff2+3)^0,c
 11278   001A30  EC8A  F01B         	call	___flge	;wreg free
 11279   001A34  B0D8               	btfsc	status,0,c
 11280   001A36  EF1F  F00D         	goto	u3511
 11281   001A3A  EF21  F00D         	goto	u3510
 11282   001A3E                     u3511:
 11283   001A3E  EF31  F00D         	goto	l615
 11284   001A42                     u3510:
 11285   001A42                     
 11286                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11287   001A42  0E26               	movlw	low STR_10
 11288   001A44  6E59               	movwf	Hue2Colour@colourname^0,c
 11289   001A46  0E0E               	movlw	high STR_10
 11290   001A48  6E5A               	movwf	(Hue2Colour@colourname+1)^0,c
 11291   001A4A                     
 11292                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11293   001A4A  EE20 F014          	lfsr	2,20
 11294   001A4E  5057               	movf	Hue2Colour@cf^0,w,c
 11295   001A50  26D9               	addwf	fsr2l,f,c
 11296   001A52  5058               	movf	(Hue2Colour@cf+1)^0,w,c
 11297   001A54  22DA               	addwfc	fsr2h,f,c
 11298   001A56  0E07               	movlw	7
 11299   001A58  6EDE               	movwf	postinc2,c
 11300   001A5A  0E00               	movlw	0
 11301   001A5C  6EDD               	movwf	postdec2,c
 11302   001A5E  EF31  F00D         	goto	l3892
 11303   001A62                     l615:
 11304   001A62                     l3892:
 11305                           
 11306                           ;colorfunctions.c: 102:     return colourname;
 11307   001A62  C059  F057         	movff	Hue2Colour@colourname,?_Hue2Colour
 11308   001A66  C05A  F058         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11309   001A6A  0012               	return		;funcret
 11310   001A6C                     __end_of_Hue2Colour:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function ___flge *****************
 11314 ;; Defined at:
 11315 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  ff1             4   74[COMRAM] PTR unsigned char 
 11318 ;;  ff2             4   78[COMRAM] PTR unsigned char 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;		None               void
 11323 ;; Registers used:
 11324 ;;		wreg, status,2, status,0
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11333 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11334 ;;Total ram usage:       12 bytes
 11335 ;; Hardware stack levels used: 1
 11336 ;; Hardware stack levels required when called: 1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_main
 11341 ;;		_White
 11342 ;;		_RGB2Hue
 11343 ;;		_Hue2Colour
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           	psect	text65
 11348   003714                     __ptext65:
 11349                           	callstack 0
 11350   003714                     ___flge:
 11351                           	callstack 29
 11352   003714  0E00               	movlw	0
 11353   003716  144B               	andwf	___flge@ff1^0,w,c
 11354   003718  6E53               	movwf	??___flge^0,c
 11355   00371A  0E00               	movlw	0
 11356   00371C  144C               	andwf	(___flge@ff1+1)^0,w,c
 11357   00371E  6E54               	movwf	(??___flge+1)^0,c
 11358   003720  0E80               	movlw	128
 11359   003722  144D               	andwf	(___flge@ff1+2)^0,w,c
 11360   003724  6E55               	movwf	(??___flge+2)^0,c
 11361   003726  0E7F               	movlw	127
 11362   003728  144E               	andwf	(___flge@ff1+3)^0,w,c
 11363   00372A  6E56               	movwf	(??___flge+3)^0,c
 11364   00372C  5053               	movf	??___flge^0,w,c
 11365   00372E  1054               	iorwf	(??___flge+1)^0,w,c
 11366   003730  1055               	iorwf	(??___flge+2)^0,w,c
 11367   003732  1056               	iorwf	(??___flge+3)^0,w,c
 11368   003734  A4D8               	btfss	status,2,c
 11369   003736  EF9F  F01B         	goto	u3301
 11370   00373A  EFA1  F01B         	goto	u3300
 11371   00373E                     u3301:
 11372   00373E  EFA9  F01B         	goto	l3786
 11373   003742                     u3300:
 11374   003742  0E00               	movlw	0
 11375   003744  6E4B               	movwf	___flge@ff1^0,c
 11376   003746  0E00               	movlw	0
 11377   003748  6E4C               	movwf	(___flge@ff1+1)^0,c
 11378   00374A  0E00               	movlw	0
 11379   00374C  6E4D               	movwf	(___flge@ff1+2)^0,c
 11380   00374E  0E00               	movlw	0
 11381   003750  6E4E               	movwf	(___flge@ff1+3)^0,c
 11382   003752                     l3786:
 11383   003752  0E00               	movlw	0
 11384   003754  144F               	andwf	___flge@ff2^0,w,c
 11385   003756  6E53               	movwf	??___flge^0,c
 11386   003758  0E00               	movlw	0
 11387   00375A  1450               	andwf	(___flge@ff2+1)^0,w,c
 11388   00375C  6E54               	movwf	(??___flge+1)^0,c
 11389   00375E  0E80               	movlw	128
 11390   003760  1451               	andwf	(___flge@ff2+2)^0,w,c
 11391   003762  6E55               	movwf	(??___flge+2)^0,c
 11392   003764  0E7F               	movlw	127
 11393   003766  1452               	andwf	(___flge@ff2+3)^0,w,c
 11394   003768  6E56               	movwf	(??___flge+3)^0,c
 11395   00376A  5053               	movf	??___flge^0,w,c
 11396   00376C  1054               	iorwf	(??___flge+1)^0,w,c
 11397   00376E  1055               	iorwf	(??___flge+2)^0,w,c
 11398   003770  1056               	iorwf	(??___flge+3)^0,w,c
 11399   003772  A4D8               	btfss	status,2,c
 11400   003774  EFBE  F01B         	goto	u3311
 11401   003778  EFC0  F01B         	goto	u3310
 11402   00377C                     u3311:
 11403   00377C  EFC8  F01B         	goto	l3790
 11404   003780                     u3310:
 11405   003780  0E00               	movlw	0
 11406   003782  6E4F               	movwf	___flge@ff2^0,c
 11407   003784  0E00               	movlw	0
 11408   003786  6E50               	movwf	(___flge@ff2+1)^0,c
 11409   003788  0E00               	movlw	0
 11410   00378A  6E51               	movwf	(___flge@ff2+2)^0,c
 11411   00378C  0E00               	movlw	0
 11412   00378E  6E52               	movwf	(___flge@ff2+3)^0,c
 11413   003790                     l3790:
 11414   003790  AE4E               	btfss	(___flge@ff1+3)^0,7,c
 11415   003792  EFCD  F01B         	goto	u3321
 11416   003796  EFCF  F01B         	goto	u3320
 11417   00379A                     u3321:
 11418   00379A  EFD8  F01B         	goto	l3794
 11419   00379E                     u3320:
 11420   00379E  6C4B               	negf	___flge@ff1^0,c
 11421   0037A0  1E4C               	comf	(___flge@ff1+1)^0,f,c
 11422   0037A2  B0D8               	btfsc	status,0,c
 11423   0037A4  2A4C               	incf	(___flge@ff1+1)^0,f,c
 11424   0037A6  1E4D               	comf	(___flge@ff1+2)^0,f,c
 11425   0037A8  B0D8               	btfsc	status,0,c
 11426   0037AA  2A4D               	incf	(___flge@ff1+2)^0,f,c
 11427   0037AC  0E80               	movlw	128
 11428   0037AE  564E               	subfwb	(___flge@ff1+3)^0,f,c
 11429   0037B0                     l3794:
 11430   0037B0  AE52               	btfss	(___flge@ff2+3)^0,7,c
 11431   0037B2  EFDD  F01B         	goto	u3331
 11432   0037B6  EFDF  F01B         	goto	u3330
 11433   0037BA                     u3331:
 11434   0037BA  EFE8  F01B         	goto	l952
 11435   0037BE                     u3330:
 11436   0037BE  6C4F               	negf	___flge@ff2^0,c
 11437   0037C0  1E50               	comf	(___flge@ff2+1)^0,f,c
 11438   0037C2  B0D8               	btfsc	status,0,c
 11439   0037C4  2A50               	incf	(___flge@ff2+1)^0,f,c
 11440   0037C6  1E51               	comf	(___flge@ff2+2)^0,f,c
 11441   0037C8  B0D8               	btfsc	status,0,c
 11442   0037CA  2A51               	incf	(___flge@ff2+2)^0,f,c
 11443   0037CC  0E80               	movlw	128
 11444   0037CE  5652               	subfwb	(___flge@ff2+3)^0,f,c
 11445   0037D0                     l952:
 11446   0037D0  0E00               	movlw	0
 11447   0037D2  1A4B               	xorwf	___flge@ff1^0,f,c
 11448   0037D4  0E00               	movlw	0
 11449   0037D6  1A4C               	xorwf	(___flge@ff1+1)^0,f,c
 11450   0037D8  0E00               	movlw	0
 11451   0037DA  1A4D               	xorwf	(___flge@ff1+2)^0,f,c
 11452   0037DC  0E80               	movlw	128
 11453   0037DE  1A4E               	xorwf	(___flge@ff1+3)^0,f,c
 11454   0037E0  0E00               	movlw	0
 11455   0037E2  1A4F               	xorwf	___flge@ff2^0,f,c
 11456   0037E4  0E00               	movlw	0
 11457   0037E6  1A50               	xorwf	(___flge@ff2+1)^0,f,c
 11458   0037E8  0E00               	movlw	0
 11459   0037EA  1A51               	xorwf	(___flge@ff2+2)^0,f,c
 11460   0037EC  0E80               	movlw	128
 11461   0037EE  1A52               	xorwf	(___flge@ff2+3)^0,f,c
 11462   0037F0  504F               	movf	___flge@ff2^0,w,c
 11463   0037F2  5C4B               	subwf	___flge@ff1^0,w,c
 11464   0037F4  5050               	movf	(___flge@ff2+1)^0,w,c
 11465   0037F6  584C               	subwfb	(___flge@ff1+1)^0,w,c
 11466   0037F8  5051               	movf	(___flge@ff2+2)^0,w,c
 11467   0037FA  584D               	subwfb	(___flge@ff1+2)^0,w,c
 11468   0037FC  5052               	movf	(___flge@ff2+3)^0,w,c
 11469   0037FE  584E               	subwfb	(___flge@ff1+3)^0,w,c
 11470   003800  B0D8               	btfsc	status,0,c
 11471   003802  EF05  F01C         	goto	u3341
 11472   003806  EF07  F01C         	goto	u3340
 11473   00380A                     u3341:
 11474   00380A  EF0A  F01C         	goto	l3800
 11475   00380E                     u3340:
 11476   00380E  90D8               	bcf	status,0,c
 11477   003810  EF0B  F01C         	goto	l957
 11478   003814                     l3800:
 11479   003814  80D8               	bsf	status,0,c
 11480   003816                     l957:
 11481   003816  0012               	return		;funcret
 11482   003818                     __end_of___flge:
 11483                           	callstack 0
 11484                           
 11485 ;; *************** function _ClickLEDOn *****************
 11486 ;; Defined at:
 11487 ;;		line 93 in file "colorclick.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  power           1    wreg     unsigned char 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  power           1    0[COMRAM] unsigned char 
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, status,2
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11505 ;;Total ram usage:        1 bytes
 11506 ;; Hardware stack levels used: 1
 11507 ;; Hardware stack levels required when called: 1
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_main
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text66
 11516   0048CA                     __ptext66:
 11517                           	callstack 0
 11518   0048CA                     _ClickLEDOn:
 11519                           	callstack 29
 11520                           
 11521                           ;incstack = 0
 11522                           ;ClickLEDOn@power stored from wreg
 11523   0048CA  6E01               	movwf	ClickLEDOn@power^0,c
 11524   0048CC                     
 11525                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11526   0048CC  5001               	movf	ClickLEDOn@power^0,w,c
 11527   0048CE  B4D8               	btfsc	status,2,c
 11528   0048D0  EF6C  F024         	goto	u4001
 11529   0048D4  EF6E  F024         	goto	u4000
 11530   0048D8                     u4001:
 11531   0048D8  EF73  F024         	goto	l4314
 11532   0048DC                     u4000:
 11533   0048DC                     
 11534                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11535   0048DC  827F               	bsf	127,1,c	;volatile
 11536                           
 11537                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11538   0048DE  8879               	bsf	121,4,c	;volatile
 11539                           
 11540                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11541   0048E0  8E7E               	bsf	126,7,c	;volatile
 11542                           
 11543                           ;colorclick.c: 99:     }
 11544   0048E2  EF7E  F024         	goto	l460
 11545   0048E6                     l4314:
 11546   0048E6  5001               	movf	ClickLEDOn@power^0,w,c
 11547   0048E8  A4D8               	btfss	status,2,c
 11548   0048EA  EF79  F024         	goto	u4011
 11549   0048EE  EF7B  F024         	goto	u4010
 11550   0048F2                     u4011:
 11551   0048F2  EF7E  F024         	goto	l460
 11552   0048F6                     u4010:
 11553   0048F6                     
 11554                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11555   0048F6  927F               	bcf	127,1,c	;volatile
 11556                           
 11557                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11558   0048F8  9879               	bcf	121,4,c	;volatile
 11559                           
 11560                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11561   0048FA  9E7E               	bcf	126,7,c	;volatile
 11562   0048FC                     l460:
 11563   0048FC  0012               	return		;funcret
 11564   0048FE                     __end_of_ClickLEDOn:
 11565                           	callstack 0
 11566                           
 11567 ;; *************** function _HighISR *****************
 11568 ;; Defined at:
 11569 ;;		line 25 in file "interrupts.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;		None
 11572 ;; Auto vars:     Size  Location     Type
 11573 ;;		None
 11574 ;; Return value:  Size  Location     Type
 11575 ;;                  1    wreg      void 
 11576 ;; Registers used:
 11577 ;;		wreg, status,2
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11587 ;;Total ram usage:        0 bytes
 11588 ;; Hardware stack levels used: 1
 11589 ;; This function calls:
 11590 ;;		Nothing
 11591 ;; This function is called by:
 11592 ;;		Interrupt level 2
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           	psect	intcode
 11597   000008                     __pintcode:
 11598                           	callstack 0
 11599   000008                     _HighISR:
 11600                           	callstack 22
 11601                           
 11602                           ;incstack = 0
 11603   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11604   00000A                     
 11605                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11606   00000A  010E               	movlb	14	; () banked
 11607   00000C  AB33               	btfss	51,5,b	;volatile
 11608   00000E  EF0B  F000         	goto	i2u427_41
 11609   000012  EF0D  F000         	goto	i2u427_40
 11610   000016                     i2u427_41:
 11611   000016  EF14  F000         	goto	i2l684
 11612   00001A                     i2u427_40:
 11613   00001A                     
 11614                           ; BSR set to: 14
 11615                           ;interrupts.c: 29:     maxTime = 1;
 11616   00001A  0E00               	movlw	0
 11617   00001C  0100               	movlb	0	; () banked
 11618   00001E  6FEB               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11619   000020  0E01               	movlw	1
 11620   000022  6FEA               	movwf	_maxTime& (0+255),b	;volatile
 11621   000024                     
 11622                           ; BSR set to: 0
 11623                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11624   000024  010E               	movlb	14	; () banked
 11625   000026  9B33               	bcf	51,5,b	;volatile
 11626   000028                     i2l684:
 11627                           
 11628                           ; BSR set to: 14
 11629   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11630   00002A  0011               	retfie		f
 11631   00002C                     __end_of_HighISR:
 11632                           	callstack 0
 11633                           
 11634                           	psect	rparam
 11635   000000                     
 11636                           	psect	temp
 11637   00005F                     btemp:
 11638                           	callstack 0
 11639   00005F                     	ds	1
 11640   000000                     int$flags	set	btemp
 11641   000000                     wtemp8	set	btemp+1
 11642   000000                     ttemp5	set	btemp+1
 11643   000000                     ttemp6	set	btemp+4
 11644   000000                     ttemp7	set	btemp+8
 11645                           
 11646                           	psect	idloc
 11647                           
 11648                           ;Config register IDLOC0 @ 0x200000
 11649                           ;	unspecified, using default values
 11650   200000                     	org	2097152
 11651   200000  0FFF               	dw	4095
 11652                           
 11653                           ;Config register IDLOC1 @ 0x200002
 11654                           ;	unspecified, using default values
 11655   200002                     	org	2097154
 11656   200002  0FFF               	dw	4095
 11657                           
 11658                           ;Config register IDLOC2 @ 0x200004
 11659                           ;	unspecified, using default values
 11660   200004                     	org	2097156
 11661   200004  0FFF               	dw	4095
 11662                           
 11663                           ;Config register IDLOC3 @ 0x200006
 11664                           ;	unspecified, using default values
 11665   200006                     	org	2097158
 11666   200006  0FFF               	dw	4095
 11667                           
 11668                           ;Config register IDLOC4 @ 0x200008
 11669                           ;	unspecified, using default values
 11670   200008                     	org	2097160
 11671   200008  0FFF               	dw	4095
 11672                           
 11673                           ;Config register IDLOC5 @ 0x20000A
 11674                           ;	unspecified, using default values
 11675   20000A                     	org	2097162
 11676   20000A  0FFF               	dw	4095
 11677                           
 11678                           ;Config register IDLOC6 @ 0x20000C
 11679                           ;	unspecified, using default values
 11680   20000C                     	org	2097164
 11681   20000C  0FFF               	dw	4095
 11682                           
 11683                           ;Config register IDLOC7 @ 0x20000E
 11684                           ;	unspecified, using default values
 11685   20000E                     	org	2097166
 11686   20000E  0FFF               	dw	4095
 11687                           
 11688                           	psect	config
 11689                           
 11690                           ;Config register CONFIG1L @ 0x300000
 11691                           ;	External Oscillator mode Selection bits
 11692                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11693                           ;	Power-up default value for COSC bits
 11694                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11695   300000                     	org	3145728
 11696   300000  AA                 	db	170
 11697                           
 11698                           ;Config register CONFIG1H @ 0x300001
 11699                           ;	unspecified, using default values
 11700                           ;	Clock Out Enable bit
 11701                           ;	CLKOUTEN = 0x1, unprogrammed default
 11702                           ;	Clock Switch Enable bit
 11703                           ;	CSWEN = 0x1, unprogrammed default
 11704                           ;	Fail-Safe Clock Monitor Enable bit
 11705                           ;	FCMEN = 0x1, unprogrammed default
 11706   300001                     	org	3145729
 11707   300001  FF                 	db	255
 11708                           
 11709                           ;Config register CONFIG2L @ 0x300002
 11710                           ;	unspecified, using default values
 11711                           ;	Master Clear Enable bit
 11712                           ;	MCLRE = 0x1, unprogrammed default
 11713                           ;	Power-up Timer Enable bit
 11714                           ;	PWRTE = 0x1, unprogrammed default
 11715                           ;	Low-power BOR enable bit
 11716                           ;	LPBOREN = 0x1, unprogrammed default
 11717                           ;	Brown-out Reset Enable bits
 11718                           ;	BOREN = 0x3, unprogrammed default
 11719   300002                     	org	3145730
 11720   300002  FF                 	db	255
 11721                           
 11722                           ;Config register CONFIG2H @ 0x300003
 11723                           ;	unspecified, using default values
 11724                           ;	Brown Out Reset Voltage selection bits
 11725                           ;	BORV = 0x3, unprogrammed default
 11726                           ;	ZCD Disable bit
 11727                           ;	ZCD = 0x1, unprogrammed default
 11728                           ;	PPSLOCK bit One-Way Set Enable bit
 11729                           ;	PPS1WAY = 0x1, unprogrammed default
 11730                           ;	Stack Full/Underflow Reset Enable bit
 11731                           ;	STVREN = 0x1, unprogrammed default
 11732                           ;	Debugger Enable bit
 11733                           ;	DEBUG = 0x1, unprogrammed default
 11734                           ;	Extended Instruction Set Enable bit
 11735                           ;	XINST = 0x1, unprogrammed default
 11736   300003                     	org	3145731
 11737   300003  FF                 	db	255
 11738                           
 11739                           ;Config register CONFIG3L @ 0x300004
 11740                           ;	WDT Period Select bits
 11741                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11742                           ;	WDT operating mode
 11743                           ;	WDTE = OFF, WDT Disabled
 11744   300004                     	org	3145732
 11745   300004  9F                 	db	159
 11746                           
 11747                           ;Config register CONFIG3H @ 0x300005
 11748                           ;	unspecified, using default values
 11749                           ;	WDT Window Select bits
 11750                           ;	WDTCWS = 0x7, unprogrammed default
 11751                           ;	WDT input clock selector
 11752                           ;	WDTCCS = 0x7, unprogrammed default
 11753   300005                     	org	3145733
 11754   300005  FF                 	db	255
 11755                           
 11756                           ;Config register CONFIG4L @ 0x300006
 11757                           ;	unspecified, using default values
 11758                           ;	Write Protection Block 0
 11759                           ;	WRT0 = 0x1, unprogrammed default
 11760                           ;	Write Protection Block 1
 11761                           ;	WRT1 = 0x1, unprogrammed default
 11762                           ;	Write Protection Block 2
 11763                           ;	WRT2 = 0x1, unprogrammed default
 11764                           ;	Write Protection Block 3
 11765                           ;	WRT3 = 0x1, unprogrammed default
 11766                           ;	Write Protection Block 3
 11767                           ;	WRT4 = 0x1, unprogrammed default
 11768                           ;	Write Protection Block 3
 11769                           ;	WRT5 = 0x1, unprogrammed default
 11770                           ;	Write Protection Block 3
 11771                           ;	WRT6 = 0x1, unprogrammed default
 11772                           ;	Write Protection Block 3
 11773                           ;	WRT7 = 0x1, unprogrammed default
 11774   300006                     	org	3145734
 11775   300006  FF                 	db	255
 11776                           
 11777                           ;Config register CONFIG4H @ 0x300007
 11778                           ;	unspecified, using default values
 11779                           ;	Configuration Register Write Protection bit
 11780                           ;	WRTC = 0x1, unprogrammed default
 11781                           ;	Boot Block Write Protection bit
 11782                           ;	WRTB = 0x1, unprogrammed default
 11783                           ;	Data EEPROM Write Protection bit
 11784                           ;	WRTD = 0x1, unprogrammed default
 11785                           ;	Scanner Enable bit
 11786                           ;	SCANE = 0x1, unprogrammed default
 11787                           ;	Low Voltage Programming Enable bit
 11788                           ;	LVP = 0x1, unprogrammed default
 11789   300007                     	org	3145735
 11790   300007  FF                 	db	255
 11791                           
 11792                           ;Config register CONFIG5L @ 0x300008
 11793                           ;	unspecified, using default values
 11794                           ;	UserNVM Program Memory Code Protection bit
 11795                           ;	CP = 0x1, unprogrammed default
 11796                           ;	DataNVM Memory Code Protection bit
 11797                           ;	CPD = 0x1, unprogrammed default
 11798   300008                     	org	3145736
 11799   300008  FF                 	db	255
 11800                           
 11801                           ;Config register CONFIG5H @ 0x300009
 11802                           ;	unspecified, using default values
 11803   300009                     	org	3145737
 11804   300009  FF                 	db	255
 11805                           
 11806                           ;Config register CONFIG6L @ 0x30000A
 11807                           ;	unspecified, using default values
 11808                           ;	Table Read Protection Block 0
 11809                           ;	EBTR0 = 0x1, unprogrammed default
 11810                           ;	Table Read Protection Block 1
 11811                           ;	EBTR1 = 0x1, unprogrammed default
 11812                           ;	Table Read Protection Block 2
 11813                           ;	EBTR2 = 0x1, unprogrammed default
 11814                           ;	Table Read Protection Block 3
 11815                           ;	EBTR3 = 0x1, unprogrammed default
 11816                           ;	Table Read Protection Block 4
 11817                           ;	EBTR4 = 0x1, unprogrammed default
 11818                           ;	Table Read Protection Block 5
 11819                           ;	EBTR5 = 0x1, unprogrammed default
 11820                           ;	Table Read Protection Block 6
 11821                           ;	EBTR6 = 0x1, unprogrammed default
 11822                           ;	Table Read Protection Block 7
 11823                           ;	EBTR7 = 0x1, unprogrammed default
 11824   30000A                     	org	3145738
 11825   30000A  FF                 	db	255
 11826                           
 11827                           ;Config register CONFIG6H @ 0x30000B
 11828                           ;	unspecified, using default values
 11829                           ;	Boot Block Table Read Protection bit
 11830                           ;	EBTRB = 0x1, unprogrammed default
 11831   30000B                     	org	3145739
 11832   30000B  FF                 	db	255
 11833                           tosu	equ	0xFFF
 11834                           tosh	equ	0xFFE
 11835                           tosl	equ	0xFFD
 11836                           stkptr	equ	0xFFC
 11837                           pclatu	equ	0xFFB
 11838                           pclath	equ	0xFFA
 11839                           pcl	equ	0xFF9
 11840                           tblptru	equ	0xFF8
 11841                           tblptrh	equ	0xFF7
 11842                           tblptrl	equ	0xFF6
 11843                           tablat	equ	0xFF5
 11844                           prodh	equ	0xFF4
 11845                           prodl	equ	0xFF3
 11846                           indf0	equ	0xFEF
 11847                           postinc0	equ	0xFEE
 11848                           postdec0	equ	0xFED
 11849                           preinc0	equ	0xFEC
 11850                           plusw0	equ	0xFEB
 11851                           fsr0h	equ	0xFEA
 11852                           fsr0l	equ	0xFE9
 11853                           wreg	equ	0xFE8
 11854                           indf1	equ	0xFE7
 11855                           postinc1	equ	0xFE6
 11856                           postdec1	equ	0xFE5
 11857                           preinc1	equ	0xFE4
 11858                           plusw1	equ	0xFE3
 11859                           fsr1h	equ	0xFE2
 11860                           fsr1l	equ	0xFE1
 11861                           bsr	equ	0xFE0
 11862                           indf2	equ	0xFDF
 11863                           postinc2	equ	0xFDE
 11864                           postdec2	equ	0xFDD
 11865                           preinc2	equ	0xFDC
 11866                           plusw2	equ	0xFDB
 11867                           fsr2h	equ	0xFDA
 11868                           fsr2l	equ	0xFD9
 11869                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        18
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    130     160
    BANK1           256      0     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2805$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), 
		 -> STR_3(CODE[4]), STR_2(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_10(CODE[9]), STR_9(CODE[11]), 
		 -> STR_8(CODE[7]), STR_7(CODE[5]), STR_6(CODE[7]), STR_5(CODE[10]), 
		 -> STR_4(CODE[6]), STR_3(CODE[4]), STR_2(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2752$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2752$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    memoryUpdateTime@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    White@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[9]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[5]), 
		 -> STR_6(CODE[7]), STR_5(CODE[10]), STR_4(CODE[6]), STR_3(CODE[4]), 
		 -> STR_2(CODE[1]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    S243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllll[1]), CCPR2H(ABS[1]), 

    S243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_Color2String
    _main->_Colour2Action
    _memoryUpdateTime->___fladd
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _Colour2Action->_White
    _White->___flge
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    _fullSpeedAhead->_setMotorPWM
    ___fladd->_getTimerValue
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_Hue2Colour
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge
    ___flge->___fladd

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  464399
                                             27 BANK0    103   103      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                    12     8      4    7190
                                             74 COMRAM    12     8      4
                            ___fladd
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2258
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   17613
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     863
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3477
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  414229
                                             90 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               20    10     10  225451
                                             86 COMRAM     4     4      0
                                              0 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fladd
                             ___flge
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4216
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1474
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2718
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    2707
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2740
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   30179
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   30179
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27364
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27364
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    8932
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   18888
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10172
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9540
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8280
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4073
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8461
                                             90 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3853
                                             86 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3142
                                             74 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___xxtofl (ARG)
           _getTimerValue (ARG)
             ___flmul
             ___xxtofl
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedReverse
       _reverseHalfSquare
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedReverse
         _reverseHalfSquare
       ___fladd
       ___flge
       _fullSpeedAhead
         _setMotorPWM
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BF       7       74.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhlhlll     52      0       0      42        0.0%
BITBIGSFRhlllh      37      0       0      44        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRllhh       20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllhh     17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllhl        C      0       0      48        0.0%
BITBIGSFRlllhll      B      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhllhl      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhllh        2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRhlhllh      1      0       0      41        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlhhh       1      0       0      40        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BD      62        0.0%
DATA                 0      0     1BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 14:58:45 2023

                    _color_read_Red 4560                        ___fldiv@aexp 006C  
                      ___fldiv@bexp 006B                        ___fldiv@sign 0064  
                   _color_read_Blue 4650                                  l30 4958  
                                l33 497E                                  l42 4A6E  
                                l27 4956                                  l36 4A78  
                                l45 4A4E                                  l39 4A64  
                                l48 4812                     ??_getTimerValue 0037  
               ___wmul@multiplicand 0003                      ?_rotate180left 0020  
                  _color_read_Clear 4600                    _color_read_Green 45B0  
                 ??_Interrupts_init 0001                         Green_L90@mL 0021  
                       Green_L90@mR 0023                                 l300 450C  
                               l133 2BD0                                 l310 3BB8  
                               l320 3DA6                                 l305 3B10  
                               l402 4890                                 l243 3270  
                               l315 3D02                                 l147 2D76  
                               l252 3C5C                                 l236 3FF8  
                               l253 3C5E                                 l325 1F9A  
                               l510 492C                                 l263 3ED2  
                               l408 48C8                                 l352 2394  
                               l336 21A2                                 l273 4292  
                               l513 3E3C                                 l258 3F68  
                               l282 455E                                 l290 430E  
                               l442 4A0A                                 l451 469E  
                               l460 48FC                                 l276 410C  
                               l532 4A82                                 l268 4212  
                               l604 157C                                 l621 1A6A  
                               l285 4192                                 l445 45AE  
                               l454 464E                                 l615 1A62  
                               l279 4082                                 l295 438A  
                               l535 4460                                 l439 4852  
                               l448 45FE                                 l633 2F50  
                               l529 49C8                                 l475 4A42  
                               l387 49EA                                 l396 4A0E  
                               l590 360C                                 l399 4A22  
                               l639 2F50                                 l596 10B0  
                               l678 4A5A                                 l687 49A4  
                               l952 37D0                                 l946 3A68  
                               l957 3816                                 l984 3712  
            memoryUpdateMovement@cf 0001                                 wreg 000FE8  
             ?_memoryUpdateMovement 0001                        ___flmul@aexp 002B  
                      ___flmul@bexp 002C                        ___flmul@sign 0026  
                      ___flmul@temp 0031                        ___flmul@prod 002D  
                   __end_of_RGB2Hue 157E                        ___fltol@exp1 000A  
                              l1301 245A                                l1310 26C8  
                              l1215 1C5A                                l1311 26B6  
                              l1400 344C                                l3000 4980  
                              l1232 1D74                                l1224 1F2A  
                              l1216 1C48                                l1241 1E44  
                              l1217 1C0E                                l1305 27BE  
                              l1402 3454                                l3010 43A6  
                              l3002 499C                                l1242 1E32  
                              l1411 3506                                l3020 43E0  
                              l3012 43AE                                l1308 2650  
                              l3102 46A0                                l1422 33CA  
                              l3022 43E8                                l3014 43B6  
                              l3006 438C                                l3030 3122  
                              l1318 2780                                l1342 2FA8  
                              l1271 29BA                                l4000 48A4  
                              l1440 39BE                                l3104 46AC  
                              l3200 34E8                                l3024 43EA  
                              l3016 43C4                                l3008 4394  
                              l3040 31EC                                l3032 3176  
                              l3112 3E3E                                l1280 2A00  
                              l1185 43FE                                l1345 3104  
                              l1257 47D0                                l4002 48A8  
                              l3106 46B0                                l3210 385C  
                              l3202 3818                                l3026 43F0  
                              l3018 43CA                                l1178 43F6  
                              l3042 3230                                l3034 318A  
                              l3050 3BE2                                l3130 3EAA  
                              l3114 3E5E                                l1282 2A78  
                              l1274 297E                                l4010 45A6  
                              l1451 4A84                                l1283 2A66  
                              l4004 48B0                                l3108 46E2  
                              l3212 3878                                l3204 3842  
                              l1428 478A                                l3036 318E  
                              l3028 3106                                l3052 3BFA  
                              l3060 3C2C                                l3044 3BBA  
                              l3132 3EB8                                l3124 3E7E  
                              l3116 3E6A                                l3300 24C6  
                              l1356 309C                                l4100 294A  
                              l4020 4650                                l1461 38F4  
                              l1365 473C                                l1349 3040  
                              l1269 2B5A                                l3214 3894  
                              l3038 31D0                                l3150 4268  
                              l3062 3C44                                l3054 3C04  
                              l3046 3BC0                                l3070 3F0C  
                              l3134 3EBC                                l3126 3E92  
                              l3118 3E76                                l3230 4010  
                              l3310 2510                                l3302 24DE  
                              l4110 29A6                                l4102 295A  
                              l3222 4958                                l4006 49EE  
                              l4022 4696                                l4014 45B0  
                              l3216 38A6                                l3208 384E  
                              l3152 4278                                l3144 423C  
                              l3136 4214                                l3056 3C10  
                              l3048 3BD8                                l3080 3F34  
                              l3064 3ED4                                l3160 409A  
                              l3240 450E                                l3128 3E9E  
                              l3232 4028                                l3320 2566  
                              l3312 2520                                l3304 24EA  
                              l3400 3028                                l4120 29E6  
                              l4112 29A8                                l4104 296E  
                              l4040 27EE                                l4032 27C0  
                              l4200 3662                                l3224 4968  
                              l4016 45F6                                l4008 4560  
                              l1457 46EE                                l3090 3908  
                              l3170 33CC                                l3218 38D0  
                              l3154 427C                                l3146 4250  
                              l3138 4234                                l3058 3C1C  
                              l3250 417A                                l3242 410E  
                              l3082 3F40                                l3066 3EF4  
                              l3162 40B2                                l3234 4054  
                              l3226 3FFA                                l3330 260A  
                              l3322 2582                                l3314 252C  
                              l3306 24F6                                l3410 308C  
                              l3402 302A                                l4130 2A22  
                              l4122 29F0                                l4114 29B8  
                              l4106 297C                                l4050 2828  
                              l4042 27FE                                l4034 27CE  
                              l4202 3664                                l4026 4600  
                              l3092 391A                                l3180 3414  
                              l3172 33DE                                l3148 425C  
                              l3244 4122                                l3084 3F4E  
                              l3076 3F14                                l3068 3F00  
                              l3164 40DE                                l3156 4084  
                              l3236 4068                                l3228 3FFC  
                              l3340 2660                                l3332 2618  
                              l3324 258E                                l3316 253C  
                              l3308 2504                                l3260 23C2  
                              l3252 2396                                l3420 30E4  
                              l3412 30AA                                l3404 3036  
                              l4140 2A94                                l4132 2A30  
                              l4124 29FE                                l4116 29CA  
                              l4108 2988                                l4060 2854  
                              l4052 282E                                l4044 280E  
                              l4036 27DC                                l4204 3674  
                              l4028 4646                                l4300 3FDE  
                              l4310 48CC                                l3094 3924  
                              l3190 3480                                l3182 341C  
                              l3174 33E6                                l3430 3296  
                              l3246 413A                                l3086 3F52  
                              l3078 3F28                                l3166 40F2  
                              l3158 4086                                l3238 4080  
                              l3510 41F8                                l3502 41BC  
                              l3342 266E                                l3334 2636  
                              l3326 25AA                                l3318 2556  
                              l3270 23FE                                l3262 23D2  
                              l3254 23A2                                l3422 30F2  
                              l3414 30AC                                l3406 3072  
                              l4150 2B00                                l4142 2AA2  
                              l4134 2A5E                                l4118 29E0  
                              l4126 2A10                                l4070 288E  
                              l4062 2864                                l4054 2834  
                              l4046 2810                                l4038 27DE  
                              l4230 36F2                                l4214 369E  
                              l4206 3678                                l4302 3FE0  
                              l4312 48DC                                l3096 3942  
                              l3088 38F6                                l3192 349E  
                              l3184 342A                                l3176 33F8  
                              l3440 3310                                l3432 32A4  
                              l3248 4166                                l3168 410A  
                              l3520 4310                                l3600 1AD8  
                              l3512 41FC                                l3504 41D0  
                              l3352 26D8                                l3360 2720  
                              l3344 2672                                l3336 2640  
                              l3328 25D4                                l3280 2434  
                              l3272 2404                                l3264 23E2  
                              l3256 23B0                                l3424 30F4  
                              l3416 30B0                                l3408 307E  
                              l4400 2E3E                                l4160 2B4E  
                              l4152 2B1A                                l4144 2ACC  
                              l4128 2A1E                                l4072 28A4  
                              l4064 2874                                l4056 2842  
                              l4048 2818                                l4232 3702  
                              l4224 36C6                                l4216 36A8  
                              l4208 3686                                l4320 35A0  
                              l4304 3FEA                                l4240 49D8  
                              l4314 48E6                                l3098 3978  
                              l3194 34AA                                l3186 3468  
                              l3178 3400                                l3442 3334  
                              l3434 32B2                                l4330 4868  
                              l3530 44F8                                l3522 4322  
                              l3514 4294                                l3610 1B02  
                              l3602 1AEA                                l3506 41DC  
                              l3370 2794                                l3362 273A  
                              l3354 26E4                                l3346 2680  
                              l3338 264E                                l3282 2444  
                              l3274 2412                                l3266 23E8  
                              l3258 23B2                                l3418 30D4  
                              l4410 2EC6                                l4402 2E56  
                              l4162 2B50                                l4154 2B36  
                              l4138 2A88                                l4146 2AD0  
                              l4090 28F8                                l4074 28B4  
                              l4082 28D4                                l4066 2876  
                              l4058 2844                                l4170 478C  
                              l4226 36D2                                l4218 36B2  
                              l4250 4814                                l4322 35B8  
                              l4306 3FEC                                l4242 49DA  
                              l4316 48F6                                l3196 34E0  
                              l3188 347C                                l3444 3340  
                              l3452 3390                                l3436 32B6  
                              l3428 3272                                l4332 4884  
                              l3524 4362                                l3516 42A6  
                              l3540 3AD0                                l3532 3A6A  
                              l3700 1CD8                                l3612 1B12  
                              l3620 1B3C                                l3604 1AEC  
                              l3508 41E8                                l3372 27A2  
                              l3364 274E                                l3356 26F2  
                              l3348 26AE                                l3292 248E  
                              l3284 244A                                l3276 2414  
                              l3268 23F8                                l4412 2EE6  
                              l4404 2E76                                l4156 2B3A  
                              l4148 2AEA                                l4092 2912  
                              l4084 28E4                                l4076 28BC  
                              l4068 287E                                l4180 39FE  
                              l4172 479C                                l4228 36E2  
                              l4340 0E52                                l4260 4846  
                              l4252 4818                                l4324 35D4  
                              l4308 3FF6                                l4244 49E4  
                              l4236 49CA                                l4500 2D06  
                              l4420 2B60                                l3198 34E4  
                              l3446 3348                                l3438 32DA  
                              l3526 44BA                                l3550 3B64  
                              l3518 42E6                                l3534 3A7C  
                              l3542 3AE8                                l3710 1D44  
                              l3702 1CE2                                l3630 1B74  
                              l3622 1B4C                                l3614 1B22  
                              l3606 1AF2                                l3374 27A4  
                              l3366 2768                                l3358 271C  
                              l3294 249A                                l3286 246A  
                              l3278 2424                                l3390 2FCE  
                              l3382 2F54                                l4414 2EFE  
                              l4406 2E8E                                l4158 2B48  
                              l4094 2922                                l4086 28E4  
                              l4078 28C0                                l4182 3A2C  
                              l4350 0F54                                l4342 0E9A  
                              l3462 4A70                                l3470 4A66  
                              l4270 4850                                l4262 4848  
                              l4254 4822                                l4326 35F0  
                              l4318 3508                                l4246 49E6  
                              l4238 49CE                                l4334 3DA8  
                              l4510 2D58                                l4502 2D22  
                              l4430 2B74                                l4422 2B64  
                              l3800 3814                                l3448 3358  
                              l3456 33A2                                l4328 4854  
                              l3528 44CC                                l3560 3CC6  
                              l3552 3B78                                l3544 3B12  
                              l3536 3AA4                                l3712 1D54  
                              l3704 1CE8                                l3640 1B88  
                              l3632 1B78                                l3624 1B5E  
                              l3616 1B32                                l3608 1B00  
                              l3368 2784                                l3376 27AA  
                              l3296 24A4                                l3288 247A  
                              l3384 2F64                                l4416 2F1E  
                              l4408 2EAE                                l4272 4A36  
                              l4096 2932                                l4184 3A3C  
                              l4176 39C0                                l4192 360E  
                              l4360 1086                                l4352 0F9C  
                              l4344 0EE2                                l4280 49B8  
                              l3464 4A74                                l3472 4A6A  
                              l4264 484A                                l4256 4832  
                              l3480 47D8                                l4248 49E8  
                              l4336 3DE0                                l4512 2D5C  
                              l4504 2D2E                                l4440 2B8E  
                              l4432 2B74                                l4424 2B68  
                              l3810 4782                                l3562 3D04  
                              l3546 3B24                                l3554 3B90  
                              l3538 3ABC                                l3730 1DD6  
                              l3722 1DAE                                l3706 1D0E  
                              l3714 1D64                                l3650 1B9C  
                              l3642 1B8C                                l3634 1B7C  
                              l3626 1B6C                                l3618 1B34  
                              l3378 27AE                                l3298 24BA  
                              l3394 2FE2                                l3386 2F72  
                              l3570 4406                                l4274 4A50  
                              l4098 2942                                l4186 3A60  
                              l4178 39EE                                l4194 3624  
                              l4370 127A                                l4362 10F8  
                              l4354 0FC4                                l4346 0F04  
                              l4282 49BA                                l3474 4A46  
                              l4266 484C                                l4258 483C  
                              l3482 47E0                                l3466 4A5C  
                              l4290 3FA0                                l4338 3E14  
                              l4514 2D62                                l4450 2BAE  
                              l4442 2B96                                l4434 2B80  
                              l4426 2B6C                                l4418 2B5C  
                              l3804 473E                                l3564 3D16  
                              l3556 3C60                                l3548 3B4C  
                              l3492 4A7A                                l3732 1DDE  
                              l3724 1DB8                                l3716 1D8A  
                              l3708 1D42                                l3740 1E02  
                              l3660 1BB0                                l3652 1BA0  
                              l3644 1B90                                l3636 1B80  
                              l3628 1B70                                l3580 1A6C  
                              l3396 2FEA                                l3388 2FB8  
                              l3572 4414                                l3900 1F5A  
                              l4188 3A66                                l4372 12C6  
                              l4380 1512                                l4364 1140  
                              l4356 100C                                l4348 0F0E  
                              l4284 49C6                                l4276 49A6  
                              l3820 4940                                l3476 4A4A  
                              l4268 484E                                l3484 47E8  
                              l3468 4A60                                l4292 3FA4  
                              l4508 2D44                                l4460 2BCC  
                              l4452 2BB2                                l4444 2B9E  
                              l4436 2B86                                l4428 2B70  
                              l3830 15C4                                l3806 474A  
                              l3566 3D6A                                l3558 3C72  
                              l3750 1E54                                l3742 1E06  
                              l3734 1DE2                                l3726 1DC6  
                              l3718 1D9A                                l3670 1C28  
                              l3662 1BDA                                l3654 1BA4  
                              l3646 1B94                                l3638 1B84  
                              l3590 1AA8                                l3582 1A78  
                              l3494 4194                                l3398 2FF6  
                              l3902 1F72                                l4390 2DB0  
                              l4198 3638                                l4382 152E  
                              l4374 1384                                l4366 1164  
                              l4358 1058                                l4278 49AE  
                              l3822 4942                                l3814 492E  
                              l3486 480E                                l3478 47D4  
                              l4294 3FC8                                l4286 3F6A  
                              l4470 2C0A                                l4462 2BDE  
                              l4454 2BBA                                l4446 2BA6  
                              l4438 2B8A                                l3840 169A  
                              l3832 1602                                l3576 4A0E  
                              l3808 4766                                l3760 1EBA  
                              l3752 1E60                                l3744 1E14  
                              l3736 1DF2                                l3728 1DC8  
                              l3680 1C68                                l3672 1C2C  
                              l3664 1BF6                                l3656 1BA8  
                              l3648 1B98                                l3592 1AB8  
                              l3584 1A86                                l3496 41B4  
                              l3568 4400                                l3920 2016  
                              l3912 1F9C                                l3904 1F78  
                              l4392 2DCE                                l4376 13EE  
                              l4368 1232                                l3824 4944  
                              l3816 4938                                l3488 4810  
                              l4296 3FD2                                l4288 3F7A  
                              l4384 48FE                                l4480 2C88  
                              l4472 2C22                                l4464 2BF6  
                              l4456 2BC2                                l4448 2BAA  
                              l3850 173E                                l3842 16A2  
                              l3834 160A                                l3826 157E  
                              l3578 4A1E                                l3770 1F02  
                              l3762 1ECA                                l3754 1E6E  
                              l3746 1E2A                                l3738 1DF4  
                              l3690 1CAA                                l3682 1C78  
                              l3674 1C3A                                l3666 1C06  
                              l3658 1BAC                                l3594 1ABA  
                              l3586 1A88                                l3930 20AA  
                              l3922 202E                                l3914 1FB4  
                              l3906 1F80                                l4394 2DE6  
                              l4386 2D7A                                l4378 14AC  
                              l3818 493E                                l4298 3FD4  
                              l4490 2CD4                                l4482 2C8E  
                              l4474 2C2E                                l4466 2BFA  
                              l4458 2BCA                                l3860 17F2  
                              l3852 1756                                l3844 16BA  
                              l3836 161E                                l3828 1586  
                              l3772 1F04                                l3764 1EEA  
                              l3756 1EA8                                l3692 1CB8  
                              l3676 1C3C                                l3668 1C1C  
                              l3588 1A98                                l3596 1AC2  
                              l3940 214C                                l3932 20D0  
                              l3924 2054                                l3916 1FDA  
                              l3908 1F88                                l4396 2E06  
                              l4388 2D98                                l4492 2CE0  
                              l4484 2C94                                l4476 2C42  
                              l4468 2C00                                l3790 3790  
                              l3782 3714                                l3870 18CC  
                              l3862 1830                                l3854 1794  
                              l3846 16F8                                l3838 165C  
                              l3774 1F0A                                l3766 1EEE  
                              l3758 1EAA                                l3694 1CC4  
                              l3686 1C8C                                l3678 1C46  
                              l3598 1AD2                                l3950 21B6  
                              l3942 2164                                l3934 20E8  
                              l3926 206C                                l3918 1FF2  
                              l4398 2E1E                                l4494 2CE6  
                              l4486 2CAE                                l4478 2C74  
                              l3792 379E                                l3784 3742  
                              l3880 19A6                                l3872 190A  
                              l3864 186E                                l3856 17D2  
                              l3848 1736                                l3776 1F18  
                              l3768 1EFC                                l3696 1CC8  
                              l3688 1C9C                                l3960 2210  
                              l3952 21BA                                l3944 218A  
                              l3936 210E                                l3928 2092  
                              l4496 2CEC                                l4488 2CC2  
                              l3794 37B0                                l3786 3752  
                              l3890 1A4A                                l3882 19AE  
                              l3874 1912                                l3866 1876  
                              l3858 17DA                                l3778 1F1A  
                              l3698 1CD6                                l3970 2332  
                              l3962 2284                                l3954 21CE  
                              l3938 2126                                l3946 21A2  
                              l4498 2CFA                                l3796 37BE  
                              l3788 3780                                l3884 19C6  
                              l3876 192A                                l3868 188E  
                              l3892 1A62                                l3980 237A  
                              l3972 2346                                l3948 21A4  
                              l3798 380E                                l3886 1A04  
                              l3878 1968                                l3990 4710  
                              l3982 2392                                l3966 22D2  
                              l3958 21FC                                l3888 1A42  
                              l3992 472C                                l3984 46F0  
                              l3968 22E6                                l3976 2352  
                              l3896 1F2C                                l3986 4700  
                              l3978 2366                                l3898 1F32  
                              l3996 4892                                l3988 4708  
                              l3998 4896                                STR_1 0E01  
                              STR_2 0E10                                STR_3 0E4C  
                              STR_4 0E3D                                STR_5 0E1C  
                              STR_6 0E36                                STR_7 0E43  
                              STR_8 0E2F                                STR_9 0E11  
                              u2200 3BD8                                u3000 1BDA  
                              u2201 3BD4                                u3001 1BD6  
                              u2210 3BFA                                u3010 1BF2  
                              u2211 3BF6                                u3011 1BEC  
                              u2300 46E2                                u2220 3C44  
                              u3100 1CD6                                u3020 1BF4  
                              u2301 46DE                                u2221 3C40  
                              u3101 1CD2                                u2150 43A6  
                              u2230 3C5C                                u2310 3ED2  
                              u3110 1D0E                                u3030 1C1C  
                              u2151 43A2                                u2231 3C58  
                              u2311 3ECE                                u3111 1D0A  
                              u3031 1C18                                u4000 48DC  
                              u2400 3842                                u2160 43C4  
                              u2320 4292                                u2240 3F68  
                              u3200 1E2A                                u3120 1D54  
                              u3040 1C3A                        _BAUD4CONbits 000EE9  
                              u4001 48D8                                u2401 383E  
                              u2161 43C0                                u2321 428E  
                              u2241 3F64                                u3201 1E26  
                              u3121 1D50                                u3041 1C36  
                              u4010 48F6                                u2250 3908  
                              u2410 3878                                u2170 43E0  
                              u3210 1E40                                u3130 1D8A  
                              u3050 1C5A                                u4011 48F2  
                              u2251 3904                                u2331 33D6  
                              u2411 3874                                u2171 43DC  
                              u3211 1E3C                                u3131 1D86  
                              u3051 1C56                                u3300 3742  
                              u2260 391A                                u2340 33F8  
                              u2420 3894                                u2180 3122  
                              u3220 1E54                                u3140 1D9A  
                              u3060 1C68                                u2500 2412  
                              u4100 127A                                u4020 0E9A  
                              u3301 373E                                u2261 3916  
                              u2341 33F4                                u2421 3890  
                              u2181 311E                                u3221 1E50  
                              u3141 1D96                                u3061 1C64  
                              u2501 240E                                u4101 1276  
                              u4021 0E96                                u3310 3780  
                              u2270 3942                                u2350 342A  
                              u2430 38A6                                u2190 31EC  
                              u3230 1E6E                                u3150 1DC6  
                              u3070 1C78                                u2510 2424  
                              u4110 12C6                                u4030 0EE2  
                              u3311 377C                                u2271 393E  
                              u2351 3426                                u2431 38A2  
                              u2191 31E8                                u3231 1E6A  
                              u3151 1DC2                                u3071 1C74  
                              u2511 2420                                u4111 12C2  
                              u4031 0EDE                                u3320 379E  
                              u3400 16F8                                u2280 3978  
                              u2360 3448                                u2440 38D0  
                              u3240 1EA8                                u3160 1DD6  
                              u3080 1CAA                                u2600 26C4  
                              u2520 2434                                u4200 2F1E  
                              u4120 152E                                u4040 0F54  
                              u3321 379A                                u3401 16F4  
                              u2281 3974                                u2361 3444  
                              u2441 38CC                                u3241 1EA4  
                              u3161 1DD2                                u3081 1CA6  
                              u2601 26C0                                u2521 2430  
                              u4201 2F1A                                u4121 152A  
                              u4041 0F50                                u3330 37BE  
                              u3410 1736                                u2290 46D2  
                              u2370 349E                                u3250 1EBA  
                              u3170 1DF2                                u3090 1CB8  
                              u2610 26D8                                u2530 246A  
                              u4130 2D98                                u4050 0F9C  
                              u2450 4968                                u4210 2BDE  
                              _T2PR 000FBC                                u3331 37BA  
                              u3411 1732                                u2371 349A  
                              u3251 1EB6                                u3171 1DEE  
                              u3091 1CB4                                u2611 26D4  
                              u2531 2466                                u4131 2D94  
                              u4051 0F98                                u2451 4964  
                              u4211 2BDA                                u3340 380E  
                              u3500 1A04                                u3420 1794  
                              u2380 34CC                                u3260 1ECA  
                              u3180 1E02                                u2620 26F2  
                              u2540 247A                                u2700 306E  
                              u4140 2DCE                                u4060 100C  
                              u2460 497E                                u4220 2C74  
                              u3341 380A                                u3501 1A00  
                              u3421 1790                                u3261 1EC6  
                              u3181 1DFE                                u2621 26EE  
                              u2541 2476                                u2701 306A  
                              u4141 2DCA                                u4061 1008  
                              u2461 497A                                u4221 2C70  
                              u3510 1A42                                u3430 17D2  
                              u2390 3506                                u3350 4782  
                              u3270 1EEA                                u3190 1E14  
                              u2630 273A                                u2550 25F4  
                              u2470 23B0                                u2710 308C  
                              u4150 2E06                                u4070 1058  
                              u4230 2CD4                                u3511 1A3E  
                              u3431 17CE                                u2391 3502  
                              u3351 477E                                u3271 1EE6  
                              u3191 1E10                                u2631 2736  
                              u2471 23AC                                u2711 3088  
                              u4151 2E02                                u4071 1054  
                              u4231 2CD0                                u3440 1830  
                              u3360 15C4                                u3280 1EFC  
                              u2640 2768                                u2560 264E  
                              u2480 23C2                                u2720 309C  
                              u3600 218A                                u3520 1F96  
                              u4160 2E3E                                u4080 10F8  
                              u2800 47FC                                u4240 2D44  
                              u3441 182C                                u3361 15C0  
                              u2297 46C8                                u3281 1EF8  
                              u2641 2764                                u2561 264A  
                              u2481 23BE                                u2721 3098  
                              u3601 2186                                u3521 1F92  
                              u4161 2E3A                                u4081 10F4  
                              u2801 47F4                                u4241 2D40  
                              u3450 186E                                u3370 1602  
                              u3290 1F18                                u2650 27A2  
                              u2570 266E                                u2490 23D2  
                              u2730 30AA                                u3610 21F8  
                              u3530 1FDA                                u4170 2E76  
                              u4090 1140                                u4250 2D58  
                              u3451 186A                                u3371 15FE  
                              u2387 34C2                                u3291 1F14  
                              u2651 279E                                u2571 266A  
                              u2555 25EA                                u2491 23CE  
                              u2731 30A6                                u3611 21F4  
                              u3531 1FD6                                u4171 2E72  
                              u4091 113C                                u4307 4828  
                              u4251 2D54                                u3460 18CC  
                              u3380 165C                                u2900 4A1E  
                              u2820 4212                                u2580 2680  
                              u2740 30E4                                u2660 2F64  
                              u3620 2280                                u3540 2016  
                              u4180 2EAE                                u3700 2842  
                              u4260 2D76                                u3461 18C8  
                              u3381 1658                                u2901 4A1A  
                              u2821 420E                                u2581 267C  
                              u2741 30E0                                u2661 2F60  
                              u3621 227C                                u3541 2012  
                              u4317 1F64                                u4181 2EAA  
                              u3701 283E                                u4261 2D72  
                              u3470 190A                                u3390 169A  
                              u2830 42A6                                u2910 1A86  
                              u2590 26AE                                u2750 30F2  
                              u2670 2F72                                u3630 22CE  
                              u3550 2054                                u4190 2EE6  
                              u3710 2854                                u3471 1906  
                              u3391 1696                                u4407 3EAC  
                              u2831 42A2                                u2911 1A82  
                              u2591 26AA                                u2751 30EE  
                              u2671 2F6E                                u3631 22CA  
                              u3551 2050                                u4327 1FA6  
                              u4191 2EE2                                u3711 2850  
                              u3480 1968                                u2760 3296  
                              u2840 4322                                u2920 1A98  
                              u2680 2FCE                                u3640 2332  
                              u3560 2092                                u3800 29FE  
                              u3720 2864                                u3481 1964  
                              u2761 3292                                u4417 40A4  
                              u2841 431E                                u2921 1A94  
                              u2681 2FCA                                u4337 2384  
                              u3641 232E                                u3561 208E  
                              u3801 29FA                                u3721 2860  
                              u3490 19A6                                u2770 32DA  
                              u2850 44CC                                u2930 1AA8  
                              u2690 3024                                u3650 2366  
                              u3570 20D0                                u3810 2A1E  
                              u3730 28A4                                u2818 47FE  
                              u3491 19A2                                u4507 48AA  
                              u2771 32D6                                u4427 40D0  
                              u2851 44C8                                u2931 1AA4  
                              u4347 41EE                                u2691 3020  
                              u3651 2362                                u3571 20CC  
                              u3811 2A1A                                u3731 28A0  
                              u3660 48C8                                u2780 3310  
                              u2860 3A7C                                u2940 1AEA  
                              u3580 210E                                u3820 2A30  
                              u3740 28E4                                u3900 39EE  
                              u3661 48C4                                u2781 330C  
                              u4437 40FC                                u4357 3AAE  
                              u2861 3A78                                u2941 1AE6  
                              u3581 210A                                u3821 2A2C  
                              u3741 28E0                                u3901 39EA  
                              u2790 3334                                u2870 3B24  
                              u2950 1B00                                u3590 214C  
                              u3830 2A5E                                u3750 295A  
                              u3670 27DC                                u3910 3A2C  
                              u2791 3330                                u4447 3F42  
                              u4367 3B56                                u2871 3B20  
                              u2951 1AFC                                u3591 2148  
                              u3831 2A5A                                u3751 2956  
                              u3671 27D8                                u3911 3A28  
                              u4287 2BEA                                u2880 3C72  
                              u2960 1B12                                u3840 2A74  
                              u3760 297C                                u3680 27EE  
                              u3920 3A60                                u4457 412C  
                              u4377 401A                                u2881 3C6E  
                              u2961 1B0E                                u3841 2A70  
                              u3761 2978                                u3681 27EA  
                              u3921 3A5C                                u4297 2CA0  
                              u2890 3D16                                u2970 1B22  
                              u3850 2A88                                u3770 29A6  
                              u3690 27FE                                u3930 3624  
                              u4467 4158                                u4387 4046  
                              u2891 3D12                                u2971 1B1E  
                              u3851 2A84                                u3771 29A2  
                              u3691 27FA                                u3931 3620  
                              u2980 1B5E                                u3860 2AA2  
                              u3780 29CA                                u3940 3658  
                              u4477 4184                                u4397 4072  
                              u2981 1B5A                                u3861 2A9E  
                              u3781 29C6                                u2990 1B6C  
                              u3870 2AEA                                u3790 29E0  
                              u3950 3686                                u4487 3C22  
                              u2991 1B68                                u3871 2AE6  
                              u3791 29DC                                u3951 3682  
                              u3880 2B1A                                u3960 369A  
                              u4497 426E                                u3881 2B16  
                              u3961 3696                                u3945 364E  
                              u3890 2B48                                u3970 36C2  
                              u3891 2B44                                u3971 36BE  
                              u3980 36E2                                u3981 36DE  
                              u3990 36F2                                u3991 36EE  
               reverseHalfSquare@mL 001B                 reverseHalfSquare@mR 001D  
                              _dbuf 0100                                _main 2B5C  
                              _prec 00E4                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                _stoa 33CC  
                              btemp 005F                                _stop 3BBA  
                        _ClickLEDOn 48CA            memoryUpdateTime@timerVal 0053  
                              prodh 000FF4                                prodl 000FF3  
                              start 002C                     ___fldiv@new_exp 0065  
           __end_of_Yellow_rev1_R90 3B12       memoryUpdateTime@movementCount 004B  
            __end_of_color_read_Red 45B0                     __end_of_HighISR 002C  
                      ___param_bank 000000                     __end_of_Red_R90 4310  
                        _Hue2Colour 157E                     __end_of_Right45 4084  
                  __end_of_LED_init 4A44                       ___fltol@sign1 0009  
                   __end_of___fladd 1F2C                               ?_main 0001  
                   __end_of___fldiv 2B5C                               STR_10 0E26  
                             STR_11 0E48                               STR_13 0E48  
                   __end_of___flmul 27C0                     __end_of___flsub 47D2  
                   __end_of___fltol 3714                               ?_stoa 000A  
                    _LightBlue_L135 3D04                               ?_stop 0014  
                   __end_of___lwdiv 4400                               i2l684 0028  
                      vfpfcnvrt@fmt 0022                               _TMR0H 000FD4  
                             _TMR0L 000FD3             __end_of_sendCharSerial4 4A24  
        __end_of_I2C_2_Master_Start 4A7A                               _White 1F2C  
        __end_of_I2C_2_Master_Write 4A50                               _flags 00EC  
                             _fputc 38F6                   fullSpeedReverse@i 0019  
                             _width 00E2                               _putch 4A84  
                             tablat 000FF5                               plusw1 000FE3  
                             plusw2 000FDB                               stoa@i 0018  
                             stoa@l 001C                               stoa@p 001E  
                             stoa@s 000C                               stoa@w 0016  
                             ttemp5 0060                               ttemp6 0063  
                             ttemp7 0067                               status 000FD8  
                             wtemp8 0060                     __end_of_sprintf 473E  
                   __end_of_strncmp 38F6                    _memoryUpdateTime 3DA8  
              __end_of_Color2String 4892             __end_of_color_read_Blue 46A0  
             _I2C_2_Master_RepStart 4A5C                     ?_color_read_Red 0005  
                   __initialization 4462                        __end_of_main 2D7A  
                      __end_of_stoa 3508                        __end_of_stop 3C60  
                   ??_rotate180left 0024              __end_of_LightBlue_L135 3DA8  
                            ??_main 007B                              ??_stoa 000E  
                            ??_stop 0018                       __activetblptr 000002  
            ??_memoryUpdateMovement 0007                           ??_RGB2Hue 006F  
                     ??_Orange_R135 0025                              ?_White 0060  
                      ?_setMotorPWM 000E                              ?_fputc 0001  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                   _colour_read_all 3508                              ?_putch 0001  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RD5PPS 000E6F  
                            _RC7PPS 000E69                              _RE4PPS 000E76  
                            _RD6PPS 000E70                              i2l4520 000A  
                            i2l4522 001A                              i2l4524 0024  
                            _RG6PPS 000E88                           ??_HighISR 0001  
          __end_of_color_click_init 4854                              _RX4PPS 000E15  
                            _TX4REG 000EE4                         ?_ClickLEDOn 0001  
                  __end_of___xxtofl 3106                           ??_Red_R90 0025  
                            _Left45 4084                           ??_Right45 001E  
                  _fullSpeedReverse 4214                    ?_Yellow_rev1_R90 0021  
                     ??_Timer0_init 0001                        _CCPTMRS0bits 000FAD  
                      vfprintf@cfmt 0030                              White@i 006E  
                            ___flge 3714                              ___fleq 39C0  
                         ??___fladd 0043                         ?_Hue2Colour 0057  
                            ___wmul 4980                           ??___fldiv 005B  
                     Orange_R135@mL 0021                           ??___flmul 0022  
                     Orange_R135@mR 0023                           ??___flsub 0053  
                         ??___fltol 0005                           ??___lwdiv 000B  
                        _TimerReset 4A7A                              _colorf 0198  
                   ?_LightBlue_L135 0021                              clear_0 449A  
                            clear_1 44A6                  fullSpeedReverse@mL 0014  
                fullSpeedReverse@mR 0016                              _motorL 00F6  
                            _motorR 00ED                              isa$std 000001  
                            _strlen 46A0                              fputc@c 0001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001   memoryUpdateMovement@movementCount 0003  
                            stoa@cp 001A                              stoa@fp 000A  
                            putch@c 0001                    __end_of_vfprintf 478C  
                            stop@mL 0014                              stop@mR 0016  
                 ??_initDCmotorsPWM 0003                           ??_sprintf 0038  
                         ??_strncmp 0007                    __end_of_turnLeft 3F6A  
                        ___flge@ff1 004B                          ___flge@ff2 004F  
                      ___xxtofl@arg 0016                        ___xxtofl@exp 0015  
                      ___xxtofl@val 000C                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005                 __end_of_Orange_R135 3D04  
                        __accesstop 0060             __end_of__initialization 44AC  
          __end_of_color_read_Clear 4650                     fullSpeedAhead@i 0019  
                 __end_of_Blue_T180 450E            __end_of_color_read_Green 4600  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                         ?_LED_init 0001                          ___fltol@f1 0001  
                  ?_color_read_Blue 0005                     _Interrupts_init 4A50  
                    __pcstackCOMRAM 0001                       __end_of_White 2396  
                      __pidataBANK0 4A86                        __pidataBANK1 4A24  
                     __end_of_fputc 39C0                   __end_of_Green_L90 438C  
                     __end_of_putch 4A86                           RGB2Hue@cf 006D  
               __end_of_Timer0_init 49CA                         _ForwardFlag 00FF  
           __end_of_colour_read_all 360E                             ??_White 0057  
                           ??_fputc 0005                             ??_putch 0001  
                        __pbssBANK0 00E2                          __pbssBANK1 0100  
                        ??_LED_init 0001                             ?_Left45 001A  
                 _color_writetoaddr 49EC                        _T2CLKCONbits 000FBF  
             __end_of_Colour2Action 2F52                             ?___flge 004B  
                           ?___fleq 0001                  ?_color_writetoaddr 0003  
                           ?___wmul 0001                         ?_TimerReset 0001  
               ??_color_writetoaddr 0004                             ?_strlen 0001  
             __end_of_getTimerValue 4462            __end_of_memoryUpdateTime 3E3E  
                      _Color2String 4854                             _RGB2Hue 0E52  
                         ?___xxtofl 000C                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                         _Orange_R135 3C60  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
           __end_of_Interrupts_init 4A5C              color_writetoaddr@value 0003  
                  ??_color_read_Red 0007                             _HighISR 0008  
         __end_of_color_writetoaddr 4A0C                             _Red_R90 4294  
                _I2C_2_Master_Start 4A70                          _initUSART4 49CA  
                _I2C_2_Master_Write 4A44                             _Right45 3FFA  
                           __Hparam 0000                             __Lparam 0000  
                 color_read_Red@tmp 000A                         _Timer0_init 49A6  
           sendStringSerial4@string 0002                             White@mL 0060  
                           White@mR 0062                             ___fladd 1A6C  
                           ___fldiv 27C0                             ___flmul 2396  
                           ___flsub 478C                             ___fltol 360E  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 438C  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 002A  
                      __psmallconst 0E00                             __pcinit 4462  
                           __ramtop 0E00                           ?_turnLeft 0014  
                           __ptext0 2B5C                             __ptext1 3DA8  
                           __ptext2 48FE                             __ptext3 49CA  
                           __ptext4 3F6A                             __ptext5 3508  
                           __ptext6 4560                             __ptext7 45B0  
                           __ptext8 4600                             __ptext9 4650  
                           _maxTime 00EA                           _T2CONbits 000FBD  
                  ?_colour_read_all 001A                          ??___xxtofl 0010  
                    Color2String@cf 005D            __end_of_fullSpeedReverse 4294  
                         _T2HLTbits 000FBE                             _sprintf 46F0  
              ??_I2C_2_Master_Start 0002                ??_I2C_2_Master_Write 0002  
                           _strncmp 3818                end_of_initialization 44AC  
    memoryUpdateMovement@colourcode 0007                             fputc@fp 0003  
                     _Pink_rev1_L90 3B12                       __Lmediumconst 0000  
                      ??_ClickLEDOn 0001                   ?_color_click_init 0001  
                    __45drightdelay 01BB                  ??_color_click_init 0005  
                  ??_LightBlue_L135 0025                   __end_of_vfpfcnvrt 33CC  
                 _reverseHalfSquare 410E                             postdec1 000FE5  
                           postdec2 000FDD                        ??_Hue2Colour 0059  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE  memoryUpdateMovement@movementMemory 0005  
                        ??_vfprintf 0030                  ?_reverseHalfSquare 001B  
                           strlen@a 0003                             strlen@s 0001  
             __end_of_rotate180left 4560                     _initDCmotorsPWM 3F6A  
                        ??_turnLeft 0018                    White@timerMemory 0068  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0013  
                 __end_of_turnRight 3ED4                         ___fladd@grs 004A  
               ??_reverseHalfSquare 001F                  __end_of_ClickLEDOn 48FE  
                     ___xxtofl@sign 0014                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0012                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0067  
                       ___fldiv@rem 0060                    fullSpeedAhead@mL 0014  
                  fullSpeedAhead@mR 0016            color_writetoaddr@address 0004  
                         Red_R90@mL 0021                           Red_R90@mR 0023  
           ??_I2C_2_Master_RepStart 0002                      _movementMemory 0170  
                __end_of_Hue2Colour 1A6C                      ?_Pink_rev1_L90 0021  
                  ?_Interrupts_init 0001                         ___flmul@grs 0027  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0005  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0005  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22           sendCharSerial4@charToSend 0001  
                   Colour2Action@cf 005B           __end_of_reverseHalfSquare 4194  
                ??_color_read_Clear 0007                  ??_color_read_Green 0007  
                         _Blue_T180 44BA                      __end_of_Left45 410E  
                      _RGB2Hue$3161 0073                      __end_of___flge 3818  
                    __end_of___fleq 3A6A                      _fullSpeedAhead 4194  
                       vfpfcnvrt@ap 0024                         vfpfcnvrt@fp 0020  
                    __end_of___wmul 49A6                           _Green_L90 4310  
                         Right45@mL 001A                           Right45@mR 001C  
                    __end_of_strlen 46F0                          RGB2Hue@max 0077  
                        RGB2Hue@min 0079                 color_read_Clear@tmp 000A  
               start_initialization 4462                         __halfsquare 01B7  
                          ??_Left45 001E                 color_read_Green@tmp 000A  
                        ?_Blue_T180 0024             __end_of_initDCmotorsPWM 3FFA  
                       vfprintf@fmt 002C              __end_of_fullSpeedAhead 4214  
                          ??___flge 0053                            ??___fleq 0009  
                          ??___wmul 0005                        ??_TimerReset 0001  
                       __pdataBANK0 00FF                         __pdataBANK1 01AE  
                          ??_strlen 0003                           ___fladd@a 003F  
                         ___fladd@b 003B                     ClickLEDOn@power 0001  
                        ?_Green_L90 0021                           ___fldiv@a 0057  
                         ___fldiv@b 0053                   ?_memoryUpdateTime 004B  
                          ?_RGB2Hue 006D                           ___flmul@a 001E  
                         ___flmul@b 001A                           ___flsub@a 004F  
                         ___flsub@b 004B                       __pcstackBANK0 0060  
                      ?_Orange_R135 0021                  ??_memoryUpdateTime 004F  
                   ??_Pink_rev1_L90 0025                            ?_HighISR 0001  
                __end_of_TimerReset 4A84                            ?_Red_R90 0021  
            Color2String@colourname 0060                            ?_Right45 001A  
                  ___lwdiv@dividend 0007                        ?_Timer0_init 0001  
                   ?_fullSpeedAhead 0014                           __pintcode 0008  
                          ?___fladd 003B                            ?___fldiv 0053  
                          ?___flmul 001A                            ?___flsub 004B  
                          ?___fltol 0001                            ?___lwdiv 0007  
              I2C_2_Master_Read@ack 0003                I2C_2_Master_Read@tmp 0004  
                   Pink_rev1_L90@mL 0021                     Pink_rev1_L90@mR 0023  
                       __smallconst 0E00                   _I2C_2_Master_Idle 4958  
                 _I2C_2_Master_Init 492E                   _I2C_2_Master_Read 47D2  
                     __45dleftdelay 01BD                   _I2C_2_Master_Stop 4A66  
                 ?_fullSpeedReverse 0014                   ??_Yellow_rev1_R90 0025  
                ?_I2C_2_Master_Idle 0001                     rotate180left@mL 0020  
                   rotate180left@mR 0022                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0010  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000B  
               White@movementMemory 0066            initDCmotorsPWM@PWMperiod 0001  
                          ?_sprintf 0032                  ??_fullSpeedReverse 0018  
                          ?_strncmp 0001                Hue2Colour@colourname 0059  
                 colour_read_all@cf 001A                        Hue2Colour@cf 0057  
                 _sendStringSerial4 4892                 ??_I2C_2_Master_Idle 0001  
               ??_I2C_2_Master_Init 0001                 ??_I2C_2_Master_Read 0002  
                    ___wmul@product 0005                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0002                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _PIE0bits 000E29  
                          _LED_init 4A36                  ?_sendStringSerial4 0002  
                          _PIE4bits 000E2D                         turnRight@mL 0014  
                       turnRight@mR 0016                            _PIR0bits 000E33  
                       ??_Blue_T180 0028                            i2u427_40 001A  
                          i2u427_41 0016                            _PIR4bits 000E37  
                  ?_initDCmotorsPWM 0001                            Left45@mL 001A  
                          Left45@mR 001C                   ??_sendCharSerial4 0001  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 0004  
                          _SSP2STAT 000ED8                           _vfpfcnvrt 3272  
         __end_of_I2C_2_Master_Idle 4980           __end_of_I2C_2_Master_Init 4958  
         __end_of_I2C_2_Master_Read 4814                   ___wmul@multiplier 0001  
         __end_of_I2C_2_Master_Stop 4A70                       _movementCount 00E8  
                       ??_Green_L90 0025                        setMotorPWM@m 000E  
       I2C_2_Master_Write@data_byte 0002                   ??_color_read_Blue 0007  
                         _turnRight 3E3E                       _retracingDone 00E6  
                          __1square 01B9                           copy_data0 4476  
         __end_of_sendStringSerial4 48CA       __end_of_I2C_2_Master_RepStart 4A66  
                color_read_Blue@tmp 000A                 __end_of_setMotorPWM 3272  
                      ??_initUSART4 0001                            __Hrparam 0000  
      __end_of_memoryUpdateMovement 492E                          vfprintf@ap 002E  
                          __Lrparam 0000                          vfprintf@fp 002A  
                     _Colour2Action 2D7A                          ?_vfpfcnvrt 0020  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                     _getTimerValue 4400                          sprintf@fmt 0034  
                       Blue_T180@mL 0024                         Blue_T180@mR 0026  
                          ___xxtofl 2F52                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                     ___lwdiv@divisor 0009  
                __end_of_initUSART4 49EC                     ___lwdiv@counter 000D  
                        ?_turnRight 0014                            __ptext10 4A5C  
                          __ptext11 47D2                            __ptext20 0E52  
                          __ptext12 4814                            __ptext21 360E  
                          __ptext13 49EC                            __ptext30 2F52  
                          __ptext22 478C                            __ptext14 4A44  
                          __ptext31 2396                            __ptext23 39C0  
                          __ptext15 4A66                            __ptext40 4310  
                          __ptext32 4194                            __ptext24 27C0  
                          __ptext16 4A70                            __ptext41 3FFA  
                          __ptext33 1A6C                            __ptext25 4A36  
                          __ptext17 4958                            __ptext50 3106  
                          __ptext42 3E3E                            __ptext34 3A6A  
                          __ptext26 4A50                            __ptext18 492E  
                          __ptext51 4980                            __ptext43 44BA  
                          __ptext35 4A7A                            __ptext27 2D7A  
                          __ptext19 49A6                            __ptext60 38F6  
                          __ptext52 438C                            __ptext44 450E  
                          __ptext36 4294                            __ptext28 1F2C  
                          __ptext61 4A84                            __ptext53 4854  
                          __ptext45 4084                            __ptext37 3B12  
                          __ptext29 4400                            __ptext62 4892  
                          __ptext54 46F0                            __ptext46 3ED4  
                          __ptext38 3C60                            __ptext63 4A0C  
                          __ptext55 473E                            __ptext47 410E  
                          __ptext39 3D04                            __ptext64 157E  
                          __ptext56 3272                            __ptext48 3BBA  
                          __ptext65 3714                            __ptext57 3818  
                          __ptext49 4214                            __ptext66 48CA  
                          __ptext58 33CC                            __ptext59 46A0  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                White@movementCount 0064                          turnLeft@mL 0014  
                        turnLeft@mR 0016                     Color2String@buf 005B  
                  colour_read_all@B 0024                    colour_read_all@C 0028  
                  colour_read_all@G 0020                    colour_read_all@R 001C  
                    White@tempTimer 006A                          turnRight@i 0018  
                  LightBlue_L135@mL 0021                    LightBlue_L135@mR 0023  
                         stoa@F1144 01AE                      ?_Colour2Action 005B  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005F                            _vfprintf 473E  
                          main@data 007D                   Yellow_rev1_R90@mL 0021  
                 Yellow_rev1_R90@mR 0023                            main@wall 00E1  
                          _turnLeft 3ED4                      ?_getTimerValue 0033  
                     ?_Color2String 005B                      _vfpfcnvrt$2859 0028  
                        _INTCONbits 000FF2                         _setMotorPWM 3106  
             _memoryUpdateTime$3162 004F                            intlevel2 0000  
                         sprintf@ap 0038                    ??_fullSpeedAhead 0018  
                         turnLeft@i 0018                           strncmp@_l 0001  
                         strncmp@_r 0003                   ??_colour_read_all 001C  
           getTimerValue@timerCount 0039                     _Yellow_rev1_R90 3A6A  
                       ??_vfpfcnvrt 0026                            stoa@nuls 000F  
                  _color_click_init 4814                       _rotate180left 450E  
                    ??_Color2String 005F                            sprintf@f 003A  
                          sprintf@s 0032                    __recogniseColour 01B5  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       _timerMemory 0120                            strncmp@l 0008  
                          strncmp@n 0005                            strncmp@r 000A  
              _memoryUpdateMovement 48FE                         ??_turnRight 0018  
                     ___fladd@signs 0047                          _TX4STAbits 000EE8  
             __end_of_Pink_rev1_L90 3BBA                     _sendCharSerial4 4A0C  
                      ___fladd@aexp 0048                        ___fladd@bexp 0049  
       memoryUpdateTime@timerMemory 004D                     ??_Colour2Action 005D  
