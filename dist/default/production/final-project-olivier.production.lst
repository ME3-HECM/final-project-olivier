

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 28 16:08:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 06/04/2022 GMT
    52                           ; 
    53                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F67K40 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataBANK0
    87   001DE2                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for _DataFlag
    91   001DE2  01                 	db	1
    92   000000                     _TX4REG	set	3812
    93   000000                     _RC4STAbits	set	3815
    94   000000                     _SP4BRGH	set	3814
    95   000000                     _SSP2CON2bits	set	3802
    96   000000                     _RX4PPS	set	3605
    97   000000                     _SSP2CLKPPS	set	3612
    98   000000                     _SSP2DATPPS	set	3613
    99   000000                     _ANSELDbits	set	3751
   100   000000                     _SSP2ADD	set	3798
   101   000000                     _SSP2CON1bits	set	3801
   102   000000                     _RC4REG	set	3811
   103   000000                     _SP4BRGL	set	3813
   104   000000                     _TX4STAbits	set	3816
   105   000000                     _BAUD4CONbits	set	3817
   106   000000                     _TRISCbits	set	3971
   107   000000                     _SSP2CON2	set	3802
   108   000000                     _TRISDbits	set	3972
   109   000000                     _SSP2STAT	set	3800
   110   000000                     _SSP2BUF	set	3797
   111   000000                     _PIR4bits	set	3639
   112   000000                     _RC0PPS	set	3682
   113   000000                     _RD5PPS	set	3695
   114   000000                     _RD6PPS	set	3696
   115                           
   116                           	psect	smallconst
   117   000E00                     __psmallconst:
   118                           	callstack 0
   119   000E00  00                 	db	0
   120   000E01                     STR_1:
   121                           
   122                           ; BSR set to: 14
   123   000E01  52                 	db	82	;'R'
   124   000E02  65                 	db	101	;'e'
   125   000E03  64                 	db	100	;'d'
   126   000E04  20                 	db	32
   127   000E05  25                 	db	37
   128   000E06  64                 	db	100	;'d'
   129   000E07  20                 	db	32
   130   000E08  47                 	db	71	;'G'
   131   000E09  72                 	db	114	;'r'
   132   000E0A  65                 	db	101	;'e'
   133   000E0B  65                 	db	101	;'e'
   134   000E0C  6E                 	db	110	;'n'
   135   000E0D  2C                 	db	44
   136   000E0E  25                 	db	37
   137   000E0F  64                 	db	100	;'d'
   138   000E10  20                 	db	32
   139   000E11  42                 	db	66	;'B'
   140   000E12  6C                 	db	108	;'l'
   141   000E13  75                 	db	117	;'u'
   142   000E14  65                 	db	101	;'e'
   143   000E15  2C                 	db	44
   144   000E16  25                 	db	37
   145   000E17  64                 	db	100	;'d'
   146   000E18  20                 	db	32
   147   000E19  43                 	db	67	;'C'
   148   000E1A  6C                 	db	108	;'l'
   149   000E1B  65                 	db	101	;'e'
   150   000E1C  61                 	db	97	;'a'
   151   000E1D  72                 	db	114	;'r'
   152   000E1E  20                 	db	32
   153   000E1F  25                 	db	37
   154   000E20  64                 	db	100	;'d'
   155   000E21  20                 	db	32
   156   000E22  0D                 	db	13
   157   000E23  00                 	db	0
   158   000E24  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   001C72                     __pcinit:
   164                           	callstack 0
   165   001C72                     start_initialization:
   166                           	callstack 0
   167   001C72                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Initialize objects allocated to BANK0 (1 bytes)
   171                           ; load TBLPTR registers with __pidataBANK0
   172   001C72  0EE2               	movlw	low __pidataBANK0
   173   001C74  6EF6               	movwf	tblptrl,c
   174   001C76  0E1D               	movlw	high __pidataBANK0
   175   001C78  6EF7               	movwf	tblptrh,c
   176   001C7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   177   001C7C  6EF8               	movwf	tblptru,c
   178   001C7E  0009               	tblrd		*+	;fetch initializer
   179   001C80  CFF5 F0E3          	movff	tablat,__pdataBANK0
   180                           
   181                           ; Clear objects allocated to BANK1 (60 bytes)
   182   001C84  EE01  F000         	lfsr	0,__pbssBANK1
   183   001C88  0E3C               	movlw	60
   184   001C8A                     clear_0:
   185   001C8A  6AEE               	clrf	postinc0,c
   186   001C8C  06E8               	decf	wreg,f,c
   187   001C8E  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (76 bytes)
   190   001C90  EE00  F060         	lfsr	0,__pbssBANK0
   191   001C94  0E4C               	movlw	76
   192   001C96                     clear_1:
   193   001C96  6AEE               	clrf	postinc0,c
   194   001C98  06E8               	decf	wreg,f,c
   195   001C9A  E1FD               	bnz	clear_1
   196                           
   197                           ; Clear objects allocated to COMRAM (1 bytes)
   198   001C9C  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   199   001C9E                     end_of_initialization:
   200                           	callstack 0
   201   001C9E                     __end_of__initialization:
   202                           	callstack 0
   203   001C9E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   204   001CA0  6EF8               	movwf	tblptru,c
   205   001CA2  0E0E               	movlw	high __Lsmallconst
   206   001CA4  6EF7               	movwf	tblptrh,c
   207   001CA6  0100               	movlb	0
   208   001CA8  EF9D  F00C         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211   00005F                     __pbssCOMRAM:
   212                           	callstack 0
   213   00005F                     _RxBufWriteCnt:
   214                           	callstack 0
   215   00005F                     	ds	1
   216                           
   217                           	psect	bssBANK0
   218   000060                     __pbssBANK0:
   219                           	callstack 0
   220   000060                     _EUSART4RXbuf:
   221                           	callstack 0
   222   000060                     	ds	20
   223   000074                     _width:
   224                           	callstack 0
   225   000074                     	ds	2
   226   000076                     _prec:
   227                           	callstack 0
   228   000076                     	ds	2
   229   000078                     _flags:
   230                           	callstack 0
   231   000078                     	ds	1
   232   000079                     _TxBufReadCnt:
   233                           	callstack 0
   234   000079                     	ds	1
   235   00007A                     _TxBufWriteCnt:
   236                           	callstack 0
   237   00007A                     	ds	1
   238   00007B                     _RxBufReadCnt:
   239                           	callstack 0
   240   00007B                     	ds	1
   241   00007C                     _dbuf:
   242                           	callstack 0
   243   00007C                     	ds	32
   244   00009C                     _colorf:
   245                           	callstack 0
   246   00009C                     	ds	8
   247   0000A4                     _color:
   248                           	callstack 0
   249   0000A4                     	ds	8
   250                           
   251                           	psect	dataBANK0
   252   0000E3                     __pdataBANK0:
   253                           	callstack 0
   254   0000E3                     _DataFlag:
   255                           	callstack 0
   256   0000E3                     	ds	1
   257                           
   258                           	psect	bssBANK1
   259   000100                     __pbssBANK1:
   260                           	callstack 0
   261   000100                     _EUSART4TXbuf:
   262                           	callstack 0
   263   000100                     	ds	60
   264                           
   265                           	psect	cstackBANK0
   266   0000AC                     __pcstackBANK0:
   267                           	callstack 0
   268   0000AC                     ?_sprintf:
   269                           	callstack 0
   270   0000AC                     sprintf@s:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x0
   274   0000AC                     	ds	2
   275   0000AE                     sprintf@fmt:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279   0000AE                     	ds	10
   280   0000B8                     sprintf@ap:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xC
   284   0000B8                     	ds	2
   285   0000BA                     sprintf@f:
   286                           	callstack 0
   287                           
   288                           ; 11 bytes @ 0xE
   289   0000BA                     	ds	11
   290   0000C5                     main@data:
   291                           	callstack 0
   292                           
   293                           ; 30 bytes @ 0x19
   294   0000C5                     	ds	30
   295                           
   296                           	psect	cstackCOMRAM
   297   000001                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000001                     ??_I2C_2_Master_Idle:
   300   000001                     ?___wmul:
   301                           	callstack 0
   302   000001                     ?___aodiv:
   303                           	callstack 0
   304   000001                     ?___aomod:
   305                           	callstack 0
   306   000001                     sendCharSerial4@charToSend:
   307                           	callstack 0
   308   000001                     ___wmul@multiplier:
   309                           	callstack 0
   310   000001                     fputc@c:
   311                           	callstack 0
   312   000001                     ___aodiv@dividend:
   313                           	callstack 0
   314   000001                     ___aomod@dividend:
   315                           	callstack 0
   316                           
   317                           ; 8 bytes @ 0x0
   318   000001                     	ds	1
   319   000002                     ??_I2C_2_Master_Read:
   320   000002                     I2C_2_Master_Write@data_byte:
   321                           	callstack 0
   322   000002                     sendStringSerial4@string:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1
   326   000002                     	ds	1
   327   000003                     color_writetoaddr@value:
   328                           	callstack 0
   329   000003                     I2C_2_Master_Read@ack:
   330                           	callstack 0
   331   000003                     ___wmul@multiplicand:
   332                           	callstack 0
   333   000003                     fputc@fp:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337   000003                     	ds	1
   338   000004                     color_writetoaddr@address:
   339                           	callstack 0
   340   000004                     I2C_2_Master_Read@tmp:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x3
   344   000004                     	ds	1
   345   000005                     ??_fputc:
   346   000005                     ??_color_click_init:
   347   000005                     ?_color_read_Red:
   348                           	callstack 0
   349   000005                     ?_color_read_Green:
   350                           	callstack 0
   351   000005                     ?_color_read_Blue:
   352                           	callstack 0
   353   000005                     ?_color_read_Clear:
   354                           	callstack 0
   355   000005                     ___wmul@product:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x4
   359   000005                     	ds	2
   360   000007                     ??_color_read_Red:
   361   000007                     ??_color_read_Green:
   362   000007                     ??_color_read_Blue:
   363   000007                     ??_color_read_Clear:
   364   000007                     ?___awdiv:
   365                           	callstack 0
   366   000007                     ___awdiv@dividend:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x6
   370   000007                     	ds	2
   371   000009                     ___awdiv@divisor:
   372                           	callstack 0
   373   000009                     ___aodiv@divisor:
   374                           	callstack 0
   375   000009                     ___aomod@divisor:
   376                           	callstack 0
   377                           
   378                           ; 8 bytes @ 0x8
   379   000009                     	ds	1
   380   00000A                     color_read_Red@tmp:
   381                           	callstack 0
   382   00000A                     color_read_Green@tmp:
   383                           	callstack 0
   384   00000A                     color_read_Blue@tmp:
   385                           	callstack 0
   386   00000A                     color_read_Clear@tmp:
   387                           	callstack 0
   388   00000A                     fputs@s:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x9
   392   00000A                     	ds	1
   393   00000B                     ___awdiv@counter:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xA
   397   00000B                     	ds	1
   398   00000C                     ___awdiv@sign:
   399                           	callstack 0
   400   00000C                     fputs@fp:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xB
   404   00000C                     	ds	1
   405   00000D                     ___awdiv@quotient:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409   00000D                     	ds	1
   410   00000E                     fputs@c:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414   00000E                     	ds	1
   415   00000F                     colour_read_all@c:
   416                           	callstack 0
   417   00000F                     fputs@i:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0xE
   421   00000F                     	ds	2
   422   000011                     ___aodiv@counter:
   423                           	callstack 0
   424   000011                     ___aomod@counter:
   425                           	callstack 0
   426   000011                     colour_read_all@cf:
   427                           	callstack 0
   428   000011                     pad@fp:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x10
   432   000011                     	ds	1
   433   000012                     ___aodiv@sign:
   434                           	callstack 0
   435   000012                     ___aomod@sign:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x11
   439   000012                     	ds	1
   440   000013                     ??_colour_read_all:
   441   000013                     ?_abs:
   442                           	callstack 0
   443   000013                     pad@buf:
   444                           	callstack 0
   445   000013                     abs@a:
   446                           	callstack 0
   447   000013                     ___aodiv@quotient:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0x12
   451   000013                     	ds	2
   452   000015                     ??_abs:
   453   000015                     pad@p:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x14
   457   000015                     	ds	2
   458   000017                     ??_pad:
   459                           
   460                           ; 1 bytes @ 0x16
   461   000017                     	ds	1
   462   000018                     pad@i:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x17
   466   000018                     	ds	2
   467   00001A                     pad@w:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x19
   471   00001A                     	ds	2
   472   00001C                     dtoa@fp:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1B
   476   00001C                     	ds	2
   477   00001E                     dtoa@d:
   478                           	callstack 0
   479                           
   480                           ; 8 bytes @ 0x1D
   481   00001E                     	ds	1
   482   00001F                     colour_read_all@total:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x1E
   486   00001F                     	ds	7
   487   000026                     ??_dtoa:
   488                           
   489                           ; 1 bytes @ 0x25
   490   000026                     	ds	8
   491   00002E                     _dtoa$1074:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x2D
   495   00002E                     	ds	2
   496   000030                     dtoa@p:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x2F
   500   000030                     	ds	2
   501   000032                     dtoa@w:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x31
   505   000032                     	ds	2
   506   000034                     dtoa@n:
   507                           	callstack 0
   508                           
   509                           ; 8 bytes @ 0x33
   510   000034                     	ds	8
   511   00003C                     dtoa@i:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x3B
   515   00003C                     	ds	2
   516   00003E                     dtoa@s:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x3D
   520   00003E                     	ds	1
   521   00003F                     vfpfcnvrt@fp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x3E
   525   00003F                     	ds	2
   526   000041                     vfpfcnvrt@fmt:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x40
   530   000041                     	ds	2
   531   000043                     vfpfcnvrt@ap:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x42
   535   000043                     	ds	2
   536   000045                     ??_vfpfcnvrt:
   537                           
   538                           ; 1 bytes @ 0x44
   539   000045                     	ds	2
   540   000047                     vfpfcnvrt@convarg:
   541                           	callstack 0
   542                           
   543                           ; 8 bytes @ 0x46
   544   000047                     	ds	8
   545   00004F                     vfpfcnvrt@cp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x4E
   549   00004F                     	ds	2
   550   000051                     ?_vfprintf:
   551                           	callstack 0
   552   000051                     vfprintf@fp:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x50
   556   000051                     	ds	2
   557   000053                     vfprintf@fmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x52
   561   000053                     	ds	2
   562   000055                     vfprintf@ap:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x54
   566   000055                     	ds	2
   567   000057                     vfprintf@cfmt:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x56
   571   000057                     	ds	2
   572   000059                     Color2String@buf:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x58
   576   000059                     	ds	2
   577   00005B                     Color2String@colorf:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x5A
   581   00005B                     	ds	2
   582   00005D                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x5C
   585   00005D                     	ds	2
   586                           
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 13 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  data           30   25[BANK0 ] unsigned char [30]
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   607 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   609 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   610 ;;Total ram usage:       32 bytes
   611 ;; Hardware stack levels required when called: 9
   612 ;; This function calls:
   613 ;;		_Color2String
   614 ;;		_I2C_2_Master_Init
   615 ;;		_color_click_init
   616 ;;		_colour_read_all
   617 ;;		_initUSART4
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text0
   624   00193A                     __ptext0:
   625                           	callstack 0
   626   00193A                     _main:
   627                           	callstack 22
   628   00193A                     
   629                           ;main.c: 14:     char data[30];;main.c: 15:     initUSART4();
   630   00193A  ECAE  F00E         	call	_initUSART4	;wreg free
   631   00193E                     
   632                           ;main.c: 16:     color_click_init();
   633   00193E  EC1A  F00E         	call	_color_click_init	;wreg free
   634   001942                     
   635                           ;main.c: 17:     I2C_2_Master_Init();
   636   001942  EC72  F00E         	call	_I2C_2_Master_Init	;wreg free
   637   001946                     l1796:
   638                           
   639                           ;main.c: 19:         colour_read_all(&color,&colorf);
   640   001946  0EA4               	movlw	low _color
   641   001948  6E0F               	movwf	colour_read_all@c^0,c
   642   00194A  0E00               	movlw	high _color
   643   00194C  6E10               	movwf	(colour_read_all@c+1)^0,c
   644   00194E  0E9C               	movlw	low _colorf
   645   001950  6E11               	movwf	colour_read_all@cf^0,c
   646   001952  0E00               	movlw	high _colorf
   647   001954  6E12               	movwf	(colour_read_all@cf+1)^0,c
   648   001956  EC51  F008         	call	_colour_read_all	;wreg free
   649   00195A                     
   650                           ;main.c: 21:         Color2String(data,&colorf);
   651   00195A  0EC5               	movlw	low main@data
   652   00195C  6E59               	movwf	Color2String@buf^0,c
   653   00195E  0E00               	movlw	high main@data
   654   001960  6E5A               	movwf	(Color2String@buf+1)^0,c
   655   001962  0E9C               	movlw	low _colorf
   656   001964  6E5B               	movwf	Color2String@colorf^0,c
   657   001966  0E00               	movlw	high _colorf
   658   001968  6E5C               	movwf	(Color2String@colorf+1)^0,c
   659   00196A  EC65  F00C         	call	_Color2String	;wreg free
   660   00196E                     
   661                           ;main.c: 22:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   662   00196E  0E52               	movlw	82
   663   001970  6E5E               	movwf	(??_main+1)^0,c
   664   001972  0E2B               	movlw	43
   665   001974  6E5D               	movwf	??_main^0,c
   666   001976  0E00               	movlw	0
   667   001978                     u967:
   668   001978  2EE8               	decfsz	wreg,f,c
   669   00197A  D7FE               	bra	u967
   670   00197C  2E5D               	decfsz	??_main^0,f,c
   671   00197E  D7FC               	bra	u967
   672   001980  2E5E               	decfsz	(??_main+1)^0,f,c
   673   001982  D7FA               	bra	u967
   674   001984  D000               	nop2	
   675   001986  EFA3  F00C         	goto	l1796
   676   00198A  EF00  F000         	goto	start
   677   00198E                     __end_of_main:
   678                           	callstack 0
   679                           
   680 ;; *************** function _initUSART4 *****************
   681 ;; Defined at:
   682 ;;		line 6 in file "serial.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text1
   710   001D5C                     __ptext1:
   711                           	callstack 0
   712   001D5C                     _initUSART4:
   713                           	callstack 30
   714   001D5C                     
   715                           ;serial.c: 7:     TRISCbits.TRISC4=1;
   716   001D5C  8883               	bsf	131,4,c	;volatile
   717                           
   718                           ;serial.c: 8:     TRISCbits.TRISC1=1;
   719   001D5E  8283               	bsf	131,1,c	;volatile
   720   001D60                     
   721                           ;serial.c: 9:     RC0PPS = 0x12;
   722   001D60  0E12               	movlw	18
   723   001D62  010E               	movlb	14	; () banked
   724   001D64  6F62               	movwf	98,b	;volatile
   725                           
   726                           ;serial.c: 10:     RX4PPS = 0x11;
   727   001D66  0E11               	movlw	17
   728   001D68  6F15               	movwf	21,b	;volatile
   729   001D6A                     
   730                           ; BSR set to: 14
   731                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   732   001D6A  97E9               	bcf	233,3,b	;volatile
   733   001D6C                     
   734                           ; BSR set to: 14
   735                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   736   001D6C  95E8               	bcf	232,2,b	;volatile
   737                           
   738                           ;serial.c: 14:     SP4BRGL = 51;
   739   001D6E  0E33               	movlw	51
   740   001D70  6FE5               	movwf	229,b	;volatile
   741                           
   742                           ;serial.c: 15:     SP4BRGH = 0;
   743   001D72  0E00               	movlw	0
   744   001D74  6FE6               	movwf	230,b	;volatile
   745   001D76                     
   746                           ; BSR set to: 14
   747                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   748   001D76  89E7               	bsf	231,4,b	;volatile
   749   001D78                     
   750                           ; BSR set to: 14
   751                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   752   001D78  8BE8               	bsf	232,5,b	;volatile
   753   001D7A                     
   754                           ; BSR set to: 14
   755                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   756   001D7A  8FE7               	bsf	231,7,b	;volatile
   757   001D7C                     
   758                           ; BSR set to: 14
   759   001D7C  0012               	return		;funcret
   760   001D7E                     __end_of_initUSART4:
   761                           	callstack 0
   762                           
   763 ;; *************** function _colour_read_all *****************
   764 ;; Defined at:
   765 ;;		line 87 in file "color.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  c               2   14[COMRAM] PTR struct RGBC
   768 ;;		 -> color(8), 
   769 ;;  cf              2   16[COMRAM] PTR struct RGBC_rel
   770 ;;		 -> colorf(8), 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  total           2   30[COMRAM] int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;Total ram usage:       18 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 3
   789 ;; This function calls:
   790 ;;		___awdiv
   791 ;;		___wmul
   792 ;;		_color_read_Blue
   793 ;;		_color_read_Clear
   794 ;;		_color_read_Green
   795 ;;		_color_read_Red
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text2
   802   0010A2                     __ptext2:
   803                           	callstack 0
   804   0010A2                     _colour_read_all:
   805                           	callstack 27
   806   0010A2                     
   807                           ;color.c: 89:     c->R = color_read_Red();
   808   0010A2  ECF0  F00C         	call	_color_read_Red	;wreg free
   809   0010A6  C00F  FFD9         	movff	colour_read_all@c,fsr2l
   810   0010AA  C010  FFDA         	movff	colour_read_all@c+1,fsr2h
   811   0010AE  C005  FFDE         	movff	?_color_read_Red,postinc2
   812   0010B2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
   813                           
   814                           ;color.c: 90:     c->G = color_read_Green();
   815   0010B6  EC18  F00D         	call	_color_read_Green	;wreg free
   816   0010BA  EE20 F002          	lfsr	2,2
   817   0010BE  500F               	movf	colour_read_all@c^0,w,c
   818   0010C0  26D9               	addwf	fsr2l,f,c
   819   0010C2  5010               	movf	(colour_read_all@c+1)^0,w,c
   820   0010C4  22DA               	addwfc	fsr2h,f,c
   821   0010C6  C005  FFDE         	movff	?_color_read_Green,postinc2
   822   0010CA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
   823                           
   824                           ;color.c: 91:     c->B = color_read_Blue();
   825   0010CE  EC68  F00D         	call	_color_read_Blue	;wreg free
   826   0010D2  EE20 F004          	lfsr	2,4
   827   0010D6  500F               	movf	colour_read_all@c^0,w,c
   828   0010D8  26D9               	addwf	fsr2l,f,c
   829   0010DA  5010               	movf	(colour_read_all@c+1)^0,w,c
   830   0010DC  22DA               	addwfc	fsr2h,f,c
   831   0010DE  C005  FFDE         	movff	?_color_read_Blue,postinc2
   832   0010E2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
   833                           
   834                           ;color.c: 92:     c->C = color_read_Clear();
   835   0010E6  EC40  F00D         	call	_color_read_Clear	;wreg free
   836   0010EA  EE20 F006          	lfsr	2,6
   837   0010EE  500F               	movf	colour_read_all@c^0,w,c
   838   0010F0  26D9               	addwf	fsr2l,f,c
   839   0010F2  5010               	movf	(colour_read_all@c+1)^0,w,c
   840   0010F4  22DA               	addwfc	fsr2h,f,c
   841   0010F6  C005  FFDE         	movff	?_color_read_Clear,postinc2
   842   0010FA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
   843   0010FE                     
   844                           ;color.c: 94:     int total=(c->R)+(c->G)+(c->B)+(c->C);
   845   0010FE  EE20 F006          	lfsr	2,6
   846   001102  500F               	movf	colour_read_all@c^0,w,c
   847   001104  26D9               	addwf	fsr2l,f,c
   848   001106  5010               	movf	(colour_read_all@c+1)^0,w,c
   849   001108  22DA               	addwfc	fsr2h,f,c
   850   00110A  CFDE F013          	movff	postinc2,??_colour_read_all
   851   00110E  CFDD F014          	movff	postdec2,??_colour_read_all+1
   852   001112  EE20 F004          	lfsr	2,4
   853   001116  500F               	movf	colour_read_all@c^0,w,c
   854   001118  26D9               	addwf	fsr2l,f,c
   855   00111A  5010               	movf	(colour_read_all@c+1)^0,w,c
   856   00111C  22DA               	addwfc	fsr2h,f,c
   857   00111E  CFDE F015          	movff	postinc2,??_colour_read_all+2
   858   001122  CFDD F016          	movff	postdec2,??_colour_read_all+3
   859   001126  EE20 F002          	lfsr	2,2
   860   00112A  500F               	movf	colour_read_all@c^0,w,c
   861   00112C  26D9               	addwf	fsr2l,f,c
   862   00112E  5010               	movf	(colour_read_all@c+1)^0,w,c
   863   001130  22DA               	addwfc	fsr2h,f,c
   864   001132  CFDE F017          	movff	postinc2,??_colour_read_all+4
   865   001136  CFDD F018          	movff	postdec2,??_colour_read_all+5
   866   00113A  C00F  FFD9         	movff	colour_read_all@c,fsr2l
   867   00113E  C010  FFDA         	movff	colour_read_all@c+1,fsr2h
   868   001142  CFDE F019          	movff	postinc2,??_colour_read_all+6
   869   001146  CFDD F01A          	movff	postdec2,??_colour_read_all+7
   870   00114A  5017               	movf	(??_colour_read_all+4)^0,w,c
   871   00114C  2419               	addwf	(??_colour_read_all+6)^0,w,c
   872   00114E  6E1B               	movwf	(??_colour_read_all+8)^0,c
   873   001150  5018               	movf	(??_colour_read_all+5)^0,w,c
   874   001152  201A               	addwfc	(??_colour_read_all+7)^0,w,c
   875   001154  6E1C               	movwf	(??_colour_read_all+9)^0,c
   876   001156  5015               	movf	(??_colour_read_all+2)^0,w,c
   877   001158  241B               	addwf	(??_colour_read_all+8)^0,w,c
   878   00115A  6E1D               	movwf	(??_colour_read_all+10)^0,c
   879   00115C  5016               	movf	(??_colour_read_all+3)^0,w,c
   880   00115E  201C               	addwfc	(??_colour_read_all+9)^0,w,c
   881   001160  6E1E               	movwf	(??_colour_read_all+11)^0,c
   882   001162  5013               	movf	??_colour_read_all^0,w,c
   883   001164  241D               	addwf	(??_colour_read_all+10)^0,w,c
   884   001166  6E1F               	movwf	colour_read_all@total^0,c
   885   001168  5014               	movf	(??_colour_read_all+1)^0,w,c
   886   00116A  201E               	addwfc	(??_colour_read_all+11)^0,w,c
   887   00116C  6E20               	movwf	(colour_read_all@total+1)^0,c
   888   00116E                     
   889                           ;color.c: 96:     (cf->Rf)=((c->R)*10000)/total;
   890   00116E  C00F  FFD9         	movff	colour_read_all@c,fsr2l
   891   001172  C010  FFDA         	movff	colour_read_all@c+1,fsr2h
   892   001176  CFDE F001          	movff	postinc2,___wmul@multiplier
   893   00117A  CFDD F002          	movff	postdec2,___wmul@multiplier+1
   894   00117E  0E27               	movlw	39
   895   001180  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   896   001182  0E10               	movlw	16
   897   001184  6E03               	movwf	___wmul@multiplicand^0,c
   898   001186  EC9B  F00E         	call	___wmul	;wreg free
   899   00118A  C001  F007         	movff	?___wmul,___awdiv@dividend
   900   00118E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   901   001192  C01F  F009         	movff	colour_read_all@total,___awdiv@divisor
   902   001196  C020  F00A         	movff	colour_read_all@total+1,___awdiv@divisor+1
   903   00119A  ECC6  F00B         	call	___awdiv	;wreg free
   904   00119E  C011  FFD9         	movff	colour_read_all@cf,fsr2l
   905   0011A2  C012  FFDA         	movff	colour_read_all@cf+1,fsr2h
   906   0011A6  C007  FFDE         	movff	?___awdiv,postinc2
   907   0011AA  C008  FFDD         	movff	?___awdiv+1,postdec2
   908   0011AE                     
   909                           ;color.c: 97:     (cf->Bf)=((c->B)*10000)/total;
   910   0011AE  EE20 F004          	lfsr	2,4
   911   0011B2  500F               	movf	colour_read_all@c^0,w,c
   912   0011B4  26D9               	addwf	fsr2l,f,c
   913   0011B6  5010               	movf	(colour_read_all@c+1)^0,w,c
   914   0011B8  22DA               	addwfc	fsr2h,f,c
   915   0011BA  CFDE F001          	movff	postinc2,___wmul@multiplier
   916   0011BE  CFDD F002          	movff	postdec2,___wmul@multiplier+1
   917   0011C2  0E27               	movlw	39
   918   0011C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   919   0011C6  0E10               	movlw	16
   920   0011C8  6E03               	movwf	___wmul@multiplicand^0,c
   921   0011CA  EC9B  F00E         	call	___wmul	;wreg free
   922   0011CE  C001  F007         	movff	?___wmul,___awdiv@dividend
   923   0011D2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   924   0011D6  C01F  F009         	movff	colour_read_all@total,___awdiv@divisor
   925   0011DA  C020  F00A         	movff	colour_read_all@total+1,___awdiv@divisor+1
   926   0011DE  ECC6  F00B         	call	___awdiv	;wreg free
   927   0011E2  EE20 F004          	lfsr	2,4
   928   0011E6  5011               	movf	colour_read_all@cf^0,w,c
   929   0011E8  26D9               	addwf	fsr2l,f,c
   930   0011EA  5012               	movf	(colour_read_all@cf+1)^0,w,c
   931   0011EC  22DA               	addwfc	fsr2h,f,c
   932   0011EE  C007  FFDE         	movff	?___awdiv,postinc2
   933   0011F2  C008  FFDD         	movff	?___awdiv+1,postdec2
   934   0011F6                     
   935                           ;color.c: 98:     (cf->Gf)=((c->G)*10000)/total;
   936   0011F6  EE20 F002          	lfsr	2,2
   937   0011FA  500F               	movf	colour_read_all@c^0,w,c
   938   0011FC  26D9               	addwf	fsr2l,f,c
   939   0011FE  5010               	movf	(colour_read_all@c+1)^0,w,c
   940   001200  22DA               	addwfc	fsr2h,f,c
   941   001202  CFDE F001          	movff	postinc2,___wmul@multiplier
   942   001206  CFDD F002          	movff	postdec2,___wmul@multiplier+1
   943   00120A  0E27               	movlw	39
   944   00120C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   945   00120E  0E10               	movlw	16
   946   001210  6E03               	movwf	___wmul@multiplicand^0,c
   947   001212  EC9B  F00E         	call	___wmul	;wreg free
   948   001216  C001  F007         	movff	?___wmul,___awdiv@dividend
   949   00121A  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   950   00121E  C01F  F009         	movff	colour_read_all@total,___awdiv@divisor
   951   001222  C020  F00A         	movff	colour_read_all@total+1,___awdiv@divisor+1
   952   001226  ECC6  F00B         	call	___awdiv	;wreg free
   953   00122A  EE20 F002          	lfsr	2,2
   954   00122E  5011               	movf	colour_read_all@cf^0,w,c
   955   001230  26D9               	addwf	fsr2l,f,c
   956   001232  5012               	movf	(colour_read_all@cf+1)^0,w,c
   957   001234  22DA               	addwfc	fsr2h,f,c
   958   001236  C007  FFDE         	movff	?___awdiv,postinc2
   959   00123A  C008  FFDD         	movff	?___awdiv+1,postdec2
   960   00123E                     
   961                           ;color.c: 99:     (cf->Cf)=((c->C)*10000)/total;
   962   00123E  EE20 F006          	lfsr	2,6
   963   001242  500F               	movf	colour_read_all@c^0,w,c
   964   001244  26D9               	addwf	fsr2l,f,c
   965   001246  5010               	movf	(colour_read_all@c+1)^0,w,c
   966   001248  22DA               	addwfc	fsr2h,f,c
   967   00124A  CFDE F001          	movff	postinc2,___wmul@multiplier
   968   00124E  CFDD F002          	movff	postdec2,___wmul@multiplier+1
   969   001252  0E27               	movlw	39
   970   001254  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   971   001256  0E10               	movlw	16
   972   001258  6E03               	movwf	___wmul@multiplicand^0,c
   973   00125A  EC9B  F00E         	call	___wmul	;wreg free
   974   00125E  C001  F007         	movff	?___wmul,___awdiv@dividend
   975   001262  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
   976   001266  C01F  F009         	movff	colour_read_all@total,___awdiv@divisor
   977   00126A  C020  F00A         	movff	colour_read_all@total+1,___awdiv@divisor+1
   978   00126E  ECC6  F00B         	call	___awdiv	;wreg free
   979   001272  EE20 F006          	lfsr	2,6
   980   001276  5011               	movf	colour_read_all@cf^0,w,c
   981   001278  26D9               	addwf	fsr2l,f,c
   982   00127A  5012               	movf	(colour_read_all@cf+1)^0,w,c
   983   00127C  22DA               	addwfc	fsr2h,f,c
   984   00127E  C007  FFDE         	movff	?___awdiv,postinc2
   985   001282  C008  FFDD         	movff	?___awdiv+1,postdec2
   986   001286  0012               	return		;funcret
   987   001288                     __end_of_colour_read_all:
   988                           	callstack 0
   989                           
   990 ;; *************** function _color_read_Red *****************
   991 ;; Defined at:
   992 ;;		line 31 in file "color.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  tmp             2    9[COMRAM] unsigned int 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2    4[COMRAM] unsigned int 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;Total ram usage:        7 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 2
  1013 ;; This function calls:
  1014 ;;		_I2C_2_Master_Read
  1015 ;;		_I2C_2_Master_RepStart
  1016 ;;		_I2C_2_Master_Start
  1017 ;;		_I2C_2_Master_Stop
  1018 ;;		_I2C_2_Master_Write
  1019 ;; This function is called by:
  1020 ;;		_colour_read_all
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text3
  1025   0019E0                     __ptext3:
  1026                           	callstack 0
  1027   0019E0                     _color_read_Red:
  1028                           	callstack 27
  1029   0019E0                     
  1030                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  1031   0019E0  ECEB  F00E         	call	_I2C_2_Master_Start	;wreg free
  1032                           
  1033                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  1034   0019E4  0E52               	movlw	82
  1035   0019E6  ECDB  F00E         	call	_I2C_2_Master_Write
  1036                           
  1037                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
  1038   0019EA  0EB6               	movlw	182
  1039   0019EC  ECDB  F00E         	call	_I2C_2_Master_Write
  1040                           
  1041                           ;color.c: 37:  I2C_2_Master_RepStart();
  1042   0019F0  ECE1  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1043                           
  1044                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  1045   0019F4  0E53               	movlw	83
  1046   0019F6  ECDB  F00E         	call	_I2C_2_Master_Write
  1047                           
  1048                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  1049   0019FA  0E01               	movlw	1
  1050   0019FC  ECD9  F00D         	call	_I2C_2_Master_Read
  1051   001A00  6E07               	movwf	??_color_read_Red^0,c
  1052   001A02  5007               	movf	??_color_read_Red^0,w,c
  1053   001A04  6E0A               	movwf	color_read_Red@tmp^0,c
  1054   001A06  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1055                           
  1056                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1057   001A08  0E00               	movlw	0
  1058   001A0A  ECD9  F00D         	call	_I2C_2_Master_Read
  1059   001A0E  6E07               	movwf	??_color_read_Red^0,c
  1060   001A10  5007               	movf	??_color_read_Red^0,w,c
  1061   001A12  6E09               	movwf	(??_color_read_Red+2)^0,c
  1062   001A14  6A08               	clrf	(??_color_read_Red+1)^0,c
  1063   001A16  500A               	movf	color_read_Red@tmp^0,w,c
  1064   001A18  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1065   001A1A  6E0A               	movwf	color_read_Red@tmp^0,c
  1066   001A1C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1067   001A1E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1068   001A20  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1069                           
  1070                           ;color.c: 41:  I2C_2_Master_Stop();
  1071   001A22  ECE6  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1072   001A26                     
  1073                           ;color.c: 42:  return tmp;
  1074   001A26  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1075   001A2A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1076   001A2E  0012               	return		;funcret
  1077   001A30                     __end_of_color_read_Red:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _color_read_Green *****************
  1081 ;; Defined at:
  1082 ;;		line 44 in file "color.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  tmp             2    9[COMRAM] unsigned int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    4[COMRAM] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 2
  1103 ;; This function calls:
  1104 ;;		_I2C_2_Master_Read
  1105 ;;		_I2C_2_Master_RepStart
  1106 ;;		_I2C_2_Master_Start
  1107 ;;		_I2C_2_Master_Stop
  1108 ;;		_I2C_2_Master_Write
  1109 ;; This function is called by:
  1110 ;;		_colour_read_all
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text4
  1115   001A30                     __ptext4:
  1116                           	callstack 0
  1117   001A30                     _color_read_Green:
  1118                           	callstack 27
  1119   001A30                     
  1120                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  1121   001A30  ECEB  F00E         	call	_I2C_2_Master_Start	;wreg free
  1122                           
  1123                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  1124   001A34  0E52               	movlw	82
  1125   001A36  ECDB  F00E         	call	_I2C_2_Master_Write
  1126                           
  1127                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  1128   001A3A  0EB8               	movlw	184
  1129   001A3C  ECDB  F00E         	call	_I2C_2_Master_Write
  1130                           
  1131                           ;color.c: 50:     I2C_2_Master_RepStart();
  1132   001A40  ECE1  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1133                           
  1134                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  1135   001A44  0E53               	movlw	83
  1136   001A46  ECDB  F00E         	call	_I2C_2_Master_Write
  1137                           
  1138                           ;color.c: 52:     tmp=I2C_2_Master_Read(1);
  1139   001A4A  0E01               	movlw	1
  1140   001A4C  ECD9  F00D         	call	_I2C_2_Master_Read
  1141   001A50  6E07               	movwf	??_color_read_Green^0,c
  1142   001A52  5007               	movf	??_color_read_Green^0,w,c
  1143   001A54  6E0A               	movwf	color_read_Green@tmp^0,c
  1144   001A56  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1145                           
  1146                           ;color.c: 53:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1147   001A58  0E00               	movlw	0
  1148   001A5A  ECD9  F00D         	call	_I2C_2_Master_Read
  1149   001A5E  6E07               	movwf	??_color_read_Green^0,c
  1150   001A60  5007               	movf	??_color_read_Green^0,w,c
  1151   001A62  6E09               	movwf	(??_color_read_Green+2)^0,c
  1152   001A64  6A08               	clrf	(??_color_read_Green+1)^0,c
  1153   001A66  500A               	movf	color_read_Green@tmp^0,w,c
  1154   001A68  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1155   001A6A  6E0A               	movwf	color_read_Green@tmp^0,c
  1156   001A6C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1157   001A6E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1158   001A70  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1159                           
  1160                           ;color.c: 54:     I2C_2_Master_Stop();
  1161   001A72  ECE6  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1162   001A76                     
  1163                           ;color.c: 55:     return tmp;
  1164   001A76  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1165   001A7A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1166   001A7E  0012               	return		;funcret
  1167   001A80                     __end_of_color_read_Green:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _color_read_Clear *****************
  1171 ;; Defined at:
  1172 ;;		line 73 in file "color.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  tmp             2    9[COMRAM] unsigned int 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    4[COMRAM] unsigned int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;Total ram usage:        7 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		_I2C_2_Master_Read
  1195 ;;		_I2C_2_Master_RepStart
  1196 ;;		_I2C_2_Master_Start
  1197 ;;		_I2C_2_Master_Stop
  1198 ;;		_I2C_2_Master_Write
  1199 ;; This function is called by:
  1200 ;;		_colour_read_all
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text5
  1205   001A80                     __ptext5:
  1206                           	callstack 0
  1207   001A80                     _color_read_Clear:
  1208                           	callstack 27
  1209   001A80                     
  1210                           ;color.c: 75:     unsigned int tmp;;color.c: 76:     I2C_2_Master_Start();
  1211   001A80  ECEB  F00E         	call	_I2C_2_Master_Start	;wreg free
  1212                           
  1213                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x00);
  1214   001A84  0E52               	movlw	82
  1215   001A86  ECDB  F00E         	call	_I2C_2_Master_Write
  1216                           
  1217                           ;color.c: 78:     I2C_2_Master_Write(0xA0 | 0x14);
  1218   001A8A  0EB4               	movlw	180
  1219   001A8C  ECDB  F00E         	call	_I2C_2_Master_Write
  1220                           
  1221                           ;color.c: 79:     I2C_2_Master_RepStart();
  1222   001A90  ECE1  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1223                           
  1224                           ;color.c: 80:     I2C_2_Master_Write(0x52 | 0x01);
  1225   001A94  0E53               	movlw	83
  1226   001A96  ECDB  F00E         	call	_I2C_2_Master_Write
  1227                           
  1228                           ;color.c: 81:     tmp=I2C_2_Master_Read(1);
  1229   001A9A  0E01               	movlw	1
  1230   001A9C  ECD9  F00D         	call	_I2C_2_Master_Read
  1231   001AA0  6E07               	movwf	??_color_read_Clear^0,c
  1232   001AA2  5007               	movf	??_color_read_Clear^0,w,c
  1233   001AA4  6E0A               	movwf	color_read_Clear@tmp^0,c
  1234   001AA6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1235                           
  1236                           ;color.c: 82:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1237   001AA8  0E00               	movlw	0
  1238   001AAA  ECD9  F00D         	call	_I2C_2_Master_Read
  1239   001AAE  6E07               	movwf	??_color_read_Clear^0,c
  1240   001AB0  5007               	movf	??_color_read_Clear^0,w,c
  1241   001AB2  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1242   001AB4  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1243   001AB6  500A               	movf	color_read_Clear@tmp^0,w,c
  1244   001AB8  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1245   001ABA  6E0A               	movwf	color_read_Clear@tmp^0,c
  1246   001ABC  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1247   001ABE  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1248   001AC0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1249                           
  1250                           ;color.c: 83:     I2C_2_Master_Stop();
  1251   001AC2  ECE6  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1252   001AC6                     
  1253                           ;color.c: 84:     return tmp;
  1254   001AC6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1255   001ACA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1256   001ACE  0012               	return		;funcret
  1257   001AD0                     __end_of_color_read_Clear:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _color_read_Blue *****************
  1261 ;; Defined at:
  1262 ;;		line 58 in file "color.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  tmp             2    9[COMRAM] unsigned int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    4[COMRAM] unsigned int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1279 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1280 ;;Total ram usage:        7 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		_I2C_2_Master_Read
  1285 ;;		_I2C_2_Master_RepStart
  1286 ;;		_I2C_2_Master_Start
  1287 ;;		_I2C_2_Master_Stop
  1288 ;;		_I2C_2_Master_Write
  1289 ;; This function is called by:
  1290 ;;		_colour_read_all
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text6
  1295   001AD0                     __ptext6:
  1296                           	callstack 0
  1297   001AD0                     _color_read_Blue:
  1298                           	callstack 27
  1299   001AD0                     
  1300                           ;color.c: 60:     unsigned int tmp;;color.c: 61:     I2C_2_Master_Start();
  1301   001AD0  ECEB  F00E         	call	_I2C_2_Master_Start	;wreg free
  1302                           
  1303                           ;color.c: 62:     I2C_2_Master_Write(0x52 | 0x00);
  1304   001AD4  0E52               	movlw	82
  1305   001AD6  ECDB  F00E         	call	_I2C_2_Master_Write
  1306                           
  1307                           ;color.c: 63:     I2C_2_Master_Write(0xA0 | 0x1A);
  1308   001ADA  0EBA               	movlw	186
  1309   001ADC  ECDB  F00E         	call	_I2C_2_Master_Write
  1310                           
  1311                           ;color.c: 64:     I2C_2_Master_RepStart();
  1312   001AE0  ECE1  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1313                           
  1314                           ;color.c: 65:     I2C_2_Master_Write(0x52 | 0x01);
  1315   001AE4  0E53               	movlw	83
  1316   001AE6  ECDB  F00E         	call	_I2C_2_Master_Write
  1317                           
  1318                           ;color.c: 66:     tmp=I2C_2_Master_Read(1);
  1319   001AEA  0E01               	movlw	1
  1320   001AEC  ECD9  F00D         	call	_I2C_2_Master_Read
  1321   001AF0  6E07               	movwf	??_color_read_Blue^0,c
  1322   001AF2  5007               	movf	??_color_read_Blue^0,w,c
  1323   001AF4  6E0A               	movwf	color_read_Blue@tmp^0,c
  1324   001AF6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1325                           
  1326                           ;color.c: 67:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1327   001AF8  0E00               	movlw	0
  1328   001AFA  ECD9  F00D         	call	_I2C_2_Master_Read
  1329   001AFE  6E07               	movwf	??_color_read_Blue^0,c
  1330   001B00  5007               	movf	??_color_read_Blue^0,w,c
  1331   001B02  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1332   001B04  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1333   001B06  500A               	movf	color_read_Blue@tmp^0,w,c
  1334   001B08  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1335   001B0A  6E0A               	movwf	color_read_Blue@tmp^0,c
  1336   001B0C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1337   001B0E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1338   001B10  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1339                           
  1340                           ;color.c: 68:     I2C_2_Master_Stop();
  1341   001B12  ECE6  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1342   001B16                     
  1343                           ;color.c: 69:     return tmp;
  1344   001B16  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1345   001B1A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1346   001B1E  0012               	return		;funcret
  1347   001B20                     __end_of_color_read_Blue:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _I2C_2_Master_RepStart *****************
  1351 ;; Defined at:
  1352 ;;		line 33 in file "i2c.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 1
  1373 ;; This function calls:
  1374 ;;		_I2C_2_Master_Idle
  1375 ;; This function is called by:
  1376 ;;		_color_read_Red
  1377 ;;		_color_read_Green
  1378 ;;		_color_read_Blue
  1379 ;;		_color_read_Clear
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text7
  1384   001DC2                     __ptext7:
  1385                           	callstack 0
  1386   001DC2                     _I2C_2_Master_RepStart:
  1387                           	callstack 27
  1388   001DC2                     
  1389                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1390   001DC2  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1391   001DC6                     
  1392                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1393   001DC6  010E               	movlb	14	; () banked
  1394   001DC8  83DA               	bsf	218,1,b	;volatile
  1395   001DCA                     
  1396                           ; BSR set to: 14
  1397   001DCA  0012               	return		;funcret
  1398   001DCC                     __end_of_I2C_2_Master_RepStart:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _I2C_2_Master_Read *****************
  1402 ;; Defined at:
  1403 ;;		line 51 in file "i2c.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  ack             1    wreg     unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  ack             1    2[COMRAM] unsigned char 
  1408 ;;  tmp             1    3[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1422 ;;Total ram usage:        3 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 1
  1425 ;; This function calls:
  1426 ;;		_I2C_2_Master_Idle
  1427 ;; This function is called by:
  1428 ;;		_color_read_Red
  1429 ;;		_color_read_Green
  1430 ;;		_color_read_Blue
  1431 ;;		_color_read_Clear
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text8
  1436   001BB2                     __ptext8:
  1437                           	callstack 0
  1438   001BB2                     _I2C_2_Master_Read:
  1439                           	callstack 27
  1440                           
  1441                           ; BSR set to: 14
  1442                           ;incstack = 0
  1443                           ;I2C_2_Master_Read@ack stored from wreg
  1444   001BB2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1445   001BB4                     
  1446                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1447   001BB4  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1448   001BB8                     
  1449                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1450   001BB8  010E               	movlb	14	; () banked
  1451   001BBA  87DA               	bsf	218,3,b	;volatile
  1452                           
  1453                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1454   001BBC  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1455   001BC0                     
  1456                           ;i2c.c: 57:   tmp = SSP2BUF;
  1457   001BC0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1458                           
  1459                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1460   001BC4  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1461   001BC8                     
  1462                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1463   001BC8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1464   001BCA  B4D8               	btfsc	status,2,c
  1465   001BCC  EFEA  F00D         	goto	u851
  1466   001BD0  EFEE  F00D         	goto	u850
  1467   001BD4                     u851:
  1468   001BD4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1469   001BD6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1470   001BD8  EFEF  F00D         	goto	u868
  1471   001BDC                     u850:
  1472   001BDC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1473   001BDE                     u868:
  1474   001BDE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1475   001BE0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1476   001BE2  010E               	movlb	14	; () banked
  1477   001BE4  51DA               	movf	218,w,b	;volatile
  1478   001BE6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1479   001BE8  0BDF               	andlw	-33
  1480   001BEA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1481   001BEC  6FDA               	movwf	218,b	;volatile
  1482   001BEE                     
  1483                           ; BSR set to: 14
  1484                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1485   001BEE  89DA               	bsf	218,4,b	;volatile
  1486   001BF0                     
  1487                           ; BSR set to: 14
  1488                           ;i2c.c: 61:   return tmp;
  1489   001BF0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1490   001BF2                     
  1491                           ; BSR set to: 14
  1492   001BF2  0012               	return		;funcret
  1493   001BF4                     __end_of_I2C_2_Master_Read:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function ___wmul *****************
  1497 ;; Defined at:
  1498 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  multiplier      2    0[COMRAM] unsigned int 
  1501 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  product         2    4[COMRAM] unsigned int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    0[COMRAM] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, prodl, prodh
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:        6 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_colour_read_all
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text9
  1527   001D36                     __ptext9:
  1528                           	callstack 0
  1529   001D36                     ___wmul:
  1530                           	callstack 29
  1531   001D36  5001               	movf	___wmul@multiplier^0,w,c
  1532   001D38  0203               	mulwf	___wmul@multiplicand^0,c
  1533   001D3A  CFF3 F005          	movff	prodl,___wmul@product
  1534   001D3E  CFF4 F006          	movff	prodh,___wmul@product+1
  1535   001D42  5001               	movf	___wmul@multiplier^0,w,c
  1536   001D44  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1537   001D46  50F3               	movf	243,w,c
  1538   001D48  2606               	addwf	(___wmul@product+1)^0,f,c
  1539   001D4A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1540   001D4C  0203               	mulwf	___wmul@multiplicand^0,c
  1541   001D4E  50F3               	movf	243,w,c
  1542   001D50  2606               	addwf	(___wmul@product+1)^0,f,c
  1543   001D52  C005  F001         	movff	___wmul@product,?___wmul
  1544   001D56  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1545   001D5A  0012               	return		;funcret
  1546   001D5C                     __end_of___wmul:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function ___awdiv *****************
  1550 ;; Defined at:
  1551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dividend        2    6[COMRAM] int 
  1554 ;;  divisor         2    8[COMRAM] int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  quotient        2   12[COMRAM] int 
  1557 ;;  sign            1   11[COMRAM] unsigned char 
  1558 ;;  counter         1   10[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    6[COMRAM] int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;Total ram usage:        8 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_colour_read_all
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text10
  1582   00178C                     __ptext10:
  1583                           	callstack 0
  1584   00178C                     ___awdiv:
  1585                           	callstack 29
  1586   00178C  0E00               	movlw	0
  1587   00178E  6E0C               	movwf	___awdiv@sign^0,c
  1588   001790  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1589   001792  EFCF  F00B         	goto	u900
  1590   001796  EFCD  F00B         	goto	u901
  1591   00179A                     u901:
  1592   00179A  EFD5  F00B         	goto	l1712
  1593   00179E                     u900:
  1594   00179E  6C09               	negf	___awdiv@divisor^0,c
  1595   0017A0  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1596   0017A2  B0D8               	btfsc	status,0,c
  1597   0017A4  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1598   0017A6  0E01               	movlw	1
  1599   0017A8  6E0C               	movwf	___awdiv@sign^0,c
  1600   0017AA                     l1712:
  1601   0017AA  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1602   0017AC  EFDC  F00B         	goto	u910
  1603   0017B0  EFDA  F00B         	goto	u911
  1604   0017B4                     u911:
  1605   0017B4  EFE2  F00B         	goto	l1718
  1606   0017B8                     u910:
  1607   0017B8  6C07               	negf	___awdiv@dividend^0,c
  1608   0017BA  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1609   0017BC  B0D8               	btfsc	status,0,c
  1610   0017BE  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1611   0017C0  0E01               	movlw	1
  1612   0017C2  1A0C               	xorwf	___awdiv@sign^0,f,c
  1613   0017C4                     l1718:
  1614   0017C4  0E00               	movlw	0
  1615   0017C6  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1616   0017C8  0E00               	movlw	0
  1617   0017CA  6E0D               	movwf	___awdiv@quotient^0,c
  1618   0017CC  5009               	movf	___awdiv@divisor^0,w,c
  1619   0017CE  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1620   0017D0  B4D8               	btfsc	status,2,c
  1621   0017D2  EFED  F00B         	goto	u921
  1622   0017D6  EFEF  F00B         	goto	u920
  1623   0017DA                     u921:
  1624   0017DA  EF17  F00C         	goto	l1740
  1625   0017DE                     u920:
  1626   0017DE  0E01               	movlw	1
  1627   0017E0  6E0B               	movwf	___awdiv@counter^0,c
  1628   0017E2  EFF7  F00B         	goto	l1726
  1629   0017E6                     l1724:
  1630   0017E6  90D8               	bcf	status,0,c
  1631   0017E8  3609               	rlcf	___awdiv@divisor^0,f,c
  1632   0017EA  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1633   0017EC  2A0B               	incf	___awdiv@counter^0,f,c
  1634   0017EE                     l1726:
  1635   0017EE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1636   0017F0  EFFC  F00B         	goto	u931
  1637   0017F4  EFFE  F00B         	goto	u930
  1638   0017F8                     u931:
  1639   0017F8  EFF3  F00B         	goto	l1724
  1640   0017FC                     u930:
  1641   0017FC                     l1728:
  1642   0017FC  90D8               	bcf	status,0,c
  1643   0017FE  360D               	rlcf	___awdiv@quotient^0,f,c
  1644   001800  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1645   001802  5009               	movf	___awdiv@divisor^0,w,c
  1646   001804  5C07               	subwf	___awdiv@dividend^0,w,c
  1647   001806  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1648   001808  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1649   00180A  A0D8               	btfss	status,0,c
  1650   00180C  EF0A  F00C         	goto	u941
  1651   001810  EF0C  F00C         	goto	u940
  1652   001814                     u941:
  1653   001814  EF11  F00C         	goto	l1736
  1654   001818                     u940:
  1655   001818  5009               	movf	___awdiv@divisor^0,w,c
  1656   00181A  5E07               	subwf	___awdiv@dividend^0,f,c
  1657   00181C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1658   00181E  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1659   001820  800D               	bsf	___awdiv@quotient^0,0,c
  1660   001822                     l1736:
  1661   001822  90D8               	bcf	status,0,c
  1662   001824  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1663   001826  3209               	rrcf	___awdiv@divisor^0,f,c
  1664   001828  2E0B               	decfsz	___awdiv@counter^0,f,c
  1665   00182A  EFFE  F00B         	goto	l1728
  1666   00182E                     l1740:
  1667   00182E  500C               	movf	___awdiv@sign^0,w,c
  1668   001830  B4D8               	btfsc	status,2,c
  1669   001832  EF1D  F00C         	goto	u951
  1670   001836  EF1F  F00C         	goto	u950
  1671   00183A                     u951:
  1672   00183A  EF23  F00C         	goto	l1744
  1673   00183E                     u950:
  1674   00183E  6C0D               	negf	___awdiv@quotient^0,c
  1675   001840  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1676   001842  B0D8               	btfsc	status,0,c
  1677   001844  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1678   001846                     l1744:
  1679   001846  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1680   00184A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1681   00184E  0012               	return		;funcret
  1682   001850                     __end_of___awdiv:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _color_click_init *****************
  1686 ;; Defined at:
  1687 ;;		line 6 in file "color.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 3
  1708 ;; This function calls:
  1709 ;;		_I2C_2_Master_Init
  1710 ;;		_color_writetoaddr
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text11
  1717   001C34                     __ptext11:
  1718                           	callstack 0
  1719   001C34                     _color_click_init:
  1720                           	callstack 27
  1721   001C34                     
  1722                           ;color.c: 9:     I2C_2_Master_Init();
  1723   001C34  EC72  F00E         	call	_I2C_2_Master_Init	;wreg free
  1724   001C38                     
  1725                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  1726   001C38  0E01               	movlw	1
  1727   001C3A  6E03               	movwf	color_writetoaddr@value^0,c
  1728   001C3C  0E00               	movlw	0
  1729   001C3E  ECBF  F00E         	call	_color_writetoaddr
  1730   001C42                     
  1731                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1732   001C42  0E3F               	movlw	63
  1733   001C44  6E05               	movwf	??_color_click_init^0,c
  1734   001C46  0E55               	movlw	85
  1735   001C48                     u977:
  1736   001C48  2EE8               	decfsz	wreg,f,c
  1737   001C4A  D7FE               	bra	u977
  1738   001C4C  2E05               	decfsz	??_color_click_init^0,f,c
  1739   001C4E  D7FC               	bra	u977
  1740   001C50  F000               	nop	
  1741   001C52                     
  1742                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  1743   001C52  0E03               	movlw	3
  1744   001C54  6E03               	movwf	color_writetoaddr@value^0,c
  1745   001C56  0E00               	movlw	0
  1746   001C58  ECBF  F00E         	call	_color_writetoaddr
  1747   001C5C                     
  1748                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  1749   001C5C  0ED5               	movlw	213
  1750   001C5E  6E03               	movwf	color_writetoaddr@value^0,c
  1751   001C60  0E01               	movlw	1
  1752   001C62  ECBF  F00E         	call	_color_writetoaddr
  1753   001C66                     
  1754                           ;color.c: 20:     color_writetoaddr(0x00, 0x13);
  1755   001C66  0E13               	movlw	19
  1756   001C68  6E03               	movwf	color_writetoaddr@value^0,c
  1757   001C6A  0E00               	movlw	0
  1758   001C6C  ECBF  F00E         	call	_color_writetoaddr
  1759   001C70  0012               	return		;funcret
  1760   001C72                     __end_of_color_click_init:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _color_writetoaddr *****************
  1764 ;; Defined at:
  1765 ;;		line 23 in file "color.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  address         1    wreg     unsigned char 
  1768 ;;  value           1    2[COMRAM] unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  address         1    3[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;Total ram usage:        2 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		_I2C_2_Master_Start
  1789 ;;		_I2C_2_Master_Stop
  1790 ;;		_I2C_2_Master_Write
  1791 ;; This function is called by:
  1792 ;;		_color_click_init
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text12
  1797   001D7E                     __ptext12:
  1798                           	callstack 0
  1799   001D7E                     _color_writetoaddr:
  1800                           	callstack 27
  1801                           
  1802                           ;incstack = 0
  1803                           ;color_writetoaddr@address stored from wreg
  1804   001D7E  6E04               	movwf	color_writetoaddr@address^0,c
  1805   001D80                     
  1806                           ;color.c: 24:     I2C_2_Master_Start();
  1807   001D80  ECEB  F00E         	call	_I2C_2_Master_Start	;wreg free
  1808                           
  1809                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  1810   001D84  0E52               	movlw	82
  1811   001D86  ECDB  F00E         	call	_I2C_2_Master_Write
  1812                           
  1813                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  1814   001D8A  5004               	movf	color_writetoaddr@address^0,w,c
  1815   001D8C  0980               	iorlw	128
  1816   001D8E  ECDB  F00E         	call	_I2C_2_Master_Write
  1817                           
  1818                           ;color.c: 27:     I2C_2_Master_Write(value);
  1819   001D92  5003               	movf	color_writetoaddr@value^0,w,c
  1820   001D94  ECDB  F00E         	call	_I2C_2_Master_Write
  1821                           
  1822                           ;color.c: 28:     I2C_2_Master_Stop();
  1823   001D98  ECE6  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1824   001D9C  0012               	return		;funcret
  1825   001D9E                     __end_of_color_writetoaddr:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _I2C_2_Master_Write *****************
  1829 ;; Defined at:
  1830 ;;		line 45 in file "i2c.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  data_byte       1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  data_byte       1    1[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1848 ;;Total ram usage:        1 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 1
  1851 ;; This function calls:
  1852 ;;		_I2C_2_Master_Idle
  1853 ;; This function is called by:
  1854 ;;		_color_writetoaddr
  1855 ;;		_color_read_Red
  1856 ;;		_color_read_Green
  1857 ;;		_color_read_Blue
  1858 ;;		_color_read_Clear
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text13
  1863   001DB6                     __ptext13:
  1864                           	callstack 0
  1865   001DB6                     _I2C_2_Master_Write:
  1866                           	callstack 27
  1867                           
  1868                           ;incstack = 0
  1869                           ;I2C_2_Master_Write@data_byte stored from wreg
  1870   001DB6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1871   001DB8                     
  1872                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1873   001DB8  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1874   001DBC                     
  1875                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1876   001DBC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1877   001DC0  0012               	return		;funcret
  1878   001DC2                     __end_of_I2C_2_Master_Write:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _I2C_2_Master_Stop *****************
  1882 ;; Defined at:
  1883 ;;		line 39 in file "i2c.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 1
  1904 ;; This function calls:
  1905 ;;		_I2C_2_Master_Idle
  1906 ;; This function is called by:
  1907 ;;		_color_writetoaddr
  1908 ;;		_color_read_Red
  1909 ;;		_color_read_Green
  1910 ;;		_color_read_Blue
  1911 ;;		_color_read_Clear
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text14
  1916   001DCC                     __ptext14:
  1917                           	callstack 0
  1918   001DCC                     _I2C_2_Master_Stop:
  1919                           	callstack 27
  1920   001DCC                     
  1921                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1922   001DCC  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1923   001DD0                     
  1924                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1925   001DD0  010E               	movlb	14	; () banked
  1926   001DD2  85DA               	bsf	218,2,b	;volatile
  1927   001DD4                     
  1928                           ; BSR set to: 14
  1929   001DD4  0012               	return		;funcret
  1930   001DD6                     __end_of_I2C_2_Master_Stop:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _I2C_2_Master_Start *****************
  1934 ;; Defined at:
  1935 ;;		line 27 in file "i2c.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 1
  1956 ;; This function calls:
  1957 ;;		_I2C_2_Master_Idle
  1958 ;; This function is called by:
  1959 ;;		_color_writetoaddr
  1960 ;;		_color_read_Red
  1961 ;;		_color_read_Green
  1962 ;;		_color_read_Blue
  1963 ;;		_color_read_Clear
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text15
  1968   001DD6                     __ptext15:
  1969                           	callstack 0
  1970   001DD6                     _I2C_2_Master_Start:
  1971                           	callstack 27
  1972   001DD6                     
  1973                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1974   001DD6  EC87  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1975   001DDA                     
  1976                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1977   001DDA  010E               	movlb	14	; () banked
  1978   001DDC  81DA               	bsf	218,0,b	;volatile
  1979   001DDE                     
  1980                           ; BSR set to: 14
  1981   001DDE  0012               	return		;funcret
  1982   001DE0                     __end_of_I2C_2_Master_Start:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _I2C_2_Master_Idle *****************
  1986 ;; Defined at:
  1987 ;;		line 22 in file "i2c.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_I2C_2_Master_Start
  2011 ;;		_I2C_2_Master_RepStart
  2012 ;;		_I2C_2_Master_Stop
  2013 ;;		_I2C_2_Master_Write
  2014 ;;		_I2C_2_Master_Read
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text16
  2019   001D0E                     __ptext16:
  2020                           	callstack 0
  2021   001D0E                     _I2C_2_Master_Idle:
  2022                           	callstack 27
  2023   001D0E                     l71:
  2024   001D0E  010E               	movlb	14	; () banked
  2025   001D10  B5D8               	btfsc	216,2,b	;volatile
  2026   001D12  EF8D  F00E         	goto	u801
  2027   001D16  EF8F  F00E         	goto	u800
  2028   001D1A                     u801:
  2029   001D1A  EF87  F00E         	goto	l71
  2030   001D1E                     u800:
  2031   001D1E                     
  2032                           ; BSR set to: 14
  2033   001D1E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2034   001D22  0E1F               	movlw	31
  2035   001D24  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2036   001D26  A4D8               	btfss	status,2,c
  2037   001D28  EF98  F00E         	goto	u811
  2038   001D2C  EF9A  F00E         	goto	u810
  2039   001D30                     u811:
  2040   001D30  EF87  F00E         	goto	l71
  2041   001D34                     u810:
  2042   001D34                     
  2043                           ; BSR set to: 14
  2044   001D34  0012               	return		;funcret
  2045   001D36                     __end_of_I2C_2_Master_Idle:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _I2C_2_Master_Init *****************
  2049 ;; Defined at:
  2050 ;;		line 4 in file "i2c.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_color_click_init
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text17
  2079   001CE4                     __ptext17:
  2080                           	callstack 0
  2081   001CE4                     _I2C_2_Master_Init:
  2082                           	callstack 29
  2083   001CE4                     
  2084                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2085   001CE4  010E               	movlb	14	; () banked
  2086   001CE6  51D9               	movf	217,w,b	;volatile
  2087   001CE8  0BF0               	andlw	-16
  2088   001CEA  0908               	iorlw	8
  2089   001CEC  6FD9               	movwf	217,b	;volatile
  2090   001CEE                     
  2091                           ; BSR set to: 14
  2092                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2093   001CEE  8BD9               	bsf	217,5,b	;volatile
  2094                           
  2095                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2096   001CF0  0E9F               	movlw	159
  2097   001CF2  6FD6               	movwf	214,b	;volatile
  2098   001CF4                     
  2099                           ; BSR set to: 14
  2100                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2101   001CF4  8A84               	bsf	132,5,c	;volatile
  2102   001CF6                     
  2103                           ; BSR set to: 14
  2104                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2105   001CF6  8C84               	bsf	132,6,c	;volatile
  2106   001CF8                     
  2107                           ; BSR set to: 14
  2108                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2109   001CF8  9BA7               	bcf	167,5,b	;volatile
  2110   001CFA                     
  2111                           ; BSR set to: 14
  2112                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2113   001CFA  9DA7               	bcf	167,6,b	;volatile
  2114                           
  2115                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2116   001CFC  0E1D               	movlw	29
  2117   001CFE  6F1D               	movwf	29,b	;volatile
  2118                           
  2119                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2120   001D00  0E1E               	movlw	30
  2121   001D02  6F1C               	movwf	28,b	;volatile
  2122                           
  2123                           ;i2c.c: 18:   RD5PPS=0x1C;
  2124   001D04  0E1C               	movlw	28
  2125   001D06  6F6F               	movwf	111,b	;volatile
  2126                           
  2127                           ;i2c.c: 19:   RD6PPS=0x1B;
  2128   001D08  0E1B               	movlw	27
  2129   001D0A  6F70               	movwf	112,b	;volatile
  2130   001D0C                     
  2131                           ; BSR set to: 14
  2132   001D0C  0012               	return		;funcret
  2133   001D0E                     __end_of_I2C_2_Master_Init:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _Color2String *****************
  2137 ;; Defined at:
  2138 ;;		line 38 in file "serial.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  buf             2   88[COMRAM] PTR unsigned char 
  2141 ;;		 -> main@data(30), 
  2142 ;;  colorf          2   90[COMRAM] PTR struct RGBC_rel
  2143 ;;		 -> colorf(8), 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;Total ram usage:        4 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 8
  2162 ;; This function calls:
  2163 ;;		_sendStringSerial4
  2164 ;;		_sprintf
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text18
  2171   0018CA                     __ptext18:
  2172                           	callstack 0
  2173   0018CA                     _Color2String:
  2174                           	callstack 22
  2175   0018CA                     
  2176                           ;serial.c: 40:     sprintf(buf,"Red %d Green,%d Blue,%d Clear %d \r",colorf->Rf,
  2177   0018CA  C059  F0AC         	movff	Color2String@buf,sprintf@s
  2178   0018CE  C05A  F0AD         	movff	Color2String@buf+1,sprintf@s+1
  2179   0018D2  0E01               	movlw	low STR_1
  2180   0018D4  0100               	movlb	0	; () banked
  2181   0018D6  6FAE               	movwf	sprintf@fmt& (0+255),b
  2182   0018D8  0E0E               	movlw	high STR_1
  2183   0018DA  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  2184   0018DC  C05B  FFD9         	movff	Color2String@colorf,fsr2l
  2185   0018E0  C05C  FFDA         	movff	Color2String@colorf+1,fsr2h
  2186   0018E4  CFDE F0B0          	movff	postinc2,?_sprintf+4
  2187   0018E8  CFDD F0B1          	movff	postdec2,?_sprintf+5
  2188   0018EC  EE20 F002          	lfsr	2,2
  2189   0018F0  505B               	movf	Color2String@colorf^0,w,c
  2190   0018F2  26D9               	addwf	fsr2l,f,c
  2191   0018F4  505C               	movf	(Color2String@colorf+1)^0,w,c
  2192   0018F6  22DA               	addwfc	fsr2h,f,c
  2193   0018F8  CFDE F0B2          	movff	postinc2,?_sprintf+6
  2194   0018FC  CFDD F0B3          	movff	postdec2,?_sprintf+7
  2195   001900  EE20 F004          	lfsr	2,4
  2196   001904  505B               	movf	Color2String@colorf^0,w,c
  2197   001906  26D9               	addwf	fsr2l,f,c
  2198   001908  505C               	movf	(Color2String@colorf+1)^0,w,c
  2199   00190A  22DA               	addwfc	fsr2h,f,c
  2200   00190C  CFDE F0B4          	movff	postinc2,?_sprintf+8
  2201   001910  CFDD F0B5          	movff	postdec2,?_sprintf+9
  2202   001914  EE20 F006          	lfsr	2,6
  2203   001918  505B               	movf	Color2String@colorf^0,w,c
  2204   00191A  26D9               	addwf	fsr2l,f,c
  2205   00191C  505C               	movf	(Color2String@colorf+1)^0,w,c
  2206   00191E  22DA               	addwfc	fsr2h,f,c
  2207   001920  CFDE F0B6          	movff	postinc2,?_sprintf+10
  2208   001924  CFDD F0B7          	movff	postdec2,?_sprintf+11
  2209   001928  ECC7  F00C         	call	_sprintf	;wreg free
  2210   00192C                     
  2211                           ;serial.c: 42:     sendStringSerial4(buf);
  2212   00192C  C059  F002         	movff	Color2String@buf,sendStringSerial4@string
  2213   001930  C05A  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  2214   001934  EC56  F00E         	call	_sendStringSerial4	;wreg free
  2215   001938  0012               	return		;funcret
  2216   00193A                     __end_of_Color2String:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _sprintf *****************
  2220 ;; Defined at:
  2221 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2224 ;;		 -> main@data(30), 
  2225 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2226 ;;		 -> STR_1(35), 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2229 ;;  ap              2   12[BANK0 ] PTR void [1]
  2230 ;;		 -> ?_sprintf(2), 
  2231 ;;  ret             2    0        int 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2    0[BANK0 ] int 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2241 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;Total ram usage:       25 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 7
  2248 ;; This function calls:
  2249 ;;		_vfprintf
  2250 ;; This function is called by:
  2251 ;;		_Color2String
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text19
  2256   00198E                     __ptext19:
  2257                           	callstack 0
  2258   00198E                     _sprintf:
  2259                           	callstack 22
  2260   00198E  0EB0               	movlw	low (?_sprintf+4)
  2261   001990  0100               	movlb	0	; () banked
  2262   001992  6FB8               	movwf	sprintf@ap& (0+255),b
  2263   001994  0E00               	movlw	high (?_sprintf+4)
  2264   001996  6FB9               	movwf	(sprintf@ap+1)& (0+255),b
  2265   001998  C0AC  F0BA         	movff	sprintf@s,sprintf@f
  2266   00199C  C0AD  F0BB         	movff	sprintf@s+1,sprintf@f+1
  2267   0019A0                     
  2268                           ; BSR set to: 0
  2269   0019A0  0E00               	movlw	0
  2270   0019A2  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  2271   0019A4  0E00               	movlw	0
  2272   0019A6  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  2273   0019A8                     
  2274                           ; BSR set to: 0
  2275   0019A8  0E00               	movlw	0
  2276   0019AA  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  2277   0019AC  0E00               	movlw	0
  2278   0019AE  6FC3               	movwf	(sprintf@f+9)& (0+255),b
  2279   0019B0                     
  2280                           ; BSR set to: 0
  2281   0019B0  0EBA               	movlw	low sprintf@f
  2282   0019B2  6E51               	movwf	vfprintf@fp^0,c
  2283   0019B4  0E00               	movlw	high sprintf@f
  2284   0019B6  6E52               	movwf	(vfprintf@fp+1)^0,c
  2285   0019B8  C0AE  F053         	movff	sprintf@fmt,vfprintf@fmt
  2286   0019BC  C0AF  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2287   0019C0  0EB8               	movlw	low sprintf@ap
  2288   0019C2  6E55               	movwf	vfprintf@ap^0,c
  2289   0019C4  0E00               	movlw	high sprintf@ap
  2290   0019C6  6E56               	movwf	(vfprintf@ap+1)^0,c
  2291   0019C8  EC90  F00D         	call	_vfprintf	;wreg free
  2292   0019CC  0100               	movlb	0	; () banked
  2293   0019CE  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  2294   0019D0  25AC               	addwf	sprintf@s& (0+255),w,b
  2295   0019D2  6ED9               	movwf	fsr2l,c
  2296   0019D4  51BE               	movf	(sprintf@f+4)& (0+255),w,b
  2297   0019D6  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  2298   0019D8  6EDA               	movwf	fsr2h,c
  2299   0019DA  0E00               	movlw	0
  2300   0019DC  6EDF               	movwf	indf2,c
  2301   0019DE                     
  2302                           ; BSR set to: 0
  2303   0019DE  0012               	return		;funcret
  2304   0019E0                     __end_of_sprintf:
  2305                           	callstack 0
  2306                           
  2307 ;; *************** function _vfprintf *****************
  2308 ;; Defined at:
  2309 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2312 ;;		 -> sprintf@f(11), 
  2313 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2314 ;;		 -> STR_1(35), 
  2315 ;;  ap              2   84[COMRAM] PTR PTR void 
  2316 ;;		 -> sprintf@ap(2), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2319 ;;		 -> STR_1(35), 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2   80[COMRAM] int 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2329 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;Total ram usage:        8 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 6
  2336 ;; This function calls:
  2337 ;;		_vfpfcnvrt
  2338 ;; This function is called by:
  2339 ;;		_sprintf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text20
  2344   001B20                     __ptext20:
  2345                           	callstack 0
  2346   001B20                     _vfprintf:
  2347                           	callstack 22
  2348   001B20                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2350   001B20  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2351   001B24  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2354   001B28  EFA4  F00D         	goto	l1632
  2355   001B2C                     l1630:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2358   001B2C  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2359   001B30  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2360   001B34  0E57               	movlw	low vfprintf@cfmt
  2361   001B36  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2362   001B38  0E00               	movlw	high vfprintf@cfmt
  2363   001B3A  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2364   001B3C  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2365   001B40  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2366   001B44  ECBA  F00A         	call	_vfpfcnvrt	;wreg free
  2367   001B48                     l1632:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2370   001B48  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2371   001B4C  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2372   001B50                     	if	0	;tblptru may be non-zero
  2373   001B50                     	endif
  2374   001B50                     	if	0	;tblptru may be non-zero
  2375   001B50                     	endif
  2376   001B50  0008               	tblrd		*
  2377   001B52  50F5               	movf	tablat,w,c
  2378   001B54  0900               	iorlw	0
  2379   001B56  A4D8               	btfss	status,2,c
  2380   001B58  EFB0  F00D         	goto	u881
  2381   001B5C  EFB2  F00D         	goto	u880
  2382   001B60                     u881:
  2383   001B60  EF96  F00D         	goto	l1630
  2384   001B64                     u880:
  2385   001B64                     
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2387   001B64  0E00               	movlw	0
  2388   001B66  6E52               	movwf	(?_vfprintf+1)^0,c
  2389   001B68  0E00               	movlw	0
  2390   001B6A  6E51               	movwf	?_vfprintf^0,c
  2391   001B6C  0012               	return		;funcret
  2392   001B6E                     __end_of_vfprintf:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _vfpfcnvrt *****************
  2396 ;; Defined at:
  2397 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2400 ;;		 -> sprintf@f(11), 
  2401 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2402 ;;		 -> vfprintf@cfmt(2), 
  2403 ;;  ap              2   66[COMRAM] PTR PTR void 
  2404 ;;		 -> sprintf@ap(2), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  convarg         8   70[COMRAM] struct .
  2407 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2408 ;;		 -> STR_1(35), 
  2409 ;;  i               2    0        int 
  2410 ;;  done            2    0        int 
  2411 ;;  c               1    0        unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;Total ram usage:       18 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 5
  2428 ;; This function calls:
  2429 ;;		_dtoa
  2430 ;;		_fputc
  2431 ;; This function is called by:
  2432 ;;		_vfprintf
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text21
  2437   001574                     __ptext21:
  2438                           	callstack 0
  2439   001574                     _vfpfcnvrt:
  2440                           	callstack 22
  2441   001574                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2443   001574  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444   001578  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445   00157C  CFDE FFF6          	movff	postinc2,tblptrl
  2446   001580  CFDD FFF7          	movff	postdec2,tblptrh
  2447   001584                     	if	0	;tblptru may be non-zero
  2448   001584                     	endif
  2449   001584                     	if	0	;tblptru may be non-zero
  2450   001584                     	endif
  2451   001584  0008               	tblrd		*
  2452   001586  50F5               	movf	tablat,w,c
  2453   001588  0A25               	xorlw	37
  2454   00158A  A4D8               	btfss	status,2,c
  2455   00158C  EFCA  F00A         	goto	u821
  2456   001590  EFCC  F00A         	goto	u820
  2457   001594                     u821:
  2458   001594  EF4C  F00B         	goto	l1588
  2459   001598                     u820:
  2460   001598                     
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2462   001598  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463   00159C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464   0015A0  2ADE               	incf	postinc2,f,c
  2465   0015A2  0E00               	movlw	0
  2466   0015A4  22DD               	addwfc	postdec2,f,c
  2467   0015A6                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2469   0015A6  0E00               	movlw	0
  2470   0015A8  0100               	movlb	0	; () banked
  2471   0015AA  6F75               	movwf	(_width+1)& (0+255),b
  2472   0015AC  0E00               	movlw	0
  2473   0015AE  6F74               	movwf	_width& (0+255),b
  2474   0015B0  C074  F078         	movff	_width,_flags
  2475   0015B4                     
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2478   0015B4  6976               	setf	_prec& (0+255),b
  2479   0015B6  6977               	setf	(_prec+1)& (0+255),b
  2480   0015B8                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2483   0015B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484   0015BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485   0015C0  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2486   0015C4  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2487   0015C8                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2490   0015C8  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2491   0015CC  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2492   0015D0                     	if	0	;tblptru may be non-zero
  2493   0015D0                     	endif
  2494   0015D0                     	if	0	;tblptru may be non-zero
  2495   0015D0                     	endif
  2496   0015D0  0008               	tblrd		*
  2497   0015D2  50F5               	movf	tablat,w,c
  2498   0015D4  0A64               	xorlw	100
  2499   0015D6  B4D8               	btfsc	status,2,c
  2500   0015D8  EFF0  F00A         	goto	u831
  2501   0015DC  EFF2  F00A         	goto	u830
  2502   0015E0                     u831:
  2503   0015E0  EF00  F00B         	goto	l1578
  2504   0015E4                     u830:
  2505   0015E4                     
  2506                           ; BSR set to: 0
  2507   0015E4  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2508   0015E8  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2509   0015EC                     	if	0	;tblptru may be non-zero
  2510   0015EC                     	endif
  2511   0015EC                     	if	0	;tblptru may be non-zero
  2512   0015EC                     	endif
  2513   0015EC  0008               	tblrd		*
  2514   0015EE  50F5               	movf	tablat,w,c
  2515   0015F0  0A69               	xorlw	105
  2516   0015F2  A4D8               	btfss	status,2,c
  2517   0015F4  EFFE  F00A         	goto	u841
  2518   0015F8  EF00  F00B         	goto	u840
  2519   0015FC                     u841:
  2520   0015FC  EF43  F00B         	goto	l1584
  2521   001600                     u840:
  2522   001600                     l1578:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2526   001600  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2527   001604  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2528   001608  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2529   00160C  0E02               	movlw	2
  2530   00160E  26DE               	addwf	postinc2,f,c
  2531   001610  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2532   001614  0E00               	movlw	0
  2533   001616  22DD               	addwfc	postdec2,f,c
  2534   001618  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2535   00161C  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2536   001620  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2537   001624  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2538   001628  0E00               	movlw	0
  2539   00162A  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2540   00162C  0EFF               	movlw	-1
  2541   00162E  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2542   001630  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2543   001632  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2544   001634  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2545   001636  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2546   001638  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2549   00163A  0E01               	movlw	1
  2550   00163C  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2551   00163E  6E45               	movwf	??_vfpfcnvrt^0,c
  2552   001640  0E00               	movlw	0
  2553   001642  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2554   001644  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2555   001646  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2556   00164A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2557   00164E  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2558   001652  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2559   001656                     
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2562   001656  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2563   00165A  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2564   00165E  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2565   001662  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2566   001666  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2567   00166A  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2568   00166E  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2569   001672  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2570   001676  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2571   00167A  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2572   00167E  EC13  F007         	call	_dtoa	;wreg free
  2573   001682  EF60  F00B         	goto	l930
  2574   001686                     l1584:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2577   001686  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2578   00168A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2579   00168E  2ADE               	incf	postinc2,f,c
  2580   001690  0E00               	movlw	0
  2581   001692  22DD               	addwfc	postdec2,f,c
  2582   001694  EF60  F00B         	goto	l930
  2583   001698                     l1588:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2586   001698  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587   00169C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588   0016A0  CFDE FFF6          	movff	postinc2,tblptrl
  2589   0016A4  CFDD FFF7          	movff	postdec2,tblptrh
  2590   0016A8                     	if	0	;tblptru may be non-zero
  2591   0016A8                     	endif
  2592   0016A8                     	if	0	;tblptru may be non-zero
  2593   0016A8                     	endif
  2594   0016A8  0008               	tblrd		*
  2595   0016AA  50F5               	movf	tablat,w,c
  2596   0016AC  6E01               	movwf	fputc@c^0,c
  2597   0016AE  6A02               	clrf	(fputc@c+1)^0,c
  2598   0016B0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2599   0016B4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2600   0016B8  EC61  F00B         	call	_fputc	;wreg free
  2601   0016BC  EF43  F00B         	goto	l1584
  2602   0016C0                     l930:
  2603   0016C0  0012               	return		;funcret
  2604   0016C2                     __end_of_vfpfcnvrt:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _dtoa *****************
  2608 ;; Defined at:
  2609 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2612 ;;		 -> sprintf@f(11), 
  2613 ;;  d               8   29[COMRAM] long long 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  n               8   51[COMRAM] long long 
  2616 ;;  i               2   59[COMRAM] int 
  2617 ;;  w               2   49[COMRAM] int 
  2618 ;;  p               2   47[COMRAM] int 
  2619 ;;  s               1   61[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2629 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;Total ram usage:       35 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 4
  2636 ;; This function calls:
  2637 ;;		___aodiv
  2638 ;;		___aomod
  2639 ;;		_abs
  2640 ;;		_pad
  2641 ;; This function is called by:
  2642 ;;		_vfpfcnvrt
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text22
  2647   000E26                     __ptext22:
  2648                           	callstack 0
  2649   000E26                     _dtoa:
  2650                           	callstack 22
  2651   000E26                     
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2653   000E26  C01E  F034         	movff	dtoa@d,dtoa@n
  2654   000E2A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2655   000E2E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2656   000E32  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2657   000E36  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2658   000E3A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2659   000E3E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2660   000E42  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2661   000E46                     
  2662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2663   000E46  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2664   000E48  EF28  F007         	goto	u701
  2665   000E4C  EF2B  F007         	goto	u700
  2666   000E50                     u701:
  2667   000E50  0E01               	movlw	1
  2668   000E52  EF2C  F007         	goto	u710
  2669   000E56                     u700:
  2670   000E56  0E00               	movlw	0
  2671   000E58                     u710:
  2672   000E58  6E3E               	movwf	dtoa@s^0,c
  2673   000E5A                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2675   000E5A  503E               	movf	dtoa@s^0,w,c
  2676   000E5C  B4D8               	btfsc	status,2,c
  2677   000E5E  EF33  F007         	goto	u721
  2678   000E62  EF35  F007         	goto	u720
  2679   000E66                     u721:
  2680   000E66  EF45  F007         	goto	l1516
  2681   000E6A                     u720:
  2682   000E6A                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2684   000E6A  1E3B               	comf	(dtoa@n+7)^0,f,c
  2685   000E6C  1E3A               	comf	(dtoa@n+6)^0,f,c
  2686   000E6E  1E39               	comf	(dtoa@n+5)^0,f,c
  2687   000E70  1E38               	comf	(dtoa@n+4)^0,f,c
  2688   000E72  1E37               	comf	(dtoa@n+3)^0,f,c
  2689   000E74  1E36               	comf	(dtoa@n+2)^0,f,c
  2690   000E76  1E35               	comf	(dtoa@n+1)^0,f,c
  2691   000E78  6C34               	negf	dtoa@n^0,c
  2692   000E7A  0E00               	movlw	0
  2693   000E7C  2235               	addwfc	(dtoa@n+1)^0,f,c
  2694   000E7E  2236               	addwfc	(dtoa@n+2)^0,f,c
  2695   000E80  2237               	addwfc	(dtoa@n+3)^0,f,c
  2696   000E82  2238               	addwfc	(dtoa@n+4)^0,f,c
  2697   000E84  2239               	addwfc	(dtoa@n+5)^0,f,c
  2698   000E86  223A               	addwfc	(dtoa@n+6)^0,f,c
  2699   000E88  223B               	addwfc	(dtoa@n+7)^0,f,c
  2700   000E8A                     l1516:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2703   000E8A  0100               	movlb	0	; () banked
  2704   000E8C  BF77               	btfsc	(_prec+1)& (0+255),7,b
  2705   000E8E  EF53  F007         	goto	u730
  2706   000E92  5177               	movf	(_prec+1)& (0+255),w,b
  2707   000E94  E106               	bnz	u731
  2708   000E96  0576               	decf	_prec& (0+255),w,b
  2709   000E98  B0D8               	btfsc	status,0,c
  2710   000E9A  EF51  F007         	goto	u731
  2711   000E9E  EF53  F007         	goto	u730
  2712   000EA2                     u731:
  2713   000EA2  EF59  F007         	goto	l909
  2714   000EA6                     u730:
  2715   000EA6                     
  2716                           ; BSR set to: 0
  2717   000EA6  0E00               	movlw	0
  2718   000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  2719   000EAA  0E01               	movlw	1
  2720   000EAC  6E30               	movwf	dtoa@p^0,c
  2721   000EAE  EF5D  F007         	goto	l911
  2722   000EB2                     l909:
  2723                           
  2724                           ; BSR set to: 0
  2725   000EB2  C076  F030         	movff	_prec,dtoa@p
  2726   000EB6  C077  F031         	movff	_prec+1,dtoa@p+1
  2727   000EBA                     l911:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2731   000EBA  C074  F032         	movff	_width,dtoa@w
  2732   000EBE  C075  F033         	movff	_width+1,dtoa@w+1
  2733   000EC2                     
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2736   000EC2  503E               	movf	dtoa@s^0,w,c
  2737   000EC4  B4D8               	btfsc	status,2,c
  2738   000EC6  EF67  F007         	goto	u741
  2739   000ECA  EF69  F007         	goto	u740
  2740   000ECE                     u741:
  2741   000ECE  EF80  F007         	goto	l912
  2742   000ED2                     u740:
  2743   000ED2                     
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2746   000ED2  0632               	decf	dtoa@w^0,f,c
  2747   000ED4  A0D8               	btfss	status,0,c
  2748   000ED6  0633               	decf	(dtoa@w+1)^0,f,c
  2749   000ED8                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2752   000ED8  503E               	movf	dtoa@s^0,w,c
  2753   000EDA  A4D8               	btfss	status,2,c
  2754   000EDC  EF72  F007         	goto	u751
  2755   000EE0  EF74  F007         	goto	u750
  2756   000EE4                     u751:
  2757   000EE4  EF7A  F007         	goto	l1528
  2758   000EE8                     u750:
  2759   000EE8                     
  2760                           ; BSR set to: 0
  2761   000EE8  0E00               	movlw	0
  2762   000EEA  6E2F               	movwf	(_dtoa$1074+1)^0,c
  2763   000EEC  0E2B               	movlw	43
  2764   000EEE  6E2E               	movwf	_dtoa$1074^0,c
  2765   000EF0  EF7E  F007         	goto	l1530
  2766   000EF4                     l1528:
  2767                           
  2768                           ; BSR set to: 0
  2769   000EF4  0E00               	movlw	0
  2770   000EF6  6E2F               	movwf	(_dtoa$1074+1)^0,c
  2771   000EF8  0E2D               	movlw	45
  2772   000EFA  6E2E               	movwf	_dtoa$1074^0,c
  2773   000EFC                     l1530:
  2774                           
  2775                           ; BSR set to: 0
  2776   000EFC  C02E  F03E         	movff	_dtoa$1074,dtoa@s
  2777   000F00                     l912:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2781   000F00  0E00               	movlw	0
  2782   000F02  6E3D               	movwf	(dtoa@i+1)^0,c
  2783   000F04  0E1F               	movlw	31
  2784   000F06  6E3C               	movwf	dtoa@i^0,c
  2785   000F08                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2788   000F08  0E00               	movlw	0
  2789   000F0A  6F9B               	movwf	(_dbuf+31)& (0+255),b
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2792   000F0C  EF04  F008         	goto	l1544
  2793   000F10                     l1534:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2796   000F10  063C               	decf	dtoa@i^0,f,c
  2797   000F12  A0D8               	btfss	status,0,c
  2798   000F14  063D               	decf	(dtoa@i+1)^0,f,c
  2799   000F16                     
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2801   000F16  0E7C               	movlw	low _dbuf
  2802   000F18  243C               	addwf	dtoa@i^0,w,c
  2803   000F1A  6ED9               	movwf	fsr2l,c
  2804   000F1C  0E00               	movlw	high _dbuf
  2805   000F1E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2806   000F20  6EDA               	movwf	fsr2h,c
  2807   000F22  C034  F001         	movff	dtoa@n,___aomod@dividend
  2808   000F26  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2809   000F2A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2810   000F2E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2811   000F32  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2812   000F36  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2813   000F3A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2814   000F3E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2815   000F42  0E0A               	movlw	10
  2816   000F44  6E09               	movwf	___aomod@divisor^0,c
  2817   000F46  0E00               	movlw	0
  2818   000F48  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2819   000F4A  0E00               	movlw	0
  2820   000F4C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2821   000F4E  0E00               	movlw	0
  2822   000F50  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2823   000F52  0E00               	movlw	0
  2824   000F54  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2825   000F56  0E00               	movlw	0
  2826   000F58  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2827   000F5A  0E00               	movlw	0
  2828   000F5C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2829   000F5E  0E00               	movlw	0
  2830   000F60  6E10               	movwf	(___aomod@divisor+7)^0,c
  2831   000F62  EC08  F00A         	call	___aomod	;wreg free
  2832   000F66  C001  F026         	movff	?___aomod,??_dtoa
  2833   000F6A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2834   000F6E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2835   000F72  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2836   000F76  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2837   000F7A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2838   000F7E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2839   000F82  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2840   000F86  C026  F013         	movff	??_dtoa,abs@a
  2841   000F8A  C027  F014         	movff	??_dtoa+1,abs@a+1
  2842   000F8E  ECFA  F00D         	call	_abs	;wreg free
  2843   000F92  5013               	movf	?_abs^0,w,c
  2844   000F94  0F30               	addlw	48
  2845   000F96  6EDF               	movwf	indf2,c
  2846   000F98                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2848   000F98  0630               	decf	dtoa@p^0,f,c
  2849   000F9A  A0D8               	btfss	status,0,c
  2850   000F9C  0631               	decf	(dtoa@p+1)^0,f,c
  2851   000F9E                     
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2853   000F9E  0632               	decf	dtoa@w^0,f,c
  2854   000FA0  A0D8               	btfss	status,0,c
  2855   000FA2  0633               	decf	(dtoa@w+1)^0,f,c
  2856   000FA4                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2858   000FA4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2859   000FA8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2860   000FAC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2861   000FB0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2862   000FB4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2863   000FB8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2864   000FBC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2865   000FC0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2866   000FC4  0E0A               	movlw	10
  2867   000FC6  6E09               	movwf	___aodiv@divisor^0,c
  2868   000FC8  0E00               	movlw	0
  2869   000FCA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2870   000FCC  0E00               	movlw	0
  2871   000FCE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2872   000FD0  0E00               	movlw	0
  2873   000FD2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2874   000FD4  0E00               	movlw	0
  2875   000FD6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2876   000FD8  0E00               	movlw	0
  2877   000FDA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2878   000FDC  0E00               	movlw	0
  2879   000FDE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2880   000FE0  0E00               	movlw	0
  2881   000FE2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2882   000FE4  EC44  F009         	call	___aodiv	;wreg free
  2883   000FE8  C001  F034         	movff	?___aodiv,dtoa@n
  2884   000FEC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2885   000FF0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2886   000FF4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2887   000FF8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2888   000FFC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2889   001000  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2890   001004  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2891   001008                     l1544:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2894   001008  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2895   00100A  EF0F  F008         	goto	u761
  2896   00100E  503D               	movf	(dtoa@i+1)^0,w,c
  2897   001010  E108               	bnz	u760
  2898   001012  043C               	decf	dtoa@i^0,w,c
  2899   001014  A0D8               	btfss	status,0,c
  2900   001016  EF0F  F008         	goto	u761
  2901   00101A  EF11  F008         	goto	u760
  2902   00101E                     u761:
  2903   00101E  EF2D  F008         	goto	l1550
  2904   001022                     u760:
  2905   001022  5034               	movf	dtoa@n^0,w,c
  2906   001024  1035               	iorwf	(dtoa@n+1)^0,w,c
  2907   001026  1036               	iorwf	(dtoa@n+2)^0,w,c
  2908   001028  1037               	iorwf	(dtoa@n+3)^0,w,c
  2909   00102A  1038               	iorwf	(dtoa@n+4)^0,w,c
  2910   00102C  1039               	iorwf	(dtoa@n+5)^0,w,c
  2911   00102E  103A               	iorwf	(dtoa@n+6)^0,w,c
  2912   001030  103B               	iorwf	(dtoa@n+7)^0,w,c
  2913   001032  A4D8               	btfss	status,2,c
  2914   001034  EF1E  F008         	goto	u771
  2915   001038  EF20  F008         	goto	u770
  2916   00103C                     u771:
  2917   00103C  EF88  F007         	goto	l1534
  2918   001040                     u770:
  2919   001040  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2920   001042  EF2D  F008         	goto	u780
  2921   001046  5031               	movf	(dtoa@p+1)^0,w,c
  2922   001048  E106               	bnz	u781
  2923   00104A  0430               	decf	dtoa@p^0,w,c
  2924   00104C  B0D8               	btfsc	status,0,c
  2925   00104E  EF2B  F008         	goto	u781
  2926   001052  EF2D  F008         	goto	u780
  2927   001056                     u781:
  2928   001056  EF88  F007         	goto	l1534
  2929   00105A                     u780:
  2930   00105A                     l1550:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2933   00105A  503E               	movf	dtoa@s^0,w,c
  2934   00105C  B4D8               	btfsc	status,2,c
  2935   00105E  EF33  F008         	goto	u791
  2936   001062  EF35  F008         	goto	u790
  2937   001066                     u791:
  2938   001066  EF40  F008         	goto	l1556
  2939   00106A                     u790:
  2940   00106A                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2942   00106A  063C               	decf	dtoa@i^0,f,c
  2943   00106C  A0D8               	btfss	status,0,c
  2944   00106E  063D               	decf	(dtoa@i+1)^0,f,c
  2945   001070                     
  2946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2947   001070  0E7C               	movlw	low _dbuf
  2948   001072  243C               	addwf	dtoa@i^0,w,c
  2949   001074  6ED9               	movwf	fsr2l,c
  2950   001076  0E00               	movlw	high _dbuf
  2951   001078  203D               	addwfc	(dtoa@i+1)^0,w,c
  2952   00107A  6EDA               	movwf	fsr2h,c
  2953   00107C  C03E  FFDF         	movff	dtoa@s,indf2
  2954   001080                     l1556:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2957   001080  C01C  F011         	movff	dtoa@fp,pad@fp
  2958   001084  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2959   001088  0E7C               	movlw	low _dbuf
  2960   00108A  243C               	addwf	dtoa@i^0,w,c
  2961   00108C  6E13               	movwf	pad@buf^0,c
  2962   00108E  0E00               	movlw	high _dbuf
  2963   001090  203D               	addwfc	(dtoa@i+1)^0,w,c
  2964   001092  6E14               	movwf	(pad@buf+1)^0,c
  2965   001094  C032  F015         	movff	dtoa@w,pad@p
  2966   001098  C033  F016         	movff	dtoa@w+1,pad@p+1
  2967   00109C  EC28  F00C         	call	_pad	;wreg free
  2968   0010A0  0012               	return		;funcret
  2969   0010A2                     __end_of_dtoa:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _pad *****************
  2973 ;; Defined at:
  2974 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2977 ;;		 -> sprintf@f(11), 
  2978 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2979 ;;		 -> dbuf(32), 
  2980 ;;  p               2   20[COMRAM] int 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  w               2   25[COMRAM] int 
  2983 ;;  i               2   23[COMRAM] int 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2993 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2997 ;;Total ram usage:       11 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 3
  3000 ;; This function calls:
  3001 ;;		_fputc
  3002 ;;		_fputs
  3003 ;; This function is called by:
  3004 ;;		_dtoa
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text23
  3009   001850                     __ptext23:
  3010                           	callstack 0
  3011   001850                     _pad:
  3012                           	callstack 22
  3013   001850                     
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3015   001850  BE16               	btfsc	(pad@p+1)^0,7,c
  3016   001852  EF2D  F00C         	goto	u671
  3017   001856  EF2F  F00C         	goto	u670
  3018   00185A                     u671:
  3019   00185A  EF35  F00C         	goto	l1494
  3020   00185E                     u670:
  3021   00185E  C015  F01A         	movff	pad@p,pad@w
  3022   001862  C016  F01B         	movff	pad@p+1,pad@w+1
  3023   001866  EF39  F00C         	goto	l900
  3024   00186A                     l1494:
  3025   00186A  0E00               	movlw	0
  3026   00186C  6E1B               	movwf	(pad@w+1)^0,c
  3027   00186E  0E00               	movlw	0
  3028   001870  6E1A               	movwf	pad@w^0,c
  3029   001872                     l900:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3032   001872  0E00               	movlw	0
  3033   001874  6E19               	movwf	(pad@i+1)^0,c
  3034   001876  0E00               	movlw	0
  3035   001878  6E18               	movwf	pad@i^0,c
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3038   00187A  EF4B  F00C         	goto	l1500
  3039   00187E                     l1496:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3042   00187E  0E00               	movlw	0
  3043   001880  6E02               	movwf	(fputc@c+1)^0,c
  3044   001882  0E20               	movlw	32
  3045   001884  6E01               	movwf	fputc@c^0,c
  3046   001886  C011  F003         	movff	pad@fp,fputc@fp
  3047   00188A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3048   00188E  EC61  F00B         	call	_fputc	;wreg free
  3049   001892                     
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3051   001892  4A18               	infsnz	pad@i^0,f,c
  3052   001894  2A19               	incf	(pad@i+1)^0,f,c
  3053   001896                     l1500:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3056   001896  501A               	movf	pad@w^0,w,c
  3057   001898  5C18               	subwf	pad@i^0,w,c
  3058   00189A  5019               	movf	(pad@i+1)^0,w,c
  3059   00189C  0A80               	xorlw	128
  3060   00189E  6E17               	movwf	??_pad^0,c
  3061   0018A0  501B               	movf	(pad@w+1)^0,w,c
  3062   0018A2  0A80               	xorlw	128
  3063   0018A4  5817               	subwfb	??_pad^0,w,c
  3064   0018A6  A0D8               	btfss	status,0,c
  3065   0018A8  EF58  F00C         	goto	u681
  3066   0018AC  EF5A  F00C         	goto	u680
  3067   0018B0                     u681:
  3068   0018B0  EF3F  F00C         	goto	l1496
  3069   0018B4                     u680:
  3070   0018B4                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3072   0018B4  C013  F00A         	movff	pad@buf,fputs@s
  3073   0018B8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3074   0018BC  C011  F00C         	movff	pad@fp,fputs@fp
  3075   0018C0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3076   0018C4  ECB7  F00D         	call	_fputs	;wreg free
  3077   0018C8  0012               	return		;funcret
  3078   0018CA                     __end_of_pad:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _fputs *****************
  3082 ;; Defined at:
  3083 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3086 ;;		 -> dbuf(32), 
  3087 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3088 ;;		 -> sprintf@f(11), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  i               2   14[COMRAM] int 
  3091 ;;  c               1   13[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    9[COMRAM] int 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;Total ram usage:        7 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 2
  3108 ;; This function calls:
  3109 ;;		_fputc
  3110 ;; This function is called by:
  3111 ;;		_pad
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text24
  3116   001B6E                     __ptext24:
  3117                           	callstack 0
  3118   001B6E                     _fputs:
  3119                           	callstack 22
  3120   001B6E  0E00               	movlw	0
  3121   001B70  6E10               	movwf	(fputs@i+1)^0,c
  3122   001B72  0E00               	movlw	0
  3123   001B74  6E0F               	movwf	fputs@i^0,c
  3124   001B76  EFC8  F00D         	goto	l1408
  3125   001B7A                     l1404:
  3126   001B7A  C00E  F001         	movff	fputs@c,fputc@c
  3127   001B7E  6A02               	clrf	(fputc@c+1)^0,c
  3128   001B80  C00C  F003         	movff	fputs@fp,fputc@fp
  3129   001B84  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3130   001B88  EC61  F00B         	call	_fputc	;wreg free
  3131   001B8C  4A0F               	infsnz	fputs@i^0,f,c
  3132   001B8E  2A10               	incf	(fputs@i+1)^0,f,c
  3133   001B90                     l1408:
  3134   001B90  500F               	movf	fputs@i^0,w,c
  3135   001B92  240A               	addwf	fputs@s^0,w,c
  3136   001B94  6ED9               	movwf	fsr2l,c
  3137   001B96  5010               	movf	(fputs@i+1)^0,w,c
  3138   001B98  200B               	addwfc	(fputs@s+1)^0,w,c
  3139   001B9A  6EDA               	movwf	fsr2h,c
  3140   001B9C  50DF               	movf	indf2,w,c
  3141   001B9E  6E0E               	movwf	fputs@c^0,c
  3142   001BA0  500E               	movf	fputs@c^0,w,c
  3143   001BA2  A4D8               	btfss	status,2,c
  3144   001BA4  EFD6  F00D         	goto	u531
  3145   001BA8  EFD8  F00D         	goto	u530
  3146   001BAC                     u531:
  3147   001BAC  EFBD  F00D         	goto	l1404
  3148   001BB0                     u530:
  3149   001BB0  0012               	return		;funcret
  3150   001BB2                     __end_of_fputs:
  3151                           	callstack 0
  3152                           
  3153 ;; *************** function _fputc *****************
  3154 ;; Defined at:
  3155 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  c               2    0[COMRAM] int 
  3158 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3159 ;;		 -> sprintf@f(11), 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2    0[COMRAM] int 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;Total ram usage:        9 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 1
  3178 ;; This function calls:
  3179 ;;		_putch
  3180 ;; This function is called by:
  3181 ;;		_pad
  3182 ;;		_vfpfcnvrt
  3183 ;;		_fputs
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text25
  3188   0016C2                     __ptext25:
  3189                           	callstack 0
  3190   0016C2                     _fputc:
  3191                           	callstack 25
  3192   0016C2  5003               	movf	fputc@fp^0,w,c
  3193   0016C4  1004               	iorwf	(fputc@fp+1)^0,w,c
  3194   0016C6  B4D8               	btfsc	status,2,c
  3195   0016C8  EF68  F00B         	goto	u491
  3196   0016CC  EF6A  F00B         	goto	u490
  3197   0016D0                     u491:
  3198   0016D0  EF73  F00B         	goto	l1392
  3199   0016D4                     u490:
  3200   0016D4  5003               	movf	fputc@fp^0,w,c
  3201   0016D6  1004               	iorwf	(fputc@fp+1)^0,w,c
  3202   0016D8  A4D8               	btfss	status,2,c
  3203   0016DA  EF71  F00B         	goto	u501
  3204   0016DE  EF73  F00B         	goto	u500
  3205   0016E2                     u501:
  3206   0016E2  EF78  F00B         	goto	l1394
  3207   0016E6                     u500:
  3208   0016E6                     l1392:
  3209   0016E6  5001               	movf	fputc@c^0,w,c
  3210   0016E8  ECF0  F00E         	call	_putch
  3211   0016EC  EFC5  F00B         	goto	l955
  3212   0016F0                     l1394:
  3213   0016F0  EE20 F009          	lfsr	2,9
  3214   0016F4  5003               	movf	fputc@fp^0,w,c
  3215   0016F6  26D9               	addwf	fsr2l,f,c
  3216   0016F8  5004               	movf	(fputc@fp+1)^0,w,c
  3217   0016FA  22DA               	addwfc	fsr2h,f,c
  3218   0016FC  50DE               	movf	postinc2,w,c
  3219   0016FE  10DE               	iorwf	postinc2,w,c
  3220   001700  B4D8               	btfsc	status,2,c
  3221   001702  EF85  F00B         	goto	u511
  3222   001706  EF87  F00B         	goto	u510
  3223   00170A                     u511:
  3224   00170A  EFA2  F00B         	goto	l1398
  3225   00170E                     u510:
  3226   00170E  EE20 F009          	lfsr	2,9
  3227   001712  5003               	movf	fputc@fp^0,w,c
  3228   001714  26D9               	addwf	fsr2l,f,c
  3229   001716  5004               	movf	(fputc@fp+1)^0,w,c
  3230   001718  22DA               	addwfc	fsr2h,f,c
  3231   00171A  EE10 F003          	lfsr	1,3
  3232   00171E  5003               	movf	fputc@fp^0,w,c
  3233   001720  26E1               	addwf	fsr1l,f,c
  3234   001722  5004               	movf	(fputc@fp+1)^0,w,c
  3235   001724  22E2               	addwfc	fsr1h,f,c
  3236   001726  50DE               	movf	postinc2,w,c
  3237   001728  5CE6               	subwf	postinc1,w,c
  3238   00172A  50E6               	movf	postinc1,w,c
  3239   00172C  0A80               	xorlw	128
  3240   00172E  6E09               	movwf	(??_fputc+4)^0,c
  3241   001730  50DE               	movf	postinc2,w,c
  3242   001732  0A80               	xorlw	128
  3243   001734  5809               	subwfb	(??_fputc+4)^0,w,c
  3244   001736  B0D8               	btfsc	status,0,c
  3245   001738  EFA0  F00B         	goto	u521
  3246   00173C  EFA2  F00B         	goto	u520
  3247   001740                     u521:
  3248   001740  EFC5  F00B         	goto	l955
  3249   001744                     u520:
  3250   001744                     l1398:
  3251   001744  EE20 F003          	lfsr	2,3
  3252   001748  5003               	movf	fputc@fp^0,w,c
  3253   00174A  26D9               	addwf	fsr2l,f,c
  3254   00174C  5004               	movf	(fputc@fp+1)^0,w,c
  3255   00174E  22DA               	addwfc	fsr2h,f,c
  3256   001750  CFDE F005          	movff	postinc2,??_fputc
  3257   001754  CFDD F006          	movff	postdec2,??_fputc+1
  3258   001758  C003  FFD9         	movff	fputc@fp,fsr2l
  3259   00175C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3260   001760  CFDE F007          	movff	postinc2,??_fputc+2
  3261   001764  CFDD F008          	movff	postdec2,??_fputc+3
  3262   001768  5005               	movf	??_fputc^0,w,c
  3263   00176A  2407               	addwf	(??_fputc+2)^0,w,c
  3264   00176C  6ED9               	movwf	fsr2l,c
  3265   00176E  5006               	movf	(??_fputc+1)^0,w,c
  3266   001770  2008               	addwfc	(??_fputc+3)^0,w,c
  3267   001772  6EDA               	movwf	fsr2h,c
  3268   001774  C001  FFDF         	movff	fputc@c,indf2
  3269   001778  EE20 F003          	lfsr	2,3
  3270   00177C  5003               	movf	fputc@fp^0,w,c
  3271   00177E  26D9               	addwf	fsr2l,f,c
  3272   001780  5004               	movf	(fputc@fp+1)^0,w,c
  3273   001782  22DA               	addwfc	fsr2h,f,c
  3274   001784  2ADE               	incf	postinc2,f,c
  3275   001786  0E00               	movlw	0
  3276   001788  22DD               	addwfc	postdec2,f,c
  3277   00178A                     l955:
  3278   00178A  0012               	return		;funcret
  3279   00178C                     __end_of_fputc:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function _putch *****************
  3283 ;; Defined at:
  3284 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  c               1    wreg     unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  c               1    0[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;Total ram usage:        0 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_fputc
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text26
  3312   001DE0                     __ptext26:
  3313                           	callstack 0
  3314   001DE0                     _putch:
  3315                           	callstack 25
  3316   001DE0  0012               	return		;funcret
  3317   001DE2                     __end_of_putch:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _abs *****************
  3321 ;; Defined at:
  3322 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  a               2   18[COMRAM] int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   18[COMRAM] int 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;Total ram usage:        4 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_dtoa
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text27
  3350   001BF4                     __ptext27:
  3351                           	callstack 0
  3352   001BF4                     _abs:
  3353                           	callstack 25
  3354   001BF4  BE14               	btfsc	(abs@a+1)^0,7,c
  3355   001BF6  EF07  F00E         	goto	u690
  3356   001BFA  5014               	movf	(abs@a+1)^0,w,c
  3357   001BFC  E106               	bnz	u691
  3358   001BFE  0413               	decf	abs@a^0,w,c
  3359   001C00  B0D8               	btfsc	status,0,c
  3360   001C02  EF05  F00E         	goto	u691
  3361   001C06  EF07  F00E         	goto	u690
  3362   001C0A                     u691:
  3363   001C0A  EF15  F00E         	goto	l940
  3364   001C0E                     u690:
  3365   001C0E  C013  F015         	movff	abs@a,??_abs
  3366   001C12  C014  F016         	movff	abs@a+1,??_abs+1
  3367   001C16  1E15               	comf	??_abs^0,f,c
  3368   001C18  1E16               	comf	(??_abs+1)^0,f,c
  3369   001C1A  4A15               	infsnz	??_abs^0,f,c
  3370   001C1C  2A16               	incf	(??_abs+1)^0,f,c
  3371   001C1E  C015  F013         	movff	??_abs,?_abs
  3372   001C22  C016  F014         	movff	??_abs+1,?_abs+1
  3373   001C26  EF19  F00E         	goto	l943
  3374   001C2A                     l940:
  3375   001C2A  C013  F013         	movff	abs@a,?_abs
  3376   001C2E  C014  F014         	movff	abs@a+1,?_abs+1
  3377   001C32                     l943:
  3378   001C32  0012               	return		;funcret
  3379   001C34                     __end_of_abs:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function ___aomod *****************
  3383 ;; Defined at:
  3384 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  dividend        8    0[COMRAM] long long 
  3387 ;;  divisor         8    8[COMRAM] long long 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  sign            1   17[COMRAM] unsigned char 
  3390 ;;  counter         1   16[COMRAM] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  8    0[COMRAM] long long 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3400 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;Total ram usage:       18 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_dtoa
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text28
  3414   001410                     __ptext28:
  3415                           	callstack 0
  3416   001410                     ___aomod:
  3417                           	callstack 25
  3418   001410  0E00               	movlw	0
  3419   001412  6E12               	movwf	___aomod@sign^0,c
  3420   001414  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3421   001416  EF11  F00A         	goto	u610
  3422   00141A  EF0F  F00A         	goto	u611
  3423   00141E                     u611:
  3424   00141E  EF23  F00A         	goto	l1462
  3425   001422                     u610:
  3426   001422  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3427   001424  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3428   001426  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3429   001428  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3430   00142A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3431   00142C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3432   00142E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3433   001430  6C01               	negf	___aomod@dividend^0,c
  3434   001432  0E00               	movlw	0
  3435   001434  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3436   001436  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3437   001438  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3438   00143A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3439   00143C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3440   00143E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3441   001440  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3442   001442  0E01               	movlw	1
  3443   001444  6E12               	movwf	___aomod@sign^0,c
  3444   001446                     l1462:
  3445   001446  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3446   001448  EF2A  F00A         	goto	u620
  3447   00144C  EF28  F00A         	goto	u621
  3448   001450                     u621:
  3449   001450  EF3A  F00A         	goto	l1466
  3450   001454                     u620:
  3451   001454  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3452   001456  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3453   001458  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3454   00145A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3455   00145C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3456   00145E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3457   001460  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3458   001462  6C09               	negf	___aomod@divisor^0,c
  3459   001464  0E00               	movlw	0
  3460   001466  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3461   001468  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3462   00146A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3463   00146C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3464   00146E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3465   001470  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3466   001472  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3467   001474                     l1466:
  3468   001474  5009               	movf	___aomod@divisor^0,w,c
  3469   001476  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3470   001478  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3471   00147A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3472   00147C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3473   00147E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3474   001480  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3475   001482  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3476   001484  B4D8               	btfsc	status,2,c
  3477   001486  EF47  F00A         	goto	u631
  3478   00148A  EF49  F00A         	goto	u630
  3479   00148E                     u631:
  3480   00148E  EF91  F00A         	goto	l1482
  3481   001492                     u630:
  3482   001492  0E01               	movlw	1
  3483   001494  6E11               	movwf	___aomod@counter^0,c
  3484   001496  EF57  F00A         	goto	l1472
  3485   00149A                     l1470:
  3486   00149A  90D8               	bcf	status,0,c
  3487   00149C  3609               	rlcf	___aomod@divisor^0,f,c
  3488   00149E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3489   0014A0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3490   0014A2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3491   0014A4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3492   0014A6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3493   0014A8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3494   0014AA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3495   0014AC  2A11               	incf	___aomod@counter^0,f,c
  3496   0014AE                     l1472:
  3497   0014AE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3498   0014B0  EF5C  F00A         	goto	u641
  3499   0014B4  EF5E  F00A         	goto	u640
  3500   0014B8                     u641:
  3501   0014B8  EF4D  F00A         	goto	l1470
  3502   0014BC                     u640:
  3503   0014BC                     l1474:
  3504   0014BC  5009               	movf	___aomod@divisor^0,w,c
  3505   0014BE  5C01               	subwf	___aomod@dividend^0,w,c
  3506   0014C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  3507   0014C2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3508   0014C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  3509   0014C6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3510   0014C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  3511   0014CA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3512   0014CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  3513   0014CE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3514   0014D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  3515   0014D2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3516   0014D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  3517   0014D6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3518   0014D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  3519   0014DA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3520   0014DC  A0D8               	btfss	status,0,c
  3521   0014DE  EF73  F00A         	goto	u651
  3522   0014E2  EF75  F00A         	goto	u650
  3523   0014E6                     u651:
  3524   0014E6  EF85  F00A         	goto	l1478
  3525   0014EA                     u650:
  3526   0014EA  5009               	movf	___aomod@divisor^0,w,c
  3527   0014EC  5E01               	subwf	___aomod@dividend^0,f,c
  3528   0014EE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3529   0014F0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3530   0014F2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3531   0014F4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3532   0014F6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3533   0014F8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3534   0014FA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3535   0014FC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3536   0014FE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3537   001500  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3538   001502  500F               	movf	(___aomod@divisor+6)^0,w,c
  3539   001504  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3540   001506  5010               	movf	(___aomod@divisor+7)^0,w,c
  3541   001508  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3542   00150A                     l1478:
  3543   00150A  90D8               	bcf	status,0,c
  3544   00150C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3545   00150E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3546   001510  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3547   001512  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3548   001514  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3549   001516  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3550   001518  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3551   00151A  3209               	rrcf	___aomod@divisor^0,f,c
  3552   00151C  2E11               	decfsz	___aomod@counter^0,f,c
  3553   00151E  EF5E  F00A         	goto	l1474
  3554   001522                     l1482:
  3555   001522  5012               	movf	___aomod@sign^0,w,c
  3556   001524  B4D8               	btfsc	status,2,c
  3557   001526  EF97  F00A         	goto	u661
  3558   00152A  EF99  F00A         	goto	u660
  3559   00152E                     u661:
  3560   00152E  EFA9  F00A         	goto	l1486
  3561   001532                     u660:
  3562   001532  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3563   001534  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3564   001536  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3565   001538  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3566   00153A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3567   00153C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3568   00153E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3569   001540  6C01               	negf	___aomod@dividend^0,c
  3570   001542  0E00               	movlw	0
  3571   001544  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3572   001546  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3573   001548  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3574   00154A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3575   00154C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3576   00154E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3577   001550  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3578   001552                     l1486:
  3579   001552  C001  F001         	movff	___aomod@dividend,?___aomod
  3580   001556  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3581   00155A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3582   00155E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3583   001562  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3584   001566  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3585   00156A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3586   00156E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3587   001572  0012               	return		;funcret
  3588   001574                     __end_of___aomod:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function ___aodiv *****************
  3592 ;; Defined at:
  3593 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  dividend        8    0[COMRAM] long long 
  3596 ;;  divisor         8    8[COMRAM] long long 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  quotient        8   18[COMRAM] long long 
  3599 ;;  sign            1   17[COMRAM] unsigned char 
  3600 ;;  counter         1   16[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  8    0[COMRAM] long long 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3610 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;Total ram usage:       26 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_dtoa
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text29
  3624   001288                     __ptext29:
  3625                           	callstack 0
  3626   001288                     ___aodiv:
  3627                           	callstack 25
  3628   001288  0E00               	movlw	0
  3629   00128A  6E12               	movwf	___aodiv@sign^0,c
  3630   00128C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3631   00128E  EF4D  F009         	goto	u540
  3632   001292  EF4B  F009         	goto	u541
  3633   001296                     u541:
  3634   001296  EF5F  F009         	goto	l1418
  3635   00129A                     u540:
  3636   00129A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3637   00129C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3638   00129E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3639   0012A0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3640   0012A2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3641   0012A4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3642   0012A6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3643   0012A8  6C09               	negf	___aodiv@divisor^0,c
  3644   0012AA  0E00               	movlw	0
  3645   0012AC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3646   0012AE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3647   0012B0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3648   0012B2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3649   0012B4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3650   0012B6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3651   0012B8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3652   0012BA  0E01               	movlw	1
  3653   0012BC  6E12               	movwf	___aodiv@sign^0,c
  3654   0012BE                     l1418:
  3655   0012BE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3656   0012C0  EF66  F009         	goto	u550
  3657   0012C4  EF64  F009         	goto	u551
  3658   0012C8                     u551:
  3659   0012C8  EF78  F009         	goto	l1424
  3660   0012CC                     u550:
  3661   0012CC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3662   0012CE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3663   0012D0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3664   0012D2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3665   0012D4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3666   0012D6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3667   0012D8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3668   0012DA  6C01               	negf	___aodiv@dividend^0,c
  3669   0012DC  0E00               	movlw	0
  3670   0012DE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3671   0012E0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3672   0012E2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3673   0012E4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3674   0012E6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3675   0012E8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3676   0012EA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3677   0012EC  0E01               	movlw	1
  3678   0012EE  1A12               	xorwf	___aodiv@sign^0,f,c
  3679   0012F0                     l1424:
  3680   0012F0  EE20  F013         	lfsr	2,___aodiv@quotient
  3681   0012F4  0E07               	movlw	7
  3682   0012F6                     u561:
  3683   0012F6  6ADE               	clrf	postinc2,c
  3684   0012F8  06E8               	decf	wreg,f,c
  3685   0012FA  E2FD               	bc	u561
  3686   0012FC  5009               	movf	___aodiv@divisor^0,w,c
  3687   0012FE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3688   001300  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3689   001302  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3690   001304  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3691   001306  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3692   001308  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3693   00130A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3694   00130C  B4D8               	btfsc	status,2,c
  3695   00130E  EF8B  F009         	goto	u571
  3696   001312  EF8D  F009         	goto	u570
  3697   001316                     u571:
  3698   001316  EFDF  F009         	goto	l1446
  3699   00131A                     u570:
  3700   00131A  0E01               	movlw	1
  3701   00131C  6E11               	movwf	___aodiv@counter^0,c
  3702   00131E  EF9B  F009         	goto	l1432
  3703   001322                     l1430:
  3704   001322  90D8               	bcf	status,0,c
  3705   001324  3609               	rlcf	___aodiv@divisor^0,f,c
  3706   001326  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3707   001328  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3708   00132A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3709   00132C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3710   00132E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3711   001330  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3712   001332  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3713   001334  2A11               	incf	___aodiv@counter^0,f,c
  3714   001336                     l1432:
  3715   001336  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3716   001338  EFA0  F009         	goto	u581
  3717   00133C  EFA2  F009         	goto	u580
  3718   001340                     u581:
  3719   001340  EF91  F009         	goto	l1430
  3720   001344                     u580:
  3721   001344                     l1434:
  3722   001344  90D8               	bcf	status,0,c
  3723   001346  3613               	rlcf	___aodiv@quotient^0,f,c
  3724   001348  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3725   00134A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3726   00134C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3727   00134E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3728   001350  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3729   001352  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3730   001354  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3731   001356  5009               	movf	___aodiv@divisor^0,w,c
  3732   001358  5C01               	subwf	___aodiv@dividend^0,w,c
  3733   00135A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3734   00135C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3735   00135E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3736   001360  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3737   001362  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3738   001364  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3739   001366  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3740   001368  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3741   00136A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3742   00136C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3743   00136E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3744   001370  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3745   001372  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3746   001374  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3747   001376  A0D8               	btfss	status,0,c
  3748   001378  EFC0  F009         	goto	u591
  3749   00137C  EFC2  F009         	goto	u590
  3750   001380                     u591:
  3751   001380  EFD3  F009         	goto	l1442
  3752   001384                     u590:
  3753   001384  5009               	movf	___aodiv@divisor^0,w,c
  3754   001386  5E01               	subwf	___aodiv@dividend^0,f,c
  3755   001388  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3756   00138A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3757   00138C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3758   00138E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3759   001390  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3760   001392  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3761   001394  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3762   001396  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3763   001398  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3764   00139A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3765   00139C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3766   00139E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3767   0013A0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3768   0013A2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3769   0013A4  8013               	bsf	___aodiv@quotient^0,0,c
  3770   0013A6                     l1442:
  3771   0013A6  90D8               	bcf	status,0,c
  3772   0013A8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3773   0013AA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3774   0013AC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3775   0013AE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3776   0013B0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3777   0013B2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3778   0013B4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3779   0013B6  3209               	rrcf	___aodiv@divisor^0,f,c
  3780   0013B8  2E11               	decfsz	___aodiv@counter^0,f,c
  3781   0013BA  EFA2  F009         	goto	l1434
  3782   0013BE                     l1446:
  3783   0013BE  5012               	movf	___aodiv@sign^0,w,c
  3784   0013C0  B4D8               	btfsc	status,2,c
  3785   0013C2  EFE5  F009         	goto	u601
  3786   0013C6  EFE7  F009         	goto	u600
  3787   0013CA                     u601:
  3788   0013CA  EFF7  F009         	goto	l1450
  3789   0013CE                     u600:
  3790   0013CE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3791   0013D0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3792   0013D2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3793   0013D4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3794   0013D6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3795   0013D8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3796   0013DA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3797   0013DC  6C13               	negf	___aodiv@quotient^0,c
  3798   0013DE  0E00               	movlw	0
  3799   0013E0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3800   0013E2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3801   0013E4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3802   0013E6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3803   0013E8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3804   0013EA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3805   0013EC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3806   0013EE                     l1450:
  3807   0013EE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3808   0013F2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3809   0013F6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3810   0013FA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3811   0013FE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3812   001402  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3813   001406  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3814   00140A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3815   00140E  0012               	return		;funcret
  3816   001410                     __end_of___aodiv:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _sendStringSerial4 *****************
  3820 ;; Defined at:
  3821 ;;		line 46 in file "serial.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  string          2    1[COMRAM] PTR unsigned char 
  3824 ;;		 -> main@data(30), 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 1
  3843 ;; This function calls:
  3844 ;;		_sendCharSerial4
  3845 ;; This function is called by:
  3846 ;;		_Color2String
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text30
  3851   001CAC                     __ptext30:
  3852                           	callstack 0
  3853   001CAC                     _sendStringSerial4:
  3854                           	callstack 28
  3855   001CAC                     
  3856                           ;serial.c: 49:     while(*string != 0){
  3857   001CAC  EF65  F00E         	goto	l1696
  3858   001CB0                     l1690:
  3859                           
  3860                           ;serial.c: 51:   sendCharSerial4(*string++);
  3861   001CB0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3862   001CB4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3863   001CB8  50DF               	movf	indf2,w,c
  3864   001CBA  ECCF  F00E         	call	_sendCharSerial4
  3865   001CBE  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3866   001CC0  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3867   001CC2                     
  3868                           ;serial.c: 52:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  3869   001CC2  0E6A               	movlw	106
  3870   001CC4                     u987:
  3871   001CC4  2EE8               	decfsz	wreg,f,c
  3872   001CC6  D7FE               	bra	u987
  3873   001CC8  D000               	nop2	
  3874   001CCA                     l1696:
  3875                           
  3876                           ;serial.c: 49:     while(*string != 0){
  3877   001CCA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3878   001CCE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3879   001CD2  50DF               	movf	indf2,w,c
  3880   001CD4  A4D8               	btfss	status,2,c
  3881   001CD6  EF6F  F00E         	goto	u891
  3882   001CDA  EF71  F00E         	goto	u890
  3883   001CDE                     u891:
  3884   001CDE  EF58  F00E         	goto	l1690
  3885   001CE2                     u890:
  3886   001CE2  0012               	return		;funcret
  3887   001CE4                     __end_of_sendStringSerial4:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _sendCharSerial4 *****************
  3891 ;; Defined at:
  3892 ;;		line 33 in file "serial.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  charToSend      1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  charToSend      1    0[COMRAM] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_sendStringSerial4
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text31
  3920   001D9E                     __ptext31:
  3921                           	callstack 0
  3922   001D9E                     _sendCharSerial4:
  3923                           	callstack 28
  3924                           
  3925                           ;incstack = 0
  3926                           ;sendCharSerial4@charToSend stored from wreg
  3927   001D9E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3928   001DA0                     l185:
  3929   001DA0  010E               	movlb	14	; () banked
  3930   001DA2  A537               	btfss	55,2,b	;volatile
  3931   001DA4  EFD6  F00E         	goto	u871
  3932   001DA8  EFD8  F00E         	goto	u870
  3933   001DAC                     u871:
  3934   001DAC  EFD0  F00E         	goto	l185
  3935   001DB0                     u870:
  3936   001DB0                     
  3937                           ; BSR set to: 14
  3938                           ;serial.c: 35:     TX4REG = charToSend;
  3939   001DB0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3940   001DB4                     
  3941                           ; BSR set to: 14
  3942   001DB4  0012               	return		;funcret
  3943   001DB6                     __end_of_sendCharSerial4:
  3944                           	callstack 0
  3945                           
  3946                           	psect	rparam
  3947   000000                     
  3948                           	psect	idloc
  3949                           
  3950                           ;Config register IDLOC0 @ 0x200000
  3951                           ;	unspecified, using default values
  3952   200000                     	org	2097152
  3953   200000  0FFF               	dw	4095
  3954                           
  3955                           ;Config register IDLOC1 @ 0x200002
  3956                           ;	unspecified, using default values
  3957   200002                     	org	2097154
  3958   200002  0FFF               	dw	4095
  3959                           
  3960                           ;Config register IDLOC2 @ 0x200004
  3961                           ;	unspecified, using default values
  3962   200004                     	org	2097156
  3963   200004  0FFF               	dw	4095
  3964                           
  3965                           ;Config register IDLOC3 @ 0x200006
  3966                           ;	unspecified, using default values
  3967   200006                     	org	2097158
  3968   200006  0FFF               	dw	4095
  3969                           
  3970                           ;Config register IDLOC4 @ 0x200008
  3971                           ;	unspecified, using default values
  3972   200008                     	org	2097160
  3973   200008  0FFF               	dw	4095
  3974                           
  3975                           ;Config register IDLOC5 @ 0x20000A
  3976                           ;	unspecified, using default values
  3977   20000A                     	org	2097162
  3978   20000A  0FFF               	dw	4095
  3979                           
  3980                           ;Config register IDLOC6 @ 0x20000C
  3981                           ;	unspecified, using default values
  3982   20000C                     	org	2097164
  3983   20000C  0FFF               	dw	4095
  3984                           
  3985                           ;Config register IDLOC7 @ 0x20000E
  3986                           ;	unspecified, using default values
  3987   20000E                     	org	2097166
  3988   20000E  0FFF               	dw	4095
  3989                           
  3990                           	psect	config
  3991                           
  3992                           ;Config register CONFIG1L @ 0x300000
  3993                           ;	External Oscillator mode Selection bits
  3994                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3995                           ;	Power-up default value for COSC bits
  3996                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3997   300000                     	org	3145728
  3998   300000  AA                 	db	170
  3999                           
  4000                           ;Config register CONFIG1H @ 0x300001
  4001                           ;	unspecified, using default values
  4002                           ;	Clock Out Enable bit
  4003                           ;	CLKOUTEN = 0x1, unprogrammed default
  4004                           ;	Clock Switch Enable bit
  4005                           ;	CSWEN = 0x1, unprogrammed default
  4006                           ;	Fail-Safe Clock Monitor Enable bit
  4007                           ;	FCMEN = 0x1, unprogrammed default
  4008   300001                     	org	3145729
  4009   300001  FF                 	db	255
  4010                           
  4011                           ;Config register CONFIG2L @ 0x300002
  4012                           ;	unspecified, using default values
  4013                           ;	Master Clear Enable bit
  4014                           ;	MCLRE = 0x1, unprogrammed default
  4015                           ;	Power-up Timer Enable bit
  4016                           ;	PWRTE = 0x1, unprogrammed default
  4017                           ;	Low-power BOR enable bit
  4018                           ;	LPBOREN = 0x1, unprogrammed default
  4019                           ;	Brown-out Reset Enable bits
  4020                           ;	BOREN = 0x3, unprogrammed default
  4021   300002                     	org	3145730
  4022   300002  FF                 	db	255
  4023                           
  4024                           ;Config register CONFIG2H @ 0x300003
  4025                           ;	unspecified, using default values
  4026                           ;	Brown Out Reset Voltage selection bits
  4027                           ;	BORV = 0x3, unprogrammed default
  4028                           ;	ZCD Disable bit
  4029                           ;	ZCD = 0x1, unprogrammed default
  4030                           ;	PPSLOCK bit One-Way Set Enable bit
  4031                           ;	PPS1WAY = 0x1, unprogrammed default
  4032                           ;	Stack Full/Underflow Reset Enable bit
  4033                           ;	STVREN = 0x1, unprogrammed default
  4034                           ;	Debugger Enable bit
  4035                           ;	DEBUG = 0x1, unprogrammed default
  4036                           ;	Extended Instruction Set Enable bit
  4037                           ;	XINST = 0x1, unprogrammed default
  4038   300003                     	org	3145731
  4039   300003  FF                 	db	255
  4040                           
  4041                           ;Config register CONFIG3L @ 0x300004
  4042                           ;	WDT Period Select bits
  4043                           ;	WDTCPS = 0x1F, unprogrammed default
  4044                           ;	WDT operating mode
  4045                           ;	WDTE = OFF, WDT Disabled
  4046   300004                     	org	3145732
  4047   300004  9F                 	db	159
  4048                           
  4049                           ;Config register CONFIG3H @ 0x300005
  4050                           ;	unspecified, using default values
  4051                           ;	WDT Window Select bits
  4052                           ;	WDTCWS = 0x7, unprogrammed default
  4053                           ;	WDT input clock selector
  4054                           ;	WDTCCS = 0x7, unprogrammed default
  4055   300005                     	org	3145733
  4056   300005  FF                 	db	255
  4057                           
  4058                           ;Config register CONFIG4L @ 0x300006
  4059                           ;	unspecified, using default values
  4060                           ;	Write Protection Block 0
  4061                           ;	WRT0 = 0x1, unprogrammed default
  4062                           ;	Write Protection Block 1
  4063                           ;	WRT1 = 0x1, unprogrammed default
  4064                           ;	Write Protection Block 2
  4065                           ;	WRT2 = 0x1, unprogrammed default
  4066                           ;	Write Protection Block 3
  4067                           ;	WRT3 = 0x1, unprogrammed default
  4068                           ;	Write Protection Block 3
  4069                           ;	WRT4 = 0x1, unprogrammed default
  4070                           ;	Write Protection Block 3
  4071                           ;	WRT5 = 0x1, unprogrammed default
  4072                           ;	Write Protection Block 3
  4073                           ;	WRT6 = 0x1, unprogrammed default
  4074                           ;	Write Protection Block 3
  4075                           ;	WRT7 = 0x1, unprogrammed default
  4076   300006                     	org	3145734
  4077   300006  FF                 	db	255
  4078                           
  4079                           ;Config register CONFIG4H @ 0x300007
  4080                           ;	unspecified, using default values
  4081                           ;	Configuration Register Write Protection bit
  4082                           ;	WRTC = 0x1, unprogrammed default
  4083                           ;	Boot Block Write Protection bit
  4084                           ;	WRTB = 0x1, unprogrammed default
  4085                           ;	Data EEPROM Write Protection bit
  4086                           ;	WRTD = 0x1, unprogrammed default
  4087                           ;	Scanner Enable bit
  4088                           ;	SCANE = 0x1, unprogrammed default
  4089                           ;	Low Voltage Programming Enable bit
  4090                           ;	LVP = 0x1, unprogrammed default
  4091   300007                     	org	3145735
  4092   300007  FF                 	db	255
  4093                           
  4094                           ;Config register CONFIG5L @ 0x300008
  4095                           ;	unspecified, using default values
  4096                           ;	UserNVM Program Memory Code Protection bit
  4097                           ;	CP = 0x1, unprogrammed default
  4098                           ;	DataNVM Memory Code Protection bit
  4099                           ;	CPD = 0x1, unprogrammed default
  4100   300008                     	org	3145736
  4101   300008  FF                 	db	255
  4102                           
  4103                           ;Config register CONFIG5H @ 0x300009
  4104                           ;	unspecified, using default values
  4105   300009                     	org	3145737
  4106   300009  FF                 	db	255
  4107                           
  4108                           ;Config register CONFIG6L @ 0x30000A
  4109                           ;	unspecified, using default values
  4110                           ;	Table Read Protection Block 0
  4111                           ;	EBTR0 = 0x1, unprogrammed default
  4112                           ;	Table Read Protection Block 1
  4113                           ;	EBTR1 = 0x1, unprogrammed default
  4114                           ;	Table Read Protection Block 2
  4115                           ;	EBTR2 = 0x1, unprogrammed default
  4116                           ;	Table Read Protection Block 3
  4117                           ;	EBTR3 = 0x1, unprogrammed default
  4118                           ;	Table Read Protection Block 4
  4119                           ;	EBTR4 = 0x1, unprogrammed default
  4120                           ;	Table Read Protection Block 5
  4121                           ;	EBTR5 = 0x1, unprogrammed default
  4122                           ;	Table Read Protection Block 6
  4123                           ;	EBTR6 = 0x1, unprogrammed default
  4124                           ;	Table Read Protection Block 7
  4125                           ;	EBTR7 = 0x1, unprogrammed default
  4126   30000A                     	org	3145738
  4127   30000A  FF                 	db	255
  4128                           
  4129                           ;Config register CONFIG6H @ 0x30000B
  4130                           ;	unspecified, using default values
  4131                           ;	Boot Block Table Read Protection bit
  4132                           ;	EBTRB = 0x1, unprogrammed default
  4133   30000B                     	org	3145739
  4134   30000B  FF                 	db	255
  4135                           tosu	equ	0xFFF
  4136                           tosh	equ	0xFFE
  4137                           tosl	equ	0xFFD
  4138                           stkptr	equ	0xFFC
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           pcl	equ	0xFF9
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           indf0	equ	0xFEF
  4149                           postinc0	equ	0xFEE
  4150                           postdec0	equ	0xFED
  4151                           preinc0	equ	0xFEC
  4152                           plusw0	equ	0xFEB
  4153                           fsr0h	equ	0xFEA
  4154                           fsr0l	equ	0xFE9
  4155                           wreg	equ	0xFE8
  4156                           indf1	equ	0xFE7
  4157                           postinc1	equ	0xFE6
  4158                           postdec1	equ	0xFE5
  4159                           preinc1	equ	0xFE4
  4160                           plusw1	equ	0xFE3
  4161                           fsr1h	equ	0xFE2
  4162                           fsr1l	equ	0xFE1
  4163                           bsr	equ	0xFE0
  4164                           indf2	equ	0xFDF
  4165                           postinc2	equ	0xFDE
  4166                           postdec2	equ	0xFDD
  4167                           preinc2	equ	0xFDC
  4168                           plusw2	equ	0xFDB
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        1
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     55     132
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1046$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S993$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S993$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    Color2String@colorf	PTR struct RGBC_rel size(2) Largest target is 8
		 -> colorf(BANK0[8]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 8
		 -> colorf(BANK0[8]), 

    colour_read_all@c	PTR struct RGBC size(2) Largest target is 8
		 -> color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_Color2String
    _colour_read_all->___awdiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___awdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _main in BANK0

    _Color2String->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    8683
                                             92 COMRAM     2     2      0
                                             25 BANK0     30    30      0
                       _Color2String
                  _I2C_2_Master_Init
                   _color_click_init
                    _colour_read_all
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    14      4    2288
                                             14 COMRAM    18    14      4
                            ___awdiv
                             ___wmul
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     551
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     692
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         4     0      4    5997
                                             88 COMRAM     4     0      4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color2String
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_read_all
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      84       5       82.5%
BITBIGSFRhlh        99      0       0      33        0.0%
BITBIGSFRhh         7B      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRlllhh      36      0       0      37        0.0%
BITBIGSFRllh        2D      0       0      36        0.0%
BITBIGSFRlllhll     2A      0       0      39        0.0%
BITBIGSFRlllll      26      0       0      42        0.0%
BITBIGSFRlllhll     19      0       0      40        0.0%
BITBIGSFRlllhlh      C      0       0      38        0.0%
BITBIGSFRhllll       8      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      41        0.0%
BITBIGSFRlh          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      43        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 28 16:08:47 2023

               _color_read_Red 19E0                _color_read_Blue 1AD0                             l23 1C70  
                           l32 1A7E                             l41 1286                             l26 1D9C  
                           l35 1B1E                             l29 1A2E                             l38 1ACE  
                           l71 1D0E                             l80 1DCA                             l74 1D34  
                           l83 1DD4                             l68 1D0C                             l77 1DDE  
                           l86 1DC0                             l89 1BF2                   ___awdiv@sign 000C  
          ___wmul@multiplicand 0003               _color_read_Clear 1A80               _color_read_Green 1A30  
                          l200 1D5A                            l314 140E                            l327 1572  
                          l191 1938                            l431 184E                            l176 1D7C  
                          l185 1DA0                            l188 1DB4                            l197 1CE2  
                          l900 1872                            l911 0EBA                            l904 18C8  
                          l912 0F00                            l930 16C0                            l923 10A0  
                          l940 1C2A                            l909 0EB2                            l943 1C32  
                          l936 1B6C                            l955 178A                            l963 1BB0  
                          l966 1DE0                            l878 19DE                            u500 16E6  
                          u501 16E2                            u510 170E                            u511 170A  
                          u600 13CE                            u520 1744                            u601 13CA  
                          u521 1740                            u610 1422                            u530 1BB0  
                          u611 141E                            u531 1BAC                            u540 129A  
                          u620 1454                            u700 0E56                            u541 1296  
                          u621 1450                            u701 0E50                            u550 12CC  
                          u630 1492                            u710 0E58                            u551 12C8  
                          u631 148E                            u640 14BC                            u720 0E6A  
                          u800 1D1E                            u561 12F6                            u641 14B8  
                          u721 0E66                            u801 1D1A                            u570 131A  
                          u650 14EA                            u490 16D4                            u730 0EA6  
                          u810 1D34                            u571 1316                            u651 14E6  
                          u491 16D0                            u731 0EA2                            u811 1D30  
                          u580 1344                            u660 1532                            u740 0ED2  
                          u820 1598                            u900 179E                            u581 1340  
                          u661 152E                            u741 0ECE                            u821 1594  
                          u901 179A                            u590 1384                            u670 185E  
                          u750 0EE8                            u830 15E4                            u910 17B8  
                          u591 1380                            u671 185A                            u751 0EE4  
                          u831 15E0                            u911 17B4                            u680 18B4  
                          u760 1022                            u840 1600                            u920 17DE  
                          u681 18B0                            u761 101E                            u841 15FC  
                          u921 17DA                            u690 1C0E                            u770 1040  
                          u930 17FC                            u850 1BDC                            u691 1C0A  
                          u771 103C                            u931 17F8                            u851 1BD4  
                          u780 105A                            u940 1818                            u781 1056  
                          u941 1814                            u870 1DB0                            u790 106A  
                          u950 183E                            u871 1DAC                            u791 1066  
                          u951 183A                            u880 1B64                            u881 1B60  
                          u890 1CE2                            u891 1CDE                            u868 1BDE  
                          u967 1978                            u977 1C48                            u987 1CC4  
                          _abs 1BF4                            _pad 1850                            wreg 000FE8  
                         ?_abs 0013                           l1410 1288                           l1402 1B6E  
                         l1420 12CC                           l1412 128C                           l1404 1B7A  
                         l1500 1896                           l1430 1322                           l1422 12EC  
                         l1414 129A                           l1406 1B8C                           l1502 18B4  
                         l1510 0E46                           l1440 13A4                           l1432 1336  
                         l1424 12F0                           l1416 12BA                           l1504 1BF4  
                         l1408 1B90                           l1520 0EC2                           l1512 0E5A  
                         l1600 1DBC                           l1450 13EE                           l1442 13A6  
                         l1434 1344                           l1426 12FC                           l1418 12BE  
                         l1506 1C0E                           l1530 0EFC                           l1522 0ED2  
                         l1514 0E6A                           l1602 1DCC                           l1610 1BB4  
                         l1444 13B8                           l1436 1356                           l1428 131A  
                         l1460 1442                           l1540 0F9E                           l1532 0F08  
                         l1524 0ED8                           l1516 0E8A                           l1508 0E26  
                         l1604 1DD0                           l1700 1D52                           l1620 1BF0  
                         l1612 1BB8                           l1438 1384                           l1446 13BE  
                         l1470 149A                           l1462 1446                           l1454 1410  
                         l1390 16D4                           l1550 105A                           l1542 0FA4  
                         l1534 0F10                           l1526 0EE8                           l1518 0EA6  
                         l1630 1B2C                           l1710 17A6                           l1614 1BC0  
                         l1606 1DC2                           l1624 1DA0                           l1448 13CE  
                         l1480 151C                           l1472 14AE                           l1464 1454  
                         l1456 1414                           l1392 16E6                           l1552 106A  
                         l1536 0F16                           l1544 1008                           l1528 0EF4  
                         l1632 1B48                           l1640 1CEE                           l1560 1D0E  
                         l1720 17CC                           l1712 17AA                           l1704 178C  
                         l1616 1BC8                           l1608 1DC6                           l1800 196E  
                         l1626 1DB0                           l1474 14BC                           l1482 1522  
                         l1466 1474                           l1458 1422                           l1394 16F0  
                         l1490 1850                           l1554 1070                           l1546 1022  
                         l1538 0F98                           l1570 15B4                           l1634 1B64  
                         l1642 1CF4                           l1562 1D1E                           l1650 1D80  
                         l1730 1802                           l1722 17DE                           l1714 17B8  
                         l1706 1790                           l1618 1BEE                           l1484 1532  
                         l1476 14EA                           l1468 1492                           l1396 170E  
                         l1388 16C2                           l1492 185E                           l1556 1080  
                         l1548 1040                           l1580 1656                           l1572 15B8  
                         l1564 1574                           l1628 1B20                           l1644 1CF6  
                         l1732 1818                           l1724 17E6                           l1740 182E  
                         l1716 17C0                           l1708 179E                           l1660 1A76  
                         l1652 19E0                           l1486 1552                           l1478 150A  
                         l1398 1744                           l1494 186A                           l1574 15C8  
                         l1566 1598                           l1646 1CF8                           l1638 1CE4  
                         l1750 1C38                           l1742 183E                           l1734 1820  
                         l1726 17EE                           l1718 17C4                           l1670 1A80  
                         l1654 1A26                           l1496 187E                           l1584 1686  
                         l1576 15E4                           l1568 15A6                           l1680 19A8  
                         l1648 1CFA                           l1752 1C42                           l1744 1846  
                         l1736 1822                           l1728 17FC                           l1664 1AD0  
                         l1672 1AC6                           l1760 10A2                           l1690 1CB0  
                         l1498 1892                           l1578 1600                           l1682 19B0  
                         l1594 1DD6                           l1754 1C52                           l1738 1828  
                         l1666 1B16                           l1658 1A30                           l1770 123E  
                         l1762 10FE                           l1692 1CBE                           l1588 1698  
                         l1684 19CC                           l1676 198E                           l1596 1DDA  
                         l1756 1C5C                           l1748 1C34                           l1764 116E  
                         l1780 1D76                           l1772 1D5C                           l1694 1CC2  
                         l1678 19A0                           l1598 1DB8                           l1758 1C66  
                         l1766 11AE                           l1782 1D78                           l1774 1D60  
                         l1790 193A                           l1696 1CCA                           l1688 1CAC  
                         l1768 11F6                           l1784 1D7A                           l1776 1D6A  
                         l1792 193E                           l1786 18CA                           l1698 1D36  
                         l1778 1D6C                           l1794 1942                           l1788 192C  
                         l1796 1946                           l1798 195A                           ?_pad 0011  
                         STR_1 0E01                   _BAUD4CONbits 000EE9                           abs@a 0013  
                         _dbuf 007C                           _main 193A                           _dtoa 0E26  
                         _prec 0076                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
       __end_of_color_read_Red 1A30                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                __end_of___aodiv 1410                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 1574                __end_of___awdiv 1850  
              ___awdiv@divisor 0009                ___awdiv@counter 000B                   vfpfcnvrt@fmt 0041  
      __end_of_sendCharSerial4 1DB6     __end_of_I2C_2_Master_Start 1DE0     __end_of_I2C_2_Master_Write 1DC2  
                        _flags 0078                          _color 00A4                          _fputc 16C2  
                        _fputs 1B6E                          pad@fp 0011                          _width 0074  
                        _putch 1DE0                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                          tablat 000FF5                          status 000FD8  
              __end_of_sprintf 19E0           __end_of_Color2String 193A        __end_of_color_read_Blue 1B20  
        _I2C_2_Master_RepStart 1DC2                ?_color_read_Red 0005                __initialization 1C72  
                 __end_of_main 198E                   __end_of_dtoa 10A2                         ??_main 005D  
                       ??_dtoa 0026                  __activetblptr 000001                         ?_fputc 0001  
                       ?_fputs 000A                _colour_read_all 10A2               ___awdiv@dividend 0007  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70       __end_of_color_click_init 1C72  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   vfprintf@cfmt 0057  
                    ??___aodiv 0011                      ??___aomod 0011                         ___wmul 1D36  
                    ??___awdiv 000B                         _colorf 009C                         clear_0 1C8A  
                       clear_1 1C96               ___awdiv@quotient 000D                         isa$std 000001  
                       pad@buf 0013                         dtoa@fp 001C                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 1B6E                      ??_sprintf 0059                     __accesstop 0060  
      __end_of__initialization 1C9E       __end_of_color_read_Clear 1AD0       __end_of_color_read_Green 1A80  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 1DE2                  __end_of_fputc 178C  
                __end_of_fputs 1BB2                  __end_of_putch 1DE2        __end_of_colour_read_all 1288  
                      ??_fputc 0005                        ??_fputs 000E                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_writetoaddr 1D7E  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
                 _Color2String 18CA                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1D9E             _I2C_2_Master_Start 1DD6  
                   _initUSART4 1D5C             _I2C_2_Master_Write 1DB6                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___aodiv 1288                        ___aomod 1410                        ___awdiv 178C  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                        __pcinit 1C72                        __ramtop 0E00  
                      __ptext0 193A                        __ptext1 1D5C                        __ptext2 10A2  
                      __ptext3 19E0                        __ptext4 1A30                        __ptext5 1A80  
                      __ptext6 1AD0                        __ptext7 1DC2                        __ptext8 1BB2  
                      __ptext9 1D36               ?_colour_read_all 000F                  _RxBufWriteCnt 005F  
                      _sprintf 198E           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 1C9E                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001             ??_color_click_init 0005              __end_of_vfpfcnvrt 16C2  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
                    _TRISCbits 000F83                      _TRISDbits 000F84       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002              ?_color_read_Clear 0005                   _EUSART4RXbuf 0060  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0005                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 1D5C            color_read_Clear@tmp 000A            start_initialization 1C72  
                  __end_of_abs 1C34                    __end_of_pad 18CA                  _TxBufWriteCnt 007A  
          color_read_Green@tmp 000A                    vfprintf@fmt 0053                       ??___wmul 0005  
                  __pdataBANK0 00E3                    __pbssCOMRAM 005F                  __pcstackBANK0 00AC  
             ___aodiv@dividend 0001                      _dtoa$1074 002E                       ?___aodiv 0001  
                     ?___aomod 0001                       ?___awdiv 0007               ___aodiv@quotient 0013  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1D0E              _I2C_2_Master_Init 1CE4              _I2C_2_Master_Read 1BB2  
            _I2C_2_Master_Stop 1DCC                   _RxBufReadCnt 007B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 00AC              colour_read_all@cf 0011              _sendStringSerial4 1CAC  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005            ??_I2C_2_Master_Stop 0002             ?_sendStringSerial4 0002  
                     _PIR4bits 000E37              ??_sendCharSerial4 0001           colour_read_all@total 001F  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 1574      __end_of_I2C_2_Master_Idle 1D36      __end_of_I2C_2_Master_Init 1D0E  
    __end_of_I2C_2_Master_Read 1BF4              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1DD6  
                     _DataFlag 00E3    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
                 _TxBufReadCnt 0079      __end_of_sendStringSerial4 1CE4  __end_of_I2C_2_Master_RepStart 1DCC  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
                 __Lsmallconst 0E00                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011                     _ANSELDbits 000EA7                     sprintf@fmt 00AE  
           __end_of_initUSART4 1D7E                       __ptext10 178C                       __ptext11 1C34  
                     __ptext20 1B20                       __ptext12 1D7E                       __ptext21 1574  
                     __ptext13 1DB6                       __ptext30 1CAC                       __ptext22 0E26  
                     __ptext14 1DCC                       __ptext31 1D9E                       __ptext23 1850  
                     __ptext15 1DD6                       __ptext24 1B6E                       __ptext16 1D0E  
                     __ptext25 16C2                       __ptext17 1CE4                       __ptext26 1DE0  
                     __ptext18 18CA                       __ptext27 1BF4                       __ptext19 198E  
                     __ptext28 1410                       __ptext29 1288                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA             Color2String@colorf 005B                Color2String@buf 0059  
             colour_read_all@c 000F                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 1B20                       main@data 00C5               ___aomod@dividend 0001  
                ?_Color2String 0059                      sprintf@ap 00B8              ??_colour_read_all 0013  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0045                ___aomod@counter 0011  
             _color_click_init 1C34                 ??_Color2String 005D                       sprintf@f 00BA  
                     sprintf@s 00AC                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 1D9E  
                 ___aomod@sign 0012  
