

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 16 12:47:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 06/04/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK0
   113   00467A                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for __recogniseColour
   117   00467A  0096               	dw	150
   118                           
   119                           ;initializer for __halfsquare
   120   00467C  0140               	dw	320
   121                           
   122                           ;initializer for __1square
   123   00467E  0320               	dw	800
   124                           
   125                           ;initializer for __45drightdelay
   126   004680  0090               	dw	144
   127                           
   128                           ;initializer for __45dleftdelay
   129   004682  0090               	dw	144
   130                           
   131                           ;initializer for _ForwardFlag
   132   004684  01                 	db	1
   133   000000                     _LATEbits	set	3965
   134   000000                     _TRISEbits	set	3973
   135   000000                     _LATHbits	set	3968
   136   000000                     _TX4REG	set	3812
   137   000000                     _RC4STAbits	set	3815
   138   000000                     _SP4BRGH	set	3814
   139   000000                     _TRISAbits	set	3969
   140   000000                     _TRISGbits	set	3975
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _RX4PPS	set	3605
   143   000000                     _SSP2CLKPPS	set	3612
   144   000000                     _SSP2DATPPS	set	3613
   145   000000                     _ANSELDbits	set	3751
   146   000000                     _SSP2ADD	set	3798
   147   000000                     _SSP2CON1bits	set	3801
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATGbits	set	3967
   150   000000                     _TRISHbits	set	3976
   151   000000                     _PORTFbits	set	3982
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _LATCbits	set	3963
   155   000000                     _LATDbits	set	3964
   156   000000                     _LATFbits	set	3966
   157   000000                     _TRISCbits	set	3971
   158   000000                     _TRISDbits	set	3972
   159   000000                     _TRISFbits	set	3974
   160   000000                     _RC4REG	set	3811
   161   000000                     _SP4BRGL	set	3813
   162   000000                     _TX4STAbits	set	3816
   163   000000                     _BAUD4CONbits	set	3817
   164   000000                     _SSP2CON2	set	3802
   165   000000                     _CCPR4H	set	3873
   166   000000                     _CCPR3H	set	3877
   167   000000                     _SSP2STAT	set	3800
   168   000000                     _ANSELFbits	set	3764
   169   000000                     _SSP2BUF	set	3797
   170   000000                     _PIE0bits	set	3625
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RC0PPS	set	3682
   173   000000                     _RD5PPS	set	3695
   174   000000                     _RE2PPS	set	3700
   175   000000                     _RD6PPS	set	3696
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _T2PR	set	4028
   179   000000                     _T2CONbits	set	4029
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _RC7PPS	set	3689
   184   000000                     _RE4PPS	set	3702
   185   000000                     _RG6PPS	set	3720
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _T2CLKCONbits	set	4031
   191   000000                     _T2HLTbits	set	4030
   192   000000                     _INTCONbits	set	4082
   193   000000                     _PIE4bits	set	3629
   194   000000                     _PIR0bits	set	3635
   195                           
   196                           	psect	smallconst
   197   000E00                     __psmallconst:
   198                           	callstack 0
   199   000E00  00                 	db	0
   200   000E01                     STR_10:
   201                           
   202                           ; BSR set to: 14
   203   000E01  20                 	db	32
   204   000E02  52                 	db	82	;'R'
   205   000E03  65                 	db	101	;'e'
   206   000E04  64                 	db	100	;'d'
   207   000E05  20                 	db	32
   208   000E06  25                 	db	37
   209   000E07  66                 	db	102	;'f'
   210   000E08  20                 	db	32
   211   000E09  47                 	db	71	;'G'
   212   000E0A  72                 	db	114	;'r'
   213   000E0B  65                 	db	101	;'e'
   214   000E0C  65                 	db	101	;'e'
   215   000E0D  6E                 	db	110	;'n'
   216   000E0E  2C                 	db	44
   217   000E0F  25                 	db	37
   218   000E10  66                 	db	102	;'f'
   219   000E11  20                 	db	32
   220   000E12  42                 	db	66	;'B'
   221   000E13  6C                 	db	108	;'l'
   222   000E14  75                 	db	117	;'u'
   223   000E15  65                 	db	101	;'e'
   224   000E16  2C                 	db	44
   225   000E17  25                 	db	37
   226   000E18  66                 	db	102	;'f'
   227   000E19  20                 	db	32
   228   000E1A  63                 	db	99	;'c'
   229   000E1B  6C                 	db	108	;'l'
   230   000E1C  65                 	db	101	;'e'
   231   000E1D  61                 	db	97	;'a'
   232   000E1E  72                 	db	114	;'r'
   233   000E1F  20                 	db	32
   234   000E20  25                 	db	37
   235   000E21  66                 	db	102	;'f'
   236   000E22  20                 	db	32
   237   000E23  48                 	db	72	;'H'
   238   000E24  75                 	db	117	;'u'
   239   000E25  65                 	db	101	;'e'
   240   000E26  20                 	db	32
   241   000E27  25                 	db	37
   242   000E28  66                 	db	102	;'f'
   243   000E29  20                 	db	32
   244   000E2A  0D                 	db	13
   245   000E2B  00                 	db	0
   246   000E2C                     STR_6:
   247                           
   248                           ; BSR set to: 14
   249   000E2C  4C                 	db	76	;'L'
   250   000E2D  69                 	db	105	;'i'
   251   000E2E  67                 	db	103	;'g'
   252   000E2F  68                 	db	104	;'h'
   253   000E30  74                 	db	116	;'t'
   254   000E31  20                 	db	32
   255   000E32  42                 	db	66	;'B'
   256   000E33  6C                 	db	108	;'l'
   257   000E34  75                 	db	117	;'u'
   258   000E35  65                 	db	101	;'e'
   259   000E36  00                 	db	0
   260   000E37                     STR_4:
   261                           
   262                           ; BSR set to: 14
   263   000E37  44                 	db	68	;'D'
   264   000E38  61                 	db	97	;'a'
   265   000E39  72                 	db	114	;'r'
   266   000E3A  6B                 	db	107	;'k'
   267   000E3B  20                 	db	32
   268   000E3C  42                 	db	66	;'B'
   269   000E3D  6C                 	db	108	;'l'
   270   000E3E  75                 	db	117	;'u'
   271   000E3F  65                 	db	101	;'e'
   272   000E40  00                 	db	0
   273   000E41                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E41  4F                 	db	79	;'O'
   277   000E42  72                 	db	114	;'r'
   278   000E43  61                 	db	97	;'a'
   279   000E44  6E                 	db	110	;'n'
   280   000E45  67                 	db	103	;'g'
   281   000E46  65                 	db	101	;'e'
   282   000E47  00                 	db	0
   283   000E48                     STR_8:
   284                           
   285                           ; BSR set to: 14
   286   000E48  59                 	db	89	;'Y'
   287   000E49  65                 	db	101	;'e'
   288   000E4A  6C                 	db	108	;'l'
   289   000E4B  6C                 	db	108	;'l'
   290   000E4C  6F                 	db	111	;'o'
   291   000E4D  77                 	db	119	;'w'
   292   000E4E  00                 	db	0
   293   000E4F                     STR_9:
   294                           
   295                           ; BSR set to: 14
   296   000E4F  57                 	db	87	;'W'
   297   000E50  68                 	db	104	;'h'
   298   000E51  69                 	db	105	;'i'
   299   000E52  74                 	db	116	;'t'
   300   000E53  65                 	db	101	;'e'
   301   000E54  00                 	db	0
   302   000E55                     STR_7:
   303                           
   304                           ; BSR set to: 14
   305   000E55  47                 	db	71	;'G'
   306   000E56  72                 	db	114	;'r'
   307   000E57  65                 	db	101	;'e'
   308   000E58  65                 	db	101	;'e'
   309   000E59  6E                 	db	110	;'n'
   310   000E5A  00                 	db	0
   311   000E5B                     STR_3:
   312                           
   313                           ; BSR set to: 14
   314   000E5B  50                 	db	80	;'P'
   315   000E5C  69                 	db	105	;'i'
   316   000E5D  6E                 	db	110	;'n'
   317   000E5E  6B                 	db	107	;'k'
   318   000E5F  00                 	db	0
   319   000E60                     STR_2:
   320                           
   321                           ; BSR set to: 14
   322   000E60  52                 	db	82	;'R'
   323   000E61  65                 	db	101	;'e'
   324   000E62  64                 	db	100	;'d'
   325   000E63  00                 	db	0
   326   000E64  00                 	db	0	; dummy byte at the end
   327   000000                     
   328                           ; #config settings
   329                           
   330                           	psect	cinit
   331   004400                     __pcinit:
   332                           	callstack 0
   333   004400                     start_initialization:
   334                           	callstack 0
   335   004400                     __initialization:
   336                           	callstack 0
   337                           
   338                           ; Initialize objects allocated to BANK0 (11 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340   004400  0E7A               	movlw	low __pidataBANK0
   341   004402  6EF6               	movwf	tblptrl,c
   342   004404  0E46               	movlw	high __pidataBANK0
   343   004406  6EF7               	movwf	tblptrh,c
   344   004408  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345   00440A  6EF8               	movwf	tblptru,c
   346   00440C  EE00  F0EE         	lfsr	0,__pdataBANK0
   347   004410  EE10 F00B          	lfsr	1,11
   348   004414                     copy_data0:
   349   004414  0009               	tblrd		*+
   350   004416  CFF5 FFEE          	movff	tablat,postinc0
   351   00441A  50E5               	movf	postdec1,w,c
   352   00441C  50E1               	movf	fsr1l,w,c
   353   00441E  E1FA               	bnz	copy_data0
   354                           
   355                           ; Clear objects allocated to BANK1 (80 bytes)
   356   004420  EE01  F000         	lfsr	0,__pbssBANK1
   357   004424  0E50               	movlw	80
   358   004426                     clear_0:
   359   004426  6AEE               	clrf	postinc0,c
   360   004428  06E8               	decf	wreg,f,c
   361   00442A  E1FD               	bnz	clear_0
   362                           
   363                           ; Clear objects allocated to BANK0 (98 bytes)
   364   00442C  EE00  F060         	lfsr	0,__pbssBANK0
   365   004430  0E62               	movlw	98
   366   004432                     clear_1:
   367   004432  6AEE               	clrf	postinc0,c
   368   004434  06E8               	decf	wreg,f,c
   369   004436  E1FD               	bnz	clear_1
   370   004438                     end_of_initialization:
   371                           	callstack 0
   372   004438                     __end_of__initialization:
   373                           	callstack 0
   374   004438  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375   00443A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376   00443C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   377   00443E  6EF8               	movwf	tblptru,c
   378   004440  0E0E               	movlw	high __Lsmallconst
   379   004442  6EF7               	movwf	tblptrh,c
   380   004444  0100               	movlb	0
   381   004446  EFE0  F015         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssBANK0
   384   000060                     __pbssBANK0:
   385                           	callstack 0
   386   000060                     _retracingDone:
   387                           	callstack 0
   388   000060                     	ds	2
   389   000062                     _movementCount:
   390                           	callstack 0
   391   000062                     	ds	2
   392   000064                     _maxTime:
   393                           	callstack 0
   394   000064                     	ds	2
   395   000066                     _movementMemory:
   396                           	callstack 0
   397   000066                     	ds	40
   398   00008E                     _colorf:
   399                           	callstack 0
   400   00008E                     	ds	22
   401   0000A4                     _colorrel:
   402                           	callstack 0
   403   0000A4                     	ds	12
   404   0000B0                     _motorR:
   405                           	callstack 0
   406   0000B0                     	ds	9
   407   0000B9                     _motorL:
   408                           	callstack 0
   409   0000B9                     	ds	9
   410                           
   411                           	psect	dataBANK0
   412   0000EE                     __pdataBANK0:
   413                           	callstack 0
   414   0000EE                     __recogniseColour:
   415                           	callstack 0
   416   0000EE                     	ds	2
   417   0000F0                     __halfsquare:
   418                           	callstack 0
   419   0000F0                     	ds	2
   420   0000F2                     __1square:
   421                           	callstack 0
   422   0000F2                     	ds	2
   423   0000F4                     __45drightdelay:
   424                           	callstack 0
   425   0000F4                     	ds	2
   426   0000F6                     __45dleftdelay:
   427                           	callstack 0
   428   0000F6                     	ds	2
   429   0000F8                     _ForwardFlag:
   430                           	callstack 0
   431   0000F8                     	ds	1
   432                           
   433                           	psect	bssBANK1
   434   000100                     __pbssBANK1:
   435                           	callstack 0
   436   000100                     _timerMemory:
   437                           	callstack 0
   438   000100                     	ds	80
   439                           
   440                           	psect	cstackBANK0
   441   0000C2                     __pcstackBANK0:
   442                           	callstack 0
   443   0000C2                     White@mL:
   444                           	callstack 0
   445   0000C2                     ___fldiv@rem:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x0
   449   0000C2                     	ds	2
   450   0000C4                     White@mR:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454   0000C4                     	ds	2
   455   0000C6                     ___fldiv@sign:
   456                           	callstack 0
   457   0000C6                     White@movementCount:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x4
   461   0000C6                     	ds	1
   462   0000C7                     ___fldiv@new_exp:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466   0000C7                     	ds	1
   467   0000C8                     White@movementMemory:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x6
   471   0000C8                     	ds	1
   472   0000C9                     ___fldiv@grs:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x7
   476   0000C9                     	ds	1
   477   0000CA                     White@timerMemory:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x8
   481   0000CA                     	ds	2
   482   0000CC                     White@tempTimer:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0xA
   486   0000CC                     	ds	1
   487   0000CD                     ___fldiv@bexp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xB
   491   0000CD                     	ds	1
   492   0000CE                     ___fldiv@aexp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0xC
   496   0000CE                     	ds	1
   497   0000CF                     colour_read_all@cf:
   498                           	callstack 0
   499   0000CF                     RGB2Hue@cf:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xD
   503   0000CF                     	ds	1
   504   0000D0                     White@i:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508   0000D0                     	ds	1
   509   0000D1                     ??_RGB2Hue:
   510   0000D1                     colour_read_all@rel:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xF
   514   0000D1                     	ds	2
   515   0000D3                     colour_read_all@C:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x11
   519   0000D3                     	ds	2
   520   0000D5                     _RGB2Hue$3100:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x13
   524   0000D5                     	ds	2
   525   0000D7                     _colour_read_all$3099:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x15
   529   0000D7                     	ds	2
   530   0000D9                     RGB2Hue@max:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x17
   534   0000D9                     	ds	2
   535   0000DB                     RGB2Hue@min:
   536                           	callstack 0
   537   0000DB                     colour_read_all@R:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x19
   541   0000DB                     	ds	4
   542   0000DF                     colour_read_all@G:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x1D
   546   0000DF                     	ds	4
   547   0000E3                     colour_read_all@B:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x21
   551   0000E3                     	ds	4
   552   0000E7                     colour_read_all@total:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x25
   556   0000E7                     	ds	4
   557   0000EB                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x29
   560   0000EB                     	ds	2
   561   0000ED                     main@wall:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x2B
   565   0000ED                     	ds	1
   566                           
   567                           	psect	cstackCOMRAM
   568   000001                     __pcstackCOMRAM:
   569                           	callstack 0
   570   000001                     ??_I2C_2_Master_Idle:
   571   000001                     ?___wmul:
   572                           	callstack 0
   573   000001                     ?___fltol:
   574                           	callstack 0
   575   000001                     ClickLEDOn@power:
   576                           	callstack 0
   577   000001                     initDCmotorsPWM@PWMperiod:
   578                           	callstack 0
   579   000001                     memoryUpdateMovement@cf:
   580                           	callstack 0
   581   000001                     ___wmul@multiplier:
   582                           	callstack 0
   583   000001                     ___fleq@ff1:
   584                           	callstack 0
   585   000001                     ___fltol@f1:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x0
   589   000001                     	ds	1
   590   000002                     ??_I2C_2_Master_Read:
   591   000002                     I2C_2_Master_Write@data_byte:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x1
   595   000002                     	ds	1
   596   000003                     color_writetoaddr@value:
   597                           	callstack 0
   598   000003                     I2C_2_Master_Read@ack:
   599                           	callstack 0
   600   000003                     memoryUpdateMovement@movementCount:
   601                           	callstack 0
   602   000003                     ___wmul@multiplicand:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x2
   606   000003                     	ds	1
   607   000004                     color_writetoaddr@address:
   608                           	callstack 0
   609   000004                     I2C_2_Master_Read@tmp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x3
   613   000004                     	ds	1
   614   000005                     ??_color_click_init:
   615   000005                     ??___fltol:
   616   000005                     ?_color_read_Red:
   617                           	callstack 0
   618   000005                     ?_color_read_Green:
   619                           	callstack 0
   620   000005                     ?_color_read_Blue:
   621                           	callstack 0
   622   000005                     ?_color_read_Clear:
   623                           	callstack 0
   624   000005                     memoryUpdateMovement@movementMemory:
   625                           	callstack 0
   626   000005                     ___wmul@product:
   627                           	callstack 0
   628   000005                     ___fleq@ff2:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   000005                     	ds	2
   633   000007                     ??_color_read_Red:
   634   000007                     ??_color_read_Green:
   635   000007                     ??_color_read_Blue:
   636   000007                     ??_color_read_Clear:
   637   000007                     ?___lwdiv:
   638                           	callstack 0
   639   000007                     memoryUpdateMovement@colourcode:
   640                           	callstack 0
   641   000007                     ___lwdiv@dividend:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x6
   645   000007                     	ds	2
   646   000009                     ??___fleq:
   647   000009                     ___fltol@sign1:
   648                           	callstack 0
   649   000009                     ___lwdiv@divisor:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653   000009                     	ds	1
   654   00000A                     ___fltol@exp1:
   655                           	callstack 0
   656   00000A                     color_read_Red@tmp:
   657                           	callstack 0
   658   00000A                     color_read_Green@tmp:
   659                           	callstack 0
   660   00000A                     color_read_Blue@tmp:
   661                           	callstack 0
   662   00000A                     color_read_Clear@tmp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x9
   666   00000A                     	ds	1
   667   00000B                     ___lwdiv@quotient:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0xA
   671   00000B                     	ds	1
   672   00000C                     ?___xxtofl:
   673                           	callstack 0
   674   00000C                     ___xxtofl@val:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0xB
   678   00000C                     	ds	1
   679   00000D                     ___lwdiv@counter:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0xC
   683   00000D                     	ds	1
   684   00000E                     setMotorPWM@m:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0xD
   688   00000E                     	ds	2
   689   000010                     ??_setMotorPWM:
   690   000010                     ??___xxtofl:
   691                           
   692                           ; 1 bytes @ 0xF
   693   000010                     	ds	2
   694   000012                     setMotorPWM@posDuty:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x11
   698   000012                     	ds	1
   699   000013                     setMotorPWM@negDuty:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x12
   703   000013                     	ds	1
   704   000014                     ___xxtofl@sign:
   705                           	callstack 0
   706   000014                     stop@mL:
   707                           	callstack 0
   708   000014                     turnLeft@mL:
   709                           	callstack 0
   710   000014                     turnRight@mL:
   711                           	callstack 0
   712   000014                     fullSpeedAhead@mL:
   713                           	callstack 0
   714   000014                     fullSpeedReverse@mL:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x13
   718   000014                     	ds	1
   719   000015                     ___xxtofl@exp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x14
   723   000015                     	ds	1
   724   000016                     stop@mR:
   725                           	callstack 0
   726   000016                     turnLeft@mR:
   727                           	callstack 0
   728   000016                     turnRight@mR:
   729                           	callstack 0
   730   000016                     fullSpeedAhead@mR:
   731                           	callstack 0
   732   000016                     fullSpeedReverse@mR:
   733                           	callstack 0
   734   000016                     ___xxtofl@arg:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x15
   738   000016                     	ds	2
   739   000018                     ??_fullSpeedAhead:
   740   000018                     ??_stop:
   741   000018                     ??_fullSpeedReverse:
   742   000018                     turnLeft@i:
   743                           	callstack 0
   744   000018                     turnRight@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x17
   748   000018                     	ds	1
   749   000019                     fullSpeedAhead@i:
   750                           	callstack 0
   751   000019                     fullSpeedReverse@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x18
   755   000019                     	ds	1
   756   00001A                     ?___flmul:
   757                           	callstack 0
   758   00001A                     Left45@mL:
   759                           	callstack 0
   760   00001A                     Right45@mL:
   761                           	callstack 0
   762   00001A                     ___flmul@b:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x19
   766   00001A                     	ds	1
   767   00001B                     RAMback@mL:
   768                           	callstack 0
   769   00001B                     reverseHalfSquare@mL:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x1A
   773   00001B                     	ds	1
   774   00001C                     Left45@mR:
   775                           	callstack 0
   776   00001C                     Right45@mR:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1B
   780   00001C                     	ds	1
   781   00001D                     RAMback@mR:
   782                           	callstack 0
   783   00001D                     reverseHalfSquare@mR:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1C
   787   00001D                     	ds	1
   788   00001E                     ??_Left45:
   789   00001E                     ??_Right45:
   790   00001E                     ___flmul@a:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x1D
   794   00001E                     	ds	1
   795   00001F                     ??_RAMback:
   796   00001F                     ??_reverseHalfSquare:
   797                           
   798                           ; 1 bytes @ 0x1E
   799   00001F                     	ds	1
   800   000020                     rotate180left@mL:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x1F
   804   000020                     	ds	1
   805   000021                     Red_R90@mL:
   806                           	callstack 0
   807   000021                     Green_L90@mL:
   808                           	callstack 0
   809   000021                     Yellow_rev1_R90@mL:
   810                           	callstack 0
   811   000021                     Pink_rev1_L90@mL:
   812                           	callstack 0
   813   000021                     Orange_R135@mL:
   814                           	callstack 0
   815   000021                     LightBlue_L135@mL:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x20
   819   000021                     	ds	1
   820   000022                     ??___flmul:
   821   000022                     rotate180left@mR:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x21
   825   000022                     	ds	1
   826   000023                     Red_R90@mR:
   827                           	callstack 0
   828   000023                     Green_L90@mR:
   829                           	callstack 0
   830   000023                     Yellow_rev1_R90@mR:
   831                           	callstack 0
   832   000023                     Pink_rev1_L90@mR:
   833                           	callstack 0
   834   000023                     Orange_R135@mR:
   835                           	callstack 0
   836   000023                     LightBlue_L135@mR:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x22
   840   000023                     	ds	1
   841   000024                     Blue_T180@mL:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x23
   845   000024                     	ds	1
   846   000025                     ??_Yellow_rev1_R90:
   847   000025                     ??_Pink_rev1_L90:
   848   000025                     
   849                           ; 1 bytes @ 0x24
   850   000025                     	ds	1
   851   000026                     ___flmul@sign:
   852                           	callstack 0
   853   000026                     Blue_T180@mR:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x25
   857   000026                     	ds	1
   858   000027                     ___flmul@grs:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x26
   862   000027                     	ds	1
   863   000028                     
   864                           ; 1 bytes @ 0x27
   865   000028                     	ds	3
   866   00002B                     ___flmul@aexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x2A
   870   00002B                     	ds	1
   871   00002C                     ___flmul@bexp:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x2B
   875   00002C                     	ds	1
   876   00002D                     ___flmul@prod:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x2C
   880   00002D                     	ds	4
   881   000031                     ___flmul@temp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x30
   885   000031                     	ds	2
   886   000033                     ?_getTimerValue:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x32
   890   000033                     	ds	4
   891   000037                     ??_getTimerValue:
   892                           
   893                           ; 1 bytes @ 0x36
   894   000037                     	ds	2
   895   000039                     getTimerValue@timerCount:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x38
   899   000039                     	ds	2
   900   00003B                     ?___fladd:
   901                           	callstack 0
   902   00003B                     ___fladd@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3A
   906   00003B                     	ds	4
   907   00003F                     ___fladd@a:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x3E
   911   00003F                     	ds	4
   912   000043                     ??___fladd:
   913                           
   914                           ; 1 bytes @ 0x42
   915   000043                     	ds	4
   916   000047                     ___fladd@signs:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x46
   920   000047                     	ds	1
   921   000048                     ___fladd@aexp:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x47
   925   000048                     	ds	1
   926   000049                     ___fladd@bexp:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x48
   930   000049                     	ds	1
   931   00004A                     ___fladd@grs:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x49
   935   00004A                     	ds	1
   936   00004B                     ?___flsub:
   937                           	callstack 0
   938   00004B                     memoryUpdateTime@movementCount:
   939                           	callstack 0
   940   00004B                     ___flge@ff1:
   941                           	callstack 0
   942   00004B                     ___flsub@b:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x4A
   946   00004B                     	ds	2
   947   00004D                     memoryUpdateTime@timerMemory:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x4C
   951   00004D                     	ds	2
   952   00004F                     memoryUpdateTime@timerVal:
   953                           	callstack 0
   954   00004F                     ___flge@ff2:
   955                           	callstack 0
   956   00004F                     ___flsub@a:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x4E
   960   00004F                     	ds	4
   961   000053                     ??___flge:
   962   000053                     ?___fldiv:
   963                           	callstack 0
   964   000053                     ___fldiv@b:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x52
   968   000053                     	ds	4
   969   000057                     ??_White:
   970   000057                     ?_Hue2Colour:
   971                           	callstack 0
   972   000057                     Hue2Colour@cf:
   973                           	callstack 0
   974   000057                     ___fldiv@a:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x56
   978   000057                     	ds	2
   979   000059                     Hue2Colour@rel:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x58
   983   000059                     	ds	2
   984   00005B                     ??___fldiv:
   985   00005B                     Hue2Colour@colourname:
   986                           	callstack 0
   987   00005B                     Colour2Action@cf:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x5A
   991   00005B                     	ds	2
   992   00005D                     
   993                           ; 1 bytes @ 0x5C
   994   00005D                     	ds	2
   995   00005F                     
   996                           ; 1 bytes @ 0x5E
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 19 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  data          100    0        unsigned char [100]
  1007 ;;  buf            20    0        unsigned char [20]
  1008 ;;  PWMcycle        2    0        unsigned int 
  1009 ;;  wall            1   43[BANK0 ] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1022 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels required when called: 9
  1025 ;; This function calls:
  1026 ;;		_ClickLEDOn
  1027 ;;		_Colour2Action
  1028 ;;		_Hue2Colour
  1029 ;;		_I2C_2_Master_Init
  1030 ;;		_Interrupts_init
  1031 ;;		_LED_init
  1032 ;;		_RGB2Hue
  1033 ;;		_Timer0_init
  1034 ;;		_TimerReset
  1035 ;;		___flge
  1036 ;;		_color_click_init
  1037 ;;		_colour_read_all
  1038 ;;		_fullSpeedAhead
  1039 ;;		_initDCmotorsPWM
  1040 ;;		_initUSART4
  1041 ;;		_memoryUpdateMovement
  1042 ;;		_memoryUpdateTime
  1043 ;;		_stop
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text0
  1050   002BC0                     __ptext0:
  1051                           	callstack 0
  1052   002BC0                     _main:
  1053                           	callstack 22
  1054   002BC0                     
  1055                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1056   002BC0  EC09  F023         	call	_initUSART4	;wreg free
  1057   002BC4                     
  1058                           ;main.c: 23:     color_click_init();
  1059   002BC4  EC69  F022         	call	_color_click_init	;wreg free
  1060   002BC8                     
  1061                           ;main.c: 24:     I2C_2_Master_Init();
  1062   002BC8  ECBB  F022         	call	_I2C_2_Master_Init	;wreg free
  1063   002BCC                     
  1064                           ;main.c: 25:     LED_init();
  1065   002BCC  EC2A  F023         	call	_LED_init	;wreg free
  1066   002BD0                     
  1067                           ;main.c: 26:     Interrupts_init();
  1068   002BD0  EC37  F023         	call	_Interrupts_init	;wreg free
  1069   002BD4                     
  1070                           ;main.c: 27:     Timer0_init();
  1071   002BD4  ECF7  F022         	call	_Timer0_init	;wreg free
  1072   002BD8                     
  1073                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1074   002BD8  0E00               	movlw	0
  1075   002BDA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1076   002BDC  0E63               	movlw	99
  1077   002BDE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1078   002BE0  EC29  F01E         	call	_initDCmotorsPWM	;wreg free
  1079   002BE4                     
  1080                           ;main.c: 31:     motorL.power=0;
  1081   002BE4  0E00               	movlw	0
  1082   002BE6  0100               	movlb	0	; () banked
  1083   002BE8  6FB9               	movwf	_motorL& (0+255),b
  1084   002BEA                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 32:     motorL.direction=1;
  1087   002BEA  0E01               	movlw	1
  1088   002BEC  6FBA               	movwf	(_motorL+1)& (0+255),b
  1089   002BEE                     
  1090                           ; BSR set to: 0
  1091                           ;main.c: 33:     motorL.brakemode=1;
  1092   002BEE  0E01               	movlw	1
  1093   002BF0  6FBB               	movwf	(_motorL+2)& (0+255),b
  1094   002BF2                     
  1095                           ; BSR set to: 0
  1096                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1097   002BF2  0EAA               	movlw	170
  1098   002BF4  6FBE               	movwf	(_motorL+5)& (0+255),b
  1099   002BF6  0E0F               	movlw	15
  1100   002BF8  6FBF               	movwf	(_motorL+6)& (0+255),b
  1101   002BFA                     
  1102                           ; BSR set to: 0
  1103                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1104   002BFA  0EA6               	movlw	166
  1105   002BFC  6FC0               	movwf	(_motorL+7)& (0+255),b
  1106   002BFE  0E0F               	movlw	15
  1107   002C00  6FC1               	movwf	(_motorL+8)& (0+255),b
  1108   002C02                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1111   002C02  0E00               	movlw	0
  1112   002C04  6FBD               	movwf	(_motorL+4)& (0+255),b
  1113   002C06  0E63               	movlw	99
  1114   002C08  6FBC               	movwf	(_motorL+3)& (0+255),b
  1115   002C0A                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 38:     motorR.power=0;
  1118   002C0A  0E00               	movlw	0
  1119   002C0C  6FB0               	movwf	_motorR& (0+255),b
  1120   002C0E                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 39:     motorR.direction=1;
  1123   002C0E  0E01               	movlw	1
  1124   002C10  6FB1               	movwf	(_motorR+1)& (0+255),b
  1125   002C12                     
  1126                           ; BSR set to: 0
  1127                           ;main.c: 40:     motorR.brakemode=1;
  1128   002C12  0E01               	movlw	1
  1129   002C14  6FB2               	movwf	(_motorR+2)& (0+255),b
  1130   002C16                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1133   002C16  0E25               	movlw	37
  1134   002C18  6FB5               	movwf	(_motorR+5)& (0+255),b
  1135   002C1A  0E0F               	movlw	15
  1136   002C1C  6FB6               	movwf	(_motorR+6)& (0+255),b
  1137   002C1E                     
  1138                           ; BSR set to: 0
  1139                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1140   002C1E  0E21               	movlw	33
  1141   002C20  6FB7               	movwf	(_motorR+7)& (0+255),b
  1142   002C22  0E0F               	movlw	15
  1143   002C24  6FB8               	movwf	(_motorR+8)& (0+255),b
  1144   002C26                     
  1145                           ; BSR set to: 0
  1146                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1147   002C26  0E00               	movlw	0
  1148   002C28  6FB4               	movwf	(_motorR+4)& (0+255),b
  1149   002C2A  0E63               	movlw	99
  1150   002C2C  6FB3               	movwf	(_motorR+3)& (0+255),b
  1151   002C2E                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1154   002C2E  8486               	bsf	134,2,c	;volatile
  1155   002C30                     
  1156                           ; BSR set to: 0
  1157                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1158   002C30  010E               	movlb	14	; () banked
  1159   002C32  95B4               	bcf	180,2,b	;volatile
  1160   002C34                     l298:
  1161                           
  1162                           ;main.c: 47:     while(PORTFbits.RF2){
  1163   002C34  B48E               	btfsc	142,2,c	;volatile
  1164   002C36  EF1F  F016         	goto	u3731
  1165   002C3A  EF21  F016         	goto	u3730
  1166   002C3E                     u3731:
  1167   002C3E  EF1A  F016         	goto	l298
  1168   002C42                     u3730:
  1169   002C42                     
  1170                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1171   002C42  0E29               	movlw	41
  1172   002C44  0100               	movlb	0	; () banked
  1173   002C46  6FEC               	movwf	(??_main+1)& (0+255),b
  1174   002C48  0E96               	movlw	150
  1175   002C4A  6FEB               	movwf	??_main& (0+255),b
  1176   002C4C  0E7F               	movlw	127
  1177   002C4E                     u3827:
  1178   002C4E  2EE8               	decfsz	wreg,f,c
  1179   002C50  D7FE               	bra	u3827
  1180   002C52  2FEB               	decfsz	??_main& (0+255),f,b
  1181   002C54  D7FC               	bra	u3827
  1182   002C56  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1183   002C58  D7FA               	bra	u3827
  1184   002C5A                     
  1185                           ;main.c: 50:     TimerReset();
  1186   002C5A  EC52  F023         	call	_TimerReset	;wreg free
  1187   002C5E                     
  1188                           ;main.c: 51:     char wall=0;
  1189   002C5E  0E00               	movlw	0
  1190   002C60  0100               	movlb	0	; () banked
  1191   002C62  6FED               	movwf	main@wall& (0+255),b
  1192   002C64                     
  1193                           ; BSR set to: 0
  1194                           ;main.c: 52:     ClickLEDOn(1);
  1195   002C64  0E01               	movlw	1
  1196   002C66  EC89  F022         	call	_ClickLEDOn
  1197                           
  1198                           ;main.c: 54:     char buf[20];;main.c: 55:     while (!retracingDone){
  1199   002C6A  EF0C  F017         	goto	l4194
  1200   002C6E                     l4146:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 56:         fullSpeedAhead(&motorL,&motorR);
  1204   002C6E  0EB9               	movlw	low _motorL
  1205   002C70  6E14               	movwf	fullSpeedAhead@mL^0,c
  1206   002C72  0E00               	movlw	high _motorL
  1207   002C74  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1208   002C76  0EB0               	movlw	low _motorR
  1209   002C78  6E16               	movwf	fullSpeedAhead@mR^0,c
  1210   002C7A  0E00               	movlw	high _motorR
  1211   002C7C  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1212   002C7E  EC3E  F01F         	call	_fullSpeedAhead	;wreg free
  1213                           
  1214                           ;main.c: 58:         while (!wall){
  1215   002C82  EFB0  F016         	goto	l4168
  1216   002C86                     l4148:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;main.c: 59:             colour_read_all(&colorf,&colorrel);
  1220   002C86  0E8E               	movlw	low _colorf
  1221   002C88  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1222   002C8A  0E00               	movlw	high _colorf
  1223   002C8C  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1224   002C8E  0EA4               	movlw	low _colorrel
  1225   002C90  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1226   002C92  0E00               	movlw	high _colorrel
  1227   002C94  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1228   002C96  EC18  F017         	call	_colour_read_all	;wreg free
  1229   002C9A                     
  1230                           ;main.c: 62:             if (colorf.Cf>300)
  1231   002C9A  0E00               	movlw	0
  1232   002C9C  6E4B               	movwf	___flge@ff1^0,c
  1233   002C9E  0E00               	movlw	0
  1234   002CA0  6E4C               	movwf	(___flge@ff1+1)^0,c
  1235   002CA2  0E96               	movlw	150
  1236   002CA4  6E4D               	movwf	(___flge@ff1+2)^0,c
  1237   002CA6  0E43               	movlw	67
  1238   002CA8  6E4E               	movwf	(___flge@ff1+3)^0,c
  1239   002CAA  C09A  F04F         	movff	_colorf+12,___flge@ff2
  1240   002CAE  C09B  F050         	movff	_colorf+13,___flge@ff2+1
  1241   002CB2  C09C  F051         	movff	_colorf+14,___flge@ff2+2
  1242   002CB6  C09D  F052         	movff	_colorf+15,___flge@ff2+3
  1243   002CBA  EC1D  F01B         	call	___flge	;wreg free
  1244   002CBE  B0D8               	btfsc	status,0,c
  1245   002CC0  EF64  F016         	goto	u3741
  1246   002CC4  EF66  F016         	goto	u3740
  1247   002CC8                     u3741:
  1248   002CC8  EF8B  F016         	goto	l4160
  1249   002CCC                     u3740:
  1250   002CCC                     
  1251                           ;main.c: 63:             {;main.c: 64:                 memoryUpdateTime(movementCount,ti
      +                          merMemory);
  1252   002CCC  C062  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1253   002CD0  C063  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1254   002CD4  0E00               	movlw	low _timerMemory
  1255   002CD6  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1256   002CD8  0E01               	movlw	high _timerMemory
  1257   002CDA  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1258   002CDC  ECAB  F020         	call	_memoryUpdateTime	;wreg free
  1259   002CE0                     
  1260                           ;main.c: 66:                 wall=1;
  1261   002CE0  0E01               	movlw	1
  1262   002CE2  0100               	movlb	0	; () banked
  1263   002CE4  6FED               	movwf	main@wall& (0+255),b
  1264   002CE6                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 67:                 _delay((unsigned long)((200)*(64000000/4000.0)));
  1267   002CE6  0E11               	movlw	17
  1268   002CE8  0100               	movlb	0	; () banked
  1269   002CEA  6FEC               	movwf	(??_main+1)& (0+255),b
  1270   002CEC  0E3C               	movlw	60
  1271   002CEE  6FEB               	movwf	??_main& (0+255),b
  1272   002CF0  0ECB               	movlw	203
  1273   002CF2                     u3837:
  1274   002CF2  2EE8               	decfsz	wreg,f,c
  1275   002CF4  D7FE               	bra	u3837
  1276   002CF6  2FEB               	decfsz	??_main& (0+255),f,b
  1277   002CF8  D7FC               	bra	u3837
  1278   002CFA  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1279   002CFC  D7FA               	bra	u3837
  1280   002CFE                     
  1281                           ;main.c: 68:                 stop(&motorL,&motorR);
  1282   002CFE  0EB9               	movlw	low _motorL
  1283   002D00  6E14               	movwf	stop@mL^0,c
  1284   002D02  0E00               	movlw	high _motorL
  1285   002D04  6E15               	movwf	(stop@mL+1)^0,c
  1286   002D06  0EB0               	movlw	low _motorR
  1287   002D08  6E16               	movwf	stop@mR^0,c
  1288   002D0A  0E00               	movlw	high _motorR
  1289   002D0C  6E17               	movwf	(stop@mR+1)^0,c
  1290   002D0E  EC9C  F01C         	call	_stop	;wreg free
  1291                           
  1292                           ;main.c: 70:             }
  1293   002D12  EFB0  F016         	goto	l4168
  1294   002D16                     l4160:
  1295   002D16  0100               	movlb	0	; () banked
  1296   002D18  0564               	decf	_maxTime& (0+255),w,b	;volatile
  1297   002D1A  1165               	iorwf	(_maxTime+1)& (0+255),w,b	;volatile
  1298   002D1C  A4D8               	btfss	status,2,c
  1299   002D1E  EF93  F016         	goto	u3751
  1300   002D22  EF95  F016         	goto	u3750
  1301   002D26                     u3751:
  1302   002D26  EFB0  F016         	goto	l4168
  1303   002D2A                     u3750:
  1304   002D2A                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 72:             {;main.c: 73:                 memoryUpdateTime(movementCount,ti
      +                          merMemory);
  1307   002D2A  C062  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1308   002D2E  C063  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1309   002D32  0E00               	movlw	low _timerMemory
  1310   002D34  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1311   002D36  0E01               	movlw	high _timerMemory
  1312   002D38  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1313   002D3A  ECAB  F020         	call	_memoryUpdateTime	;wreg free
  1314   002D3E                     
  1315                           ;main.c: 74:                 colorf.colourindex=7;
  1316   002D3E  0E00               	movlw	0
  1317   002D40  0100               	movlb	0	; () banked
  1318   002D42  6FA3               	movwf	(_colorf+21)& (0+255),b
  1319   002D44  0E07               	movlw	7
  1320   002D46  6FA2               	movwf	(_colorf+20)& (0+255),b
  1321   002D48                     
  1322                           ; BSR set to: 0
  1323                           ;main.c: 76:                 wall=1;
  1324   002D48  0E01               	movlw	1
  1325   002D4A  6FED               	movwf	main@wall& (0+255),b
  1326                           
  1327                           ;main.c: 77:                 stop(&motorL,&motorR);
  1328   002D4C  0EB9               	movlw	low _motorL
  1329   002D4E  6E14               	movwf	stop@mL^0,c
  1330   002D50  0E00               	movlw	high _motorL
  1331   002D52  6E15               	movwf	(stop@mL+1)^0,c
  1332   002D54  0EB0               	movlw	low _motorR
  1333   002D56  6E16               	movwf	stop@mR^0,c
  1334   002D58  0E00               	movlw	high _motorR
  1335   002D5A  6E17               	movwf	(stop@mR+1)^0,c
  1336   002D5C  EC9C  F01C         	call	_stop	;wreg free
  1337   002D60                     l4168:
  1338                           
  1339                           ;main.c: 58:         while (!wall){
  1340   002D60  0100               	movlb	0	; () banked
  1341   002D62  51ED               	movf	main@wall& (0+255),w,b
  1342   002D64  B4D8               	btfsc	status,2,c
  1343   002D66  EFB7  F016         	goto	u3761
  1344   002D6A  EFB9  F016         	goto	u3760
  1345   002D6E                     u3761:
  1346   002D6E  EF43  F016         	goto	l4148
  1347   002D72                     u3760:
  1348   002D72                     
  1349                           ; BSR set to: 0
  1350                           ;main.c: 81:         if (maxTime!=1){
  1351   002D72  0564               	decf	_maxTime& (0+255),w,b	;volatile
  1352   002D74  1165               	iorwf	(_maxTime+1)& (0+255),w,b	;volatile
  1353   002D76  B4D8               	btfsc	status,2,c
  1354   002D78  EFC0  F016         	goto	u3771
  1355   002D7C  EFC2  F016         	goto	u3770
  1356   002D80                     u3771:
  1357   002D80  EFDF  F016         	goto	l4180
  1358   002D84                     u3770:
  1359   002D84                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 82:             colour_read_all(&colorf,&colorrel);
  1362   002D84  0E8E               	movlw	low _colorf
  1363   002D86  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1364   002D88  0E00               	movlw	high _colorf
  1365   002D8A  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1366   002D8C  0EA4               	movlw	low _colorrel
  1367   002D8E  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1368   002D90  0E00               	movlw	high _colorrel
  1369   002D92  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1370   002D94  EC18  F017         	call	_colour_read_all	;wreg free
  1371   002D98                     
  1372                           ;main.c: 83:             wall=0;
  1373   002D98  0E00               	movlw	0
  1374   002D9A  0100               	movlb	0	; () banked
  1375   002D9C  6FED               	movwf	main@wall& (0+255),b
  1376   002D9E                     
  1377                           ; BSR set to: 0
  1378                           ;main.c: 84:             RGB2Hue(&colorf);
  1379   002D9E  0E8E               	movlw	low _colorf
  1380   002DA0  6FCF               	movwf	RGB2Hue@cf& (0+255),b
  1381   002DA2  0E00               	movlw	high _colorf
  1382   002DA4  6FD0               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1383   002DA6  EC33  F007         	call	_RGB2Hue	;wreg free
  1384   002DAA                     
  1385                           ;main.c: 85:             Hue2Colour(&colorf,&colorrel);
  1386   002DAA  0E8E               	movlw	low _colorf
  1387   002DAC  6E57               	movwf	Hue2Colour@cf^0,c
  1388   002DAE  0E00               	movlw	high _colorf
  1389   002DB0  6E58               	movwf	(Hue2Colour@cf+1)^0,c
  1390   002DB2  0EA4               	movlw	low _colorrel
  1391   002DB4  6E59               	movwf	Hue2Colour@rel^0,c
  1392   002DB6  0E00               	movlw	high _colorrel
  1393   002DB8  6E5A               	movwf	(Hue2Colour@rel+1)^0,c
  1394   002DBA  ECC9  F00A         	call	_Hue2Colour	;wreg free
  1395   002DBE                     l4180:
  1396                           
  1397                           ;main.c: 87:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1398   002DBE  0E8E               	movlw	low _colorf
  1399   002DC0  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1400   002DC2  0E00               	movlw	high _colorf
  1401   002DC4  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1402   002DC6  C062  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1403   002DCA  C063  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1404   002DCE  0E66               	movlw	low _movementMemory
  1405   002DD0  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1406   002DD2  0E00               	movlw	high _movementMemory
  1407   002DD4  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1408   002DD6  ECA3  F022         	call	_memoryUpdateMovement	;wreg free
  1409   002DDA                     
  1410                           ;main.c: 88:         Colour2Action(&colorf);
  1411   002DDA  0E8E               	movlw	low _colorf
  1412   002DDC  6E5B               	movwf	Colour2Action@cf^0,c
  1413   002DDE  0E00               	movlw	high _colorf
  1414   002DE0  6E5C               	movwf	(Colour2Action@cf+1)^0,c
  1415   002DE2  EC30  F018         	call	_Colour2Action	;wreg free
  1416   002DE6                     
  1417                           ;main.c: 89:         if (colorf.colourindex == 7)
  1418   002DE6  0E07               	movlw	7
  1419   002DE8  0100               	movlb	0	; () banked
  1420   002DEA  19A2               	xorwf	(_colorf+20)& (0+255),w,b
  1421   002DEC  11A3               	iorwf	(_colorf+21)& (0+255),w,b
  1422   002DEE  A4D8               	btfss	status,2,c
  1423   002DF0  EFFC  F016         	goto	u3781
  1424   002DF4  EFFE  F016         	goto	u3780
  1425   002DF8                     u3781:
  1426   002DF8  EF07  F017         	goto	l4190
  1427   002DFC                     u3780:
  1428   002DFC                     l4188:
  1429                           
  1430                           ; BSR set to: 0
  1431   002DFC  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1432   002DFE  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1433   002E00  B4D8               	btfsc	status,2,c
  1434   002E02  EF05  F017         	goto	u3791
  1435   002E06  EF07  F017         	goto	u3790
  1436   002E0A                     u3791:
  1437   002E0A  EFFE  F016         	goto	l4188
  1438   002E0E                     u3790:
  1439   002E0E                     l4190:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 93:         TimerReset();
  1443   002E0E  EC52  F023         	call	_TimerReset	;wreg free
  1444   002E12                     
  1445                           ;main.c: 94:         movementCount++;
  1446   002E12  0100               	movlb	0	; () banked
  1447   002E14  4B62               	infsnz	_movementCount& (0+255),f,b	;volatile
  1448   002E16  2B63               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1449   002E18                     l4194:
  1450                           
  1451                           ;main.c: 55:     while (!retracingDone){
  1452   002E18  0100               	movlb	0	; () banked
  1453   002E1A  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1454   002E1C  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1455   002E1E  B4D8               	btfsc	status,2,c
  1456   002E20  EF14  F017         	goto	u3801
  1457   002E24  EF16  F017         	goto	u3800
  1458   002E28                     u3801:
  1459   002E28  EF37  F016         	goto	l4146
  1460   002E2C                     u3800:
  1461   002E2C                     
  1462                           ; BSR set to: 0
  1463   002E2C  EF16  F000         	goto	start
  1464   002E30                     __end_of_main:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _memoryUpdateTime *****************
  1468 ;; Defined at:
  1469 ;;		line 15 in file "memory.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  movementCoun    2   74[COMRAM] volatile unsigned int 
  1472 ;;  timerMemory     2   76[COMRAM] PTR volatile float 
  1473 ;;		 -> timerMemory(80), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  timerVal        4   78[COMRAM] float 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;Total ram usage:        8 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 3
  1492 ;; This function calls:
  1493 ;;		___fladd
  1494 ;;		_getTimerValue
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501   004156                     __ptext1:
  1502                           	callstack 0
  1503   004156                     _memoryUpdateTime:
  1504                           	callstack 27
  1505   004156                     
  1506                           ;memory.c: 15: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 16: {;memory.c: 17:     float timerVal = getTimerValue()-_recog
      +                          niseColour;
  1507   004156  ECDC  F020         	call	_getTimerValue	;wreg free
  1508   00415A  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1509   00415E  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1510   004162  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1511   004166  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1512   00416A  0E00               	movlw	0
  1513   00416C  6E3F               	movwf	___fladd@a^0,c
  1514   00416E  0E00               	movlw	0
  1515   004170  6E40               	movwf	(___fladd@a+1)^0,c
  1516   004172  0E16               	movlw	22
  1517   004174  6E41               	movwf	(___fladd@a+2)^0,c
  1518   004176  0EC3               	movlw	195
  1519   004178  6E42               	movwf	(___fladd@a+3)^0,c
  1520   00417A  EC4A  F00D         	call	___fladd	;wreg free
  1521   00417E  C03B  F04F         	movff	?___fladd,memoryUpdateTime@timerVal
  1522   004182  C03C  F050         	movff	?___fladd+1,memoryUpdateTime@timerVal+1
  1523   004186  C03D  F051         	movff	?___fladd+2,memoryUpdateTime@timerVal+2
  1524   00418A  C03E  F052         	movff	?___fladd+3,memoryUpdateTime@timerVal+3
  1525   00418E                     
  1526                           ;memory.c: 18:     timerMemory[movementCount] = timerVal;
  1527   00418E  90D8               	bcf	status,0,c
  1528   004190  344B               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1529   004192  6ED9               	movwf	fsr2l,c
  1530   004194  344C               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1531   004196  6EDA               	movwf	fsr2h,c
  1532   004198  90D8               	bcf	status,0,c
  1533   00419A  36D9               	rlcf	fsr2l,f,c
  1534   00419C  36DA               	rlcf	fsr2h,f,c
  1535   00419E  504D               	movf	memoryUpdateTime@timerMemory^0,w,c
  1536   0041A0  26D9               	addwf	fsr2l,f,c
  1537   0041A2  504E               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1538   0041A4  22DA               	addwfc	fsr2h,f,c
  1539   0041A6  C04F  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1540   0041AA  C050  FFDE         	movff	memoryUpdateTime@timerVal+1,postinc2
  1541   0041AE  C051  FFDE         	movff	memoryUpdateTime@timerVal+2,postinc2
  1542   0041B2  C052  FFDE         	movff	memoryUpdateTime@timerVal+3,postinc2
  1543   0041B6  0012               	return		;funcret
  1544   0041B8                     __end_of_memoryUpdateTime:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _memoryUpdateMovement *****************
  1548 ;; Defined at:
  1549 ;;		line 9 in file "memory.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  cf              2    0[COMRAM] PTR struct RGBC
  1552 ;;		 -> colorf(22), 
  1553 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1554 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1555 ;;		 -> movementMemory(40), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  colourcode      2    6[COMRAM] int 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1567 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;Total ram usage:        8 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text2
  1582   004546                     __ptext2:
  1583                           	callstack 0
  1584   004546                     _memoryUpdateMovement:
  1585                           	callstack 29
  1586   004546                     
  1587                           ;memory.c: 9: void memoryUpdateMovement(struct RGBC *cf, volatile unsigned int movementC
      +                          ount, volatile unsigned int *movementMemory);memory.c: 10: {;memory.c: 12:     int colou
      +                          rcode = cf->colourindex;
  1588   004546  EE20 F014          	lfsr	2,20
  1589   00454A  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1590   00454C  26D9               	addwf	fsr2l,f,c
  1591   00454E  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1592   004550  22DA               	addwfc	fsr2h,f,c
  1593   004552  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1594   004556  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1595                           
  1596                           ;memory.c: 13:     movementMemory[movementCount] = colourcode;
  1597   00455A  90D8               	bcf	status,0,c
  1598   00455C  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1599   00455E  6ED9               	movwf	fsr2l,c
  1600   004560  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1601   004562  6EDA               	movwf	fsr2h,c
  1602   004564  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1603   004566  26D9               	addwf	fsr2l,f,c
  1604   004568  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1605   00456A  22DA               	addwfc	fsr2h,f,c
  1606   00456C  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1607   004570  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1608   004574  0012               	return		;funcret
  1609   004576                     __end_of_memoryUpdateMovement:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _initUSART4 *****************
  1613 ;; Defined at:
  1614 ;;		line 7 in file "serial.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text3
  1643   004612                     __ptext3:
  1644                           	callstack 0
  1645   004612                     _initUSART4:
  1646                           	callstack 29
  1647   004612                     
  1648                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1649   004612  8883               	bsf	131,4,c	;volatile
  1650                           
  1651                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1652   004614  8283               	bsf	131,1,c	;volatile
  1653   004616                     
  1654                           ;serial.c: 10:     RC0PPS = 0x12;
  1655   004616  0E12               	movlw	18
  1656   004618  010E               	movlb	14	; () banked
  1657   00461A  6F62               	movwf	98,b	;volatile
  1658                           
  1659                           ;serial.c: 11:     RX4PPS = 0x11;
  1660   00461C  0E11               	movlw	17
  1661   00461E  6F15               	movwf	21,b	;volatile
  1662   004620                     
  1663                           ; BSR set to: 14
  1664                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1665   004620  97E9               	bcf	233,3,b	;volatile
  1666   004622                     
  1667                           ; BSR set to: 14
  1668                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1669   004622  95E8               	bcf	232,2,b	;volatile
  1670                           
  1671                           ;serial.c: 15:     SP4BRGL = 51;
  1672   004624  0E33               	movlw	51
  1673   004626  6FE5               	movwf	229,b	;volatile
  1674                           
  1675                           ;serial.c: 16:     SP4BRGH = 0;
  1676   004628  0E00               	movlw	0
  1677   00462A  6FE6               	movwf	230,b	;volatile
  1678   00462C                     
  1679                           ; BSR set to: 14
  1680                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1681   00462C  89E7               	bsf	231,4,b	;volatile
  1682   00462E                     
  1683                           ; BSR set to: 14
  1684                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1685   00462E  8BE8               	bsf	232,5,b	;volatile
  1686   004630                     
  1687                           ; BSR set to: 14
  1688                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1689   004630  8FE7               	bsf	231,7,b	;volatile
  1690   004632                     
  1691                           ; BSR set to: 14
  1692   004632  0012               	return		;funcret
  1693   004634                     __end_of_initUSART4:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _initDCmotorsPWM *****************
  1697 ;; Defined at:
  1698 ;;		line 11 in file "dc_motor.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text4
  1727   003C52                     __ptext4:
  1728                           	callstack 0
  1729   003C52                     _initDCmotorsPWM:
  1730                           	callstack 29
  1731   003C52                     
  1732                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1733   003C52  9485               	bcf	133,2,c	;volatile
  1734                           
  1735                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1736   003C54  9E83               	bcf	131,7,c	;volatile
  1737                           
  1738                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1739   003C56  9885               	bcf	133,4,c	;volatile
  1740                           
  1741                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1742   003C58  9C87               	bcf	135,6,c	;volatile
  1743                           
  1744                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1745   003C5A  947D               	bcf	125,2,c	;volatile
  1746                           
  1747                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1748   003C5C  9E7B               	bcf	123,7,c	;volatile
  1749                           
  1750                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1751   003C5E  987D               	bcf	125,4,c	;volatile
  1752                           
  1753                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1754   003C60  9C7F               	bcf	127,6,c	;volatile
  1755   003C62                     
  1756                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1757   003C62  0E05               	movlw	5
  1758   003C64  010E               	movlb	14	; () banked
  1759   003C66  6F74               	movwf	116,b	;volatile
  1760                           
  1761                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1762   003C68  0E06               	movlw	6
  1763   003C6A  6F76               	movwf	118,b	;volatile
  1764                           
  1765                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1766   003C6C  0E07               	movlw	7
  1767   003C6E  6F69               	movwf	105,b	;volatile
  1768                           
  1769                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1770   003C70  0E08               	movlw	8
  1771   003C72  6F88               	movwf	136,b	;volatile
  1772                           
  1773                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1774   003C74  50BD               	movf	189,w,c	;volatile
  1775   003C76  0B8F               	andlw	-113
  1776   003C78  0940               	iorlw	64
  1777   003C7A  6EBD               	movwf	189,c	;volatile
  1778                           
  1779                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1780   003C7C  0EE0               	movlw	-32
  1781   003C7E  16BE               	andwf	190,f,c	;volatile
  1782                           
  1783                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1784   003C80  50BF               	movf	191,w,c	;volatile
  1785   003C82  0BF0               	andlw	-16
  1786   003C84  0901               	iorlw	1
  1787   003C86  6EBF               	movwf	191,c	;volatile
  1788   003C88                     
  1789                           ; BSR set to: 14
  1790                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1791   003C88  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1792   003C8C                     
  1793                           ; BSR set to: 14
  1794                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1795   003C8C  8EBD               	bsf	189,7,c	;volatile
  1796                           
  1797                           ;dc_motor.c: 40:     CCPR1H=0;
  1798   003C8E  0E00               	movlw	0
  1799   003C90  6EAA               	movwf	170,c	;volatile
  1800                           
  1801                           ;dc_motor.c: 41:     CCPR2H=0;
  1802   003C92  0E00               	movlw	0
  1803   003C94  6EA6               	movwf	166,c	;volatile
  1804                           
  1805                           ;dc_motor.c: 42:     CCPR3H=0;
  1806   003C96  0E00               	movlw	0
  1807   003C98  010F               	movlb	15	; () banked
  1808   003C9A  6F25               	movwf	37,b	;volatile
  1809                           
  1810                           ;dc_motor.c: 43:     CCPR4H=0;
  1811   003C9C  0E00               	movlw	0
  1812   003C9E  6F21               	movwf	33,b	;volatile
  1813                           
  1814                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1815   003CA0  0EFC               	movlw	-4
  1816   003CA2  16AD               	andwf	173,f,c	;volatile
  1817                           
  1818                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1819   003CA4  0EF3               	movlw	-13
  1820   003CA6  16AD               	andwf	173,f,c	;volatile
  1821                           
  1822                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1823   003CA8  0ECF               	movlw	-49
  1824   003CAA  16AD               	andwf	173,f,c	;volatile
  1825                           
  1826                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1827   003CAC  0E3F               	movlw	-193
  1828   003CAE  16AD               	andwf	173,f,c	;volatile
  1829   003CB0                     
  1830                           ; BSR set to: 15
  1831                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1832   003CB0  88AB               	bsf	171,4,c	;volatile
  1833                           
  1834                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1835   003CB2  50AB               	movf	171,w,c	;volatile
  1836   003CB4  0BF0               	andlw	-16
  1837   003CB6  090C               	iorlw	12
  1838   003CB8  6EAB               	movwf	171,c	;volatile
  1839   003CBA                     
  1840                           ; BSR set to: 15
  1841                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1842   003CBA  8EAB               	bsf	171,7,c	;volatile
  1843   003CBC                     
  1844                           ; BSR set to: 15
  1845                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1846   003CBC  88A7               	bsf	167,4,c	;volatile
  1847                           
  1848                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1849   003CBE  50A7               	movf	167,w,c	;volatile
  1850   003CC0  0BF0               	andlw	-16
  1851   003CC2  090C               	iorlw	12
  1852   003CC4  6EA7               	movwf	167,c	;volatile
  1853   003CC6                     
  1854                           ; BSR set to: 15
  1855                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1856   003CC6  8EA7               	bsf	167,7,c	;volatile
  1857   003CC8                     
  1858                           ; BSR set to: 15
  1859                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1860   003CC8  8926               	bsf	38,4,b	;volatile
  1861                           
  1862                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1863   003CCA  5126               	movf	38,w,b	;volatile
  1864   003CCC  0BF0               	andlw	-16
  1865   003CCE  090C               	iorlw	12
  1866   003CD0  6F26               	movwf	38,b	;volatile
  1867   003CD2                     
  1868                           ; BSR set to: 15
  1869                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1870   003CD2  8F26               	bsf	38,7,b	;volatile
  1871   003CD4                     
  1872                           ; BSR set to: 15
  1873                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1874   003CD4  8922               	bsf	34,4,b	;volatile
  1875                           
  1876                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1877   003CD6  5122               	movf	34,w,b	;volatile
  1878   003CD8  0BF0               	andlw	-16
  1879   003CDA  090C               	iorlw	12
  1880   003CDC  6F22               	movwf	34,b	;volatile
  1881   003CDE                     
  1882                           ; BSR set to: 15
  1883                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1884   003CDE  8F22               	bsf	34,7,b	;volatile
  1885   003CE0                     
  1886                           ; BSR set to: 15
  1887   003CE0  0012               	return		;funcret
  1888   003CE2                     __end_of_initDCmotorsPWM:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _colour_read_all *****************
  1892 ;; Defined at:
  1893 ;;		line 8 in file "colorfunctions.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  1896 ;;		 -> colorf(22), 
  1897 ;;  rel             2   15[BANK0 ] PTR struct RGB_rel
  1898 ;;		 -> colorrel(12), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  total           4   37[BANK0 ] float 
  1901 ;;  B               4   33[BANK0 ] float 
  1902 ;;  G               4   29[BANK0 ] float 
  1903 ;;  R               4   25[BANK0 ] float 
  1904 ;;  C               4   17[BANK0 ] float 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;Total ram usage:       28 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 4
  1921 ;; This function calls:
  1922 ;;		___fladd
  1923 ;;		___fldiv
  1924 ;;		___xxtofl
  1925 ;;		_color_read_Blue
  1926 ;;		_color_read_Clear
  1927 ;;		_color_read_Green
  1928 ;;		_color_read_Red
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text5
  1935   002E30                     __ptext5:
  1936                           	callstack 0
  1937   002E30                     _colour_read_all:
  1938                           	callstack 26
  1939   002E30                     
  1940                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1941   002E30  EC60  F021         	call	_color_read_Red	;wreg free
  1942   002E34  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1943   002E38  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1944   002E3C  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1945   002E3E  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1946   002E40  0E00               	movlw	0
  1947   002E42  EC0A  F019         	call	___xxtofl
  1948   002E46  C00C  F0DB         	movff	?___xxtofl,colour_read_all@R
  1949   002E4A  C00D  F0DC         	movff	?___xxtofl+1,colour_read_all@R+1
  1950   002E4E  C00E  F0DD         	movff	?___xxtofl+2,colour_read_all@R+2
  1951   002E52  C00F  F0DE         	movff	?___xxtofl+3,colour_read_all@R+3
  1952                           
  1953                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1954   002E56  EC88  F021         	call	_color_read_Green	;wreg free
  1955   002E5A  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1956   002E5E  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1957   002E62  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1958   002E64  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1959   002E66  0E00               	movlw	0
  1960   002E68  EC0A  F019         	call	___xxtofl
  1961   002E6C  C00C  F0DF         	movff	?___xxtofl,colour_read_all@G
  1962   002E70  C00D  F0E0         	movff	?___xxtofl+1,colour_read_all@G+1
  1963   002E74  C00E  F0E1         	movff	?___xxtofl+2,colour_read_all@G+2
  1964   002E78  C00F  F0E2         	movff	?___xxtofl+3,colour_read_all@G+3
  1965                           
  1966                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1967   002E7C  ECD8  F021         	call	_color_read_Blue	;wreg free
  1968   002E80  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1969   002E84  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1970   002E88  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1971   002E8A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1972   002E8C  0E00               	movlw	0
  1973   002E8E  EC0A  F019         	call	___xxtofl
  1974   002E92  C00C  F0E3         	movff	?___xxtofl,colour_read_all@B
  1975   002E96  C00D  F0E4         	movff	?___xxtofl+1,colour_read_all@B+1
  1976   002E9A  C00E  F0E5         	movff	?___xxtofl+2,colour_read_all@B+2
  1977   002E9E  C00F  F0E6         	movff	?___xxtofl+3,colour_read_all@B+3
  1978                           
  1979                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1980   002EA2  ECB0  F021         	call	_color_read_Clear	;wreg free
  1981   002EA6  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1982   002EAA  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1983   002EAE  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1984   002EB0  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1985   002EB2  0E00               	movlw	0
  1986   002EB4  EC0A  F019         	call	___xxtofl
  1987   002EB8  C00C  F0D3         	movff	?___xxtofl,colour_read_all@C
  1988   002EBC  C00D  F0D4         	movff	?___xxtofl+1,colour_read_all@C+1
  1989   002EC0  C00E  F0D5         	movff	?___xxtofl+2,colour_read_all@C+2
  1990   002EC4  C00F  F0D6         	movff	?___xxtofl+3,colour_read_all@C+3
  1991                           
  1992                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  1993   002EC8  C0DF  F03F         	movff	colour_read_all@G,___fladd@a
  1994   002ECC  C0E0  F040         	movff	colour_read_all@G+1,___fladd@a+1
  1995   002ED0  C0E1  F041         	movff	colour_read_all@G+2,___fladd@a+2
  1996   002ED4  C0E2  F042         	movff	colour_read_all@G+3,___fladd@a+3
  1997   002ED8  C0DB  F03B         	movff	colour_read_all@R,___fladd@b
  1998   002EDC  C0DC  F03C         	movff	colour_read_all@R+1,___fladd@b+1
  1999   002EE0  C0DD  F03D         	movff	colour_read_all@R+2,___fladd@b+2
  2000   002EE4  C0DE  F03E         	movff	colour_read_all@R+3,___fladd@b+3
  2001   002EE8  EC4A  F00D         	call	___fladd	;wreg free
  2002   002EEC  C03B  F0D7         	movff	?___fladd,_colour_read_all$3099
  2003   002EF0  C03C  F0D8         	movff	?___fladd+1,_colour_read_all$3099+1
  2004   002EF4  C03D  F0D9         	movff	?___fladd+2,_colour_read_all$3099+2
  2005   002EF8  C03E  F0DA         	movff	?___fladd+3,_colour_read_all$3099+3
  2006                           
  2007                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  2008   002EFC  C0D7  F03B         	movff	_colour_read_all$3099,___fladd@b
  2009   002F00  C0D8  F03C         	movff	_colour_read_all$3099+1,___fladd@b+1
  2010   002F04  C0D9  F03D         	movff	_colour_read_all$3099+2,___fladd@b+2
  2011   002F08  C0DA  F03E         	movff	_colour_read_all$3099+3,___fladd@b+3
  2012   002F0C  C0E3  F03F         	movff	colour_read_all@B,___fladd@a
  2013   002F10  C0E4  F040         	movff	colour_read_all@B+1,___fladd@a+1
  2014   002F14  C0E5  F041         	movff	colour_read_all@B+2,___fladd@a+2
  2015   002F18  C0E6  F042         	movff	colour_read_all@B+3,___fladd@a+3
  2016   002F1C  EC4A  F00D         	call	___fladd	;wreg free
  2017   002F20  C03B  F0E7         	movff	?___fladd,colour_read_all@total
  2018   002F24  C03C  F0E8         	movff	?___fladd+1,colour_read_all@total+1
  2019   002F28  C03D  F0E9         	movff	?___fladd+2,colour_read_all@total+2
  2020   002F2C  C03E  F0EA         	movff	?___fladd+3,colour_read_all@total+3
  2021   002F30                     
  2022                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  2023   002F30  C0CF  FFD9         	movff	colour_read_all@cf,fsr2l
  2024   002F34  C0D0  FFDA         	movff	colour_read_all@cf+1,fsr2h
  2025   002F38  C0DB  FFDE         	movff	colour_read_all@R,postinc2
  2026   002F3C  C0DC  FFDE         	movff	colour_read_all@R+1,postinc2
  2027   002F40  C0DD  FFDE         	movff	colour_read_all@R+2,postinc2
  2028   002F44  C0DE  FFDE         	movff	colour_read_all@R+3,postinc2
  2029   002F48                     
  2030                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2031   002F48  0100               	movlb	0	; () banked
  2032   002F4A  EE20 F008          	lfsr	2,8
  2033   002F4E  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2034   002F50  26D9               	addwf	fsr2l,f,c
  2035   002F52  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2036   002F54  22DA               	addwfc	fsr2h,f,c
  2037   002F56  C0E3  FFDE         	movff	colour_read_all@B,postinc2
  2038   002F5A  C0E4  FFDE         	movff	colour_read_all@B+1,postinc2
  2039   002F5E  C0E5  FFDE         	movff	colour_read_all@B+2,postinc2
  2040   002F62  C0E6  FFDE         	movff	colour_read_all@B+3,postinc2
  2041   002F66                     
  2042                           ; BSR set to: 0
  2043                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2044   002F66  EE20 F004          	lfsr	2,4
  2045   002F6A  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2046   002F6C  26D9               	addwf	fsr2l,f,c
  2047   002F6E  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2048   002F70  22DA               	addwfc	fsr2h,f,c
  2049   002F72  C0DF  FFDE         	movff	colour_read_all@G,postinc2
  2050   002F76  C0E0  FFDE         	movff	colour_read_all@G+1,postinc2
  2051   002F7A  C0E1  FFDE         	movff	colour_read_all@G+2,postinc2
  2052   002F7E  C0E2  FFDE         	movff	colour_read_all@G+3,postinc2
  2053   002F82                     
  2054                           ; BSR set to: 0
  2055                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2056   002F82  EE20 F00C          	lfsr	2,12
  2057   002F86  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2058   002F88  26D9               	addwf	fsr2l,f,c
  2059   002F8A  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2060   002F8C  22DA               	addwfc	fsr2h,f,c
  2061   002F8E  C0D3  FFDE         	movff	colour_read_all@C,postinc2
  2062   002F92  C0D4  FFDE         	movff	colour_read_all@C+1,postinc2
  2063   002F96  C0D5  FFDE         	movff	colour_read_all@C+2,postinc2
  2064   002F9A  C0D6  FFDE         	movff	colour_read_all@C+3,postinc2
  2065   002F9E                     
  2066                           ; BSR set to: 0
  2067                           ;colorfunctions.c: 22:     (rel->R)=R/total;
  2068   002F9E  C0DB  F053         	movff	colour_read_all@R,___fldiv@b
  2069   002FA2  C0DC  F054         	movff	colour_read_all@R+1,___fldiv@b+1
  2070   002FA6  C0DD  F055         	movff	colour_read_all@R+2,___fldiv@b+2
  2071   002FAA  C0DE  F056         	movff	colour_read_all@R+3,___fldiv@b+3
  2072   002FAE  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2073   002FB2  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2074   002FB6  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2075   002FBA  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2076   002FBE  EC12  F014         	call	___fldiv	;wreg free
  2077   002FC2  C0D1  FFD9         	movff	colour_read_all@rel,fsr2l
  2078   002FC6  C0D2  FFDA         	movff	colour_read_all@rel+1,fsr2h
  2079   002FCA  C053  FFDE         	movff	?___fldiv,postinc2
  2080   002FCE  C054  FFDE         	movff	?___fldiv+1,postinc2
  2081   002FD2  C055  FFDE         	movff	?___fldiv+2,postinc2
  2082   002FD6  C056  FFDE         	movff	?___fldiv+3,postinc2
  2083   002FDA                     
  2084                           ;colorfunctions.c: 23:     (rel->B)=B/total;
  2085   002FDA  C0E3  F053         	movff	colour_read_all@B,___fldiv@b
  2086   002FDE  C0E4  F054         	movff	colour_read_all@B+1,___fldiv@b+1
  2087   002FE2  C0E5  F055         	movff	colour_read_all@B+2,___fldiv@b+2
  2088   002FE6  C0E6  F056         	movff	colour_read_all@B+3,___fldiv@b+3
  2089   002FEA  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2090   002FEE  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2091   002FF2  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2092   002FF6  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2093   002FFA  EC12  F014         	call	___fldiv	;wreg free
  2094   002FFE  0100               	movlb	0	; () banked
  2095   003000  EE20 F008          	lfsr	2,8
  2096   003004  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2097   003006  26D9               	addwf	fsr2l,f,c
  2098   003008  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2099   00300A  22DA               	addwfc	fsr2h,f,c
  2100   00300C  C053  FFDE         	movff	?___fldiv,postinc2
  2101   003010  C054  FFDE         	movff	?___fldiv+1,postinc2
  2102   003014  C055  FFDE         	movff	?___fldiv+2,postinc2
  2103   003018  C056  FFDE         	movff	?___fldiv+3,postinc2
  2104   00301C                     
  2105                           ; BSR set to: 0
  2106                           ;colorfunctions.c: 24:     (rel->G)=G/total;
  2107   00301C  C0DF  F053         	movff	colour_read_all@G,___fldiv@b
  2108   003020  C0E0  F054         	movff	colour_read_all@G+1,___fldiv@b+1
  2109   003024  C0E1  F055         	movff	colour_read_all@G+2,___fldiv@b+2
  2110   003028  C0E2  F056         	movff	colour_read_all@G+3,___fldiv@b+3
  2111   00302C  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2112   003030  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2113   003034  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2114   003038  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2115   00303C  EC12  F014         	call	___fldiv	;wreg free
  2116   003040  0100               	movlb	0	; () banked
  2117   003042  EE20 F004          	lfsr	2,4
  2118   003046  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2119   003048  26D9               	addwf	fsr2l,f,c
  2120   00304A  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2121   00304C  22DA               	addwfc	fsr2h,f,c
  2122   00304E  C053  FFDE         	movff	?___fldiv,postinc2
  2123   003052  C054  FFDE         	movff	?___fldiv+1,postinc2
  2124   003056  C055  FFDE         	movff	?___fldiv+2,postinc2
  2125   00305A  C056  FFDE         	movff	?___fldiv+3,postinc2
  2126   00305E                     
  2127                           ; BSR set to: 0
  2128   00305E  0012               	return		;funcret
  2129   003060                     __end_of_colour_read_all:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _color_read_Red *****************
  2133 ;; Defined at:
  2134 ;;		line 38 in file "colorclick.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  tmp             2    9[COMRAM] unsigned int 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    4[COMRAM] unsigned int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        7 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 3
  2155 ;; This function calls:
  2156 ;;		_I2C_2_Master_Read
  2157 ;;		_I2C_2_Master_RepStart
  2158 ;;		_I2C_2_Master_Start
  2159 ;;		_I2C_2_Master_Stop
  2160 ;;		_I2C_2_Master_Write
  2161 ;; This function is called by:
  2162 ;;		_colour_read_all
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text6
  2167   0042C0                     __ptext6:
  2168                           	callstack 0
  2169   0042C0                     _color_read_Red:
  2170                           	callstack 26
  2171   0042C0                     
  2172                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2173   0042C0  EC4D  F023         	call	_I2C_2_Master_Start	;wreg free
  2174                           
  2175                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2176   0042C4  0E52               	movlw	82
  2177   0042C6  EC31  F023         	call	_I2C_2_Master_Write
  2178                           
  2179                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2180   0042CA  0EB6               	movlw	182
  2181   0042CC  EC31  F023         	call	_I2C_2_Master_Write
  2182                           
  2183                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2184   0042D0  EC43  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2185                           
  2186                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2187   0042D4  0E53               	movlw	83
  2188   0042D6  EC31  F023         	call	_I2C_2_Master_Write
  2189                           
  2190                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2191   0042DA  0E01               	movlw	1
  2192   0042DC  EC48  F022         	call	_I2C_2_Master_Read
  2193   0042E0  6E07               	movwf	??_color_read_Red^0,c
  2194   0042E2  5007               	movf	??_color_read_Red^0,w,c
  2195   0042E4  6E0A               	movwf	color_read_Red@tmp^0,c
  2196   0042E6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2197                           
  2198                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2199   0042E8  0E00               	movlw	0
  2200   0042EA  EC48  F022         	call	_I2C_2_Master_Read
  2201   0042EE  6E07               	movwf	??_color_read_Red^0,c
  2202   0042F0  5007               	movf	??_color_read_Red^0,w,c
  2203   0042F2  6E09               	movwf	(??_color_read_Red+2)^0,c
  2204   0042F4  6A08               	clrf	(??_color_read_Red+1)^0,c
  2205   0042F6  500A               	movf	color_read_Red@tmp^0,w,c
  2206   0042F8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2207   0042FA  6E0A               	movwf	color_read_Red@tmp^0,c
  2208   0042FC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2209   0042FE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2210   004300  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2211                           
  2212                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2213   004302  EC48  F023         	call	_I2C_2_Master_Stop	;wreg free
  2214   004306                     
  2215                           ;colorclick.c: 49:  return tmp;
  2216   004306  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2217   00430A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2218   00430E  0012               	return		;funcret
  2219   004310                     __end_of_color_read_Red:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _color_read_Green *****************
  2223 ;; Defined at:
  2224 ;;		line 51 in file "colorclick.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  tmp             2    9[COMRAM] unsigned int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    4[COMRAM] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:        7 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 3
  2245 ;; This function calls:
  2246 ;;		_I2C_2_Master_Read
  2247 ;;		_I2C_2_Master_RepStart
  2248 ;;		_I2C_2_Master_Start
  2249 ;;		_I2C_2_Master_Stop
  2250 ;;		_I2C_2_Master_Write
  2251 ;; This function is called by:
  2252 ;;		_colour_read_all
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text7
  2257   004310                     __ptext7:
  2258                           	callstack 0
  2259   004310                     _color_read_Green:
  2260                           	callstack 26
  2261   004310                     
  2262                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2263   004310  EC4D  F023         	call	_I2C_2_Master_Start	;wreg free
  2264                           
  2265                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2266   004314  0E52               	movlw	82
  2267   004316  EC31  F023         	call	_I2C_2_Master_Write
  2268                           
  2269                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2270   00431A  0EB8               	movlw	184
  2271   00431C  EC31  F023         	call	_I2C_2_Master_Write
  2272                           
  2273                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2274   004320  EC43  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2275                           
  2276                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2277   004324  0E53               	movlw	83
  2278   004326  EC31  F023         	call	_I2C_2_Master_Write
  2279                           
  2280                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2281   00432A  0E01               	movlw	1
  2282   00432C  EC48  F022         	call	_I2C_2_Master_Read
  2283   004330  6E07               	movwf	??_color_read_Green^0,c
  2284   004332  5007               	movf	??_color_read_Green^0,w,c
  2285   004334  6E0A               	movwf	color_read_Green@tmp^0,c
  2286   004336  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2287                           
  2288                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2289   004338  0E00               	movlw	0
  2290   00433A  EC48  F022         	call	_I2C_2_Master_Read
  2291   00433E  6E07               	movwf	??_color_read_Green^0,c
  2292   004340  5007               	movf	??_color_read_Green^0,w,c
  2293   004342  6E09               	movwf	(??_color_read_Green+2)^0,c
  2294   004344  6A08               	clrf	(??_color_read_Green+1)^0,c
  2295   004346  500A               	movf	color_read_Green@tmp^0,w,c
  2296   004348  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2297   00434A  6E0A               	movwf	color_read_Green@tmp^0,c
  2298   00434C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2299   00434E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2300   004350  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2301                           
  2302                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2303   004352  EC48  F023         	call	_I2C_2_Master_Stop	;wreg free
  2304   004356                     
  2305                           ;colorclick.c: 62:     return tmp;
  2306   004356  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2307   00435A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2308   00435E  0012               	return		;funcret
  2309   004360                     __end_of_color_read_Green:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _color_read_Clear *****************
  2313 ;; Defined at:
  2314 ;;		line 80 in file "colorclick.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  tmp             2    9[COMRAM] unsigned int 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2    4[COMRAM] unsigned int 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;Total ram usage:        7 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 3
  2335 ;; This function calls:
  2336 ;;		_I2C_2_Master_Read
  2337 ;;		_I2C_2_Master_RepStart
  2338 ;;		_I2C_2_Master_Start
  2339 ;;		_I2C_2_Master_Stop
  2340 ;;		_I2C_2_Master_Write
  2341 ;; This function is called by:
  2342 ;;		_colour_read_all
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text8
  2347   004360                     __ptext8:
  2348                           	callstack 0
  2349   004360                     _color_read_Clear:
  2350                           	callstack 26
  2351   004360                     
  2352                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2353   004360  EC4D  F023         	call	_I2C_2_Master_Start	;wreg free
  2354                           
  2355                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2356   004364  0E52               	movlw	82
  2357   004366  EC31  F023         	call	_I2C_2_Master_Write
  2358                           
  2359                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2360   00436A  0EB4               	movlw	180
  2361   00436C  EC31  F023         	call	_I2C_2_Master_Write
  2362                           
  2363                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2364   004370  EC43  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2365                           
  2366                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2367   004374  0E53               	movlw	83
  2368   004376  EC31  F023         	call	_I2C_2_Master_Write
  2369                           
  2370                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2371   00437A  0E01               	movlw	1
  2372   00437C  EC48  F022         	call	_I2C_2_Master_Read
  2373   004380  6E07               	movwf	??_color_read_Clear^0,c
  2374   004382  5007               	movf	??_color_read_Clear^0,w,c
  2375   004384  6E0A               	movwf	color_read_Clear@tmp^0,c
  2376   004386  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2377                           
  2378                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2379   004388  0E00               	movlw	0
  2380   00438A  EC48  F022         	call	_I2C_2_Master_Read
  2381   00438E  6E07               	movwf	??_color_read_Clear^0,c
  2382   004390  5007               	movf	??_color_read_Clear^0,w,c
  2383   004392  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2384   004394  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2385   004396  500A               	movf	color_read_Clear@tmp^0,w,c
  2386   004398  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2387   00439A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2388   00439C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2389   00439E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2390   0043A0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2391                           
  2392                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2393   0043A2  EC48  F023         	call	_I2C_2_Master_Stop	;wreg free
  2394   0043A6                     
  2395                           ;colorclick.c: 91:     return tmp;
  2396   0043A6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2397   0043AA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2398   0043AE  0012               	return		;funcret
  2399   0043B0                     __end_of_color_read_Clear:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _color_read_Blue *****************
  2403 ;; Defined at:
  2404 ;;		line 65 in file "colorclick.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  tmp             2    9[COMRAM] unsigned int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    4[COMRAM] unsigned int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        7 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 3
  2425 ;; This function calls:
  2426 ;;		_I2C_2_Master_Read
  2427 ;;		_I2C_2_Master_RepStart
  2428 ;;		_I2C_2_Master_Start
  2429 ;;		_I2C_2_Master_Stop
  2430 ;;		_I2C_2_Master_Write
  2431 ;; This function is called by:
  2432 ;;		_colour_read_all
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text9
  2437   0043B0                     __ptext9:
  2438                           	callstack 0
  2439   0043B0                     _color_read_Blue:
  2440                           	callstack 26
  2441   0043B0                     
  2442                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2443   0043B0  EC4D  F023         	call	_I2C_2_Master_Start	;wreg free
  2444                           
  2445                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2446   0043B4  0E52               	movlw	82
  2447   0043B6  EC31  F023         	call	_I2C_2_Master_Write
  2448                           
  2449                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2450   0043BA  0EBA               	movlw	186
  2451   0043BC  EC31  F023         	call	_I2C_2_Master_Write
  2452                           
  2453                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2454   0043C0  EC43  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2455                           
  2456                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2457   0043C4  0E53               	movlw	83
  2458   0043C6  EC31  F023         	call	_I2C_2_Master_Write
  2459                           
  2460                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2461   0043CA  0E01               	movlw	1
  2462   0043CC  EC48  F022         	call	_I2C_2_Master_Read
  2463   0043D0  6E07               	movwf	??_color_read_Blue^0,c
  2464   0043D2  5007               	movf	??_color_read_Blue^0,w,c
  2465   0043D4  6E0A               	movwf	color_read_Blue@tmp^0,c
  2466   0043D6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2467                           
  2468                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2469   0043D8  0E00               	movlw	0
  2470   0043DA  EC48  F022         	call	_I2C_2_Master_Read
  2471   0043DE  6E07               	movwf	??_color_read_Blue^0,c
  2472   0043E0  5007               	movf	??_color_read_Blue^0,w,c
  2473   0043E2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2474   0043E4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2475   0043E6  500A               	movf	color_read_Blue@tmp^0,w,c
  2476   0043E8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2477   0043EA  6E0A               	movwf	color_read_Blue@tmp^0,c
  2478   0043EC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2479   0043EE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2480   0043F0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2481                           
  2482                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2483   0043F2  EC48  F023         	call	_I2C_2_Master_Stop	;wreg free
  2484   0043F6                     
  2485                           ;colorclick.c: 76:     return tmp;
  2486   0043F6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2487   0043FA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2488   0043FE  0012               	return		;funcret
  2489   004400                     __end_of_color_read_Blue:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _I2C_2_Master_RepStart *****************
  2493 ;; Defined at:
  2494 ;;		line 33 in file "i2c.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 2
  2515 ;; This function calls:
  2516 ;;		_I2C_2_Master_Idle
  2517 ;; This function is called by:
  2518 ;;		_color_read_Red
  2519 ;;		_color_read_Green
  2520 ;;		_color_read_Blue
  2521 ;;		_color_read_Clear
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text10
  2526   004686                     __ptext10:
  2527                           	callstack 0
  2528   004686                     _I2C_2_Master_RepStart:
  2529                           	callstack 26
  2530   004686                     
  2531                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2532   004686  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2533   00468A                     
  2534                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2535   00468A  010E               	movlb	14	; () banked
  2536   00468C  83DA               	bsf	218,1,b	;volatile
  2537   00468E                     
  2538                           ; BSR set to: 14
  2539   00468E  0012               	return		;funcret
  2540   004690                     __end_of_I2C_2_Master_RepStart:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _I2C_2_Master_Read *****************
  2544 ;; Defined at:
  2545 ;;		line 51 in file "i2c.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  ack             1    wreg     unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  ack             1    2[COMRAM] unsigned char 
  2550 ;;  tmp             1    3[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      unsigned char 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 2
  2567 ;; This function calls:
  2568 ;;		_I2C_2_Master_Idle
  2569 ;; This function is called by:
  2570 ;;		_color_read_Red
  2571 ;;		_color_read_Green
  2572 ;;		_color_read_Blue
  2573 ;;		_color_read_Clear
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text11
  2578   004490                     __ptext11:
  2579                           	callstack 0
  2580   004490                     _I2C_2_Master_Read:
  2581                           	callstack 26
  2582                           
  2583                           ; BSR set to: 14
  2584                           ;incstack = 0
  2585                           ;I2C_2_Master_Read@ack stored from wreg
  2586   004490  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2587   004492                     
  2588                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2589   004492  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2590   004496                     
  2591                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2592   004496  010E               	movlb	14	; () banked
  2593   004498  87DA               	bsf	218,3,b	;volatile
  2594                           
  2595                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2596   00449A  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2597   00449E                     
  2598                           ;i2c.c: 57:   tmp = SSP2BUF;
  2599   00449E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2600                           
  2601                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2602   0044A2  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2603   0044A6                     
  2604                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2605   0044A6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2606   0044A8  B4D8               	btfsc	status,2,c
  2607   0044AA  EF59  F022         	goto	u2361
  2608   0044AE  EF5D  F022         	goto	u2360
  2609   0044B2                     u2361:
  2610   0044B2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2611   0044B4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2612   0044B6  EF5E  F022         	goto	u2378
  2613   0044BA                     u2360:
  2614   0044BA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2615   0044BC                     u2378:
  2616   0044BC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2617   0044BE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2618   0044C0  010E               	movlb	14	; () banked
  2619   0044C2  51DA               	movf	218,w,b	;volatile
  2620   0044C4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2621   0044C6  0BDF               	andlw	-33
  2622   0044C8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2623   0044CA  6FDA               	movwf	218,b	;volatile
  2624   0044CC                     
  2625                           ; BSR set to: 14
  2626                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2627   0044CC  89DA               	bsf	218,4,b	;volatile
  2628   0044CE                     
  2629                           ; BSR set to: 14
  2630                           ;i2c.c: 61:   return tmp;
  2631   0044CE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2632   0044D0                     
  2633                           ; BSR set to: 14
  2634   0044D0  0012               	return		;funcret
  2635   0044D2                     __end_of_I2C_2_Master_Read:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _color_click_init *****************
  2639 ;; Defined at:
  2640 ;;		line 6 in file "colorclick.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;Total ram usage:        1 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 4
  2661 ;; This function calls:
  2662 ;;		_I2C_2_Master_Init
  2663 ;;		_color_writetoaddr
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text12
  2670   0044D2                     __ptext12:
  2671                           	callstack 0
  2672   0044D2                     _color_click_init:
  2673                           	callstack 26
  2674   0044D2                     
  2675                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2676   0044D2  ECBB  F022         	call	_I2C_2_Master_Init	;wreg free
  2677   0044D6                     
  2678                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2679   0044D6  0E01               	movlw	1
  2680   0044D8  6E03               	movwf	color_writetoaddr@value^0,c
  2681   0044DA  0E00               	movlw	0
  2682   0044DC  EC1A  F023         	call	_color_writetoaddr
  2683   0044E0                     
  2684                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2685   0044E0  0E3F               	movlw	63
  2686   0044E2  6E05               	movwf	??_color_click_init^0,c
  2687   0044E4  0E55               	movlw	85
  2688   0044E6                     u3847:
  2689   0044E6  2EE8               	decfsz	wreg,f,c
  2690   0044E8  D7FE               	bra	u3847
  2691   0044EA  2E05               	decfsz	??_color_click_init^0,f,c
  2692   0044EC  D7FC               	bra	u3847
  2693   0044EE  F000               	nop	
  2694   0044F0                     
  2695                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2696   0044F0  0E03               	movlw	3
  2697   0044F2  6E03               	movwf	color_writetoaddr@value^0,c
  2698   0044F4  0E00               	movlw	0
  2699   0044F6  EC1A  F023         	call	_color_writetoaddr
  2700   0044FA                     
  2701                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2702   0044FA  0ED6               	movlw	214
  2703   0044FC  6E03               	movwf	color_writetoaddr@value^0,c
  2704   0044FE  0E01               	movlw	1
  2705   004500  EC1A  F023         	call	_color_writetoaddr
  2706   004504                     
  2707                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2708   004504  927F               	bcf	127,1,c	;volatile
  2709   004506                     
  2710                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2711   004506  9287               	bcf	135,1,c	;volatile
  2712   004508                     
  2713                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2714   004508  9879               	bcf	121,4,c	;volatile
  2715   00450A                     
  2716                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2717   00450A  9881               	bcf	129,4,c	;volatile
  2718   00450C                     
  2719                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2720   00450C  9E7E               	bcf	126,7,c	;volatile
  2721   00450E                     
  2722                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2723   00450E  9E86               	bcf	134,7,c	;volatile
  2724   004510  0012               	return		;funcret
  2725   004512                     __end_of_color_click_init:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _color_writetoaddr *****************
  2729 ;; Defined at:
  2730 ;;		line 30 in file "colorclick.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  address         1    wreg     unsigned char 
  2733 ;;  value           1    2[COMRAM] unsigned char 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  address         1    3[COMRAM] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2745 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;Total ram usage:        2 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 3
  2752 ;; This function calls:
  2753 ;;		_I2C_2_Master_Start
  2754 ;;		_I2C_2_Master_Stop
  2755 ;;		_I2C_2_Master_Write
  2756 ;; This function is called by:
  2757 ;;		_color_click_init
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text13
  2762   004634                     __ptext13:
  2763                           	callstack 0
  2764   004634                     _color_writetoaddr:
  2765                           	callstack 26
  2766                           
  2767                           ;incstack = 0
  2768                           ;color_writetoaddr@address stored from wreg
  2769   004634  6E04               	movwf	color_writetoaddr@address^0,c
  2770   004636                     
  2771                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2772   004636  EC4D  F023         	call	_I2C_2_Master_Start	;wreg free
  2773                           
  2774                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2775   00463A  0E52               	movlw	82
  2776   00463C  EC31  F023         	call	_I2C_2_Master_Write
  2777                           
  2778                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2779   004640  5004               	movf	color_writetoaddr@address^0,w,c
  2780   004642  0980               	iorlw	128
  2781   004644  EC31  F023         	call	_I2C_2_Master_Write
  2782                           
  2783                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2784   004648  5003               	movf	color_writetoaddr@value^0,w,c
  2785   00464A  EC31  F023         	call	_I2C_2_Master_Write
  2786                           
  2787                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2788   00464E  EC48  F023         	call	_I2C_2_Master_Stop	;wreg free
  2789   004652  0012               	return		;funcret
  2790   004654                     __end_of_color_writetoaddr:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _I2C_2_Master_Write *****************
  2794 ;; Defined at:
  2795 ;;		line 45 in file "i2c.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  data_byte       1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  data_byte       1    1[COMRAM] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:        1 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		_I2C_2_Master_Idle
  2818 ;; This function is called by:
  2819 ;;		_color_writetoaddr
  2820 ;;		_color_read_Red
  2821 ;;		_color_read_Green
  2822 ;;		_color_read_Blue
  2823 ;;		_color_read_Clear
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text14
  2828   004662                     __ptext14:
  2829                           	callstack 0
  2830   004662                     _I2C_2_Master_Write:
  2831                           	callstack 26
  2832                           
  2833                           ;incstack = 0
  2834                           ;I2C_2_Master_Write@data_byte stored from wreg
  2835   004662  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2836   004664                     
  2837                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2838   004664  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2839   004668                     
  2840                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2841   004668  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2842   00466C  0012               	return		;funcret
  2843   00466E                     __end_of_I2C_2_Master_Write:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _I2C_2_Master_Stop *****************
  2847 ;; Defined at:
  2848 ;;		line 39 in file "i2c.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 2
  2869 ;; This function calls:
  2870 ;;		_I2C_2_Master_Idle
  2871 ;; This function is called by:
  2872 ;;		_color_writetoaddr
  2873 ;;		_color_read_Red
  2874 ;;		_color_read_Green
  2875 ;;		_color_read_Blue
  2876 ;;		_color_read_Clear
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text15
  2881   004690                     __ptext15:
  2882                           	callstack 0
  2883   004690                     _I2C_2_Master_Stop:
  2884                           	callstack 26
  2885   004690                     
  2886                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2887   004690  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2888   004694                     
  2889                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2890   004694  010E               	movlb	14	; () banked
  2891   004696  85DA               	bsf	218,2,b	;volatile
  2892   004698                     
  2893                           ; BSR set to: 14
  2894   004698  0012               	return		;funcret
  2895   00469A                     __end_of_I2C_2_Master_Stop:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _I2C_2_Master_Start *****************
  2899 ;; Defined at:
  2900 ;;		line 27 in file "i2c.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 2
  2921 ;; This function calls:
  2922 ;;		_I2C_2_Master_Idle
  2923 ;; This function is called by:
  2924 ;;		_color_writetoaddr
  2925 ;;		_color_read_Red
  2926 ;;		_color_read_Green
  2927 ;;		_color_read_Blue
  2928 ;;		_color_read_Clear
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text16
  2933   00469A                     __ptext16:
  2934                           	callstack 0
  2935   00469A                     _I2C_2_Master_Start:
  2936                           	callstack 26
  2937   00469A                     
  2938                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2939   00469A  ECD0  F022         	call	_I2C_2_Master_Idle	;wreg free
  2940   00469E                     
  2941                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2942   00469E  010E               	movlb	14	; () banked
  2943   0046A0  81DA               	bsf	218,0,b	;volatile
  2944   0046A2                     
  2945                           ; BSR set to: 14
  2946   0046A2  0012               	return		;funcret
  2947   0046A4                     __end_of_I2C_2_Master_Start:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _I2C_2_Master_Idle *****************
  2951 ;; Defined at:
  2952 ;;		line 22 in file "i2c.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:        1 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_I2C_2_Master_Start
  2977 ;;		_I2C_2_Master_RepStart
  2978 ;;		_I2C_2_Master_Stop
  2979 ;;		_I2C_2_Master_Write
  2980 ;;		_I2C_2_Master_Read
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text17
  2985   0045A0                     __ptext17:
  2986                           	callstack 0
  2987   0045A0                     _I2C_2_Master_Idle:
  2988                           	callstack 26
  2989   0045A0                     l193:
  2990   0045A0  010E               	movlb	14	; () banked
  2991   0045A2  B5D8               	btfsc	216,2,b	;volatile
  2992   0045A4  EFD6  F022         	goto	u2051
  2993   0045A8  EFD8  F022         	goto	u2050
  2994   0045AC                     u2051:
  2995   0045AC  EFD0  F022         	goto	l193
  2996   0045B0                     u2050:
  2997   0045B0                     
  2998                           ; BSR set to: 14
  2999   0045B0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3000   0045B4  0E1F               	movlw	31
  3001   0045B6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3002   0045B8  A4D8               	btfss	status,2,c
  3003   0045BA  EFE1  F022         	goto	u2061
  3004   0045BE  EFE3  F022         	goto	u2060
  3005   0045C2                     u2061:
  3006   0045C2  EFD0  F022         	goto	l193
  3007   0045C6                     u2060:
  3008   0045C6                     
  3009                           ; BSR set to: 14
  3010   0045C6  0012               	return		;funcret
  3011   0045C8                     __end_of_I2C_2_Master_Idle:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _I2C_2_Master_Init *****************
  3015 ;; Defined at:
  3016 ;;		line 4 in file "i2c.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_color_click_init
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text18
  3046   004576                     __ptext18:
  3047                           	callstack 0
  3048   004576                     _I2C_2_Master_Init:
  3049                           	callstack 28
  3050   004576                     
  3051                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3052   004576  010E               	movlb	14	; () banked
  3053   004578  51D9               	movf	217,w,b	;volatile
  3054   00457A  0BF0               	andlw	-16
  3055   00457C  0908               	iorlw	8
  3056   00457E  6FD9               	movwf	217,b	;volatile
  3057   004580                     
  3058                           ; BSR set to: 14
  3059                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3060   004580  8BD9               	bsf	217,5,b	;volatile
  3061                           
  3062                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3063   004582  0E9F               	movlw	159
  3064   004584  6FD6               	movwf	214,b	;volatile
  3065   004586                     
  3066                           ; BSR set to: 14
  3067                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3068   004586  8A84               	bsf	132,5,c	;volatile
  3069   004588                     
  3070                           ; BSR set to: 14
  3071                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3072   004588  8C84               	bsf	132,6,c	;volatile
  3073   00458A                     
  3074                           ; BSR set to: 14
  3075                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3076   00458A  9BA7               	bcf	167,5,b	;volatile
  3077   00458C                     
  3078                           ; BSR set to: 14
  3079                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3080   00458C  9DA7               	bcf	167,6,b	;volatile
  3081                           
  3082                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3083   00458E  0E1D               	movlw	29
  3084   004590  6F1D               	movwf	29,b	;volatile
  3085                           
  3086                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3087   004592  0E1E               	movlw	30
  3088   004594  6F1C               	movwf	28,b	;volatile
  3089                           
  3090                           ;i2c.c: 18:   RD5PPS=0x1C;
  3091   004596  0E1C               	movlw	28
  3092   004598  6F6F               	movwf	111,b	;volatile
  3093                           
  3094                           ;i2c.c: 19:   RD6PPS=0x1B;
  3095   00459A  0E1B               	movlw	27
  3096   00459C  6F70               	movwf	112,b	;volatile
  3097   00459E                     
  3098                           ; BSR set to: 14
  3099   00459E  0012               	return		;funcret
  3100   0045A0                     __end_of_I2C_2_Master_Init:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _Timer0_init *****************
  3104 ;; Defined at:
  3105 ;;		line 7 in file "timer.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text19
  3134   0045EE                     __ptext19:
  3135                           	callstack 0
  3136   0045EE                     _Timer0_init:
  3137                           	callstack 29
  3138   0045EE                     
  3139                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3140   0045EE  50D6               	movf	214,w,c	;volatile
  3141   0045F0  0B1F               	andlw	-225
  3142   0045F2  0940               	iorlw	64
  3143   0045F4  6ED6               	movwf	214,c	;volatile
  3144   0045F6                     
  3145                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3146   0045F6  88D6               	bsf	214,4,c	;volatile
  3147                           
  3148                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3149   0045F8  50D6               	movf	214,w,c	;volatile
  3150   0045FA  0BF0               	andlw	-16
  3151   0045FC  090D               	iorlw	13
  3152   0045FE  6ED6               	movwf	214,c	;volatile
  3153   004600                     
  3154                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3155   004600  88D5               	bsf	213,4,c	;volatile
  3156   004602                     
  3157                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3158   004602  010E               	movlb	14	; () banked
  3159   004604  8B29               	bsf	41,5,b	;volatile
  3160                           
  3161                           ;timer.c: 17:     TMR0H=0;
  3162   004606  0E00               	movlw	0
  3163   004608  6ED4               	movwf	212,c	;volatile
  3164                           
  3165                           ;timer.c: 18:     TMR0L=0;
  3166   00460A  0E00               	movlw	0
  3167   00460C  6ED3               	movwf	211,c	;volatile
  3168   00460E                     
  3169                           ; BSR set to: 14
  3170                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3171   00460E  8ED5               	bsf	213,7,c	;volatile
  3172   004610                     
  3173                           ; BSR set to: 14
  3174   004610  0012               	return		;funcret
  3175   004612                     __end_of_Timer0_init:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _RGB2Hue *****************
  3179 ;; Defined at:
  3180 ;;		line 26 in file "colorfunctions.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  3183 ;;		 -> colorf(22), 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  min             2   25[BANK0 ] int 
  3186 ;;  max             2   23[BANK0 ] int 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;Total ram usage:       14 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 3
  3203 ;; This function calls:
  3204 ;;		___fladd
  3205 ;;		___fldiv
  3206 ;;		___fleq
  3207 ;;		___flge
  3208 ;;		___flmul
  3209 ;;		___flsub
  3210 ;;		___fltol
  3211 ;;		___xxtofl
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text20
  3218   000E66                     __ptext20:
  3219                           	callstack 0
  3220   000E66                     _RGB2Hue:
  3221                           	callstack 27
  3222   000E66                     
  3223                           ;colorfunctions.c: 27:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3224   000E66  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3225   000E6A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3226   000E6E  CFDE F001          	movff	postinc2,___fleq@ff1
  3227   000E72  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3228   000E76  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3229   000E7A  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3230   000E7E  0100               	movlb	0	; () banked
  3231   000E80  EE20 F004          	lfsr	2,4
  3232   000E84  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3233   000E86  26D9               	addwf	fsr2l,f,c
  3234   000E88  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3235   000E8A  22DA               	addwfc	fsr2h,f,c
  3236   000E8C  CFDE F005          	movff	postinc2,___fleq@ff2
  3237   000E90  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3238   000E94  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3239   000E98  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3240   000E9C  EC9F  F01B         	call	___fleq	;wreg free
  3241   000EA0  A0D8               	btfss	status,0,c
  3242   000EA2  EF55  F007         	goto	u3391
  3243   000EA6  EF57  F007         	goto	u3390
  3244   000EAA                     u3391:
  3245   000EAA  EF8C  F007         	goto	l3892
  3246   000EAE                     u3390:
  3247   000EAE  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3248   000EB2  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3249   000EB6  CFDE F001          	movff	postinc2,___fleq@ff1
  3250   000EBA  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3251   000EBE  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3252   000EC2  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3253   000EC6  0100               	movlb	0	; () banked
  3254   000EC8  EE20 F008          	lfsr	2,8
  3255   000ECC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3256   000ECE  26D9               	addwf	fsr2l,f,c
  3257   000ED0  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3258   000ED2  22DA               	addwfc	fsr2h,f,c
  3259   000ED4  CFDE F005          	movff	postinc2,___fleq@ff2
  3260   000ED8  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3261   000EDC  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3262   000EE0  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3263   000EE4  EC9F  F01B         	call	___fleq	;wreg free
  3264   000EE8  A0D8               	btfss	status,0,c
  3265   000EEA  EF79  F007         	goto	u3401
  3266   000EEE  EF7B  F007         	goto	u3400
  3267   000EF2                     u3401:
  3268   000EF2  EF8C  F007         	goto	l3892
  3269   000EF6                     u3400:
  3270   000EF6                     
  3271                           ;colorfunctions.c: 28:         cf->h=0;
  3272   000EF6  0100               	movlb	0	; () banked
  3273   000EF8  EE20 F010          	lfsr	2,16
  3274   000EFC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3275   000EFE  26D9               	addwf	fsr2l,f,c
  3276   000F00  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3277   000F02  22DA               	addwfc	fsr2h,f,c
  3278   000F04  0E00               	movlw	0
  3279   000F06  6EDE               	movwf	postinc2,c
  3280   000F08  0E00               	movlw	0
  3281   000F0A  6EDE               	movwf	postinc2,c
  3282   000F0C  0E00               	movlw	0
  3283   000F0E  6EDE               	movwf	postinc2,c
  3284   000F10  0E00               	movlw	0
  3285   000F12  6EDD               	movwf	postdec2,c
  3286                           
  3287                           ;colorfunctions.c: 29:     }
  3288   000F14  EFC8  F00A         	goto	l123
  3289   000F18                     l3892:
  3290                           
  3291                           ;colorfunctions.c: 33:         signed int min=0;
  3292   000F18  0E00               	movlw	0
  3293   000F1A  0100               	movlb	0	; () banked
  3294   000F1C  6FDC               	movwf	(RGB2Hue@min+1)& (0+255),b
  3295   000F1E  0E00               	movlw	0
  3296   000F20  6FDB               	movwf	RGB2Hue@min& (0+255),b
  3297   000F22                     
  3298                           ; BSR set to: 0
  3299                           ;colorfunctions.c: 34:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3300   000F22  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3301   000F26  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3302   000F2A  CFDE F04B          	movff	postinc2,___flge@ff1
  3303   000F2E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3304   000F32  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3305   000F36  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3306   000F3A  EE20 F004          	lfsr	2,4
  3307   000F3E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3308   000F40  26D9               	addwf	fsr2l,f,c
  3309   000F42  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3310   000F44  22DA               	addwfc	fsr2h,f,c
  3311   000F46  CFDE F04F          	movff	postinc2,___flge@ff2
  3312   000F4A  CFDE F050          	movff	postinc2,___flge@ff2+1
  3313   000F4E  CFDE F051          	movff	postinc2,___flge@ff2+2
  3314   000F52  CFDE F052          	movff	postinc2,___flge@ff2+3
  3315   000F56  EC1D  F01B         	call	___flge	;wreg free
  3316   000F5A  B0D8               	btfsc	status,0,c
  3317   000F5C  EFB2  F007         	goto	u3411
  3318   000F60  EFB4  F007         	goto	u3410
  3319   000F64                     u3411:
  3320   000F64  EFEC  F007         	goto	l3900
  3321   000F68                     u3410:
  3322   000F68  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3323   000F6C  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3324   000F70  CFDE F04B          	movff	postinc2,___flge@ff1
  3325   000F74  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3326   000F78  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3327   000F7C  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3328   000F80  0100               	movlb	0	; () banked
  3329   000F82  EE20 F008          	lfsr	2,8
  3330   000F86  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3331   000F88  26D9               	addwf	fsr2l,f,c
  3332   000F8A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3333   000F8C  22DA               	addwfc	fsr2h,f,c
  3334   000F8E  CFDE F04F          	movff	postinc2,___flge@ff2
  3335   000F92  CFDE F050          	movff	postinc2,___flge@ff2+1
  3336   000F96  CFDE F051          	movff	postinc2,___flge@ff2+2
  3337   000F9A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3338   000F9E  EC1D  F01B         	call	___flge	;wreg free
  3339   000FA2  B0D8               	btfsc	status,0,c
  3340   000FA4  EFD6  F007         	goto	u3421
  3341   000FA8  EFD8  F007         	goto	u3420
  3342   000FAC                     u3421:
  3343   000FAC  EFEC  F007         	goto	l3900
  3344   000FB0                     u3420:
  3345   000FB0                     
  3346                           ;colorfunctions.c: 35:             min=cf->Rf;
  3347   000FB0  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3348   000FB4  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3349   000FB8  CFDE F001          	movff	postinc2,___fltol@f1
  3350   000FBC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3351   000FC0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3352   000FC4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3353   000FC8  EC9A  F01A         	call	___fltol	;wreg free
  3354   000FCC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3355   000FD0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3356                           
  3357                           ;colorfunctions.c: 36:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3358   000FD4  EF62  F008         	goto	l115
  3359   000FD8                     l3900:
  3360   000FD8  0100               	movlb	0	; () banked
  3361   000FDA  EE20 F004          	lfsr	2,4
  3362   000FDE  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3363   000FE0  26D9               	addwf	fsr2l,f,c
  3364   000FE2  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3365   000FE4  22DA               	addwfc	fsr2h,f,c
  3366   000FE6  CFDE F04B          	movff	postinc2,___flge@ff1
  3367   000FEA  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3368   000FEE  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3369   000FF2  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3370   000FF6  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3371   000FFA  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3372   000FFE  CFDE F04F          	movff	postinc2,___flge@ff2
  3373   001002  CFDE F050          	movff	postinc2,___flge@ff2+1
  3374   001006  CFDE F051          	movff	postinc2,___flge@ff2+2
  3375   00100A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3376   00100E  EC1D  F01B         	call	___flge	;wreg free
  3377   001012  B0D8               	btfsc	status,0,c
  3378   001014  EF0E  F008         	goto	u3431
  3379   001018  EF10  F008         	goto	u3430
  3380   00101C                     u3431:
  3381   00101C  EF4D  F008         	goto	l3906
  3382   001020                     u3430:
  3383   001020  0100               	movlb	0	; () banked
  3384   001022  EE20 F004          	lfsr	2,4
  3385   001026  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3386   001028  26D9               	addwf	fsr2l,f,c
  3387   00102A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3388   00102C  22DA               	addwfc	fsr2h,f,c
  3389   00102E  CFDE F04B          	movff	postinc2,___flge@ff1
  3390   001032  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3391   001036  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3392   00103A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3393   00103E  EE20 F008          	lfsr	2,8
  3394   001042  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3395   001044  26D9               	addwf	fsr2l,f,c
  3396   001046  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3397   001048  22DA               	addwfc	fsr2h,f,c
  3398   00104A  CFDE F04F          	movff	postinc2,___flge@ff2
  3399   00104E  CFDE F050          	movff	postinc2,___flge@ff2+1
  3400   001052  CFDE F051          	movff	postinc2,___flge@ff2+2
  3401   001056  CFDE F052          	movff	postinc2,___flge@ff2+3
  3402   00105A  EC1D  F01B         	call	___flge	;wreg free
  3403   00105E  B0D8               	btfsc	status,0,c
  3404   001060  EF34  F008         	goto	u3441
  3405   001064  EF36  F008         	goto	u3440
  3406   001068                     u3441:
  3407   001068  EF4D  F008         	goto	l3906
  3408   00106C                     u3440:
  3409   00106C                     
  3410                           ;colorfunctions.c: 37:             min=cf->Gf;
  3411   00106C  0100               	movlb	0	; () banked
  3412   00106E  EE20 F004          	lfsr	2,4
  3413   001072  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3414   001074  26D9               	addwf	fsr2l,f,c
  3415   001076  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3416   001078  22DA               	addwfc	fsr2h,f,c
  3417   00107A  CFDE F001          	movff	postinc2,___fltol@f1
  3418   00107E  CFDE F002          	movff	postinc2,___fltol@f1+1
  3419   001082  CFDE F003          	movff	postinc2,___fltol@f1+2
  3420   001086  CFDE F004          	movff	postinc2,___fltol@f1+3
  3421   00108A  EC9A  F01A         	call	___fltol	;wreg free
  3422   00108E  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3423   001092  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3424                           
  3425                           ;colorfunctions.c: 38:         } else{
  3426   001096  EF62  F008         	goto	l115
  3427   00109A                     l3906:
  3428                           
  3429                           ;colorfunctions.c: 39:             min=cf->Bf;
  3430   00109A  0100               	movlb	0	; () banked
  3431   00109C  EE20 F008          	lfsr	2,8
  3432   0010A0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3433   0010A2  26D9               	addwf	fsr2l,f,c
  3434   0010A4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3435   0010A6  22DA               	addwfc	fsr2h,f,c
  3436   0010A8  CFDE F001          	movff	postinc2,___fltol@f1
  3437   0010AC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3438   0010B0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3439   0010B4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3440   0010B8  EC9A  F01A         	call	___fltol	;wreg free
  3441   0010BC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3442   0010C0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3443   0010C4                     l115:
  3444                           
  3445                           ;colorfunctions.c: 42:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3446   0010C4  0100               	movlb	0	; () banked
  3447   0010C6  EE20 F004          	lfsr	2,4
  3448   0010CA  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3449   0010CC  26D9               	addwf	fsr2l,f,c
  3450   0010CE  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3451   0010D0  22DA               	addwfc	fsr2h,f,c
  3452   0010D2  CFDE F04B          	movff	postinc2,___flge@ff1
  3453   0010D6  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3454   0010DA  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3455   0010DE  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3456   0010E2  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3457   0010E6  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3458   0010EA  CFDE F04F          	movff	postinc2,___flge@ff2
  3459   0010EE  CFDE F050          	movff	postinc2,___flge@ff2+1
  3460   0010F2  CFDE F051          	movff	postinc2,___flge@ff2+2
  3461   0010F6  CFDE F052          	movff	postinc2,___flge@ff2+3
  3462   0010FA  EC1D  F01B         	call	___flge	;wreg free
  3463   0010FE  B0D8               	btfsc	status,0,c
  3464   001100  EF84  F008         	goto	u3451
  3465   001104  EF86  F008         	goto	u3450
  3466   001108                     u3451:
  3467   001108  EF23  F009         	goto	l3914
  3468   00110C                     u3450:
  3469   00110C  0100               	movlb	0	; () banked
  3470   00110E  EE20 F008          	lfsr	2,8
  3471   001112  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3472   001114  26D9               	addwf	fsr2l,f,c
  3473   001116  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3474   001118  22DA               	addwfc	fsr2h,f,c
  3475   00111A  CFDE F04B          	movff	postinc2,___flge@ff1
  3476   00111E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3477   001122  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3478   001126  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3479   00112A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3480   00112E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3481   001132  CFDE F04F          	movff	postinc2,___flge@ff2
  3482   001136  CFDE F050          	movff	postinc2,___flge@ff2+1
  3483   00113A  CFDE F051          	movff	postinc2,___flge@ff2+2
  3484   00113E  CFDE F052          	movff	postinc2,___flge@ff2+3
  3485   001142  EC1D  F01B         	call	___flge	;wreg free
  3486   001146  B0D8               	btfsc	status,0,c
  3487   001148  EFA8  F008         	goto	u3461
  3488   00114C  EFAA  F008         	goto	u3460
  3489   001150                     u3461:
  3490   001150  EF23  F009         	goto	l3914
  3491   001154                     u3460:
  3492   001154                     
  3493                           ;colorfunctions.c: 43:             max=(cf->Rf);
  3494   001154  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3495   001158  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3496   00115C  CFDE F001          	movff	postinc2,___fltol@f1
  3497   001160  CFDE F002          	movff	postinc2,___fltol@f1+1
  3498   001164  CFDE F003          	movff	postinc2,___fltol@f1+2
  3499   001168  CFDE F004          	movff	postinc2,___fltol@f1+3
  3500   00116C  EC9A  F01A         	call	___fltol	;wreg free
  3501   001170  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3502   001174  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3503   001178                     
  3504                           ;colorfunctions.c: 46:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3505   001178  0100               	movlb	0	; () banked
  3506   00117A  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3507   00117C  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3508   00117E  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3509   001180  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3510   001182  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3511   001184  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3512   001186  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3513   00118A  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3514   00118E  0E00               	movlw	0
  3515   001190  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3516   001192  0EFF               	movlw	-1
  3517   001194  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3518   001196  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3519   001198  0E01               	movlw	1
  3520   00119A  EC0A  F019         	call	___xxtofl
  3521   00119E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3522   0011A2  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3523   0011A6  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3524   0011AA  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3525   0011AE  0100               	movlb	0	; () banked
  3526   0011B0  EE20 F008          	lfsr	2,8
  3527   0011B4  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3528   0011B6  26D9               	addwf	fsr2l,f,c
  3529   0011B8  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3530   0011BA  22DA               	addwfc	fsr2h,f,c
  3531   0011BC  CFDE F04F          	movff	postinc2,___flsub@a
  3532   0011C0  CFDE F050          	movff	postinc2,___flsub@a+1
  3533   0011C4  CFDE F051          	movff	postinc2,___flsub@a+2
  3534   0011C8  CFDE F052          	movff	postinc2,___flsub@a+3
  3535   0011CC  EE20 F004          	lfsr	2,4
  3536   0011D0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3537   0011D2  26D9               	addwf	fsr2l,f,c
  3538   0011D4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3539   0011D6  22DA               	addwfc	fsr2h,f,c
  3540   0011D8  CFDE F04B          	movff	postinc2,___flsub@b
  3541   0011DC  CFDE F04C          	movff	postinc2,___flsub@b+1
  3542   0011E0  CFDE F04D          	movff	postinc2,___flsub@b+2
  3543   0011E4  CFDE F04E          	movff	postinc2,___flsub@b+3
  3544   0011E8  EC25  F022         	call	___flsub	;wreg free
  3545   0011EC  C04B  F053         	movff	?___flsub,___fldiv@b
  3546   0011F0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3547   0011F4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3548   0011F8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3549   0011FC  EC12  F014         	call	___fldiv	;wreg free
  3550   001200  C053  F01A         	movff	?___fldiv,___flmul@b
  3551   001204  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3552   001208  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3553   00120C  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3554   001210  0E00               	movlw	0
  3555   001212  6E1E               	movwf	___flmul@a^0,c
  3556   001214  0E00               	movlw	0
  3557   001216  6E1F               	movwf	(___flmul@a+1)^0,c
  3558   001218  0E70               	movlw	112
  3559   00121A  6E20               	movwf	(___flmul@a+2)^0,c
  3560   00121C  0E42               	movlw	66
  3561   00121E  6E21               	movwf	(___flmul@a+3)^0,c
  3562   001220  ECFD  F011         	call	___flmul	;wreg free
  3563   001224  0100               	movlb	0	; () banked
  3564   001226  EE20 F010          	lfsr	2,16
  3565   00122A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3566   00122C  26D9               	addwf	fsr2l,f,c
  3567   00122E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3568   001230  22DA               	addwfc	fsr2h,f,c
  3569   001232  C01A  FFDE         	movff	?___flmul,postinc2
  3570   001236  C01B  FFDE         	movff	?___flmul+1,postinc2
  3571   00123A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3572   00123E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3573                           
  3574                           ;colorfunctions.c: 47:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3575   001242  EF93  F00A         	goto	l3926
  3576   001246                     l3914:
  3577   001246  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3578   00124A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3579   00124E  CFDE F04B          	movff	postinc2,___flge@ff1
  3580   001252  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3581   001256  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3582   00125A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3583   00125E  0100               	movlb	0	; () banked
  3584   001260  EE20 F004          	lfsr	2,4
  3585   001264  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3586   001266  26D9               	addwf	fsr2l,f,c
  3587   001268  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3588   00126A  22DA               	addwfc	fsr2h,f,c
  3589   00126C  CFDE F04F          	movff	postinc2,___flge@ff2
  3590   001270  CFDE F050          	movff	postinc2,___flge@ff2+1
  3591   001274  CFDE F051          	movff	postinc2,___flge@ff2+2
  3592   001278  CFDE F052          	movff	postinc2,___flge@ff2+3
  3593   00127C  EC1D  F01B         	call	___flge	;wreg free
  3594   001280  B0D8               	btfsc	status,0,c
  3595   001282  EF45  F009         	goto	u3471
  3596   001286  EF47  F009         	goto	u3470
  3597   00128A                     u3471:
  3598   00128A  EF01  F00A         	goto	l3922
  3599   00128E                     u3470:
  3600   00128E  0100               	movlb	0	; () banked
  3601   001290  EE20 F008          	lfsr	2,8
  3602   001294  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3603   001296  26D9               	addwf	fsr2l,f,c
  3604   001298  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3605   00129A  22DA               	addwfc	fsr2h,f,c
  3606   00129C  CFDE F04B          	movff	postinc2,___flge@ff1
  3607   0012A0  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3608   0012A4  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3609   0012A8  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3610   0012AC  EE20 F004          	lfsr	2,4
  3611   0012B0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3612   0012B2  26D9               	addwf	fsr2l,f,c
  3613   0012B4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3614   0012B6  22DA               	addwfc	fsr2h,f,c
  3615   0012B8  CFDE F04F          	movff	postinc2,___flge@ff2
  3616   0012BC  CFDE F050          	movff	postinc2,___flge@ff2+1
  3617   0012C0  CFDE F051          	movff	postinc2,___flge@ff2+2
  3618   0012C4  CFDE F052          	movff	postinc2,___flge@ff2+3
  3619   0012C8  EC1D  F01B         	call	___flge	;wreg free
  3620   0012CC  B0D8               	btfsc	status,0,c
  3621   0012CE  EF6B  F009         	goto	u3481
  3622   0012D2  EF6D  F009         	goto	u3480
  3623   0012D6                     u3481:
  3624   0012D6  EF01  F00A         	goto	l3922
  3625   0012DA                     u3480:
  3626   0012DA                     
  3627                           ;colorfunctions.c: 48:             max=cf->Gf;
  3628   0012DA  0100               	movlb	0	; () banked
  3629   0012DC  EE20 F004          	lfsr	2,4
  3630   0012E0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3631   0012E2  26D9               	addwf	fsr2l,f,c
  3632   0012E4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3633   0012E6  22DA               	addwfc	fsr2h,f,c
  3634   0012E8  CFDE F001          	movff	postinc2,___fltol@f1
  3635   0012EC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3636   0012F0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3637   0012F4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3638   0012F8  EC9A  F01A         	call	___fltol	;wreg free
  3639   0012FC  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3640   001300  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3641                           
  3642                           ;colorfunctions.c: 49:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3643   001304  0100               	movlb	0	; () banked
  3644   001306  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3645   001308  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3646   00130A  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3647   00130C  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3648   00130E  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3649   001310  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3650   001312  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3651   001316  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3652   00131A  0E00               	movlw	0
  3653   00131C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3654   00131E  0EFF               	movlw	-1
  3655   001320  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3656   001322  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3657   001324  0E01               	movlw	1
  3658   001326  EC0A  F019         	call	___xxtofl
  3659   00132A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3660   00132E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3661   001332  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3662   001336  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3663   00133A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3664   00133E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3665   001342  CFDE F04F          	movff	postinc2,___flsub@a
  3666   001346  CFDE F050          	movff	postinc2,___flsub@a+1
  3667   00134A  CFDE F051          	movff	postinc2,___flsub@a+2
  3668   00134E  CFDE F052          	movff	postinc2,___flsub@a+3
  3669   001352  0100               	movlb	0	; () banked
  3670   001354  EE20 F008          	lfsr	2,8
  3671   001358  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3672   00135A  26D9               	addwf	fsr2l,f,c
  3673   00135C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3674   00135E  22DA               	addwfc	fsr2h,f,c
  3675   001360  CFDE F04B          	movff	postinc2,___flsub@b
  3676   001364  CFDE F04C          	movff	postinc2,___flsub@b+1
  3677   001368  CFDE F04D          	movff	postinc2,___flsub@b+2
  3678   00136C  CFDE F04E          	movff	postinc2,___flsub@b+3
  3679   001370  EC25  F022         	call	___flsub	;wreg free
  3680   001374  C04B  F053         	movff	?___flsub,___fldiv@b
  3681   001378  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3682   00137C  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3683   001380  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3684   001384  EC12  F014         	call	___fldiv	;wreg free
  3685   001388  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3100
  3686   00138C  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3100+1
  3687   001390  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3100+2
  3688   001394  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3100+3
  3689   001398                     
  3690                           ;colorfunctions.c: 49:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3691   001398  0E00               	movlw	0
  3692   00139A  6E3F               	movwf	___fladd@a^0,c
  3693   00139C  0E00               	movlw	0
  3694   00139E  6E40               	movwf	(___fladd@a+1)^0,c
  3695   0013A0  0E00               	movlw	0
  3696   0013A2  6E41               	movwf	(___fladd@a+2)^0,c
  3697   0013A4  0E40               	movlw	64
  3698   0013A6  6E42               	movwf	(___fladd@a+3)^0,c
  3699   0013A8  C0D5  F03B         	movff	_RGB2Hue$3100,___fladd@b
  3700   0013AC  C0D6  F03C         	movff	_RGB2Hue$3100+1,___fladd@b+1
  3701   0013B0  C0D7  F03D         	movff	_RGB2Hue$3100+2,___fladd@b+2
  3702   0013B4  C0D8  F03E         	movff	_RGB2Hue$3100+3,___fladd@b+3
  3703   0013B8  EC4A  F00D         	call	___fladd	;wreg free
  3704   0013BC  C03B  F01A         	movff	?___fladd,___flmul@b
  3705   0013C0  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3706   0013C4  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3707   0013C8  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3708   0013CC  0E00               	movlw	0
  3709   0013CE  6E1E               	movwf	___flmul@a^0,c
  3710   0013D0  0E00               	movlw	0
  3711   0013D2  6E1F               	movwf	(___flmul@a+1)^0,c
  3712   0013D4  0E70               	movlw	112
  3713   0013D6  6E20               	movwf	(___flmul@a+2)^0,c
  3714   0013D8  0E42               	movlw	66
  3715   0013DA  6E21               	movwf	(___flmul@a+3)^0,c
  3716   0013DC  ECFD  F011         	call	___flmul	;wreg free
  3717   0013E0  0100               	movlb	0	; () banked
  3718   0013E2  EE20 F010          	lfsr	2,16
  3719   0013E6  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3720   0013E8  26D9               	addwf	fsr2l,f,c
  3721   0013EA  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3722   0013EC  22DA               	addwfc	fsr2h,f,c
  3723   0013EE  C01A  FFDE         	movff	?___flmul,postinc2
  3724   0013F2  C01B  FFDE         	movff	?___flmul+1,postinc2
  3725   0013F6  C01C  FFDE         	movff	?___flmul+2,postinc2
  3726   0013FA  C01D  FFDE         	movff	?___flmul+3,postinc2
  3727                           
  3728                           ;colorfunctions.c: 50:         }else{
  3729   0013FE  EF93  F00A         	goto	l3926
  3730   001402                     l3922:
  3731                           
  3732                           ;colorfunctions.c: 51:             max=cf->Bf;
  3733   001402  0100               	movlb	0	; () banked
  3734   001404  EE20 F008          	lfsr	2,8
  3735   001408  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3736   00140A  26D9               	addwf	fsr2l,f,c
  3737   00140C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3738   00140E  22DA               	addwfc	fsr2h,f,c
  3739   001410  CFDE F001          	movff	postinc2,___fltol@f1
  3740   001414  CFDE F002          	movff	postinc2,___fltol@f1+1
  3741   001418  CFDE F003          	movff	postinc2,___fltol@f1+2
  3742   00141C  CFDE F004          	movff	postinc2,___fltol@f1+3
  3743   001420  EC9A  F01A         	call	___fltol	;wreg free
  3744   001424  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3745   001428  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3746                           
  3747                           ;colorfunctions.c: 52:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3748   00142C  0100               	movlb	0	; () banked
  3749   00142E  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3750   001430  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3751   001432  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3752   001434  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3753   001436  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3754   001438  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3755   00143A  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3756   00143E  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3757   001442  0E00               	movlw	0
  3758   001444  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3759   001446  0EFF               	movlw	-1
  3760   001448  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3761   00144A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3762   00144C  0E01               	movlw	1
  3763   00144E  EC0A  F019         	call	___xxtofl
  3764   001452  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3765   001456  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3766   00145A  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3767   00145E  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3768   001462  0100               	movlb	0	; () banked
  3769   001464  EE20 F004          	lfsr	2,4
  3770   001468  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3771   00146A  26D9               	addwf	fsr2l,f,c
  3772   00146C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3773   00146E  22DA               	addwfc	fsr2h,f,c
  3774   001470  CFDE F04F          	movff	postinc2,___flsub@a
  3775   001474  CFDE F050          	movff	postinc2,___flsub@a+1
  3776   001478  CFDE F051          	movff	postinc2,___flsub@a+2
  3777   00147C  CFDE F052          	movff	postinc2,___flsub@a+3
  3778   001480  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3779   001484  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3780   001488  CFDE F04B          	movff	postinc2,___flsub@b
  3781   00148C  CFDE F04C          	movff	postinc2,___flsub@b+1
  3782   001490  CFDE F04D          	movff	postinc2,___flsub@b+2
  3783   001494  CFDE F04E          	movff	postinc2,___flsub@b+3
  3784   001498  EC25  F022         	call	___flsub	;wreg free
  3785   00149C  C04B  F053         	movff	?___flsub,___fldiv@b
  3786   0014A0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3787   0014A4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3788   0014A8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3789   0014AC  EC12  F014         	call	___fldiv	;wreg free
  3790   0014B0  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3100
  3791   0014B4  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3100+1
  3792   0014B8  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3100+2
  3793   0014BC  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3100+3
  3794   0014C0                     
  3795                           ;colorfunctions.c: 52:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3796   0014C0  0E00               	movlw	0
  3797   0014C2  6E3F               	movwf	___fladd@a^0,c
  3798   0014C4  0E00               	movlw	0
  3799   0014C6  6E40               	movwf	(___fladd@a+1)^0,c
  3800   0014C8  0E80               	movlw	128
  3801   0014CA  6E41               	movwf	(___fladd@a+2)^0,c
  3802   0014CC  0E40               	movlw	64
  3803   0014CE  6E42               	movwf	(___fladd@a+3)^0,c
  3804   0014D0  C0D5  F03B         	movff	_RGB2Hue$3100,___fladd@b
  3805   0014D4  C0D6  F03C         	movff	_RGB2Hue$3100+1,___fladd@b+1
  3806   0014D8  C0D7  F03D         	movff	_RGB2Hue$3100+2,___fladd@b+2
  3807   0014DC  C0D8  F03E         	movff	_RGB2Hue$3100+3,___fladd@b+3
  3808   0014E0  EC4A  F00D         	call	___fladd	;wreg free
  3809   0014E4  C03B  F01A         	movff	?___fladd,___flmul@b
  3810   0014E8  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3811   0014EC  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3812   0014F0  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3813   0014F4  0E00               	movlw	0
  3814   0014F6  6E1E               	movwf	___flmul@a^0,c
  3815   0014F8  0E00               	movlw	0
  3816   0014FA  6E1F               	movwf	(___flmul@a+1)^0,c
  3817   0014FC  0E70               	movlw	112
  3818   0014FE  6E20               	movwf	(___flmul@a+2)^0,c
  3819   001500  0E42               	movlw	66
  3820   001502  6E21               	movwf	(___flmul@a+3)^0,c
  3821   001504  ECFD  F011         	call	___flmul	;wreg free
  3822   001508  0100               	movlb	0	; () banked
  3823   00150A  EE20 F010          	lfsr	2,16
  3824   00150E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3825   001510  26D9               	addwf	fsr2l,f,c
  3826   001512  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3827   001514  22DA               	addwfc	fsr2h,f,c
  3828   001516  C01A  FFDE         	movff	?___flmul,postinc2
  3829   00151A  C01B  FFDE         	movff	?___flmul+1,postinc2
  3830   00151E  C01C  FFDE         	movff	?___flmul+2,postinc2
  3831   001522  C01D  FFDE         	movff	?___flmul+3,postinc2
  3832   001526                     l3926:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;colorfunctions.c: 55:         if (cf->h < 0){
  3836   001526  EE20 F010          	lfsr	2,16
  3837   00152A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3838   00152C  26D9               	addwf	fsr2l,f,c
  3839   00152E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3840   001530  22DA               	addwfc	fsr2h,f,c
  3841   001532  0E03               	movlw	3
  3842   001534  BEDB               	btfsc	plusw2,7,c
  3843   001536  EFA1  F00A         	goto	u3490
  3844   00153A  EF9F  F00A         	goto	u3491
  3845   00153E                     u3491:
  3846   00153E  EFC8  F00A         	goto	l123
  3847   001542                     u3490:
  3848   001542                     
  3849                           ; BSR set to: 0
  3850                           ;colorfunctions.c: 56:             cf->h= cf->h +360;
  3851   001542  EE20 F010          	lfsr	2,16
  3852   001546  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3853   001548  26D9               	addwf	fsr2l,f,c
  3854   00154A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3855   00154C  22DA               	addwfc	fsr2h,f,c
  3856   00154E  CFDE F03B          	movff	postinc2,___fladd@b
  3857   001552  CFDE F03C          	movff	postinc2,___fladd@b+1
  3858   001556  CFDE F03D          	movff	postinc2,___fladd@b+2
  3859   00155A  CFDE F03E          	movff	postinc2,___fladd@b+3
  3860   00155E  0E00               	movlw	0
  3861   001560  6E3F               	movwf	___fladd@a^0,c
  3862   001562  0E00               	movlw	0
  3863   001564  6E40               	movwf	(___fladd@a+1)^0,c
  3864   001566  0EB4               	movlw	180
  3865   001568  6E41               	movwf	(___fladd@a+2)^0,c
  3866   00156A  0E43               	movlw	67
  3867   00156C  6E42               	movwf	(___fladd@a+3)^0,c
  3868   00156E  EC4A  F00D         	call	___fladd	;wreg free
  3869   001572  0100               	movlb	0	; () banked
  3870   001574  EE20 F010          	lfsr	2,16
  3871   001578  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3872   00157A  26D9               	addwf	fsr2l,f,c
  3873   00157C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3874   00157E  22DA               	addwfc	fsr2h,f,c
  3875   001580  C03B  FFDE         	movff	?___fladd,postinc2
  3876   001584  C03C  FFDE         	movff	?___fladd+1,postinc2
  3877   001588  C03D  FFDE         	movff	?___fladd+2,postinc2
  3878   00158C  C03E  FFDE         	movff	?___fladd+3,postinc2
  3879   001590                     l123:
  3880                           
  3881                           ; BSR set to: 0
  3882   001590  0012               	return		;funcret
  3883   001592                     __end_of_RGB2Hue:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function ___fltol *****************
  3887 ;; Defined at:
  3888 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  f1              4    0[COMRAM] void 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  exp1            1    9[COMRAM] unsigned char 
  3893 ;;  sign1           1    8[COMRAM] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  4    0[COMRAM] long 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;Total ram usage:       10 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_RGB2Hue
  3914 ;;		_Left45
  3915 ;;		_Right45
  3916 ;;		_reverseHalfSquare
  3917 ;;		_Yellow_rev1_R90
  3918 ;;		_Pink_rev1_L90
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text21
  3923   003534                     __ptext21:
  3924                           	callstack 0
  3925   003534                     ___fltol:
  3926                           	callstack 28
  3927   003534  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3928   003536  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3929   003538  6E0A               	movwf	___fltol@exp1^0,c
  3930   00353A  500A               	movf	___fltol@exp1^0,w,c
  3931   00353C  A4D8               	btfss	status,2,c
  3932   00353E  EFA3  F01A         	goto	u3301
  3933   003542  EFA5  F01A         	goto	u3300
  3934   003546                     u3301:
  3935   003546  EFAF  F01A         	goto	l3802
  3936   00354A                     u3300:
  3937   00354A                     l3798:
  3938   00354A  0E00               	movlw	0
  3939   00354C  6E01               	movwf	?___fltol^0,c
  3940   00354E  0E00               	movlw	0
  3941   003550  6E02               	movwf	(?___fltol+1)^0,c
  3942   003552  0E00               	movlw	0
  3943   003554  6E03               	movwf	(?___fltol+2)^0,c
  3944   003556  0E00               	movlw	0
  3945   003558  6E04               	movwf	(?___fltol+3)^0,c
  3946   00355A  EF1C  F01B         	goto	l1009
  3947   00355E                     l3802:
  3948   00355E  C001  F005         	movff	___fltol@f1,??___fltol
  3949   003562  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3950   003566  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3951   00356A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3952   00356E  0E20               	movlw	32
  3953   003570  EFBF  F01A         	goto	u3310
  3954   003574                     u3315:
  3955   003574  90D8               	bcf	status,0,c
  3956   003576  3208               	rrcf	(??___fltol+3)^0,f,c
  3957   003578  3207               	rrcf	(??___fltol+2)^0,f,c
  3958   00357A  3206               	rrcf	(??___fltol+1)^0,f,c
  3959   00357C  3205               	rrcf	??___fltol^0,f,c
  3960   00357E                     u3310:
  3961   00357E  2EE8               	decfsz	wreg,f,c
  3962   003580  EFBA  F01A         	goto	u3315
  3963   003584  5005               	movf	??___fltol^0,w,c
  3964   003586  6E09               	movwf	___fltol@sign1^0,c
  3965   003588  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3966   00358A  0EFF               	movlw	255
  3967   00358C  1601               	andwf	___fltol@f1^0,f,c
  3968   00358E  0EFF               	movlw	255
  3969   003590  1602               	andwf	(___fltol@f1+1)^0,f,c
  3970   003592  0EFF               	movlw	255
  3971   003594  1603               	andwf	(___fltol@f1+2)^0,f,c
  3972   003596  0E00               	movlw	0
  3973   003598  1604               	andwf	(___fltol@f1+3)^0,f,c
  3974   00359A  0E96               	movlw	150
  3975   00359C  5E0A               	subwf	___fltol@exp1^0,f,c
  3976   00359E  BE0A               	btfsc	___fltol@exp1^0,7,c
  3977   0035A0  EFD6  F01A         	goto	u3320
  3978   0035A4  EFD4  F01A         	goto	u3321
  3979   0035A8                     u3321:
  3980   0035A8  EFEC  F01A         	goto	l3822
  3981   0035AC                     u3320:
  3982   0035AC  500A               	movf	___fltol@exp1^0,w,c
  3983   0035AE  0A80               	xorlw	128
  3984   0035B0  0F97               	addlw	151
  3985   0035B2  B0D8               	btfsc	status,0,c
  3986   0035B4  EFDE  F01A         	goto	u3331
  3987   0035B8  EFE0  F01A         	goto	u3330
  3988   0035BC                     u3331:
  3989   0035BC  EFE2  F01A         	goto	l3818
  3990   0035C0                     u3330:
  3991   0035C0  EFA5  F01A         	goto	l3798
  3992   0035C4                     l3818:
  3993   0035C4  90D8               	bcf	status,0,c
  3994   0035C6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3995   0035C8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3996   0035CA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3997   0035CC  3201               	rrcf	___fltol@f1^0,f,c
  3998   0035CE  3E0A               	incfsz	___fltol@exp1^0,f,c
  3999   0035D0  EFE2  F01A         	goto	l3818
  4000   0035D4  EF04  F01B         	goto	l3832
  4001   0035D8                     l3822:
  4002   0035D8  0E1F               	movlw	31
  4003   0035DA  640A               	cpfsgt	___fltol@exp1^0,c
  4004   0035DC  EFF2  F01A         	goto	u3341
  4005   0035E0  EFF4  F01A         	goto	u3340
  4006   0035E4                     u3341:
  4007   0035E4  EFFC  F01A         	goto	l3830
  4008   0035E8                     u3340:
  4009   0035E8  EFA5  F01A         	goto	l3798
  4010   0035EC                     l3828:
  4011   0035EC  90D8               	bcf	status,0,c
  4012   0035EE  3601               	rlcf	___fltol@f1^0,f,c
  4013   0035F0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4014   0035F2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4015   0035F4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4016   0035F6  060A               	decf	___fltol@exp1^0,f,c
  4017   0035F8                     l3830:
  4018   0035F8  500A               	movf	___fltol@exp1^0,w,c
  4019   0035FA  A4D8               	btfss	status,2,c
  4020   0035FC  EF02  F01B         	goto	u3351
  4021   003600  EF04  F01B         	goto	u3350
  4022   003604                     u3351:
  4023   003604  EFF6  F01A         	goto	l3828
  4024   003608                     u3350:
  4025   003608                     l3832:
  4026   003608  5009               	movf	___fltol@sign1^0,w,c
  4027   00360A  B4D8               	btfsc	status,2,c
  4028   00360C  EF0A  F01B         	goto	u3361
  4029   003610  EF0C  F01B         	goto	u3360
  4030   003614                     u3361:
  4031   003614  EF14  F01B         	goto	l3836
  4032   003618                     u3360:
  4033   003618  1E04               	comf	(___fltol@f1+3)^0,f,c
  4034   00361A  1E03               	comf	(___fltol@f1+2)^0,f,c
  4035   00361C  1E02               	comf	(___fltol@f1+1)^0,f,c
  4036   00361E  6C01               	negf	___fltol@f1^0,c
  4037   003620  0E00               	movlw	0
  4038   003622  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4039   003624  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4040   003626  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4041   003628                     l3836:
  4042   003628  C001  F001         	movff	___fltol@f1,?___fltol
  4043   00362C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4044   003630  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4045   003634  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4046   003638                     l1009:
  4047   003638  0012               	return		;funcret
  4048   00363A                     __end_of___fltol:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function ___flsub *****************
  4052 ;; Defined at:
  4053 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  b               4   74[COMRAM] long 
  4056 ;;  a               4   78[COMRAM] long 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4   74[COMRAM] long 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4068 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;Total ram usage:        8 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 2
  4075 ;; This function calls:
  4076 ;;		___fladd
  4077 ;; This function is called by:
  4078 ;;		_RGB2Hue
  4079 ;;		_memoryUpdateTime
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text22
  4084   00444A                     __ptext22:
  4085                           	callstack 0
  4086   00444A                     ___flsub:
  4087                           	callstack 27
  4088   00444A  0E00               	movlw	0
  4089   00444C  1A4F               	xorwf	___flsub@a^0,f,c
  4090   00444E  0E00               	movlw	0
  4091   004450  1A50               	xorwf	(___flsub@a+1)^0,f,c
  4092   004452  0E00               	movlw	0
  4093   004454  1A51               	xorwf	(___flsub@a+2)^0,f,c
  4094   004456  0E80               	movlw	128
  4095   004458  1A52               	xorwf	(___flsub@a+3)^0,f,c
  4096   00445A  C04B  F03B         	movff	___flsub@b,___fladd@b
  4097   00445E  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  4098   004462  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  4099   004466  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  4100   00446A  C04F  F03F         	movff	___flsub@a,___fladd@a
  4101   00446E  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  4102   004472  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  4103   004476  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  4104   00447A  EC4A  F00D         	call	___fladd	;wreg free
  4105   00447E  C03B  F04B         	movff	?___fladd,?___flsub
  4106   004482  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  4107   004486  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  4108   00448A  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  4109   00448E  0012               	return		;funcret
  4110   004490                     __end_of___flsub:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function ___fleq *****************
  4114 ;; Defined at:
  4115 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  ff1             4    0[COMRAM] long 
  4118 ;;  ff2             4    4[COMRAM] long 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;		None               void
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4130 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;Total ram usage:       12 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_RGB2Hue
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text23
  4145   00373E                     __ptext23:
  4146                           	callstack 0
  4147   00373E                     ___fleq:
  4148                           	callstack 28
  4149   00373E  0E00               	movlw	0
  4150   003740  1401               	andwf	___fleq@ff1^0,w,c
  4151   003742  6E09               	movwf	??___fleq^0,c
  4152   003744  0E00               	movlw	0
  4153   003746  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4154   003748  6E0A               	movwf	(??___fleq+1)^0,c
  4155   00374A  0E80               	movlw	128
  4156   00374C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4157   00374E  6E0B               	movwf	(??___fleq+2)^0,c
  4158   003750  0E7F               	movlw	127
  4159   003752  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4160   003754  6E0C               	movwf	(??___fleq+3)^0,c
  4161   003756  5009               	movf	??___fleq^0,w,c
  4162   003758  100A               	iorwf	(??___fleq+1)^0,w,c
  4163   00375A  100B               	iorwf	(??___fleq+2)^0,w,c
  4164   00375C  100C               	iorwf	(??___fleq+3)^0,w,c
  4165   00375E  A4D8               	btfss	status,2,c
  4166   003760  EFB4  F01B         	goto	u3271
  4167   003764  EFB6  F01B         	goto	u3270
  4168   003768                     u3271:
  4169   003768  EFBE  F01B         	goto	l3784
  4170   00376C                     u3270:
  4171   00376C  0E00               	movlw	0
  4172   00376E  6E01               	movwf	___fleq@ff1^0,c
  4173   003770  0E00               	movlw	0
  4174   003772  6E02               	movwf	(___fleq@ff1+1)^0,c
  4175   003774  0E00               	movlw	0
  4176   003776  6E03               	movwf	(___fleq@ff1+2)^0,c
  4177   003778  0E00               	movlw	0
  4178   00377A  6E04               	movwf	(___fleq@ff1+3)^0,c
  4179   00377C                     l3784:
  4180   00377C  0E00               	movlw	0
  4181   00377E  1405               	andwf	___fleq@ff2^0,w,c
  4182   003780  6E09               	movwf	??___fleq^0,c
  4183   003782  0E00               	movlw	0
  4184   003784  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4185   003786  6E0A               	movwf	(??___fleq+1)^0,c
  4186   003788  0E80               	movlw	128
  4187   00378A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4188   00378C  6E0B               	movwf	(??___fleq+2)^0,c
  4189   00378E  0E7F               	movlw	127
  4190   003790  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4191   003792  6E0C               	movwf	(??___fleq+3)^0,c
  4192   003794  5009               	movf	??___fleq^0,w,c
  4193   003796  100A               	iorwf	(??___fleq+1)^0,w,c
  4194   003798  100B               	iorwf	(??___fleq+2)^0,w,c
  4195   00379A  100C               	iorwf	(??___fleq+3)^0,w,c
  4196   00379C  A4D8               	btfss	status,2,c
  4197   00379E  EFD3  F01B         	goto	u3281
  4198   0037A2  EFD5  F01B         	goto	u3280
  4199   0037A6                     u3281:
  4200   0037A6  EFDD  F01B         	goto	l3788
  4201   0037AA                     u3280:
  4202   0037AA  0E00               	movlw	0
  4203   0037AC  6E05               	movwf	___fleq@ff2^0,c
  4204   0037AE  0E00               	movlw	0
  4205   0037B0  6E06               	movwf	(___fleq@ff2+1)^0,c
  4206   0037B2  0E00               	movlw	0
  4207   0037B4  6E07               	movwf	(___fleq@ff2+2)^0,c
  4208   0037B6  0E00               	movlw	0
  4209   0037B8  6E08               	movwf	(___fleq@ff2+3)^0,c
  4210   0037BA                     l3788:
  4211   0037BA  5005               	movf	___fleq@ff2^0,w,c
  4212   0037BC  1801               	xorwf	___fleq@ff1^0,w,c
  4213   0037BE  E10F               	bnz	u3290
  4214   0037C0  5006               	movf	(___fleq@ff2+1)^0,w,c
  4215   0037C2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4216   0037C4  E10C               	bnz	u3290
  4217   0037C6  5007               	movf	(___fleq@ff2+2)^0,w,c
  4218   0037C8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4219   0037CA  E109               	bnz	u3290
  4220   0037CC  5008               	movf	(___fleq@ff2+3)^0,w,c
  4221   0037CE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4222   0037D0  B4D8               	btfsc	status,2,c
  4223   0037D2  EFED  F01B         	goto	u3291
  4224   0037D6  EFEF  F01B         	goto	u3290
  4225   0037DA                     u3291:
  4226   0037DA  EFF2  F01B         	goto	l3792
  4227   0037DE                     u3290:
  4228   0037DE  90D8               	bcf	status,0,c
  4229   0037E0  EFF3  F01B         	goto	l971
  4230   0037E4                     l3792:
  4231   0037E4  80D8               	bsf	status,0,c
  4232   0037E6                     l971:
  4233   0037E6  0012               	return		;funcret
  4234   0037E8                     __end_of___fleq:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function ___fldiv *****************
  4238 ;; Defined at:
  4239 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  b               4   82[COMRAM] long 
  4242 ;;  a               4   86[COMRAM] long 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  grs             4    7[BANK0 ] unsigned long 
  4245 ;;  rem             4    0[BANK0 ] unsigned long 
  4246 ;;  new_exp         2    5[BANK0 ] short 
  4247 ;;  aexp            1   12[BANK0 ] unsigned char 
  4248 ;;  bexp            1   11[BANK0 ] unsigned char 
  4249 ;;  sign            1    4[BANK0 ] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  4   82[COMRAM] unsigned char 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:       25 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_colour_read_all
  4270 ;;		_RGB2Hue
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text24
  4275   002824                     __ptext24:
  4276                           	callstack 0
  4277   002824                     ___fldiv:
  4278                           	callstack 28
  4279   002824  5056               	movf	(___fldiv@b+3)^0,w,c
  4280   002826  0B80               	andlw	128
  4281   002828  0100               	movlb	0	; () banked
  4282   00282A  6FC6               	movwf	___fldiv@sign& (0+255),b
  4283   00282C  5056               	movf	(___fldiv@b+3)^0,w,c
  4284   00282E  2456               	addwf	(___fldiv@b+3)^0,w,c
  4285   002830  6FCD               	movwf	___fldiv@bexp& (0+255),b
  4286   002832                     
  4287                           ; BSR set to: 0
  4288   002832  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4289   002834  EF1E  F014         	goto	u3041
  4290   002838  EF20  F014         	goto	u3040
  4291   00283C                     u3041:
  4292   00283C  EF21  F014         	goto	l3642
  4293   002840                     u3040:
  4294   002840                     
  4295                           ; BSR set to: 0
  4296   002840  81CD               	bsf	___fldiv@bexp& (0+255),0,b
  4297   002842                     l3642:
  4298                           
  4299                           ; BSR set to: 0
  4300   002842  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4301   002844  B4D8               	btfsc	status,2,c
  4302   002846  EF27  F014         	goto	u3051
  4303   00284A  EF29  F014         	goto	u3050
  4304   00284E                     u3051:
  4305   00284E  EF3E  F014         	goto	l3652
  4306   002852                     u3050:
  4307   002852                     
  4308                           ; BSR set to: 0
  4309   002852  29CD               	incf	___fldiv@bexp& (0+255),w,b
  4310   002854  A4D8               	btfss	status,2,c
  4311   002856  EF2F  F014         	goto	u3061
  4312   00285A  EF31  F014         	goto	u3060
  4313   00285E                     u3061:
  4314   00285E  EF39  F014         	goto	l3648
  4315   002862                     u3060:
  4316   002862                     
  4317                           ; BSR set to: 0
  4318   002862  0E00               	movlw	0
  4319   002864  6E53               	movwf	___fldiv@b^0,c
  4320   002866  0E00               	movlw	0
  4321   002868  6E54               	movwf	(___fldiv@b+1)^0,c
  4322   00286A  0E00               	movlw	0
  4323   00286C  6E55               	movwf	(___fldiv@b+2)^0,c
  4324   00286E  0E00               	movlw	0
  4325   002870  6E56               	movwf	(___fldiv@b+3)^0,c
  4326   002872                     l3648:
  4327                           
  4328                           ; BSR set to: 0
  4329   002872  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4330   002874                     
  4331                           ; BSR set to: 0
  4332   002874  0E00               	movlw	0
  4333   002876  6E56               	movwf	(___fldiv@b+3)^0,c
  4334   002878  EF46  F014         	goto	l3654
  4335   00287C                     l3652:
  4336                           
  4337                           ; BSR set to: 0
  4338   00287C  0E00               	movlw	0
  4339   00287E  6E53               	movwf	___fldiv@b^0,c
  4340   002880  0E00               	movlw	0
  4341   002882  6E54               	movwf	(___fldiv@b+1)^0,c
  4342   002884  0E00               	movlw	0
  4343   002886  6E55               	movwf	(___fldiv@b+2)^0,c
  4344   002888  0E00               	movlw	0
  4345   00288A  6E56               	movwf	(___fldiv@b+3)^0,c
  4346   00288C                     l3654:
  4347                           
  4348                           ; BSR set to: 0
  4349   00288C  505A               	movf	(___fldiv@a+3)^0,w,c
  4350   00288E  0B80               	andlw	128
  4351   002890  1BC6               	xorwf	___fldiv@sign& (0+255),f,b
  4352   002892                     
  4353                           ; BSR set to: 0
  4354   002892  505A               	movf	(___fldiv@a+3)^0,w,c
  4355   002894  245A               	addwf	(___fldiv@a+3)^0,w,c
  4356   002896  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4357   002898                     
  4358                           ; BSR set to: 0
  4359   002898  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4360   00289A  EF51  F014         	goto	u3071
  4361   00289E  EF53  F014         	goto	u3070
  4362   0028A2                     u3071:
  4363   0028A2  EF54  F014         	goto	l3662
  4364   0028A6                     u3070:
  4365   0028A6                     
  4366                           ; BSR set to: 0
  4367   0028A6  81CE               	bsf	___fldiv@aexp& (0+255),0,b
  4368   0028A8                     l3662:
  4369                           
  4370                           ; BSR set to: 0
  4371   0028A8  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4372   0028AA  B4D8               	btfsc	status,2,c
  4373   0028AC  EF5A  F014         	goto	u3081
  4374   0028B0  EF5C  F014         	goto	u3080
  4375   0028B4                     u3081:
  4376   0028B4  EF71  F014         	goto	l3672
  4377   0028B8                     u3080:
  4378   0028B8                     
  4379                           ; BSR set to: 0
  4380   0028B8  29CE               	incf	___fldiv@aexp& (0+255),w,b
  4381   0028BA  A4D8               	btfss	status,2,c
  4382   0028BC  EF62  F014         	goto	u3091
  4383   0028C0  EF64  F014         	goto	u3090
  4384   0028C4                     u3091:
  4385   0028C4  EF6C  F014         	goto	l3668
  4386   0028C8                     u3090:
  4387   0028C8                     
  4388                           ; BSR set to: 0
  4389   0028C8  0E00               	movlw	0
  4390   0028CA  6E57               	movwf	___fldiv@a^0,c
  4391   0028CC  0E00               	movlw	0
  4392   0028CE  6E58               	movwf	(___fldiv@a+1)^0,c
  4393   0028D0  0E00               	movlw	0
  4394   0028D2  6E59               	movwf	(___fldiv@a+2)^0,c
  4395   0028D4  0E00               	movlw	0
  4396   0028D6  6E5A               	movwf	(___fldiv@a+3)^0,c
  4397   0028D8                     l3668:
  4398                           
  4399                           ; BSR set to: 0
  4400   0028D8  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4401   0028DA                     
  4402                           ; BSR set to: 0
  4403   0028DA  0E00               	movlw	0
  4404   0028DC  6E5A               	movwf	(___fldiv@a+3)^0,c
  4405   0028DE  EF79  F014         	goto	l3674
  4406   0028E2                     l3672:
  4407                           
  4408                           ; BSR set to: 0
  4409   0028E2  0E00               	movlw	0
  4410   0028E4  6E57               	movwf	___fldiv@a^0,c
  4411   0028E6  0E00               	movlw	0
  4412   0028E8  6E58               	movwf	(___fldiv@a+1)^0,c
  4413   0028EA  0E00               	movlw	0
  4414   0028EC  6E59               	movwf	(___fldiv@a+2)^0,c
  4415   0028EE  0E00               	movlw	0
  4416   0028F0  6E5A               	movwf	(___fldiv@a+3)^0,c
  4417   0028F2                     l3674:
  4418                           
  4419                           ; BSR set to: 0
  4420   0028F2  5057               	movf	___fldiv@a^0,w,c
  4421   0028F4  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4422   0028F6  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4423   0028F8  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4424   0028FA  A4D8               	btfss	status,2,c
  4425   0028FC  EF82  F014         	goto	u3101
  4426   002900  EF84  F014         	goto	u3100
  4427   002904                     u3101:
  4428   002904  EF9C  F014         	goto	l3686
  4429   002908                     u3100:
  4430   002908                     
  4431                           ; BSR set to: 0
  4432   002908  0E00               	movlw	0
  4433   00290A  6E53               	movwf	___fldiv@b^0,c
  4434   00290C  0E00               	movlw	0
  4435   00290E  6E54               	movwf	(___fldiv@b+1)^0,c
  4436   002910  0E00               	movlw	0
  4437   002912  6E55               	movwf	(___fldiv@b+2)^0,c
  4438   002914  0E00               	movlw	0
  4439   002916  6E56               	movwf	(___fldiv@b+3)^0,c
  4440   002918                     
  4441                           ; BSR set to: 0
  4442   002918  0E80               	movlw	128
  4443   00291A  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4444   00291C  0E7F               	movlw	127
  4445   00291E  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4446   002920                     l3680:
  4447                           
  4448                           ; BSR set to: 0
  4449   002920  51C6               	movf	___fldiv@sign& (0+255),w,b
  4450   002922  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4451   002924                     
  4452                           ; BSR set to: 0
  4453   002924  C053  F053         	movff	___fldiv@b,?___fldiv
  4454   002928  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4455   00292C  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4456   002930  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4457   002934  EFDF  F015         	goto	l1294
  4458   002938                     l3686:
  4459                           
  4460                           ; BSR set to: 0
  4461   002938  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4462   00293A  A4D8               	btfss	status,2,c
  4463   00293C  EFA2  F014         	goto	u3111
  4464   002940  EFA4  F014         	goto	u3110
  4465   002944                     u3111:
  4466   002944  EFAE  F014         	goto	l3694
  4467   002948                     u3110:
  4468   002948                     
  4469                           ; BSR set to: 0
  4470   002948  0E00               	movlw	0
  4471   00294A  6E53               	movwf	?___fldiv^0,c
  4472   00294C  0E00               	movlw	0
  4473   00294E  6E54               	movwf	(?___fldiv+1)^0,c
  4474   002950  0E00               	movlw	0
  4475   002952  6E55               	movwf	(?___fldiv+2)^0,c
  4476   002954  0E00               	movlw	0
  4477   002956  6E56               	movwf	(?___fldiv+3)^0,c
  4478   002958  EFDF  F015         	goto	l1294
  4479   00295C                     l3694:
  4480                           
  4481                           ; BSR set to: 0
  4482   00295C  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4483   00295E  C0CD  F05B         	movff	___fldiv@bexp,??___fldiv
  4484   002962  6A5C               	clrf	(??___fldiv+1)^0,c
  4485   002964  5E5B               	subwf	??___fldiv^0,f,c
  4486   002966  0E00               	movlw	0
  4487   002968  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4488   00296A  0E7F               	movlw	127
  4489   00296C  245B               	addwf	??___fldiv^0,w,c
  4490   00296E  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4491   002970  0E00               	movlw	0
  4492   002972  205C               	addwfc	(??___fldiv+1)^0,w,c
  4493   002974  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4494   002976                     
  4495                           ; BSR set to: 0
  4496   002976  C053  F0C2         	movff	___fldiv@b,___fldiv@rem
  4497   00297A  C054  F0C3         	movff	___fldiv@b+1,___fldiv@rem+1
  4498   00297E  C055  F0C4         	movff	___fldiv@b+2,___fldiv@rem+2
  4499   002982  C056  F0C5         	movff	___fldiv@b+3,___fldiv@rem+3
  4500   002986                     
  4501                           ; BSR set to: 0
  4502   002986  0E00               	movlw	0
  4503   002988  6E53               	movwf	___fldiv@b^0,c
  4504   00298A  0E00               	movlw	0
  4505   00298C  6E54               	movwf	(___fldiv@b+1)^0,c
  4506   00298E  0E00               	movlw	0
  4507   002990  6E55               	movwf	(___fldiv@b+2)^0,c
  4508   002992  0E00               	movlw	0
  4509   002994  6E56               	movwf	(___fldiv@b+3)^0,c
  4510   002996                     
  4511                           ; BSR set to: 0
  4512   002996  0E00               	movlw	0
  4513   002998  6FC9               	movwf	___fldiv@grs& (0+255),b
  4514   00299A  0E00               	movlw	0
  4515   00299C  6FCA               	movwf	(___fldiv@grs+1)& (0+255),b
  4516   00299E  0E00               	movlw	0
  4517   0029A0  6FCB               	movwf	(___fldiv@grs+2)& (0+255),b
  4518   0029A2  0E00               	movlw	0
  4519   0029A4  6FCC               	movwf	(___fldiv@grs+3)& (0+255),b
  4520   0029A6                     
  4521                           ; BSR set to: 0
  4522   0029A6  0E00               	movlw	0
  4523   0029A8  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4524   0029AA  EF0F  F015         	goto	l1296
  4525   0029AE                     l3704:
  4526                           
  4527                           ; BSR set to: 0
  4528   0029AE  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4529   0029B0  B4D8               	btfsc	status,2,c
  4530   0029B2  EFDD  F014         	goto	u3121
  4531   0029B6  EFDF  F014         	goto	u3120
  4532   0029BA                     u3121:
  4533   0029BA  EFF6  F014         	goto	l3712
  4534   0029BE                     u3120:
  4535   0029BE                     
  4536                           ; BSR set to: 0
  4537   0029BE  90D8               	bcf	status,0,c
  4538   0029C0  37C2               	rlcf	___fldiv@rem& (0+255),f,b
  4539   0029C2  37C3               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4540   0029C4  37C4               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4541   0029C6  37C5               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4542   0029C8  90D8               	bcf	status,0,c
  4543   0029CA  3653               	rlcf	___fldiv@b^0,f,c
  4544   0029CC  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4545   0029CE  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4546   0029D0  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4547   0029D2                     
  4548                           ; BSR set to: 0
  4549   0029D2  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4550   0029D4  EFEE  F014         	goto	u3131
  4551   0029D8  EFF0  F014         	goto	u3130
  4552   0029DC                     u3131:
  4553   0029DC  EFF1  F014         	goto	l1299
  4554   0029E0                     u3130:
  4555   0029E0                     
  4556                           ; BSR set to: 0
  4557   0029E0  8053               	bsf	___fldiv@b^0,0,c
  4558   0029E2                     l1299:
  4559                           
  4560                           ; BSR set to: 0
  4561   0029E2  90D8               	bcf	status,0,c
  4562   0029E4  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4563   0029E6  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4564   0029E8  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4565   0029EA  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4566   0029EC                     l3712:
  4567                           
  4568                           ; BSR set to: 0
  4569   0029EC  5057               	movf	___fldiv@a^0,w,c
  4570   0029EE  5DC2               	subwf	___fldiv@rem& (0+255),w,b
  4571   0029F0  5058               	movf	(___fldiv@a+1)^0,w,c
  4572   0029F2  59C3               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4573   0029F4  5059               	movf	(___fldiv@a+2)^0,w,c
  4574   0029F6  59C4               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4575   0029F8  505A               	movf	(___fldiv@a+3)^0,w,c
  4576   0029FA  59C5               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4577   0029FC  A0D8               	btfss	status,0,c
  4578   0029FE  EF03  F015         	goto	u3141
  4579   002A02  EF05  F015         	goto	u3140
  4580   002A06                     u3141:
  4581   002A06  EF0E  F015         	goto	l3718
  4582   002A0A                     u3140:
  4583   002A0A                     
  4584                           ; BSR set to: 0
  4585   002A0A  8DCC               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4586   002A0C                     
  4587                           ; BSR set to: 0
  4588   002A0C  5057               	movf	___fldiv@a^0,w,c
  4589   002A0E  5FC2               	subwf	___fldiv@rem& (0+255),f,b
  4590   002A10  5058               	movf	(___fldiv@a+1)^0,w,c
  4591   002A12  5BC3               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4592   002A14  5059               	movf	(___fldiv@a+2)^0,w,c
  4593   002A16  5BC4               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4594   002A18  505A               	movf	(___fldiv@a+3)^0,w,c
  4595   002A1A  5BC5               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4596   002A1C                     l3718:
  4597                           
  4598                           ; BSR set to: 0
  4599   002A1C  2BCE               	incf	___fldiv@aexp& (0+255),f,b
  4600   002A1E                     l1296:
  4601                           
  4602                           ; BSR set to: 0
  4603   002A1E  0E19               	movlw	25
  4604   002A20  65CE               	cpfsgt	___fldiv@aexp& (0+255),b
  4605   002A22  EF15  F015         	goto	u3151
  4606   002A26  EF17  F015         	goto	u3150
  4607   002A2A                     u3151:
  4608   002A2A  EFD7  F014         	goto	l3704
  4609   002A2E                     u3150:
  4610   002A2E                     
  4611                           ; BSR set to: 0
  4612   002A2E  51C2               	movf	___fldiv@rem& (0+255),w,b
  4613   002A30  11C3               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4614   002A32  11C4               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4615   002A34  11C5               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4616   002A36  B4D8               	btfsc	status,2,c
  4617   002A38  EF20  F015         	goto	u3161
  4618   002A3C  EF22  F015         	goto	u3160
  4619   002A40                     u3161:
  4620   002A40  EF3A  F015         	goto	l3730
  4621   002A44                     u3160:
  4622   002A44                     
  4623                           ; BSR set to: 0
  4624   002A44  81C9               	bsf	___fldiv@grs& (0+255),0,b
  4625   002A46  EF3A  F015         	goto	l3730
  4626   002A4A                     l3724:
  4627                           
  4628                           ; BSR set to: 0
  4629   002A4A  90D8               	bcf	status,0,c
  4630   002A4C  3653               	rlcf	___fldiv@b^0,f,c
  4631   002A4E  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4632   002A50  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4633   002A52  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4634   002A54                     
  4635                           ; BSR set to: 0
  4636   002A54  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4637   002A56  EF2F  F015         	goto	u3171
  4638   002A5A  EF31  F015         	goto	u3170
  4639   002A5E                     u3171:
  4640   002A5E  EF32  F015         	goto	l1305
  4641   002A62                     u3170:
  4642   002A62                     
  4643                           ; BSR set to: 0
  4644   002A62  8053               	bsf	___fldiv@b^0,0,c
  4645   002A64                     l1305:
  4646                           
  4647                           ; BSR set to: 0
  4648   002A64  90D8               	bcf	status,0,c
  4649   002A66  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4650   002A68  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4651   002A6A  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4652   002A6C  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4653   002A6E  07C7               	decf	___fldiv@new_exp& (0+255),f,b
  4654   002A70  A0D8               	btfss	status,0,c
  4655   002A72  07C8               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4656   002A74                     l3730:
  4657                           
  4658                           ; BSR set to: 0
  4659   002A74  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4660   002A76  EF3F  F015         	goto	u3181
  4661   002A7A  EF41  F015         	goto	u3180
  4662   002A7E                     u3181:
  4663   002A7E  EF25  F015         	goto	l3724
  4664   002A82                     u3180:
  4665   002A82                     
  4666                           ; BSR set to: 0
  4667   002A82  0E00               	movlw	0
  4668   002A84  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4669   002A86                     
  4670                           ; BSR set to: 0
  4671   002A86  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4672   002A88  EF48  F015         	goto	u3191
  4673   002A8C  EF4A  F015         	goto	u3190
  4674   002A90                     u3191:
  4675   002A90  EF6E  F015         	goto	l1307
  4676   002A94                     u3190:
  4677   002A94                     
  4678                           ; BSR set to: 0
  4679   002A94  0EFF               	movlw	255
  4680   002A96  15C9               	andwf	___fldiv@grs& (0+255),w,b
  4681   002A98  6E5B               	movwf	??___fldiv^0,c
  4682   002A9A  0EFF               	movlw	255
  4683   002A9C  15CA               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4684   002A9E  6E5C               	movwf	(??___fldiv+1)^0,c
  4685   002AA0  0EFF               	movlw	255
  4686   002AA2  15CB               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4687   002AA4  6E5D               	movwf	(??___fldiv+2)^0,c
  4688   002AA6  0E7F               	movlw	127
  4689   002AA8  15CC               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4690   002AAA  6E5E               	movwf	(??___fldiv+3)^0,c
  4691   002AAC  505B               	movf	??___fldiv^0,w,c
  4692   002AAE  105C               	iorwf	(??___fldiv+1)^0,w,c
  4693   002AB0  105D               	iorwf	(??___fldiv+2)^0,w,c
  4694   002AB2  105E               	iorwf	(??___fldiv+3)^0,w,c
  4695   002AB4  B4D8               	btfsc	status,2,c
  4696   002AB6  EF5F  F015         	goto	u3201
  4697   002ABA  EF61  F015         	goto	u3200
  4698   002ABE                     u3201:
  4699   002ABE  EF65  F015         	goto	l1308
  4700   002AC2                     u3200:
  4701   002AC2                     l3738:
  4702                           
  4703                           ; BSR set to: 0
  4704   002AC2  0E01               	movlw	1
  4705   002AC4  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4706   002AC6  EF6E  F015         	goto	l1307
  4707   002ACA                     l1308:
  4708                           
  4709                           ; BSR set to: 0
  4710   002ACA  A053               	btfss	___fldiv@b^0,0,c
  4711   002ACC  EF6A  F015         	goto	u3211
  4712   002AD0  EF6C  F015         	goto	u3210
  4713   002AD4                     u3211:
  4714   002AD4  EF6E  F015         	goto	l1307
  4715   002AD8                     u3210:
  4716   002AD8  EF61  F015         	goto	l3738
  4717   002ADC                     l1307:
  4718                           
  4719                           ; BSR set to: 0
  4720   002ADC  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4721   002ADE  B4D8               	btfsc	status,2,c
  4722   002AE0  EF74  F015         	goto	u3221
  4723   002AE4  EF76  F015         	goto	u3220
  4724   002AE8                     u3221:
  4725   002AE8  EF9A  F015         	goto	l3750
  4726   002AEC                     u3220:
  4727   002AEC                     
  4728                           ; BSR set to: 0
  4729   002AEC  0E01               	movlw	1
  4730   002AEE  2653               	addwf	___fldiv@b^0,f,c
  4731   002AF0  0E00               	movlw	0
  4732   002AF2  2254               	addwfc	(___fldiv@b+1)^0,f,c
  4733   002AF4  2255               	addwfc	(___fldiv@b+2)^0,f,c
  4734   002AF6  2256               	addwfc	(___fldiv@b+3)^0,f,c
  4735   002AF8                     
  4736                           ; BSR set to: 0
  4737   002AF8  A056               	btfss	(___fldiv@b+3)^0,0,c
  4738   002AFA  EF81  F015         	goto	u3231
  4739   002AFE  EF83  F015         	goto	u3230
  4740   002B02                     u3231:
  4741   002B02  EF9A  F015         	goto	l3750
  4742   002B06                     u3230:
  4743   002B06                     
  4744                           ; BSR set to: 0
  4745   002B06  C053  F05B         	movff	___fldiv@b,??___fldiv
  4746   002B0A  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  4747   002B0E  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  4748   002B12  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  4749   002B16  345E               	rlcf	(??___fldiv+3)^0,w,c
  4750   002B18  325E               	rrcf	(??___fldiv+3)^0,f,c
  4751   002B1A  325D               	rrcf	(??___fldiv+2)^0,f,c
  4752   002B1C  325C               	rrcf	(??___fldiv+1)^0,f,c
  4753   002B1E  325B               	rrcf	??___fldiv^0,f,c
  4754   002B20  C05B  F053         	movff	??___fldiv,___fldiv@b
  4755   002B24  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  4756   002B28  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  4757   002B2C  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  4758   002B30                     
  4759                           ; BSR set to: 0
  4760   002B30  4BC7               	infsnz	___fldiv@new_exp& (0+255),f,b
  4761   002B32  2BC8               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4762   002B34                     l3750:
  4763                           
  4764                           ; BSR set to: 0
  4765   002B34  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4766   002B36  EFA5  F015         	goto	u3241
  4767   002B3A  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4768   002B3C  E108               	bnz	u3240
  4769   002B3E  29C7               	incf	___fldiv@new_exp& (0+255),w,b
  4770   002B40  A0D8               	btfss	status,0,c
  4771   002B42  EFA5  F015         	goto	u3241
  4772   002B46  EFA7  F015         	goto	u3240
  4773   002B4A                     u3241:
  4774   002B4A  EFB2  F015         	goto	l3754
  4775   002B4E                     u3240:
  4776   002B4E                     
  4777                           ; BSR set to: 0
  4778   002B4E  0E00               	movlw	0
  4779   002B50  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4780   002B52  69C7               	setf	___fldiv@new_exp& (0+255),b
  4781   002B54  0E00               	movlw	0
  4782   002B56  6E53               	movwf	___fldiv@b^0,c
  4783   002B58  0E00               	movlw	0
  4784   002B5A  6E54               	movwf	(___fldiv@b+1)^0,c
  4785   002B5C  0E00               	movlw	0
  4786   002B5E  6E55               	movwf	(___fldiv@b+2)^0,c
  4787   002B60  0E00               	movlw	0
  4788   002B62  6E56               	movwf	(___fldiv@b+3)^0,c
  4789   002B64                     l3754:
  4790                           
  4791                           ; BSR set to: 0
  4792   002B64  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4793   002B66  EFBF  F015         	goto	u3250
  4794   002B6A  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4795   002B6C  E106               	bnz	u3251
  4796   002B6E  05C7               	decf	___fldiv@new_exp& (0+255),w,b
  4797   002B70  B0D8               	btfsc	status,0,c
  4798   002B72  EFBD  F015         	goto	u3251
  4799   002B76  EFBF  F015         	goto	u3250
  4800   002B7A                     u3251:
  4801   002B7A  EFCD  F015         	goto	l3758
  4802   002B7E                     u3250:
  4803   002B7E                     
  4804                           ; BSR set to: 0
  4805   002B7E  0E00               	movlw	0
  4806   002B80  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4807   002B82  0E00               	movlw	0
  4808   002B84  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4809   002B86  0E00               	movlw	0
  4810   002B88  6E53               	movwf	___fldiv@b^0,c
  4811   002B8A  0E00               	movlw	0
  4812   002B8C  6E54               	movwf	(___fldiv@b+1)^0,c
  4813   002B8E  0E00               	movlw	0
  4814   002B90  6E55               	movwf	(___fldiv@b+2)^0,c
  4815   002B92  0E00               	movlw	0
  4816   002B94  6E56               	movwf	(___fldiv@b+3)^0,c
  4817   002B96  0E00               	movlw	0
  4818   002B98  6FC6               	movwf	___fldiv@sign& (0+255),b
  4819   002B9A                     l3758:
  4820                           
  4821                           ; BSR set to: 0
  4822   002B9A  C0C7  F0CD         	movff	___fldiv@new_exp,___fldiv@bexp
  4823   002B9E                     
  4824                           ; BSR set to: 0
  4825   002B9E  A1CD               	btfss	___fldiv@bexp& (0+255),0,b
  4826   002BA0  EFD4  F015         	goto	u3261
  4827   002BA4  EFD6  F015         	goto	u3260
  4828   002BA8                     u3261:
  4829   002BA8  EFD9  F015         	goto	l3764
  4830   002BAC                     u3260:
  4831   002BAC                     
  4832                           ; BSR set to: 0
  4833   002BAC  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4834   002BAE  EFDA  F015         	goto	l3766
  4835   002BB2                     l3764:
  4836                           
  4837                           ; BSR set to: 0
  4838   002BB2  9E55               	bcf	(___fldiv@b+2)^0,7,c
  4839   002BB4                     l3766:
  4840                           
  4841                           ; BSR set to: 0
  4842   002BB4  90D8               	bcf	status,0,c
  4843   002BB6  31CD               	rrcf	___fldiv@bexp& (0+255),w,b
  4844   002BB8  6E56               	movwf	(___fldiv@b+3)^0,c
  4845   002BBA  EF90  F014         	goto	l3680
  4846   002BBE                     l1294:
  4847                           
  4848                           ; BSR set to: 0
  4849   002BBE  0012               	return		;funcret
  4850   002BC0                     __end_of___fldiv:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _LED_init *****************
  4854 ;; Defined at:
  4855 ;;		line 4 in file "LED.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		None
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text25
  4884   004654                     __ptext25:
  4885                           	callstack 0
  4886   004654                     _LED_init:
  4887                           	callstack 29
  4888   004654                     
  4889                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  4890   004654  9884               	bcf	132,4,c	;volatile
  4891                           
  4892                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  4893   004656  9088               	bcf	136,0,c	;volatile
  4894                           
  4895                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  4896   004658  9086               	bcf	134,0,c	;volatile
  4897                           
  4898                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  4899   00465A  987C               	bcf	124,4,c	;volatile
  4900                           
  4901                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  4902   00465C  9080               	bcf	128,0,c	;volatile
  4903                           
  4904                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  4905   00465E  907E               	bcf	126,0,c	;volatile
  4906   004660  0012               	return		;funcret
  4907   004662                     __end_of_LED_init:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function _Interrupts_init *****************
  4911 ;; Defined at:
  4912 ;;		line 5 in file "interrupts.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		None
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text26
  4941   00466E                     __ptext26:
  4942                           	callstack 0
  4943   00466E                     _Interrupts_init:
  4944                           	callstack 29
  4945   00466E                     
  4946                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  4947   00466E  010E               	movlb	14	; () banked
  4948   004670  872D               	bsf	45,3,b	;volatile
  4949                           
  4950                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  4951   004672  8AF2               	bsf	242,5,c	;volatile
  4952                           
  4953                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  4954   004674  8CF2               	bsf	242,6,c	;volatile
  4955                           
  4956                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  4957   004676  8EF2               	bsf	242,7,c	;volatile
  4958   004678                     
  4959                           ; BSR set to: 14
  4960   004678  0012               	return		;funcret
  4961   00467A                     __end_of_Interrupts_init:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function _Hue2Colour *****************
  4965 ;; Defined at:
  4966 ;;		line 61 in file "colorfunctions.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  cf              2   86[COMRAM] PTR struct RGBC
  4969 ;;		 -> colorf(22), 
  4970 ;;  rel             2   88[COMRAM] PTR struct RGB_rel
  4971 ;;		 -> colorrel(12), 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  colourname      2   90[COMRAM] PTR unsigned char 
  4974 ;;		 -> STR_9(6), STR_8(7), STR_7(6), STR_6(11), 
  4975 ;;		 -> STR_5(7), STR_4(10), STR_3(5), STR_2(4), 
  4976 ;;		 -> STR_1(1), 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2   86[COMRAM] PTR unsigned char 
  4979 ;; Registers used:
  4980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;Total ram usage:        6 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 2
  4993 ;; This function calls:
  4994 ;;		___flge
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;;		_Color2String
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text27
  5002   001592                     __ptext27:
  5003                           	callstack 0
  5004   001592                     _Hue2Colour:
  5005                           	callstack 28
  5006   001592                     
  5007                           ;colorfunctions.c: 61: char* Hue2Colour(struct RGBC *cf, struct RGB_rel *rel);colorfunct
      +                          ions.c: 62: {;colorfunctions.c: 63:     char* colourname = "";
  5008   001592  0E2B               	movlw	low (STR_10+42)
  5009   001594  6E5B               	movwf	Hue2Colour@colourname^0,c
  5010   001596  0E0E               	movlw	high (STR_10+42)
  5011   001598  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5012   00159A                     
  5013                           ;colorfunctions.c: 64:     if ((((cf->h)>0)&&((cf->h)<3)|((cf->h)>352)&&((cf->h)<=360)))
  5014   00159A  0E00               	movlw	0
  5015   00159C  6E4B               	movwf	___flge@ff1^0,c
  5016   00159E  0E00               	movlw	0
  5017   0015A0  6E4C               	movwf	(___flge@ff1+1)^0,c
  5018   0015A2  0E00               	movlw	0
  5019   0015A4  6E4D               	movwf	(___flge@ff1+2)^0,c
  5020   0015A6  0E00               	movlw	0
  5021   0015A8  6E4E               	movwf	(___flge@ff1+3)^0,c
  5022   0015AA  EE20 F010          	lfsr	2,16
  5023   0015AE  5057               	movf	Hue2Colour@cf^0,w,c
  5024   0015B0  26D9               	addwf	fsr2l,f,c
  5025   0015B2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5026   0015B4  22DA               	addwfc	fsr2h,f,c
  5027   0015B6  CFDE F04F          	movff	postinc2,___flge@ff2
  5028   0015BA  CFDE F050          	movff	postinc2,___flge@ff2+1
  5029   0015BE  CFDE F051          	movff	postinc2,___flge@ff2+2
  5030   0015C2  CFDE F052          	movff	postinc2,___flge@ff2+3
  5031   0015C6  EC1D  F01B         	call	___flge	;wreg free
  5032   0015CA  B0D8               	btfsc	status,0,c
  5033   0015CC  EFEA  F00A         	goto	u3501
  5034   0015D0  EFEC  F00A         	goto	u3500
  5035   0015D4                     u3501:
  5036   0015D4  EF59  F00B         	goto	l3944
  5037   0015D8                     u3500:
  5038   0015D8  EE20 F010          	lfsr	2,16
  5039   0015DC  5057               	movf	Hue2Colour@cf^0,w,c
  5040   0015DE  26D9               	addwf	fsr2l,f,c
  5041   0015E0  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5042   0015E2  22DA               	addwfc	fsr2h,f,c
  5043   0015E4  CFDE F04B          	movff	postinc2,___flge@ff1
  5044   0015E8  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5045   0015EC  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5046   0015F0  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5047   0015F4  0E00               	movlw	0
  5048   0015F6  6E4F               	movwf	___flge@ff2^0,c
  5049   0015F8  0E00               	movlw	0
  5050   0015FA  6E50               	movwf	(___flge@ff2+1)^0,c
  5051   0015FC  0E40               	movlw	64
  5052   0015FE  6E51               	movwf	(___flge@ff2+2)^0,c
  5053   001600  0E40               	movlw	64
  5054   001602  6E52               	movwf	(___flge@ff2+3)^0,c
  5055   001604  EC1D  F01B         	call	___flge	;wreg free
  5056   001608  A0D8               	btfss	status,0,c
  5057   00160A  EF09  F00B         	goto	u3511
  5058   00160E  EF0B  F00B         	goto	u3510
  5059   001612                     u3511:
  5060   001612  EF2A  F00B         	goto	l3938
  5061   001616                     u3510:
  5062   001616  0E00               	movlw	0
  5063   001618  6E4B               	movwf	___flge@ff1^0,c
  5064   00161A  0E00               	movlw	0
  5065   00161C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5066   00161E  0EB0               	movlw	176
  5067   001620  6E4D               	movwf	(___flge@ff1+2)^0,c
  5068   001622  0E43               	movlw	67
  5069   001624  6E4E               	movwf	(___flge@ff1+3)^0,c
  5070   001626  EE20 F010          	lfsr	2,16
  5071   00162A  5057               	movf	Hue2Colour@cf^0,w,c
  5072   00162C  26D9               	addwf	fsr2l,f,c
  5073   00162E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5074   001630  22DA               	addwfc	fsr2h,f,c
  5075   001632  CFDE F04F          	movff	postinc2,___flge@ff2
  5076   001636  CFDE F050          	movff	postinc2,___flge@ff2+1
  5077   00163A  CFDE F051          	movff	postinc2,___flge@ff2+2
  5078   00163E  CFDE F052          	movff	postinc2,___flge@ff2+3
  5079   001642  EC1D  F01B         	call	___flge	;wreg free
  5080   001646  B0D8               	btfsc	status,0,c
  5081   001648  EF28  F00B         	goto	u3521
  5082   00164C  EF2A  F00B         	goto	u3520
  5083   001650                     u3521:
  5084   001650  EF59  F00B         	goto	l3944
  5085   001654                     u3520:
  5086   001654                     l3938:
  5087   001654  0E00               	movlw	0
  5088   001656  6E4B               	movwf	___flge@ff1^0,c
  5089   001658  0E00               	movlw	0
  5090   00165A  6E4C               	movwf	(___flge@ff1+1)^0,c
  5091   00165C  0EB4               	movlw	180
  5092   00165E  6E4D               	movwf	(___flge@ff1+2)^0,c
  5093   001660  0E43               	movlw	67
  5094   001662  6E4E               	movwf	(___flge@ff1+3)^0,c
  5095   001664  EE20 F010          	lfsr	2,16
  5096   001668  5057               	movf	Hue2Colour@cf^0,w,c
  5097   00166A  26D9               	addwf	fsr2l,f,c
  5098   00166C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5099   00166E  22DA               	addwfc	fsr2h,f,c
  5100   001670  CFDE F04F          	movff	postinc2,___flge@ff2
  5101   001674  CFDE F050          	movff	postinc2,___flge@ff2+1
  5102   001678  CFDE F051          	movff	postinc2,___flge@ff2+2
  5103   00167C  CFDE F052          	movff	postinc2,___flge@ff2+3
  5104   001680  EC1D  F01B         	call	___flge	;wreg free
  5105   001684  A0D8               	btfss	status,0,c
  5106   001686  EF47  F00B         	goto	u3531
  5107   00168A  EF49  F00B         	goto	u3530
  5108   00168E                     u3531:
  5109   00168E  EF59  F00B         	goto	l3944
  5110   001692                     u3530:
  5111   001692                     
  5112                           ;colorfunctions.c: 65:     {;colorfunctions.c: 67:         colourname = "Red";
  5113   001692  0E60               	movlw	low STR_2
  5114   001694  6E5B               	movwf	Hue2Colour@colourname^0,c
  5115   001696  0E0E               	movlw	high STR_2
  5116   001698  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5117   00169A                     
  5118                           ;colorfunctions.c: 70:         cf->colourindex=0;
  5119   00169A  EE20 F014          	lfsr	2,20
  5120   00169E  5057               	movf	Hue2Colour@cf^0,w,c
  5121   0016A0  26D9               	addwf	fsr2l,f,c
  5122   0016A2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5123   0016A4  22DA               	addwfc	fsr2h,f,c
  5124   0016A6  0E00               	movlw	0
  5125   0016A8  6EDE               	movwf	postinc2,c
  5126   0016AA  0E00               	movlw	0
  5127   0016AC  6EDD               	movwf	postdec2,c
  5128                           
  5129                           ;colorfunctions.c: 71:     }
  5130   0016AE  EF45  F00D         	goto	l3998
  5131   0016B2                     l3944:
  5132   0016B2  0E00               	movlw	0
  5133   0016B4  6E4B               	movwf	___flge@ff1^0,c
  5134   0016B6  0E00               	movlw	0
  5135   0016B8  6E4C               	movwf	(___flge@ff1+1)^0,c
  5136   0016BA  0E60               	movlw	96
  5137   0016BC  6E4D               	movwf	(___flge@ff1+2)^0,c
  5138   0016BE  0E41               	movlw	65
  5139   0016C0  6E4E               	movwf	(___flge@ff1+3)^0,c
  5140   0016C2  EE20 F010          	lfsr	2,16
  5141   0016C6  5057               	movf	Hue2Colour@cf^0,w,c
  5142   0016C8  26D9               	addwf	fsr2l,f,c
  5143   0016CA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5144   0016CC  22DA               	addwfc	fsr2h,f,c
  5145   0016CE  CFDE F04F          	movff	postinc2,___flge@ff2
  5146   0016D2  CFDE F050          	movff	postinc2,___flge@ff2+1
  5147   0016D6  CFDE F051          	movff	postinc2,___flge@ff2+2
  5148   0016DA  CFDE F052          	movff	postinc2,___flge@ff2+3
  5149   0016DE  EC1D  F01B         	call	___flge	;wreg free
  5150   0016E2  B0D8               	btfsc	status,0,c
  5151   0016E4  EF76  F00B         	goto	u3541
  5152   0016E8  EF78  F00B         	goto	u3540
  5153   0016EC                     u3541:
  5154   0016EC  EFA7  F00B         	goto	l3952
  5155   0016F0                     u3540:
  5156   0016F0  EE20 F010          	lfsr	2,16
  5157   0016F4  5057               	movf	Hue2Colour@cf^0,w,c
  5158   0016F6  26D9               	addwf	fsr2l,f,c
  5159   0016F8  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5160   0016FA  22DA               	addwfc	fsr2h,f,c
  5161   0016FC  CFDE F04B          	movff	postinc2,___flge@ff1
  5162   001700  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5163   001704  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5164   001708  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5165   00170C  0E00               	movlw	0
  5166   00170E  6E4F               	movwf	___flge@ff2^0,c
  5167   001710  0E00               	movlw	0
  5168   001712  6E50               	movwf	(___flge@ff2+1)^0,c
  5169   001714  0E90               	movlw	144
  5170   001716  6E51               	movwf	(___flge@ff2+2)^0,c
  5171   001718  0E41               	movlw	65
  5172   00171A  6E52               	movwf	(___flge@ff2+3)^0,c
  5173   00171C  EC1D  F01B         	call	___flge	;wreg free
  5174   001720  B0D8               	btfsc	status,0,c
  5175   001722  EF95  F00B         	goto	u3551
  5176   001726  EF97  F00B         	goto	u3550
  5177   00172A                     u3551:
  5178   00172A  EFA7  F00B         	goto	l3952
  5179   00172E                     u3550:
  5180   00172E                     
  5181                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Pink";
  5182   00172E  0E5B               	movlw	low STR_3
  5183   001730  6E5B               	movwf	Hue2Colour@colourname^0,c
  5184   001732  0E0E               	movlw	high STR_3
  5185   001734  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5186   001736                     
  5187                           ;colorfunctions.c: 75:         cf->colourindex=4;
  5188   001736  EE20 F014          	lfsr	2,20
  5189   00173A  5057               	movf	Hue2Colour@cf^0,w,c
  5190   00173C  26D9               	addwf	fsr2l,f,c
  5191   00173E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5192   001740  22DA               	addwfc	fsr2h,f,c
  5193   001742  0E04               	movlw	4
  5194   001744  6EDE               	movwf	postinc2,c
  5195   001746  0E00               	movlw	0
  5196   001748  6EDD               	movwf	postdec2,c
  5197                           
  5198                           ;colorfunctions.c: 76:     }
  5199   00174A  EF45  F00D         	goto	l3998
  5200   00174E                     l3952:
  5201   00174E  0E00               	movlw	0
  5202   001750  6E4B               	movwf	___flge@ff1^0,c
  5203   001752  0E00               	movlw	0
  5204   001754  6E4C               	movwf	(___flge@ff1+1)^0,c
  5205   001756  0EAA               	movlw	170
  5206   001758  6E4D               	movwf	(___flge@ff1+2)^0,c
  5207   00175A  0E42               	movlw	66
  5208   00175C  6E4E               	movwf	(___flge@ff1+3)^0,c
  5209   00175E  EE20 F010          	lfsr	2,16
  5210   001762  5057               	movf	Hue2Colour@cf^0,w,c
  5211   001764  26D9               	addwf	fsr2l,f,c
  5212   001766  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5213   001768  22DA               	addwfc	fsr2h,f,c
  5214   00176A  CFDE F04F          	movff	postinc2,___flge@ff2
  5215   00176E  CFDE F050          	movff	postinc2,___flge@ff2+1
  5216   001772  CFDE F051          	movff	postinc2,___flge@ff2+2
  5217   001776  CFDE F052          	movff	postinc2,___flge@ff2+3
  5218   00177A  EC1D  F01B         	call	___flge	;wreg free
  5219   00177E  B0D8               	btfsc	status,0,c
  5220   001780  EFC4  F00B         	goto	u3561
  5221   001784  EFC6  F00B         	goto	u3560
  5222   001788                     u3561:
  5223   001788  EFF5  F00B         	goto	l3960
  5224   00178C                     u3560:
  5225   00178C  EE20 F010          	lfsr	2,16
  5226   001790  5057               	movf	Hue2Colour@cf^0,w,c
  5227   001792  26D9               	addwf	fsr2l,f,c
  5228   001794  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5229   001796  22DA               	addwfc	fsr2h,f,c
  5230   001798  CFDE F04B          	movff	postinc2,___flge@ff1
  5231   00179C  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5232   0017A0  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5233   0017A4  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5234   0017A8  0E00               	movlw	0
  5235   0017AA  6E4F               	movwf	___flge@ff2^0,c
  5236   0017AC  0E00               	movlw	0
  5237   0017AE  6E50               	movwf	(___flge@ff2+1)^0,c
  5238   0017B0  0E02               	movlw	2
  5239   0017B2  6E51               	movwf	(___flge@ff2+2)^0,c
  5240   0017B4  0E43               	movlw	67
  5241   0017B6  6E52               	movwf	(___flge@ff2+3)^0,c
  5242   0017B8  EC1D  F01B         	call	___flge	;wreg free
  5243   0017BC  B0D8               	btfsc	status,0,c
  5244   0017BE  EFE3  F00B         	goto	u3571
  5245   0017C2  EFE5  F00B         	goto	u3570
  5246   0017C6                     u3571:
  5247   0017C6  EFF5  F00B         	goto	l3960
  5248   0017CA                     u3570:
  5249   0017CA                     
  5250                           ;colorfunctions.c: 78:         {colourname = "Dark Blue";
  5251   0017CA  0E37               	movlw	low STR_4
  5252   0017CC  6E5B               	movwf	Hue2Colour@colourname^0,c
  5253   0017CE  0E0E               	movlw	high STR_4
  5254   0017D0  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5255   0017D2                     
  5256                           ;colorfunctions.c: 79:         cf->colourindex=2;}
  5257   0017D2  EE20 F014          	lfsr	2,20
  5258   0017D6  5057               	movf	Hue2Colour@cf^0,w,c
  5259   0017D8  26D9               	addwf	fsr2l,f,c
  5260   0017DA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5261   0017DC  22DA               	addwfc	fsr2h,f,c
  5262   0017DE  0E02               	movlw	2
  5263   0017E0  6EDE               	movwf	postinc2,c
  5264   0017E2  0E00               	movlw	0
  5265   0017E4  6EDD               	movwf	postdec2,c
  5266   0017E6  EF45  F00D         	goto	l3998
  5267   0017EA                     l3960:
  5268   0017EA  0E00               	movlw	0
  5269   0017EC  6E4B               	movwf	___flge@ff1^0,c
  5270   0017EE  0E00               	movlw	0
  5271   0017F0  6E4C               	movwf	(___flge@ff1+1)^0,c
  5272   0017F2  0EC0               	movlw	192
  5273   0017F4  6E4D               	movwf	(___flge@ff1+2)^0,c
  5274   0017F6  0E40               	movlw	64
  5275   0017F8  6E4E               	movwf	(___flge@ff1+3)^0,c
  5276   0017FA  EE20 F010          	lfsr	2,16
  5277   0017FE  5057               	movf	Hue2Colour@cf^0,w,c
  5278   001800  26D9               	addwf	fsr2l,f,c
  5279   001802  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5280   001804  22DA               	addwfc	fsr2h,f,c
  5281   001806  CFDE F04F          	movff	postinc2,___flge@ff2
  5282   00180A  CFDE F050          	movff	postinc2,___flge@ff2+1
  5283   00180E  CFDE F051          	movff	postinc2,___flge@ff2+2
  5284   001812  CFDE F052          	movff	postinc2,___flge@ff2+3
  5285   001816  EC1D  F01B         	call	___flge	;wreg free
  5286   00181A  B0D8               	btfsc	status,0,c
  5287   00181C  EF12  F00C         	goto	u3581
  5288   001820  EF14  F00C         	goto	u3580
  5289   001824                     u3581:
  5290   001824  EF43  F00C         	goto	l3968
  5291   001828                     u3580:
  5292   001828  EE20 F010          	lfsr	2,16
  5293   00182C  5057               	movf	Hue2Colour@cf^0,w,c
  5294   00182E  26D9               	addwf	fsr2l,f,c
  5295   001830  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5296   001832  22DA               	addwfc	fsr2h,f,c
  5297   001834  CFDE F04B          	movff	postinc2,___flge@ff1
  5298   001838  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5299   00183C  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5300   001840  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5301   001844  0E00               	movlw	0
  5302   001846  6E4F               	movwf	___flge@ff2^0,c
  5303   001848  0E00               	movlw	0
  5304   00184A  6E50               	movwf	(___flge@ff2+1)^0,c
  5305   00184C  0E40               	movlw	64
  5306   00184E  6E51               	movwf	(___flge@ff2+2)^0,c
  5307   001850  0E41               	movlw	65
  5308   001852  6E52               	movwf	(___flge@ff2+3)^0,c
  5309   001854  EC1D  F01B         	call	___flge	;wreg free
  5310   001858  B0D8               	btfsc	status,0,c
  5311   00185A  EF31  F00C         	goto	u3591
  5312   00185E  EF33  F00C         	goto	u3590
  5313   001862                     u3591:
  5314   001862  EF43  F00C         	goto	l3968
  5315   001866                     u3590:
  5316   001866                     
  5317                           ;colorfunctions.c: 81:     {;colorfunctions.c: 82:         colourname = "Orange";
  5318   001866  0E41               	movlw	low STR_5
  5319   001868  6E5B               	movwf	Hue2Colour@colourname^0,c
  5320   00186A  0E0E               	movlw	high STR_5
  5321   00186C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5322   00186E                     
  5323                           ;colorfunctions.c: 83:         cf->colourindex=5;
  5324   00186E  EE20 F014          	lfsr	2,20
  5325   001872  5057               	movf	Hue2Colour@cf^0,w,c
  5326   001874  26D9               	addwf	fsr2l,f,c
  5327   001876  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5328   001878  22DA               	addwfc	fsr2h,f,c
  5329   00187A  0E05               	movlw	5
  5330   00187C  6EDE               	movwf	postinc2,c
  5331   00187E  0E00               	movlw	0
  5332   001880  6EDD               	movwf	postdec2,c
  5333                           
  5334                           ;colorfunctions.c: 84:     }
  5335   001882  EF45  F00D         	goto	l3998
  5336   001886                     l3968:
  5337   001886  0E00               	movlw	0
  5338   001888  6E4B               	movwf	___flge@ff1^0,c
  5339   00188A  0E00               	movlw	0
  5340   00188C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5341   00188E  0E82               	movlw	130
  5342   001890  6E4D               	movwf	(___flge@ff1+2)^0,c
  5343   001892  0E42               	movlw	66
  5344   001894  6E4E               	movwf	(___flge@ff1+3)^0,c
  5345   001896  EE20 F010          	lfsr	2,16
  5346   00189A  5057               	movf	Hue2Colour@cf^0,w,c
  5347   00189C  26D9               	addwf	fsr2l,f,c
  5348   00189E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5349   0018A0  22DA               	addwfc	fsr2h,f,c
  5350   0018A2  CFDE F04F          	movff	postinc2,___flge@ff2
  5351   0018A6  CFDE F050          	movff	postinc2,___flge@ff2+1
  5352   0018AA  CFDE F051          	movff	postinc2,___flge@ff2+2
  5353   0018AE  CFDE F052          	movff	postinc2,___flge@ff2+3
  5354   0018B2  EC1D  F01B         	call	___flge	;wreg free
  5355   0018B6  B0D8               	btfsc	status,0,c
  5356   0018B8  EF60  F00C         	goto	u3601
  5357   0018BC  EF62  F00C         	goto	u3600
  5358   0018C0                     u3601:
  5359   0018C0  EFC0  F00C         	goto	l3982
  5360   0018C4                     u3600:
  5361   0018C4  EE20 F010          	lfsr	2,16
  5362   0018C8  5057               	movf	Hue2Colour@cf^0,w,c
  5363   0018CA  26D9               	addwf	fsr2l,f,c
  5364   0018CC  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5365   0018CE  22DA               	addwfc	fsr2h,f,c
  5366   0018D0  CFDE F04B          	movff	postinc2,___flge@ff1
  5367   0018D4  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5368   0018D8  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5369   0018DC  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5370   0018E0  0E00               	movlw	0
  5371   0018E2  6E4F               	movwf	___flge@ff2^0,c
  5372   0018E4  0E00               	movlw	0
  5373   0018E6  6E50               	movwf	(___flge@ff2+1)^0,c
  5374   0018E8  0EA0               	movlw	160
  5375   0018EA  6E51               	movwf	(___flge@ff2+2)^0,c
  5376   0018EC  0E42               	movlw	66
  5377   0018EE  6E52               	movwf	(___flge@ff2+3)^0,c
  5378   0018F0  EC1D  F01B         	call	___flge	;wreg free
  5379   0018F4  B0D8               	btfsc	status,0,c
  5380   0018F6  EF7F  F00C         	goto	u3611
  5381   0018FA  EF81  F00C         	goto	u3610
  5382   0018FE                     u3611:
  5383   0018FE  EFC0  F00C         	goto	l3982
  5384   001902                     u3610:
  5385   001902                     
  5386                           ;colorfunctions.c: 86:     {;colorfunctions.c: 89:         if (rel->B > 0.22)
  5387   001902  0EAE               	movlw	174
  5388   001904  6E4B               	movwf	___flge@ff1^0,c
  5389   001906  0E47               	movlw	71
  5390   001908  6E4C               	movwf	(___flge@ff1+1)^0,c
  5391   00190A  0E61               	movlw	97
  5392   00190C  6E4D               	movwf	(___flge@ff1+2)^0,c
  5393   00190E  0E3E               	movlw	62
  5394   001910  6E4E               	movwf	(___flge@ff1+3)^0,c
  5395   001912  EE20 F008          	lfsr	2,8
  5396   001916  5059               	movf	Hue2Colour@rel^0,w,c
  5397   001918  26D9               	addwf	fsr2l,f,c
  5398   00191A  505A               	movf	(Hue2Colour@rel+1)^0,w,c
  5399   00191C  22DA               	addwfc	fsr2h,f,c
  5400   00191E  CFDE F04F          	movff	postinc2,___flge@ff2
  5401   001922  CFDE F050          	movff	postinc2,___flge@ff2+1
  5402   001926  CFDE F051          	movff	postinc2,___flge@ff2+2
  5403   00192A  CFDE F052          	movff	postinc2,___flge@ff2+3
  5404   00192E  EC1D  F01B         	call	___flge	;wreg free
  5405   001932  B0D8               	btfsc	status,0,c
  5406   001934  EF9E  F00C         	goto	u3621
  5407   001938  EFA0  F00C         	goto	u3620
  5408   00193C                     u3621:
  5409   00193C  EFB0  F00C         	goto	l3978
  5410   001940                     u3620:
  5411   001940                     
  5412                           ;colorfunctions.c: 90:         { colourname = "Light Blue";
  5413   001940  0E2C               	movlw	low STR_6
  5414   001942  6E5B               	movwf	Hue2Colour@colourname^0,c
  5415   001944  0E0E               	movlw	high STR_6
  5416   001946  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5417   001948                     
  5418                           ;colorfunctions.c: 91:             cf->colourindex=6;}
  5419   001948  EE20 F014          	lfsr	2,20
  5420   00194C  5057               	movf	Hue2Colour@cf^0,w,c
  5421   00194E  26D9               	addwf	fsr2l,f,c
  5422   001950  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5423   001952  22DA               	addwfc	fsr2h,f,c
  5424   001954  0E06               	movlw	6
  5425   001956  6EDE               	movwf	postinc2,c
  5426   001958  0E00               	movlw	0
  5427   00195A  6EDD               	movwf	postdec2,c
  5428   00195C  EF45  F00D         	goto	l3998
  5429   001960                     l3978:
  5430                           
  5431                           ;colorfunctions.c: 93:             colourname = "Green";
  5432   001960  0E55               	movlw	low STR_7
  5433   001962  6E5B               	movwf	Hue2Colour@colourname^0,c
  5434   001964  0E0E               	movlw	high STR_7
  5435   001966  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5436   001968                     
  5437                           ;colorfunctions.c: 94:             cf->colourindex=1;
  5438   001968  EE20 F014          	lfsr	2,20
  5439   00196C  5057               	movf	Hue2Colour@cf^0,w,c
  5440   00196E  26D9               	addwf	fsr2l,f,c
  5441   001970  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5442   001972  22DA               	addwfc	fsr2h,f,c
  5443   001974  0E01               	movlw	1
  5444   001976  6EDE               	movwf	postinc2,c
  5445   001978  0E00               	movlw	0
  5446   00197A  6EDD               	movwf	postdec2,c
  5447   00197C  EF45  F00D         	goto	l3998
  5448   001980                     l3982:
  5449   001980  0E00               	movlw	0
  5450   001982  6E4B               	movwf	___flge@ff1^0,c
  5451   001984  0E00               	movlw	0
  5452   001986  6E4C               	movwf	(___flge@ff1+1)^0,c
  5453   001988  0E90               	movlw	144
  5454   00198A  6E4D               	movwf	(___flge@ff1+2)^0,c
  5455   00198C  0E41               	movlw	65
  5456   00198E  6E4E               	movwf	(___flge@ff1+3)^0,c
  5457   001990  EE20 F010          	lfsr	2,16
  5458   001994  5057               	movf	Hue2Colour@cf^0,w,c
  5459   001996  26D9               	addwf	fsr2l,f,c
  5460   001998  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5461   00199A  22DA               	addwfc	fsr2h,f,c
  5462   00199C  CFDE F04F          	movff	postinc2,___flge@ff2
  5463   0019A0  CFDE F050          	movff	postinc2,___flge@ff2+1
  5464   0019A4  CFDE F051          	movff	postinc2,___flge@ff2+2
  5465   0019A8  CFDE F052          	movff	postinc2,___flge@ff2+3
  5466   0019AC  EC1D  F01B         	call	___flge	;wreg free
  5467   0019B0  B0D8               	btfsc	status,0,c
  5468   0019B2  EFDD  F00C         	goto	u3631
  5469   0019B6  EFDF  F00C         	goto	u3630
  5470   0019BA                     u3631:
  5471   0019BA  EF3B  F00D         	goto	l3996
  5472   0019BE                     u3630:
  5473   0019BE  EE20 F010          	lfsr	2,16
  5474   0019C2  5057               	movf	Hue2Colour@cf^0,w,c
  5475   0019C4  26D9               	addwf	fsr2l,f,c
  5476   0019C6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5477   0019C8  22DA               	addwfc	fsr2h,f,c
  5478   0019CA  CFDE F04B          	movff	postinc2,___flge@ff1
  5479   0019CE  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5480   0019D2  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5481   0019D6  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5482   0019DA  0E00               	movlw	0
  5483   0019DC  6E4F               	movwf	___flge@ff2^0,c
  5484   0019DE  0E00               	movlw	0
  5485   0019E0  6E50               	movwf	(___flge@ff2+1)^0,c
  5486   0019E2  0ED8               	movlw	216
  5487   0019E4  6E51               	movwf	(___flge@ff2+2)^0,c
  5488   0019E6  0E41               	movlw	65
  5489   0019E8  6E52               	movwf	(___flge@ff2+3)^0,c
  5490   0019EA  EC1D  F01B         	call	___flge	;wreg free
  5491   0019EE  B0D8               	btfsc	status,0,c
  5492   0019F0  EFFC  F00C         	goto	u3641
  5493   0019F4  EFFE  F00C         	goto	u3640
  5494   0019F8                     u3641:
  5495   0019F8  EF3B  F00D         	goto	l3996
  5496   0019FC                     u3640:
  5497   0019FC                     
  5498                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         if (rel->R > 0.51)
  5499   0019FC  0E5C               	movlw	92
  5500   0019FE  6E4B               	movwf	___flge@ff1^0,c
  5501   001A00  0E8F               	movlw	143
  5502   001A02  6E4C               	movwf	(___flge@ff1+1)^0,c
  5503   001A04  0E02               	movlw	2
  5504   001A06  6E4D               	movwf	(___flge@ff1+2)^0,c
  5505   001A08  0E3F               	movlw	63
  5506   001A0A  6E4E               	movwf	(___flge@ff1+3)^0,c
  5507   001A0C  C059  FFD9         	movff	Hue2Colour@rel,fsr2l
  5508   001A10  C05A  FFDA         	movff	Hue2Colour@rel+1,fsr2h
  5509   001A14  CFDE F04F          	movff	postinc2,___flge@ff2
  5510   001A18  CFDE F050          	movff	postinc2,___flge@ff2+1
  5511   001A1C  CFDE F051          	movff	postinc2,___flge@ff2+2
  5512   001A20  CFDE F052          	movff	postinc2,___flge@ff2+3
  5513   001A24  EC1D  F01B         	call	___flge	;wreg free
  5514   001A28  B0D8               	btfsc	status,0,c
  5515   001A2A  EF19  F00D         	goto	u3651
  5516   001A2E  EF1B  F00D         	goto	u3650
  5517   001A32                     u3651:
  5518   001A32  EF2B  F00D         	goto	l3992
  5519   001A36                     u3650:
  5520   001A36                     
  5521                           ;colorfunctions.c: 100:         {;colorfunctions.c: 101:                   colourname = 
      +                          "Yellow";
  5522   001A36  0E48               	movlw	low STR_8
  5523   001A38  6E5B               	movwf	Hue2Colour@colourname^0,c
  5524   001A3A  0E0E               	movlw	high STR_8
  5525   001A3C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5526   001A3E                     
  5527                           ;colorfunctions.c: 102:             cf->colourindex=3;
  5528   001A3E  EE20 F014          	lfsr	2,20
  5529   001A42  5057               	movf	Hue2Colour@cf^0,w,c
  5530   001A44  26D9               	addwf	fsr2l,f,c
  5531   001A46  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5532   001A48  22DA               	addwfc	fsr2h,f,c
  5533   001A4A  0E03               	movlw	3
  5534   001A4C  6EDE               	movwf	postinc2,c
  5535   001A4E  0E00               	movlw	0
  5536   001A50  6EDD               	movwf	postdec2,c
  5537                           
  5538                           ;colorfunctions.c: 103:             }
  5539   001A52  EF45  F00D         	goto	l3998
  5540   001A56                     l3992:
  5541                           
  5542                           ;colorfunctions.c: 105:             colourname = "White";
  5543   001A56  0E4F               	movlw	low STR_9
  5544   001A58  6E5B               	movwf	Hue2Colour@colourname^0,c
  5545   001A5A  0E0E               	movlw	high STR_9
  5546   001A5C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5547   001A5E                     
  5548                           ;colorfunctions.c: 106:             cf->colourindex=7;
  5549   001A5E  EE20 F014          	lfsr	2,20
  5550   001A62  5057               	movf	Hue2Colour@cf^0,w,c
  5551   001A64  26D9               	addwf	fsr2l,f,c
  5552   001A66  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5553   001A68  22DA               	addwfc	fsr2h,f,c
  5554   001A6A  0E07               	movlw	7
  5555   001A6C  6EDE               	movwf	postinc2,c
  5556   001A6E  0E00               	movlw	0
  5557   001A70  6EDD               	movwf	postdec2,c
  5558   001A72  EF45  F00D         	goto	l3998
  5559   001A76                     l3996:
  5560   001A76  EE20 F014          	lfsr	2,20
  5561   001A7A  5057               	movf	Hue2Colour@cf^0,w,c
  5562   001A7C  26D9               	addwf	fsr2l,f,c
  5563   001A7E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5564   001A80  22DA               	addwfc	fsr2h,f,c
  5565   001A82  0E08               	movlw	8
  5566   001A84  6EDE               	movwf	postinc2,c
  5567   001A86  0E00               	movlw	0
  5568   001A88  6EDD               	movwf	postdec2,c
  5569   001A8A                     l3998:
  5570                           
  5571                           ;colorfunctions.c: 111:     return colourname;
  5572   001A8A  C05B  F057         	movff	Hue2Colour@colourname,?_Hue2Colour
  5573   001A8E  C05C  F058         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
  5574   001A92  0012               	return		;funcret
  5575   001A94                     __end_of_Hue2Colour:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _Colour2Action *****************
  5579 ;; Defined at:
  5580 ;;		line 114 in file "colorfunctions.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  cf              2   90[COMRAM] PTR struct RGBC
  5583 ;;		 -> colorf(22), 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;Total ram usage:        4 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 8
  5602 ;; This function calls:
  5603 ;;		_Blue_T180
  5604 ;;		_Green_L90
  5605 ;;		_LightBlue_L135
  5606 ;;		_Orange_R135
  5607 ;;		_Pink_rev1_L90
  5608 ;;		_Red_R90
  5609 ;;		_White
  5610 ;;		_Yellow_rev1_R90
  5611 ;; This function is called by:
  5612 ;;		_main
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text28
  5617   003060                     __ptext28:
  5618                           	callstack 0
  5619   003060                     _Colour2Action:
  5620                           	callstack 22
  5621   003060                     
  5622                           ;colorfunctions.c: 114: void Colour2Action(struct RGBC *cf);colorfunctions.c: 115: {;col
      +                          orfunctions.c: 116:     if (cf->colourindex == 0)
  5623   003060  EE20 F014          	lfsr	2,20
  5624   003064  505B               	movf	Colour2Action@cf^0,w,c
  5625   003066  26D9               	addwf	fsr2l,f,c
  5626   003068  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5627   00306A  22DA               	addwfc	fsr2h,f,c
  5628   00306C  50DE               	movf	postinc2,w,c
  5629   00306E  10DE               	iorwf	postinc2,w,c
  5630   003070  A4D8               	btfss	status,2,c
  5631   003072  EF3D  F018         	goto	u3661
  5632   003076  EF3F  F018         	goto	u3660
  5633   00307A                     u3661:
  5634   00307A  EF4B  F018         	goto	l4006
  5635   00307E                     u3660:
  5636   00307E                     
  5637                           ;colorfunctions.c: 117:     {;colorfunctions.c: 118:         Red_R90(&motorL,&motorR);
  5638   00307E  0EB9               	movlw	low _motorL
  5639   003080  6E21               	movwf	Red_R90@mL^0,c
  5640   003082  0E00               	movlw	high _motorL
  5641   003084  6E22               	movwf	(Red_R90@mL+1)^0,c
  5642   003086  0EB0               	movlw	low _motorR
  5643   003088  6E23               	movwf	Red_R90@mR^0,c
  5644   00308A  0E00               	movlw	high _motorR
  5645   00308C  6E24               	movwf	(Red_R90@mR+1)^0,c
  5646   00308E  ECBE  F01F         	call	_Red_R90	;wreg free
  5647                           
  5648                           ;colorfunctions.c: 119:     }
  5649   003092  EF09  F019         	goto	l163
  5650   003096                     l4006:
  5651   003096  EE20 F014          	lfsr	2,20
  5652   00309A  505B               	movf	Colour2Action@cf^0,w,c
  5653   00309C  26D9               	addwf	fsr2l,f,c
  5654   00309E  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5655   0030A0  22DA               	addwfc	fsr2h,f,c
  5656   0030A2  04DE               	decf	postinc2,w,c
  5657   0030A4  10DE               	iorwf	postinc2,w,c
  5658   0030A6  A4D8               	btfss	status,2,c
  5659   0030A8  EF58  F018         	goto	u3671
  5660   0030AC  EF5A  F018         	goto	u3670
  5661   0030B0                     u3671:
  5662   0030B0  EF66  F018         	goto	l4010
  5663   0030B4                     u3670:
  5664   0030B4                     
  5665                           ;colorfunctions.c: 121:     {;colorfunctions.c: 122:         Green_L90(&motorL,&motorR);
  5666   0030B4  0EB9               	movlw	low _motorL
  5667   0030B6  6E21               	movwf	Green_L90@mL^0,c
  5668   0030B8  0E00               	movlw	high _motorL
  5669   0030BA  6E22               	movwf	(Green_L90@mL+1)^0,c
  5670   0030BC  0EB0               	movlw	low _motorR
  5671   0030BE  6E23               	movwf	Green_L90@mR^0,c
  5672   0030C0  0E00               	movlw	high _motorR
  5673   0030C2  6E24               	movwf	(Green_L90@mR+1)^0,c
  5674   0030C4  ECFC  F01F         	call	_Green_L90	;wreg free
  5675                           
  5676                           ;colorfunctions.c: 123:     }
  5677   0030C8  EF09  F019         	goto	l163
  5678   0030CC                     l4010:
  5679   0030CC  EE20 F014          	lfsr	2,20
  5680   0030D0  505B               	movf	Colour2Action@cf^0,w,c
  5681   0030D2  26D9               	addwf	fsr2l,f,c
  5682   0030D4  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5683   0030D6  22DA               	addwfc	fsr2h,f,c
  5684   0030D8  0E02               	movlw	2
  5685   0030DA  18DE               	xorwf	postinc2,w,c
  5686   0030DC  10DE               	iorwf	postinc2,w,c
  5687   0030DE  A4D8               	btfss	status,2,c
  5688   0030E0  EF74  F018         	goto	u3681
  5689   0030E4  EF76  F018         	goto	u3680
  5690   0030E8                     u3681:
  5691   0030E8  EF82  F018         	goto	l4014
  5692   0030EC                     u3680:
  5693   0030EC                     
  5694                           ;colorfunctions.c: 125:     {;colorfunctions.c: 126:         Blue_T180(&motorL,&motorR);
  5695   0030EC  0EB9               	movlw	low _motorL
  5696   0030EE  6E24               	movwf	Blue_T180@mL^0,c
  5697   0030F0  0E00               	movlw	high _motorL
  5698   0030F2  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5699   0030F4  0EB0               	movlw	low _motorR
  5700   0030F6  6E26               	movwf	Blue_T180@mR^0,c
  5701   0030F8  0E00               	movlw	high _motorR
  5702   0030FA  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5703   0030FC  EC0D  F021         	call	_Blue_T180	;wreg free
  5704                           
  5705                           ;colorfunctions.c: 127:     }
  5706   003100  EF09  F019         	goto	l163
  5707   003104                     l4014:
  5708   003104  EE20 F014          	lfsr	2,20
  5709   003108  505B               	movf	Colour2Action@cf^0,w,c
  5710   00310A  26D9               	addwf	fsr2l,f,c
  5711   00310C  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5712   00310E  22DA               	addwfc	fsr2h,f,c
  5713   003110  0E03               	movlw	3
  5714   003112  18DE               	xorwf	postinc2,w,c
  5715   003114  10DE               	iorwf	postinc2,w,c
  5716   003116  A4D8               	btfss	status,2,c
  5717   003118  EF90  F018         	goto	u3691
  5718   00311C  EF92  F018         	goto	u3690
  5719   003120                     u3691:
  5720   003120  EF9E  F018         	goto	l4018
  5721   003124                     u3690:
  5722   003124                     
  5723                           ;colorfunctions.c: 129:     {;colorfunctions.c: 130:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5724   003124  0EB9               	movlw	low _motorL
  5725   003126  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5726   003128  0E00               	movlw	high _motorL
  5727   00312A  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5728   00312C  0EB0               	movlw	low _motorR
  5729   00312E  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5730   003130  0E00               	movlw	high _motorR
  5731   003132  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5732   003134  ECF4  F01B         	call	_Yellow_rev1_R90	;wreg free
  5733                           
  5734                           ;colorfunctions.c: 131:     }
  5735   003138  EF09  F019         	goto	l163
  5736   00313C                     l4018:
  5737   00313C  EE20 F014          	lfsr	2,20
  5738   003140  505B               	movf	Colour2Action@cf^0,w,c
  5739   003142  26D9               	addwf	fsr2l,f,c
  5740   003144  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5741   003146  22DA               	addwfc	fsr2h,f,c
  5742   003148  0E04               	movlw	4
  5743   00314A  18DE               	xorwf	postinc2,w,c
  5744   00314C  10DE               	iorwf	postinc2,w,c
  5745   00314E  A4D8               	btfss	status,2,c
  5746   003150  EFAC  F018         	goto	u3701
  5747   003154  EFAE  F018         	goto	u3700
  5748   003158                     u3701:
  5749   003158  EFBA  F018         	goto	l4022
  5750   00315C                     u3700:
  5751   00315C                     
  5752                           ;colorfunctions.c: 133:     {;colorfunctions.c: 134:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5753   00315C  0EB9               	movlw	low _motorL
  5754   00315E  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5755   003160  0E00               	movlw	high _motorL
  5756   003162  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5757   003164  0EB0               	movlw	low _motorR
  5758   003166  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5759   003168  0E00               	movlw	high _motorR
  5760   00316A  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5761   00316C  EC48  F01C         	call	_Pink_rev1_L90	;wreg free
  5762                           
  5763                           ;colorfunctions.c: 135:     }
  5764   003170  EF09  F019         	goto	l163
  5765   003174                     l4022:
  5766   003174  EE20 F014          	lfsr	2,20
  5767   003178  505B               	movf	Colour2Action@cf^0,w,c
  5768   00317A  26D9               	addwf	fsr2l,f,c
  5769   00317C  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5770   00317E  22DA               	addwfc	fsr2h,f,c
  5771   003180  0E05               	movlw	5
  5772   003182  18DE               	xorwf	postinc2,w,c
  5773   003184  10DE               	iorwf	postinc2,w,c
  5774   003186  A4D8               	btfss	status,2,c
  5775   003188  EFC8  F018         	goto	u3711
  5776   00318C  EFCA  F018         	goto	u3710
  5777   003190                     u3711:
  5778   003190  EFD6  F018         	goto	l4026
  5779   003194                     u3710:
  5780   003194                     
  5781                           ;colorfunctions.c: 137:     {;colorfunctions.c: 138:         Orange_R135(&motorL,&motorR
      +                          );
  5782   003194  0EB9               	movlw	low _motorL
  5783   003196  6E21               	movwf	Orange_R135@mL^0,c
  5784   003198  0E00               	movlw	high _motorL
  5785   00319A  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5786   00319C  0EB0               	movlw	low _motorR
  5787   00319E  6E23               	movwf	Orange_R135@mR^0,c
  5788   0031A0  0E00               	movlw	high _motorR
  5789   0031A2  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5790   0031A4  ECEF  F01C         	call	_Orange_R135	;wreg free
  5791                           
  5792                           ;colorfunctions.c: 139:     }
  5793   0031A8  EF09  F019         	goto	l163
  5794   0031AC                     l4026:
  5795   0031AC  EE20 F014          	lfsr	2,20
  5796   0031B0  505B               	movf	Colour2Action@cf^0,w,c
  5797   0031B2  26D9               	addwf	fsr2l,f,c
  5798   0031B4  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5799   0031B6  22DA               	addwfc	fsr2h,f,c
  5800   0031B8  0E06               	movlw	6
  5801   0031BA  18DE               	xorwf	postinc2,w,c
  5802   0031BC  10DE               	iorwf	postinc2,w,c
  5803   0031BE  A4D8               	btfss	status,2,c
  5804   0031C0  EFE4  F018         	goto	u3721
  5805   0031C4  EFE6  F018         	goto	u3720
  5806   0031C8                     u3721:
  5807   0031C8  EFF2  F018         	goto	l4030
  5808   0031CC                     u3720:
  5809   0031CC                     
  5810                           ;colorfunctions.c: 141:     {;colorfunctions.c: 142:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5811   0031CC  0EB9               	movlw	low _motorL
  5812   0031CE  6E21               	movwf	LightBlue_L135@mL^0,c
  5813   0031D0  0E00               	movlw	high _motorL
  5814   0031D2  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5815   0031D4  0EB0               	movlw	low _motorR
  5816   0031D6  6E23               	movwf	LightBlue_L135@mR^0,c
  5817   0031D8  0E00               	movlw	high _motorR
  5818   0031DA  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5819   0031DC  EC41  F01D         	call	_LightBlue_L135	;wreg free
  5820                           
  5821                           ;colorfunctions.c: 143:     }
  5822   0031E0  EF09  F019         	goto	l163
  5823   0031E4                     l4030:
  5824   0031E4                     
  5825                           ;colorfunctions.c: 145:     {;colorfunctions.c: 146:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5826   0031E4  0EB9               	movlw	low _motorL
  5827   0031E6  0100               	movlb	0	; () banked
  5828   0031E8  6FC2               	movwf	White@mL& (0+255),b
  5829   0031EA  0E00               	movlw	high _motorL
  5830   0031EC  6FC3               	movwf	(White@mL+1)& (0+255),b
  5831   0031EE  0EB0               	movlw	low _motorR
  5832   0031F0  6FC4               	movwf	White@mR& (0+255),b
  5833   0031F2  0E00               	movlw	high _motorR
  5834   0031F4  6FC5               	movwf	(White@mR+1)& (0+255),b
  5835   0031F6  C062  F0C6         	movff	_movementCount,White@movementCount	;volatile
  5836   0031FA  C063  F0C7         	movff	_movementCount+1,White@movementCount+1	;volatile
  5837   0031FE  0E66               	movlw	low _movementMemory
  5838   003200  6FC8               	movwf	White@movementMemory& (0+255),b
  5839   003202  0E00               	movlw	high _movementMemory
  5840   003204  6FC9               	movwf	(White@movementMemory+1)& (0+255),b
  5841   003206  0E00               	movlw	low _timerMemory
  5842   003208  6FCA               	movwf	White@timerMemory& (0+255),b
  5843   00320A  0E01               	movlw	high _timerMemory
  5844   00320C  6FCB               	movwf	(White@timerMemory+1)& (0+255),b
  5845   00320E  ECAA  F00F         	call	_White	;wreg free
  5846   003212                     l163:
  5847   003212  0012               	return		;funcret
  5848   003214                     __end_of_Colour2Action:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _White *****************
  5852 ;; Defined at:
  5853 ;;		line 342 in file "dc_motor.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  5856 ;;		 -> motorL(9), 
  5857 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  5858 ;;		 -> motorR(9), 
  5859 ;;  movementCoun    2    4[BANK0 ] unsigned int 
  5860 ;;  movementMemo    2    6[BANK0 ] PTR volatile unsigned in
  5861 ;;		 -> movementMemory(40), 
  5862 ;;  timerMemory     2    8[BANK0 ] PTR volatile float 
  5863 ;;		 -> timerMemory(80), 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  tempTimer       4   10[BANK0 ] float 
  5866 ;;  i               2   14[BANK0 ] int 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5876 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;Total ram usage:       20 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 7
  5883 ;; This function calls:
  5884 ;;		_Blue_T180
  5885 ;;		_Green_L90
  5886 ;;		_LightBlue_L135
  5887 ;;		_Orange_R135
  5888 ;;		_Pink_rev1_L90
  5889 ;;		_RAMback
  5890 ;;		_Red_R90
  5891 ;;		_TimerReset
  5892 ;;		_Yellow_rev1_R90
  5893 ;;		___fladd
  5894 ;;		___flge
  5895 ;;		_fullSpeedAhead
  5896 ;;		_getTimerValue
  5897 ;;		_reverseHalfSquare
  5898 ;;		_rotate180left
  5899 ;;		_stop
  5900 ;; This function is called by:
  5901 ;;		_Colour2Action
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text29
  5906   001F54                     __ptext29:
  5907                           	callstack 0
  5908   001F54                     _White:
  5909                           	callstack 22
  5910   001F54                     
  5911                           ;dc_motor.c: 342: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile float *timerMemory);dc_motor.c
      +                          : 343: {;dc_motor.c: 344:     LATDbits.LATD4 = 1;;
  5912   001F54  887C               	bsf	124,4,c	;volatile
  5913                           
  5914                           ;dc_motor.c: 346:     while (!retracingDone){
  5915   001F56  EFDB  F011         	goto	l3628
  5916   001F5A                     l3550:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;dc_motor.c: 347:         reverseHalfSquare(mL,mR);
  5920   001F5A  C0C2  F01B         	movff	White@mL,reverseHalfSquare@mL
  5921   001F5E  C0C3  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5922   001F62  C0C4  F01D         	movff	White@mR,reverseHalfSquare@mR
  5923   001F66  C0C5  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5924   001F6A  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  5925                           
  5926                           ;dc_motor.c: 348:         rotate180left(mL,mR);
  5927   001F6E  C0C2  F020         	movff	White@mL,rotate180left@mL
  5928   001F72  C0C3  F021         	movff	White@mL+1,rotate180left@mL+1
  5929   001F76  C0C4  F022         	movff	White@mR,rotate180left@mR
  5930   001F7A  C0C5  F023         	movff	White@mR+1,rotate180left@mR+1
  5931   001F7E  EC37  F021         	call	_rotate180left	;wreg free
  5932   001F82                     
  5933                           ;dc_motor.c: 349:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5934   001F82  0E29               	movlw	41
  5935   001F84  6E58               	movwf	(??_White+1)^0,c
  5936   001F86  0E96               	movlw	150
  5937   001F88  6E57               	movwf	??_White^0,c
  5938   001F8A  0E7F               	movlw	127
  5939   001F8C                     u3857:
  5940   001F8C  2EE8               	decfsz	wreg,f,c
  5941   001F8E  D7FE               	bra	u3857
  5942   001F90  2E57               	decfsz	??_White^0,f,c
  5943   001F92  D7FC               	bra	u3857
  5944   001F94  2E58               	decfsz	(??_White+1)^0,f,c
  5945   001F96  D7FA               	bra	u3857
  5946   001F98  F000               	nop	
  5947   001F9A                     
  5948                           ;dc_motor.c: 350:         ForwardFlag = 0;
  5949   001F9A  0E00               	movlw	0
  5950   001F9C  0100               	movlb	0	; () banked
  5951   001F9E  6FF8               	movwf	_ForwardFlag& (0+255),b	;volatile
  5952   001FA0                     
  5953                           ; BSR set to: 0
  5954                           ;dc_motor.c: 351:         retracingDone = 1;
  5955   001FA0  0E00               	movlw	0
  5956   001FA2  6F61               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5957   001FA4  0E01               	movlw	1
  5958   001FA6  6F60               	movwf	_retracingDone& (0+255),b	;volatile
  5959   001FA8                     
  5960                           ; BSR set to: 0
  5961                           ;dc_motor.c: 353:         for (int i=movementCount; i>=0;i--){
  5962   001FA8  C0C6  F0D0         	movff	White@movementCount,White@i
  5963   001FAC  C0C7  F0D1         	movff	White@movementCount+1,White@i+1
  5964   001FB0                     l3560:
  5965                           
  5966                           ; BSR set to: 0
  5967   001FB0  BFD1               	btfsc	(White@i+1)& (0+255),7,b
  5968   001FB2  EFDF  F00F         	goto	u2900
  5969   001FB6  EFDD  F00F         	goto	u2901
  5970   001FBA                     u2901:
  5971   001FBA  EFE1  F00F         	goto	l578
  5972   001FBE                     u2900:
  5973   001FBE  EFDB  F011         	goto	l3628
  5974   001FC2                     l578:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;dc_motor.c: 354:             LATDbits.LATD4 = 1;;
  5978   001FC2  887C               	bsf	124,4,c	;volatile
  5979   001FC4                     
  5980                           ; BSR set to: 0
  5981                           ;dc_motor.c: 355:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5982   001FC4  0E11               	movlw	17
  5983   001FC6  6E58               	movwf	(??_White+1)^0,c
  5984   001FC8  0E3C               	movlw	60
  5985   001FCA  6E57               	movwf	??_White^0,c
  5986   001FCC  0ECB               	movlw	203
  5987   001FCE                     u3867:
  5988   001FCE  2EE8               	decfsz	wreg,f,c
  5989   001FD0  D7FE               	bra	u3867
  5990   001FD2  2E57               	decfsz	??_White^0,f,c
  5991   001FD4  D7FC               	bra	u3867
  5992   001FD6  2E58               	decfsz	(??_White+1)^0,f,c
  5993   001FD8  D7FA               	bra	u3867
  5994   001FDA  F000               	nop	
  5995   001FDC                     
  5996                           ;dc_motor.c: 356:             if (movementMemory[i]==0){
  5997   001FDC  90D8               	bcf	status,0,c
  5998   001FDE  0100               	movlb	0	; () banked
  5999   001FE0  35D0               	rlcf	White@i& (0+255),w,b
  6000   001FE2  6ED9               	movwf	fsr2l,c
  6001   001FE4  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6002   001FE6  6EDA               	movwf	fsr2h,c
  6003   001FE8  51C8               	movf	White@movementMemory& (0+255),w,b
  6004   001FEA  26D9               	addwf	fsr2l,f,c
  6005   001FEC  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6006   001FEE  22DA               	addwfc	fsr2h,f,c
  6007   001FF0  50DE               	movf	postinc2,w,c
  6008   001FF2  10DE               	iorwf	postinc2,w,c
  6009   001FF4  A4D8               	btfss	status,2,c
  6010   001FF6  EFFF  F00F         	goto	u2911
  6011   001FFA  EF01  F010         	goto	u2910
  6012   001FFE                     u2911:
  6013   001FFE  EF0D  F010         	goto	l3570
  6014   002002                     u2910:
  6015   002002                     
  6016                           ; BSR set to: 0
  6017                           ;dc_motor.c: 357:                 Red_R90(mL,mR);}
  6018   002002  C0C2  F021         	movff	White@mL,Red_R90@mL
  6019   002006  C0C3  F022         	movff	White@mL+1,Red_R90@mL+1
  6020   00200A  C0C4  F023         	movff	White@mR,Red_R90@mR
  6021   00200E  C0C5  F024         	movff	White@mR+1,Red_R90@mR+1
  6022   002012  ECBE  F01F         	call	_Red_R90	;wreg free
  6023   002016  EFF9  F010         	goto	l581
  6024   00201A                     l3570:
  6025                           
  6026                           ; BSR set to: 0
  6027   00201A  90D8               	bcf	status,0,c
  6028   00201C  35D0               	rlcf	White@i& (0+255),w,b
  6029   00201E  6ED9               	movwf	fsr2l,c
  6030   002020  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6031   002022  6EDA               	movwf	fsr2h,c
  6032   002024  51C8               	movf	White@movementMemory& (0+255),w,b
  6033   002026  26D9               	addwf	fsr2l,f,c
  6034   002028  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6035   00202A  22DA               	addwfc	fsr2h,f,c
  6036   00202C  04DE               	decf	postinc2,w,c
  6037   00202E  10DE               	iorwf	postinc2,w,c
  6038   002030  A4D8               	btfss	status,2,c
  6039   002032  EF1D  F010         	goto	u2921
  6040   002036  EF1F  F010         	goto	u2920
  6041   00203A                     u2921:
  6042   00203A  EF2B  F010         	goto	l3574
  6043   00203E                     u2920:
  6044   00203E                     
  6045                           ; BSR set to: 0
  6046                           ;dc_motor.c: 359:                 Green_L90(mL,mR);}
  6047   00203E  C0C2  F021         	movff	White@mL,Green_L90@mL
  6048   002042  C0C3  F022         	movff	White@mL+1,Green_L90@mL+1
  6049   002046  C0C4  F023         	movff	White@mR,Green_L90@mR
  6050   00204A  C0C5  F024         	movff	White@mR+1,Green_L90@mR+1
  6051   00204E  ECFC  F01F         	call	_Green_L90	;wreg free
  6052   002052  EFF9  F010         	goto	l581
  6053   002056                     l3574:
  6054                           
  6055                           ; BSR set to: 0
  6056   002056  90D8               	bcf	status,0,c
  6057   002058  35D0               	rlcf	White@i& (0+255),w,b
  6058   00205A  6ED9               	movwf	fsr2l,c
  6059   00205C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6060   00205E  6EDA               	movwf	fsr2h,c
  6061   002060  51C8               	movf	White@movementMemory& (0+255),w,b
  6062   002062  26D9               	addwf	fsr2l,f,c
  6063   002064  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6064   002066  22DA               	addwfc	fsr2h,f,c
  6065   002068  0E02               	movlw	2
  6066   00206A  18DE               	xorwf	postinc2,w,c
  6067   00206C  10DE               	iorwf	postinc2,w,c
  6068   00206E  A4D8               	btfss	status,2,c
  6069   002070  EF3C  F010         	goto	u2931
  6070   002074  EF3E  F010         	goto	u2930
  6071   002078                     u2931:
  6072   002078  EF4A  F010         	goto	l3578
  6073   00207C                     u2930:
  6074   00207C                     
  6075                           ; BSR set to: 0
  6076                           ;dc_motor.c: 361:                 Blue_T180(mL,mR);}
  6077   00207C  C0C2  F024         	movff	White@mL,Blue_T180@mL
  6078   002080  C0C3  F025         	movff	White@mL+1,Blue_T180@mL+1
  6079   002084  C0C4  F026         	movff	White@mR,Blue_T180@mR
  6080   002088  C0C5  F027         	movff	White@mR+1,Blue_T180@mR+1
  6081   00208C  EC0D  F021         	call	_Blue_T180	;wreg free
  6082   002090  EFF9  F010         	goto	l581
  6083   002094                     l3578:
  6084                           
  6085                           ; BSR set to: 0
  6086   002094  90D8               	bcf	status,0,c
  6087   002096  35D0               	rlcf	White@i& (0+255),w,b
  6088   002098  6ED9               	movwf	fsr2l,c
  6089   00209A  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6090   00209C  6EDA               	movwf	fsr2h,c
  6091   00209E  51C8               	movf	White@movementMemory& (0+255),w,b
  6092   0020A0  26D9               	addwf	fsr2l,f,c
  6093   0020A2  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6094   0020A4  22DA               	addwfc	fsr2h,f,c
  6095   0020A6  0E03               	movlw	3
  6096   0020A8  18DE               	xorwf	postinc2,w,c
  6097   0020AA  10DE               	iorwf	postinc2,w,c
  6098   0020AC  A4D8               	btfss	status,2,c
  6099   0020AE  EF5B  F010         	goto	u2941
  6100   0020B2  EF5D  F010         	goto	u2940
  6101   0020B6                     u2941:
  6102   0020B6  EF73  F010         	goto	l3582
  6103   0020BA                     u2940:
  6104   0020BA                     
  6105                           ; BSR set to: 0
  6106                           ;dc_motor.c: 363:                 Yellow_rev1_R90(mL,mR);
  6107   0020BA  C0C2  F021         	movff	White@mL,Yellow_rev1_R90@mL
  6108   0020BE  C0C3  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  6109   0020C2  C0C4  F023         	movff	White@mR,Yellow_rev1_R90@mR
  6110   0020C6  C0C5  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  6111   0020CA  ECF4  F01B         	call	_Yellow_rev1_R90	;wreg free
  6112                           
  6113                           ;dc_motor.c: 364:                 RAMback(mL,mR);}
  6114   0020CE  C0C2  F01B         	movff	White@mL,RAMback@mL
  6115   0020D2  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6116   0020D6  C0C4  F01D         	movff	White@mR,RAMback@mR
  6117   0020DA  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6118   0020DE  EC74  F020         	call	_RAMback	;wreg free
  6119   0020E2  EFF9  F010         	goto	l581
  6120   0020E6                     l3582:
  6121                           
  6122                           ; BSR set to: 0
  6123   0020E6  90D8               	bcf	status,0,c
  6124   0020E8  35D0               	rlcf	White@i& (0+255),w,b
  6125   0020EA  6ED9               	movwf	fsr2l,c
  6126   0020EC  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6127   0020EE  6EDA               	movwf	fsr2h,c
  6128   0020F0  51C8               	movf	White@movementMemory& (0+255),w,b
  6129   0020F2  26D9               	addwf	fsr2l,f,c
  6130   0020F4  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6131   0020F6  22DA               	addwfc	fsr2h,f,c
  6132   0020F8  0E04               	movlw	4
  6133   0020FA  18DE               	xorwf	postinc2,w,c
  6134   0020FC  10DE               	iorwf	postinc2,w,c
  6135   0020FE  A4D8               	btfss	status,2,c
  6136   002100  EF84  F010         	goto	u2951
  6137   002104  EF86  F010         	goto	u2950
  6138   002108                     u2951:
  6139   002108  EF9C  F010         	goto	l3586
  6140   00210C                     u2950:
  6141   00210C                     
  6142                           ; BSR set to: 0
  6143                           ;dc_motor.c: 366:                 Pink_rev1_L90(mL,mR);
  6144   00210C  C0C2  F021         	movff	White@mL,Pink_rev1_L90@mL
  6145   002110  C0C3  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  6146   002114  C0C4  F023         	movff	White@mR,Pink_rev1_L90@mR
  6147   002118  C0C5  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  6148   00211C  EC48  F01C         	call	_Pink_rev1_L90	;wreg free
  6149                           
  6150                           ;dc_motor.c: 367:                 RAMback(mL,mR);}
  6151   002120  C0C2  F01B         	movff	White@mL,RAMback@mL
  6152   002124  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6153   002128  C0C4  F01D         	movff	White@mR,RAMback@mR
  6154   00212C  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6155   002130  EC74  F020         	call	_RAMback	;wreg free
  6156   002134  EFF9  F010         	goto	l581
  6157   002138                     l3586:
  6158                           
  6159                           ; BSR set to: 0
  6160   002138  90D8               	bcf	status,0,c
  6161   00213A  35D0               	rlcf	White@i& (0+255),w,b
  6162   00213C  6ED9               	movwf	fsr2l,c
  6163   00213E  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6164   002140  6EDA               	movwf	fsr2h,c
  6165   002142  51C8               	movf	White@movementMemory& (0+255),w,b
  6166   002144  26D9               	addwf	fsr2l,f,c
  6167   002146  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6168   002148  22DA               	addwfc	fsr2h,f,c
  6169   00214A  0E05               	movlw	5
  6170   00214C  18DE               	xorwf	postinc2,w,c
  6171   00214E  10DE               	iorwf	postinc2,w,c
  6172   002150  A4D8               	btfss	status,2,c
  6173   002152  EFAD  F010         	goto	u2961
  6174   002156  EFAF  F010         	goto	u2960
  6175   00215A                     u2961:
  6176   00215A  EFBB  F010         	goto	l3590
  6177   00215E                     u2960:
  6178   00215E                     
  6179                           ; BSR set to: 0
  6180                           ;dc_motor.c: 369:                 Orange_R135(mL,mR);}
  6181   00215E  C0C2  F021         	movff	White@mL,Orange_R135@mL
  6182   002162  C0C3  F022         	movff	White@mL+1,Orange_R135@mL+1
  6183   002166  C0C4  F023         	movff	White@mR,Orange_R135@mR
  6184   00216A  C0C5  F024         	movff	White@mR+1,Orange_R135@mR+1
  6185   00216E  ECEF  F01C         	call	_Orange_R135	;wreg free
  6186   002172  EFF9  F010         	goto	l581
  6187   002176                     l3590:
  6188                           
  6189                           ; BSR set to: 0
  6190   002176  90D8               	bcf	status,0,c
  6191   002178  35D0               	rlcf	White@i& (0+255),w,b
  6192   00217A  6ED9               	movwf	fsr2l,c
  6193   00217C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6194   00217E  6EDA               	movwf	fsr2h,c
  6195   002180  51C8               	movf	White@movementMemory& (0+255),w,b
  6196   002182  26D9               	addwf	fsr2l,f,c
  6197   002184  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6198   002186  22DA               	addwfc	fsr2h,f,c
  6199   002188  0E06               	movlw	6
  6200   00218A  18DE               	xorwf	postinc2,w,c
  6201   00218C  10DE               	iorwf	postinc2,w,c
  6202   00218E  A4D8               	btfss	status,2,c
  6203   002190  EFCC  F010         	goto	u2971
  6204   002194  EFCE  F010         	goto	u2970
  6205   002198                     u2971:
  6206   002198  EFDA  F010         	goto	l3594
  6207   00219C                     u2970:
  6208   00219C                     
  6209                           ; BSR set to: 0
  6210                           ;dc_motor.c: 371:                 LightBlue_L135(mL,mR);}
  6211   00219C  C0C2  F021         	movff	White@mL,LightBlue_L135@mL
  6212   0021A0  C0C3  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  6213   0021A4  C0C4  F023         	movff	White@mR,LightBlue_L135@mR
  6214   0021A8  C0C5  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  6215   0021AC  EC41  F01D         	call	_LightBlue_L135	;wreg free
  6216   0021B0  EFF9  F010         	goto	l581
  6217   0021B4                     l3594:
  6218                           
  6219                           ; BSR set to: 0
  6220   0021B4  90D8               	bcf	status,0,c
  6221   0021B6  35D0               	rlcf	White@i& (0+255),w,b
  6222   0021B8  6ED9               	movwf	fsr2l,c
  6223   0021BA  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6224   0021BC  6EDA               	movwf	fsr2h,c
  6225   0021BE  51C8               	movf	White@movementMemory& (0+255),w,b
  6226   0021C0  26D9               	addwf	fsr2l,f,c
  6227   0021C2  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6228   0021C4  22DA               	addwfc	fsr2h,f,c
  6229   0021C6  0E07               	movlw	7
  6230   0021C8  18DE               	xorwf	postinc2,w,c
  6231   0021CA  10DE               	iorwf	postinc2,w,c
  6232   0021CC  A4D8               	btfss	status,2,c
  6233   0021CE  EFEB  F010         	goto	u2981
  6234   0021D2  EFED  F010         	goto	u2980
  6235   0021D6                     u2981:
  6236   0021D6  EFF9  F010         	goto	l589
  6237   0021DA                     u2980:
  6238   0021DA                     
  6239                           ; BSR set to: 0
  6240                           ;dc_motor.c: 373:                 stop(mL,mR);}
  6241   0021DA  C0C2  F014         	movff	White@mL,stop@mL
  6242   0021DE  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6243   0021E2  C0C4  F016         	movff	White@mR,stop@mR
  6244   0021E6  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6245   0021EA  EC9C  F01C         	call	_stop	;wreg free
  6246   0021EE  EFF9  F010         	goto	l581
  6247   0021F2                     l589:
  6248   0021F2                     l581:
  6249                           
  6250                           ;dc_motor.c: 374:             RAMback(mL,mR);
  6251   0021F2  C0C2  F01B         	movff	White@mL,RAMback@mL
  6252   0021F6  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6253   0021FA  C0C4  F01D         	movff	White@mR,RAMback@mR
  6254   0021FE  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6255   002202  EC74  F020         	call	_RAMback	;wreg free
  6256   002206                     
  6257                           ;dc_motor.c: 375:             LATDbits.LATD4 = 1;;
  6258   002206  887C               	bsf	124,4,c	;volatile
  6259   002208                     
  6260                           ;dc_motor.c: 377:             float tempTimer = 0;
  6261   002208  0E00               	movlw	0
  6262   00220A  0100               	movlb	0	; () banked
  6263   00220C  6FCC               	movwf	White@tempTimer& (0+255),b
  6264   00220E  0E00               	movlw	0
  6265   002210  6FCD               	movwf	(White@tempTimer+1)& (0+255),b
  6266   002212  0E00               	movlw	0
  6267   002214  6FCE               	movwf	(White@tempTimer+2)& (0+255),b
  6268   002216  0E00               	movlw	0
  6269   002218  6FCF               	movwf	(White@tempTimer+3)& (0+255),b
  6270   00221A                     
  6271                           ; BSR set to: 0
  6272                           ;dc_motor.c: 378:             TimerReset();
  6273   00221A  EC52  F023         	call	_TimerReset	;wreg free
  6274   00221E                     
  6275                           ;dc_motor.c: 379:             fullSpeedAhead(mL,mR);
  6276   00221E  C0C2  F014         	movff	White@mL,fullSpeedAhead@mL
  6277   002222  C0C3  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  6278   002226  C0C4  F016         	movff	White@mR,fullSpeedAhead@mR
  6279   00222A  C0C5  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  6280   00222E  EC3E  F01F         	call	_fullSpeedAhead	;wreg free
  6281   002232                     
  6282                           ;dc_motor.c: 380:             if (timerMemory[i]<0)
  6283   002232  90D8               	bcf	status,0,c
  6284   002234  0100               	movlb	0	; () banked
  6285   002236  35D0               	rlcf	White@i& (0+255),w,b
  6286   002238  6ED9               	movwf	fsr2l,c
  6287   00223A  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6288   00223C  6EDA               	movwf	fsr2h,c
  6289   00223E  90D8               	bcf	status,0,c
  6290   002240  36D9               	rlcf	fsr2l,f,c
  6291   002242  36DA               	rlcf	fsr2h,f,c
  6292   002244  51CA               	movf	White@timerMemory& (0+255),w,b
  6293   002246  26D9               	addwf	fsr2l,f,c
  6294   002248  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6295   00224A  22DA               	addwfc	fsr2h,f,c
  6296   00224C  0E03               	movlw	3
  6297   00224E  BEDB               	btfsc	plusw2,7,c
  6298   002250  EF2E  F011         	goto	u2990
  6299   002254  EF2C  F011         	goto	u2991
  6300   002258                     u2991:
  6301   002258  EF74  F011         	goto	l3614
  6302   00225C                     u2990:
  6303   00225C  EF3A  F011         	goto	l3612
  6304   002260                     l3610:
  6305                           
  6306                           ;dc_motor.c: 383:                 {;dc_motor.c: 384:                     tempTimer = get
      +                          TimerValue();
  6307   002260  ECDC  F020         	call	_getTimerValue	;wreg free
  6308   002264  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6309   002268  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6310   00226C  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6311   002270  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6312   002274                     l3612:
  6313                           
  6314                           ;dc_motor.c: 382:                 while(tempTimer <(timerMemory[i]+_recogniseColour))
  6315   002274  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6316   002278  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6317   00227C  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6318   002280  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6319   002284  0E00               	movlw	0
  6320   002286  6E3F               	movwf	___fladd@a^0,c
  6321   002288  0E00               	movlw	0
  6322   00228A  6E40               	movwf	(___fladd@a+1)^0,c
  6323   00228C  0E16               	movlw	22
  6324   00228E  6E41               	movwf	(___fladd@a+2)^0,c
  6325   002290  0E43               	movlw	67
  6326   002292  6E42               	movwf	(___fladd@a+3)^0,c
  6327   002294  90D8               	bcf	status,0,c
  6328   002296  0100               	movlb	0	; () banked
  6329   002298  35D0               	rlcf	White@i& (0+255),w,b
  6330   00229A  6ED9               	movwf	fsr2l,c
  6331   00229C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6332   00229E  6EDA               	movwf	fsr2h,c
  6333   0022A0  90D8               	bcf	status,0,c
  6334   0022A2  36D9               	rlcf	fsr2l,f,c
  6335   0022A4  36DA               	rlcf	fsr2h,f,c
  6336   0022A6  51CA               	movf	White@timerMemory& (0+255),w,b
  6337   0022A8  26D9               	addwf	fsr2l,f,c
  6338   0022AA  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6339   0022AC  22DA               	addwfc	fsr2h,f,c
  6340   0022AE  CFDE F03B          	movff	postinc2,___fladd@b
  6341   0022B2  CFDE F03C          	movff	postinc2,___fladd@b+1
  6342   0022B6  CFDE F03D          	movff	postinc2,___fladd@b+2
  6343   0022BA  CFDE F03E          	movff	postinc2,___fladd@b+3
  6344   0022BE  EC4A  F00D         	call	___fladd	;wreg free
  6345   0022C2  C03B  F04F         	movff	?___fladd,___flge@ff2
  6346   0022C6  C03C  F050         	movff	?___fladd+1,___flge@ff2+1
  6347   0022CA  C03D  F051         	movff	?___fladd+2,___flge@ff2+2
  6348   0022CE  C03E  F052         	movff	?___fladd+3,___flge@ff2+3
  6349   0022D2  EC1D  F01B         	call	___flge	;wreg free
  6350   0022D6  A0D8               	btfss	status,0,c
  6351   0022D8  EF70  F011         	goto	u3001
  6352   0022DC  EF72  F011         	goto	u3000
  6353   0022E0                     u3001:
  6354   0022E0  EF30  F011         	goto	l3610
  6355   0022E4                     u3000:
  6356   0022E4  EFCB  F011         	goto	l3622
  6357   0022E8                     l3614:
  6358                           
  6359                           ; BSR set to: 0
  6360   0022E8  0E00               	movlw	0
  6361   0022EA  6E4B               	movwf	___flge@ff1^0,c
  6362   0022EC  0E00               	movlw	0
  6363   0022EE  6E4C               	movwf	(___flge@ff1+1)^0,c
  6364   0022F0  0E00               	movlw	0
  6365   0022F2  6E4D               	movwf	(___flge@ff1+2)^0,c
  6366   0022F4  0E00               	movlw	0
  6367   0022F6  6E4E               	movwf	(___flge@ff1+3)^0,c
  6368   0022F8  90D8               	bcf	status,0,c
  6369   0022FA  35D0               	rlcf	White@i& (0+255),w,b
  6370   0022FC  6ED9               	movwf	fsr2l,c
  6371   0022FE  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6372   002300  6EDA               	movwf	fsr2h,c
  6373   002302  90D8               	bcf	status,0,c
  6374   002304  36D9               	rlcf	fsr2l,f,c
  6375   002306  36DA               	rlcf	fsr2h,f,c
  6376   002308  51CA               	movf	White@timerMemory& (0+255),w,b
  6377   00230A  26D9               	addwf	fsr2l,f,c
  6378   00230C  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6379   00230E  22DA               	addwfc	fsr2h,f,c
  6380   002310  CFDE F04F          	movff	postinc2,___flge@ff2
  6381   002314  CFDE F050          	movff	postinc2,___flge@ff2+1
  6382   002318  CFDE F051          	movff	postinc2,___flge@ff2+2
  6383   00231C  CFDE F052          	movff	postinc2,___flge@ff2+3
  6384   002320  EC1D  F01B         	call	___flge	;wreg free
  6385   002324  B0D8               	btfsc	status,0,c
  6386   002326  EF97  F011         	goto	u3011
  6387   00232A  EF99  F011         	goto	u3010
  6388   00232E                     u3011:
  6389   00232E  EFCB  F011         	goto	l3622
  6390   002332                     u3010:
  6391   002332  EFA5  F011         	goto	l3620
  6392   002336                     l3618:
  6393                           
  6394                           ;dc_motor.c: 388:                 {;dc_motor.c: 389:                     tempTimer = get
      +                          TimerValue();
  6395   002336  ECDC  F020         	call	_getTimerValue	;wreg free
  6396   00233A  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6397   00233E  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6398   002342  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6399   002346  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6400   00234A                     l3620:
  6401                           
  6402                           ;dc_motor.c: 387:                 while(tempTimer<timerMemory[i])
  6403   00234A  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6404   00234E  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6405   002352  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6406   002356  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6407   00235A  90D8               	bcf	status,0,c
  6408   00235C  0100               	movlb	0	; () banked
  6409   00235E  35D0               	rlcf	White@i& (0+255),w,b
  6410   002360  6ED9               	movwf	fsr2l,c
  6411   002362  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6412   002364  6EDA               	movwf	fsr2h,c
  6413   002366  90D8               	bcf	status,0,c
  6414   002368  36D9               	rlcf	fsr2l,f,c
  6415   00236A  36DA               	rlcf	fsr2h,f,c
  6416   00236C  51CA               	movf	White@timerMemory& (0+255),w,b
  6417   00236E  26D9               	addwf	fsr2l,f,c
  6418   002370  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6419   002372  22DA               	addwfc	fsr2h,f,c
  6420   002374  CFDE F04F          	movff	postinc2,___flge@ff2
  6421   002378  CFDE F050          	movff	postinc2,___flge@ff2+1
  6422   00237C  CFDE F051          	movff	postinc2,___flge@ff2+2
  6423   002380  CFDE F052          	movff	postinc2,___flge@ff2+3
  6424   002384  EC1D  F01B         	call	___flge	;wreg free
  6425   002388  A0D8               	btfss	status,0,c
  6426   00238A  EFC9  F011         	goto	u3021
  6427   00238E  EFCB  F011         	goto	u3020
  6428   002392                     u3021:
  6429   002392  EF9B  F011         	goto	l3618
  6430   002396                     u3020:
  6431   002396                     l3622:
  6432                           
  6433                           ;dc_motor.c: 392:             stop(mL,mR);
  6434   002396  C0C2  F014         	movff	White@mL,stop@mL
  6435   00239A  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6436   00239E  C0C4  F016         	movff	White@mR,stop@mR
  6437   0023A2  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6438   0023A6  EC9C  F01C         	call	_stop	;wreg free
  6439   0023AA                     
  6440                           ;dc_motor.c: 393:         }
  6441   0023AA  0100               	movlb	0	; () banked
  6442   0023AC  07D0               	decf	White@i& (0+255),f,b
  6443   0023AE  A0D8               	btfss	status,0,c
  6444   0023B0  07D1               	decf	(White@i+1)& (0+255),f,b
  6445   0023B2  EFD8  F00F         	goto	l3560
  6446   0023B6                     l3628:
  6447                           
  6448                           ;dc_motor.c: 346:     while (!retracingDone){
  6449   0023B6  0100               	movlb	0	; () banked
  6450   0023B8  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  6451   0023BA  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  6452   0023BC  B4D8               	btfsc	status,2,c
  6453   0023BE  EFE3  F011         	goto	u3031
  6454   0023C2  EFE5  F011         	goto	u3030
  6455   0023C6                     u3031:
  6456   0023C6  EFAD  F00F         	goto	l3550
  6457   0023CA                     u3030:
  6458   0023CA                     
  6459                           ; BSR set to: 0
  6460                           ;dc_motor.c: 395:     stop(mL,mR);
  6461   0023CA  C0C2  F014         	movff	White@mL,stop@mL
  6462   0023CE  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6463   0023D2  C0C4  F016         	movff	White@mR,stop@mR
  6464   0023D6  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6465   0023DA  EC9C  F01C         	call	_stop	;wreg free
  6466   0023DE                     
  6467                           ;dc_motor.c: 396:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6468   0023DE  0E52               	movlw	82
  6469   0023E0  6E58               	movwf	(??_White+1)^0,c
  6470   0023E2  0E2B               	movlw	43
  6471   0023E4  6E57               	movwf	??_White^0,c
  6472   0023E6  0E00               	movlw	0
  6473   0023E8                     u3877:
  6474   0023E8  2EE8               	decfsz	wreg,f,c
  6475   0023EA  D7FE               	bra	u3877
  6476   0023EC  2E57               	decfsz	??_White^0,f,c
  6477   0023EE  D7FC               	bra	u3877
  6478   0023F0  2E58               	decfsz	(??_White+1)^0,f,c
  6479   0023F2  D7FA               	bra	u3877
  6480   0023F4  D000               	nop2	
  6481   0023F6                     
  6482                           ;dc_motor.c: 397:     LATDbits.LATD4 = 0;;
  6483   0023F6  987C               	bcf	124,4,c	;volatile
  6484   0023F8  0012               	return		;funcret
  6485   0023FA                     __end_of_White:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function _getTimerValue *****************
  6489 ;; Defined at:
  6490 ;;		line 28 in file "timer.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  timerCount      2   56[COMRAM] int 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  4   50[COMRAM] float 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;Total ram usage:        8 bytes
  6509 ;; Hardware stack levels used: 1
  6510 ;; Hardware stack levels required when called: 2
  6511 ;; This function calls:
  6512 ;;		___flmul
  6513 ;;		___xxtofl
  6514 ;; This function is called by:
  6515 ;;		_White
  6516 ;;		_memoryUpdateTime
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text30
  6521   0041B8                     __ptext30:
  6522                           	callstack 0
  6523   0041B8                     _getTimerValue:
  6524                           	callstack 27
  6525   0041B8                     
  6526                           ;timer.c: 30:     int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6527   0041B8  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  6528   0041BC  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  6529   0041BE                     
  6530                           ;timer.c: 34:     timerCount |= (int)(TMR0H << 8);
  6531   0041BE  50D4               	movf	212,w,c	;volatile
  6532   0041C0  6E38               	movwf	(??_getTimerValue+1)^0,c
  6533   0041C2  6A37               	clrf	??_getTimerValue^0,c
  6534   0041C4  5037               	movf	??_getTimerValue^0,w,c
  6535   0041C6  1239               	iorwf	getTimerValue@timerCount^0,f,c
  6536   0041C8  5038               	movf	(??_getTimerValue+1)^0,w,c
  6537   0041CA  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  6538   0041CC                     
  6539                           ;timer.c: 35:     return timerCount*1.048576;
  6540   0041CC  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  6541   0041D0  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  6542   0041D4  0E00               	movlw	0
  6543   0041D6  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6544   0041D8  0EFF               	movlw	-1
  6545   0041DA  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6546   0041DC  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6547   0041DE  0E01               	movlw	1
  6548   0041E0  EC0A  F019         	call	___xxtofl
  6549   0041E4  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6550   0041E8  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6551   0041EC  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6552   0041F0  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6553   0041F4  0EBD               	movlw	189
  6554   0041F6  6E1E               	movwf	___flmul@a^0,c
  6555   0041F8  0E37               	movlw	55
  6556   0041FA  6E1F               	movwf	(___flmul@a+1)^0,c
  6557   0041FC  0E86               	movlw	134
  6558   0041FE  6E20               	movwf	(___flmul@a+2)^0,c
  6559   004200  0E3F               	movlw	63
  6560   004202  6E21               	movwf	(___flmul@a+3)^0,c
  6561   004204  ECFD  F011         	call	___flmul	;wreg free
  6562   004208  C01A  F033         	movff	?___flmul,?_getTimerValue
  6563   00420C  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  6564   004210  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  6565   004214  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  6566   004218  0012               	return		;funcret
  6567   00421A                     __end_of_getTimerValue:
  6568                           	callstack 0
  6569                           
  6570 ;; *************** function ___xxtofl *****************
  6571 ;; Defined at:
  6572 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  sign            1    wreg     unsigned char 
  6575 ;;  val             4   11[COMRAM] long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  sign            1   19[COMRAM] unsigned char 
  6578 ;;  arg             4   21[COMRAM] unsigned long 
  6579 ;;  exp             1   20[COMRAM] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  4   11[COMRAM] unsigned char 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6590 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;Total ram usage:       14 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_colour_read_all
  6600 ;;		_RGB2Hue
  6601 ;;		_Left45
  6602 ;;		_Right45
  6603 ;;		_reverseHalfSquare
  6604 ;;		_Yellow_rev1_R90
  6605 ;;		_Pink_rev1_L90
  6606 ;;		_White
  6607 ;;		_memoryUpdateTime
  6608 ;;		_getTimerValue
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text31
  6613   003214                     __ptext31:
  6614                           	callstack 0
  6615   003214                     ___xxtofl:
  6616                           	callstack 27
  6617                           
  6618                           ;incstack = 0
  6619                           ;___xxtofl@sign stored from wreg
  6620   003214  6E14               	movwf	___xxtofl@sign^0,c
  6621   003216  5014               	movf	___xxtofl@sign^0,w,c
  6622   003218  B4D8               	btfsc	status,2,c
  6623   00321A  EF11  F019         	goto	u2261
  6624   00321E  EF13  F019         	goto	u2260
  6625   003222                     u2261:
  6626   003222  EF35  F019         	goto	l1367
  6627   003226                     u2260:
  6628   003226  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6629   003228  EF1A  F019         	goto	u2270
  6630   00322C  EF18  F019         	goto	u2271
  6631   003230                     u2271:
  6632   003230  EF35  F019         	goto	l1367
  6633   003234                     u2270:
  6634   003234  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6635   003238  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6636   00323C  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6637   003240  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6638   003244  1E10               	comf	??___xxtofl^0,f,c
  6639   003246  1E11               	comf	(??___xxtofl+1)^0,f,c
  6640   003248  1E12               	comf	(??___xxtofl+2)^0,f,c
  6641   00324A  1E13               	comf	(??___xxtofl+3)^0,f,c
  6642   00324C  2A10               	incf	??___xxtofl^0,f,c
  6643   00324E  0E00               	movlw	0
  6644   003250  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6645   003252  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6646   003254  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6647   003256  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6648   00325A  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6649   00325E  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6650   003262  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6651   003266  EF3D  F019         	goto	l3124
  6652   00326A                     l1367:
  6653   00326A  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6654   00326E  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6655   003272  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6656   003276  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6657   00327A                     l3124:
  6658   00327A  500C               	movf	___xxtofl@val^0,w,c
  6659   00327C  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6660   00327E  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6661   003280  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6662   003282  A4D8               	btfss	status,2,c
  6663   003284  EF46  F019         	goto	u2281
  6664   003288  EF48  F019         	goto	u2280
  6665   00328C                     u2281:
  6666   00328C  EF52  F019         	goto	l3130
  6667   003290                     u2280:
  6668   003290  0E00               	movlw	0
  6669   003292  6E0C               	movwf	?___xxtofl^0,c
  6670   003294  0E00               	movlw	0
  6671   003296  6E0D               	movwf	(?___xxtofl+1)^0,c
  6672   003298  0E00               	movlw	0
  6673   00329A  6E0E               	movwf	(?___xxtofl+2)^0,c
  6674   00329C  0E00               	movlw	0
  6675   00329E  6E0F               	movwf	(?___xxtofl+3)^0,c
  6676   0032A0  EFE3  F019         	goto	l1370
  6677   0032A4                     l3130:
  6678   0032A4  0E96               	movlw	150
  6679   0032A6  6E15               	movwf	___xxtofl@exp^0,c
  6680   0032A8  EF5C  F019         	goto	l3134
  6681   0032AC                     l3132:
  6682   0032AC  2A15               	incf	___xxtofl@exp^0,f,c
  6683   0032AE  90D8               	bcf	status,0,c
  6684   0032B0  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6685   0032B2  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6686   0032B4  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6687   0032B6  3216               	rrcf	___xxtofl@arg^0,f,c
  6688   0032B8                     l3134:
  6689   0032B8  0E00               	movlw	0
  6690   0032BA  1416               	andwf	___xxtofl@arg^0,w,c
  6691   0032BC  6E10               	movwf	??___xxtofl^0,c
  6692   0032BE  0E00               	movlw	0
  6693   0032C0  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6694   0032C2  6E11               	movwf	(??___xxtofl+1)^0,c
  6695   0032C4  0E00               	movlw	0
  6696   0032C6  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6697   0032C8  6E12               	movwf	(??___xxtofl+2)^0,c
  6698   0032CA  0EFE               	movlw	254
  6699   0032CC  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6700   0032CE  6E13               	movwf	(??___xxtofl+3)^0,c
  6701   0032D0  5010               	movf	??___xxtofl^0,w,c
  6702   0032D2  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6703   0032D4  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6704   0032D6  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6705   0032D8  A4D8               	btfss	status,2,c
  6706   0032DA  EF71  F019         	goto	u2291
  6707   0032DE  EF73  F019         	goto	u2290
  6708   0032E2                     u2291:
  6709   0032E2  EF56  F019         	goto	l3132
  6710   0032E6                     u2290:
  6711   0032E6  EF81  F019         	goto	l1374
  6712   0032EA                     l3136:
  6713   0032EA  2A15               	incf	___xxtofl@exp^0,f,c
  6714   0032EC  0E01               	movlw	1
  6715   0032EE  2616               	addwf	___xxtofl@arg^0,f,c
  6716   0032F0  0E00               	movlw	0
  6717   0032F2  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6718   0032F4  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6719   0032F6  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6720   0032F8  90D8               	bcf	status,0,c
  6721   0032FA  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6722   0032FC  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6723   0032FE  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6724   003300  3216               	rrcf	___xxtofl@arg^0,f,c
  6725   003302                     l1374:
  6726   003302  0E00               	movlw	0
  6727   003304  1416               	andwf	___xxtofl@arg^0,w,c
  6728   003306  6E10               	movwf	??___xxtofl^0,c
  6729   003308  0E00               	movlw	0
  6730   00330A  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6731   00330C  6E11               	movwf	(??___xxtofl+1)^0,c
  6732   00330E  0E00               	movlw	0
  6733   003310  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6734   003312  6E12               	movwf	(??___xxtofl+2)^0,c
  6735   003314  0EFF               	movlw	255
  6736   003316  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6737   003318  6E13               	movwf	(??___xxtofl+3)^0,c
  6738   00331A  5010               	movf	??___xxtofl^0,w,c
  6739   00331C  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6740   00331E  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6741   003320  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6742   003322  A4D8               	btfss	status,2,c
  6743   003324  EF96  F019         	goto	u2301
  6744   003328  EF98  F019         	goto	u2300
  6745   00332C                     u2301:
  6746   00332C  EF75  F019         	goto	l3136
  6747   003330                     u2300:
  6748   003330  EFA0  F019         	goto	l3144
  6749   003334                     l3142:
  6750   003334  0615               	decf	___xxtofl@exp^0,f,c
  6751   003336  90D8               	bcf	status,0,c
  6752   003338  3616               	rlcf	___xxtofl@arg^0,f,c
  6753   00333A  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6754   00333C  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6755   00333E  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6756   003340                     l3144:
  6757   003340  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6758   003342  EFA5  F019         	goto	u2311
  6759   003346  EFA7  F019         	goto	u2310
  6760   00334A                     u2311:
  6761   00334A  EFAF  F019         	goto	l1381
  6762   00334E                     u2310:
  6763   00334E  0E02               	movlw	2
  6764   003350  6015               	cpfslt	___xxtofl@exp^0,c
  6765   003352  EFAD  F019         	goto	u2321
  6766   003356  EFAF  F019         	goto	u2320
  6767   00335A                     u2321:
  6768   00335A  EF9A  F019         	goto	l3142
  6769   00335E                     u2320:
  6770   00335E                     l1381:
  6771   00335E  B015               	btfsc	___xxtofl@exp^0,0,c
  6772   003360  EFB4  F019         	goto	u2331
  6773   003364  EFB6  F019         	goto	u2330
  6774   003368                     u2331:
  6775   003368  EFB7  F019         	goto	l3150
  6776   00336C                     u2330:
  6777   00336C  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6778   00336E                     l3150:
  6779   00336E  90D8               	bcf	status,0,c
  6780   003370  3215               	rrcf	___xxtofl@exp^0,f,c
  6781   003372  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6782   003376  6A11               	clrf	(??___xxtofl+1)^0,c
  6783   003378  6A12               	clrf	(??___xxtofl+2)^0,c
  6784   00337A  6A13               	clrf	(??___xxtofl+3)^0,c
  6785   00337C  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6786   003380  6A12               	clrf	(??___xxtofl+2)^0,c
  6787   003382  6A11               	clrf	(??___xxtofl+1)^0,c
  6788   003384  6A10               	clrf	??___xxtofl^0,c
  6789   003386  5010               	movf	??___xxtofl^0,w,c
  6790   003388  1216               	iorwf	___xxtofl@arg^0,f,c
  6791   00338A  5011               	movf	(??___xxtofl+1)^0,w,c
  6792   00338C  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6793   00338E  5012               	movf	(??___xxtofl+2)^0,w,c
  6794   003390  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6795   003392  5013               	movf	(??___xxtofl+3)^0,w,c
  6796   003394  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6797   003396  5014               	movf	___xxtofl@sign^0,w,c
  6798   003398  B4D8               	btfsc	status,2,c
  6799   00339A  EFD1  F019         	goto	u2341
  6800   00339E  EFD3  F019         	goto	u2340
  6801   0033A2                     u2341:
  6802   0033A2  EFDB  F019         	goto	l3160
  6803   0033A6                     u2340:
  6804   0033A6  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6805   0033A8  EFDA  F019         	goto	u2350
  6806   0033AC  EFD8  F019         	goto	u2351
  6807   0033B0                     u2351:
  6808   0033B0  EFDB  F019         	goto	l3160
  6809   0033B4                     u2350:
  6810   0033B4  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6811   0033B6                     l3160:
  6812   0033B6  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6813   0033BA  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6814   0033BE  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6815   0033C2  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6816   0033C6                     l1370:
  6817   0033C6  0012               	return		;funcret
  6818   0033C8                     __end_of___xxtofl:
  6819                           	callstack 0
  6820                           
  6821 ;; *************** function ___flmul *****************
  6822 ;; Defined at:
  6823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  b               4   25[COMRAM] unsigned char 
  6826 ;;  a               4   29[COMRAM] unsigned char 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  prod            4   44[COMRAM] struct .
  6829 ;;  grs             4   38[COMRAM] unsigned long 
  6830 ;;  temp            2   48[COMRAM] struct .
  6831 ;;  bexp            1   43[COMRAM] unsigned char 
  6832 ;;  aexp            1   42[COMRAM] unsigned char 
  6833 ;;  sign            1   37[COMRAM] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  4   25[COMRAM] unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, prodl, prodh
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6844 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;Total ram usage:       25 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_RGB2Hue
  6854 ;;		_Left45
  6855 ;;		_Right45
  6856 ;;		_reverseHalfSquare
  6857 ;;		_Yellow_rev1_R90
  6858 ;;		_Pink_rev1_L90
  6859 ;;		_getTimerValue
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text32
  6864   0023FA                     __ptext32:
  6865                           	callstack 0
  6866   0023FA                     ___flmul:
  6867                           	callstack 27
  6868   0023FA  501D               	movf	(___flmul@b+3)^0,w,c
  6869   0023FC  0B80               	andlw	128
  6870   0023FE  6E26               	movwf	___flmul@sign^0,c
  6871   002400  501D               	movf	(___flmul@b+3)^0,w,c
  6872   002402  241D               	addwf	(___flmul@b+3)^0,w,c
  6873   002404  6E2C               	movwf	___flmul@bexp^0,c
  6874   002406  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6875   002408  EF08  F012         	goto	u2071
  6876   00240C  EF0A  F012         	goto	u2070
  6877   002410                     u2071:
  6878   002410  EF0B  F012         	goto	l2994
  6879   002414                     u2070:
  6880   002414  802C               	bsf	___flmul@bexp^0,0,c
  6881   002416                     l2994:
  6882   002416  502C               	movf	___flmul@bexp^0,w,c
  6883   002418  B4D8               	btfsc	status,2,c
  6884   00241A  EF11  F012         	goto	u2081
  6885   00241E  EF13  F012         	goto	u2080
  6886   002422                     u2081:
  6887   002422  EF26  F012         	goto	l3002
  6888   002426                     u2080:
  6889   002426  282C               	incf	___flmul@bexp^0,w,c
  6890   002428  A4D8               	btfss	status,2,c
  6891   00242A  EF19  F012         	goto	u2091
  6892   00242E  EF1B  F012         	goto	u2090
  6893   002432                     u2091:
  6894   002432  EF23  F012         	goto	l3000
  6895   002436                     u2090:
  6896   002436  0E00               	movlw	0
  6897   002438  6E1A               	movwf	___flmul@b^0,c
  6898   00243A  0E00               	movlw	0
  6899   00243C  6E1B               	movwf	(___flmul@b+1)^0,c
  6900   00243E  0E00               	movlw	0
  6901   002440  6E1C               	movwf	(___flmul@b+2)^0,c
  6902   002442  0E00               	movlw	0
  6903   002444  6E1D               	movwf	(___flmul@b+3)^0,c
  6904   002446                     l3000:
  6905   002446  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6906   002448  EF2E  F012         	goto	l3004
  6907   00244C                     l3002:
  6908   00244C  0E00               	movlw	0
  6909   00244E  6E1A               	movwf	___flmul@b^0,c
  6910   002450  0E00               	movlw	0
  6911   002452  6E1B               	movwf	(___flmul@b+1)^0,c
  6912   002454  0E00               	movlw	0
  6913   002456  6E1C               	movwf	(___flmul@b+2)^0,c
  6914   002458  0E00               	movlw	0
  6915   00245A  6E1D               	movwf	(___flmul@b+3)^0,c
  6916   00245C                     l3004:
  6917   00245C  5021               	movf	(___flmul@a+3)^0,w,c
  6918   00245E  0B80               	andlw	128
  6919   002460  1A26               	xorwf	___flmul@sign^0,f,c
  6920   002462  5021               	movf	(___flmul@a+3)^0,w,c
  6921   002464  2421               	addwf	(___flmul@a+3)^0,w,c
  6922   002466  6E2B               	movwf	___flmul@aexp^0,c
  6923   002468  AE20               	btfss	(___flmul@a+2)^0,7,c
  6924   00246A  EF39  F012         	goto	u2101
  6925   00246E  EF3B  F012         	goto	u2100
  6926   002472                     u2101:
  6927   002472  EF3C  F012         	goto	l3012
  6928   002476                     u2100:
  6929   002476  802B               	bsf	___flmul@aexp^0,0,c
  6930   002478                     l3012:
  6931   002478  502B               	movf	___flmul@aexp^0,w,c
  6932   00247A  B4D8               	btfsc	status,2,c
  6933   00247C  EF42  F012         	goto	u2111
  6934   002480  EF44  F012         	goto	u2110
  6935   002484                     u2111:
  6936   002484  EF57  F012         	goto	l3020
  6937   002488                     u2110:
  6938   002488  282B               	incf	___flmul@aexp^0,w,c
  6939   00248A  A4D8               	btfss	status,2,c
  6940   00248C  EF4A  F012         	goto	u2121
  6941   002490  EF4C  F012         	goto	u2120
  6942   002494                     u2121:
  6943   002494  EF54  F012         	goto	l3018
  6944   002498                     u2120:
  6945   002498  0E00               	movlw	0
  6946   00249A  6E1E               	movwf	___flmul@a^0,c
  6947   00249C  0E00               	movlw	0
  6948   00249E  6E1F               	movwf	(___flmul@a+1)^0,c
  6949   0024A0  0E00               	movlw	0
  6950   0024A2  6E20               	movwf	(___flmul@a+2)^0,c
  6951   0024A4  0E00               	movlw	0
  6952   0024A6  6E21               	movwf	(___flmul@a+3)^0,c
  6953   0024A8                     l3018:
  6954   0024A8  8E20               	bsf	(___flmul@a+2)^0,7,c
  6955   0024AA  EF5F  F012         	goto	l1326
  6956   0024AE                     l3020:
  6957   0024AE  0E00               	movlw	0
  6958   0024B0  6E1E               	movwf	___flmul@a^0,c
  6959   0024B2  0E00               	movlw	0
  6960   0024B4  6E1F               	movwf	(___flmul@a+1)^0,c
  6961   0024B6  0E00               	movlw	0
  6962   0024B8  6E20               	movwf	(___flmul@a+2)^0,c
  6963   0024BA  0E00               	movlw	0
  6964   0024BC  6E21               	movwf	(___flmul@a+3)^0,c
  6965   0024BE                     l1326:
  6966   0024BE  502B               	movf	___flmul@aexp^0,w,c
  6967   0024C0  B4D8               	btfsc	status,2,c
  6968   0024C2  EF65  F012         	goto	u2131
  6969   0024C6  EF67  F012         	goto	u2130
  6970   0024CA                     u2131:
  6971   0024CA  EF6F  F012         	goto	l3024
  6972   0024CE                     u2130:
  6973   0024CE  502C               	movf	___flmul@bexp^0,w,c
  6974   0024D0  A4D8               	btfss	status,2,c
  6975   0024D2  EF6D  F012         	goto	u2141
  6976   0024D6  EF6F  F012         	goto	u2140
  6977   0024DA                     u2141:
  6978   0024DA  EF79  F012         	goto	l3028
  6979   0024DE                     u2140:
  6980   0024DE                     l3024:
  6981   0024DE  0E00               	movlw	0
  6982   0024E0  6E1A               	movwf	?___flmul^0,c
  6983   0024E2  0E00               	movlw	0
  6984   0024E4  6E1B               	movwf	(?___flmul+1)^0,c
  6985   0024E6  0E00               	movlw	0
  6986   0024E8  6E1C               	movwf	(?___flmul+2)^0,c
  6987   0024EA  0E00               	movlw	0
  6988   0024EC  6E1D               	movwf	(?___flmul+3)^0,c
  6989   0024EE  EF11  F014         	goto	l1330
  6990   0024F2                     l3028:
  6991   0024F2  5020               	movf	(___flmul@a+2)^0,w,c
  6992   0024F4  021A               	mulwf	___flmul@b^0,c
  6993   0024F6  CFF3 F031          	movff	prodl,___flmul@temp
  6994   0024FA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6995   0024FE  5031               	movf	___flmul@temp^0,w,c
  6996   002500  6E27               	movwf	___flmul@grs^0,c
  6997   002502  6A28               	clrf	(___flmul@grs+1)^0,c
  6998   002504  6A29               	clrf	(___flmul@grs+2)^0,c
  6999   002506  6A2A               	clrf	(___flmul@grs+3)^0,c
  7000   002508  5032               	movf	(___flmul@temp+1)^0,w,c
  7001   00250A  6E2D               	movwf	___flmul@prod^0,c
  7002   00250C  6A2E               	clrf	(___flmul@prod+1)^0,c
  7003   00250E  6A2F               	clrf	(___flmul@prod+2)^0,c
  7004   002510  6A30               	clrf	(___flmul@prod+3)^0,c
  7005   002512  501F               	movf	(___flmul@a+1)^0,w,c
  7006   002514  021B               	mulwf	(___flmul@b+1)^0,c
  7007   002516  CFF3 F031          	movff	prodl,___flmul@temp
  7008   00251A  CFF4 F032          	movff	prodh,___flmul@temp+1
  7009   00251E  5031               	movf	___flmul@temp^0,w,c
  7010   002520  2627               	addwf	___flmul@grs^0,f,c
  7011   002522  0E00               	movlw	0
  7012   002524  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7013   002526  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7014   002528  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7015   00252A  5032               	movf	(___flmul@temp+1)^0,w,c
  7016   00252C  262D               	addwf	___flmul@prod^0,f,c
  7017   00252E  0E00               	movlw	0
  7018   002530  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7019   002532  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7020   002534  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7021   002536  501E               	movf	___flmul@a^0,w,c
  7022   002538  021C               	mulwf	(___flmul@b+2)^0,c
  7023   00253A  CFF3 F031          	movff	prodl,___flmul@temp
  7024   00253E  CFF4 F032          	movff	prodh,___flmul@temp+1
  7025   002542  5031               	movf	___flmul@temp^0,w,c
  7026   002544  2627               	addwf	___flmul@grs^0,f,c
  7027   002546  0E00               	movlw	0
  7028   002548  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7029   00254A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7030   00254C  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7031   00254E  5032               	movf	(___flmul@temp+1)^0,w,c
  7032   002550  262D               	addwf	___flmul@prod^0,f,c
  7033   002552  0E00               	movlw	0
  7034   002554  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7035   002556  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7036   002558  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7037   00255A  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7038   00255E  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7039   002562  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7040   002566  6A27               	clrf	___flmul@grs^0,c
  7041   002568  501E               	movf	___flmul@a^0,w,c
  7042   00256A  021B               	mulwf	(___flmul@b+1)^0,c
  7043   00256C  CFF3 F031          	movff	prodl,___flmul@temp
  7044   002570  CFF4 F032          	movff	prodh,___flmul@temp+1
  7045   002574  5031               	movf	___flmul@temp^0,w,c
  7046   002576  2627               	addwf	___flmul@grs^0,f,c
  7047   002578  5032               	movf	(___flmul@temp+1)^0,w,c
  7048   00257A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7049   00257C  0E00               	movlw	0
  7050   00257E  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7051   002580  0E00               	movlw	0
  7052   002582  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7053   002584  501F               	movf	(___flmul@a+1)^0,w,c
  7054   002586  021A               	mulwf	___flmul@b^0,c
  7055   002588  CFF3 F031          	movff	prodl,___flmul@temp
  7056   00258C  CFF4 F032          	movff	prodh,___flmul@temp+1
  7057   002590  5031               	movf	___flmul@temp^0,w,c
  7058   002592  2627               	addwf	___flmul@grs^0,f,c
  7059   002594  5032               	movf	(___flmul@temp+1)^0,w,c
  7060   002596  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7061   002598  0E00               	movlw	0
  7062   00259A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7063   00259C  0E00               	movlw	0
  7064   00259E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7065   0025A0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7066   0025A4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7067   0025A8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7068   0025AC  6A27               	clrf	___flmul@grs^0,c
  7069   0025AE  501E               	movf	___flmul@a^0,w,c
  7070   0025B0  021A               	mulwf	___flmul@b^0,c
  7071   0025B2  CFF3 F031          	movff	prodl,___flmul@temp
  7072   0025B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  7073   0025BA  5031               	movf	___flmul@temp^0,w,c
  7074   0025BC  2627               	addwf	___flmul@grs^0,f,c
  7075   0025BE  5032               	movf	(___flmul@temp+1)^0,w,c
  7076   0025C0  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7077   0025C2  0E00               	movlw	0
  7078   0025C4  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7079   0025C6  0E00               	movlw	0
  7080   0025C8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7081   0025CA  5020               	movf	(___flmul@a+2)^0,w,c
  7082   0025CC  021B               	mulwf	(___flmul@b+1)^0,c
  7083   0025CE  CFF3 F031          	movff	prodl,___flmul@temp
  7084   0025D2  CFF4 F032          	movff	prodh,___flmul@temp+1
  7085   0025D6  5031               	movf	___flmul@temp^0,w,c
  7086   0025D8  262D               	addwf	___flmul@prod^0,f,c
  7087   0025DA  5032               	movf	(___flmul@temp+1)^0,w,c
  7088   0025DC  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7089   0025DE  0E00               	movlw	0
  7090   0025E0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7091   0025E2  0E00               	movlw	0
  7092   0025E4  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7093   0025E6  501F               	movf	(___flmul@a+1)^0,w,c
  7094   0025E8  021C               	mulwf	(___flmul@b+2)^0,c
  7095   0025EA  CFF3 F031          	movff	prodl,___flmul@temp
  7096   0025EE  CFF4 F032          	movff	prodh,___flmul@temp+1
  7097   0025F2  5031               	movf	___flmul@temp^0,w,c
  7098   0025F4  262D               	addwf	___flmul@prod^0,f,c
  7099   0025F6  5032               	movf	(___flmul@temp+1)^0,w,c
  7100   0025F8  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7101   0025FA  0E00               	movlw	0
  7102   0025FC  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7103   0025FE  0E00               	movlw	0
  7104   002600  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7105   002602  5020               	movf	(___flmul@a+2)^0,w,c
  7106   002604  021C               	mulwf	(___flmul@b+2)^0,c
  7107   002606  CFF3 F031          	movff	prodl,___flmul@temp
  7108   00260A  CFF4 F032          	movff	prodh,___flmul@temp+1
  7109   00260E  5031               	movf	___flmul@temp^0,w,c
  7110   002610  6E22               	movwf	??___flmul^0,c
  7111   002612  5032               	movf	(___flmul@temp+1)^0,w,c
  7112   002614  6E23               	movwf	(??___flmul+1)^0,c
  7113   002616  6A24               	clrf	(??___flmul+2)^0,c
  7114   002618  6A25               	clrf	(??___flmul+3)^0,c
  7115   00261A  C024  F025         	movff	??___flmul+2,??___flmul+3
  7116   00261E  C023  F024         	movff	??___flmul+1,??___flmul+2
  7117   002622  C022  F023         	movff	??___flmul,??___flmul+1
  7118   002626  6A22               	clrf	??___flmul^0,c
  7119   002628  5022               	movf	??___flmul^0,w,c
  7120   00262A  262D               	addwf	___flmul@prod^0,f,c
  7121   00262C  5023               	movf	(??___flmul+1)^0,w,c
  7122   00262E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7123   002630  5024               	movf	(??___flmul+2)^0,w,c
  7124   002632  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7125   002634  5025               	movf	(??___flmul+3)^0,w,c
  7126   002636  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7127   002638  C027  F022         	movff	___flmul@grs,??___flmul
  7128   00263C  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  7129   002640  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  7130   002644  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  7131   002648  0E19               	movlw	25
  7132   00264A  EF2C  F013         	goto	u2150
  7133   00264E                     u2155:
  7134   00264E  90D8               	bcf	status,0,c
  7135   002650  3225               	rrcf	(??___flmul+3)^0,f,c
  7136   002652  3224               	rrcf	(??___flmul+2)^0,f,c
  7137   002654  3223               	rrcf	(??___flmul+1)^0,f,c
  7138   002656  3222               	rrcf	??___flmul^0,f,c
  7139   002658                     u2150:
  7140   002658  2EE8               	decfsz	wreg,f,c
  7141   00265A  EF27  F013         	goto	u2155
  7142   00265E  5022               	movf	??___flmul^0,w,c
  7143   002660  262D               	addwf	___flmul@prod^0,f,c
  7144   002662  5023               	movf	(??___flmul+1)^0,w,c
  7145   002664  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7146   002666  5024               	movf	(??___flmul+2)^0,w,c
  7147   002668  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7148   00266A  5025               	movf	(??___flmul+3)^0,w,c
  7149   00266C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7150   00266E  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7151   002672  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7152   002676  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7153   00267A  6A27               	clrf	___flmul@grs^0,c
  7154   00267C  502B               	movf	___flmul@aexp^0,w,c
  7155   00267E  C02C  F022         	movff	___flmul@bexp,??___flmul
  7156   002682  6A23               	clrf	(??___flmul+1)^0,c
  7157   002684  2622               	addwf	??___flmul^0,f,c
  7158   002686  0E00               	movlw	0
  7159   002688  2223               	addwfc	(??___flmul+1)^0,f,c
  7160   00268A  0E82               	movlw	130
  7161   00268C  2422               	addwf	??___flmul^0,w,c
  7162   00268E  6E31               	movwf	___flmul@temp^0,c
  7163   002690  0EFF               	movlw	255
  7164   002692  2023               	addwfc	(??___flmul+1)^0,w,c
  7165   002694  6E32               	movwf	(___flmul@temp+1)^0,c
  7166   002696  EF62  F013         	goto	l3076
  7167   00269A                     l3070:
  7168   00269A  90D8               	bcf	status,0,c
  7169   00269C  362D               	rlcf	___flmul@prod^0,f,c
  7170   00269E  362E               	rlcf	(___flmul@prod+1)^0,f,c
  7171   0026A0  362F               	rlcf	(___flmul@prod+2)^0,f,c
  7172   0026A2  3630               	rlcf	(___flmul@prod+3)^0,f,c
  7173   0026A4  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7174   0026A6  EF57  F013         	goto	u2161
  7175   0026AA  EF59  F013         	goto	u2160
  7176   0026AE                     u2161:
  7177   0026AE  EF5A  F013         	goto	l1333
  7178   0026B2                     u2160:
  7179   0026B2  802D               	bsf	___flmul@prod^0,0,c
  7180   0026B4                     l1333:
  7181   0026B4  90D8               	bcf	status,0,c
  7182   0026B6  3627               	rlcf	___flmul@grs^0,f,c
  7183   0026B8  3628               	rlcf	(___flmul@grs+1)^0,f,c
  7184   0026BA  3629               	rlcf	(___flmul@grs+2)^0,f,c
  7185   0026BC  362A               	rlcf	(___flmul@grs+3)^0,f,c
  7186   0026BE  0631               	decf	___flmul@temp^0,f,c
  7187   0026C0  A0D8               	btfss	status,0,c
  7188   0026C2  0632               	decf	(___flmul@temp+1)^0,f,c
  7189   0026C4                     l3076:
  7190   0026C4  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  7191   0026C6  EF67  F013         	goto	u2171
  7192   0026CA  EF69  F013         	goto	u2170
  7193   0026CE                     u2171:
  7194   0026CE  EF4D  F013         	goto	l3070
  7195   0026D2                     u2170:
  7196   0026D2  0E00               	movlw	0
  7197   0026D4  6E2B               	movwf	___flmul@aexp^0,c
  7198   0026D6  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7199   0026D8  EF70  F013         	goto	u2181
  7200   0026DC  EF72  F013         	goto	u2180
  7201   0026E0                     u2181:
  7202   0026E0  EF96  F013         	goto	l1335
  7203   0026E4                     u2180:
  7204   0026E4  0EFF               	movlw	255
  7205   0026E6  1427               	andwf	___flmul@grs^0,w,c
  7206   0026E8  6E22               	movwf	??___flmul^0,c
  7207   0026EA  0EFF               	movlw	255
  7208   0026EC  1428               	andwf	(___flmul@grs+1)^0,w,c
  7209   0026EE  6E23               	movwf	(??___flmul+1)^0,c
  7210   0026F0  0EFF               	movlw	255
  7211   0026F2  1429               	andwf	(___flmul@grs+2)^0,w,c
  7212   0026F4  6E24               	movwf	(??___flmul+2)^0,c
  7213   0026F6  0E7F               	movlw	127
  7214   0026F8  142A               	andwf	(___flmul@grs+3)^0,w,c
  7215   0026FA  6E25               	movwf	(??___flmul+3)^0,c
  7216   0026FC  5022               	movf	??___flmul^0,w,c
  7217   0026FE  1023               	iorwf	(??___flmul+1)^0,w,c
  7218   002700  1024               	iorwf	(??___flmul+2)^0,w,c
  7219   002702  1025               	iorwf	(??___flmul+3)^0,w,c
  7220   002704  B4D8               	btfsc	status,2,c
  7221   002706  EF87  F013         	goto	u2191
  7222   00270A  EF89  F013         	goto	u2190
  7223   00270E                     u2191:
  7224   00270E  EF8D  F013         	goto	l1336
  7225   002712                     u2190:
  7226   002712                     l3084:
  7227   002712  0E01               	movlw	1
  7228   002714  6E2B               	movwf	___flmul@aexp^0,c
  7229   002716  EF96  F013         	goto	l1335
  7230   00271A                     l1336:
  7231   00271A  A02D               	btfss	___flmul@prod^0,0,c
  7232   00271C  EF92  F013         	goto	u2201
  7233   002720  EF94  F013         	goto	u2200
  7234   002724                     u2201:
  7235   002724  EF96  F013         	goto	l1335
  7236   002728                     u2200:
  7237   002728  EF89  F013         	goto	l3084
  7238   00272C                     l1335:
  7239   00272C  502B               	movf	___flmul@aexp^0,w,c
  7240   00272E  B4D8               	btfsc	status,2,c
  7241   002730  EF9C  F013         	goto	u2211
  7242   002734  EF9E  F013         	goto	u2210
  7243   002738                     u2211:
  7244   002738  EFC2  F013         	goto	l3096
  7245   00273C                     u2210:
  7246   00273C  0E01               	movlw	1
  7247   00273E  262D               	addwf	___flmul@prod^0,f,c
  7248   002740  0E00               	movlw	0
  7249   002742  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7250   002744  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7251   002746  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7252   002748  A030               	btfss	(___flmul@prod+3)^0,0,c
  7253   00274A  EFA9  F013         	goto	u2221
  7254   00274E  EFAB  F013         	goto	u2220
  7255   002752                     u2221:
  7256   002752  EFC2  F013         	goto	l3096
  7257   002756                     u2220:
  7258   002756  C02D  F022         	movff	___flmul@prod,??___flmul
  7259   00275A  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  7260   00275E  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  7261   002762  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  7262   002766  3425               	rlcf	(??___flmul+3)^0,w,c
  7263   002768  3225               	rrcf	(??___flmul+3)^0,f,c
  7264   00276A  3224               	rrcf	(??___flmul+2)^0,f,c
  7265   00276C  3223               	rrcf	(??___flmul+1)^0,f,c
  7266   00276E  3222               	rrcf	??___flmul^0,f,c
  7267   002770  C022  F02D         	movff	??___flmul,___flmul@prod
  7268   002774  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  7269   002778  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  7270   00277C  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  7271   002780  4A31               	infsnz	___flmul@temp^0,f,c
  7272   002782  2A32               	incf	(___flmul@temp+1)^0,f,c
  7273   002784                     l3096:
  7274   002784  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7275   002786  EFCD  F013         	goto	u2231
  7276   00278A  5032               	movf	(___flmul@temp+1)^0,w,c
  7277   00278C  E108               	bnz	u2230
  7278   00278E  2831               	incf	___flmul@temp^0,w,c
  7279   002790  A0D8               	btfss	status,0,c
  7280   002792  EFCD  F013         	goto	u2231
  7281   002796  EFCF  F013         	goto	u2230
  7282   00279A                     u2231:
  7283   00279A  EFD9  F013         	goto	l3100
  7284   00279E                     u2230:
  7285   00279E  0E00               	movlw	0
  7286   0027A0  6E2D               	movwf	___flmul@prod^0,c
  7287   0027A2  0E00               	movlw	0
  7288   0027A4  6E2E               	movwf	(___flmul@prod+1)^0,c
  7289   0027A6  0E80               	movlw	128
  7290   0027A8  6E2F               	movwf	(___flmul@prod+2)^0,c
  7291   0027AA  0E7F               	movlw	127
  7292   0027AC  6E30               	movwf	(___flmul@prod+3)^0,c
  7293   0027AE  EF07  F014         	goto	l3112
  7294   0027B2                     l3100:
  7295   0027B2  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7296   0027B4  EFE6  F013         	goto	u2240
  7297   0027B8  5032               	movf	(___flmul@temp+1)^0,w,c
  7298   0027BA  E106               	bnz	u2241
  7299   0027BC  0431               	decf	___flmul@temp^0,w,c
  7300   0027BE  B0D8               	btfsc	status,0,c
  7301   0027C0  EFE4  F013         	goto	u2241
  7302   0027C4  EFE6  F013         	goto	u2240
  7303   0027C8                     u2241:
  7304   0027C8  EFF2  F013         	goto	l1343
  7305   0027CC                     u2240:
  7306   0027CC  0E00               	movlw	0
  7307   0027CE  6E2D               	movwf	___flmul@prod^0,c
  7308   0027D0  0E00               	movlw	0
  7309   0027D2  6E2E               	movwf	(___flmul@prod+1)^0,c
  7310   0027D4  0E00               	movlw	0
  7311   0027D6  6E2F               	movwf	(___flmul@prod+2)^0,c
  7312   0027D8  0E00               	movlw	0
  7313   0027DA  6E30               	movwf	(___flmul@prod+3)^0,c
  7314   0027DC  0E00               	movlw	0
  7315   0027DE  6E26               	movwf	___flmul@sign^0,c
  7316   0027E0  EF07  F014         	goto	l3112
  7317   0027E4                     l1343:
  7318   0027E4  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  7319   0027E8  0EFF               	movlw	255
  7320   0027EA  162D               	andwf	___flmul@prod^0,f,c
  7321   0027EC  0EFF               	movlw	255
  7322   0027EE  162E               	andwf	(___flmul@prod+1)^0,f,c
  7323   0027F0  0E7F               	movlw	127
  7324   0027F2  162F               	andwf	(___flmul@prod+2)^0,f,c
  7325   0027F4  0E00               	movlw	0
  7326   0027F6  1630               	andwf	(___flmul@prod+3)^0,f,c
  7327   0027F8  A02C               	btfss	___flmul@bexp^0,0,c
  7328   0027FA  EF01  F014         	goto	u2251
  7329   0027FE  EF03  F014         	goto	u2250
  7330   002802                     u2251:
  7331   002802  EF04  F014         	goto	l3110
  7332   002806                     u2250:
  7333   002806  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  7334   002808                     l3110:
  7335   002808  90D8               	bcf	status,0,c
  7336   00280A  302C               	rrcf	___flmul@bexp^0,w,c
  7337   00280C  6E30               	movwf	(___flmul@prod+3)^0,c
  7338   00280E                     l3112:
  7339   00280E  5026               	movf	___flmul@sign^0,w,c
  7340   002810  1230               	iorwf	(___flmul@prod+3)^0,f,c
  7341   002812  C02D  F01A         	movff	___flmul@prod,?___flmul
  7342   002816  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  7343   00281A  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  7344   00281E  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  7345   002822                     l1330:
  7346   002822  0012               	return		;funcret
  7347   002824                     __end_of___flmul:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _fullSpeedAhead *****************
  7351 ;; Defined at:
  7352 ;;		line 157 in file "dc_motor.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7355 ;;		 -> motorL(9), 
  7356 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7357 ;;		 -> motorR(9), 
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;  i               2   24[COMRAM] unsigned int 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;Total ram usage:        7 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 3
  7376 ;; This function calls:
  7377 ;;		_setMotorPWM
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;;		_White
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text33
  7385   003E7C                     __ptext33:
  7386                           	callstack 0
  7387   003E7C                     _fullSpeedAhead:
  7388                           	callstack 27
  7389   003E7C                     
  7390                           ;dc_motor.c: 157: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 158: {;dc_motor.c: 159:  (mL->direction) = 1;
  7391   003E7C  EE20 F001          	lfsr	2,1
  7392   003E80  5014               	movf	fullSpeedAhead@mL^0,w,c
  7393   003E82  26D9               	addwf	fsr2l,f,c
  7394   003E84  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7395   003E86  22DA               	addwfc	fsr2h,f,c
  7396   003E88  0E01               	movlw	1
  7397   003E8A  6EDF               	movwf	indf2,c
  7398                           
  7399                           ;dc_motor.c: 160:  (mR->direction) = 1;
  7400   003E8C  EE20 F001          	lfsr	2,1
  7401   003E90  5016               	movf	fullSpeedAhead@mR^0,w,c
  7402   003E92  26D9               	addwf	fsr2l,f,c
  7403   003E94  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7404   003E96  22DA               	addwfc	fsr2h,f,c
  7405   003E98  0E01               	movlw	1
  7406   003E9A  6EDF               	movwf	indf2,c
  7407   003E9C                     
  7408                           ;dc_motor.c: 162:     for (unsigned int i = 0; i <30; i++)
  7409   003E9C  0E00               	movlw	0
  7410   003E9E  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7411   003EA0  0E00               	movlw	0
  7412   003EA2  6E19               	movwf	fullSpeedAhead@i^0,c
  7413   003EA4                     l3258:
  7414                           
  7415                           ;dc_motor.c: 163:     {;dc_motor.c: 164:         (mL->power)++;
  7416   003EA4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7417   003EA8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7418   003EAC  2ADF               	incf	indf2,f,c
  7419                           
  7420                           ;dc_motor.c: 165:         (mR->power)++;
  7421   003EAE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7422   003EB2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7423   003EB6  2ADF               	incf	indf2,f,c
  7424   003EB8                     
  7425                           ;dc_motor.c: 166:         setMotorPWM(mL);
  7426   003EB8  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7427   003EBC  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7428   003EC0  ECE4  F019         	call	_setMotorPWM	;wreg free
  7429   003EC4                     
  7430                           ;dc_motor.c: 167:         setMotorPWM(mR);
  7431   003EC4  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7432   003EC8  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7433   003ECC  ECE4  F019         	call	_setMotorPWM	;wreg free
  7434   003ED0                     
  7435                           ;dc_motor.c: 168:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7436   003ED0  0E09               	movlw	9
  7437   003ED2  6E18               	movwf	??_fullSpeedAhead^0,c
  7438   003ED4  0E4E               	movlw	78
  7439   003ED6                     u3887:
  7440   003ED6  2EE8               	decfsz	wreg,f,c
  7441   003ED8  D7FE               	bra	u3887
  7442   003EDA  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7443   003EDC  D7FC               	bra	u3887
  7444   003EDE  D000               	nop2	
  7445   003EE0                     
  7446                           ;dc_motor.c: 169:     }
  7447   003EE0  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7448   003EE2  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7449   003EE4  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7450   003EE6  E109               	bnz	u2450
  7451   003EE8  0E1E               	movlw	30
  7452   003EEA  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7453   003EEC  A0D8               	btfss	status,0,c
  7454   003EEE  EF7B  F01F         	goto	u2451
  7455   003EF2  EF7D  F01F         	goto	u2450
  7456   003EF6                     u2451:
  7457   003EF6  EF52  F01F         	goto	l3258
  7458   003EFA                     u2450:
  7459   003EFA  0012               	return		;funcret
  7460   003EFC                     __end_of_fullSpeedAhead:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function ___flge *****************
  7464 ;; Defined at:
  7465 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  ff1             4   74[COMRAM] void 
  7468 ;;  ff2             4   78[COMRAM] void 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;		None               void
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;Total ram usage:       12 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_RGB2Hue
  7491 ;;		_Hue2Colour
  7492 ;;		_main
  7493 ;;		_White
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text34
  7498   00363A                     __ptext34:
  7499                           	callstack 0
  7500   00363A                     ___flge:
  7501                           	callstack 29
  7502   00363A  0E00               	movlw	0
  7503   00363C  144B               	andwf	___flge@ff1^0,w,c
  7504   00363E  6E53               	movwf	??___flge^0,c
  7505   003640  0E00               	movlw	0
  7506   003642  144C               	andwf	(___flge@ff1+1)^0,w,c
  7507   003644  6E54               	movwf	(??___flge+1)^0,c
  7508   003646  0E80               	movlw	128
  7509   003648  144D               	andwf	(___flge@ff1+2)^0,w,c
  7510   00364A  6E55               	movwf	(??___flge+2)^0,c
  7511   00364C  0E7F               	movlw	127
  7512   00364E  144E               	andwf	(___flge@ff1+3)^0,w,c
  7513   003650  6E56               	movwf	(??___flge+3)^0,c
  7514   003652  5053               	movf	??___flge^0,w,c
  7515   003654  1054               	iorwf	(??___flge+1)^0,w,c
  7516   003656  1055               	iorwf	(??___flge+2)^0,w,c
  7517   003658  1056               	iorwf	(??___flge+3)^0,w,c
  7518   00365A  A4D8               	btfss	status,2,c
  7519   00365C  EF32  F01B         	goto	u2851
  7520   003660  EF34  F01B         	goto	u2850
  7521   003664                     u2851:
  7522   003664  EF3C  F01B         	goto	l3492
  7523   003668                     u2850:
  7524   003668  0E00               	movlw	0
  7525   00366A  6E4B               	movwf	___flge@ff1^0,c
  7526   00366C  0E00               	movlw	0
  7527   00366E  6E4C               	movwf	(___flge@ff1+1)^0,c
  7528   003670  0E00               	movlw	0
  7529   003672  6E4D               	movwf	(___flge@ff1+2)^0,c
  7530   003674  0E00               	movlw	0
  7531   003676  6E4E               	movwf	(___flge@ff1+3)^0,c
  7532   003678                     l3492:
  7533   003678  0E00               	movlw	0
  7534   00367A  144F               	andwf	___flge@ff2^0,w,c
  7535   00367C  6E53               	movwf	??___flge^0,c
  7536   00367E  0E00               	movlw	0
  7537   003680  1450               	andwf	(___flge@ff2+1)^0,w,c
  7538   003682  6E54               	movwf	(??___flge+1)^0,c
  7539   003684  0E80               	movlw	128
  7540   003686  1451               	andwf	(___flge@ff2+2)^0,w,c
  7541   003688  6E55               	movwf	(??___flge+2)^0,c
  7542   00368A  0E7F               	movlw	127
  7543   00368C  1452               	andwf	(___flge@ff2+3)^0,w,c
  7544   00368E  6E56               	movwf	(??___flge+3)^0,c
  7545   003690  5053               	movf	??___flge^0,w,c
  7546   003692  1054               	iorwf	(??___flge+1)^0,w,c
  7547   003694  1055               	iorwf	(??___flge+2)^0,w,c
  7548   003696  1056               	iorwf	(??___flge+3)^0,w,c
  7549   003698  A4D8               	btfss	status,2,c
  7550   00369A  EF51  F01B         	goto	u2861
  7551   00369E  EF53  F01B         	goto	u2860
  7552   0036A2                     u2861:
  7553   0036A2  EF5B  F01B         	goto	l3496
  7554   0036A6                     u2860:
  7555   0036A6  0E00               	movlw	0
  7556   0036A8  6E4F               	movwf	___flge@ff2^0,c
  7557   0036AA  0E00               	movlw	0
  7558   0036AC  6E50               	movwf	(___flge@ff2+1)^0,c
  7559   0036AE  0E00               	movlw	0
  7560   0036B0  6E51               	movwf	(___flge@ff2+2)^0,c
  7561   0036B2  0E00               	movlw	0
  7562   0036B4  6E52               	movwf	(___flge@ff2+3)^0,c
  7563   0036B6                     l3496:
  7564   0036B6  AE4E               	btfss	(___flge@ff1+3)^0,7,c
  7565   0036B8  EF60  F01B         	goto	u2871
  7566   0036BC  EF62  F01B         	goto	u2870
  7567   0036C0                     u2871:
  7568   0036C0  EF6B  F01B         	goto	l3500
  7569   0036C4                     u2870:
  7570   0036C4  6C4B               	negf	___flge@ff1^0,c
  7571   0036C6  1E4C               	comf	(___flge@ff1+1)^0,f,c
  7572   0036C8  B0D8               	btfsc	status,0,c
  7573   0036CA  2A4C               	incf	(___flge@ff1+1)^0,f,c
  7574   0036CC  1E4D               	comf	(___flge@ff1+2)^0,f,c
  7575   0036CE  B0D8               	btfsc	status,0,c
  7576   0036D0  2A4D               	incf	(___flge@ff1+2)^0,f,c
  7577   0036D2  0E80               	movlw	128
  7578   0036D4  564E               	subfwb	(___flge@ff1+3)^0,f,c
  7579   0036D6                     l3500:
  7580   0036D6  AE52               	btfss	(___flge@ff2+3)^0,7,c
  7581   0036D8  EF70  F01B         	goto	u2881
  7582   0036DC  EF72  F01B         	goto	u2880
  7583   0036E0                     u2881:
  7584   0036E0  EF7B  F01B         	goto	l977
  7585   0036E4                     u2880:
  7586   0036E4  6C4F               	negf	___flge@ff2^0,c
  7587   0036E6  1E50               	comf	(___flge@ff2+1)^0,f,c
  7588   0036E8  B0D8               	btfsc	status,0,c
  7589   0036EA  2A50               	incf	(___flge@ff2+1)^0,f,c
  7590   0036EC  1E51               	comf	(___flge@ff2+2)^0,f,c
  7591   0036EE  B0D8               	btfsc	status,0,c
  7592   0036F0  2A51               	incf	(___flge@ff2+2)^0,f,c
  7593   0036F2  0E80               	movlw	128
  7594   0036F4  5652               	subfwb	(___flge@ff2+3)^0,f,c
  7595   0036F6                     l977:
  7596   0036F6  0E00               	movlw	0
  7597   0036F8  1A4B               	xorwf	___flge@ff1^0,f,c
  7598   0036FA  0E00               	movlw	0
  7599   0036FC  1A4C               	xorwf	(___flge@ff1+1)^0,f,c
  7600   0036FE  0E00               	movlw	0
  7601   003700  1A4D               	xorwf	(___flge@ff1+2)^0,f,c
  7602   003702  0E80               	movlw	128
  7603   003704  1A4E               	xorwf	(___flge@ff1+3)^0,f,c
  7604   003706  0E00               	movlw	0
  7605   003708  1A4F               	xorwf	___flge@ff2^0,f,c
  7606   00370A  0E00               	movlw	0
  7607   00370C  1A50               	xorwf	(___flge@ff2+1)^0,f,c
  7608   00370E  0E00               	movlw	0
  7609   003710  1A51               	xorwf	(___flge@ff2+2)^0,f,c
  7610   003712  0E80               	movlw	128
  7611   003714  1A52               	xorwf	(___flge@ff2+3)^0,f,c
  7612   003716  504F               	movf	___flge@ff2^0,w,c
  7613   003718  5C4B               	subwf	___flge@ff1^0,w,c
  7614   00371A  5050               	movf	(___flge@ff2+1)^0,w,c
  7615   00371C  584C               	subwfb	(___flge@ff1+1)^0,w,c
  7616   00371E  5051               	movf	(___flge@ff2+2)^0,w,c
  7617   003720  584D               	subwfb	(___flge@ff1+2)^0,w,c
  7618   003722  5052               	movf	(___flge@ff2+3)^0,w,c
  7619   003724  584E               	subwfb	(___flge@ff1+3)^0,w,c
  7620   003726  B0D8               	btfsc	status,0,c
  7621   003728  EF98  F01B         	goto	u2891
  7622   00372C  EF9A  F01B         	goto	u2890
  7623   003730                     u2891:
  7624   003730  EF9D  F01B         	goto	l3506
  7625   003734                     u2890:
  7626   003734  90D8               	bcf	status,0,c
  7627   003736  EF9E  F01B         	goto	l982
  7628   00373A                     l3506:
  7629   00373A  80D8               	bsf	status,0,c
  7630   00373C                     l982:
  7631   00373C  0012               	return		;funcret
  7632   00373E                     __end_of___flge:
  7633                           	callstack 0
  7634                           
  7635 ;; *************** function ___fladd *****************
  7636 ;; Defined at:
  7637 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  b               4   58[COMRAM] void 
  7640 ;;  a               4   62[COMRAM] void 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  grs             1   73[COMRAM] unsigned char 
  7643 ;;  bexp            1   72[COMRAM] unsigned char 
  7644 ;;  aexp            1   71[COMRAM] unsigned char 
  7645 ;;  signs           1   70[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  4   58[COMRAM] unsigned char 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7655 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;Total ram usage:       16 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_colour_read_all
  7666 ;;		_RGB2Hue
  7667 ;;		_White
  7668 ;;		___flsub
  7669 ;;		_memoryUpdateTime
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text35
  7674   001A94                     __ptext35:
  7675                           	callstack 0
  7676   001A94                     ___fladd:
  7677                           	callstack 28
  7678   001A94  503E               	movf	(___fladd@b+3)^0,w,c
  7679   001A96  0B80               	andlw	128
  7680   001A98  6E47               	movwf	___fladd@signs^0,c
  7681   001A9A  503E               	movf	(___fladd@b+3)^0,w,c
  7682   001A9C  243E               	addwf	(___fladd@b+3)^0,w,c
  7683   001A9E  6E49               	movwf	___fladd@bexp^0,c
  7684   001AA0  AE3D               	btfss	(___fladd@b+2)^0,7,c
  7685   001AA2  EF55  F00D         	goto	u2461
  7686   001AA6  EF57  F00D         	goto	u2460
  7687   001AAA                     u2461:
  7688   001AAA  EF58  F00D         	goto	l3292
  7689   001AAE                     u2460:
  7690   001AAE  8049               	bsf	___fladd@bexp^0,0,c
  7691   001AB0                     l3292:
  7692   001AB0  5049               	movf	___fladd@bexp^0,w,c
  7693   001AB2  B4D8               	btfsc	status,2,c
  7694   001AB4  EF5E  F00D         	goto	u2471
  7695   001AB8  EF60  F00D         	goto	u2470
  7696   001ABC                     u2471:
  7697   001ABC  EF75  F00D         	goto	l3302
  7698   001AC0                     u2470:
  7699   001AC0  2849               	incf	___fladd@bexp^0,w,c
  7700   001AC2  A4D8               	btfss	status,2,c
  7701   001AC4  EF66  F00D         	goto	u2481
  7702   001AC8  EF68  F00D         	goto	u2480
  7703   001ACC                     u2481:
  7704   001ACC  EF70  F00D         	goto	l3298
  7705   001AD0                     u2480:
  7706   001AD0  0E00               	movlw	0
  7707   001AD2  6E3B               	movwf	___fladd@b^0,c
  7708   001AD4  0E00               	movlw	0
  7709   001AD6  6E3C               	movwf	(___fladd@b+1)^0,c
  7710   001AD8  0E00               	movlw	0
  7711   001ADA  6E3D               	movwf	(___fladd@b+2)^0,c
  7712   001ADC  0E00               	movlw	0
  7713   001ADE  6E3E               	movwf	(___fladd@b+3)^0,c
  7714   001AE0                     l3298:
  7715   001AE0  8E3D               	bsf	(___fladd@b+2)^0,7,c
  7716   001AE2  0E00               	movlw	0
  7717   001AE4  6E3E               	movwf	(___fladd@b+3)^0,c
  7718   001AE6  EF7D  F00D         	goto	l3304
  7719   001AEA                     l3302:
  7720   001AEA  0E00               	movlw	0
  7721   001AEC  6E3B               	movwf	___fladd@b^0,c
  7722   001AEE  0E00               	movlw	0
  7723   001AF0  6E3C               	movwf	(___fladd@b+1)^0,c
  7724   001AF2  0E00               	movlw	0
  7725   001AF4  6E3D               	movwf	(___fladd@b+2)^0,c
  7726   001AF6  0E00               	movlw	0
  7727   001AF8  6E3E               	movwf	(___fladd@b+3)^0,c
  7728   001AFA                     l3304:
  7729   001AFA  5042               	movf	(___fladd@a+3)^0,w,c
  7730   001AFC  0B80               	andlw	128
  7731   001AFE  6E48               	movwf	___fladd@aexp^0,c
  7732   001B00  5047               	movf	___fladd@signs^0,w,c
  7733   001B02  1848               	xorwf	___fladd@aexp^0,w,c
  7734   001B04  B4D8               	btfsc	status,2,c
  7735   001B06  EF87  F00D         	goto	u2491
  7736   001B0A  EF89  F00D         	goto	u2490
  7737   001B0E                     u2491:
  7738   001B0E  EF8A  F00D         	goto	l3310
  7739   001B12                     u2490:
  7740   001B12  8C47               	bsf	___fladd@signs^0,6,c
  7741   001B14                     l3310:
  7742   001B14  5042               	movf	(___fladd@a+3)^0,w,c
  7743   001B16  2442               	addwf	(___fladd@a+3)^0,w,c
  7744   001B18  6E48               	movwf	___fladd@aexp^0,c
  7745   001B1A  AE41               	btfss	(___fladd@a+2)^0,7,c
  7746   001B1C  EF92  F00D         	goto	u2501
  7747   001B20  EF94  F00D         	goto	u2500
  7748   001B24                     u2501:
  7749   001B24  EF95  F00D         	goto	l3316
  7750   001B28                     u2500:
  7751   001B28  8048               	bsf	___fladd@aexp^0,0,c
  7752   001B2A                     l3316:
  7753   001B2A  5048               	movf	___fladd@aexp^0,w,c
  7754   001B2C  B4D8               	btfsc	status,2,c
  7755   001B2E  EF9B  F00D         	goto	u2511
  7756   001B32  EF9D  F00D         	goto	u2510
  7757   001B36                     u2511:
  7758   001B36  EFB2  F00D         	goto	l3326
  7759   001B3A                     u2510:
  7760   001B3A  2848               	incf	___fladd@aexp^0,w,c
  7761   001B3C  A4D8               	btfss	status,2,c
  7762   001B3E  EFA3  F00D         	goto	u2521
  7763   001B42  EFA5  F00D         	goto	u2520
  7764   001B46                     u2521:
  7765   001B46  EFAD  F00D         	goto	l3322
  7766   001B4A                     u2520:
  7767   001B4A  0E00               	movlw	0
  7768   001B4C  6E3F               	movwf	___fladd@a^0,c
  7769   001B4E  0E00               	movlw	0
  7770   001B50  6E40               	movwf	(___fladd@a+1)^0,c
  7771   001B52  0E00               	movlw	0
  7772   001B54  6E41               	movwf	(___fladd@a+2)^0,c
  7773   001B56  0E00               	movlw	0
  7774   001B58  6E42               	movwf	(___fladd@a+3)^0,c
  7775   001B5A                     l3322:
  7776   001B5A  8E41               	bsf	(___fladd@a+2)^0,7,c
  7777   001B5C  0E00               	movlw	0
  7778   001B5E  6E42               	movwf	(___fladd@a+3)^0,c
  7779   001B60  EFBA  F00D         	goto	l3328
  7780   001B64                     l3326:
  7781   001B64  0E00               	movlw	0
  7782   001B66  6E3F               	movwf	___fladd@a^0,c
  7783   001B68  0E00               	movlw	0
  7784   001B6A  6E40               	movwf	(___fladd@a+1)^0,c
  7785   001B6C  0E00               	movlw	0
  7786   001B6E  6E41               	movwf	(___fladd@a+2)^0,c
  7787   001B70  0E00               	movlw	0
  7788   001B72  6E42               	movwf	(___fladd@a+3)^0,c
  7789   001B74                     l3328:
  7790   001B74  5049               	movf	___fladd@bexp^0,w,c
  7791   001B76  5C48               	subwf	___fladd@aexp^0,w,c
  7792   001B78  B0D8               	btfsc	status,0,c
  7793   001B7A  EFC1  F00D         	goto	u2531
  7794   001B7E  EFC3  F00D         	goto	u2530
  7795   001B82                     u2531:
  7796   001B82  EFEA  F00D         	goto	l3364
  7797   001B86                     u2530:
  7798   001B86  AC47               	btfss	___fladd@signs^0,6,c
  7799   001B88  EFC8  F00D         	goto	u2541
  7800   001B8C  EFCA  F00D         	goto	u2540
  7801   001B90                     u2541:
  7802   001B90  EFCC  F00D         	goto	l3334
  7803   001B94                     u2540:
  7804   001B94  0E80               	movlw	128
  7805   001B96  1A47               	xorwf	___fladd@signs^0,f,c
  7806   001B98                     l3334:
  7807   001B98  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  7808   001B9C  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7809   001BA0  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  7810   001BA4  C03B  F04A         	movff	___fladd@b,___fladd@grs
  7811   001BA8  C03F  F03B         	movff	___fladd@a,___fladd@b
  7812   001BAC  C04A  F03F         	movff	___fladd@grs,___fladd@a
  7813   001BB0  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  7814   001BB4  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  7815   001BB8  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  7816   001BBC  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  7817   001BC0  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  7818   001BC4  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  7819   001BC8  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  7820   001BCC  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  7821   001BD0  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  7822   001BD4                     l3364:
  7823   001BD4  0E00               	movlw	0
  7824   001BD6  6E4A               	movwf	___fladd@grs^0,c
  7825   001BD8  5049               	movf	___fladd@bexp^0,w,c
  7826   001BDA  C048  F043         	movff	___fladd@aexp,??___fladd
  7827   001BDE  6A44               	clrf	(??___fladd+1)^0,c
  7828   001BE0  5E43               	subwf	??___fladd^0,f,c
  7829   001BE2  0E00               	movlw	0
  7830   001BE4  5A44               	subwfb	(??___fladd+1)^0,f,c
  7831   001BE6  BE44               	btfsc	(??___fladd+1)^0,7,c
  7832   001BE8  EFFF  F00D         	goto	u2551
  7833   001BEC  5044               	movf	(??___fladd+1)^0,w,c
  7834   001BEE  E109               	bnz	u2550
  7835   001BF0  0E1A               	movlw	26
  7836   001BF2  5C43               	subwf	??___fladd^0,w,c
  7837   001BF4  A0D8               	btfss	status,0,c
  7838   001BF6  EFFF  F00D         	goto	u2551
  7839   001BFA  EF01  F00E         	goto	u2550
  7840   001BFE                     u2551:
  7841   001BFE  EF38  F00E         	goto	l1241
  7842   001C02                     u2550:
  7843   001C02  503B               	movf	___fladd@b^0,w,c
  7844   001C04  103C               	iorwf	(___fladd@b+1)^0,w,c
  7845   001C06  103D               	iorwf	(___fladd@b+2)^0,w,c
  7846   001C08  103E               	iorwf	(___fladd@b+3)^0,w,c
  7847   001C0A  A4D8               	btfss	status,2,c
  7848   001C0C  EF0A  F00E         	goto	u2561
  7849   001C10  EF0D  F00E         	goto	u2560
  7850   001C14                     u2561:
  7851   001C14  0E01               	movlw	1
  7852   001C16  EF0E  F00E         	goto	u2570
  7853   001C1A                     u2560:
  7854   001C1A  0E00               	movlw	0
  7855   001C1C                     u2570:
  7856   001C1C  6E4A               	movwf	___fladd@grs^0,c
  7857   001C1E  0E00               	movlw	0
  7858   001C20  6E3B               	movwf	___fladd@b^0,c
  7859   001C22  0E00               	movlw	0
  7860   001C24  6E3C               	movwf	(___fladd@b+1)^0,c
  7861   001C26  0E00               	movlw	0
  7862   001C28  6E3D               	movwf	(___fladd@b+2)^0,c
  7863   001C2A  0E00               	movlw	0
  7864   001C2C  6E3E               	movwf	(___fladd@b+3)^0,c
  7865   001C2E  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7866   001C32  EF41  F00E         	goto	l1240
  7867   001C36                     l1242:
  7868   001C36  A04A               	btfss	___fladd@grs^0,0,c
  7869   001C38  EF20  F00E         	goto	u2581
  7870   001C3C  EF22  F00E         	goto	u2580
  7871   001C40                     u2581:
  7872   001C40  EF28  F00E         	goto	l3376
  7873   001C44                     u2580:
  7874   001C44  90D8               	bcf	status,0,c
  7875   001C46  304A               	rrcf	___fladd@grs^0,w,c
  7876   001C48  0901               	iorlw	1
  7877   001C4A  6E4A               	movwf	___fladd@grs^0,c
  7878   001C4C  EF2A  F00E         	goto	l3378
  7879   001C50                     l3376:
  7880   001C50  90D8               	bcf	status,0,c
  7881   001C52  324A               	rrcf	___fladd@grs^0,f,c
  7882   001C54                     l3378:
  7883   001C54  A03B               	btfss	___fladd@b^0,0,c
  7884   001C56  EF2F  F00E         	goto	u2591
  7885   001C5A  EF31  F00E         	goto	u2590
  7886   001C5E                     u2591:
  7887   001C5E  EF32  F00E         	goto	l3382
  7888   001C62                     u2590:
  7889   001C62  8E4A               	bsf	___fladd@grs^0,7,c
  7890   001C64                     l3382:
  7891   001C64  343E               	rlcf	(___fladd@b+3)^0,w,c
  7892   001C66  323E               	rrcf	(___fladd@b+3)^0,f,c
  7893   001C68  323D               	rrcf	(___fladd@b+2)^0,f,c
  7894   001C6A  323C               	rrcf	(___fladd@b+1)^0,f,c
  7895   001C6C  323B               	rrcf	___fladd@b^0,f,c
  7896   001C6E  2A49               	incf	___fladd@bexp^0,f,c
  7897   001C70                     l1241:
  7898   001C70  5048               	movf	___fladd@aexp^0,w,c
  7899   001C72  5C49               	subwf	___fladd@bexp^0,w,c
  7900   001C74  A0D8               	btfss	status,0,c
  7901   001C76  EF3F  F00E         	goto	u2601
  7902   001C7A  EF41  F00E         	goto	u2600
  7903   001C7E                     u2601:
  7904   001C7E  EF1B  F00E         	goto	l1242
  7905   001C82                     u2600:
  7906   001C82                     l1240:
  7907   001C82  BC47               	btfsc	___fladd@signs^0,6,c
  7908   001C84  EF46  F00E         	goto	u2611
  7909   001C88  EF48  F00E         	goto	u2610
  7910   001C8C                     u2611:
  7911   001C8C  EF88  F00E         	goto	l3410
  7912   001C90                     u2610:
  7913   001C90  5049               	movf	___fladd@bexp^0,w,c
  7914   001C92  A4D8               	btfss	status,2,c
  7915   001C94  EF4E  F00E         	goto	u2621
  7916   001C98  EF50  F00E         	goto	u2620
  7917   001C9C                     u2621:
  7918   001C9C  EF5A  F00E         	goto	l3392
  7919   001CA0                     u2620:
  7920   001CA0  0E00               	movlw	0
  7921   001CA2  6E3B               	movwf	?___fladd^0,c
  7922   001CA4  0E00               	movlw	0
  7923   001CA6  6E3C               	movwf	(?___fladd+1)^0,c
  7924   001CA8  0E00               	movlw	0
  7925   001CAA  6E3D               	movwf	(?___fladd+2)^0,c
  7926   001CAC  0E00               	movlw	0
  7927   001CAE  6E3E               	movwf	(?___fladd+3)^0,c
  7928   001CB0  EFA9  F00F         	goto	l1249
  7929   001CB4                     l3392:
  7930   001CB4  503F               	movf	___fladd@a^0,w,c
  7931   001CB6  263B               	addwf	___fladd@b^0,f,c
  7932   001CB8  5040               	movf	(___fladd@a+1)^0,w,c
  7933   001CBA  223C               	addwfc	(___fladd@b+1)^0,f,c
  7934   001CBC  5041               	movf	(___fladd@a+2)^0,w,c
  7935   001CBE  223D               	addwfc	(___fladd@b+2)^0,f,c
  7936   001CC0  5042               	movf	(___fladd@a+3)^0,w,c
  7937   001CC2  223E               	addwfc	(___fladd@b+3)^0,f,c
  7938   001CC4  A03E               	btfss	(___fladd@b+3)^0,0,c
  7939   001CC6  EF67  F00E         	goto	u2631
  7940   001CCA  EF69  F00E         	goto	u2630
  7941   001CCE                     u2631:
  7942   001CCE  EF15  F00F         	goto	l3446
  7943   001CD2                     u2630:
  7944   001CD2  A04A               	btfss	___fladd@grs^0,0,c
  7945   001CD4  EF6E  F00E         	goto	u2641
  7946   001CD8  EF70  F00E         	goto	u2640
  7947   001CDC                     u2641:
  7948   001CDC  EF76  F00E         	goto	l3400
  7949   001CE0                     u2640:
  7950   001CE0  90D8               	bcf	status,0,c
  7951   001CE2  304A               	rrcf	___fladd@grs^0,w,c
  7952   001CE4  0901               	iorlw	1
  7953   001CE6  6E4A               	movwf	___fladd@grs^0,c
  7954   001CE8  EF78  F00E         	goto	l3402
  7955   001CEC                     l3400:
  7956   001CEC  90D8               	bcf	status,0,c
  7957   001CEE  324A               	rrcf	___fladd@grs^0,f,c
  7958   001CF0                     l3402:
  7959   001CF0  A03B               	btfss	___fladd@b^0,0,c
  7960   001CF2  EF7D  F00E         	goto	u2651
  7961   001CF6  EF7F  F00E         	goto	u2650
  7962   001CFA                     u2651:
  7963   001CFA  EF80  F00E         	goto	l3406
  7964   001CFE                     u2650:
  7965   001CFE  8E4A               	bsf	___fladd@grs^0,7,c
  7966   001D00                     l3406:
  7967   001D00  343E               	rlcf	(___fladd@b+3)^0,w,c
  7968   001D02  323E               	rrcf	(___fladd@b+3)^0,f,c
  7969   001D04  323D               	rrcf	(___fladd@b+2)^0,f,c
  7970   001D06  323C               	rrcf	(___fladd@b+1)^0,f,c
  7971   001D08  323B               	rrcf	___fladd@b^0,f,c
  7972   001D0A  2A49               	incf	___fladd@bexp^0,f,c
  7973   001D0C  EF15  F00F         	goto	l3446
  7974   001D10                     l3410:
  7975   001D10  503F               	movf	___fladd@a^0,w,c
  7976   001D12  5C3B               	subwf	___fladd@b^0,w,c
  7977   001D14  5040               	movf	(___fladd@a+1)^0,w,c
  7978   001D16  583C               	subwfb	(___fladd@b+1)^0,w,c
  7979   001D18  5041               	movf	(___fladd@a+2)^0,w,c
  7980   001D1A  583D               	subwfb	(___fladd@b+2)^0,w,c
  7981   001D1C  503E               	movf	(___fladd@b+3)^0,w,c
  7982   001D1E  0A80               	xorlw	128
  7983   001D20  6E43               	movwf	??___fladd^0,c
  7984   001D22  5042               	movf	(___fladd@a+3)^0,w,c
  7985   001D24  0A80               	xorlw	128
  7986   001D26  5843               	subwfb	??___fladd^0,w,c
  7987   001D28  B0D8               	btfsc	status,0,c
  7988   001D2A  EF99  F00E         	goto	u2661
  7989   001D2E  EF9B  F00E         	goto	u2660
  7990   001D32                     u2661:
  7991   001D32  EFC6  F00E         	goto	l3420
  7992   001D36                     u2660:
  7993   001D36  503B               	movf	___fladd@b^0,w,c
  7994   001D38  5C3F               	subwf	___fladd@a^0,w,c
  7995   001D3A  6E43               	movwf	??___fladd^0,c
  7996   001D3C  503C               	movf	(___fladd@b+1)^0,w,c
  7997   001D3E  5840               	subwfb	(___fladd@a+1)^0,w,c
  7998   001D40  6E44               	movwf	(??___fladd+1)^0,c
  7999   001D42  503D               	movf	(___fladd@b+2)^0,w,c
  8000   001D44  5841               	subwfb	(___fladd@a+2)^0,w,c
  8001   001D46  6E45               	movwf	(??___fladd+2)^0,c
  8002   001D48  503E               	movf	(___fladd@b+3)^0,w,c
  8003   001D4A  5842               	subwfb	(___fladd@a+3)^0,w,c
  8004   001D4C  6E46               	movwf	(??___fladd+3)^0,c
  8005   001D4E  0EFF               	movlw	255
  8006   001D50  2443               	addwf	??___fladd^0,w,c
  8007   001D52  6E3B               	movwf	___fladd@b^0,c
  8008   001D54  0EFF               	movlw	255
  8009   001D56  2044               	addwfc	(??___fladd+1)^0,w,c
  8010   001D58  6E3C               	movwf	(___fladd@b+1)^0,c
  8011   001D5A  0EFF               	movlw	255
  8012   001D5C  2045               	addwfc	(??___fladd+2)^0,w,c
  8013   001D5E  6E3D               	movwf	(___fladd@b+2)^0,c
  8014   001D60  0EFF               	movlw	255
  8015   001D62  2046               	addwfc	(??___fladd+3)^0,w,c
  8016   001D64  6E3E               	movwf	(___fladd@b+3)^0,c
  8017   001D66  0E80               	movlw	128
  8018   001D68  1A47               	xorwf	___fladd@signs^0,f,c
  8019   001D6A  6C4A               	negf	___fladd@grs^0,c
  8020   001D6C  504A               	movf	___fladd@grs^0,w,c
  8021   001D6E  A4D8               	btfss	status,2,c
  8022   001D70  EFBC  F00E         	goto	u2671
  8023   001D74  EFBE  F00E         	goto	u2670
  8024   001D78                     u2671:
  8025   001D78  EFCE  F00E         	goto	l1257
  8026   001D7C                     u2670:
  8027   001D7C  0E01               	movlw	1
  8028   001D7E  263B               	addwf	___fladd@b^0,f,c
  8029   001D80  0E00               	movlw	0
  8030   001D82  223C               	addwfc	(___fladd@b+1)^0,f,c
  8031   001D84  223D               	addwfc	(___fladd@b+2)^0,f,c
  8032   001D86  223E               	addwfc	(___fladd@b+3)^0,f,c
  8033   001D88  EFCE  F00E         	goto	l1257
  8034   001D8C                     l3420:
  8035   001D8C  503F               	movf	___fladd@a^0,w,c
  8036   001D8E  5E3B               	subwf	___fladd@b^0,f,c
  8037   001D90  5040               	movf	(___fladd@a+1)^0,w,c
  8038   001D92  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  8039   001D94  5041               	movf	(___fladd@a+2)^0,w,c
  8040   001D96  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  8041   001D98  5042               	movf	(___fladd@a+3)^0,w,c
  8042   001D9A  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  8043   001D9C                     l1257:
  8044   001D9C  503B               	movf	___fladd@b^0,w,c
  8045   001D9E  103C               	iorwf	(___fladd@b+1)^0,w,c
  8046   001DA0  103D               	iorwf	(___fladd@b+2)^0,w,c
  8047   001DA2  103E               	iorwf	(___fladd@b+3)^0,w,c
  8048   001DA4  A4D8               	btfss	status,2,c
  8049   001DA6  EFD7  F00E         	goto	u2681
  8050   001DAA  EFD9  F00E         	goto	u2680
  8051   001DAE                     u2681:
  8052   001DAE  EF0E  F00F         	goto	l3444
  8053   001DB2                     u2680:
  8054   001DB2  504A               	movf	___fladd@grs^0,w,c
  8055   001DB4  A4D8               	btfss	status,2,c
  8056   001DB6  EFDF  F00E         	goto	u2691
  8057   001DBA  EFE1  F00E         	goto	u2690
  8058   001DBE                     u2691:
  8059   001DBE  EF0E  F00F         	goto	l3444
  8060   001DC2                     u2690:
  8061   001DC2  0E00               	movlw	0
  8062   001DC4  6E3B               	movwf	?___fladd^0,c
  8063   001DC6  0E00               	movlw	0
  8064   001DC8  6E3C               	movwf	(?___fladd+1)^0,c
  8065   001DCA  0E00               	movlw	0
  8066   001DCC  6E3D               	movwf	(?___fladd+2)^0,c
  8067   001DCE  0E00               	movlw	0
  8068   001DD0  6E3E               	movwf	(?___fladd+3)^0,c
  8069   001DD2  EFA9  F00F         	goto	l1249
  8070   001DD6                     l3428:
  8071   001DD6  90D8               	bcf	status,0,c
  8072   001DD8  363B               	rlcf	___fladd@b^0,f,c
  8073   001DDA  363C               	rlcf	(___fladd@b+1)^0,f,c
  8074   001DDC  363D               	rlcf	(___fladd@b+2)^0,f,c
  8075   001DDE  363E               	rlcf	(___fladd@b+3)^0,f,c
  8076   001DE0  AE4A               	btfss	___fladd@grs^0,7,c
  8077   001DE2  EFF5  F00E         	goto	u2701
  8078   001DE6  EFF7  F00E         	goto	u2700
  8079   001DEA                     u2701:
  8080   001DEA  EFF8  F00E         	goto	l3434
  8081   001DEE                     u2700:
  8082   001DEE  803B               	bsf	___fladd@b^0,0,c
  8083   001DF0                     l3434:
  8084   001DF0  A04A               	btfss	___fladd@grs^0,0,c
  8085   001DF2  EFFD  F00E         	goto	u2711
  8086   001DF6  EFFF  F00E         	goto	u2710
  8087   001DFA                     u2711:
  8088   001DFA  EF03  F00F         	goto	l3438
  8089   001DFE                     u2710:
  8090   001DFE  80D8               	bsf	status,0,c
  8091   001E00  364A               	rlcf	___fladd@grs^0,f,c
  8092   001E02  EF05  F00F         	goto	l3440
  8093   001E06                     l3438:
  8094   001E06  90D8               	bcf	status,0,c
  8095   001E08  364A               	rlcf	___fladd@grs^0,f,c
  8096   001E0A                     l3440:
  8097   001E0A  5049               	movf	___fladd@bexp^0,w,c
  8098   001E0C  B4D8               	btfsc	status,2,c
  8099   001E0E  EF0B  F00F         	goto	u2721
  8100   001E12  EF0D  F00F         	goto	u2720
  8101   001E16                     u2721:
  8102   001E16  EF0E  F00F         	goto	l3444
  8103   001E1A                     u2720:
  8104   001E1A  0649               	decf	___fladd@bexp^0,f,c
  8105   001E1C                     l3444:
  8106   001E1C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  8107   001E1E  EF13  F00F         	goto	u2731
  8108   001E22  EF15  F00F         	goto	u2730
  8109   001E26                     u2731:
  8110   001E26  EFEB  F00E         	goto	l3428
  8111   001E2A                     u2730:
  8112   001E2A                     l3446:
  8113   001E2A  0E00               	movlw	0
  8114   001E2C  6E48               	movwf	___fladd@aexp^0,c
  8115   001E2E  AE4A               	btfss	___fladd@grs^0,7,c
  8116   001E30  EF1C  F00F         	goto	u2741
  8117   001E34  EF1E  F00F         	goto	u2740
  8118   001E38                     u2741:
  8119   001E38  EF36  F00F         	goto	l1266
  8120   001E3C                     u2740:
  8121   001E3C  C04A  F043         	movff	___fladd@grs,??___fladd
  8122   001E40  0E7F               	movlw	127
  8123   001E42  1643               	andwf	??___fladd^0,f,c
  8124   001E44  B4D8               	btfsc	status,2,c
  8125   001E46  EF27  F00F         	goto	u2751
  8126   001E4A  EF29  F00F         	goto	u2750
  8127   001E4E                     u2751:
  8128   001E4E  EF2D  F00F         	goto	l1267
  8129   001E52                     u2750:
  8130   001E52                     l3452:
  8131   001E52  0E01               	movlw	1
  8132   001E54  6E48               	movwf	___fladd@aexp^0,c
  8133   001E56  EF36  F00F         	goto	l1266
  8134   001E5A                     l1267:
  8135   001E5A  A03B               	btfss	___fladd@b^0,0,c
  8136   001E5C  EF32  F00F         	goto	u2761
  8137   001E60  EF34  F00F         	goto	u2760
  8138   001E64                     u2761:
  8139   001E64  EF36  F00F         	goto	l1266
  8140   001E68                     u2760:
  8141   001E68  EF29  F00F         	goto	l3452
  8142   001E6C                     l1266:
  8143   001E6C  5048               	movf	___fladd@aexp^0,w,c
  8144   001E6E  B4D8               	btfsc	status,2,c
  8145   001E70  EF3C  F00F         	goto	u2771
  8146   001E74  EF3E  F00F         	goto	u2770
  8147   001E78                     u2771:
  8148   001E78  EF69  F00F         	goto	l3464
  8149   001E7C                     u2770:
  8150   001E7C  0E01               	movlw	1
  8151   001E7E  263B               	addwf	___fladd@b^0,f,c
  8152   001E80  0E00               	movlw	0
  8153   001E82  223C               	addwfc	(___fladd@b+1)^0,f,c
  8154   001E84  223D               	addwfc	(___fladd@b+2)^0,f,c
  8155   001E86  223E               	addwfc	(___fladd@b+3)^0,f,c
  8156   001E88  A03E               	btfss	(___fladd@b+3)^0,0,c
  8157   001E8A  EF49  F00F         	goto	u2781
  8158   001E8E  EF4B  F00F         	goto	u2780
  8159   001E92                     u2781:
  8160   001E92  EF69  F00F         	goto	l3464
  8161   001E96                     u2780:
  8162   001E96  C03B  F043         	movff	___fladd@b,??___fladd
  8163   001E9A  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  8164   001E9E  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  8165   001EA2  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  8166   001EA6  3446               	rlcf	(??___fladd+3)^0,w,c
  8167   001EA8  3246               	rrcf	(??___fladd+3)^0,f,c
  8168   001EAA  3245               	rrcf	(??___fladd+2)^0,f,c
  8169   001EAC  3244               	rrcf	(??___fladd+1)^0,f,c
  8170   001EAE  3243               	rrcf	??___fladd^0,f,c
  8171   001EB0  C043  F03B         	movff	??___fladd,___fladd@b
  8172   001EB4  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  8173   001EB8  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  8174   001EBC  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  8175   001EC0  2849               	incf	___fladd@bexp^0,w,c
  8176   001EC2  B4D8               	btfsc	status,2,c
  8177   001EC4  EF66  F00F         	goto	u2791
  8178   001EC8  EF68  F00F         	goto	u2790
  8179   001ECC                     u2791:
  8180   001ECC  EF69  F00F         	goto	l3464
  8181   001ED0                     u2790:
  8182   001ED0  2A49               	incf	___fladd@bexp^0,f,c
  8183   001ED2                     l3464:
  8184   001ED2  2849               	incf	___fladd@bexp^0,w,c
  8185   001ED4  B4D8               	btfsc	status,2,c
  8186   001ED6  EF6F  F00F         	goto	u2801
  8187   001EDA  EF71  F00F         	goto	u2800
  8188   001EDE                     u2801:
  8189   001EDE  EF79  F00F         	goto	l3468
  8190   001EE2                     u2800:
  8191   001EE2  5049               	movf	___fladd@bexp^0,w,c
  8192   001EE4  A4D8               	btfss	status,2,c
  8193   001EE6  EF77  F00F         	goto	u2811
  8194   001EEA  EF79  F00F         	goto	u2810
  8195   001EEE                     u2811:
  8196   001EEE  EF8B  F00F         	goto	l3472
  8197   001EF2                     u2810:
  8198   001EF2                     l3468:
  8199   001EF2  0E00               	movlw	0
  8200   001EF4  6E3B               	movwf	___fladd@b^0,c
  8201   001EF6  0E00               	movlw	0
  8202   001EF8  6E3C               	movwf	(___fladd@b+1)^0,c
  8203   001EFA  0E00               	movlw	0
  8204   001EFC  6E3D               	movwf	(___fladd@b+2)^0,c
  8205   001EFE  0E00               	movlw	0
  8206   001F00  6E3E               	movwf	(___fladd@b+3)^0,c
  8207   001F02  5049               	movf	___fladd@bexp^0,w,c
  8208   001F04  A4D8               	btfss	status,2,c
  8209   001F06  EF87  F00F         	goto	u2821
  8210   001F0A  EF89  F00F         	goto	u2820
  8211   001F0E                     u2821:
  8212   001F0E  EF8B  F00F         	goto	l3472
  8213   001F12                     u2820:
  8214   001F12  0E00               	movlw	0
  8215   001F14  6E47               	movwf	___fladd@signs^0,c
  8216   001F16                     l3472:
  8217   001F16  A049               	btfss	___fladd@bexp^0,0,c
  8218   001F18  EF90  F00F         	goto	u2831
  8219   001F1C  EF92  F00F         	goto	u2830
  8220   001F20                     u2831:
  8221   001F20  EF95  F00F         	goto	l3476
  8222   001F24                     u2830:
  8223   001F24  8E3D               	bsf	(___fladd@b+2)^0,7,c
  8224   001F26  EF96  F00F         	goto	l3478
  8225   001F2A                     l3476:
  8226   001F2A  9E3D               	bcf	(___fladd@b+2)^0,7,c
  8227   001F2C                     l3478:
  8228   001F2C  90D8               	bcf	status,0,c
  8229   001F2E  3049               	rrcf	___fladd@bexp^0,w,c
  8230   001F30  6E3E               	movwf	(___fladd@b+3)^0,c
  8231   001F32  AE47               	btfss	___fladd@signs^0,7,c
  8232   001F34  EF9E  F00F         	goto	u2841
  8233   001F38  EFA0  F00F         	goto	u2840
  8234   001F3C                     u2841:
  8235   001F3C  EFA1  F00F         	goto	l3484
  8236   001F40                     u2840:
  8237   001F40  8E3E               	bsf	(___fladd@b+3)^0,7,c
  8238   001F42                     l3484:
  8239   001F42  C03B  F03B         	movff	___fladd@b,?___fladd
  8240   001F46  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  8241   001F4A  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  8242   001F4E  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  8243   001F52                     l1249:
  8244   001F52  0012               	return		;funcret
  8245   001F54                     __end_of___fladd:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _Yellow_rev1_R90 *****************
  8249 ;; Defined at:
  8250 ;;		line 274 in file "dc_motor.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8253 ;;		 -> motorL(9), 
  8254 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8255 ;;		 -> motorR(9), 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8271 ;;Total ram usage:        6 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 5
  8274 ;; This function calls:
  8275 ;;		_Left45
  8276 ;;		_Right45
  8277 ;;		_fullSpeedReverse
  8278 ;;		_reverseHalfSquare
  8279 ;; This function is called by:
  8280 ;;		_Colour2Action
  8281 ;;		_White
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text36
  8286   0037E8                     __ptext36:
  8287                           	callstack 0
  8288   0037E8                     _Yellow_rev1_R90:
  8289                           	callstack 24
  8290   0037E8                     
  8291                           ;dc_motor.c: 274: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 275: {;dc_motor.c: 276:     if (ForwardFlag){
  8292   0037E8  0100               	movlb	0	; () banked
  8293   0037EA  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8294   0037EC  B4D8               	btfsc	status,2,c
  8295   0037EE  EFFB  F01B         	goto	u2411
  8296   0037F2  EFFD  F01B         	goto	u2410
  8297   0037F6                     u2411:
  8298   0037F6  EF33  F01C         	goto	l3222
  8299   0037FA                     u2410:
  8300   0037FA                     
  8301                           ; BSR set to: 0
  8302                           ;dc_motor.c: 277:         reverseHalfSquare(mL,mR);
  8303   0037FA  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  8304   0037FE  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  8305   003802  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  8306   003806  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  8307   00380A  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  8308                           
  8309                           ;dc_motor.c: 279:         fullSpeedReverse(mL,mR);
  8310   00380E  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  8311   003812  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  8312   003816  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  8313   00381A  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  8314   00381E  EC7E  F01F         	call	_fullSpeedReverse	;wreg free
  8315   003822                     
  8316                           ;dc_motor.c: 280:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8317   003822  0E41               	movlw	65
  8318   003824  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  8319   003826  0EF0               	movlw	240
  8320   003828  6E25               	movwf	??_Yellow_rev1_R90^0,c
  8321   00382A  0E33               	movlw	51
  8322   00382C                     u3897:
  8323   00382C  2EE8               	decfsz	wreg,f,c
  8324   00382E  D7FE               	bra	u3897
  8325   003830  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  8326   003832  D7FC               	bra	u3897
  8327   003834  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  8328   003836  D7FA               	bra	u3897
  8329   003838  F000               	nop	
  8330   00383A                     
  8331                           ;dc_motor.c: 282:         Right45(mL,mR);
  8332   00383A  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8333   00383E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8334   003842  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8335   003846  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8336   00384A  EC71  F01E         	call	_Right45	;wreg free
  8337   00384E                     
  8338                           ;dc_motor.c: 283:         Right45(mL,mR);
  8339   00384E  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8340   003852  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8341   003856  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8342   00385A  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8343   00385E  EC71  F01E         	call	_Right45	;wreg free
  8344                           
  8345                           ;dc_motor.c: 284:     }
  8346   003862  EF47  F01C         	goto	l558
  8347   003866                     l3222:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;dc_motor.c: 288:         Left45(mL,mR);
  8351   003866  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8352   00386A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8353   00386E  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8354   003872  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8355   003876  ECB6  F01E         	call	_Left45	;wreg free
  8356                           
  8357                           ;dc_motor.c: 289:         Left45(mL,mR);
  8358   00387A  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8359   00387E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8360   003882  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8361   003886  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8362   00388A  ECB6  F01E         	call	_Left45	;wreg free
  8363   00388E                     l558:
  8364   00388E  0012               	return		;funcret
  8365   003890                     __end_of_Yellow_rev1_R90:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _TimerReset *****************
  8369 ;; Defined at:
  8370 ;;		line 23 in file "timer.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_main
  8395 ;;		_White
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text37
  8400   0046A4                     __ptext37:
  8401                           	callstack 0
  8402   0046A4                     _TimerReset:
  8403                           	callstack 29
  8404   0046A4                     
  8405                           ;timer.c: 25:     TMR0L = 0;
  8406   0046A4  0E00               	movlw	0
  8407   0046A6  6ED3               	movwf	211,c	;volatile
  8408                           
  8409                           ;timer.c: 26:     TMR0H = 0;
  8410   0046A8  0E00               	movlw	0
  8411   0046AA  6ED4               	movwf	212,c	;volatile
  8412   0046AC  0012               	return		;funcret
  8413   0046AE                     __end_of_TimerReset:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _Red_R90 *****************
  8417 ;; Defined at:
  8418 ;;		line 234 in file "dc_motor.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8421 ;;		 -> motorL(9), 
  8422 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8423 ;;		 -> motorR(9), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;Total ram usage:        4 bytes
  8440 ;; Hardware stack levels used: 1
  8441 ;; Hardware stack levels required when called: 5
  8442 ;; This function calls:
  8443 ;;		_Left45
  8444 ;;		_Right45
  8445 ;;		_reverseHalfSquare
  8446 ;; This function is called by:
  8447 ;;		_Colour2Action
  8448 ;;		_White
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text38
  8453   003F7C                     __ptext38:
  8454                           	callstack 0
  8455   003F7C                     _Red_R90:
  8456                           	callstack 23
  8457   003F7C                     
  8458                           ;dc_motor.c: 234: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 235
      +                          : {;dc_motor.c: 236:     if (ForwardFlag){
  8459   003F7C  0100               	movlb	0	; () banked
  8460   003F7E  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8461   003F80  B4D8               	btfsc	status,2,c
  8462   003F82  EFC5  F01F         	goto	u2381
  8463   003F86  EFC7  F01F         	goto	u2380
  8464   003F8A                     u2381:
  8465   003F8A  EFE7  F01F         	goto	l3198
  8466   003F8E                     u2380:
  8467   003F8E                     
  8468                           ; BSR set to: 0
  8469                           ;dc_motor.c: 237:         reverseHalfSquare(mL,mR);
  8470   003F8E  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  8471   003F92  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  8472   003F96  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  8473   003F9A  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  8474   003F9E  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  8475                           
  8476                           ;dc_motor.c: 238:         Right45(mL,mR);
  8477   003FA2  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8478   003FA6  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8479   003FAA  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8480   003FAE  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8481   003FB2  EC71  F01E         	call	_Right45	;wreg free
  8482                           
  8483                           ;dc_motor.c: 239:         Right45(mL,mR);
  8484   003FB6  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8485   003FBA  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8486   003FBE  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8487   003FC2  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8488   003FC6  EC71  F01E         	call	_Right45	;wreg free
  8489                           
  8490                           ;dc_motor.c: 240:     }
  8491   003FCA  EFFB  F01F         	goto	l543
  8492   003FCE                     l3198:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;dc_motor.c: 243:         Left45(mL,mR);
  8496   003FCE  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8497   003FD2  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8498   003FD6  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8499   003FDA  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8500   003FDE  ECB6  F01E         	call	_Left45	;wreg free
  8501                           
  8502                           ;dc_motor.c: 244:         Left45(mL,mR);
  8503   003FE2  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8504   003FE6  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8505   003FEA  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8506   003FEE  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8507   003FF2  ECB6  F01E         	call	_Left45	;wreg free
  8508   003FF6                     l543:
  8509   003FF6  0012               	return		;funcret
  8510   003FF8                     __end_of_Red_R90:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _RAMback *****************
  8514 ;; Defined at:
  8515 ;;		line 92 in file "dc_motor.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8518 ;;		 -> motorL(9), 
  8519 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8520 ;;		 -> motorR(9), 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;Total ram usage:        6 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 4
  8539 ;; This function calls:
  8540 ;;		_fullSpeedReverse
  8541 ;;		_stop
  8542 ;; This function is called by:
  8543 ;;		_White
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text39
  8548   0040E8                     __ptext39:
  8549                           	callstack 0
  8550   0040E8                     _RAMback:
  8551                           	callstack 24
  8552   0040E8                     
  8553                           ;dc_motor.c: 92: void RAMback(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 93: 
      +                          {;dc_motor.c: 94:     stop(mL,mR);
  8554   0040E8  C01B  F014         	movff	RAMback@mL,stop@mL
  8555   0040EC  C01C  F015         	movff	RAMback@mL+1,stop@mL+1
  8556   0040F0  C01D  F016         	movff	RAMback@mR,stop@mR
  8557   0040F4  C01E  F017         	movff	RAMback@mR+1,stop@mR+1
  8558   0040F8  EC9C  F01C         	call	_stop	;wreg free
  8559   0040FC                     
  8560                           ;dc_motor.c: 95:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8561   0040FC  0E09               	movlw	9
  8562   0040FE  6E20               	movwf	(??_RAMback+1)^0,c
  8563   004100  0E1E               	movlw	30
  8564   004102  6E1F               	movwf	??_RAMback^0,c
  8565   004104  0EE4               	movlw	228
  8566   004106                     u3907:
  8567   004106  2EE8               	decfsz	wreg,f,c
  8568   004108  D7FE               	bra	u3907
  8569   00410A  2E1F               	decfsz	??_RAMback^0,f,c
  8570   00410C  D7FC               	bra	u3907
  8571   00410E  2E20               	decfsz	(??_RAMback+1)^0,f,c
  8572   004110  D7FA               	bra	u3907
  8573   004112  D000               	nop2	
  8574   004114                     
  8575                           ;dc_motor.c: 96:     fullSpeedReverse(mL,mR);
  8576   004114  C01B  F014         	movff	RAMback@mL,fullSpeedReverse@mL
  8577   004118  C01C  F015         	movff	RAMback@mL+1,fullSpeedReverse@mL+1
  8578   00411C  C01D  F016         	movff	RAMback@mR,fullSpeedReverse@mR
  8579   004120  C01E  F017         	movff	RAMback@mR+1,fullSpeedReverse@mR+1
  8580   004124  EC7E  F01F         	call	_fullSpeedReverse	;wreg free
  8581                           
  8582                           ;dc_motor.c: 97:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8583   004128  0E52               	movlw	82
  8584   00412A  6E20               	movwf	(??_RAMback+1)^0,c
  8585   00412C  0E2B               	movlw	43
  8586   00412E  6E1F               	movwf	??_RAMback^0,c
  8587   004130  0E00               	movlw	0
  8588   004132                     u3917:
  8589   004132  2EE8               	decfsz	wreg,f,c
  8590   004134  D7FE               	bra	u3917
  8591   004136  2E1F               	decfsz	??_RAMback^0,f,c
  8592   004138  D7FC               	bra	u3917
  8593   00413A  2E20               	decfsz	(??_RAMback+1)^0,f,c
  8594   00413C  D7FA               	bra	u3917
  8595   00413E  D000               	nop2	
  8596   004140                     
  8597                           ;dc_motor.c: 98:     stop(mL,mR);
  8598   004140  C01B  F014         	movff	RAMback@mL,stop@mL
  8599   004144  C01C  F015         	movff	RAMback@mL+1,stop@mL+1
  8600   004148  C01D  F016         	movff	RAMback@mR,stop@mR
  8601   00414C  C01E  F017         	movff	RAMback@mR+1,stop@mR+1
  8602   004150  EC9C  F01C         	call	_stop	;wreg free
  8603   004154  0012               	return		;funcret
  8604   004156                     __end_of_RAMback:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function _Pink_rev1_L90 *****************
  8608 ;; Defined at:
  8609 ;;		line 292 in file "dc_motor.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8612 ;;		 -> motorL(9), 
  8613 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8614 ;;		 -> motorR(9), 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        6 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 5
  8633 ;; This function calls:
  8634 ;;		_Left45
  8635 ;;		_Right45
  8636 ;;		_fullSpeedReverse
  8637 ;;		_reverseHalfSquare
  8638 ;; This function is called by:
  8639 ;;		_Colour2Action
  8640 ;;		_White
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text40
  8645   003890                     __ptext40:
  8646                           	callstack 0
  8647   003890                     _Pink_rev1_L90:
  8648                           	callstack 23
  8649   003890                     
  8650                           ;dc_motor.c: 292: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 293: {;dc_motor.c: 294:     if (ForwardFlag){
  8651   003890  0100               	movlb	0	; () banked
  8652   003892  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8653   003894  B4D8               	btfsc	status,2,c
  8654   003896  EF4F  F01C         	goto	u2421
  8655   00389A  EF51  F01C         	goto	u2420
  8656   00389E                     u2421:
  8657   00389E  EF87  F01C         	goto	l3234
  8658   0038A2                     u2420:
  8659   0038A2                     
  8660                           ; BSR set to: 0
  8661                           ;dc_motor.c: 295:         reverseHalfSquare(mL,mR);
  8662   0038A2  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  8663   0038A6  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  8664   0038AA  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  8665   0038AE  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  8666   0038B2  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  8667                           
  8668                           ;dc_motor.c: 297:         fullSpeedReverse(mL,mR);
  8669   0038B6  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  8670   0038BA  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  8671   0038BE  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  8672   0038C2  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  8673   0038C6  EC7E  F01F         	call	_fullSpeedReverse	;wreg free
  8674   0038CA                     
  8675                           ;dc_motor.c: 298:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8676   0038CA  0E41               	movlw	65
  8677   0038CC  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  8678   0038CE  0EF0               	movlw	240
  8679   0038D0  6E25               	movwf	??_Pink_rev1_L90^0,c
  8680   0038D2  0E33               	movlw	51
  8681   0038D4                     u3927:
  8682   0038D4  2EE8               	decfsz	wreg,f,c
  8683   0038D6  D7FE               	bra	u3927
  8684   0038D8  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  8685   0038DA  D7FC               	bra	u3927
  8686   0038DC  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  8687   0038DE  D7FA               	bra	u3927
  8688   0038E0  F000               	nop	
  8689   0038E2                     
  8690                           ;dc_motor.c: 299:         Left45(mL,mR);
  8691   0038E2  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8692   0038E6  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8693   0038EA  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8694   0038EE  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8695   0038F2  ECB6  F01E         	call	_Left45	;wreg free
  8696   0038F6                     
  8697                           ;dc_motor.c: 300:         Left45(mL,mR);
  8698   0038F6  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8699   0038FA  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8700   0038FE  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8701   003902  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8702   003906  ECB6  F01E         	call	_Left45	;wreg free
  8703                           
  8704                           ;dc_motor.c: 301:     }
  8705   00390A  EF9B  F01C         	goto	l563
  8706   00390E                     l3234:
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;dc_motor.c: 304:         Right45(mL,mR);
  8710   00390E  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8711   003912  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8712   003916  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8713   00391A  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8714   00391E  EC71  F01E         	call	_Right45	;wreg free
  8715                           
  8716                           ;dc_motor.c: 305:         Right45(mL,mR);
  8717   003922  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8718   003926  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8719   00392A  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8720   00392E  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8721   003932  EC71  F01E         	call	_Right45	;wreg free
  8722   003936                     l563:
  8723   003936  0012               	return		;funcret
  8724   003938                     __end_of_Pink_rev1_L90:
  8725                           	callstack 0
  8726                           
  8727 ;; *************** function _Orange_R135 *****************
  8728 ;; Defined at:
  8729 ;;		line 308 in file "dc_motor.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8732 ;;		 -> motorL(9), 
  8733 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8734 ;;		 -> motorR(9), 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;		None
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1    wreg      void 
  8739 ;; Registers used:
  8740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;Total ram usage:        4 bytes
  8751 ;; Hardware stack levels used: 1
  8752 ;; Hardware stack levels required when called: 5
  8753 ;; This function calls:
  8754 ;;		_Left45
  8755 ;;		_Right45
  8756 ;;		_reverseHalfSquare
  8757 ;; This function is called by:
  8758 ;;		_Colour2Action
  8759 ;;		_White
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text41
  8764   0039DE                     __ptext41:
  8765                           	callstack 0
  8766   0039DE                     _Orange_R135:
  8767                           	callstack 23
  8768   0039DE                     
  8769                           ;dc_motor.c: 308: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           309: {;dc_motor.c: 310:     if (ForwardFlag){
  8770   0039DE  0100               	movlb	0	; () banked
  8771   0039E0  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8772   0039E2  B4D8               	btfsc	status,2,c
  8773   0039E4  EFF6  F01C         	goto	u2431
  8774   0039E8  EFF8  F01C         	goto	u2430
  8775   0039EC                     u2431:
  8776   0039EC  EF22  F01D         	goto	l3240
  8777   0039F0                     u2430:
  8778   0039F0                     
  8779                           ; BSR set to: 0
  8780                           ;dc_motor.c: 311:         reverseHalfSquare(mL,mR);
  8781   0039F0  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  8782   0039F4  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  8783   0039F8  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  8784   0039FC  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  8785   003A00  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  8786                           
  8787                           ;dc_motor.c: 313:         Right45(mL,mR);
  8788   003A04  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8789   003A08  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8790   003A0C  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8791   003A10  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8792   003A14  EC71  F01E         	call	_Right45	;wreg free
  8793                           
  8794                           ;dc_motor.c: 314:         Right45(mL,mR);
  8795   003A18  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8796   003A1C  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8797   003A20  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8798   003A24  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8799   003A28  EC71  F01E         	call	_Right45	;wreg free
  8800                           
  8801                           ;dc_motor.c: 315:         Right45(mL,mR);
  8802   003A2C  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8803   003A30  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8804   003A34  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8805   003A38  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8806   003A3C  EC71  F01E         	call	_Right45	;wreg free
  8807                           
  8808                           ;dc_motor.c: 316:     }
  8809   003A40  EF40  F01D         	goto	l568
  8810   003A44                     l3240:
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;dc_motor.c: 319:         Left45(mL,mR);
  8814   003A44  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8815   003A48  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8816   003A4C  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8817   003A50  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8818   003A54  ECB6  F01E         	call	_Left45	;wreg free
  8819                           
  8820                           ;dc_motor.c: 320:         Left45(mL,mR);
  8821   003A58  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8822   003A5C  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8823   003A60  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8824   003A64  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8825   003A68  ECB6  F01E         	call	_Left45	;wreg free
  8826                           
  8827                           ;dc_motor.c: 321:         Left45(mL,mR);
  8828   003A6C  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8829   003A70  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8830   003A74  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8831   003A78  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8832   003A7C  ECB6  F01E         	call	_Left45	;wreg free
  8833   003A80                     l568:
  8834   003A80  0012               	return		;funcret
  8835   003A82                     __end_of_Orange_R135:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function _LightBlue_L135 *****************
  8839 ;; Defined at:
  8840 ;;		line 324 in file "dc_motor.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8843 ;;		 -> motorL(9), 
  8844 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8845 ;;		 -> motorR(9), 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;Total ram usage:        4 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 5
  8864 ;; This function calls:
  8865 ;;		_Left45
  8866 ;;		_Right45
  8867 ;;		_reverseHalfSquare
  8868 ;; This function is called by:
  8869 ;;		_Colour2Action
  8870 ;;		_White
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text42
  8875   003A82                     __ptext42:
  8876                           	callstack 0
  8877   003A82                     _LightBlue_L135:
  8878                           	callstack 23
  8879   003A82                     
  8880                           ;dc_motor.c: 324: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 325: {;dc_motor.c: 327:      if (ForwardFlag){
  8881   003A82  0100               	movlb	0	; () banked
  8882   003A84  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8883   003A86  B4D8               	btfsc	status,2,c
  8884   003A88  EF48  F01D         	goto	u2441
  8885   003A8C  EF4A  F01D         	goto	u2440
  8886   003A90                     u2441:
  8887   003A90  EF74  F01D         	goto	l3246
  8888   003A94                     u2440:
  8889   003A94                     
  8890                           ; BSR set to: 0
  8891                           ;dc_motor.c: 328:         reverseHalfSquare(mL,mR);
  8892   003A94  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  8893   003A98  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  8894   003A9C  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  8895   003AA0  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  8896   003AA4  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  8897                           
  8898                           ;dc_motor.c: 330:         Left45(mL,mR);
  8899   003AA8  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8900   003AAC  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8901   003AB0  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8902   003AB4  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8903   003AB8  ECB6  F01E         	call	_Left45	;wreg free
  8904                           
  8905                           ;dc_motor.c: 331:         Left45(mL,mR);
  8906   003ABC  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8907   003AC0  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8908   003AC4  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8909   003AC8  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8910   003ACC  ECB6  F01E         	call	_Left45	;wreg free
  8911                           
  8912                           ;dc_motor.c: 332:         Left45(mL,mR);
  8913   003AD0  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8914   003AD4  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8915   003AD8  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8916   003ADC  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8917   003AE0  ECB6  F01E         	call	_Left45	;wreg free
  8918                           
  8919                           ;dc_motor.c: 334:     }
  8920   003AE4  EF92  F01D         	goto	l573
  8921   003AE8                     l3246:
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;dc_motor.c: 337:         Right45(mL,mR);
  8925   003AE8  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8926   003AEC  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8927   003AF0  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8928   003AF4  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8929   003AF8  EC71  F01E         	call	_Right45	;wreg free
  8930                           
  8931                           ;dc_motor.c: 338:         Right45(mL,mR);
  8932   003AFC  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8933   003B00  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8934   003B04  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8935   003B08  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8936   003B0C  EC71  F01E         	call	_Right45	;wreg free
  8937                           
  8938                           ;dc_motor.c: 339:         Right45(mL,mR);
  8939   003B10  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8940   003B14  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8941   003B18  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8942   003B1C  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8943   003B20  EC71  F01E         	call	_Right45	;wreg free
  8944   003B24                     l573:
  8945   003B24  0012               	return		;funcret
  8946   003B26                     __end_of_LightBlue_L135:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function _Green_L90 *****************
  8950 ;; Defined at:
  8951 ;;		line 248 in file "dc_motor.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8954 ;;		 -> motorL(9), 
  8955 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8956 ;;		 -> motorR(9), 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;Total ram usage:        4 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; Hardware stack levels required when called: 5
  8975 ;; This function calls:
  8976 ;;		_Left45
  8977 ;;		_Right45
  8978 ;;		_reverseHalfSquare
  8979 ;; This function is called by:
  8980 ;;		_Colour2Action
  8981 ;;		_White
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text43
  8986   003FF8                     __ptext43:
  8987                           	callstack 0
  8988   003FF8                     _Green_L90:
  8989                           	callstack 23
  8990   003FF8                     
  8991                           ;dc_motor.c: 248: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          49: {;dc_motor.c: 250:     if (ForwardFlag){
  8992   003FF8  0100               	movlb	0	; () banked
  8993   003FFA  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8994   003FFC  B4D8               	btfsc	status,2,c
  8995   003FFE  EF03  F020         	goto	u2391
  8996   004002  EF05  F020         	goto	u2390
  8997   004006                     u2391:
  8998   004006  EF25  F020         	goto	l3204
  8999   00400A                     u2390:
  9000   00400A                     
  9001                           ; BSR set to: 0
  9002                           ;dc_motor.c: 251:         reverseHalfSquare(mL,mR);
  9003   00400A  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  9004   00400E  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  9005   004012  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  9006   004016  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  9007   00401A  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  9008                           
  9009                           ;dc_motor.c: 253:         Left45(mL,mR);
  9010   00401E  C021  F01A         	movff	Green_L90@mL,Left45@mL
  9011   004022  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  9012   004026  C023  F01C         	movff	Green_L90@mR,Left45@mR
  9013   00402A  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  9014   00402E  ECB6  F01E         	call	_Left45	;wreg free
  9015                           
  9016                           ;dc_motor.c: 254:         Left45(mL,mR);
  9017   004032  C021  F01A         	movff	Green_L90@mL,Left45@mL
  9018   004036  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  9019   00403A  C023  F01C         	movff	Green_L90@mR,Left45@mR
  9020   00403E  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  9021   004042  ECB6  F01E         	call	_Left45	;wreg free
  9022                           
  9023                           ;dc_motor.c: 255:     }
  9024   004046  EF39  F020         	goto	l548
  9025   00404A                     l3204:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;dc_motor.c: 258:         Right45(mL,mR);
  9029   00404A  C021  F01A         	movff	Green_L90@mL,Right45@mL
  9030   00404E  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  9031   004052  C023  F01C         	movff	Green_L90@mR,Right45@mR
  9032   004056  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  9033   00405A  EC71  F01E         	call	_Right45	;wreg free
  9034                           
  9035                           ;dc_motor.c: 259:         Right45(mL,mR);
  9036   00405E  C021  F01A         	movff	Green_L90@mL,Right45@mL
  9037   004062  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  9038   004066  C023  F01C         	movff	Green_L90@mR,Right45@mR
  9039   00406A  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  9040   00406E  EC71  F01E         	call	_Right45	;wreg free
  9041   004072                     l548:
  9042   004072  0012               	return		;funcret
  9043   004074                     __end_of_Green_L90:
  9044                           	callstack 0
  9045                           
  9046 ;; *************** function _Right45 *****************
  9047 ;; Defined at:
  9048 ;;		line 201 in file "dc_motor.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9051 ;;		 -> motorL(9), 
  9052 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9053 ;;		 -> motorR(9), 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;Total ram usage:        6 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 4
  9072 ;; This function calls:
  9073 ;;		_stop
  9074 ;;		_turnRight
  9075 ;; This function is called by:
  9076 ;;		_Red_R90
  9077 ;;		_Green_L90
  9078 ;;		_Yellow_rev1_R90
  9079 ;;		_Pink_rev1_L90
  9080 ;;		_Orange_R135
  9081 ;;		_LightBlue_L135
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text44
  9086   003CE2                     __ptext44:
  9087                           	callstack 0
  9088   003CE2                     _Right45:
  9089                           	callstack 24
  9090   003CE2                     
  9091                           ;dc_motor.c: 201: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 202
      +                          : {;dc_motor.c: 203:     LATHbits.LATH0 = 1;;
  9092   003CE2  8080               	bsf	128,0,c	;volatile
  9093   003CE4                     
  9094                           ;dc_motor.c: 205:     stop(mL,mR);
  9095   003CE4  C01A  F014         	movff	Right45@mL,stop@mL
  9096   003CE8  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  9097   003CEC  C01C  F016         	movff	Right45@mR,stop@mR
  9098   003CF0  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  9099   003CF4  EC9C  F01C         	call	_stop	;wreg free
  9100   003CF8                     
  9101                           ;dc_motor.c: 206:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9102   003CF8  0E09               	movlw	9
  9103   003CFA  6E1F               	movwf	(??_Right45+1)^0,c
  9104   003CFC  0E1E               	movlw	30
  9105   003CFE  6E1E               	movwf	??_Right45^0,c
  9106   003D00  0EE4               	movlw	228
  9107   003D02                     u3937:
  9108   003D02  2EE8               	decfsz	wreg,f,c
  9109   003D04  D7FE               	bra	u3937
  9110   003D06  2E1E               	decfsz	??_Right45^0,f,c
  9111   003D08  D7FC               	bra	u3937
  9112   003D0A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9113   003D0C  D7FA               	bra	u3937
  9114   003D0E  D000               	nop2	
  9115   003D10                     
  9116                           ;dc_motor.c: 207:     turnRight(mL,mR);
  9117   003D10  C01A  F014         	movff	Right45@mL,turnRight@mL
  9118   003D14  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  9119   003D18  C01C  F016         	movff	Right45@mR,turnRight@mR
  9120   003D1C  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  9121   003D20  EC93  F01D         	call	_turnRight	;wreg free
  9122                           
  9123                           ;dc_motor.c: 208:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  9124   003D24  0E0C               	movlw	12
  9125   003D26  6E1F               	movwf	(??_Right45+1)^0,c
  9126   003D28  0EB1               	movlw	177
  9127   003D2A  6E1E               	movwf	??_Right45^0,c
  9128   003D2C  0E2B               	movlw	43
  9129   003D2E                     u3947:
  9130   003D2E  2EE8               	decfsz	wreg,f,c
  9131   003D30  D7FE               	bra	u3947
  9132   003D32  2E1E               	decfsz	??_Right45^0,f,c
  9133   003D34  D7FC               	bra	u3947
  9134   003D36  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9135   003D38  D7FA               	bra	u3947
  9136   003D3A  F000               	nop	
  9137   003D3C                     
  9138                           ;dc_motor.c: 209:     stop(mL,mR);
  9139   003D3C  C01A  F014         	movff	Right45@mL,stop@mL
  9140   003D40  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  9141   003D44  C01C  F016         	movff	Right45@mR,stop@mR
  9142   003D48  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  9143   003D4C  EC9C  F01C         	call	_stop	;wreg free
  9144   003D50                     
  9145                           ;dc_motor.c: 210:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9146   003D50  0E09               	movlw	9
  9147   003D52  6E1F               	movwf	(??_Right45+1)^0,c
  9148   003D54  0E1E               	movlw	30
  9149   003D56  6E1E               	movwf	??_Right45^0,c
  9150   003D58  0EE4               	movlw	228
  9151   003D5A                     u3957:
  9152   003D5A  2EE8               	decfsz	wreg,f,c
  9153   003D5C  D7FE               	bra	u3957
  9154   003D5E  2E1E               	decfsz	??_Right45^0,f,c
  9155   003D60  D7FC               	bra	u3957
  9156   003D62  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9157   003D64  D7FA               	bra	u3957
  9158   003D66  D000               	nop2	
  9159   003D68                     
  9160                           ;dc_motor.c: 211:     LATHbits.LATH0 = 0;;
  9161   003D68  9080               	bcf	128,0,c	;volatile
  9162   003D6A  0012               	return		;funcret
  9163   003D6C                     __end_of_Right45:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function _turnRight *****************
  9167 ;; Defined at:
  9168 ;;		line 140 in file "dc_motor.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9171 ;;		 -> motorL(9), 
  9172 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9173 ;;		 -> motorR(9), 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  i               2   23[COMRAM] unsigned int 
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  1    wreg      void 
  9178 ;; Registers used:
  9179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;Total ram usage:        6 bytes
  9190 ;; Hardware stack levels used: 1
  9191 ;; Hardware stack levels required when called: 3
  9192 ;; This function calls:
  9193 ;;		_setMotorPWM
  9194 ;; This function is called by:
  9195 ;;		_Right45
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text45
  9200   003B26                     __ptext45:
  9201                           	callstack 0
  9202   003B26                     _turnRight:
  9203                           	callstack 24
  9204   003B26                     
  9205                           ;dc_motor.c: 140: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          41: {;dc_motor.c: 142:     (mL->direction) = 1;
  9206   003B26  EE20 F001          	lfsr	2,1
  9207   003B2A  5014               	movf	turnRight@mL^0,w,c
  9208   003B2C  26D9               	addwf	fsr2l,f,c
  9209   003B2E  5015               	movf	(turnRight@mL+1)^0,w,c
  9210   003B30  22DA               	addwfc	fsr2h,f,c
  9211   003B32  0E01               	movlw	1
  9212   003B34  6EDF               	movwf	indf2,c
  9213                           
  9214                           ;dc_motor.c: 143:     (mR->direction) = 0;
  9215   003B36  EE20 F001          	lfsr	2,1
  9216   003B3A  5016               	movf	turnRight@mR^0,w,c
  9217   003B3C  26D9               	addwf	fsr2l,f,c
  9218   003B3E  5017               	movf	(turnRight@mR+1)^0,w,c
  9219   003B40  22DA               	addwfc	fsr2h,f,c
  9220   003B42  0E00               	movlw	0
  9221   003B44  6EDF               	movwf	indf2,c
  9222   003B46                     
  9223                           ;dc_motor.c: 144:     setMotorPWM(mL);
  9224   003B46  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9225   003B4A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9226   003B4E  ECE4  F019         	call	_setMotorPWM	;wreg free
  9227   003B52                     
  9228                           ;dc_motor.c: 145:     setMotorPWM(mR);
  9229   003B52  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9230   003B56  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9231   003B5A  ECE4  F019         	call	_setMotorPWM	;wreg free
  9232   003B5E                     
  9233                           ;dc_motor.c: 146:     for (unsigned int i = 0; i <50; i++)
  9234   003B5E  0E00               	movlw	0
  9235   003B60  6E19               	movwf	(turnRight@i+1)^0,c
  9236   003B62  0E00               	movlw	0
  9237   003B64  6E18               	movwf	turnRight@i^0,c
  9238   003B66                     l2932:
  9239                           
  9240                           ;dc_motor.c: 147:     {;dc_motor.c: 148:         mL->power++;
  9241   003B66  C014  FFD9         	movff	turnRight@mL,fsr2l
  9242   003B6A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9243   003B6E  2ADF               	incf	indf2,f,c
  9244                           
  9245                           ;dc_motor.c: 149:         mR->power++;
  9246   003B70  C016  FFD9         	movff	turnRight@mR,fsr2l
  9247   003B74  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9248   003B78  2ADF               	incf	indf2,f,c
  9249   003B7A                     
  9250                           ;dc_motor.c: 150:         setMotorPWM(mL);
  9251   003B7A  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9252   003B7E  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9253   003B82  ECE4  F019         	call	_setMotorPWM	;wreg free
  9254   003B86                     
  9255                           ;dc_motor.c: 151:         setMotorPWM(mR);
  9256   003B86  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9257   003B8A  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9258   003B8E  ECE4  F019         	call	_setMotorPWM	;wreg free
  9259   003B92                     
  9260                           ;dc_motor.c: 152:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9261   003B92  0EE4               	movlw	228
  9262   003B94                     u3967:
  9263   003B94  D000               	nop2	
  9264   003B96  D000               	nop2	
  9265   003B98  2EE8               	decfsz	wreg,f,c
  9266   003B9A  D7FC               	bra	u3967
  9267   003B9C  D000               	nop2	
  9268   003B9E  D000               	nop2	
  9269   003BA0                     
  9270                           ;dc_motor.c: 153:     }
  9271   003BA0  4A18               	infsnz	turnRight@i^0,f,c
  9272   003BA2  2A19               	incf	(turnRight@i+1)^0,f,c
  9273   003BA4  5019               	movf	(turnRight@i+1)^0,w,c
  9274   003BA6  E109               	bnz	u2040
  9275   003BA8  0E32               	movlw	50
  9276   003BAA  5C18               	subwf	turnRight@i^0,w,c
  9277   003BAC  A0D8               	btfss	status,0,c
  9278   003BAE  EFDB  F01D         	goto	u2041
  9279   003BB2  EFDD  F01D         	goto	u2040
  9280   003BB6                     u2041:
  9281   003BB6  EFB3  F01D         	goto	l2932
  9282   003BBA                     u2040:
  9283   003BBA  0012               	return		;funcret
  9284   003BBC                     __end_of_turnRight:
  9285                           	callstack 0
  9286                           
  9287 ;; *************** function _Blue_T180 *****************
  9288 ;; Defined at:
  9289 ;;		line 263 in file "dc_motor.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  9292 ;;		 -> motorL(9), 
  9293 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  9294 ;;		 -> motorR(9), 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;Total ram usage:        4 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; Hardware stack levels required when called: 6
  9313 ;; This function calls:
  9314 ;;		_reverseHalfSquare
  9315 ;;		_rotate180left
  9316 ;; This function is called by:
  9317 ;;		_Colour2Action
  9318 ;;		_White
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text46
  9323   00421A                     __ptext46:
  9324                           	callstack 0
  9325   00421A                     _Blue_T180:
  9326                           	callstack 22
  9327   00421A                     
  9328                           ;dc_motor.c: 263: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          64: {;dc_motor.c: 265:     if (ForwardFlag){
  9329   00421A  0100               	movlb	0	; () banked
  9330   00421C  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  9331   00421E  B4D8               	btfsc	status,2,c
  9332   004220  EF14  F021         	goto	u2401
  9333   004224  EF16  F021         	goto	u2400
  9334   004228                     u2401:
  9335   004228  EF2C  F021         	goto	l3210
  9336   00422C                     u2400:
  9337   00422C                     
  9338                           ; BSR set to: 0
  9339                           ;dc_motor.c: 266:         reverseHalfSquare(mL,mR);
  9340   00422C  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  9341   004230  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  9342   004234  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  9343   004238  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  9344   00423C  ECFB  F01E         	call	_reverseHalfSquare	;wreg free
  9345                           
  9346                           ;dc_motor.c: 268:         rotate180left(mL,mR);
  9347   004240  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9348   004244  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9349   004248  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9350   00424C  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9351   004250  EC37  F021         	call	_rotate180left	;wreg free
  9352                           
  9353                           ;dc_motor.c: 269:     }else{
  9354   004254  EF36  F021         	goto	l553
  9355   004258                     l3210:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;dc_motor.c: 270:         rotate180left(mL,mR);
  9359   004258  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9360   00425C  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9361   004260  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9362   004264  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9363   004268  EC37  F021         	call	_rotate180left	;wreg free
  9364   00426C                     l553:
  9365   00426C  0012               	return		;funcret
  9366   00426E                     __end_of_Blue_T180:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _rotate180left *****************
  9370 ;; Defined at:
  9371 ;;		line 215 in file "dc_motor.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9374 ;;		 -> motorL(9), 
  9375 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9376 ;;		 -> motorR(9), 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;		None
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;Total ram usage:        4 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 5
  9395 ;; This function calls:
  9396 ;;		_Left45
  9397 ;; This function is called by:
  9398 ;;		_Blue_T180
  9399 ;;		_White
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text47
  9404   00426E                     __ptext47:
  9405                           	callstack 0
  9406   00426E                     _rotate180left:
  9407                           	callstack 23
  9408   00426E                     
  9409                           ;dc_motor.c: 215: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 216: {;dc_motor.c: 218:     Left45(mL,mR);
  9410   00426E  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9411   004272  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9412   004276  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9413   00427A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9414   00427E  ECB6  F01E         	call	_Left45	;wreg free
  9415                           
  9416                           ;dc_motor.c: 219:     Left45(mL,mR);
  9417   004282  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9418   004286  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9419   00428A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9420   00428E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9421   004292  ECB6  F01E         	call	_Left45	;wreg free
  9422                           
  9423                           ;dc_motor.c: 220:     Left45(mL,mR);
  9424   004296  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9425   00429A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9426   00429E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9427   0042A2  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9428   0042A6  ECB6  F01E         	call	_Left45	;wreg free
  9429                           
  9430                           ;dc_motor.c: 221:     Left45(mL,mR);
  9431   0042AA  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9432   0042AE  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9433   0042B2  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9434   0042B6  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9435   0042BA  ECB6  F01E         	call	_Left45	;wreg free
  9436   0042BE  0012               	return		;funcret
  9437   0042C0                     __end_of_rotate180left:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function _Left45 *****************
  9441 ;; Defined at:
  9442 ;;		line 187 in file "dc_motor.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9445 ;;		 -> motorL(9), 
  9446 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9447 ;;		 -> motorR(9), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;Total ram usage:        6 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; Hardware stack levels required when called: 4
  9466 ;; This function calls:
  9467 ;;		_stop
  9468 ;;		_turnLeft
  9469 ;; This function is called by:
  9470 ;;		_rotate180left
  9471 ;;		_Red_R90
  9472 ;;		_Green_L90
  9473 ;;		_Yellow_rev1_R90
  9474 ;;		_Pink_rev1_L90
  9475 ;;		_Orange_R135
  9476 ;;		_LightBlue_L135
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text48
  9481   003D6C                     __ptext48:
  9482                           	callstack 0
  9483   003D6C                     _Left45:
  9484                           	callstack 24
  9485   003D6C                     
  9486                           ;dc_motor.c: 187: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 188:
      +                           {;dc_motor.c: 189:     LATFbits.LATF0 = 1;;
  9487   003D6C  807E               	bsf	126,0,c	;volatile
  9488   003D6E                     
  9489                           ;dc_motor.c: 191:     stop(mL,mR);
  9490   003D6E  C01A  F014         	movff	Left45@mL,stop@mL
  9491   003D72  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9492   003D76  C01C  F016         	movff	Left45@mR,stop@mR
  9493   003D7A  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9494   003D7E  EC9C  F01C         	call	_stop	;wreg free
  9495   003D82                     
  9496                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9497   003D82  0E05               	movlw	5
  9498   003D84  6E1F               	movwf	(??_Left45+1)^0,c
  9499   003D86  0E0F               	movlw	15
  9500   003D88  6E1E               	movwf	??_Left45^0,c
  9501   003D8A  0EF1               	movlw	241
  9502   003D8C                     u3977:
  9503   003D8C  2EE8               	decfsz	wreg,f,c
  9504   003D8E  D7FE               	bra	u3977
  9505   003D90  2E1E               	decfsz	??_Left45^0,f,c
  9506   003D92  D7FC               	bra	u3977
  9507   003D94  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9508   003D96  D7FA               	bra	u3977
  9509   003D98  F000               	nop	
  9510   003D9A                     
  9511                           ;dc_motor.c: 193:     turnLeft(mL,mR);
  9512   003D9A  C01A  F014         	movff	Left45@mL,turnLeft@mL
  9513   003D9E  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  9514   003DA2  C01C  F016         	movff	Left45@mR,turnLeft@mR
  9515   003DA6  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  9516   003DAA  ECDE  F01D         	call	_turnLeft	;wreg free
  9517                           
  9518                           ;dc_motor.c: 194:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  9519   003DAE  0E0C               	movlw	12
  9520   003DB0  6E1F               	movwf	(??_Left45+1)^0,c
  9521   003DB2  0EB1               	movlw	177
  9522   003DB4  6E1E               	movwf	??_Left45^0,c
  9523   003DB6  0E2B               	movlw	43
  9524   003DB8                     u3987:
  9525   003DB8  2EE8               	decfsz	wreg,f,c
  9526   003DBA  D7FE               	bra	u3987
  9527   003DBC  2E1E               	decfsz	??_Left45^0,f,c
  9528   003DBE  D7FC               	bra	u3987
  9529   003DC0  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9530   003DC2  D7FA               	bra	u3987
  9531   003DC4  F000               	nop	
  9532   003DC6                     
  9533                           ;dc_motor.c: 195:     stop(mL,mR);
  9534   003DC6  C01A  F014         	movff	Left45@mL,stop@mL
  9535   003DCA  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9536   003DCE  C01C  F016         	movff	Left45@mR,stop@mR
  9537   003DD2  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9538   003DD6  EC9C  F01C         	call	_stop	;wreg free
  9539   003DDA                     
  9540                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9541   003DDA  0E05               	movlw	5
  9542   003DDC  6E1F               	movwf	(??_Left45+1)^0,c
  9543   003DDE  0E0F               	movlw	15
  9544   003DE0  6E1E               	movwf	??_Left45^0,c
  9545   003DE2  0EF1               	movlw	241
  9546   003DE4                     u3997:
  9547   003DE4  2EE8               	decfsz	wreg,f,c
  9548   003DE6  D7FE               	bra	u3997
  9549   003DE8  2E1E               	decfsz	??_Left45^0,f,c
  9550   003DEA  D7FC               	bra	u3997
  9551   003DEC  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9552   003DEE  D7FA               	bra	u3997
  9553   003DF0  F000               	nop	
  9554   003DF2                     
  9555                           ;dc_motor.c: 197:     LATFbits.LATF0 = 0;;
  9556   003DF2  907E               	bcf	126,0,c	;volatile
  9557   003DF4  0012               	return		;funcret
  9558   003DF6                     __end_of_Left45:
  9559                           	callstack 0
  9560                           
  9561 ;; *************** function _turnLeft *****************
  9562 ;; Defined at:
  9563 ;;		line 121 in file "dc_motor.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9566 ;;		 -> motorL(9), 
  9567 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9568 ;;		 -> motorR(9), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  i               2   23[COMRAM] unsigned int 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9584 ;;Total ram usage:        6 bytes
  9585 ;; Hardware stack levels used: 1
  9586 ;; Hardware stack levels required when called: 3
  9587 ;; This function calls:
  9588 ;;		_setMotorPWM
  9589 ;; This function is called by:
  9590 ;;		_Left45
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text49
  9595   003BBC                     __ptext49:
  9596                           	callstack 0
  9597   003BBC                     _turnLeft:
  9598                           	callstack 24
  9599   003BBC                     
  9600                           ;dc_motor.c: 121: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 12
      +                          2: {;dc_motor.c: 124:     (mL->direction) = 0;
  9601   003BBC  EE20 F001          	lfsr	2,1
  9602   003BC0  5014               	movf	turnLeft@mL^0,w,c
  9603   003BC2  26D9               	addwf	fsr2l,f,c
  9604   003BC4  5015               	movf	(turnLeft@mL+1)^0,w,c
  9605   003BC6  22DA               	addwfc	fsr2h,f,c
  9606   003BC8  0E00               	movlw	0
  9607   003BCA  6EDF               	movwf	indf2,c
  9608                           
  9609                           ;dc_motor.c: 125:     (mR->direction) = 1;
  9610   003BCC  EE20 F001          	lfsr	2,1
  9611   003BD0  5016               	movf	turnLeft@mR^0,w,c
  9612   003BD2  26D9               	addwf	fsr2l,f,c
  9613   003BD4  5017               	movf	(turnLeft@mR+1)^0,w,c
  9614   003BD6  22DA               	addwfc	fsr2h,f,c
  9615   003BD8  0E01               	movlw	1
  9616   003BDA  6EDF               	movwf	indf2,c
  9617   003BDC                     
  9618                           ;dc_motor.c: 126:     setMotorPWM(mL);
  9619   003BDC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9620   003BE0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9621   003BE4  ECE4  F019         	call	_setMotorPWM	;wreg free
  9622   003BE8                     
  9623                           ;dc_motor.c: 127:     setMotorPWM(mR);
  9624   003BE8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9625   003BEC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9626   003BF0  ECE4  F019         	call	_setMotorPWM	;wreg free
  9627   003BF4                     
  9628                           ;dc_motor.c: 128:     for (unsigned int i = 0; i <50; i++)
  9629   003BF4  0E00               	movlw	0
  9630   003BF6  6E19               	movwf	(turnLeft@i+1)^0,c
  9631   003BF8  0E00               	movlw	0
  9632   003BFA  6E18               	movwf	turnLeft@i^0,c
  9633   003BFC                     l2888:
  9634                           
  9635                           ;dc_motor.c: 129:     {;dc_motor.c: 130:         mL->power++;
  9636   003BFC  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9637   003C00  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9638   003C04  2ADF               	incf	indf2,f,c
  9639                           
  9640                           ;dc_motor.c: 131:         mR->power++;
  9641   003C06  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9642   003C0A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9643   003C0E  2ADF               	incf	indf2,f,c
  9644   003C10                     
  9645                           ;dc_motor.c: 132:         setMotorPWM(mL);
  9646   003C10  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9647   003C14  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9648   003C18  ECE4  F019         	call	_setMotorPWM	;wreg free
  9649   003C1C                     
  9650                           ;dc_motor.c: 133:         setMotorPWM(mR);
  9651   003C1C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9652   003C20  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9653   003C24  ECE4  F019         	call	_setMotorPWM	;wreg free
  9654   003C28                     
  9655                           ;dc_motor.c: 134:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9656   003C28  0EE4               	movlw	228
  9657   003C2A                     u4007:
  9658   003C2A  D000               	nop2	
  9659   003C2C  D000               	nop2	
  9660   003C2E  2EE8               	decfsz	wreg,f,c
  9661   003C30  D7FC               	bra	u4007
  9662   003C32  D000               	nop2	
  9663   003C34  D000               	nop2	
  9664   003C36                     
  9665                           ;dc_motor.c: 135:     }
  9666   003C36  4A18               	infsnz	turnLeft@i^0,f,c
  9667   003C38  2A19               	incf	(turnLeft@i+1)^0,f,c
  9668   003C3A  5019               	movf	(turnLeft@i+1)^0,w,c
  9669   003C3C  E109               	bnz	u2020
  9670   003C3E  0E32               	movlw	50
  9671   003C40  5C18               	subwf	turnLeft@i^0,w,c
  9672   003C42  A0D8               	btfss	status,0,c
  9673   003C44  EF26  F01E         	goto	u2021
  9674   003C48  EF28  F01E         	goto	u2020
  9675   003C4C                     u2021:
  9676   003C4C  EFFE  F01D         	goto	l2888
  9677   003C50                     u2020:
  9678   003C50  0012               	return		;funcret
  9679   003C52                     __end_of_turnLeft:
  9680                           	callstack 0
  9681                           
  9682 ;; *************** function _reverseHalfSquare *****************
  9683 ;; Defined at:
  9684 ;;		line 224 in file "dc_motor.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  9687 ;;		 -> motorL(9), 
  9688 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  9689 ;;		 -> motorR(9), 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;		None
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;Total ram usage:        6 bytes
  9706 ;; Hardware stack levels used: 1
  9707 ;; Hardware stack levels required when called: 4
  9708 ;; This function calls:
  9709 ;;		_fullSpeedReverse
  9710 ;;		_stop
  9711 ;; This function is called by:
  9712 ;;		_Red_R90
  9713 ;;		_Green_L90
  9714 ;;		_Blue_T180
  9715 ;;		_Yellow_rev1_R90
  9716 ;;		_Pink_rev1_L90
  9717 ;;		_Orange_R135
  9718 ;;		_LightBlue_L135
  9719 ;;		_White
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text50
  9724   003DF6                     __ptext50:
  9725                           	callstack 0
  9726   003DF6                     _reverseHalfSquare:
  9727                           	callstack 24
  9728   003DF6                     
  9729                           ;dc_motor.c: 224: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 225: {;dc_motor.c: 226:     stop(mL,mR);
  9730   003DF6  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9731   003DFA  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9732   003DFE  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9733   003E02  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9734   003E06  EC9C  F01C         	call	_stop	;wreg free
  9735   003E0A                     
  9736                           ;dc_motor.c: 227:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9737   003E0A  0E09               	movlw	9
  9738   003E0C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9739   003E0E  0E1E               	movlw	30
  9740   003E10  6E1F               	movwf	??_reverseHalfSquare^0,c
  9741   003E12  0EE4               	movlw	228
  9742   003E14                     u4017:
  9743   003E14  2EE8               	decfsz	wreg,f,c
  9744   003E16  D7FE               	bra	u4017
  9745   003E18  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9746   003E1A  D7FC               	bra	u4017
  9747   003E1C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9748   003E1E  D7FA               	bra	u4017
  9749   003E20  D000               	nop2	
  9750   003E22                     
  9751                           ;dc_motor.c: 228:     fullSpeedReverse(mL,mR);
  9752   003E22  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  9753   003E26  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  9754   003E2A  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  9755   003E2E  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  9756   003E32  EC7E  F01F         	call	_fullSpeedReverse	;wreg free
  9757                           
  9758                           ;dc_motor.c: 229:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  9759   003E36  0E1A               	movlw	26
  9760   003E38  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9761   003E3A  0EFA               	movlw	250
  9762   003E3C  6E1F               	movwf	??_reverseHalfSquare^0,c
  9763   003E3E  0E46               	movlw	70
  9764   003E40                     u4027:
  9765   003E40  2EE8               	decfsz	wreg,f,c
  9766   003E42  D7FE               	bra	u4027
  9767   003E44  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9768   003E46  D7FC               	bra	u4027
  9769   003E48  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9770   003E4A  D7FA               	bra	u4027
  9771   003E4C  D000               	nop2	
  9772   003E4E                     
  9773                           ;dc_motor.c: 230:     stop(mL,mR);
  9774   003E4E  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9775   003E52  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9776   003E56  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9777   003E5A  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9778   003E5E  EC9C  F01C         	call	_stop	;wreg free
  9779   003E62                     
  9780                           ;dc_motor.c: 231:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9781   003E62  0E09               	movlw	9
  9782   003E64  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9783   003E66  0E1E               	movlw	30
  9784   003E68  6E1F               	movwf	??_reverseHalfSquare^0,c
  9785   003E6A  0EE4               	movlw	228
  9786   003E6C                     u4037:
  9787   003E6C  2EE8               	decfsz	wreg,f,c
  9788   003E6E  D7FE               	bra	u4037
  9789   003E70  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9790   003E72  D7FC               	bra	u4037
  9791   003E74  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9792   003E76  D7FA               	bra	u4037
  9793   003E78  D000               	nop2	
  9794   003E7A  0012               	return		;funcret
  9795   003E7C                     __end_of_reverseHalfSquare:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _stop *****************
  9799 ;; Defined at:
  9800 ;;		line 101 in file "dc_motor.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9803 ;;		 -> motorL(9), 
  9804 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9805 ;;		 -> motorR(9), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;Total ram usage:        5 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; Hardware stack levels required when called: 3
  9824 ;; This function calls:
  9825 ;;		_setMotorPWM
  9826 ;; This function is called by:
  9827 ;;		_main
  9828 ;;		_RAMback
  9829 ;;		_Left45
  9830 ;;		_Right45
  9831 ;;		_reverseHalfSquare
  9832 ;;		_White
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text51
  9837   003938                     __ptext51:
  9838                           	callstack 0
  9839   003938                     _stop:
  9840                           	callstack 27
  9841   003938                     
  9842                           ;dc_motor.c: 101: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 102: {
      +                          ;dc_motor.c: 103:     LATDbits.LATD4 = 1;;
  9843   003938  887C               	bsf	124,4,c	;volatile
  9844                           
  9845                           ;dc_motor.c: 104:     while((mL->power)>0 && (mR->power)>0)
  9846   00393A  EFD5  F01C         	goto	l2872
  9847   00393E                     l2858:
  9848                           
  9849                           ;dc_motor.c: 105:     {;dc_motor.c: 107:         if (mL->power>0){
  9850   00393E  C014  FFD9         	movff	stop@mL,fsr2l
  9851   003942  C015  FFDA         	movff	stop@mL+1,fsr2h
  9852   003946  50DF               	movf	indf2,w,c
  9853   003948  B4D8               	btfsc	status,2,c
  9854   00394A  EFA9  F01C         	goto	u1981
  9855   00394E  EFAB  F01C         	goto	u1980
  9856   003952                     u1981:
  9857   003952  EFB0  F01C         	goto	l2862
  9858   003956                     u1980:
  9859   003956                     
  9860                           ;dc_motor.c: 108:             mL->power--;
  9861   003956  C014  FFD9         	movff	stop@mL,fsr2l
  9862   00395A  C015  FFDA         	movff	stop@mL+1,fsr2h
  9863   00395E  06DF               	decf	indf2,f,c
  9864   003960                     l2862:
  9865                           
  9866                           ;dc_motor.c: 110:         if ((mR->power)>0){
  9867   003960  C016  FFD9         	movff	stop@mR,fsr2l
  9868   003964  C017  FFDA         	movff	stop@mR+1,fsr2h
  9869   003968  50DF               	movf	indf2,w,c
  9870   00396A  B4D8               	btfsc	status,2,c
  9871   00396C  EFBA  F01C         	goto	u1991
  9872   003970  EFBC  F01C         	goto	u1990
  9873   003974                     u1991:
  9874   003974  EFC1  F01C         	goto	l2866
  9875   003978                     u1990:
  9876   003978                     
  9877                           ;dc_motor.c: 111:             mR->power--;
  9878   003978  C016  FFD9         	movff	stop@mR,fsr2l
  9879   00397C  C017  FFDA         	movff	stop@mR+1,fsr2h
  9880   003980  06DF               	decf	indf2,f,c
  9881   003982                     l2866:
  9882                           
  9883                           ;dc_motor.c: 113:         setMotorPWM(mL);
  9884   003982  C014  F00E         	movff	stop@mL,setMotorPWM@m
  9885   003986  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9886   00398A  ECE4  F019         	call	_setMotorPWM	;wreg free
  9887   00398E                     
  9888                           ;dc_motor.c: 114:         setMotorPWM(mR);
  9889   00398E  C016  F00E         	movff	stop@mR,setMotorPWM@m
  9890   003992  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9891   003996  ECE4  F019         	call	_setMotorPWM	;wreg free
  9892   00399A                     
  9893                           ;dc_motor.c: 115:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9894   00399A  0E09               	movlw	9
  9895   00399C  6E18               	movwf	??_stop^0,c
  9896   00399E  0E4E               	movlw	78
  9897   0039A0                     u4047:
  9898   0039A0  2EE8               	decfsz	wreg,f,c
  9899   0039A2  D7FE               	bra	u4047
  9900   0039A4  2E18               	decfsz	??_stop^0,f,c
  9901   0039A6  D7FC               	bra	u4047
  9902   0039A8  D000               	nop2	
  9903   0039AA                     l2872:
  9904                           
  9905                           ;dc_motor.c: 104:     while((mL->power)>0 && (mR->power)>0)
  9906   0039AA  C014  FFD9         	movff	stop@mL,fsr2l
  9907   0039AE  C015  FFDA         	movff	stop@mL+1,fsr2h
  9908   0039B2  50DF               	movf	indf2,w,c
  9909   0039B4  B4D8               	btfsc	status,2,c
  9910   0039B6  EFDF  F01C         	goto	u2001
  9911   0039BA  EFE1  F01C         	goto	u2000
  9912   0039BE                     u2001:
  9913   0039BE  EFED  F01C         	goto	l505
  9914   0039C2                     u2000:
  9915   0039C2  C016  FFD9         	movff	stop@mR,fsr2l
  9916   0039C6  C017  FFDA         	movff	stop@mR+1,fsr2h
  9917   0039CA  50DF               	movf	indf2,w,c
  9918   0039CC  A4D8               	btfss	status,2,c
  9919   0039CE  EFEB  F01C         	goto	u2011
  9920   0039D2  EFED  F01C         	goto	u2010
  9921   0039D6                     u2011:
  9922   0039D6  EF9F  F01C         	goto	l2858
  9923   0039DA                     u2010:
  9924   0039DA                     l505:
  9925                           
  9926                           ;dc_motor.c: 117:     LATDbits.LATD4 = 0;;
  9927   0039DA  987C               	bcf	124,4,c	;volatile
  9928   0039DC  0012               	return		;funcret
  9929   0039DE                     __end_of_stop:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function _fullSpeedReverse *****************
  9933 ;; Defined at:
  9934 ;;		line 171 in file "dc_motor.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9937 ;;		 -> motorL(9), 
  9938 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9939 ;;		 -> motorR(9), 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  i               2   24[COMRAM] unsigned int 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9954 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9955 ;;Total ram usage:        7 bytes
  9956 ;; Hardware stack levels used: 1
  9957 ;; Hardware stack levels required when called: 3
  9958 ;; This function calls:
  9959 ;;		_setMotorPWM
  9960 ;; This function is called by:
  9961 ;;		_RAMback
  9962 ;;		_reverseHalfSquare
  9963 ;;		_Yellow_rev1_R90
  9964 ;;		_Pink_rev1_L90
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text52
  9969   003EFC                     __ptext52:
  9970                           	callstack 0
  9971   003EFC                     _fullSpeedReverse:
  9972                           	callstack 24
  9973   003EFC                     
  9974                           ;dc_motor.c: 171: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 172: {;dc_motor.c: 173:  (mL->direction) = 0;
  9975   003EFC  EE20 F001          	lfsr	2,1
  9976   003F00  5014               	movf	fullSpeedReverse@mL^0,w,c
  9977   003F02  26D9               	addwf	fsr2l,f,c
  9978   003F04  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9979   003F06  22DA               	addwfc	fsr2h,f,c
  9980   003F08  0E00               	movlw	0
  9981   003F0A  6EDF               	movwf	indf2,c
  9982                           
  9983                           ;dc_motor.c: 174:  (mR->direction) = 0;
  9984   003F0C  EE20 F001          	lfsr	2,1
  9985   003F10  5016               	movf	fullSpeedReverse@mR^0,w,c
  9986   003F12  26D9               	addwf	fsr2l,f,c
  9987   003F14  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9988   003F16  22DA               	addwfc	fsr2h,f,c
  9989   003F18  0E00               	movlw	0
  9990   003F1A  6EDF               	movwf	indf2,c
  9991   003F1C                     
  9992                           ;dc_motor.c: 176:     for (unsigned int i = 0; i <50; i++)
  9993   003F1C  0E00               	movlw	0
  9994   003F1E  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9995   003F20  0E00               	movlw	0
  9996   003F22  6E19               	movwf	fullSpeedReverse@i^0,c
  9997   003F24                     l2908:
  9998                           
  9999                           ;dc_motor.c: 177:     {;dc_motor.c: 178:         (mL->power)++;
 10000   003F24  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
 10001   003F28  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
 10002   003F2C  2ADF               	incf	indf2,f,c
 10003                           
 10004                           ;dc_motor.c: 179:         (mR->power)++;
 10005   003F2E  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
 10006   003F32  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
 10007   003F36  2ADF               	incf	indf2,f,c
 10008   003F38                     
 10009                           ;dc_motor.c: 180:         setMotorPWM(mL);
 10010   003F38  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
 10011   003F3C  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
 10012   003F40  ECE4  F019         	call	_setMotorPWM	;wreg free
 10013   003F44                     
 10014                           ;dc_motor.c: 181:         setMotorPWM(mR);
 10015   003F44  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
 10016   003F48  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
 10017   003F4C  ECE4  F019         	call	_setMotorPWM	;wreg free
 10018   003F50                     
 10019                           ;dc_motor.c: 182:         _delay((unsigned long)((400)*(64000000/4000000.0)));
 10020   003F50  0E09               	movlw	9
 10021   003F52  6E18               	movwf	??_fullSpeedReverse^0,c
 10022   003F54  0E4E               	movlw	78
 10023   003F56                     u4057:
 10024   003F56  2EE8               	decfsz	wreg,f,c
 10025   003F58  D7FE               	bra	u4057
 10026   003F5A  2E18               	decfsz	??_fullSpeedReverse^0,f,c
 10027   003F5C  D7FC               	bra	u4057
 10028   003F5E  D000               	nop2	
 10029   003F60                     
 10030                           ;dc_motor.c: 183:     }
 10031   003F60  4A19               	infsnz	fullSpeedReverse@i^0,f,c
 10032   003F62  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
 10033   003F64  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
 10034   003F66  E109               	bnz	u2030
 10035   003F68  0E32               	movlw	50
 10036   003F6A  5C19               	subwf	fullSpeedReverse@i^0,w,c
 10037   003F6C  A0D8               	btfss	status,0,c
 10038   003F6E  EFBB  F01F         	goto	u2031
 10039   003F72  EFBD  F01F         	goto	u2030
 10040   003F76                     u2031:
 10041   003F76  EF92  F01F         	goto	l2908
 10042   003F7A                     u2030:
 10043   003F7A  0012               	return		;funcret
 10044   003F7C                     __end_of_fullSpeedReverse:
 10045                           	callstack 0
 10046                           
 10047 ;; *************** function _setMotorPWM *****************
 10048 ;; Defined at:
 10049 ;;		line 70 in file "dc_motor.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10052 ;;		 -> motorR(9), motorL(9), 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  negDuty         1   18[COMRAM] unsigned char 
 10055 ;;  posDuty         1   17[COMRAM] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;Total ram usage:        6 bytes
 10070 ;; Hardware stack levels used: 1
 10071 ;; Hardware stack levels required when called: 2
 10072 ;; This function calls:
 10073 ;;		___lwdiv
 10074 ;;		___wmul
 10075 ;; This function is called by:
 10076 ;;		_stop
 10077 ;;		_turnLeft
 10078 ;;		_turnRight
 10079 ;;		_fullSpeedAhead
 10080 ;;		_fullSpeedReverse
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text53
 10085   0033C8                     __ptext53:
 10086                           	callstack 0
 10087   0033C8                     _setMotorPWM:
 10088                           	callstack 27
 10089   0033C8                     
 10090                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
 10091   0033C8  EE20 F002          	lfsr	2,2
 10092   0033CC  500E               	movf	setMotorPWM@m^0,w,c
 10093   0033CE  26D9               	addwf	fsr2l,f,c
 10094   0033D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10095   0033D2  22DA               	addwfc	fsr2h,f,c
 10096   0033D4  50DF               	movf	indf2,w,c
 10097   0033D6  B4D8               	btfsc	status,2,c
 10098   0033D8  EFF0  F019         	goto	u1961
 10099   0033DC  EFF2  F019         	goto	u1960
 10100   0033E0                     u1961:
 10101   0033E0  EF26  F01A         	goto	l2846
 10102   0033E4                     u1960:
 10103   0033E4                     
 10104                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
 10105   0033E4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10106   0033E8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10107   0033EC  50DF               	movf	indf2,w,c
 10108   0033EE  6E10               	movwf	??_setMotorPWM^0,c
 10109   0033F0  5010               	movf	??_setMotorPWM^0,w,c
 10110   0033F2  6E01               	movwf	___wmul@multiplier^0,c
 10111   0033F4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10112   0033F6  EE20 F003          	lfsr	2,3
 10113   0033FA  500E               	movf	setMotorPWM@m^0,w,c
 10114   0033FC  26D9               	addwf	fsr2l,f,c
 10115   0033FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10116   003400  22DA               	addwfc	fsr2h,f,c
 10117   003402  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10118   003406  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10119   00340A  ECE4  F022         	call	___wmul	;wreg free
 10120   00340E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10121   003412  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10122   003416  0E00               	movlw	0
 10123   003418  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10124   00341A  0E64               	movlw	100
 10125   00341C  6E09               	movwf	___lwdiv@divisor^0,c
 10126   00341E  EC3A  F020         	call	___lwdiv	;wreg free
 10127   003422  EE20 F003          	lfsr	2,3
 10128   003426  500E               	movf	setMotorPWM@m^0,w,c
 10129   003428  26D9               	addwf	fsr2l,f,c
 10130   00342A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10131   00342C  22DA               	addwfc	fsr2h,f,c
 10132   00342E  50DF               	movf	indf2,w,c
 10133   003430  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10134   003432  5007               	movf	?___lwdiv^0,w,c
 10135   003434  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10136   003436  6E12               	movwf	setMotorPWM@posDuty^0,c
 10137   003438                     
 10138                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
 10139   003438  EE20 F003          	lfsr	2,3
 10140   00343C  500E               	movf	setMotorPWM@m^0,w,c
 10141   00343E  26D9               	addwf	fsr2l,f,c
 10142   003440  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10143   003442  22DA               	addwfc	fsr2h,f,c
 10144   003444  50DF               	movf	indf2,w,c
 10145   003446  6E13               	movwf	setMotorPWM@negDuty^0,c
 10146                           
 10147                           ;dc_motor.c: 77:     }
 10148   003448  EF49  F01A         	goto	l2850
 10149   00344C                     l2846:
 10150                           
 10151                           ;dc_motor.c: 79:         posDuty=0;
 10152   00344C  0E00               	movlw	0
 10153   00344E  6E12               	movwf	setMotorPWM@posDuty^0,c
 10154   003450                     
 10155                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10156   003450  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10157   003454  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10158   003458  50DF               	movf	indf2,w,c
 10159   00345A  6E10               	movwf	??_setMotorPWM^0,c
 10160   00345C  5010               	movf	??_setMotorPWM^0,w,c
 10161   00345E  6E01               	movwf	___wmul@multiplier^0,c
 10162   003460  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10163   003462  EE20 F003          	lfsr	2,3
 10164   003466  500E               	movf	setMotorPWM@m^0,w,c
 10165   003468  26D9               	addwf	fsr2l,f,c
 10166   00346A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10167   00346C  22DA               	addwfc	fsr2h,f,c
 10168   00346E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10169   003472  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10170   003476  ECE4  F022         	call	___wmul	;wreg free
 10171   00347A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10172   00347E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10173   003482  0E00               	movlw	0
 10174   003484  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10175   003486  0E64               	movlw	100
 10176   003488  6E09               	movwf	___lwdiv@divisor^0,c
 10177   00348A  EC3A  F020         	call	___lwdiv	;wreg free
 10178   00348E  5007               	movf	?___lwdiv^0,w,c
 10179   003490  6E13               	movwf	setMotorPWM@negDuty^0,c
 10180   003492                     l2850:
 10181                           
 10182                           ;dc_motor.c: 83:     if (m->direction) {
 10183   003492  EE20 F001          	lfsr	2,1
 10184   003496  500E               	movf	setMotorPWM@m^0,w,c
 10185   003498  26D9               	addwf	fsr2l,f,c
 10186   00349A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10187   00349C  22DA               	addwfc	fsr2h,f,c
 10188   00349E  50DF               	movf	indf2,w,c
 10189   0034A0  B4D8               	btfsc	status,2,c
 10190   0034A2  EF55  F01A         	goto	u1971
 10191   0034A6  EF57  F01A         	goto	u1970
 10192   0034AA                     u1971:
 10193   0034AA  EF79  F01A         	goto	l2854
 10194   0034AE                     u1970:
 10195   0034AE                     
 10196                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 10197   0034AE  EE20 F005          	lfsr	2,5
 10198   0034B2  500E               	movf	setMotorPWM@m^0,w,c
 10199   0034B4  26D9               	addwf	fsr2l,f,c
 10200   0034B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10201   0034B8  22DA               	addwfc	fsr2h,f,c
 10202   0034BA  CFDE F010          	movff	postinc2,??_setMotorPWM
 10203   0034BE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10204   0034C2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10205   0034C6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10206   0034CA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10207                           
 10208                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 10209   0034CE  EE20 F007          	lfsr	2,7
 10210   0034D2  500E               	movf	setMotorPWM@m^0,w,c
 10211   0034D4  26D9               	addwf	fsr2l,f,c
 10212   0034D6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10213   0034D8  22DA               	addwfc	fsr2h,f,c
 10214   0034DA  CFDE F010          	movff	postinc2,??_setMotorPWM
 10215   0034DE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10216   0034E2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10217   0034E6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10218   0034EA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10219                           
 10220                           ;dc_motor.c: 86:     } else {
 10221   0034EE  EF99  F01A         	goto	l493
 10222   0034F2                     l2854:
 10223                           
 10224                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 10225   0034F2  EE20 F005          	lfsr	2,5
 10226   0034F6  500E               	movf	setMotorPWM@m^0,w,c
 10227   0034F8  26D9               	addwf	fsr2l,f,c
 10228   0034FA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10229   0034FC  22DA               	addwfc	fsr2h,f,c
 10230   0034FE  CFDE F010          	movff	postinc2,??_setMotorPWM
 10231   003502  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10232   003506  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10233   00350A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10234   00350E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10235                           
 10236                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 10237   003512  EE20 F007          	lfsr	2,7
 10238   003516  500E               	movf	setMotorPWM@m^0,w,c
 10239   003518  26D9               	addwf	fsr2l,f,c
 10240   00351A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10241   00351C  22DA               	addwfc	fsr2h,f,c
 10242   00351E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10243   003522  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10244   003526  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10245   00352A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10246   00352E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10247   003532                     l493:
 10248   003532  0012               	return		;funcret
 10249   003534                     __end_of_setMotorPWM:
 10250                           	callstack 0
 10251                           
 10252 ;; *************** function ___wmul *****************
 10253 ;; Defined at:
 10254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  multiplier      2    0[COMRAM] unsigned int 
 10257 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  product         2    4[COMRAM] unsigned int 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  2    0[COMRAM] unsigned int 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0, prodl, prodh
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;Total ram usage:        6 bytes
 10274 ;; Hardware stack levels used: 1
 10275 ;; Hardware stack levels required when called: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_setMotorPWM
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text54
 10284   0045C8                     __ptext54:
 10285                           	callstack 0
 10286   0045C8                     ___wmul:
 10287                           	callstack 27
 10288   0045C8  5001               	movf	___wmul@multiplier^0,w,c
 10289   0045CA  0203               	mulwf	___wmul@multiplicand^0,c
 10290   0045CC  CFF3 F005          	movff	prodl,___wmul@product
 10291   0045D0  CFF4 F006          	movff	prodh,___wmul@product+1
 10292   0045D4  5001               	movf	___wmul@multiplier^0,w,c
 10293   0045D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10294   0045D8  50F3               	movf	243,w,c
 10295   0045DA  2606               	addwf	(___wmul@product+1)^0,f,c
 10296   0045DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10297   0045DE  0203               	mulwf	___wmul@multiplicand^0,c
 10298   0045E0  50F3               	movf	243,w,c
 10299   0045E2  2606               	addwf	(___wmul@product+1)^0,f,c
 10300   0045E4  C005  F001         	movff	___wmul@product,?___wmul
 10301   0045E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10302   0045EC  0012               	return		;funcret
 10303   0045EE                     __end_of___wmul:
 10304                           	callstack 0
 10305                           
 10306 ;; *************** function ___lwdiv *****************
 10307 ;; Defined at:
 10308 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  dividend        2    6[COMRAM] unsigned int 
 10311 ;;  divisor         2    8[COMRAM] unsigned int 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;  quotient        2   10[COMRAM] unsigned int 
 10314 ;;  counter         1   12[COMRAM] unsigned char 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  2    6[COMRAM] unsigned int 
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;Total ram usage:        7 bytes
 10329 ;; Hardware stack levels used: 1
 10330 ;; Hardware stack levels required when called: 1
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_setMotorPWM
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text55
 10339   004074                     __ptext55:
 10340                           	callstack 0
 10341   004074                     ___lwdiv:
 10342                           	callstack 27
 10343   004074  0E00               	movlw	0
 10344   004076  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10345   004078  0E00               	movlw	0
 10346   00407A  6E0B               	movwf	___lwdiv@quotient^0,c
 10347   00407C  5009               	movf	___lwdiv@divisor^0,w,c
 10348   00407E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10349   004080  B4D8               	btfsc	status,2,c
 10350   004082  EF45  F020         	goto	u1931
 10351   004086  EF47  F020         	goto	u1930
 10352   00408A                     u1931:
 10353   00408A  EF6F  F020         	goto	l1203
 10354   00408E                     u1930:
 10355   00408E  0E01               	movlw	1
 10356   004090  6E0D               	movwf	___lwdiv@counter^0,c
 10357   004092  EF4F  F020         	goto	l2826
 10358   004096                     l2824:
 10359   004096  90D8               	bcf	status,0,c
 10360   004098  3609               	rlcf	___lwdiv@divisor^0,f,c
 10361   00409A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10362   00409C  2A0D               	incf	___lwdiv@counter^0,f,c
 10363   00409E                     l2826:
 10364   00409E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10365   0040A0  EF54  F020         	goto	u1941
 10366   0040A4  EF56  F020         	goto	u1940
 10367   0040A8                     u1941:
 10368   0040A8  EF4B  F020         	goto	l2824
 10369   0040AC                     u1940:
 10370   0040AC                     l2828:
 10371   0040AC  90D8               	bcf	status,0,c
 10372   0040AE  360B               	rlcf	___lwdiv@quotient^0,f,c
 10373   0040B0  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10374   0040B2  5009               	movf	___lwdiv@divisor^0,w,c
 10375   0040B4  5C07               	subwf	___lwdiv@dividend^0,w,c
 10376   0040B6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10377   0040B8  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10378   0040BA  A0D8               	btfss	status,0,c
 10379   0040BC  EF62  F020         	goto	u1951
 10380   0040C0  EF64  F020         	goto	u1950
 10381   0040C4                     u1951:
 10382   0040C4  EF69  F020         	goto	l2836
 10383   0040C8                     u1950:
 10384   0040C8  5009               	movf	___lwdiv@divisor^0,w,c
 10385   0040CA  5E07               	subwf	___lwdiv@dividend^0,f,c
 10386   0040CC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10387   0040CE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10388   0040D0  800B               	bsf	___lwdiv@quotient^0,0,c
 10389   0040D2                     l2836:
 10390   0040D2  90D8               	bcf	status,0,c
 10391   0040D4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10392   0040D6  3209               	rrcf	___lwdiv@divisor^0,f,c
 10393   0040D8  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10394   0040DA  EF56  F020         	goto	l2828
 10395   0040DE                     l1203:
 10396   0040DE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10397   0040E2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10398   0040E6  0012               	return		;funcret
 10399   0040E8                     __end_of___lwdiv:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _ClickLEDOn *****************
 10403 ;; Defined at:
 10404 ;;		line 93 in file "colorclick.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  power           1    wreg     unsigned char 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  power           1    0[COMRAM] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;Total ram usage:        1 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 1
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_main
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text56
 10433   004512                     __ptext56:
 10434                           	callstack 0
 10435   004512                     _ClickLEDOn:
 10436                           	callstack 29
 10437                           
 10438                           ;incstack = 0
 10439                           ;ClickLEDOn@power stored from wreg
 10440   004512  6E01               	movwf	ClickLEDOn@power^0,c
 10441   004514                     
 10442                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10443   004514  5001               	movf	ClickLEDOn@power^0,w,c
 10444   004516  B4D8               	btfsc	status,2,c
 10445   004518  EF90  F022         	goto	u3371
 10446   00451C  EF92  F022         	goto	u3370
 10447   004520                     u3371:
 10448   004520  EF97  F022         	goto	l3866
 10449   004524                     u3370:
 10450   004524                     
 10451                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10452   004524  827F               	bsf	127,1,c	;volatile
 10453                           
 10454                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10455   004526  8879               	bsf	121,4,c	;volatile
 10456                           
 10457                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10458   004528  8E7E               	bsf	126,7,c	;volatile
 10459                           
 10460                           ;colorclick.c: 99:     }
 10461   00452A  EFA2  F022         	goto	l52
 10462   00452E                     l3866:
 10463   00452E  5001               	movf	ClickLEDOn@power^0,w,c
 10464   004530  A4D8               	btfss	status,2,c
 10465   004532  EF9D  F022         	goto	u3381
 10466   004536  EF9F  F022         	goto	u3380
 10467   00453A                     u3381:
 10468   00453A  EFA2  F022         	goto	l52
 10469   00453E                     u3380:
 10470   00453E                     
 10471                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10472   00453E  927F               	bcf	127,1,c	;volatile
 10473                           
 10474                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10475   004540  9879               	bcf	121,4,c	;volatile
 10476                           
 10477                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10478   004542  9E7E               	bcf	126,7,c	;volatile
 10479   004544                     l52:
 10480   004544  0012               	return		;funcret
 10481   004546                     __end_of_ClickLEDOn:
 10482                           	callstack 0
 10483                           
 10484 ;; *************** function _HighISR *****************
 10485 ;; Defined at:
 10486 ;;		line 25 in file "interrupts.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;		None
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;		None
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg, status,2
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;Total ram usage:        0 bytes
 10505 ;; Hardware stack levels used: 1
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		Interrupt level 2
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	intcode
 10514   000008                     __pintcode:
 10515                           	callstack 0
 10516   000008                     _HighISR:
 10517                           	callstack 22
 10518                           
 10519                           ;incstack = 0
 10520   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10521   00000A                     
 10522                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 10523   00000A  010E               	movlb	14	; () banked
 10524   00000C  AB33               	btfss	51,5,b	;volatile
 10525   00000E  EF0B  F000         	goto	i2u381_41
 10526   000012  EF0D  F000         	goto	i2u381_40
 10527   000016                     i2u381_41:
 10528   000016  EF14  F000         	goto	i2l709
 10529   00001A                     i2u381_40:
 10530   00001A                     
 10531                           ; BSR set to: 14
 10532                           ;interrupts.c: 29:     maxTime = 1;
 10533   00001A  0E00               	movlw	0
 10534   00001C  0100               	movlb	0	; () banked
 10535   00001E  6F65               	movwf	(_maxTime+1)& (0+255),b	;volatile
 10536   000020  0E01               	movlw	1
 10537   000022  6F64               	movwf	_maxTime& (0+255),b	;volatile
 10538   000024                     
 10539                           ; BSR set to: 0
 10540                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 10541   000024  010E               	movlb	14	; () banked
 10542   000026  9B33               	bcf	51,5,b	;volatile
 10543   000028                     i2l709:
 10544                           
 10545                           ; BSR set to: 14
 10546   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10547   00002A  0011               	retfie		f
 10548   00002C                     __end_of_HighISR:
 10549                           	callstack 0
 10550                           
 10551                           	psect	rparam
 10552   000000                     
 10553                           	psect	temp
 10554   00005F                     btemp:
 10555                           	callstack 0
 10556   00005F                     	ds	1
 10557   000000                     int$flags	set	btemp
 10558   000000                     wtemp8	set	btemp+1
 10559   000000                     ttemp5	set	btemp+1
 10560   000000                     ttemp6	set	btemp+4
 10561   000000                     ttemp7	set	btemp+8
 10562                           
 10563                           	psect	idloc
 10564                           
 10565                           ;Config register IDLOC0 @ 0x200000
 10566                           ;	unspecified, using default values
 10567   200000                     	org	2097152
 10568   200000  0FFF               	dw	4095
 10569                           
 10570                           ;Config register IDLOC1 @ 0x200002
 10571                           ;	unspecified, using default values
 10572   200002                     	org	2097154
 10573   200002  0FFF               	dw	4095
 10574                           
 10575                           ;Config register IDLOC2 @ 0x200004
 10576                           ;	unspecified, using default values
 10577   200004                     	org	2097156
 10578   200004  0FFF               	dw	4095
 10579                           
 10580                           ;Config register IDLOC3 @ 0x200006
 10581                           ;	unspecified, using default values
 10582   200006                     	org	2097158
 10583   200006  0FFF               	dw	4095
 10584                           
 10585                           ;Config register IDLOC4 @ 0x200008
 10586                           ;	unspecified, using default values
 10587   200008                     	org	2097160
 10588   200008  0FFF               	dw	4095
 10589                           
 10590                           ;Config register IDLOC5 @ 0x20000A
 10591                           ;	unspecified, using default values
 10592   20000A                     	org	2097162
 10593   20000A  0FFF               	dw	4095
 10594                           
 10595                           ;Config register IDLOC6 @ 0x20000C
 10596                           ;	unspecified, using default values
 10597   20000C                     	org	2097164
 10598   20000C  0FFF               	dw	4095
 10599                           
 10600                           ;Config register IDLOC7 @ 0x20000E
 10601                           ;	unspecified, using default values
 10602   20000E                     	org	2097166
 10603   20000E  0FFF               	dw	4095
 10604                           
 10605                           	psect	config
 10606                           
 10607                           ;Config register CONFIG1L @ 0x300000
 10608                           ;	External Oscillator mode Selection bits
 10609                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10610                           ;	Power-up default value for COSC bits
 10611                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10612   300000                     	org	3145728
 10613   300000  AA                 	db	170
 10614                           
 10615                           ;Config register CONFIG1H @ 0x300001
 10616                           ;	unspecified, using default values
 10617                           ;	Clock Out Enable bit
 10618                           ;	CLKOUTEN = 0x1, unprogrammed default
 10619                           ;	Clock Switch Enable bit
 10620                           ;	CSWEN = 0x1, unprogrammed default
 10621                           ;	Fail-Safe Clock Monitor Enable bit
 10622                           ;	FCMEN = 0x1, unprogrammed default
 10623   300001                     	org	3145729
 10624   300001  FF                 	db	255
 10625                           
 10626                           ;Config register CONFIG2L @ 0x300002
 10627                           ;	unspecified, using default values
 10628                           ;	Master Clear Enable bit
 10629                           ;	MCLRE = 0x1, unprogrammed default
 10630                           ;	Power-up Timer Enable bit
 10631                           ;	PWRTE = 0x1, unprogrammed default
 10632                           ;	Low-power BOR enable bit
 10633                           ;	LPBOREN = 0x1, unprogrammed default
 10634                           ;	Brown-out Reset Enable bits
 10635                           ;	BOREN = 0x3, unprogrammed default
 10636   300002                     	org	3145730
 10637   300002  FF                 	db	255
 10638                           
 10639                           ;Config register CONFIG2H @ 0x300003
 10640                           ;	unspecified, using default values
 10641                           ;	Brown Out Reset Voltage selection bits
 10642                           ;	BORV = 0x3, unprogrammed default
 10643                           ;	ZCD Disable bit
 10644                           ;	ZCD = 0x1, unprogrammed default
 10645                           ;	PPSLOCK bit One-Way Set Enable bit
 10646                           ;	PPS1WAY = 0x1, unprogrammed default
 10647                           ;	Stack Full/Underflow Reset Enable bit
 10648                           ;	STVREN = 0x1, unprogrammed default
 10649                           ;	Debugger Enable bit
 10650                           ;	DEBUG = 0x1, unprogrammed default
 10651                           ;	Extended Instruction Set Enable bit
 10652                           ;	XINST = 0x1, unprogrammed default
 10653   300003                     	org	3145731
 10654   300003  FF                 	db	255
 10655                           
 10656                           ;Config register CONFIG3L @ 0x300004
 10657                           ;	WDT Period Select bits
 10658                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10659                           ;	WDT operating mode
 10660                           ;	WDTE = OFF, WDT Disabled
 10661   300004                     	org	3145732
 10662   300004  9F                 	db	159
 10663                           
 10664                           ;Config register CONFIG3H @ 0x300005
 10665                           ;	unspecified, using default values
 10666                           ;	WDT Window Select bits
 10667                           ;	WDTCWS = 0x7, unprogrammed default
 10668                           ;	WDT input clock selector
 10669                           ;	WDTCCS = 0x7, unprogrammed default
 10670   300005                     	org	3145733
 10671   300005  FF                 	db	255
 10672                           
 10673                           ;Config register CONFIG4L @ 0x300006
 10674                           ;	unspecified, using default values
 10675                           ;	Write Protection Block 0
 10676                           ;	WRT0 = 0x1, unprogrammed default
 10677                           ;	Write Protection Block 1
 10678                           ;	WRT1 = 0x1, unprogrammed default
 10679                           ;	Write Protection Block 2
 10680                           ;	WRT2 = 0x1, unprogrammed default
 10681                           ;	Write Protection Block 3
 10682                           ;	WRT3 = 0x1, unprogrammed default
 10683                           ;	Write Protection Block 3
 10684                           ;	WRT4 = 0x1, unprogrammed default
 10685                           ;	Write Protection Block 3
 10686                           ;	WRT5 = 0x1, unprogrammed default
 10687                           ;	Write Protection Block 3
 10688                           ;	WRT6 = 0x1, unprogrammed default
 10689                           ;	Write Protection Block 3
 10690                           ;	WRT7 = 0x1, unprogrammed default
 10691   300006                     	org	3145734
 10692   300006  FF                 	db	255
 10693                           
 10694                           ;Config register CONFIG4H @ 0x300007
 10695                           ;	unspecified, using default values
 10696                           ;	Configuration Register Write Protection bit
 10697                           ;	WRTC = 0x1, unprogrammed default
 10698                           ;	Boot Block Write Protection bit
 10699                           ;	WRTB = 0x1, unprogrammed default
 10700                           ;	Data EEPROM Write Protection bit
 10701                           ;	WRTD = 0x1, unprogrammed default
 10702                           ;	Scanner Enable bit
 10703                           ;	SCANE = 0x1, unprogrammed default
 10704                           ;	Low Voltage Programming Enable bit
 10705                           ;	LVP = 0x1, unprogrammed default
 10706   300007                     	org	3145735
 10707   300007  FF                 	db	255
 10708                           
 10709                           ;Config register CONFIG5L @ 0x300008
 10710                           ;	unspecified, using default values
 10711                           ;	UserNVM Program Memory Code Protection bit
 10712                           ;	CP = 0x1, unprogrammed default
 10713                           ;	DataNVM Memory Code Protection bit
 10714                           ;	CPD = 0x1, unprogrammed default
 10715   300008                     	org	3145736
 10716   300008  FF                 	db	255
 10717                           
 10718                           ;Config register CONFIG5H @ 0x300009
 10719                           ;	unspecified, using default values
 10720   300009                     	org	3145737
 10721   300009  FF                 	db	255
 10722                           
 10723                           ;Config register CONFIG6L @ 0x30000A
 10724                           ;	unspecified, using default values
 10725                           ;	Table Read Protection Block 0
 10726                           ;	EBTR0 = 0x1, unprogrammed default
 10727                           ;	Table Read Protection Block 1
 10728                           ;	EBTR1 = 0x1, unprogrammed default
 10729                           ;	Table Read Protection Block 2
 10730                           ;	EBTR2 = 0x1, unprogrammed default
 10731                           ;	Table Read Protection Block 3
 10732                           ;	EBTR3 = 0x1, unprogrammed default
 10733                           ;	Table Read Protection Block 4
 10734                           ;	EBTR4 = 0x1, unprogrammed default
 10735                           ;	Table Read Protection Block 5
 10736                           ;	EBTR5 = 0x1, unprogrammed default
 10737                           ;	Table Read Protection Block 6
 10738                           ;	EBTR6 = 0x1, unprogrammed default
 10739                           ;	Table Read Protection Block 7
 10740                           ;	EBTR7 = 0x1, unprogrammed default
 10741   30000A                     	org	3145738
 10742   30000A  FF                 	db	255
 10743                           
 10744                           ;Config register CONFIG6H @ 0x30000B
 10745                           ;	unspecified, using default values
 10746                           ;	Boot Block Table Read Protection bit
 10747                           ;	EBTRB = 0x1, unprogrammed default
 10748   30000B                     	org	3145739
 10749   30000B  FF                 	db	255
 10750                           tosu	equ	0xFFF
 10751                           tosh	equ	0xFFE
 10752                           tosl	equ	0xFFD
 10753                           stkptr	equ	0xFFC
 10754                           pclatu	equ	0xFFB
 10755                           pclath	equ	0xFFA
 10756                           pcl	equ	0xFF9
 10757                           tblptru	equ	0xFF8
 10758                           tblptrh	equ	0xFF7
 10759                           tblptrl	equ	0xFF6
 10760                           tablat	equ	0xFF5
 10761                           prodh	equ	0xFF4
 10762                           prodl	equ	0xFF3
 10763                           indf0	equ	0xFEF
 10764                           postinc0	equ	0xFEE
 10765                           postdec0	equ	0xFED
 10766                           preinc0	equ	0xFEC
 10767                           plusw0	equ	0xFEB
 10768                           fsr0h	equ	0xFEA
 10769                           fsr0l	equ	0xFE9
 10770                           wreg	equ	0xFE8
 10771                           indf1	equ	0xFE7
 10772                           postinc1	equ	0xFE6
 10773                           postdec1	equ	0xFE5
 10774                           preinc1	equ	0xFE4
 10775                           plusw1	equ	0xFE3
 10776                           fsr1h	equ	0xFE2
 10777                           fsr1l	equ	0xFE1
 10778                           bsr	equ	0xFE0
 10779                           indf2	equ	0xFDF
 10780                           postinc2	equ	0xFDE
 10781                           postdec2	equ	0xFDD
 10782                           preinc2	equ	0xFDC
 10783                           plusw2	equ	0xFDB
 10784                           fsr2h	equ	0xFDA
 10785                           fsr2l	equ	0xFD9
 10786                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        11
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     44     153
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_11(CODE[43]), STR_10(CODE[43]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2845$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2845$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    White@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RAMback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    RAMback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    Colour2Action@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    Hue2Colour@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    colour_read_all@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    colour_read_all@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S312DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S312DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_Colour2Action
    _memoryUpdateTime->___fladd
    _colour_read_all->___fldiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _Hue2Colour->___flge
    _Colour2Action->_White
    _White->___flge
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    _fullSpeedAhead->_setMotorPWM
    ___flge->___fladd
    ___fladd->_getTimerValue
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _RAMback->_fullSpeedReverse
    _Pink_rev1_L90->_reverseHalfSquare
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colour_read_all
    _colour_read_all->___fldiv
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  478991
                                             41 BANK0      3     3      0
                         _ClickLEDOn
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                     8     4      4    7547
                                             74 COMRAM     8     4      4
                            ___fladd
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     28    24      4    7655
                                             13 BANK0     28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   18441
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     863
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3629
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           6     2      4    4027
                                             86 COMRAM     6     2      4
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  430433
                                             90 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               20    10     10  238071
                                             86 COMRAM     4     4      0
                                              0 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _RAMback
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fladd
                             ___flge
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4148
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1406
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2718
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    2615
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3142
                                             74 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3028
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   30751
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27788
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _RAMback                                              6     2      4    7792
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   30751
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27876
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27876
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27788
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9052
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19280
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10292
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9660
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8552
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4285
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2919
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2133
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedReverse
       _reverseHalfSquare
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _RAMback
         _fullSpeedReverse
         _stop
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedReverse
         _reverseHalfSquare
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___xxtofl (ARG)
         _getTimerValue (ARG)
           ___flmul
           ___xxtofl
       ___flge
         ___fladd (ARG)
       _fullSpeedAhead
         _setMotorPWM
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
     ___flge
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___fladd
     ___fldiv
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllhh       52      0       0      42        0.0%
BITBIGSFRllhllh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRlllllh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllh      17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRlllllh      5      0       0      53        0.0%
BITBIGSFRhhlll       5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRlllllh      3      0       0      52        0.0%
BITBIGSFRllhlh       2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      51        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      62        0.0%
DATA                 0      0     147       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 16 12:47:24 2023

                    _color_read_Red 42C0                        ___fldiv@aexp 00CE  
                      ___fldiv@bexp 00CD                        ___fldiv@sign 00C6  
                   _color_read_Blue 43B0                                  l31 4510  
                                l40 435E                                  l34 4652  
                                l43 43FE                                  l52 4544  
                                l37 430E                                  l46 43AE  
                   ??_getTimerValue 0037                 ___wmul@multiplicand 0003  
                    ?_rotate180left 0020                    _color_read_Clear 4360  
                  _color_read_Green 4310                   ??_Interrupts_init 0001  
                       Green_L90@mL 0021                         Green_L90@mR 0023  
                               l202 468E                                 l115 10C4  
                               l123 1590                                 l211 44D0  
                               l205 4698                                 l109 305E  
                               l144 1A92                                 l208 466C  
                               l163 3212                                 l315 2E2C  
                               l190 459E                                 l511 3C50  
                               l352 4632                                 l505 39DA  
                               l521 3EFA                                 l193 45A0  
                               l506 39DC                                 l516 3BBA  
                               l532 3D6A                                 l196 45C6  
                               l605 23F8                                 l526 3F7A  
                               l535 42BE                                 l543 3FF6  
                               l703 4678                                 l391 4660  
                               l199 46A2                                 l712 45EC  
                               l640 4574                                 l529 3DF4  
                               l553 426C                                 l538 3E7A  
                               l298 2C34                                 l563 3936  
                               l643 41B6                                 l548 4072  
                               l493 3532                                 l573 3B24  
                               l581 21F2                                 l558 388E  
                               l662 4218                                 l486 3CE0  
                               l568 3A80                                 l496 4154  
                               l656 4610                                 l578 1FC2  
                               l659 46AC                                 l589 21F2  
                               l971 37E6                                 l982 373C  
                               l977 36F6              memoryUpdateMovement@cf 0001  
                               wreg 000FE8               ?_memoryUpdateMovement 0001  
                      ___flmul@aexp 002B                        ___flmul@bexp 002C  
                      ___flmul@sign 0026                        ___flmul@temp 0031  
                      ___flmul@prod 002D                     __end_of_RGB2Hue 1592  
                      ___fltol@exp1 000A                                l1009 3638  
                              l1210 40E6                                l1203 40DE  
                              l1240 1C82                                l3000 2446  
                              l1241 1C70                                l1305 2A64  
                              l1242 1C36                                l1330 2822  
                              l3010 2476                                l3002 244C  
                              l1307 2ADC                                l3100 27B2  
                              l3020 24AE                                l3012 2478  
                              l3004 245C                                l1308 2ACA  
                              l1333 26B4                                l3110 2808  
                              l3102 27CC                                l3030 24FE  
                              l3022 24CE                                l1326 24BE  
                              l3014 2488                                l3006 2462  
                              l1343 27E4                                l1335 272C  
                              l3200 3FF8                                l3104 27E8  
                              l3112 280E                                l1336 271A  
                              l3040 254E                                l3032 2508  
                              l3024 24DE                                l3016 2498  
                              l3008 2468                                l3120 3226  
                              l1257 1D9C                                l1249 1F52  
                              l3210 4258                                l3202 400A  
                              l1266 1E6C                                l3114 2812  
                              l3106 27F8                                l3050 2590  
                              l3042 255A                                l3034 251E  
                              l3018 24A8                                l1370 33C6  
                              l3130 32A4                                l3122 3234  
                              l4010 30CC                                l4002 3060  
                              l1282 448E                                l1267 1E5A  
                              l3204 404A                                l3220 384E  
                              l3212 37E8                                l3300 1AE2  
                              l3108 2806                                l3060 25F2  
                              l3052 25A0                                l3044 2568  
                              l3036 252A                                l3028 24F2  
                              l3140 32F8                                l3132 32AC  
                              l3124 327A                                l4020 315C  
                              l4012 30EC                                l4004 307E  
                              l4100 2BCC                                l1381 335E  
                              l3206 421A                                l3230 38E2  
                              l3214 37FA                                l3222 3866  
                              l3310 1B14                                l3302 1AEA  
                              l3070 269A                                l3062 260E  
                              l3054 25BA                                l3046 2574  
                              l3038 2542                                l3150 336E  
                              l3142 3334                                l1374 3302  
                              l3134 32B8                                l3126 3290  
                              l3118 3216                                l4030 31E4  
                              l4022 3174                                l4014 3104  
                              l4006 3096                                l1294 2BBE  
                              l4110 2BE4                                l4102 2BD0  
                              l1367 326A                                l3208 422C  
                              l3240 3A44                                l3232 38F6  
                              l3224 3890                                l3216 3822  
                              l3400 1CEC                                l3320 1B4A  
                              l3312 1B1A                                l3304 1AFA  
                              l3080 26D6                                l3072 26A4  
                              l3064 2638                                l3056 25CA  
                              l3048 2584                                l3160 33B6  
                              l3152 3372                                l3144 3340  
                              l3136 32EA                                l4032 31E4  
                              l4024 3194                                l4016 3124  
                              l4008 30B4                                l1296 2A1E  
                              l4040 4620                                l4120 2C02  
                              l4112 2BEA                                l4104 2BD4  
                              l3242 3A82                                l3226 38A2  
                              l3234 390E                                l3218 383A  
                              l3402 1CF0                                l3410 1D10  
                              l3330 1B86                                l3322 1B5A  
                              l3314 1B28                                l3306 1B00  
                              l3250 3E7C                                l3090 2748  
                              l3082 26E4                                l3074 26B2  
                              l3066 266E                                l3058 25E6  
                              l3154 3396                                l3146 334E  
                              l3138 32EC                                l4026 31AC  
                              l4018 313C                                l4050 4654  
                              l3170 4668                                l4042 4622  
                              l4130 2C1E                                l4122 2C0A  
                              l4114 2BEE                                l4106 2BD8  
                              l1299 29E2                                l3244 3A94  
                              l3236 39DE                                l3228 38CA  
                              l3412 1D36                                l3420 1D8C  
                              l3404 1CFE                                l3340 1BA4  
                              l3332 1B94                                l3324 1B5C  
                              l3316 1B2A                                l3308 1B12  
                              l3500 36D6                                l3260 3EB8  
                              l3252 3E9C                                l3092 2756  
                              l3084 2712                                l3076 26C4  
                              l3068 267C                                l3156 33A6  
                              l3148 336C                                l4028 31CC  
                              l4052 466E                                l4060 4602  
                              l3164 469A                                l3172 4690  
                              l3180 4492                                l4044 462C  
                              l4036 4612                                l4140 2C5A  
                              l4132 2C26                                l4124 2C0E  
                              l4116 2BF2                                l4108 2BD8  
                              l3246 3AE8                                l3238 39F0  
                              l3270 40E8                                l3430 1DE0  
                              l3422 1DB2                                l3414 1D6A  
                              l3406 1D00                                l3350 1BB8  
                              l3342 1BA8                                l3334 1B98  
                              l3318 1B3A                                l3326 1B64  
                              l3502 36E4                                l3262 3EC4  
                              l3094 2780                                l3078 26D2  
                              l3158 33B4                                l4062 460E  
                              l4054 45EE                                l3510 4576  
                              l3166 469E                                l3174 4694  
                              l3190 44CE                                l3182 4496  
                              l4070 3C8C                                l4046 462E  
                              l4038 4616                                l4150 2C9A  
                              l4142 2C5E                                l4134 2C2E  
                              l4126 2C12                                l4118 2BFA  
                              l3272 40FC                                l3248 46A4  
                              l3440 1E0A                                l3432 1DEE  
                              l3424 1DC2                                l3416 1D6C  
                              l3408 1D0A                                l3360 1BCC  
                              l3352 1BBC                                l3344 1BAC  
                              l3336 1B9C                                l3328 1B74  
                              l3504 3734                                l3264 3ED0  
                              l3088 273C                                l3096 2784  
                              l3280 41BE                                l3600 2208  
                              l4056 45F6                                l3520 458C  
                              l3512 4580                                l3168 4664  
                              l3184 449E                                l3176 4686  
                              l4080 3CC8                                l4072 3CB0  
                              l4064 3C52                                l4048 4630  
                              l4152 2CCC                                l4160 2D16  
                              l4144 2C64                                l4136 2C30  
                              l4128 2C16                                l3274 4114  
                              l3194 3F7C                                l3450 1E3C  
                              l3442 1E1A                                l3434 1DF0  
                              l3418 1D7C                                l3370 1C1E  
                              l3362 1BD0                                l3354 1BC0  
                              l3346 1BB0                                l3338 1BA0  
                              l3290 1AAE                                l3506 373A  
                              l3266 3EE0                                l3258 3EA4  
                              l3098 279E                                l3282 41CC  
                              l3610 2260                                l3602 221A  
                              l4058 4600                                l3514 4586  
                              l3522 4636                                l3186 44A6  
                              l3178 468A                                l3530 4310  
                              l4082 3CD2                                l4074 3CBA  
                              l4066 3C62                                l4090 418E  
                              l4170 2D72                                l4162 2D2A  
                              l4154 2CE0                                l4146 2C6E  
                              l4138 2C42                                l2820 407C  
                              l2812 45C8                                l2900 3EFC  
                              l3276 4140                                l3196 3F8E  
                              l3460 1E96                                l3452 1E52  
                              l3436 1DFE                                l3428 1DD6  
                              l3444 1E1C                                l3380 1C62  
                              l3372 1C2E                                l3356 1BC4  
                              l3348 1BB4                                l3364 1BD4  
                              l3292 1AB0                                l3268 3EE4  
                              l3620 234A                                l3612 2274  
                              l3604 221E                                l3700 2996  
                              l3516 4588                                l3188 44CC  
                              l3532 4356                                l3524 42C0  
                              l4084 3CD4                                l4076 3CBC  
                              l4068 3C88                                l4092 4546  
                              l4172 2D84                                l4180 2DBE  
                              l4164 2D3E                                l4156 2CE6  
                              l4148 2C86                                l2830 40B2  
                              l2822 408E                                l2814 45E4  
                              l2910 3F38                                l2902 3F1C  
                              l3198 3FCE                                l3470 1F12  
                              l3462 1ED0                                l3438 1E06  
                              l3446 1E2A                                l3382 1C64  
                              l3374 1C44                                l3366 1BD8  
                              l3358 1BC8                                l3294 1AC0  
                              l3286 1A94                                l3278 41B8  
                              l3630 23CA                                l3622 2396  
                              l3614 22E8                                l3606 2232  
                              l3550 1F5A                                l3710 29E0  
                              l3702 29A6                                l3518 458A  
                              l3542 4360                                l3526 4306  
                              l4086 3CDE                                l4078 3CC6  
                              l4190 2E0E                                l4182 2DDA  
                              l4174 2D98                                l4166 2D48  
                              l4158 2CFE                                l4094 2BC0  
                              l2832 40C8                                l2824 4096  
                              l2840 33C8                                l2912 3F44  
                              l2920 3B26                                l3480 1F32  
                              l3472 1F16                                l3456 1E7C  
                              l3464 1ED2                                l3448 1E2E  
                              l3392 1CB4                                l3384 1C6E  
                              l3376 1C50                                l3368 1C02  
                              l3296 1AD0                                l3288 1AA0  
                              l3632 23DE                                l3624 23AA  
                              l3560 1FB0                                l3552 1F82  
                              l3720 2A2E                                l3712 29EC  
                              l3704 29AE                                l3640 2840  
                              l3536 43B0                                l3544 43A6  
                              l4088 4156                                l4192 2E12  
                              l4184 2DE6                                l4176 2D9E  
                              l4168 2D60                                l4096 2BC4  
                              l2834 40D0                                l2826 409E  
                              l2818 4074                                l2850 3492  
                              l2842 33E4                                l2914 3F50  
                              l2922 3B46                                l3482 1F40  
                              l3474 1F24                                l3466 1EE2  
                              l3458 1E88                                l3394 1CC4  
                              l3386 1C90                                l3378 1C54  
                              l3298 1AE0                                l3490 3668  
                              l3634 23F6                                l3618 2336  
                              l3570 201A                                l3554 1F9A  
                              l3722 2A44                                l3730 2A74  
                              l3714 2A0A                                l3706 29BE  
                              l3650 2874                                l3642 2842  
                              l3810 359E                                l3802 355E  
                              l3538 43F6                                l4178 2DAA  
                              l4194 2E18                                l4098 2BC8  
                              l2836 40D2                                l2828 40AC  
                              l2852 34AE                                l2844 3438  
                              l2916 3F60                                l2908 3F24  
                              l2860 3956                                l2940 3BA0  
                              l2932 3B66                                l2924 3B52  
                              l3484 1F42                                l3476 1F2A  
                              l3468 1EF2                                l3396 1CD2  
                              l3388 1CA0                                l3492 3678  
                              l3580 20BA                                l3572 203E  
                              l3564 1FC4                                l3556 1FA0  
                              l3628 23B6                                l3548 1F54  
                              l3732 2A82                                l3724 2A4A  
                              l3716 2A0C                                l3708 29D2  
                              l3660 28A6                                l3644 2852  
                              l3652 287C                                l3636 2824  
                              l3820 35CE                                l3812 35AC  
                              l3804 3588                                l3900 0FD8  
                              l4188 2DFC                                l2838 40D8  
                              l2854 34F2                                l2846 344C  
                              l2918 3F64                                l2870 399A  
                              l2862 3960                                l2950 3D9A  
                              l2942 3BA4                                l2934 3B7A  
                              l2926 3B5E                                l3478 1F2C  
                              l3398 1CE0                                l3494 36A6  
                              l3590 2176                                l3582 20E6  
                              l3574 2056                                l3566 1FDC  
                              l3558 1FA8                                l3742 2AEC  
                              l3750 2B34                                l3734 2A86  
                              l3726 2A54                                l3718 2A1C  
                              l3670 28DA                                l3662 28A8  
                              l3654 288C                                l3646 2862  
                              l3638 2832                                l3830 35F8  
                              l3822 35D8                                l3806 358A  
                              l3910 1154                                l3902 1020  
                              l2848 3450                                l2864 3978  
                              l2872 39AA                                l2856 3938  
                              l2880 3BE8                                l2952 3DC6  
                              l2944 3D6C                                l2936 3B86  
                              l3496 36B6                                l3488 363A  
                              l3592 219C                                l3584 210C  
                              l3576 207C                                l3568 2002  
                              l3760 2B9E                                l3752 2B4E  
                              l3744 2AF8                                l3736 2A94  
                              l3728 2A62                                l3680 2920  
                              l3664 28B8                                l3672 28E2  
                              l3656 2892                                l3648 2872  
                              l3832 3608                                l3808 359A  
                              l3920 1398                                l3912 1178  
                              l3904 106C                                l2960 45B0  
                              l3840 44D2                                l2874 39C2  
                              l2866 3982                                l2858 393E  
                              l2890 3C10                                l2882 3BF4  
                              l2954 3DDA                                l2946 3D6E  
                              l2938 3B92                                l2970 3D3C  
                              l2962 3CE2                                l3498 36C4  
                              l3594 21B4                                l3586 2138  
                              l3578 2094                                l3930 1592  
                              l3762 2BAC                                l3754 2B64  
                              l3746 2B06                                l3738 2AC2  
                              l3690 2948                                l3682 2924  
                              l3674 28F2                                l3666 28C8  
                              l3658 2898                                l3834 3618  
                              l3818 35C4                                l3922 1402  
                              l3914 1246                                l3906 109A  
                              l3850 4504                                l3842 44D6  
                              l2868 398E                                l2980 3E0A  
                              l2892 3C1C                                l2876 3BBC  
                              l2956 3DF2                                l2948 3D82  
                              l2972 3D50                                l2964 3CE4  
                              l3596 21DA                                l3588 215E  
                              l3940 1692                                l3932 159A  
                              l3764 2BB2                                l3756 2B7E  
                              l3748 2B30                                l3676 2908  
                              l3668 28D8                                l3780 373E  
                              l3836 3628                                l3828 35EC  
                              l3924 14C0                                l3916 128E  
                              l3908 110C                                l3860 450E  
                              l3852 4506                                l3844 44E0  
                              l3862 4514                                l2982 3E22  
                              l2894 3C28                                l2878 3BDC  
                              l2974 3D68                                l2966 3CF8  
                              l2990 2406                                l3598 2206  
                              l3950 1736                                l3942 169A  
                              l3934 15D8                                l3766 2BB4  
                              l3758 2B9A                                l3694 295C  
                              l3678 2918                                l3686 2938  
                              l3790 37DE                                l3782 376C  
                              l3774 444A                                l3918 12DA  
                              l3926 1526                                l2958 45A0  
                              l3854 4508                                l3846 44F0  
                              l3870 2E30                                l3864 4524  
                              l2984 3E4E                                l2896 3C36  
                              l2888 3BFC                                l2976 426E  
                              l2968 3D10                                l2992 2414  
                              l3960 17EA                                l3952 174E  
                              l3936 1616                                l3944 16B2  
                              l3696 2976                                l3688 2948  
                              l3792 37E4                                l3784 377C  
                              l3776 445A                                l3928 1542  
                              l3856 450A                                l3848 44FA  
                              l3880 2F9E                                l3872 2F30  
                              l3866 452E                                l2986 3E62  
                              l2978 3DF6                                l2898 3C3A  
                              l2994 2416                                l3970 18C4  
                              l3962 1828                                l3954 178C  
                              l3946 16F0                                l3938 1654  
                              l3698 2986                                l3786 37AA  
                              l3890 0EF6                                l3858 450C  
                              l3882 2FDA                                l3874 2F48  
                              l3868 453E                                l2996 2426  
                              l2988 23FA                                l3980 1968  
                              l3972 1902                                l3964 1866  
                              l3956 17CA                                l3948 172E  
                              l3788 37BA                                l3796 3534  
                              l3892 0F18                                l3884 301C  
                              l3876 2F66                                l2998 2436  
                              l3990 1A3E                                l3974 1940  
                              l3982 1980                                l3966 186E  
                              l3958 17D2                                l3798 354A  
                              l3894 0F22                                l3886 0E66  
                              l3878 2F82                                l3992 1A56  
                              l3984 19BE                                l3976 1948  
                              l3968 1886                                l3896 0F68  
                              l3888 0EAE                                l3994 1A5E  
                              l3986 19FC                                l3978 1960  
                              l3898 0FB0                                l3988 1A36  
                              l3996 1A76                                l3998 1A8A  
                              STR_1 0E2B                                STR_2 0E60  
                              STR_3 0E5B                                STR_4 0E37  
                              STR_5 0E41                                STR_6 0E2C  
                              STR_7 0E55                                STR_8 0E48  
                              STR_9 0E4F                                u2000 39C2  
                              u2001 39BE                                u2010 39DA  
                              u2011 39D6                                u2020 3C50  
                              u2100 2476                                u2021 3C4C  
                              u2101 2472                                u2030 3F7A  
                              u2110 2488                                u2031 3F76  
                              u2111 2484                                u2040 3BBA  
                              u2200 2728                                u2120 2498  
                              u3000 22E4                                u2041 3BB6  
                              u2201 2724                                u2121 2494  
                              u3001 22E0                                u2210 273C  
                              u2130 24CE                                u3010 2332  
                              u2050 45B0                                u2211 2738  
                              u2131 24CA                                u3011 232E  
                              u2051 45AC                                u2220 2756  
                              u2140 24DE                                u2300 3330  
                              u3020 2396                                u3100 2908  
                              u2060 45C6                                u2221 2752  
                              u2141 24DA                                u2301 332C  
                              u3021 2392                                u3101 2904  
                              u2061 45C2                                u2230 279E  
                              u2150 2658                                u2070 2414  
                              u2310 334E                                u3030 23CA  
                              u3110 2948                                u2231 279A  
                              u2071 2410                                u2311 334A  
                              u3031 23C6                                u3111 2944  
                              u2400 422C                                u2240 27CC  
                              u2160 26B2                                u2080 2426  
                              u2320 335E                                u3200 2AC2  
                              u3120 29BE                                u3040 2840  
                      _BAUD4CONbits 000EE9                                u2401 4228  
                              u2241 27C8                                u2161 26AE  
                              u2081 2422                                u2321 335A  
                              u3201 2ABE                                u3121 29BA  
                              u3041 283C                                u2410 37FA  
                              u2250 2806                                u2170 26D2  
                              u2090 2436                                u2330 336C  
                              u3210 2AD8                                u3130 29E0  
                              u3050 2852                                u2411 37F6  
                              u2251 2802                                u2171 26CE  
                              u2155 264E                                u2091 2432  
                              u2331 3368                                u3211 2AD4  
                              u3131 29DC                                u3051 284E  
                              u2420 38A2                                u2500 1B28  
                              u2180 26E4                                u2340 33A6  
                              u2260 3226                                u3220 2AEC  
                              u3140 2A0A                                u3060 2862  
                              u3300 354A                                u2421 389E  
                              u2501 1B24                                u2181 26E0  
                              u2341 33A2                                u2261 3222  
                              u3221 2AE8                                u3141 2A06  
                              u3061 285E                                u3301 3546  
                              u2430 39F0                                u2510 1B3A  
                              u2190 2712                                u2350 33B4  
                              u2270 3234                                u3230 2B06  
                              u3150 2A2E                                u3070 28A6  
                              u3310 357E                                u4007 3C2A  
                              u2431 39EC                                u2511 1B36  
                              u2191 270E                                u2351 33B0  
                              u2271 3230                                u3231 2B02  
                              u3151 2A2A                                u3071 28A2  
                              u2440 3A94                                u2600 1C82  
                              u2520 1B4A                                u2280 3290  
                              u3240 2B4E                                u3160 2A44  
                              u3080 28B8                                u3320 35AC  
                              u3400 0EF6                                u2360 44BA  
                              u4017 3E14                                u2441 3A90  
                              u2601 1C7E                                u2521 1B46  
                              u2281 328C                                u3241 2B4A  
                              u3161 2A40                                u3081 28B4  
                              u3321 35A8                                u3401 0EF2  
                              u2361 44B2                                u2610 1C90  
                              u2530 1B86                                u2450 3EFA  
                              u2290 32E6                                u3250 2B7E  
                              u3170 2A62                                u3090 28C8  
                              u3330 35C0                                u3410 0F68  
                              _T2PR 000FBC                                u4027 3E40  
                              u2611 1C8C                                u2531 1B82  
                              u2451 3EF6                                u2291 32E2  
                              u3251 2B7A                                u3171 2A5E  
                              u3091 28C4                                u3331 35BC  
                              u3315 3574                                u3411 0F64  
                              u2380 3F8E                                u2700 1DEE  
                              u2620 1CA0                                u2540 1B94  
                              u2460 1AAE                                u3500 15D8  
                              u3260 2BAC                                u3180 2A82  
                              u3340 35E8                                u3420 0FB0  
                              u4037 3E6C                                u2381 3F8A  
                              u2701 1DEA                                u2621 1C9C  
                              u2541 1B90                                u2461 1AAA  
                              u3501 15D4                                u3261 2BA8  
                              u3181 2A7E                                u3341 35E4  
                              u3421 0FAC                                u2390 400A  
                              u2710 1DFE                                u2630 1CD2  
                              u2550 1C02                                u2470 1AC0  
                              u3510 1616                                u3190 2A94  
                              u3270 376C                                u3350 3608  
                              u3430 1020                                u4047 39A0  
                              u2391 4006                                u2711 1DFA  
                              u2631 1CCE                                u2551 1BFE  
                              u2471 1ABC                                u3511 1612  
                              u3191 2A90                                u3271 3768  
                              u3351 3604                                u3431 101C  
                              u2800 1EE2                                u2720 1E1A  
                              u2640 1CE0                                u2560 1C1A  
                              u2480 1AD0                                u3600 18C4  
                              u3520 1654                                u3280 37AA  
                              u3360 3618                                u3440 106C  
                              u4057 3F56                                u2801 1EDE  
                              u2721 1E16                                u2641 1CDC  
                              u2561 1C14                                u2481 1ACC  
                              u3601 18C0                                u3521 1650  
                              u3281 37A6                                u3361 3614  
                              u3441 1068                                u3370 4524  
                              u1930 408E                                u2810 1EF2  
                              u2730 1E2A                                u2650 1CFE  
                              u2570 1C1C                                u2490 1B12  
                              u3610 1902                                u3530 1692  
                              u3290 37DE                                u3450 110C  
                              u2378 44BC                                u3371 4520  
                              u1931 408A                                u2811 1EEE  
                              u2731 1E26                                u2651 1CFA  
                              u2491 1B0E                                u3611 18FE  
                              u3531 168E                                u3291 37DA  
                              u3451 1108                                u3380 453E  
                              u1940 40AC                                u2820 1F12  
                              u2740 1E3C                                u2660 1D36  
                              u2580 1C44                                u2900 1FBE  
                              u3700 315C                                u3620 1940  
                              u3540 16F0                                u3460 1154  
                              u3381 453A                                u1941 40A8  
                              u2821 1F0E                                u2741 1E38  
                              u2661 1D32                                u2581 1C40  
                              u2901 1FBA                                u3701 3158  
                              u3621 193C                                u3541 16EC  
                              u3461 1150                                u1950 40C8  
                              u2830 1F24                                u2750 1E52  
                              u2670 1D7C                                u2590 1C62  
                              u2910 2002                                u3710 3194  
                              u3630 19BE                                u3550 172E  
                              u3470 128E                                u3390 0EAE  
                              u1951 40C4                                u2831 1F20  
                              u2751 1E4E                                u2671 1D78  
                              u2591 1C5E                                u2911 1FFE  
                              u3711 3190                                u3631 19BA  
                              u3551 172A                                u3471 128A  
                              u3391 0EAA                                u1960 33E4  
                              u2840 1F40                                u2760 1E68  
                              u2680 1DB2                                u2920 203E  
                              u3720 31CC                                u3640 19FC  
                              u3560 178C                                u3480 12DA  
                              u3800 2E2C                                u1961 33E0  
                              u2841 1F3C                                u2761 1E64  
                              u2681 1DAE                                u2921 203A  
                              u3721 31C8                                u3641 19F8  
                              u3561 1788                                u3481 12D6  
                              u3801 2E28                                u1970 34AE  
                              u2770 1E7C                                u2690 1DC2  
                              u2850 3668                                u2930 207C  
                              u3650 1A36                                u3570 17CA  
                              u3490 1542                                u3730 2C42  
                              u1971 34AA                                u2771 1E78  
                              u2691 1DBE                                u2851 3664  
                              u2931 2078                                u3651 1A32  
                              u3571 17C6                                u3491 153E  
                              u3731 2C3E                                u1980 3956  
                              u2780 1E96                                u2860 36A6  
                              u2940 20BA                                u3660 307E  
                              u3580 1828                                u3740 2CCC  
                              u1981 3952                                u2781 1E92  
                              u2861 36A2                                u2941 20B6  
                              u3661 307A                                u3581 1824  
                              u3741 2CC8                                u1990 3978  
                              u2790 1ED0                                u2870 36C4  
                              u2950 210C                                u3670 30B4  
                              u3590 1866                                u3750 2D2A  
                              u1991 3974                                u2791 1ECC  
                              u2871 36C0                                u2951 2108  
                              u3671 30B0                                u3591 1862  
                              u3751 2D26                                u2880 36E4  
                              u2960 215E                                u3680 30EC  
                              u3760 2D72                                u2881 36E0  
                              u2961 215A                                u3681 30E8  
                              u3761 2D6E                                u2890 3734  
                              u2970 219C                                u3690 3124  
                              u3770 2D84                                u3907 4106  
                              u2891 3730                                u2971 2198  
                              u3691 3120                                u3771 2D80  
                              u3827 2C4E                                u2980 21DA  
                              u3780 2DFC                                u3917 4132  
                              u2981 21D6                                u3781 2DF8  
                              u3837 2CF2                                u2990 225C  
                              u3790 2E0E                                u3927 38D4  
                              u2991 2258                                u3847 44E6  
                              u3791 2E0A                                u3937 3D02  
                              u3857 1F8C                                u3947 3D2E  
                              u3867 1FCE                                u3957 3D5A  
                              u3877 23E8                                u3967 3B94  
                              u3887 3ED6                                u3977 3D8C  
                              u3897 382C                                u3987 3DB8  
                              u3997 3DE4                 reverseHalfSquare@mL 001B  
                   __end_of_RAMback 4156                 reverseHalfSquare@mR 001D  
                              _main 2BC0                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 005F  
                              _stop 3938                          _ClickLEDOn 4512  
          memoryUpdateTime@timerVal 004F                                prodh 000FF4  
                              prodl 000FF3                                start 002C  
                   ___fldiv@new_exp 00C7             __end_of_Yellow_rev1_R90 3890  
     memoryUpdateTime@movementCount 004B              __end_of_color_read_Red 4310  
                   __end_of_HighISR 002C                        ___param_bank 000000  
                   __end_of_Red_R90 3FF8                          _Hue2Colour 1592  
                   __end_of_Right45 3D6C                    __end_of_LED_init 4662  
                     ___fltol@sign1 0009                     __end_of___fladd 1F54  
                             ?_main 0001                     __end_of___fldiv 2BC0  
                             STR_10 0E01                     __end_of___flmul 2824  
                   __end_of___flsub 4490                     __end_of___fltol 363A  
                    _LightBlue_L135 3A82                               ?_stop 0014  
                   __end_of___lwdiv 40E8                               i2l709 0028  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
        __end_of_I2C_2_Master_Start 46A4                               _White 1F54  
        __end_of_I2C_2_Master_Write 466E                   fullSpeedReverse@i 0019  
                             tablat 000FF5                               plusw2 000FDB  
                             ttemp5 0060                               ttemp6 0063  
                             ttemp7 0067                               status 000FD8  
                             wtemp8 0060                    _memoryUpdateTime 4156  
           __end_of_color_read_Blue 4400               _I2C_2_Master_RepStart 4686  
                   ?_color_read_Red 0005                     __initialization 4400  
                      __end_of_main 2E30                        __end_of_stop 39DE  
                   ??_rotate180left 0024              __end_of_LightBlue_L135 3B26  
                            ??_main 00EB                              ??_stop 0018  
                     __activetblptr 000001              ??_memoryUpdateMovement 0007  
                         ??_RGB2Hue 00D1                       ??_Orange_R135 0025  
                            ?_White 00C2                           ??_RAMback 001F  
                      ?_setMotorPWM 000E                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                     _colour_read_all 2E30  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RC7PPS 000E69  
                            _RD5PPS 000E6F                              _RE4PPS 000E76  
                            _RD6PPS 000E70                              i2l4202 000A  
                            i2l4204 001A                              i2l4206 0024  
                            _RG6PPS 000E88                           ??_HighISR 0001  
          __end_of_color_click_init 4512                              _RX4PPS 000E15  
                            _TX4REG 000EE4                         ?_ClickLEDOn 0001  
                  __end_of___xxtofl 33C8                           ??_Red_R90 0025  
                            _Left45 3D6C                           ??_Right45 001E  
                  _fullSpeedReverse 3EFC                    ?_Yellow_rev1_R90 0021  
                     ??_Timer0_init 0001                        _CCPTMRS0bits 000FAD  
                            White@i 00D0                              ___flge 363A  
                            ___fleq 373E                           ??___fladd 0043  
                       ?_Hue2Colour 0057                              ___wmul 45C8  
                         ??___fldiv 005B                       Orange_R135@mL 0021  
                         ??___flmul 0022                       Orange_R135@mR 0023  
                         ??___flsub 0053                           ??___fltol 0005  
                         ??___lwdiv 000B                          _TimerReset 46A4  
                            _colorf 008E                     ?_LightBlue_L135 0021  
                            clear_0 4426                              clear_1 4432  
                fullSpeedReverse@mL 0014                  fullSpeedReverse@mR 0016  
                            _motorL 00B9                              _motorR 00B0  
                            isa$std 000001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8   memoryUpdateMovement@movementCount 0003  
                            stop@mL 0014                              stop@mR 0016  
                 ??_initDCmotorsPWM 0003                    __end_of_turnLeft 3C52  
                        ___flge@ff1 004B                          ___flge@ff2 004F  
                      ___xxtofl@arg 0016                        ___xxtofl@exp 0015  
                      ___xxtofl@val 000C                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005                 __end_of_Orange_R135 3A82  
                        __accesstop 0060             __end_of__initialization 4438  
          __end_of_color_read_Clear 43B0                     fullSpeedAhead@i 0019  
                 __end_of_Blue_T180 426E            __end_of_color_read_Green 4360  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                         ?_LED_init 0001                          ___fltol@f1 0001  
                  ?_color_read_Blue 0005                     _Interrupts_init 466E  
                    __pcstackCOMRAM 0001                       __end_of_White 23FA  
                      __pidataBANK0 467A                   __end_of_Green_L90 4074  
                         RGB2Hue@cf 00CF                 __end_of_Timer0_init 4612  
                       _ForwardFlag 00F8             __end_of_colour_read_all 3060  
                           ??_White 0057                          __pbssBANK0 0060  
                        __pbssBANK1 0100                          ??_LED_init 0001  
                           ?_Left45 001A                   _color_writetoaddr 4634  
                      _T2CLKCONbits 000FBF               __end_of_Colour2Action 3214  
                           ?___flge 004B                             ?___fleq 0001  
                ?_color_writetoaddr 0003                           RAMback@mL 001B  
                         RAMback@mR 001D                             ?___wmul 0001  
                       ?_TimerReset 0001                 ??_color_writetoaddr 0004  
             __end_of_getTimerValue 421A            __end_of_memoryUpdateTime 41B8  
                           _RGB2Hue 0E66                           ?___xxtofl 000C  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                       _Orange_R135 39DE                             _RAMback 40E8  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
           __end_of_Interrupts_init 467A              color_writetoaddr@value 0003  
                  ??_color_read_Red 0007                             _HighISR 0008  
         __end_of_color_writetoaddr 4654                             _Red_R90 3F7C  
                _I2C_2_Master_Start 469A                          _initUSART4 4612  
                _I2C_2_Master_Write 4662                             _Right45 3CE2  
                           __Hparam 0000                             __Lparam 0000  
                 color_read_Red@tmp 000A                         _Timer0_init 45EE  
                           White@mL 00C2                             White@mR 00C4  
                           ___fladd 1A94                             ___fldiv 2824  
                           ___flmul 23FA                             ___flsub 444A  
                           ___fltol 3534                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 4074                 ?_I2C_2_Master_Write 0001  
                      __psmallconst 0E00                             __pcinit 4400  
                           __ramtop 0E00                           ?_turnLeft 0014  
                           __ptext0 2BC0                             __ptext1 4156  
                           __ptext2 4546                             __ptext3 4612  
                           __ptext4 3C52                             __ptext5 2E30  
                           __ptext6 42C0                             __ptext7 4310  
                           __ptext8 4360                             __ptext9 43B0  
                           _maxTime 0064                           _T2CONbits 000FBD  
                  ?_colour_read_all 00CF                          ??___xxtofl 0010  
          __end_of_fullSpeedReverse 3F7C                           _T2HLTbits 000FBE  
                colour_read_all@rel 00D1                       Hue2Colour@rel 0059  
              ??_I2C_2_Master_Start 0002                ??_I2C_2_Master_Write 0002  
              end_of_initialization 4438      memoryUpdateMovement@colourcode 0007  
                     _Pink_rev1_L90 3890                        ??_ClickLEDOn 0001  
                 ?_color_click_init 0001                      __45drightdelay 00F4  
                ??_color_click_init 0005                    ??_LightBlue_L135 0025  
                 _reverseHalfSquare 3DF6                             postdec1 000FE5  
                           postdec2 000FDD                        ??_Hue2Colour 005B  
                           postinc0 000FEE                             postinc2 000FDE  
memoryUpdateMovement@movementMemory 0005                  ?_reverseHalfSquare 001B  
             __end_of_rotate180left 42C0                     _initDCmotorsPWM 3C52  
                        ??_turnLeft 0018                    White@timerMemory 00CA  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0013  
                 __end_of_turnRight 3BBC                         ___fladd@grs 004A  
               ??_reverseHalfSquare 001F                  __end_of_ClickLEDOn 4546  
                     ___xxtofl@sign 0014                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0012                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 00C9  
                       ___fldiv@rem 00C2                    fullSpeedAhead@mL 0014  
                  fullSpeedAhead@mR 0016            color_writetoaddr@address 0004  
                         Red_R90@mL 0021                           Red_R90@mR 0023  
           ??_I2C_2_Master_RepStart 0002                      _movementMemory 0066  
                __end_of_Hue2Colour 1A94                      ?_Pink_rev1_L90 0021  
                  ?_Interrupts_init 0001                         ___flmul@grs 0027  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0005  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0005  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22                     Colour2Action@cf 005B  
         __end_of_reverseHalfSquare 3E7C                  ??_color_read_Clear 0007  
                ??_color_read_Green 0007                           _Blue_T180 421A  
                    __end_of_Left45 3DF6                        _RGB2Hue$3100 00D5  
                    __end_of___flge 373E                      __end_of___fleq 37E8  
                    _fullSpeedAhead 3E7C                      __end_of___wmul 45EE  
                         _Green_L90 3FF8                           Right45@mL 001A  
                         Right45@mR 001C                _colour_read_all$3099 00D7  
                        RGB2Hue@max 00D9                          RGB2Hue@min 00DB  
               color_read_Clear@tmp 000A                 start_initialization 4400  
                       __halfsquare 00F0                            ??_Left45 001E  
               color_read_Green@tmp 000A                          ?_Blue_T180 0024  
           __end_of_initDCmotorsPWM 3CE2              __end_of_fullSpeedAhead 3EFC  
                          ??___flge 0053                            ??___fleq 0009  
                          ??___wmul 0005                        ??_TimerReset 0001  
                       __pdataBANK0 00EE                           ___fladd@a 003F  
                         ___fladd@b 003B                     ClickLEDOn@power 0001  
                        ?_Green_L90 0021                           ___fldiv@a 0057  
                         ___fldiv@b 0053                   ?_memoryUpdateTime 004B  
                          ?_RGB2Hue 00CF                           ___flmul@a 001E  
                         ___flmul@b 001A                           ___flsub@a 004F  
                         ___flsub@b 004B                       __pcstackBANK0 00C2  
                      ?_Orange_R135 0021                  ??_memoryUpdateTime 004F  
                          ?_RAMback 001B                     ??_Pink_rev1_L90 0025  
                          ?_HighISR 0001                  __end_of_TimerReset 46AE  
                          ?_Red_R90 0021                            ?_Right45 001A  
                  ___lwdiv@dividend 0007                        ?_Timer0_init 0001  
                   ?_fullSpeedAhead 0014                           __pintcode 0008  
                          ?___fladd 003B                            ?___fldiv 0053  
                          ?___flmul 001A                            ?___flsub 004B  
                          ?___fltol 0001                            ?___lwdiv 0007  
              I2C_2_Master_Read@ack 0003                I2C_2_Master_Read@tmp 0004  
                   Pink_rev1_L90@mL 0021                     Pink_rev1_L90@mR 0023  
                       __smallconst 0E00                   _I2C_2_Master_Idle 45A0  
                 _I2C_2_Master_Init 4576                   _I2C_2_Master_Read 4490  
                     __45dleftdelay 00F6                   _I2C_2_Master_Stop 4690  
                 ?_fullSpeedReverse 0014                   ??_Yellow_rev1_R90 0025  
                ?_I2C_2_Master_Idle 0001                     rotate180left@mL 0020  
                   rotate180left@mR 0022                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0010  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000B  
               White@movementMemory 00C8            initDCmotorsPWM@PWMperiod 0001  
                ??_fullSpeedReverse 0018                Hue2Colour@colourname 005B  
                 colour_read_all@cf 00CF                        Hue2Colour@cf 0057  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                            _LED_init 4654  
                          _PIE4bits 000E2D                         turnRight@mL 0014  
                       turnRight@mR 0016                            _PIR0bits 000E33  
                       ??_Blue_T180 0028                            i2u381_40 001A  
                          i2u381_41 0016                            _PIR4bits 000E37  
                  ?_initDCmotorsPWM 0001                            Left45@mL 001A  
                          Left45@mR 001C                colour_read_all@total 00E7  
                          _SSP2CON2 000EDA                            _SSP2STAT 000ED8  
         __end_of_I2C_2_Master_Idle 45C8           __end_of_I2C_2_Master_Init 45A0  
         __end_of_I2C_2_Master_Read 44D2                   ___wmul@multiplier 0001  
         __end_of_I2C_2_Master_Stop 469A                       _movementCount 0062  
                       ??_Green_L90 0025                        setMotorPWM@m 000E  
       I2C_2_Master_Write@data_byte 0002                   ??_color_read_Blue 0007  
                         _turnRight 3B26                       _retracingDone 0060  
                          __1square 00F2                           copy_data0 4414  
     __end_of_I2C_2_Master_RepStart 4690                  color_read_Blue@tmp 000A  
               __end_of_setMotorPWM 3534                        ??_initUSART4 0001  
                          __Hrparam 0000        __end_of_memoryUpdateMovement 4576  
                          __Lrparam 0000                        __Lsmallconst 0E00  
                     _Colour2Action 3060                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                       _getTimerValue 41B8  
                       Blue_T180@mL 0024                         Blue_T180@mR 0026  
                          ___xxtofl 3214                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                     ___lwdiv@divisor 0009  
                __end_of_initUSART4 4634                     ___lwdiv@counter 000D  
                        ?_turnRight 0014                            __ptext10 4686  
                          __ptext11 4490                            __ptext20 0E66  
                          __ptext12 44D2                            __ptext21 3534  
                          __ptext13 4634                            __ptext30 41B8  
                          __ptext22 444A                            __ptext14 4662  
                          __ptext31 3214                            __ptext23 373E  
                          __ptext15 4690                            __ptext40 3890  
                          __ptext32 23FA                            __ptext24 2824  
                          __ptext16 469A                            __ptext41 39DE  
                          __ptext33 3E7C                            __ptext25 4654  
                          __ptext17 45A0                            __ptext50 3DF6  
                          __ptext42 3A82                            __ptext34 363A  
                          __ptext26 466E                            __ptext18 4576  
                          __ptext51 3938                            __ptext43 3FF8  
                          __ptext35 1A94                            __ptext27 1592  
                          __ptext19 45EE                            __ptext52 3EFC  
                          __ptext44 3CE2                            __ptext36 37E8  
                          __ptext28 3060                            __ptext53 33C8  
                          __ptext45 3B26                            __ptext37 46A4  
                          __ptext29 1F54                            __ptext54 45C8  
                          __ptext46 421A                            __ptext38 3F7C  
                          __ptext55 4074                            __ptext47 426E  
                          __ptext39 40E8                            __ptext56 4512  
                          __ptext48 3D6C                            __ptext49 3BBC  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                          _colorrel 00A4                  White@movementCount 00C6  
                        turnLeft@mL 0014                          turnLeft@mR 0016  
                  colour_read_all@B 00E3                    colour_read_all@C 00D3  
                  colour_read_all@G 00DF                    colour_read_all@R 00DB  
                    White@tempTimer 00CC                          turnRight@i 0018  
                  LightBlue_L135@mL 0021                    LightBlue_L135@mR 0023  
                    ?_Colour2Action 005B                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005F  
                 Yellow_rev1_R90@mL 0021                   Yellow_rev1_R90@mR 0023  
                          main@wall 00ED                            _turnLeft 3BBC  
                    ?_getTimerValue 0033                          _INTCONbits 000FF2  
                       _setMotorPWM 33C8                            intlevel2 0000  
                  ??_fullSpeedAhead 0018                           turnLeft@i 0018  
                 ??_colour_read_all 005F             getTimerValue@timerCount 0039  
                   _Yellow_rev1_R90 37E8                    _color_click_init 44D2  
                     _rotate180left 426E                    __recogniseColour 00EE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       _timerMemory 0100                _memoryUpdateMovement 4546  
                       ??_turnRight 0018                       ___fladd@signs 0047  
                        _TX4STAbits 000EE8               __end_of_Pink_rev1_L90 3938  
                      ___fladd@aexp 0048                        ___fladd@bexp 0049  
       memoryUpdateTime@timerMemory 004D                     ??_Colour2Action 005D  
