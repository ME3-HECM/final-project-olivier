

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 17:23:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 06/04/2022 GMT
    82                           ; 
    83                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F67K40 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataCOMRAM
   117   004420                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _ForwardFlag
   121   004420  01                 	db	1
   122                           
   123                           	psect	idataBANK0
   124   0043CC                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1144
   128   0043CC  28                 	db	40
   129   0043CD  6E                 	db	110
   130   0043CE  75                 	db	117
   131   0043CF  6C                 	db	108
   132   0043D0  6C                 	db	108
   133   0043D1  29                 	db	41
   134   0043D2  00                 	db	0
   135                           
   136                           ;initializer for __halfsquare
   137   0043D3  015E               	dw	350
   138                           
   139                           ;initializer for __1square
   140   0043D5  02BC               	dw	700
   141                           
   142                           ;initializer for __45drightdelay
   143   0043D7  00AA               	dw	170
   144                           
   145                           ;initializer for __45dleftdelay
   146   0043D9  00AA               	dw	170
   147   000000                     _LATEbits	set	3965
   148   000000                     _TRISEbits	set	3973
   149   000000                     _LATHbits	set	3968
   150   000000                     _TX4REG	set	3812
   151   000000                     _RC4STAbits	set	3815
   152   000000                     _SP4BRGH	set	3814
   153   000000                     _TRISAbits	set	3969
   154   000000                     _TRISGbits	set	3975
   155   000000                     _SSP2CON2bits	set	3802
   156   000000                     _RX4PPS	set	3605
   157   000000                     _SSP2CLKPPS	set	3612
   158   000000                     _SSP2DATPPS	set	3613
   159   000000                     _ANSELDbits	set	3751
   160   000000                     _SSP2ADD	set	3798
   161   000000                     _SSP2CON1bits	set	3801
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATGbits	set	3967
   164   000000                     _TRISHbits	set	3976
   165   000000                     _PORTFbits	set	3982
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _LATCbits	set	3963
   169   000000                     _LATDbits	set	3964
   170   000000                     _LATFbits	set	3966
   171   000000                     _TRISCbits	set	3971
   172   000000                     _TRISDbits	set	3972
   173   000000                     _TRISFbits	set	3974
   174   000000                     _RC4REG	set	3811
   175   000000                     _SP4BRGL	set	3813
   176   000000                     _TX4STAbits	set	3816
   177   000000                     _BAUD4CONbits	set	3817
   178   000000                     _SSP2CON2	set	3802
   179   000000                     _CCPR4H	set	3873
   180   000000                     _CCPR3H	set	3877
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RD5PPS	set	3695
   187   000000                     _RE2PPS	set	3700
   188   000000                     _RD6PPS	set	3696
   189   000000                     _CCP1CONbits	set	4011
   190   000000                     _CCPTMRS0bits	set	4013
   191   000000                     _T2PR	set	4028
   192   000000                     _T2CONbits	set	4029
   193   000000                     _CCP2CONbits	set	4007
   194   000000                     _CCP3CONbits	set	3878
   195   000000                     _CCP4CONbits	set	3874
   196   000000                     _RC7PPS	set	3689
   197   000000                     _RE4PPS	set	3702
   198   000000                     _RG6PPS	set	3720
   199   000000                     _TMR0L	set	4051
   200   000000                     _TMR0H	set	4052
   201   000000                     _T0CON0bits	set	4053
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _T2CLKCONbits	set	4031
   204   000000                     _T2HLTbits	set	4030
   205                           
   206                           	psect	smallconst
   207   000E00                     __psmallconst:
   208                           	callstack 0
   209   000E00  00                 	db	0
   210   000E01                     STR_10:
   211   000E01  43                 	db	67	;'C'
   212   000E02  6F                 	db	111	;'o'
   213   000E03  6C                 	db	108	;'l'
   214   000E04  6F                 	db	111	;'o'
   215   000E05  75                 	db	117	;'u'
   216   000E06  72                 	db	114	;'r'
   217   000E07  20                 	db	32
   218   000E08  69                 	db	105	;'i'
   219   000E09  73                 	db	115	;'s'
   220   000E0A  20                 	db	32
   221   000E0B  25                 	db	37
   222   000E0C  73                 	db	115	;'s'
   223   000E0D  20                 	db	32
   224   000E0E  20                 	db	32
   225   000E0F  0D                 	db	13
   226   000E10  00                 	db	0
   227   000E11                     STR_8:
   228   000E11  4C                 	db	76	;'L'
   229   000E12  69                 	db	105	;'i'
   230   000E13  67                 	db	103	;'g'
   231   000E14  68                 	db	104	;'h'
   232   000E15  74                 	db	116	;'t'
   233   000E16  20                 	db	32
   234   000E17  42                 	db	66	;'B'
   235   000E18  6C                 	db	108	;'l'
   236   000E19  75                 	db	117	;'u'
   237   000E1A  65                 	db	101	;'e'
   238   000E1B  00                 	db	0
   239   000E1C                     STR_4:
   240   000E1C  44                 	db	68	;'D'
   241   000E1D  61                 	db	97	;'a'
   242   000E1E  72                 	db	114	;'r'
   243   000E1F  6B                 	db	107	;'k'
   244   000E20  20                 	db	32
   245   000E21  42                 	db	66	;'B'
   246   000E22  6C                 	db	108	;'l'
   247   000E23  75                 	db	117	;'u'
   248   000E24  65                 	db	101	;'e'
   249   000E25  00                 	db	0
   250   000E26                     STR_9:
   251   000E26  45                 	db	69	;'E'
   252   000E27  67                 	db	103	;'g'
   253   000E28  67                 	db	103	;'g'
   254   000E29  73                 	db	115	;'s'
   255   000E2A  68                 	db	104	;'h'
   256   000E2B  65                 	db	101	;'e'
   257   000E2C  6C                 	db	108	;'l'
   258   000E2D  6C                 	db	108	;'l'
   259   000E2E  00                 	db	0
   260   000E2F                     STR_7:
   261   000E2F  4F                 	db	79	;'O'
   262   000E30  72                 	db	114	;'r'
   263   000E31  61                 	db	97	;'a'
   264   000E32  6E                 	db	110	;'n'
   265   000E33  67                 	db	103	;'g'
   266   000E34  65                 	db	101	;'e'
   267   000E35  00                 	db	0
   268   000E36                     STR_5:
   269   000E36  59                 	db	89	;'Y'
   270   000E37  65                 	db	101	;'e'
   271   000E38  6C                 	db	108	;'l'
   272   000E39  6C                 	db	108	;'l'
   273   000E3A  6F                 	db	111	;'o'
   274   000E3B  77                 	db	119	;'w'
   275   000E3C  00                 	db	0
   276   000E3D                     STR_3:
   277   000E3D  47                 	db	71	;'G'
   278   000E3E  72                 	db	114	;'r'
   279   000E3F  65                 	db	101	;'e'
   280   000E40  65                 	db	101	;'e'
   281   000E41  6E                 	db	110	;'n'
   282   000E42  00                 	db	0
   283   000E43                     STR_6:
   284   000E43  50                 	db	80	;'P'
   285   000E44  69                 	db	105	;'i'
   286   000E45  6E                 	db	110	;'n'
   287   000E46  6B                 	db	107	;'k'
   288   000E47  00                 	db	0
   289   000E48                     STR_11:
   290   000E48  6C                 	db	108	;'l'
   291   000E49  6C                 	db	108	;'l'
   292   000E4A  73                 	db	115	;'s'
   293   000E4B  00                 	db	0
   294   000E4C                     STR_2:
   295   000E4C  52                 	db	82	;'R'
   296   000E4D  65                 	db	101	;'e'
   297   000E4E  64                 	db	100	;'d'
   298   000E4F  00                 	db	0
   299   000E50  00                 	db	0	; dummy byte at the end
   300   000000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   003EB6                     __pcinit:
   305                           	callstack 0
   306   003EB6                     start_initialization:
   307                           	callstack 0
   308   003EB6                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (15 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313   003EB6  0ECC               	movlw	low __pidataBANK0
   314   003EB8  6EF6               	movwf	tblptrl,c
   315   003EBA  0E43               	movlw	high __pidataBANK0
   316   003EBC  6EF7               	movwf	tblptrh,c
   317   003EBE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318   003EC0  6EF8               	movwf	tblptru,c
   319   003EC2  EE00  F0F1         	lfsr	0,__pdataBANK0
   320   003EC6  EE10 F00F          	lfsr	1,15
   321   003ECA                     copy_data0:
   322   003ECA  0009               	tblrd		*+
   323   003ECC  CFF5 FFEE          	movff	tablat,postinc0
   324   003ED0  50E5               	movf	postdec1,w,c
   325   003ED2  50E1               	movf	fsr1l,w,c
   326   003ED4  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to COMRAM (1 bytes)
   329                           ; load TBLPTR registers with __pidataCOMRAM
   330   003ED6  0E20               	movlw	low __pidataCOMRAM
   331   003ED8  6EF6               	movwf	tblptrl,c
   332   003EDA  0E44               	movlw	high __pidataCOMRAM
   333   003EDC  6EF7               	movwf	tblptrh,c
   334   003EDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   335   003EE0  6EF8               	movwf	tblptru,c
   336   003EE2  0009               	tblrd		*+	;fetch initializer
   337   003EE4  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   338                           
   339                           ; Clear objects allocated to BANK1 (134 bytes)
   340   003EE8  EE01  F000         	lfsr	0,__pbssBANK1
   341   003EEC  0E86               	movlw	134
   342   003EEE                     clear_0:
   343   003EEE  6AEE               	clrf	postinc0,c
   344   003EF0  06E8               	decf	wreg,f,c
   345   003EF2  E1FD               	bnz	clear_0
   346                           
   347                           ; Clear objects allocated to BANK0 (23 bytes)
   348   003EF4  EE00  F0DA         	lfsr	0,__pbssBANK0
   349   003EF8  0E17               	movlw	23
   350   003EFA                     clear_1:
   351   003EFA  6AEE               	clrf	postinc0,c
   352   003EFC  06E8               	decf	wreg,f,c
   353   003EFE  E1FD               	bnz	clear_1
   354   003F00                     end_of_initialization:
   355                           	callstack 0
   356   003F00                     __end_of__initialization:
   357                           	callstack 0
   358   003F00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   359   003F02  6EF8               	movwf	tblptru,c
   360   003F04  0100               	movlb	0
   361   003F06  EF64  F013         	goto	_main	;jump to C main() function
   362                           
   363                           	psect	dataCOMRAM
   364   00005F                     __pdataCOMRAM:
   365                           	callstack 0
   366   00005F                     _ForwardFlag:
   367                           	callstack 0
   368   00005F                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371   0000DA                     __pbssBANK0:
   372                           	callstack 0
   373   0000DA                     _width:
   374                           	callstack 0
   375   0000DA                     	ds	2
   376   0000DC                     _prec:
   377                           	callstack 0
   378   0000DC                     	ds	2
   379   0000DE                     _flags:
   380                           	callstack 0
   381   0000DE                     	ds	1
   382   0000DF                     _motorR:
   383                           	callstack 0
   384   0000DF                     	ds	9
   385   0000E8                     _motorL:
   386                           	callstack 0
   387   0000E8                     	ds	9
   388                           
   389                           	psect	dataBANK0
   390   0000F1                     __pdataBANK0:
   391                           	callstack 0
   392   0000F1                     stoa@F1144:
   393                           	callstack 0
   394   0000F1                     	ds	7
   395   0000F8                     __halfsquare:
   396                           	callstack 0
   397   0000F8                     	ds	2
   398   0000FA                     __1square:
   399                           	callstack 0
   400   0000FA                     	ds	2
   401   0000FC                     __45drightdelay:
   402                           	callstack 0
   403   0000FC                     	ds	2
   404   0000FE                     __45dleftdelay:
   405                           	callstack 0
   406   0000FE                     	ds	2
   407                           
   408                           	psect	bssBANK1
   409   000100                     __pbssBANK1:
   410                           	callstack 0
   411   000100                     _timerMemory:
   412                           	callstack 0
   413   000100                     	ds	40
   414   000128                     _movementMemory:
   415                           	callstack 0
   416   000128                     	ds	40
   417   000150                     	ds	32
   418   000170                     _colorf:
   419                           	callstack 0
   420   000170                     	ds	22
   421                           
   422                           	psect	cstackBANK0
   423   000060                     __pcstackBANK0:
   424                           	callstack 0
   425   000060                     ___flmul@sign:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x0
   429   000060                     	ds	1
   430   000061                     ___flmul@grs:
   431                           	callstack 0
   432                           
   433                           ; 4 bytes @ 0x1
   434   000061                     	ds	4
   435   000065                     ___flmul@aexp:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x5
   439   000065                     	ds	1
   440   000066                     ___flmul@bexp:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x6
   444   000066                     	ds	1
   445   000067                     ___flmul@prod:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x7
   449   000067                     	ds	4
   450   00006B                     ___flmul@temp:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xB
   454   00006B                     	ds	2
   455   00006D                     _RGB2Hue$2959:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0xD
   459   00006D                     	ds	4
   460   000071                     RGB2Hue@max:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x11
   464   000071                     	ds	2
   465   000073                     RGB2Hue@min:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x13
   469   000073                     	ds	2
   470   000075                     main@data:
   471                           	callstack 0
   472                           
   473                           ; 100 bytes @ 0x15
   474   000075                     	ds	100
   475   0000D9                     main@wall:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x79
   479   0000D9                     	ds	1
   480                           
   481                           	psect	cstackCOMRAM
   482   000001                     __pcstackCOMRAM:
   483                           	callstack 0
   484   000001                     ??_I2C_2_Master_Idle:
   485   000001                     ?_strlen:
   486                           	callstack 0
   487   000001                     ?_strncmp:
   488                           	callstack 0
   489   000001                     ?___wmul:
   490                           	callstack 0
   491   000001                     ?___fltol:
   492                           	callstack 0
   493   000001                     ClickLEDOn@power:
   494                           	callstack 0
   495   000001                     sendCharSerial4@charToSend:
   496                           	callstack 0
   497   000001                     initDCmotorsPWM@PWMperiod:
   498                           	callstack 0
   499   000001                     ___wmul@multiplier:
   500                           	callstack 0
   501   000001                     fputc@c:
   502                           	callstack 0
   503   000001                     strlen@s:
   504                           	callstack 0
   505   000001                     strncmp@_l:
   506                           	callstack 0
   507   000001                     ___fleq@ff1:
   508                           	callstack 0
   509   000001                     ___flge@ff1:
   510                           	callstack 0
   511   000001                     ___fltol@f1:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x0
   515   000001                     	ds	1
   516   000002                     ??_I2C_2_Master_Read:
   517   000002                     I2C_2_Master_Write@data_byte:
   518                           	callstack 0
   519   000002                     sendStringSerial4@string:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1
   523   000002                     	ds	1
   524   000003                     color_writetoaddr@value:
   525                           	callstack 0
   526   000003                     I2C_2_Master_Read@ack:
   527                           	callstack 0
   528   000003                     ___wmul@multiplicand:
   529                           	callstack 0
   530   000003                     fputc@fp:
   531                           	callstack 0
   532   000003                     strlen@a:
   533                           	callstack 0
   534   000003                     strncmp@_r:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538   000003                     	ds	1
   539   000004                     color_writetoaddr@address:
   540                           	callstack 0
   541   000004                     I2C_2_Master_Read@tmp:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x3
   545   000004                     	ds	1
   546   000005                     ??_fputc:
   547   000005                     ??_color_click_init:
   548   000005                     ??___fltol:
   549   000005                     ?_color_read_Red:
   550                           	callstack 0
   551   000005                     ?_color_read_Green:
   552                           	callstack 0
   553   000005                     ?_color_read_Blue:
   554                           	callstack 0
   555   000005                     ?_color_read_Clear:
   556                           	callstack 0
   557   000005                     ___wmul@product:
   558                           	callstack 0
   559   000005                     strncmp@n:
   560                           	callstack 0
   561   000005                     ___fleq@ff2:
   562                           	callstack 0
   563   000005                     ___flge@ff2:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x4
   567   000005                     	ds	2
   568   000007                     ??_strncmp:
   569   000007                     ??_color_read_Red:
   570   000007                     ??_color_read_Green:
   571   000007                     ??_color_read_Blue:
   572   000007                     ??_color_read_Clear:
   573   000007                     ?___lwdiv:
   574                           	callstack 0
   575   000007                     ___lwdiv@dividend:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x6
   579   000007                     	ds	1
   580   000008                     strncmp@l:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584   000008                     	ds	1
   585   000009                     ??___fleq:
   586   000009                     ??___flge:
   587   000009                     ___fltol@sign1:
   588                           	callstack 0
   589   000009                     ___lwdiv@divisor:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x8
   593   000009                     	ds	1
   594   00000A                     ___fltol@exp1:
   595                           	callstack 0
   596   00000A                     color_read_Red@tmp:
   597                           	callstack 0
   598   00000A                     color_read_Green@tmp:
   599                           	callstack 0
   600   00000A                     color_read_Blue@tmp:
   601                           	callstack 0
   602   00000A                     color_read_Clear@tmp:
   603                           	callstack 0
   604   00000A                     stoa@fp:
   605                           	callstack 0
   606   00000A                     strncmp@r:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x9
   610   00000A                     	ds	1
   611   00000B                     ___lwdiv@quotient:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0xA
   615   00000B                     	ds	1
   616   00000C                     ?___xxtofl:
   617                           	callstack 0
   618   00000C                     stoa@s:
   619                           	callstack 0
   620   00000C                     ___xxtofl@val:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0xB
   624   00000C                     	ds	1
   625   00000D                     ?_Hue2Colour:
   626                           	callstack 0
   627   00000D                     ___lwdiv@counter:
   628                           	callstack 0
   629   00000D                     Hue2Colour@cf:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0xC
   633   00000D                     	ds	1
   634   00000E                     ??_stoa:
   635   00000E                     setMotorPWM@m:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0xD
   639   00000E                     	ds	1
   640   00000F                     Hue2Colour@colourname:
   641                           	callstack 0
   642   00000F                     stoa@nuls:
   643                           	callstack 0
   644                           
   645                           ; 7 bytes @ 0xE
   646   00000F                     	ds	1
   647   000010                     ??_setMotorPWM:
   648   000010                     ??___xxtofl:
   649                           
   650                           ; 1 bytes @ 0xF
   651   000010                     	ds	2
   652   000012                     setMotorPWM@posDuty:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x11
   656   000012                     	ds	1
   657   000013                     setMotorPWM@negDuty:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x12
   661   000013                     	ds	1
   662   000014                     ___xxtofl@sign:
   663                           	callstack 0
   664   000014                     stop@mL:
   665                           	callstack 0
   666   000014                     turnLeft@mL:
   667                           	callstack 0
   668   000014                     turnRight@mL:
   669                           	callstack 0
   670   000014                     fullSpeedAhead@mL:
   671                           	callstack 0
   672   000014                     fullSpeedReverse@mL:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x13
   676   000014                     	ds	1
   677   000015                     ___xxtofl@exp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x14
   681   000015                     	ds	1
   682   000016                     stop@mR:
   683                           	callstack 0
   684   000016                     turnLeft@mR:
   685                           	callstack 0
   686   000016                     turnRight@mR:
   687                           	callstack 0
   688   000016                     fullSpeedAhead@mR:
   689                           	callstack 0
   690   000016                     fullSpeedReverse@mR:
   691                           	callstack 0
   692   000016                     stoa@w:
   693                           	callstack 0
   694   000016                     ___xxtofl@arg:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x15
   698   000016                     	ds	2
   699   000018                     ??_fullSpeedAhead:
   700   000018                     ??_stop:
   701   000018                     ??_fullSpeedReverse:
   702   000018                     turnLeft@i:
   703                           	callstack 0
   704   000018                     turnRight@i:
   705                           	callstack 0
   706   000018                     stoa@i:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x17
   710   000018                     	ds	1
   711   000019                     fullSpeedAhead@i:
   712                           	callstack 0
   713   000019                     fullSpeedReverse@i:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x18
   717   000019                     	ds	1
   718   00001A                     ?___fladd:
   719                           	callstack 0
   720   00001A                     colour_read_all@cf:
   721                           	callstack 0
   722   00001A                     Left45@mL:
   723                           	callstack 0
   724   00001A                     Right45@mL:
   725                           	callstack 0
   726   00001A                     stoa@cp:
   727                           	callstack 0
   728   00001A                     ___fladd@b:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x19
   732   00001A                     	ds	1
   733   00001B                     reverseHalfSquare@mL:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x1A
   737   00001B                     	ds	1
   738   00001C                     Left45@mR:
   739                           	callstack 0
   740   00001C                     Right45@mR:
   741                           	callstack 0
   742   00001C                     stoa@l:
   743                           	callstack 0
   744   00001C                     colour_read_all@R:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x1B
   748   00001C                     	ds	1
   749   00001D                     reverseHalfSquare@mR:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1C
   753   00001D                     	ds	1
   754   00001E                     ??_Left45:
   755   00001E                     ??_Right45:
   756   00001E                     stoa@p:
   757                           	callstack 0
   758   00001E                     ___fladd@a:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x1D
   762   00001E                     	ds	1
   763   00001F                     ??_reverseHalfSquare:
   764                           
   765                           ; 1 bytes @ 0x1E
   766   00001F                     	ds	1
   767   000020                     rotate180left@mL:
   768                           	callstack 0
   769   000020                     vfpfcnvrt@fp:
   770                           	callstack 0
   771   000020                     colour_read_all@G:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x1F
   775   000020                     	ds	1
   776   000021                     Red_R90@mL:
   777                           	callstack 0
   778   000021                     Green_L90@mL:
   779                           	callstack 0
   780   000021                     Yellow_rev1_R90@mL:
   781                           	callstack 0
   782   000021                     Pink_rev1_L90@mL:
   783                           	callstack 0
   784   000021                     Orange_R135@mL:
   785                           	callstack 0
   786   000021                     LightBlue_L135@mL:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x20
   790   000021                     	ds	1
   791   000022                     ??___fladd:
   792   000022                     rotate180left@mR:
   793                           	callstack 0
   794   000022                     vfpfcnvrt@fmt:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x21
   798   000022                     	ds	1
   799   000023                     Red_R90@mR:
   800                           	callstack 0
   801   000023                     Green_L90@mR:
   802                           	callstack 0
   803   000023                     Yellow_rev1_R90@mR:
   804                           	callstack 0
   805   000023                     Pink_rev1_L90@mR:
   806                           	callstack 0
   807   000023                     Orange_R135@mR:
   808                           	callstack 0
   809   000023                     LightBlue_L135@mR:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x22
   813   000023                     	ds	1
   814   000024                     Blue_T180@mL:
   815                           	callstack 0
   816   000024                     vfpfcnvrt@ap:
   817                           	callstack 0
   818   000024                     colour_read_all@B:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x23
   822   000024                     	ds	1
   823   000025                     ??_Yellow_rev1_R90:
   824   000025                     ??_Pink_rev1_L90:
   825   000025                     
   826                           ; 1 bytes @ 0x24
   827   000025                     	ds	1
   828   000026                     ??_vfpfcnvrt:
   829   000026                     ___fladd@signs:
   830                           	callstack 0
   831   000026                     Blue_T180@mR:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x25
   835   000026                     	ds	1
   836   000027                     ___fladd@aexp:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x26
   840   000027                     	ds	1
   841   000028                     ___fladd@bexp:
   842                           	callstack 0
   843   000028                     Colour2Action@cf:
   844                           	callstack 0
   845   000028                     _vfpfcnvrt$2673:
   846                           	callstack 0
   847   000028                     colour_read_all@C:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x27
   851   000028                     	ds	1
   852   000029                     ___fladd@grs:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x28
   856   000029                     	ds	1
   857   00002A                     ?_vfprintf:
   858                           	callstack 0
   859   00002A                     ?___flsub:
   860                           	callstack 0
   861   00002A                     vfprintf@fp:
   862                           	callstack 0
   863   00002A                     ___flsub@b:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x29
   867   00002A                     	ds	2
   868   00002C                     vfprintf@fmt:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x2B
   872   00002C                     	ds	2
   873   00002E                     vfprintf@ap:
   874                           	callstack 0
   875   00002E                     ___flsub@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x2D
   879   00002E                     	ds	2
   880   000030                     vfprintf@cfmt:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2F
   884   000030                     	ds	2
   885   000032                     ?_sprintf:
   886                           	callstack 0
   887   000032                     ?___fldiv:
   888                           	callstack 0
   889   000032                     sprintf@s:
   890                           	callstack 0
   891   000032                     ___fldiv@b:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x31
   895   000032                     	ds	2
   896   000034                     sprintf@fmt:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x33
   900   000034                     	ds	2
   901   000036                     ___fldiv@a:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x35
   905   000036                     	ds	2
   906   000038                     sprintf@ap:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x37
   910   000038                     	ds	2
   911   00003A                     ??___fldiv:
   912   00003A                     sprintf@f:
   913                           	callstack 0
   914                           
   915                           ; 11 bytes @ 0x39
   916   00003A                     	ds	4
   917   00003E                     ___fldiv@rem:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x3D
   921   00003E                     	ds	4
   922   000042                     ___fldiv@sign:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x41
   926   000042                     	ds	1
   927   000043                     ___fldiv@new_exp:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x42
   931   000043                     	ds	2
   932   000045                     Color2String@buf:
   933                           	callstack 0
   934   000045                     ___fldiv@grs:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x44
   938   000045                     	ds	2
   939   000047                     Color2String@cf:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x46
   943   000047                     	ds	2
   944   000049                     ___fldiv@bexp:
   945                           	callstack 0
   946   000049                     Color2String@colourname:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x48
   950   000049                     	ds	1
   951   00004A                     ___fldiv@aexp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x49
   955   00004A                     	ds	1
   956   00004B                     ?___flmul:
   957                           	callstack 0
   958   00004B                     ___flmul@b:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x4A
   962   00004B                     	ds	4
   963   00004F                     ___flmul@a:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x4E
   967   00004F                     	ds	4
   968   000053                     ??___flmul:
   969                           
   970                           ; 1 bytes @ 0x52
   971   000053                     	ds	4
   972   000057                     RGB2Hue@cf:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x56
   976   000057                     	ds	2
   977   000059                     ??_RGB2Hue:
   978                           
   979                           ; 1 bytes @ 0x58
   980   000059                     	ds	4
   981   00005D                     ??_main:
   982                           
   983                           ; 1 bytes @ 0x5C
   984   00005D                     	ds	2
   985                           
   986 ;;
   987 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   988 ;;
   989 ;; *************** function _main *****************
   990 ;; Defined at:
   991 ;;		line 17 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  data          100   21[BANK0 ] unsigned char [100]
   996 ;;  PWMcycle        2    0        unsigned int 
   997 ;;  wall            1  121[BANK0 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:         2     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:      103 bytes
  1012 ;; Hardware stack levels required when called: 7
  1013 ;; This function calls:
  1014 ;;		_ClickLEDOn
  1015 ;;		_Color2String
  1016 ;;		_Colour2Action
  1017 ;;		_Hue2Colour
  1018 ;;		_I2C_2_Master_Init
  1019 ;;		_LED_init
  1020 ;;		_RGB2Hue
  1021 ;;		___flge
  1022 ;;		_color_click_init
  1023 ;;		_colour_read_all
  1024 ;;		_fullSpeedAhead
  1025 ;;		_initDCmotorsPWM
  1026 ;;		_initUSART4
  1027 ;;		_stop
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text0
  1034   0026C8                     __ptext0:
  1035                           	callstack 0
  1036   0026C8                     _main:
  1037                           	callstack 24
  1038   0026C8                     
  1039                           ;main.c: 18:     char data[100];;main.c: 19:     initUSART4();
  1040   0026C8  ECB9  F021         	call	_initUSART4	;wreg free
  1041   0026CC                     
  1042                           ;main.c: 20:     color_click_init();
  1043   0026CC  EC08  F021         	call	_color_click_init	;wreg free
  1044   0026D0                     
  1045                           ;main.c: 21:     I2C_2_Master_Init();
  1046   0026D0  EC7D  F021         	call	_I2C_2_Master_Init	;wreg free
  1047   0026D4                     
  1048                           ;main.c: 22:     LED_init();
  1049   0026D4  ECEE  F021         	call	_LED_init	;wreg free
  1050   0026D8                     
  1051                           ;main.c: 24:     initDCmotorsPWM(PWMcycle);
  1052   0026D8  0E00               	movlw	0
  1053   0026DA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1054   0026DC  0E63               	movlw	99
  1055   0026DE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1056   0026E0  ECA4  F01C         	call	_initDCmotorsPWM	;wreg free
  1057   0026E4                     
  1058                           ;main.c: 26:     motorL.power=0;
  1059   0026E4  0E00               	movlw	0
  1060   0026E6  0100               	movlb	0	; () banked
  1061   0026E8  6FE8               	movwf	_motorL& (0+255),b
  1062   0026EA                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 27:     motorL.direction=1;
  1065   0026EA  0E01               	movlw	1
  1066   0026EC  6FE9               	movwf	(_motorL+1)& (0+255),b
  1067   0026EE                     
  1068                           ; BSR set to: 0
  1069                           ;main.c: 28:     motorL.brakemode=1;
  1070   0026EE  0E01               	movlw	1
  1071   0026F0  6FEA               	movwf	(_motorL+2)& (0+255),b
  1072   0026F2                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 29:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1075   0026F2  0EAA               	movlw	170
  1076   0026F4  6FED               	movwf	(_motorL+5)& (0+255),b
  1077   0026F6  0E0F               	movlw	15
  1078   0026F8  6FEE               	movwf	(_motorL+6)& (0+255),b
  1079   0026FA                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 30:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1082   0026FA  0EA6               	movlw	166
  1083   0026FC  6FEF               	movwf	(_motorL+7)& (0+255),b
  1084   0026FE  0E0F               	movlw	15
  1085   002700  6FF0               	movwf	(_motorL+8)& (0+255),b
  1086   002702                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 31:     motorL.PWMperiod=PWMcycle;
  1089   002702  0E00               	movlw	0
  1090   002704  6FEC               	movwf	(_motorL+4)& (0+255),b
  1091   002706  0E63               	movlw	99
  1092   002708  6FEB               	movwf	(_motorL+3)& (0+255),b
  1093   00270A                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 33:     motorR.power=0;
  1096   00270A  0E00               	movlw	0
  1097   00270C  6FDF               	movwf	_motorR& (0+255),b
  1098   00270E                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 34:     motorR.direction=1;
  1101   00270E  0E01               	movlw	1
  1102   002710  6FE0               	movwf	(_motorR+1)& (0+255),b
  1103   002712                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 35:     motorR.brakemode=1;
  1106   002712  0E01               	movlw	1
  1107   002714  6FE1               	movwf	(_motorR+2)& (0+255),b
  1108   002716                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 36:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1111   002716  0E25               	movlw	37
  1112   002718  6FE4               	movwf	(_motorR+5)& (0+255),b
  1113   00271A  0E0F               	movlw	15
  1114   00271C  6FE5               	movwf	(_motorR+6)& (0+255),b
  1115   00271E                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 37:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1118   00271E  0E21               	movlw	33
  1119   002720  6FE6               	movwf	(_motorR+7)& (0+255),b
  1120   002722  0E0F               	movlw	15
  1121   002724  6FE7               	movwf	(_motorR+8)& (0+255),b
  1122   002726                     
  1123                           ; BSR set to: 0
  1124                           ;main.c: 38:     motorR.PWMperiod=PWMcycle;
  1125   002726  0E00               	movlw	0
  1126   002728  6FE3               	movwf	(_motorR+4)& (0+255),b
  1127   00272A  0E63               	movlw	99
  1128   00272C  6FE2               	movwf	(_motorR+3)& (0+255),b
  1129   00272E                     
  1130                           ; BSR set to: 0
  1131                           ;main.c: 40:     TRISFbits.TRISF2=1;
  1132   00272E  8486               	bsf	134,2,c	;volatile
  1133   002730                     
  1134                           ; BSR set to: 0
  1135                           ;main.c: 41:     ANSELFbits.ANSELF2=0;
  1136   002730  010E               	movlb	14	; () banked
  1137   002732  95B4               	bcf	180,2,b	;volatile
  1138   002734                     l259:
  1139                           
  1140                           ;main.c: 42:     while(PORTFbits.RF2){
  1141   002734  B48E               	btfsc	142,2,c	;volatile
  1142   002736  EF9F  F013         	goto	u3951
  1143   00273A  EFA1  F013         	goto	u3950
  1144   00273E                     u3951:
  1145   00273E  EF9A  F013         	goto	l259
  1146   002742                     u3950:
  1147   002742                     
  1148                           ;main.c: 44:     char wall=0;
  1149   002742  0E00               	movlw	0
  1150   002744  0100               	movlb	0	; () banked
  1151   002746  6FD9               	movwf	main@wall& (0+255),b
  1152   002748                     
  1153                           ; BSR set to: 0
  1154                           ;main.c: 45:     ClickLEDOn(0);
  1155   002748  0E00               	movlw	0
  1156   00274A  EC63  F021         	call	_ClickLEDOn
  1157   00274E                     l4185:
  1158                           
  1159                           ;main.c: 47:         fullSpeedAhead(&motorL,&motorR);
  1160   00274E  0EE8               	movlw	low _motorL
  1161   002750  6E14               	movwf	fullSpeedAhead@mL^0,c
  1162   002752  0E00               	movlw	high _motorL
  1163   002754  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1164   002756  0EDF               	movlw	low _motorR
  1165   002758  6E16               	movwf	fullSpeedAhead@mR^0,c
  1166   00275A  0E00               	movlw	high _motorR
  1167   00275C  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1168   00275E  ECB9  F01D         	call	_fullSpeedAhead	;wreg free
  1169   002762                     
  1170                           ;main.c: 49:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1171   002762  0E52               	movlw	82
  1172   002764  6E5E               	movwf	(??_main+1)^0,c
  1173   002766  0E2B               	movlw	43
  1174   002768  6E5D               	movwf	??_main^0,c
  1175   00276A  0E00               	movlw	0
  1176   00276C                     u4067:
  1177   00276C  2EE8               	decfsz	wreg,f,c
  1178   00276E  D7FE               	bra	u4067
  1179   002770  2E5D               	decfsz	??_main^0,f,c
  1180   002772  D7FC               	bra	u4067
  1181   002774  2E5E               	decfsz	(??_main+1)^0,f,c
  1182   002776  D7FA               	bra	u4067
  1183   002778  D000               	nop2	
  1184                           
  1185                           ;main.c: 50:         while (!wall){
  1186   00277A  EF04  F014         	goto	l4203
  1187   00277E                     l4189:
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 52:             colour_read_all(&colorf);
  1191   00277E  0E70               	movlw	low _colorf
  1192   002780  6E1A               	movwf	colour_read_all@cf^0,c
  1193   002782  0E01               	movlw	high _colorf
  1194   002784  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1195   002786  ECE3  F017         	call	_colour_read_all	;wreg free
  1196   00278A                     
  1197                           ;main.c: 53:             Color2String(data,&colorf);
  1198   00278A  0E75               	movlw	low main@data
  1199   00278C  6E45               	movwf	Color2String@buf^0,c
  1200   00278E  0E00               	movlw	high main@data
  1201   002790  6E46               	movwf	(Color2String@buf+1)^0,c
  1202   002792  0E70               	movlw	low _colorf
  1203   002794  6E47               	movwf	Color2String@cf^0,c
  1204   002796  0E01               	movlw	high _colorf
  1205   002798  6E48               	movwf	(Color2String@cf+1)^0,c
  1206   00279A  EC28  F021         	call	_Color2String	;wreg free
  1207   00279E                     
  1208                           ;main.c: 57:              if (colorf.Cf<100)
  1209   00279E  C17C  F001         	movff	_colorf+12,___flge@ff1
  1210   0027A2  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1211   0027A6  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1212   0027AA  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1213   0027AE  0E00               	movlw	0
  1214   0027B0  6E05               	movwf	___flge@ff2^0,c
  1215   0027B2  0E00               	movlw	0
  1216   0027B4  6E06               	movwf	(___flge@ff2+1)^0,c
  1217   0027B6  0EC8               	movlw	200
  1218   0027B8  6E07               	movwf	(___flge@ff2+2)^0,c
  1219   0027BA  0E42               	movlw	66
  1220   0027BC  6E08               	movwf	(___flge@ff2+3)^0,c
  1221   0027BE  ECE9  F018         	call	___flge	;wreg free
  1222   0027C2  B0D8               	btfsc	status,0,c
  1223   0027C4  EFE6  F013         	goto	u3961
  1224   0027C8  EFE8  F013         	goto	u3960
  1225   0027CC                     u3961:
  1226   0027CC  EF04  F014         	goto	l4203
  1227   0027D0                     u3960:
  1228   0027D0                     
  1229                           ;main.c: 58:              {;main.c: 60:                  wall=1;
  1230   0027D0  0E01               	movlw	1
  1231   0027D2  0100               	movlb	0	; () banked
  1232   0027D4  6FD9               	movwf	main@wall& (0+255),b
  1233   0027D6                     
  1234                           ; BSR set to: 0
  1235                           ;main.c: 61:                  ClickLEDOn(1);
  1236   0027D6  0E01               	movlw	1
  1237   0027D8  EC63  F021         	call	_ClickLEDOn
  1238   0027DC                     
  1239                           ;main.c: 62:                  stop(&motorL,&motorR);
  1240   0027DC  0EE8               	movlw	low _motorL
  1241   0027DE  6E14               	movwf	stop@mL^0,c
  1242   0027E0  0E00               	movlw	high _motorL
  1243   0027E2  6E15               	movwf	(stop@mL+1)^0,c
  1244   0027E4  0EDF               	movlw	low _motorR
  1245   0027E6  6E16               	movwf	stop@mR^0,c
  1246   0027E8  0E00               	movlw	high _motorR
  1247   0027EA  6E17               	movwf	(stop@mR+1)^0,c
  1248   0027EC  ECBB  F01B         	call	_stop	;wreg free
  1249   0027F0                     
  1250                           ;main.c: 63:                  _delay((unsigned long)((2000)*(64000000/4000.0)));
  1251   0027F0  0EA3               	movlw	163
  1252   0027F2  6E5E               	movwf	(??_main+1)^0,c
  1253   0027F4  0E57               	movlw	87
  1254   0027F6  6E5D               	movwf	??_main^0,c
  1255   0027F8  0E02               	movlw	2
  1256   0027FA                     u4077:
  1257   0027FA  2EE8               	decfsz	wreg,f,c
  1258   0027FC  D7FE               	bra	u4077
  1259   0027FE  2E5D               	decfsz	??_main^0,f,c
  1260   002800  D7FC               	bra	u4077
  1261   002802  2E5E               	decfsz	(??_main+1)^0,f,c
  1262   002804  D7FA               	bra	u4077
  1263   002806  D000               	nop2	
  1264   002808                     l4203:
  1265                           
  1266                           ;main.c: 50:         while (!wall){
  1267   002808  0100               	movlb	0	; () banked
  1268   00280A  51D9               	movf	main@wall& (0+255),w,b
  1269   00280C  B4D8               	btfsc	status,2,c
  1270   00280E  EF0B  F014         	goto	u3971
  1271   002812  EF0D  F014         	goto	u3970
  1272   002816                     u3971:
  1273   002816  EFBF  F013         	goto	l4189
  1274   00281A                     u3970:
  1275   00281A                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 66:         colour_read_all(&colorf);
  1278   00281A  0E70               	movlw	low _colorf
  1279   00281C  6E1A               	movwf	colour_read_all@cf^0,c
  1280   00281E  0E01               	movlw	high _colorf
  1281   002820  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1282   002822  ECE3  F017         	call	_colour_read_all	;wreg free
  1283   002826                     
  1284                           ;main.c: 67:         RGB2Hue(&colorf);
  1285   002826  0E70               	movlw	low _colorf
  1286   002828  6E57               	movwf	RGB2Hue@cf^0,c
  1287   00282A  0E01               	movlw	high _colorf
  1288   00282C  6E58               	movwf	(RGB2Hue@cf+1)^0,c
  1289   00282E  EC29  F007         	call	_RGB2Hue	;wreg free
  1290   002832                     
  1291                           ;main.c: 68:         Hue2Colour(&colorf);
  1292   002832  0E70               	movlw	low _colorf
  1293   002834  6E0D               	movwf	Hue2Colour@cf^0,c
  1294   002836  0E01               	movlw	high _colorf
  1295   002838  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1296   00283A  ECAA  F00A         	call	_Hue2Colour	;wreg free
  1297                           
  1298                           ;main.c: 69:         Colour2Action(&colorf);
  1299   00283E  0E70               	movlw	low _colorf
  1300   002840  6E28               	movwf	Colour2Action@cf^0,c
  1301   002842  0E01               	movlw	high _colorf
  1302   002844  6E29               	movwf	(Colour2Action@cf+1)^0,c
  1303   002846  EC1F  F015         	call	_Colour2Action	;wreg free
  1304   00284A                     
  1305                           ;main.c: 71:         Color2String(data,&colorf);
  1306   00284A  0E75               	movlw	low main@data
  1307   00284C  6E45               	movwf	Color2String@buf^0,c
  1308   00284E  0E00               	movlw	high main@data
  1309   002850  6E46               	movwf	(Color2String@buf+1)^0,c
  1310   002852  0E70               	movlw	low _colorf
  1311   002854  6E47               	movwf	Color2String@cf^0,c
  1312   002856  0E01               	movlw	high _colorf
  1313   002858  6E48               	movwf	(Color2String@cf+1)^0,c
  1314   00285A  EC28  F021         	call	_Color2String	;wreg free
  1315   00285E                     
  1316                           ;main.c: 72:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1317   00285E  0E52               	movlw	82
  1318   002860  6E5E               	movwf	(??_main+1)^0,c
  1319   002862  0E2B               	movlw	43
  1320   002864  6E5D               	movwf	??_main^0,c
  1321   002866  0E00               	movlw	0
  1322   002868                     u4087:
  1323   002868  2EE8               	decfsz	wreg,f,c
  1324   00286A  D7FE               	bra	u4087
  1325   00286C  2E5D               	decfsz	??_main^0,f,c
  1326   00286E  D7FC               	bra	u4087
  1327   002870  2E5E               	decfsz	(??_main+1)^0,f,c
  1328   002872  D7FA               	bra	u4087
  1329   002874  D000               	nop2	
  1330   002876                     
  1331                           ;main.c: 73:         wall=0;
  1332   002876  0E00               	movlw	0
  1333   002878  0100               	movlb	0	; () banked
  1334   00287A  6FD9               	movwf	main@wall& (0+255),b
  1335   00287C                     
  1336                           ; BSR set to: 0
  1337                           ;main.c: 74:         ClickLEDOn(0);
  1338   00287C  0E00               	movlw	0
  1339   00287E  EC63  F021         	call	_ClickLEDOn
  1340   002882  EFA7  F013         	goto	l4185
  1341   002886  EF00  F000         	goto	start
  1342   00288A                     __end_of_main:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _initUSART4 *****************
  1346 ;; Defined at:
  1347 ;;		line 7 in file "serial.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text1
  1375   004372                     __ptext1:
  1376                           	callstack 0
  1377   004372                     _initUSART4:
  1378                           	callstack 30
  1379   004372                     
  1380                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1381   004372  8883               	bsf	131,4,c	;volatile
  1382                           
  1383                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1384   004374  8283               	bsf	131,1,c	;volatile
  1385   004376                     
  1386                           ;serial.c: 10:     RC0PPS = 0x12;
  1387   004376  0E12               	movlw	18
  1388   004378  010E               	movlb	14	; () banked
  1389   00437A  6F62               	movwf	98,b	;volatile
  1390                           
  1391                           ;serial.c: 11:     RX4PPS = 0x11;
  1392   00437C  0E11               	movlw	17
  1393   00437E  6F15               	movwf	21,b	;volatile
  1394   004380                     
  1395                           ; BSR set to: 14
  1396                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1397   004380  97E9               	bcf	233,3,b	;volatile
  1398   004382                     
  1399                           ; BSR set to: 14
  1400                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1401   004382  95E8               	bcf	232,2,b	;volatile
  1402                           
  1403                           ;serial.c: 15:     SP4BRGL = 51;
  1404   004384  0E33               	movlw	51
  1405   004386  6FE5               	movwf	229,b	;volatile
  1406                           
  1407                           ;serial.c: 16:     SP4BRGH = 0;
  1408   004388  0E00               	movlw	0
  1409   00438A  6FE6               	movwf	230,b	;volatile
  1410   00438C                     
  1411                           ; BSR set to: 14
  1412                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1413   00438C  89E7               	bsf	231,4,b	;volatile
  1414   00438E                     
  1415                           ; BSR set to: 14
  1416                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1417   00438E  8BE8               	bsf	232,5,b	;volatile
  1418   004390                     
  1419                           ; BSR set to: 14
  1420                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1421   004390  8FE7               	bsf	231,7,b	;volatile
  1422   004392                     
  1423                           ; BSR set to: 14
  1424   004392  0012               	return		;funcret
  1425   004394                     __end_of_initUSART4:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _initDCmotorsPWM *****************
  1429 ;; Defined at:
  1430 ;;		line 11 in file "dc_motor.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text2
  1458   003948                     __ptext2:
  1459                           	callstack 0
  1460   003948                     _initDCmotorsPWM:
  1461                           	callstack 30
  1462   003948                     
  1463                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1464   003948  9485               	bcf	133,2,c	;volatile
  1465                           
  1466                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1467   00394A  9E83               	bcf	131,7,c	;volatile
  1468                           
  1469                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1470   00394C  9885               	bcf	133,4,c	;volatile
  1471                           
  1472                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1473   00394E  9C87               	bcf	135,6,c	;volatile
  1474                           
  1475                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1476   003950  947D               	bcf	125,2,c	;volatile
  1477                           
  1478                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1479   003952  9E7B               	bcf	123,7,c	;volatile
  1480                           
  1481                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1482   003954  987D               	bcf	125,4,c	;volatile
  1483                           
  1484                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1485   003956  9C7F               	bcf	127,6,c	;volatile
  1486   003958                     
  1487                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1488   003958  0E05               	movlw	5
  1489   00395A  010E               	movlb	14	; () banked
  1490   00395C  6F74               	movwf	116,b	;volatile
  1491                           
  1492                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1493   00395E  0E06               	movlw	6
  1494   003960  6F76               	movwf	118,b	;volatile
  1495                           
  1496                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1497   003962  0E07               	movlw	7
  1498   003964  6F69               	movwf	105,b	;volatile
  1499                           
  1500                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1501   003966  0E08               	movlw	8
  1502   003968  6F88               	movwf	136,b	;volatile
  1503                           
  1504                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1505   00396A  50BD               	movf	189,w,c	;volatile
  1506   00396C  0B8F               	andlw	-113
  1507   00396E  0940               	iorlw	64
  1508   003970  6EBD               	movwf	189,c	;volatile
  1509                           
  1510                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1511   003972  0EE0               	movlw	-32
  1512   003974  16BE               	andwf	190,f,c	;volatile
  1513                           
  1514                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1515   003976  50BF               	movf	191,w,c	;volatile
  1516   003978  0BF0               	andlw	-16
  1517   00397A  0901               	iorlw	1
  1518   00397C  6EBF               	movwf	191,c	;volatile
  1519   00397E                     
  1520                           ; BSR set to: 14
  1521                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1522   00397E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1523   003982                     
  1524                           ; BSR set to: 14
  1525                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1526   003982  8EBD               	bsf	189,7,c	;volatile
  1527                           
  1528                           ;dc_motor.c: 40:     CCPR1H=0;
  1529   003984  0E00               	movlw	0
  1530   003986  6EAA               	movwf	170,c	;volatile
  1531                           
  1532                           ;dc_motor.c: 41:     CCPR2H=0;
  1533   003988  0E00               	movlw	0
  1534   00398A  6EA6               	movwf	166,c	;volatile
  1535                           
  1536                           ;dc_motor.c: 42:     CCPR3H=0;
  1537   00398C  0E00               	movlw	0
  1538   00398E  010F               	movlb	15	; () banked
  1539   003990  6F25               	movwf	37,b	;volatile
  1540                           
  1541                           ;dc_motor.c: 43:     CCPR4H=0;
  1542   003992  0E00               	movlw	0
  1543   003994  6F21               	movwf	33,b	;volatile
  1544                           
  1545                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1546   003996  0EFC               	movlw	-4
  1547   003998  16AD               	andwf	173,f,c	;volatile
  1548                           
  1549                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1550   00399A  0EF3               	movlw	-13
  1551   00399C  16AD               	andwf	173,f,c	;volatile
  1552                           
  1553                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1554   00399E  0ECF               	movlw	-49
  1555   0039A0  16AD               	andwf	173,f,c	;volatile
  1556                           
  1557                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1558   0039A2  0E3F               	movlw	-193
  1559   0039A4  16AD               	andwf	173,f,c	;volatile
  1560   0039A6                     
  1561                           ; BSR set to: 15
  1562                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1563   0039A6  88AB               	bsf	171,4,c	;volatile
  1564                           
  1565                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1566   0039A8  50AB               	movf	171,w,c	;volatile
  1567   0039AA  0BF0               	andlw	-16
  1568   0039AC  090C               	iorlw	12
  1569   0039AE  6EAB               	movwf	171,c	;volatile
  1570   0039B0                     
  1571                           ; BSR set to: 15
  1572                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1573   0039B0  8EAB               	bsf	171,7,c	;volatile
  1574   0039B2                     
  1575                           ; BSR set to: 15
  1576                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1577   0039B2  88A7               	bsf	167,4,c	;volatile
  1578                           
  1579                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1580   0039B4  50A7               	movf	167,w,c	;volatile
  1581   0039B6  0BF0               	andlw	-16
  1582   0039B8  090C               	iorlw	12
  1583   0039BA  6EA7               	movwf	167,c	;volatile
  1584   0039BC                     
  1585                           ; BSR set to: 15
  1586                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1587   0039BC  8EA7               	bsf	167,7,c	;volatile
  1588   0039BE                     
  1589                           ; BSR set to: 15
  1590                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1591   0039BE  8926               	bsf	38,4,b	;volatile
  1592                           
  1593                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1594   0039C0  5126               	movf	38,w,b	;volatile
  1595   0039C2  0BF0               	andlw	-16
  1596   0039C4  090C               	iorlw	12
  1597   0039C6  6F26               	movwf	38,b	;volatile
  1598   0039C8                     
  1599                           ; BSR set to: 15
  1600                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1601   0039C8  8F26               	bsf	38,7,b	;volatile
  1602   0039CA                     
  1603                           ; BSR set to: 15
  1604                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1605   0039CA  8922               	bsf	34,4,b	;volatile
  1606                           
  1607                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1608   0039CC  5122               	movf	34,w,b	;volatile
  1609   0039CE  0BF0               	andlw	-16
  1610   0039D0  090C               	iorlw	12
  1611   0039D2  6F22               	movwf	34,b	;volatile
  1612   0039D4                     
  1613                           ; BSR set to: 15
  1614                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1615   0039D4  8F22               	bsf	34,7,b	;volatile
  1616   0039D6                     
  1617                           ; BSR set to: 15
  1618   0039D6  0012               	return		;funcret
  1619   0039D8                     __end_of_initDCmotorsPWM:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _colour_read_all *****************
  1623 ;; Defined at:
  1624 ;;		line 8 in file "colorfunctions.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1627 ;;		 -> colorf(22), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  C               4   39[COMRAM] float 
  1630 ;;  B               4   35[COMRAM] float 
  1631 ;;  G               4   31[COMRAM] float 
  1632 ;;  R               4   27[COMRAM] float 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;Total ram usage:       18 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 3
  1649 ;; This function calls:
  1650 ;;		___xxtofl
  1651 ;;		_color_read_Blue
  1652 ;;		_color_read_Clear
  1653 ;;		_color_read_Green
  1654 ;;		_color_read_Red
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text3
  1661   002FC6                     __ptext3:
  1662                           	callstack 0
  1663   002FC6                     _colour_read_all:
  1664                           	callstack 27
  1665   002FC6                     
  1666                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1667   002FC6  ECAE  F01F         	call	_color_read_Red	;wreg free
  1668   002FCA  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1669   002FCE  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1670   002FD2  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1671   002FD4  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1672   002FD6  0E00               	movlw	0
  1673   002FD8  EC45  F014         	call	___xxtofl
  1674   002FDC  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1675   002FE0  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1676   002FE4  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1677   002FE8  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1678                           
  1679                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1680   002FEC  ECD6  F01F         	call	_color_read_Green	;wreg free
  1681   002FF0  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1682   002FF4  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1683   002FF8  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1684   002FFA  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1685   002FFC  0E00               	movlw	0
  1686   002FFE  EC45  F014         	call	___xxtofl
  1687   003002  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1688   003006  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1689   00300A  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1690   00300E  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1691                           
  1692                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1693   003012  EC26  F020         	call	_color_read_Blue	;wreg free
  1694   003016  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1695   00301A  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1696   00301E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1697   003020  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1698   003022  0E00               	movlw	0
  1699   003024  EC45  F014         	call	___xxtofl
  1700   003028  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1701   00302C  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1702   003030  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1703   003034  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1704                           
  1705                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1706   003038  ECFE  F01F         	call	_color_read_Clear	;wreg free
  1707   00303C  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1708   003040  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1709   003044  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1710   003046  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1711   003048  0E00               	movlw	0
  1712   00304A  EC45  F014         	call	___xxtofl
  1713   00304E  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1714   003052  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1715   003056  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1716   00305A  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1717   00305E                     
  1718                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1719   00305E  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1720   003062  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1721   003066  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1722   00306A  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1723   00306E  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1724   003072  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1725   003076                     
  1726                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1727   003076  EE20 F008          	lfsr	2,8
  1728   00307A  501A               	movf	colour_read_all@cf^0,w,c
  1729   00307C  26D9               	addwf	fsr2l,f,c
  1730   00307E  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1731   003080  22DA               	addwfc	fsr2h,f,c
  1732   003082  C024  FFDE         	movff	colour_read_all@B,postinc2
  1733   003086  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1734   00308A  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1735   00308E  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1736   003092                     
  1737                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1738   003092  EE20 F004          	lfsr	2,4
  1739   003096  501A               	movf	colour_read_all@cf^0,w,c
  1740   003098  26D9               	addwf	fsr2l,f,c
  1741   00309A  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1742   00309C  22DA               	addwfc	fsr2h,f,c
  1743   00309E  C020  FFDE         	movff	colour_read_all@G,postinc2
  1744   0030A2  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1745   0030A6  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1746   0030AA  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1747   0030AE                     
  1748                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1749   0030AE  EE20 F00C          	lfsr	2,12
  1750   0030B2  501A               	movf	colour_read_all@cf^0,w,c
  1751   0030B4  26D9               	addwf	fsr2l,f,c
  1752   0030B6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1753   0030B8  22DA               	addwfc	fsr2h,f,c
  1754   0030BA  C028  FFDE         	movff	colour_read_all@C,postinc2
  1755   0030BE  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  1756   0030C2  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  1757   0030C6  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  1758   0030CA  0012               	return		;funcret
  1759   0030CC                     __end_of_colour_read_all:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _color_read_Red *****************
  1763 ;; Defined at:
  1764 ;;		line 38 in file "colorclick.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  tmp             2    9[COMRAM] unsigned int 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2    4[COMRAM] unsigned int 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:        7 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 2
  1785 ;; This function calls:
  1786 ;;		_I2C_2_Master_Read
  1787 ;;		_I2C_2_Master_RepStart
  1788 ;;		_I2C_2_Master_Start
  1789 ;;		_I2C_2_Master_Stop
  1790 ;;		_I2C_2_Master_Write
  1791 ;; This function is called by:
  1792 ;;		_colour_read_all
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text4
  1797   003F5C                     __ptext4:
  1798                           	callstack 0
  1799   003F5C                     _color_read_Red:
  1800                           	callstack 27
  1801   003F5C                     
  1802                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  1803   003F5C  EC05  F022         	call	_I2C_2_Master_Start	;wreg free
  1804                           
  1805                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  1806   003F60  0E52               	movlw	82
  1807   003F62  ECF5  F021         	call	_I2C_2_Master_Write
  1808                           
  1809                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  1810   003F66  0EB6               	movlw	182
  1811   003F68  ECF5  F021         	call	_I2C_2_Master_Write
  1812                           
  1813                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  1814   003F6C  ECFB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  1815                           
  1816                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  1817   003F70  0E53               	movlw	83
  1818   003F72  ECF5  F021         	call	_I2C_2_Master_Write
  1819                           
  1820                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  1821   003F76  0E01               	movlw	1
  1822   003F78  ECE7  F020         	call	_I2C_2_Master_Read
  1823   003F7C  6E07               	movwf	??_color_read_Red^0,c
  1824   003F7E  5007               	movf	??_color_read_Red^0,w,c
  1825   003F80  6E0A               	movwf	color_read_Red@tmp^0,c
  1826   003F82  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1827                           
  1828                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1829   003F84  0E00               	movlw	0
  1830   003F86  ECE7  F020         	call	_I2C_2_Master_Read
  1831   003F8A  6E07               	movwf	??_color_read_Red^0,c
  1832   003F8C  5007               	movf	??_color_read_Red^0,w,c
  1833   003F8E  6E09               	movwf	(??_color_read_Red+2)^0,c
  1834   003F90  6A08               	clrf	(??_color_read_Red+1)^0,c
  1835   003F92  500A               	movf	color_read_Red@tmp^0,w,c
  1836   003F94  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1837   003F96  6E0A               	movwf	color_read_Red@tmp^0,c
  1838   003F98  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1839   003F9A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1840   003F9C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1841                           
  1842                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  1843   003F9E  EC00  F022         	call	_I2C_2_Master_Stop	;wreg free
  1844   003FA2                     
  1845                           ;colorclick.c: 49:  return tmp;
  1846   003FA2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1847   003FA6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1848   003FAA  0012               	return		;funcret
  1849   003FAC                     __end_of_color_read_Red:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _color_read_Green *****************
  1853 ;; Defined at:
  1854 ;;		line 51 in file "colorclick.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  tmp             2    9[COMRAM] unsigned int 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    4[COMRAM] unsigned int 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;Total ram usage:        7 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		_I2C_2_Master_Read
  1877 ;;		_I2C_2_Master_RepStart
  1878 ;;		_I2C_2_Master_Start
  1879 ;;		_I2C_2_Master_Stop
  1880 ;;		_I2C_2_Master_Write
  1881 ;; This function is called by:
  1882 ;;		_colour_read_all
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text5
  1887   003FAC                     __ptext5:
  1888                           	callstack 0
  1889   003FAC                     _color_read_Green:
  1890                           	callstack 27
  1891   003FAC                     
  1892                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  1893   003FAC  EC05  F022         	call	_I2C_2_Master_Start	;wreg free
  1894                           
  1895                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  1896   003FB0  0E52               	movlw	82
  1897   003FB2  ECF5  F021         	call	_I2C_2_Master_Write
  1898                           
  1899                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  1900   003FB6  0EB8               	movlw	184
  1901   003FB8  ECF5  F021         	call	_I2C_2_Master_Write
  1902                           
  1903                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  1904   003FBC  ECFB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  1905                           
  1906                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  1907   003FC0  0E53               	movlw	83
  1908   003FC2  ECF5  F021         	call	_I2C_2_Master_Write
  1909                           
  1910                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  1911   003FC6  0E01               	movlw	1
  1912   003FC8  ECE7  F020         	call	_I2C_2_Master_Read
  1913   003FCC  6E07               	movwf	??_color_read_Green^0,c
  1914   003FCE  5007               	movf	??_color_read_Green^0,w,c
  1915   003FD0  6E0A               	movwf	color_read_Green@tmp^0,c
  1916   003FD2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1917                           
  1918                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1919   003FD4  0E00               	movlw	0
  1920   003FD6  ECE7  F020         	call	_I2C_2_Master_Read
  1921   003FDA  6E07               	movwf	??_color_read_Green^0,c
  1922   003FDC  5007               	movf	??_color_read_Green^0,w,c
  1923   003FDE  6E09               	movwf	(??_color_read_Green+2)^0,c
  1924   003FE0  6A08               	clrf	(??_color_read_Green+1)^0,c
  1925   003FE2  500A               	movf	color_read_Green@tmp^0,w,c
  1926   003FE4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1927   003FE6  6E0A               	movwf	color_read_Green@tmp^0,c
  1928   003FE8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1929   003FEA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1930   003FEC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1931                           
  1932                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  1933   003FEE  EC00  F022         	call	_I2C_2_Master_Stop	;wreg free
  1934   003FF2                     
  1935                           ;colorclick.c: 62:     return tmp;
  1936   003FF2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1937   003FF6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1938   003FFA  0012               	return		;funcret
  1939   003FFC                     __end_of_color_read_Green:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _color_read_Clear *****************
  1943 ;; Defined at:
  1944 ;;		line 80 in file "colorclick.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  tmp             2    9[COMRAM] unsigned int 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2    4[COMRAM] unsigned int 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;Total ram usage:        7 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 2
  1965 ;; This function calls:
  1966 ;;		_I2C_2_Master_Read
  1967 ;;		_I2C_2_Master_RepStart
  1968 ;;		_I2C_2_Master_Start
  1969 ;;		_I2C_2_Master_Stop
  1970 ;;		_I2C_2_Master_Write
  1971 ;; This function is called by:
  1972 ;;		_colour_read_all
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text6
  1977   003FFC                     __ptext6:
  1978                           	callstack 0
  1979   003FFC                     _color_read_Clear:
  1980                           	callstack 27
  1981   003FFC                     
  1982                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  1983   003FFC  EC05  F022         	call	_I2C_2_Master_Start	;wreg free
  1984                           
  1985                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  1986   004000  0E52               	movlw	82
  1987   004002  ECF5  F021         	call	_I2C_2_Master_Write
  1988                           
  1989                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  1990   004006  0EB4               	movlw	180
  1991   004008  ECF5  F021         	call	_I2C_2_Master_Write
  1992                           
  1993                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  1994   00400C  ECFB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  1995                           
  1996                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  1997   004010  0E53               	movlw	83
  1998   004012  ECF5  F021         	call	_I2C_2_Master_Write
  1999                           
  2000                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2001   004016  0E01               	movlw	1
  2002   004018  ECE7  F020         	call	_I2C_2_Master_Read
  2003   00401C  6E07               	movwf	??_color_read_Clear^0,c
  2004   00401E  5007               	movf	??_color_read_Clear^0,w,c
  2005   004020  6E0A               	movwf	color_read_Clear@tmp^0,c
  2006   004022  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2007                           
  2008                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2009   004024  0E00               	movlw	0
  2010   004026  ECE7  F020         	call	_I2C_2_Master_Read
  2011   00402A  6E07               	movwf	??_color_read_Clear^0,c
  2012   00402C  5007               	movf	??_color_read_Clear^0,w,c
  2013   00402E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2014   004030  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2015   004032  500A               	movf	color_read_Clear@tmp^0,w,c
  2016   004034  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2017   004036  6E0A               	movwf	color_read_Clear@tmp^0,c
  2018   004038  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2019   00403A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2020   00403C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2021                           
  2022                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2023   00403E  EC00  F022         	call	_I2C_2_Master_Stop	;wreg free
  2024   004042                     
  2025                           ;colorclick.c: 91:     return tmp;
  2026   004042  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2027   004046  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2028   00404A  0012               	return		;funcret
  2029   00404C                     __end_of_color_read_Clear:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _color_read_Blue *****************
  2033 ;; Defined at:
  2034 ;;		line 65 in file "colorclick.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  tmp             2    9[COMRAM] unsigned int 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2    4[COMRAM] unsigned int 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2050 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;Total ram usage:        7 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 2
  2055 ;; This function calls:
  2056 ;;		_I2C_2_Master_Read
  2057 ;;		_I2C_2_Master_RepStart
  2058 ;;		_I2C_2_Master_Start
  2059 ;;		_I2C_2_Master_Stop
  2060 ;;		_I2C_2_Master_Write
  2061 ;; This function is called by:
  2062 ;;		_colour_read_all
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text7
  2067   00404C                     __ptext7:
  2068                           	callstack 0
  2069   00404C                     _color_read_Blue:
  2070                           	callstack 27
  2071   00404C                     
  2072                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2073   00404C  EC05  F022         	call	_I2C_2_Master_Start	;wreg free
  2074                           
  2075                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2076   004050  0E52               	movlw	82
  2077   004052  ECF5  F021         	call	_I2C_2_Master_Write
  2078                           
  2079                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2080   004056  0EBA               	movlw	186
  2081   004058  ECF5  F021         	call	_I2C_2_Master_Write
  2082                           
  2083                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2084   00405C  ECFB  F021         	call	_I2C_2_Master_RepStart	;wreg free
  2085                           
  2086                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2087   004060  0E53               	movlw	83
  2088   004062  ECF5  F021         	call	_I2C_2_Master_Write
  2089                           
  2090                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2091   004066  0E01               	movlw	1
  2092   004068  ECE7  F020         	call	_I2C_2_Master_Read
  2093   00406C  6E07               	movwf	??_color_read_Blue^0,c
  2094   00406E  5007               	movf	??_color_read_Blue^0,w,c
  2095   004070  6E0A               	movwf	color_read_Blue@tmp^0,c
  2096   004072  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2097                           
  2098                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2099   004074  0E00               	movlw	0
  2100   004076  ECE7  F020         	call	_I2C_2_Master_Read
  2101   00407A  6E07               	movwf	??_color_read_Blue^0,c
  2102   00407C  5007               	movf	??_color_read_Blue^0,w,c
  2103   00407E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2104   004080  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2105   004082  500A               	movf	color_read_Blue@tmp^0,w,c
  2106   004084  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2107   004086  6E0A               	movwf	color_read_Blue@tmp^0,c
  2108   004088  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2109   00408A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2110   00408C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2111                           
  2112                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2113   00408E  EC00  F022         	call	_I2C_2_Master_Stop	;wreg free
  2114   004092                     
  2115                           ;colorclick.c: 76:     return tmp;
  2116   004092  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2117   004096  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2118   00409A  0012               	return		;funcret
  2119   00409C                     __end_of_color_read_Blue:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _I2C_2_Master_RepStart *****************
  2123 ;; Defined at:
  2124 ;;		line 33 in file "i2c.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		_I2C_2_Master_Idle
  2147 ;; This function is called by:
  2148 ;;		_color_read_Red
  2149 ;;		_color_read_Green
  2150 ;;		_color_read_Blue
  2151 ;;		_color_read_Clear
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text8
  2156   0043F6                     __ptext8:
  2157                           	callstack 0
  2158   0043F6                     _I2C_2_Master_RepStart:
  2159                           	callstack 27
  2160   0043F6                     
  2161                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2162   0043F6  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2163   0043FA                     
  2164                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2165   0043FA  010E               	movlb	14	; () banked
  2166   0043FC  83DA               	bsf	218,1,b	;volatile
  2167   0043FE                     
  2168                           ; BSR set to: 14
  2169   0043FE  0012               	return		;funcret
  2170   004400                     __end_of_I2C_2_Master_RepStart:
  2171                           	callstack 0
  2172                           
  2173 ;; *************** function _I2C_2_Master_Read *****************
  2174 ;; Defined at:
  2175 ;;		line 51 in file "i2c.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  ack             1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  ack             1    2[COMRAM] unsigned char 
  2180 ;;  tmp             1    3[COMRAM] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;Total ram usage:        3 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 1
  2197 ;; This function calls:
  2198 ;;		_I2C_2_Master_Idle
  2199 ;; This function is called by:
  2200 ;;		_color_read_Red
  2201 ;;		_color_read_Green
  2202 ;;		_color_read_Blue
  2203 ;;		_color_read_Clear
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text9
  2208   0041CE                     __ptext9:
  2209                           	callstack 0
  2210   0041CE                     _I2C_2_Master_Read:
  2211                           	callstack 27
  2212                           
  2213                           ; BSR set to: 14
  2214                           ;incstack = 0
  2215                           ;I2C_2_Master_Read@ack stored from wreg
  2216   0041CE  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2217   0041D0                     
  2218                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2219   0041D0  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2220   0041D4                     
  2221                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2222   0041D4  010E               	movlb	14	; () banked
  2223   0041D6  87DA               	bsf	218,3,b	;volatile
  2224                           
  2225                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2226   0041D8  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2227   0041DC                     
  2228                           ;i2c.c: 57:   tmp = SSP2BUF;
  2229   0041DC  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2230                           
  2231                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2232   0041E0  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2233   0041E4                     
  2234                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2235   0041E4  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2236   0041E6  B4D8               	btfsc	status,2,c
  2237   0041E8  EFF8  F020         	goto	u2401
  2238   0041EC  EFFC  F020         	goto	u2400
  2239   0041F0                     u2401:
  2240   0041F0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2241   0041F2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2242   0041F4  EFFD  F020         	goto	u2418
  2243   0041F8                     u2400:
  2244   0041F8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2245   0041FA                     u2418:
  2246   0041FA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2247   0041FC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2248   0041FE  010E               	movlb	14	; () banked
  2249   004200  51DA               	movf	218,w,b	;volatile
  2250   004202  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2251   004204  0BDF               	andlw	-33
  2252   004206  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2253   004208  6FDA               	movwf	218,b	;volatile
  2254   00420A                     
  2255                           ; BSR set to: 14
  2256                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2257   00420A  89DA               	bsf	218,4,b	;volatile
  2258   00420C                     
  2259                           ; BSR set to: 14
  2260                           ;i2c.c: 61:   return tmp;
  2261   00420C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2262   00420E                     
  2263                           ; BSR set to: 14
  2264   00420E  0012               	return		;funcret
  2265   004210                     __end_of_I2C_2_Master_Read:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _color_click_init *****************
  2269 ;; Defined at:
  2270 ;;		line 6 in file "colorclick.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 3
  2291 ;; This function calls:
  2292 ;;		_I2C_2_Master_Init
  2293 ;;		_color_writetoaddr
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text10
  2300   004210                     __ptext10:
  2301                           	callstack 0
  2302   004210                     _color_click_init:
  2303                           	callstack 27
  2304   004210                     
  2305                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2306   004210  EC7D  F021         	call	_I2C_2_Master_Init	;wreg free
  2307   004214                     
  2308                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2309   004214  0E01               	movlw	1
  2310   004216  6E03               	movwf	color_writetoaddr@value^0,c
  2311   004218  0E00               	movlw	0
  2312   00421A  ECCA  F021         	call	_color_writetoaddr
  2313   00421E                     
  2314                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2315   00421E  0E3F               	movlw	63
  2316   004220  6E05               	movwf	??_color_click_init^0,c
  2317   004222  0E55               	movlw	85
  2318   004224                     u4097:
  2319   004224  2EE8               	decfsz	wreg,f,c
  2320   004226  D7FE               	bra	u4097
  2321   004228  2E05               	decfsz	??_color_click_init^0,f,c
  2322   00422A  D7FC               	bra	u4097
  2323   00422C  F000               	nop	
  2324   00422E                     
  2325                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2326   00422E  0E03               	movlw	3
  2327   004230  6E03               	movwf	color_writetoaddr@value^0,c
  2328   004232  0E00               	movlw	0
  2329   004234  ECCA  F021         	call	_color_writetoaddr
  2330   004238                     
  2331                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2332   004238  0ED6               	movlw	214
  2333   00423A  6E03               	movwf	color_writetoaddr@value^0,c
  2334   00423C  0E01               	movlw	1
  2335   00423E  ECCA  F021         	call	_color_writetoaddr
  2336   004242                     
  2337                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2338   004242  927F               	bcf	127,1,c	;volatile
  2339   004244                     
  2340                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2341   004244  9287               	bcf	135,1,c	;volatile
  2342   004246                     
  2343                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2344   004246  9879               	bcf	121,4,c	;volatile
  2345   004248                     
  2346                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2347   004248  9881               	bcf	129,4,c	;volatile
  2348   00424A                     
  2349                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2350   00424A  9E7E               	bcf	126,7,c	;volatile
  2351   00424C                     
  2352                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2353   00424C  9E86               	bcf	134,7,c	;volatile
  2354   00424E  0012               	return		;funcret
  2355   004250                     __end_of_color_click_init:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _color_writetoaddr *****************
  2359 ;; Defined at:
  2360 ;;		line 30 in file "colorclick.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  address         1    wreg     unsigned char 
  2363 ;;  value           1    2[COMRAM] unsigned char 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  address         1    3[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 2
  2382 ;; This function calls:
  2383 ;;		_I2C_2_Master_Start
  2384 ;;		_I2C_2_Master_Stop
  2385 ;;		_I2C_2_Master_Write
  2386 ;; This function is called by:
  2387 ;;		_color_click_init
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text11
  2392   004394                     __ptext11:
  2393                           	callstack 0
  2394   004394                     _color_writetoaddr:
  2395                           	callstack 27
  2396                           
  2397                           ;incstack = 0
  2398                           ;color_writetoaddr@address stored from wreg
  2399   004394  6E04               	movwf	color_writetoaddr@address^0,c
  2400   004396                     
  2401                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2402   004396  EC05  F022         	call	_I2C_2_Master_Start	;wreg free
  2403                           
  2404                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2405   00439A  0E52               	movlw	82
  2406   00439C  ECF5  F021         	call	_I2C_2_Master_Write
  2407                           
  2408                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2409   0043A0  5004               	movf	color_writetoaddr@address^0,w,c
  2410   0043A2  0980               	iorlw	128
  2411   0043A4  ECF5  F021         	call	_I2C_2_Master_Write
  2412                           
  2413                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2414   0043A8  5003               	movf	color_writetoaddr@value^0,w,c
  2415   0043AA  ECF5  F021         	call	_I2C_2_Master_Write
  2416                           
  2417                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2418   0043AE  EC00  F022         	call	_I2C_2_Master_Stop	;wreg free
  2419   0043B2  0012               	return		;funcret
  2420   0043B4                     __end_of_color_writetoaddr:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _I2C_2_Master_Write *****************
  2424 ;; Defined at:
  2425 ;;		line 45 in file "i2c.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  data_byte       1    wreg     unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  data_byte       1    1[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;Total ram usage:        1 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 1
  2446 ;; This function calls:
  2447 ;;		_I2C_2_Master_Idle
  2448 ;; This function is called by:
  2449 ;;		_color_writetoaddr
  2450 ;;		_color_read_Red
  2451 ;;		_color_read_Green
  2452 ;;		_color_read_Blue
  2453 ;;		_color_read_Clear
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text12
  2458   0043EA                     __ptext12:
  2459                           	callstack 0
  2460   0043EA                     _I2C_2_Master_Write:
  2461                           	callstack 27
  2462                           
  2463                           ;incstack = 0
  2464                           ;I2C_2_Master_Write@data_byte stored from wreg
  2465   0043EA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2466   0043EC                     
  2467                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2468   0043EC  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2469   0043F0                     
  2470                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2471   0043F0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2472   0043F4  0012               	return		;funcret
  2473   0043F6                     __end_of_I2C_2_Master_Write:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _I2C_2_Master_Stop *****************
  2477 ;; Defined at:
  2478 ;;		line 39 in file "i2c.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 1
  2499 ;; This function calls:
  2500 ;;		_I2C_2_Master_Idle
  2501 ;; This function is called by:
  2502 ;;		_color_writetoaddr
  2503 ;;		_color_read_Red
  2504 ;;		_color_read_Green
  2505 ;;		_color_read_Blue
  2506 ;;		_color_read_Clear
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text13
  2511   004400                     __ptext13:
  2512                           	callstack 0
  2513   004400                     _I2C_2_Master_Stop:
  2514                           	callstack 27
  2515   004400                     
  2516                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2517   004400  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2518   004404                     
  2519                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2520   004404  010E               	movlb	14	; () banked
  2521   004406  85DA               	bsf	218,2,b	;volatile
  2522   004408                     
  2523                           ; BSR set to: 14
  2524   004408  0012               	return		;funcret
  2525   00440A                     __end_of_I2C_2_Master_Stop:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _I2C_2_Master_Start *****************
  2529 ;; Defined at:
  2530 ;;		line 27 in file "i2c.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 1
  2551 ;; This function calls:
  2552 ;;		_I2C_2_Master_Idle
  2553 ;; This function is called by:
  2554 ;;		_color_writetoaddr
  2555 ;;		_color_read_Red
  2556 ;;		_color_read_Green
  2557 ;;		_color_read_Blue
  2558 ;;		_color_read_Clear
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text14
  2563   00440A                     __ptext14:
  2564                           	callstack 0
  2565   00440A                     _I2C_2_Master_Start:
  2566                           	callstack 27
  2567   00440A                     
  2568                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2569   00440A  EC92  F021         	call	_I2C_2_Master_Idle	;wreg free
  2570   00440E                     
  2571                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2572   00440E  010E               	movlb	14	; () banked
  2573   004410  81DA               	bsf	218,0,b	;volatile
  2574   004412                     
  2575                           ; BSR set to: 14
  2576   004412  0012               	return		;funcret
  2577   004414                     __end_of_I2C_2_Master_Start:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _I2C_2_Master_Idle *****************
  2581 ;; Defined at:
  2582 ;;		line 22 in file "i2c.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;Total ram usage:        1 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_I2C_2_Master_Start
  2606 ;;		_I2C_2_Master_RepStart
  2607 ;;		_I2C_2_Master_Stop
  2608 ;;		_I2C_2_Master_Write
  2609 ;;		_I2C_2_Master_Read
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text15
  2614   004324                     __ptext15:
  2615                           	callstack 0
  2616   004324                     _I2C_2_Master_Idle:
  2617                           	callstack 27
  2618   004324                     l174:
  2619   004324  010E               	movlb	14	; () banked
  2620   004326  B5D8               	btfsc	216,2,b	;volatile
  2621   004328  EF98  F021         	goto	u2321
  2622   00432C  EF9A  F021         	goto	u2320
  2623   004330                     u2321:
  2624   004330  EF92  F021         	goto	l174
  2625   004334                     u2320:
  2626   004334                     
  2627                           ; BSR set to: 14
  2628   004334  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2629   004338  0E1F               	movlw	31
  2630   00433A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2631   00433C  A4D8               	btfss	status,2,c
  2632   00433E  EFA3  F021         	goto	u2331
  2633   004342  EFA5  F021         	goto	u2330
  2634   004346                     u2331:
  2635   004346  EF92  F021         	goto	l174
  2636   00434A                     u2330:
  2637   00434A                     
  2638                           ; BSR set to: 14
  2639   00434A  0012               	return		;funcret
  2640   00434C                     __end_of_I2C_2_Master_Idle:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _I2C_2_Master_Init *****************
  2644 ;; Defined at:
  2645 ;;		line 4 in file "i2c.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_color_click_init
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text16
  2674   0042FA                     __ptext16:
  2675                           	callstack 0
  2676   0042FA                     _I2C_2_Master_Init:
  2677                           	callstack 29
  2678   0042FA                     
  2679                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2680   0042FA  010E               	movlb	14	; () banked
  2681   0042FC  51D9               	movf	217,w,b	;volatile
  2682   0042FE  0BF0               	andlw	-16
  2683   004300  0908               	iorlw	8
  2684   004302  6FD9               	movwf	217,b	;volatile
  2685   004304                     
  2686                           ; BSR set to: 14
  2687                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2688   004304  8BD9               	bsf	217,5,b	;volatile
  2689                           
  2690                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2691   004306  0E9F               	movlw	159
  2692   004308  6FD6               	movwf	214,b	;volatile
  2693   00430A                     
  2694                           ; BSR set to: 14
  2695                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2696   00430A  8A84               	bsf	132,5,c	;volatile
  2697   00430C                     
  2698                           ; BSR set to: 14
  2699                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2700   00430C  8C84               	bsf	132,6,c	;volatile
  2701   00430E                     
  2702                           ; BSR set to: 14
  2703                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2704   00430E  9BA7               	bcf	167,5,b	;volatile
  2705   004310                     
  2706                           ; BSR set to: 14
  2707                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2708   004310  9DA7               	bcf	167,6,b	;volatile
  2709                           
  2710                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2711   004312  0E1D               	movlw	29
  2712   004314  6F1D               	movwf	29,b	;volatile
  2713                           
  2714                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2715   004316  0E1E               	movlw	30
  2716   004318  6F1C               	movwf	28,b	;volatile
  2717                           
  2718                           ;i2c.c: 18:   RD5PPS=0x1C;
  2719   00431A  0E1C               	movlw	28
  2720   00431C  6F6F               	movwf	111,b	;volatile
  2721                           
  2722                           ;i2c.c: 19:   RD6PPS=0x1B;
  2723   00431E  0E1B               	movlw	27
  2724   004320  6F70               	movwf	112,b	;volatile
  2725   004322                     
  2726                           ; BSR set to: 14
  2727   004322  0012               	return		;funcret
  2728   004324                     __end_of_I2C_2_Master_Init:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _RGB2Hue *****************
  2732 ;; Defined at:
  2733 ;;		line 23 in file "colorfunctions.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
  2736 ;;		 -> colorf(22), 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  min             2   19[BANK0 ] int 
  2739 ;;  max             2   17[BANK0 ] int 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;Total ram usage:       14 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		___fladd
  2758 ;;		___fldiv
  2759 ;;		___fleq
  2760 ;;		___flge
  2761 ;;		___flmul
  2762 ;;		___flsub
  2763 ;;		___fltol
  2764 ;;		___xxtofl
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text17
  2771   000E52                     __ptext17:
  2772                           	callstack 0
  2773   000E52                     _RGB2Hue:
  2774                           	callstack 28
  2775   000E52                     
  2776                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2777   000E52  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2778   000E56  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2779   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  2780   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2781   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2782   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2783   000E6A  EE20 F004          	lfsr	2,4
  2784   000E6E  5057               	movf	RGB2Hue@cf^0,w,c
  2785   000E70  26D9               	addwf	fsr2l,f,c
  2786   000E72  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2787   000E74  22DA               	addwfc	fsr2h,f,c
  2788   000E76  CFDE F005          	movff	postinc2,___fleq@ff2
  2789   000E7A  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2790   000E7E  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2791   000E82  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2792   000E86  EC13  F01B         	call	___fleq	;wreg free
  2793   000E8A  A0D8               	btfss	status,0,c
  2794   000E8C  EF4A  F007         	goto	u3771
  2795   000E90  EF4C  F007         	goto	u3770
  2796   000E94                     u3771:
  2797   000E94  EF7F  F007         	goto	l4029
  2798   000E98                     u3770:
  2799   000E98  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2800   000E9C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2801   000EA0  CFDE F001          	movff	postinc2,___fleq@ff1
  2802   000EA4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2803   000EA8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2804   000EAC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2805   000EB0  EE20 F008          	lfsr	2,8
  2806   000EB4  5057               	movf	RGB2Hue@cf^0,w,c
  2807   000EB6  26D9               	addwf	fsr2l,f,c
  2808   000EB8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2809   000EBA  22DA               	addwfc	fsr2h,f,c
  2810   000EBC  CFDE F005          	movff	postinc2,___fleq@ff2
  2811   000EC0  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2812   000EC4  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2813   000EC8  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2814   000ECC  EC13  F01B         	call	___fleq	;wreg free
  2815   000ED0  A0D8               	btfss	status,0,c
  2816   000ED2  EF6D  F007         	goto	u3781
  2817   000ED6  EF6F  F007         	goto	u3780
  2818   000EDA                     u3781:
  2819   000EDA  EF7F  F007         	goto	l4029
  2820   000EDE                     u3780:
  2821   000EDE                     
  2822                           ;colorfunctions.c: 25:         cf->h=0;
  2823   000EDE  EE20 F010          	lfsr	2,16
  2824   000EE2  5057               	movf	RGB2Hue@cf^0,w,c
  2825   000EE4  26D9               	addwf	fsr2l,f,c
  2826   000EE6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2827   000EE8  22DA               	addwfc	fsr2h,f,c
  2828   000EEA  0E00               	movlw	0
  2829   000EEC  6EDE               	movwf	postinc2,c
  2830   000EEE  0E00               	movlw	0
  2831   000EF0  6EDE               	movwf	postinc2,c
  2832   000EF2  0E00               	movlw	0
  2833   000EF4  6EDE               	movwf	postinc2,c
  2834   000EF6  0E00               	movlw	0
  2835   000EF8  6EDD               	movwf	postdec2,c
  2836                           
  2837                           ;colorfunctions.c: 26:     } else{
  2838   000EFA  EFA9  F00A         	goto	l111
  2839   000EFE                     l4029:
  2840                           
  2841                           ;colorfunctions.c: 28:         signed int min=0;
  2842   000EFE  0E00               	movlw	0
  2843   000F00  0100               	movlb	0	; () banked
  2844   000F02  6F74               	movwf	(RGB2Hue@min+1)& (0+255),b
  2845   000F04  0E00               	movlw	0
  2846   000F06  6F73               	movwf	RGB2Hue@min& (0+255),b
  2847   000F08                     
  2848                           ; BSR set to: 0
  2849                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2850   000F08  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2851   000F0C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2852   000F10  CFDE F001          	movff	postinc2,___flge@ff1
  2853   000F14  CFDE F002          	movff	postinc2,___flge@ff1+1
  2854   000F18  CFDE F003          	movff	postinc2,___flge@ff1+2
  2855   000F1C  CFDE F004          	movff	postinc2,___flge@ff1+3
  2856   000F20  EE20 F004          	lfsr	2,4
  2857   000F24  5057               	movf	RGB2Hue@cf^0,w,c
  2858   000F26  26D9               	addwf	fsr2l,f,c
  2859   000F28  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2860   000F2A  22DA               	addwfc	fsr2h,f,c
  2861   000F2C  CFDE F005          	movff	postinc2,___flge@ff2
  2862   000F30  CFDE F006          	movff	postinc2,___flge@ff2+1
  2863   000F34  CFDE F007          	movff	postinc2,___flge@ff2+2
  2864   000F38  CFDE F008          	movff	postinc2,___flge@ff2+3
  2865   000F3C  ECE9  F018         	call	___flge	;wreg free
  2866   000F40  B0D8               	btfsc	status,0,c
  2867   000F42  EFA5  F007         	goto	u3791
  2868   000F46  EFA7  F007         	goto	u3790
  2869   000F4A                     u3791:
  2870   000F4A  EFDE  F007         	goto	l4037
  2871   000F4E                     u3790:
  2872   000F4E  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2873   000F52  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2874   000F56  CFDE F001          	movff	postinc2,___flge@ff1
  2875   000F5A  CFDE F002          	movff	postinc2,___flge@ff1+1
  2876   000F5E  CFDE F003          	movff	postinc2,___flge@ff1+2
  2877   000F62  CFDE F004          	movff	postinc2,___flge@ff1+3
  2878   000F66  EE20 F008          	lfsr	2,8
  2879   000F6A  5057               	movf	RGB2Hue@cf^0,w,c
  2880   000F6C  26D9               	addwf	fsr2l,f,c
  2881   000F6E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2882   000F70  22DA               	addwfc	fsr2h,f,c
  2883   000F72  CFDE F005          	movff	postinc2,___flge@ff2
  2884   000F76  CFDE F006          	movff	postinc2,___flge@ff2+1
  2885   000F7A  CFDE F007          	movff	postinc2,___flge@ff2+2
  2886   000F7E  CFDE F008          	movff	postinc2,___flge@ff2+3
  2887   000F82  ECE9  F018         	call	___flge	;wreg free
  2888   000F86  B0D8               	btfsc	status,0,c
  2889   000F88  EFC8  F007         	goto	u3801
  2890   000F8C  EFCA  F007         	goto	u3800
  2891   000F90                     u3801:
  2892   000F90  EFDE  F007         	goto	l4037
  2893   000F94                     u3800:
  2894   000F94                     
  2895                           ;colorfunctions.c: 31:             min=cf->Rf;
  2896   000F94  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2897   000F98  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2898   000F9C  CFDE F001          	movff	postinc2,___fltol@f1
  2899   000FA0  CFDE F002          	movff	postinc2,___fltol@f1+1
  2900   000FA4  CFDE F003          	movff	postinc2,___fltol@f1+2
  2901   000FA8  CFDE F004          	movff	postinc2,___fltol@f1+3
  2902   000FAC  EC66  F018         	call	___fltol	;wreg free
  2903   000FB0  C001  F073         	movff	?___fltol,RGB2Hue@min
  2904   000FB4  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  2905                           
  2906                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  2907   000FB8  EF50  F008         	goto	l103
  2908   000FBC                     l4037:
  2909   000FBC  EE20 F004          	lfsr	2,4
  2910   000FC0  5057               	movf	RGB2Hue@cf^0,w,c
  2911   000FC2  26D9               	addwf	fsr2l,f,c
  2912   000FC4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2913   000FC6  22DA               	addwfc	fsr2h,f,c
  2914   000FC8  CFDE F001          	movff	postinc2,___flge@ff1
  2915   000FCC  CFDE F002          	movff	postinc2,___flge@ff1+1
  2916   000FD0  CFDE F003          	movff	postinc2,___flge@ff1+2
  2917   000FD4  CFDE F004          	movff	postinc2,___flge@ff1+3
  2918   000FD8  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2919   000FDC  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2920   000FE0  CFDE F005          	movff	postinc2,___flge@ff2
  2921   000FE4  CFDE F006          	movff	postinc2,___flge@ff2+1
  2922   000FE8  CFDE F007          	movff	postinc2,___flge@ff2+2
  2923   000FEC  CFDE F008          	movff	postinc2,___flge@ff2+3
  2924   000FF0  ECE9  F018         	call	___flge	;wreg free
  2925   000FF4  B0D8               	btfsc	status,0,c
  2926   000FF6  EFFF  F007         	goto	u3811
  2927   000FFA  EF01  F008         	goto	u3810
  2928   000FFE                     u3811:
  2929   000FFE  EF3C  F008         	goto	l4043
  2930   001002                     u3810:
  2931   001002  EE20 F004          	lfsr	2,4
  2932   001006  5057               	movf	RGB2Hue@cf^0,w,c
  2933   001008  26D9               	addwf	fsr2l,f,c
  2934   00100A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2935   00100C  22DA               	addwfc	fsr2h,f,c
  2936   00100E  CFDE F001          	movff	postinc2,___flge@ff1
  2937   001012  CFDE F002          	movff	postinc2,___flge@ff1+1
  2938   001016  CFDE F003          	movff	postinc2,___flge@ff1+2
  2939   00101A  CFDE F004          	movff	postinc2,___flge@ff1+3
  2940   00101E  EE20 F008          	lfsr	2,8
  2941   001022  5057               	movf	RGB2Hue@cf^0,w,c
  2942   001024  26D9               	addwf	fsr2l,f,c
  2943   001026  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2944   001028  22DA               	addwfc	fsr2h,f,c
  2945   00102A  CFDE F005          	movff	postinc2,___flge@ff2
  2946   00102E  CFDE F006          	movff	postinc2,___flge@ff2+1
  2947   001032  CFDE F007          	movff	postinc2,___flge@ff2+2
  2948   001036  CFDE F008          	movff	postinc2,___flge@ff2+3
  2949   00103A  ECE9  F018         	call	___flge	;wreg free
  2950   00103E  B0D8               	btfsc	status,0,c
  2951   001040  EF24  F008         	goto	u3821
  2952   001044  EF26  F008         	goto	u3820
  2953   001048                     u3821:
  2954   001048  EF3C  F008         	goto	l4043
  2955   00104C                     u3820:
  2956   00104C                     
  2957                           ;colorfunctions.c: 33:             min=cf->Gf;
  2958   00104C  EE20 F004          	lfsr	2,4
  2959   001050  5057               	movf	RGB2Hue@cf^0,w,c
  2960   001052  26D9               	addwf	fsr2l,f,c
  2961   001054  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2962   001056  22DA               	addwfc	fsr2h,f,c
  2963   001058  CFDE F001          	movff	postinc2,___fltol@f1
  2964   00105C  CFDE F002          	movff	postinc2,___fltol@f1+1
  2965   001060  CFDE F003          	movff	postinc2,___fltol@f1+2
  2966   001064  CFDE F004          	movff	postinc2,___fltol@f1+3
  2967   001068  EC66  F018         	call	___fltol	;wreg free
  2968   00106C  C001  F073         	movff	?___fltol,RGB2Hue@min
  2969   001070  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  2970                           
  2971                           ;colorfunctions.c: 34:         } else{
  2972   001074  EF50  F008         	goto	l103
  2973   001078                     l4043:
  2974                           
  2975                           ;colorfunctions.c: 35:             min=cf->Bf;
  2976   001078  EE20 F008          	lfsr	2,8
  2977   00107C  5057               	movf	RGB2Hue@cf^0,w,c
  2978   00107E  26D9               	addwf	fsr2l,f,c
  2979   001080  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2980   001082  22DA               	addwfc	fsr2h,f,c
  2981   001084  CFDE F001          	movff	postinc2,___fltol@f1
  2982   001088  CFDE F002          	movff	postinc2,___fltol@f1+1
  2983   00108C  CFDE F003          	movff	postinc2,___fltol@f1+2
  2984   001090  CFDE F004          	movff	postinc2,___fltol@f1+3
  2985   001094  EC66  F018         	call	___fltol	;wreg free
  2986   001098  C001  F073         	movff	?___fltol,RGB2Hue@min
  2987   00109C  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  2988   0010A0                     l103:
  2989                           
  2990                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  2991   0010A0  EE20 F004          	lfsr	2,4
  2992   0010A4  5057               	movf	RGB2Hue@cf^0,w,c
  2993   0010A6  26D9               	addwf	fsr2l,f,c
  2994   0010A8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2995   0010AA  22DA               	addwfc	fsr2h,f,c
  2996   0010AC  CFDE F001          	movff	postinc2,___flge@ff1
  2997   0010B0  CFDE F002          	movff	postinc2,___flge@ff1+1
  2998   0010B4  CFDE F003          	movff	postinc2,___flge@ff1+2
  2999   0010B8  CFDE F004          	movff	postinc2,___flge@ff1+3
  3000   0010BC  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3001   0010C0  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3002   0010C4  CFDE F005          	movff	postinc2,___flge@ff2
  3003   0010C8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3004   0010CC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3005   0010D0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3006   0010D4  ECE9  F018         	call	___flge	;wreg free
  3007   0010D8  B0D8               	btfsc	status,0,c
  3008   0010DA  EF71  F008         	goto	u3831
  3009   0010DE  EF73  F008         	goto	u3830
  3010   0010E2                     u3831:
  3011   0010E2  EF0D  F009         	goto	l4051
  3012   0010E6                     u3830:
  3013   0010E6  EE20 F008          	lfsr	2,8
  3014   0010EA  5057               	movf	RGB2Hue@cf^0,w,c
  3015   0010EC  26D9               	addwf	fsr2l,f,c
  3016   0010EE  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3017   0010F0  22DA               	addwfc	fsr2h,f,c
  3018   0010F2  CFDE F001          	movff	postinc2,___flge@ff1
  3019   0010F6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3020   0010FA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3021   0010FE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3022   001102  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3023   001106  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3024   00110A  CFDE F005          	movff	postinc2,___flge@ff2
  3025   00110E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3026   001112  CFDE F007          	movff	postinc2,___flge@ff2+2
  3027   001116  CFDE F008          	movff	postinc2,___flge@ff2+3
  3028   00111A  ECE9  F018         	call	___flge	;wreg free
  3029   00111E  B0D8               	btfsc	status,0,c
  3030   001120  EF94  F008         	goto	u3841
  3031   001124  EF96  F008         	goto	u3840
  3032   001128                     u3841:
  3033   001128  EF0D  F009         	goto	l4051
  3034   00112C                     u3840:
  3035   00112C                     
  3036                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3037   00112C  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3038   001130  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3039   001134  CFDE F001          	movff	postinc2,___fltol@f1
  3040   001138  CFDE F002          	movff	postinc2,___fltol@f1+1
  3041   00113C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3042   001140  CFDE F004          	movff	postinc2,___fltol@f1+3
  3043   001144  EC66  F018         	call	___fltol	;wreg free
  3044   001148  C001  F071         	movff	?___fltol,RGB2Hue@max
  3045   00114C  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3046   001150                     
  3047                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3048   001150  0100               	movlb	0	; () banked
  3049   001152  5173               	movf	RGB2Hue@min& (0+255),w,b
  3050   001154  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3051   001156  6E59               	movwf	??_RGB2Hue^0,c
  3052   001158  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3053   00115A  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3054   00115C  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3055   00115E  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3056   001162  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3057   001166  0E00               	movlw	0
  3058   001168  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3059   00116A  0EFF               	movlw	-1
  3060   00116C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3061   00116E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3062   001170  0E01               	movlw	1
  3063   001172  EC45  F014         	call	___xxtofl
  3064   001176  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3065   00117A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3066   00117E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3067   001182  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3068   001186  EE20 F008          	lfsr	2,8
  3069   00118A  5057               	movf	RGB2Hue@cf^0,w,c
  3070   00118C  26D9               	addwf	fsr2l,f,c
  3071   00118E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3072   001190  22DA               	addwfc	fsr2h,f,c
  3073   001192  CFDE F02E          	movff	postinc2,___flsub@a
  3074   001196  CFDE F02F          	movff	postinc2,___flsub@a+1
  3075   00119A  CFDE F030          	movff	postinc2,___flsub@a+2
  3076   00119E  CFDE F031          	movff	postinc2,___flsub@a+3
  3077   0011A2  EE20 F004          	lfsr	2,4
  3078   0011A6  5057               	movf	RGB2Hue@cf^0,w,c
  3079   0011A8  26D9               	addwf	fsr2l,f,c
  3080   0011AA  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3081   0011AC  22DA               	addwfc	fsr2h,f,c
  3082   0011AE  CFDE F02A          	movff	postinc2,___flsub@b
  3083   0011B2  CFDE F02B          	movff	postinc2,___flsub@b+1
  3084   0011B6  CFDE F02C          	movff	postinc2,___flsub@b+2
  3085   0011BA  CFDE F02D          	movff	postinc2,___flsub@b+3
  3086   0011BE  ECC4  F020         	call	___flsub	;wreg free
  3087   0011C2  C02A  F032         	movff	?___flsub,___fldiv@b
  3088   0011C6  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3089   0011CA  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3090   0011CE  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3091   0011D2  EC97  F011         	call	___fldiv	;wreg free
  3092   0011D6  C032  F04B         	movff	?___fldiv,___flmul@b
  3093   0011DA  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3094   0011DE  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3095   0011E2  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3096   0011E6  0E00               	movlw	0
  3097   0011E8  6E4F               	movwf	___flmul@a^0,c
  3098   0011EA  0E00               	movlw	0
  3099   0011EC  6E50               	movwf	(___flmul@a+1)^0,c
  3100   0011EE  0E70               	movlw	112
  3101   0011F0  6E51               	movwf	(___flmul@a+2)^0,c
  3102   0011F2  0E42               	movlw	66
  3103   0011F4  6E52               	movwf	(___flmul@a+3)^0,c
  3104   0011F6  EC81  F00F         	call	___flmul	;wreg free
  3105   0011FA  EE20 F010          	lfsr	2,16
  3106   0011FE  5057               	movf	RGB2Hue@cf^0,w,c
  3107   001200  26D9               	addwf	fsr2l,f,c
  3108   001202  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3109   001204  22DA               	addwfc	fsr2h,f,c
  3110   001206  C04B  FFDE         	movff	?___flmul,postinc2
  3111   00120A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3112   00120E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3113   001212  C04E  FFDE         	movff	?___flmul+3,postinc2
  3114                           
  3115                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3116   001216  EF75  F00A         	goto	l4063
  3117   00121A                     l4051:
  3118   00121A  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3119   00121E  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3120   001222  CFDE F001          	movff	postinc2,___flge@ff1
  3121   001226  CFDE F002          	movff	postinc2,___flge@ff1+1
  3122   00122A  CFDE F003          	movff	postinc2,___flge@ff1+2
  3123   00122E  CFDE F004          	movff	postinc2,___flge@ff1+3
  3124   001232  EE20 F004          	lfsr	2,4
  3125   001236  5057               	movf	RGB2Hue@cf^0,w,c
  3126   001238  26D9               	addwf	fsr2l,f,c
  3127   00123A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3128   00123C  22DA               	addwfc	fsr2h,f,c
  3129   00123E  CFDE F005          	movff	postinc2,___flge@ff2
  3130   001242  CFDE F006          	movff	postinc2,___flge@ff2+1
  3131   001246  CFDE F007          	movff	postinc2,___flge@ff2+2
  3132   00124A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3133   00124E  ECE9  F018         	call	___flge	;wreg free
  3134   001252  B0D8               	btfsc	status,0,c
  3135   001254  EF2E  F009         	goto	u3851
  3136   001258  EF30  F009         	goto	u3850
  3137   00125C                     u3851:
  3138   00125C  EFE6  F009         	goto	l4059
  3139   001260                     u3850:
  3140   001260  EE20 F008          	lfsr	2,8
  3141   001264  5057               	movf	RGB2Hue@cf^0,w,c
  3142   001266  26D9               	addwf	fsr2l,f,c
  3143   001268  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3144   00126A  22DA               	addwfc	fsr2h,f,c
  3145   00126C  CFDE F001          	movff	postinc2,___flge@ff1
  3146   001270  CFDE F002          	movff	postinc2,___flge@ff1+1
  3147   001274  CFDE F003          	movff	postinc2,___flge@ff1+2
  3148   001278  CFDE F004          	movff	postinc2,___flge@ff1+3
  3149   00127C  EE20 F004          	lfsr	2,4
  3150   001280  5057               	movf	RGB2Hue@cf^0,w,c
  3151   001282  26D9               	addwf	fsr2l,f,c
  3152   001284  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3153   001286  22DA               	addwfc	fsr2h,f,c
  3154   001288  CFDE F005          	movff	postinc2,___flge@ff2
  3155   00128C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3156   001290  CFDE F007          	movff	postinc2,___flge@ff2+2
  3157   001294  CFDE F008          	movff	postinc2,___flge@ff2+3
  3158   001298  ECE9  F018         	call	___flge	;wreg free
  3159   00129C  B0D8               	btfsc	status,0,c
  3160   00129E  EF53  F009         	goto	u3861
  3161   0012A2  EF55  F009         	goto	u3860
  3162   0012A6                     u3861:
  3163   0012A6  EFE6  F009         	goto	l4059
  3164   0012AA                     u3860:
  3165   0012AA                     
  3166                           ;colorfunctions.c: 44:             max=cf->Gf;
  3167   0012AA  EE20 F004          	lfsr	2,4
  3168   0012AE  5057               	movf	RGB2Hue@cf^0,w,c
  3169   0012B0  26D9               	addwf	fsr2l,f,c
  3170   0012B2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3171   0012B4  22DA               	addwfc	fsr2h,f,c
  3172   0012B6  CFDE F001          	movff	postinc2,___fltol@f1
  3173   0012BA  CFDE F002          	movff	postinc2,___fltol@f1+1
  3174   0012BE  CFDE F003          	movff	postinc2,___fltol@f1+2
  3175   0012C2  CFDE F004          	movff	postinc2,___fltol@f1+3
  3176   0012C6  EC66  F018         	call	___fltol	;wreg free
  3177   0012CA  C001  F071         	movff	?___fltol,RGB2Hue@max
  3178   0012CE  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3179                           
  3180                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3181   0012D2  0100               	movlb	0	; () banked
  3182   0012D4  5173               	movf	RGB2Hue@min& (0+255),w,b
  3183   0012D6  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3184   0012D8  6E59               	movwf	??_RGB2Hue^0,c
  3185   0012DA  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3186   0012DC  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3187   0012DE  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3188   0012E0  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3189   0012E4  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3190   0012E8  0E00               	movlw	0
  3191   0012EA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3192   0012EC  0EFF               	movlw	-1
  3193   0012EE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3194   0012F0  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3195   0012F2  0E01               	movlw	1
  3196   0012F4  EC45  F014         	call	___xxtofl
  3197   0012F8  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3198   0012FC  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3199   001300  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3200   001304  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3201   001308  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3202   00130C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3203   001310  CFDE F02E          	movff	postinc2,___flsub@a
  3204   001314  CFDE F02F          	movff	postinc2,___flsub@a+1
  3205   001318  CFDE F030          	movff	postinc2,___flsub@a+2
  3206   00131C  CFDE F031          	movff	postinc2,___flsub@a+3
  3207   001320  EE20 F008          	lfsr	2,8
  3208   001324  5057               	movf	RGB2Hue@cf^0,w,c
  3209   001326  26D9               	addwf	fsr2l,f,c
  3210   001328  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3211   00132A  22DA               	addwfc	fsr2h,f,c
  3212   00132C  CFDE F02A          	movff	postinc2,___flsub@b
  3213   001330  CFDE F02B          	movff	postinc2,___flsub@b+1
  3214   001334  CFDE F02C          	movff	postinc2,___flsub@b+2
  3215   001338  CFDE F02D          	movff	postinc2,___flsub@b+3
  3216   00133C  ECC4  F020         	call	___flsub	;wreg free
  3217   001340  C02A  F032         	movff	?___flsub,___fldiv@b
  3218   001344  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3219   001348  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3220   00134C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3221   001350  EC97  F011         	call	___fldiv	;wreg free
  3222   001354  C032  F06D         	movff	?___fldiv,_RGB2Hue$2959
  3223   001358  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$2959+1
  3224   00135C  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$2959+2
  3225   001360  C035  F070         	movff	?___fldiv+3,_RGB2Hue$2959+3
  3226   001364                     
  3227                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3228   001364  0E00               	movlw	0
  3229   001366  6E1E               	movwf	___fladd@a^0,c
  3230   001368  0E00               	movlw	0
  3231   00136A  6E1F               	movwf	(___fladd@a+1)^0,c
  3232   00136C  0E00               	movlw	0
  3233   00136E  6E20               	movwf	(___fladd@a+2)^0,c
  3234   001370  0E40               	movlw	64
  3235   001372  6E21               	movwf	(___fladd@a+3)^0,c
  3236   001374  C06D  F01A         	movff	_RGB2Hue$2959,___fladd@b
  3237   001378  C06E  F01B         	movff	_RGB2Hue$2959+1,___fladd@b+1
  3238   00137C  C06F  F01C         	movff	_RGB2Hue$2959+2,___fladd@b+2
  3239   001380  C070  F01D         	movff	_RGB2Hue$2959+3,___fladd@b+3
  3240   001384  EC21  F00D         	call	___fladd	;wreg free
  3241   001388  C01A  F04B         	movff	?___fladd,___flmul@b
  3242   00138C  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3243   001390  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3244   001394  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3245   001398  0E00               	movlw	0
  3246   00139A  6E4F               	movwf	___flmul@a^0,c
  3247   00139C  0E00               	movlw	0
  3248   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  3249   0013A0  0E70               	movlw	112
  3250   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  3251   0013A4  0E42               	movlw	66
  3252   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  3253   0013A8  EC81  F00F         	call	___flmul	;wreg free
  3254   0013AC  EE20 F010          	lfsr	2,16
  3255   0013B0  5057               	movf	RGB2Hue@cf^0,w,c
  3256   0013B2  26D9               	addwf	fsr2l,f,c
  3257   0013B4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3258   0013B6  22DA               	addwfc	fsr2h,f,c
  3259   0013B8  C04B  FFDE         	movff	?___flmul,postinc2
  3260   0013BC  C04C  FFDE         	movff	?___flmul+1,postinc2
  3261   0013C0  C04D  FFDE         	movff	?___flmul+2,postinc2
  3262   0013C4  C04E  FFDE         	movff	?___flmul+3,postinc2
  3263                           
  3264                           ;colorfunctions.c: 46:         }else{
  3265   0013C8  EF75  F00A         	goto	l4063
  3266   0013CC                     l4059:
  3267                           
  3268                           ;colorfunctions.c: 47:             max=cf->Bf;
  3269   0013CC  EE20 F008          	lfsr	2,8
  3270   0013D0  5057               	movf	RGB2Hue@cf^0,w,c
  3271   0013D2  26D9               	addwf	fsr2l,f,c
  3272   0013D4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3273   0013D6  22DA               	addwfc	fsr2h,f,c
  3274   0013D8  CFDE F001          	movff	postinc2,___fltol@f1
  3275   0013DC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3276   0013E0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3277   0013E4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3278   0013E8  EC66  F018         	call	___fltol	;wreg free
  3279   0013EC  C001  F071         	movff	?___fltol,RGB2Hue@max
  3280   0013F0  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3281                           
  3282                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3283   0013F4  0100               	movlb	0	; () banked
  3284   0013F6  5173               	movf	RGB2Hue@min& (0+255),w,b
  3285   0013F8  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3286   0013FA  6E59               	movwf	??_RGB2Hue^0,c
  3287   0013FC  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3288   0013FE  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3289   001400  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3290   001402  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3291   001406  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3292   00140A  0E00               	movlw	0
  3293   00140C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3294   00140E  0EFF               	movlw	-1
  3295   001410  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3296   001412  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3297   001414  0E01               	movlw	1
  3298   001416  EC45  F014         	call	___xxtofl
  3299   00141A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3300   00141E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3301   001422  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3302   001426  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3303   00142A  EE20 F004          	lfsr	2,4
  3304   00142E  5057               	movf	RGB2Hue@cf^0,w,c
  3305   001430  26D9               	addwf	fsr2l,f,c
  3306   001432  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3307   001434  22DA               	addwfc	fsr2h,f,c
  3308   001436  CFDE F02E          	movff	postinc2,___flsub@a
  3309   00143A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3310   00143E  CFDE F030          	movff	postinc2,___flsub@a+2
  3311   001442  CFDE F031          	movff	postinc2,___flsub@a+3
  3312   001446  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3313   00144A  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3314   00144E  CFDE F02A          	movff	postinc2,___flsub@b
  3315   001452  CFDE F02B          	movff	postinc2,___flsub@b+1
  3316   001456  CFDE F02C          	movff	postinc2,___flsub@b+2
  3317   00145A  CFDE F02D          	movff	postinc2,___flsub@b+3
  3318   00145E  ECC4  F020         	call	___flsub	;wreg free
  3319   001462  C02A  F032         	movff	?___flsub,___fldiv@b
  3320   001466  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3321   00146A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3322   00146E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3323   001472  EC97  F011         	call	___fldiv	;wreg free
  3324   001476  C032  F06D         	movff	?___fldiv,_RGB2Hue$2959
  3325   00147A  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$2959+1
  3326   00147E  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$2959+2
  3327   001482  C035  F070         	movff	?___fldiv+3,_RGB2Hue$2959+3
  3328   001486                     
  3329                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3330   001486  0E00               	movlw	0
  3331   001488  6E1E               	movwf	___fladd@a^0,c
  3332   00148A  0E00               	movlw	0
  3333   00148C  6E1F               	movwf	(___fladd@a+1)^0,c
  3334   00148E  0E80               	movlw	128
  3335   001490  6E20               	movwf	(___fladd@a+2)^0,c
  3336   001492  0E40               	movlw	64
  3337   001494  6E21               	movwf	(___fladd@a+3)^0,c
  3338   001496  C06D  F01A         	movff	_RGB2Hue$2959,___fladd@b
  3339   00149A  C06E  F01B         	movff	_RGB2Hue$2959+1,___fladd@b+1
  3340   00149E  C06F  F01C         	movff	_RGB2Hue$2959+2,___fladd@b+2
  3341   0014A2  C070  F01D         	movff	_RGB2Hue$2959+3,___fladd@b+3
  3342   0014A6  EC21  F00D         	call	___fladd	;wreg free
  3343   0014AA  C01A  F04B         	movff	?___fladd,___flmul@b
  3344   0014AE  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3345   0014B2  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3346   0014B6  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3347   0014BA  0E00               	movlw	0
  3348   0014BC  6E4F               	movwf	___flmul@a^0,c
  3349   0014BE  0E00               	movlw	0
  3350   0014C0  6E50               	movwf	(___flmul@a+1)^0,c
  3351   0014C2  0E70               	movlw	112
  3352   0014C4  6E51               	movwf	(___flmul@a+2)^0,c
  3353   0014C6  0E42               	movlw	66
  3354   0014C8  6E52               	movwf	(___flmul@a+3)^0,c
  3355   0014CA  EC81  F00F         	call	___flmul	;wreg free
  3356   0014CE  EE20 F010          	lfsr	2,16
  3357   0014D2  5057               	movf	RGB2Hue@cf^0,w,c
  3358   0014D4  26D9               	addwf	fsr2l,f,c
  3359   0014D6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3360   0014D8  22DA               	addwfc	fsr2h,f,c
  3361   0014DA  C04B  FFDE         	movff	?___flmul,postinc2
  3362   0014DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3363   0014E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3364   0014E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3365   0014EA                     l4063:
  3366                           
  3367                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3368   0014EA  EE20 F010          	lfsr	2,16
  3369   0014EE  5057               	movf	RGB2Hue@cf^0,w,c
  3370   0014F0  26D9               	addwf	fsr2l,f,c
  3371   0014F2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3372   0014F4  22DA               	addwfc	fsr2h,f,c
  3373   0014F6  0E03               	movlw	3
  3374   0014F8  BEDB               	btfsc	plusw2,7,c
  3375   0014FA  EF83  F00A         	goto	u3870
  3376   0014FE  EF81  F00A         	goto	u3871
  3377   001502                     u3871:
  3378   001502  EFA9  F00A         	goto	l111
  3379   001506                     u3870:
  3380   001506                     
  3381                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3382   001506  EE20 F010          	lfsr	2,16
  3383   00150A  5057               	movf	RGB2Hue@cf^0,w,c
  3384   00150C  26D9               	addwf	fsr2l,f,c
  3385   00150E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3386   001510  22DA               	addwfc	fsr2h,f,c
  3387   001512  CFDE F01A          	movff	postinc2,___fladd@b
  3388   001516  CFDE F01B          	movff	postinc2,___fladd@b+1
  3389   00151A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3390   00151E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3391   001522  0E00               	movlw	0
  3392   001524  6E1E               	movwf	___fladd@a^0,c
  3393   001526  0E00               	movlw	0
  3394   001528  6E1F               	movwf	(___fladd@a+1)^0,c
  3395   00152A  0EB4               	movlw	180
  3396   00152C  6E20               	movwf	(___fladd@a+2)^0,c
  3397   00152E  0E43               	movlw	67
  3398   001530  6E21               	movwf	(___fladd@a+3)^0,c
  3399   001532  EC21  F00D         	call	___fladd	;wreg free
  3400   001536  EE20 F010          	lfsr	2,16
  3401   00153A  5057               	movf	RGB2Hue@cf^0,w,c
  3402   00153C  26D9               	addwf	fsr2l,f,c
  3403   00153E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3404   001540  22DA               	addwfc	fsr2h,f,c
  3405   001542  C01A  FFDE         	movff	?___fladd,postinc2
  3406   001546  C01B  FFDE         	movff	?___fladd+1,postinc2
  3407   00154A  C01C  FFDE         	movff	?___fladd+2,postinc2
  3408   00154E  C01D  FFDE         	movff	?___fladd+3,postinc2
  3409   001552                     l111:
  3410   001552  0012               	return		;funcret
  3411   001554                     __end_of_RGB2Hue:
  3412                           	callstack 0
  3413                           
  3414 ;; *************** function ___xxtofl *****************
  3415 ;; Defined at:
  3416 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  sign            1    wreg     unsigned char 
  3419 ;;  val             4   11[COMRAM] long 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  sign            1   19[COMRAM] unsigned char 
  3422 ;;  arg             4   21[COMRAM] unsigned long 
  3423 ;;  exp             1   20[COMRAM] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  4   11[COMRAM] unsigned char 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;Total ram usage:       14 bytes
  3438 ;; Hardware stack levels used: 1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_colour_read_all
  3443 ;;		_RGB2Hue
  3444 ;;		_Left45
  3445 ;;		_Right45
  3446 ;;		_reverseHalfSquare
  3447 ;;		_Yellow_rev1_R90
  3448 ;;		_Pink_rev1_L90
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text18
  3453   00288A                     __ptext18:
  3454                           	callstack 0
  3455   00288A                     ___xxtofl:
  3456                           	callstack 29
  3457                           
  3458                           ;incstack = 0
  3459                           ;___xxtofl@sign stored from wreg
  3460   00288A  6E14               	movwf	___xxtofl@sign^0,c
  3461   00288C  5014               	movf	___xxtofl@sign^0,w,c
  3462   00288E  B4D8               	btfsc	status,2,c
  3463   002890  EF4C  F014         	goto	u3651
  3464   002894  EF4E  F014         	goto	u3650
  3465   002898                     u3651:
  3466   002898  EF70  F014         	goto	l1213
  3467   00289C                     u3650:
  3468   00289C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3469   00289E  EF55  F014         	goto	u3660
  3470   0028A2  EF53  F014         	goto	u3661
  3471   0028A6                     u3661:
  3472   0028A6  EF70  F014         	goto	l1213
  3473   0028AA                     u3660:
  3474   0028AA  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3475   0028AE  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3476   0028B2  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3477   0028B6  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3478   0028BA  1E10               	comf	??___xxtofl^0,f,c
  3479   0028BC  1E11               	comf	(??___xxtofl+1)^0,f,c
  3480   0028BE  1E12               	comf	(??___xxtofl+2)^0,f,c
  3481   0028C0  1E13               	comf	(??___xxtofl+3)^0,f,c
  3482   0028C2  2A10               	incf	??___xxtofl^0,f,c
  3483   0028C4  0E00               	movlw	0
  3484   0028C6  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3485   0028C8  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3486   0028CA  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3487   0028CC  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3488   0028D0  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3489   0028D4  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3490   0028D8  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3491   0028DC  EF78  F014         	goto	l3943
  3492   0028E0                     l1213:
  3493   0028E0  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3494   0028E4  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3495   0028E8  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3496   0028EC  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3497   0028F0                     l3943:
  3498   0028F0  500C               	movf	___xxtofl@val^0,w,c
  3499   0028F2  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3500   0028F4  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3501   0028F6  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3502   0028F8  A4D8               	btfss	status,2,c
  3503   0028FA  EF81  F014         	goto	u3671
  3504   0028FE  EF83  F014         	goto	u3670
  3505   002902                     u3671:
  3506   002902  EF8D  F014         	goto	l3949
  3507   002906                     u3670:
  3508   002906  0E00               	movlw	0
  3509   002908  6E0C               	movwf	?___xxtofl^0,c
  3510   00290A  0E00               	movlw	0
  3511   00290C  6E0D               	movwf	(?___xxtofl+1)^0,c
  3512   00290E  0E00               	movlw	0
  3513   002910  6E0E               	movwf	(?___xxtofl+2)^0,c
  3514   002912  0E00               	movlw	0
  3515   002914  6E0F               	movwf	(?___xxtofl+3)^0,c
  3516   002916  EF1E  F015         	goto	l1216
  3517   00291A                     l3949:
  3518   00291A  0E96               	movlw	150
  3519   00291C  6E15               	movwf	___xxtofl@exp^0,c
  3520   00291E  EF97  F014         	goto	l3953
  3521   002922                     l3951:
  3522   002922  2A15               	incf	___xxtofl@exp^0,f,c
  3523   002924  90D8               	bcf	status,0,c
  3524   002926  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3525   002928  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3526   00292A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3527   00292C  3216               	rrcf	___xxtofl@arg^0,f,c
  3528   00292E                     l3953:
  3529   00292E  0E00               	movlw	0
  3530   002930  1416               	andwf	___xxtofl@arg^0,w,c
  3531   002932  6E10               	movwf	??___xxtofl^0,c
  3532   002934  0E00               	movlw	0
  3533   002936  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3534   002938  6E11               	movwf	(??___xxtofl+1)^0,c
  3535   00293A  0E00               	movlw	0
  3536   00293C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3537   00293E  6E12               	movwf	(??___xxtofl+2)^0,c
  3538   002940  0EFE               	movlw	254
  3539   002942  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3540   002944  6E13               	movwf	(??___xxtofl+3)^0,c
  3541   002946  5010               	movf	??___xxtofl^0,w,c
  3542   002948  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3543   00294A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3544   00294C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3545   00294E  A4D8               	btfss	status,2,c
  3546   002950  EFAC  F014         	goto	u3681
  3547   002954  EFAE  F014         	goto	u3680
  3548   002958                     u3681:
  3549   002958  EF91  F014         	goto	l3951
  3550   00295C                     u3680:
  3551   00295C  EFBC  F014         	goto	l1220
  3552   002960                     l3955:
  3553   002960  2A15               	incf	___xxtofl@exp^0,f,c
  3554   002962  0E01               	movlw	1
  3555   002964  2616               	addwf	___xxtofl@arg^0,f,c
  3556   002966  0E00               	movlw	0
  3557   002968  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3558   00296A  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3559   00296C  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3560   00296E  90D8               	bcf	status,0,c
  3561   002970  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3562   002972  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3563   002974  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3564   002976  3216               	rrcf	___xxtofl@arg^0,f,c
  3565   002978                     l1220:
  3566   002978  0E00               	movlw	0
  3567   00297A  1416               	andwf	___xxtofl@arg^0,w,c
  3568   00297C  6E10               	movwf	??___xxtofl^0,c
  3569   00297E  0E00               	movlw	0
  3570   002980  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3571   002982  6E11               	movwf	(??___xxtofl+1)^0,c
  3572   002984  0E00               	movlw	0
  3573   002986  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3574   002988  6E12               	movwf	(??___xxtofl+2)^0,c
  3575   00298A  0EFF               	movlw	255
  3576   00298C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3577   00298E  6E13               	movwf	(??___xxtofl+3)^0,c
  3578   002990  5010               	movf	??___xxtofl^0,w,c
  3579   002992  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3580   002994  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3581   002996  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3582   002998  A4D8               	btfss	status,2,c
  3583   00299A  EFD1  F014         	goto	u3691
  3584   00299E  EFD3  F014         	goto	u3690
  3585   0029A2                     u3691:
  3586   0029A2  EFB0  F014         	goto	l3955
  3587   0029A6                     u3690:
  3588   0029A6  EFDB  F014         	goto	l3963
  3589   0029AA                     l3961:
  3590   0029AA  0615               	decf	___xxtofl@exp^0,f,c
  3591   0029AC  90D8               	bcf	status,0,c
  3592   0029AE  3616               	rlcf	___xxtofl@arg^0,f,c
  3593   0029B0  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3594   0029B2  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3595   0029B4  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3596   0029B6                     l3963:
  3597   0029B6  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3598   0029B8  EFE0  F014         	goto	u3701
  3599   0029BC  EFE2  F014         	goto	u3700
  3600   0029C0                     u3701:
  3601   0029C0  EFEA  F014         	goto	l1227
  3602   0029C4                     u3700:
  3603   0029C4  0E02               	movlw	2
  3604   0029C6  6015               	cpfslt	___xxtofl@exp^0,c
  3605   0029C8  EFE8  F014         	goto	u3711
  3606   0029CC  EFEA  F014         	goto	u3710
  3607   0029D0                     u3711:
  3608   0029D0  EFD5  F014         	goto	l3961
  3609   0029D4                     u3710:
  3610   0029D4                     l1227:
  3611   0029D4  B015               	btfsc	___xxtofl@exp^0,0,c
  3612   0029D6  EFEF  F014         	goto	u3721
  3613   0029DA  EFF1  F014         	goto	u3720
  3614   0029DE                     u3721:
  3615   0029DE  EFF2  F014         	goto	l3969
  3616   0029E2                     u3720:
  3617   0029E2  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3618   0029E4                     l3969:
  3619   0029E4  90D8               	bcf	status,0,c
  3620   0029E6  3215               	rrcf	___xxtofl@exp^0,f,c
  3621   0029E8  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3622   0029EC  6A11               	clrf	(??___xxtofl+1)^0,c
  3623   0029EE  6A12               	clrf	(??___xxtofl+2)^0,c
  3624   0029F0  6A13               	clrf	(??___xxtofl+3)^0,c
  3625   0029F2  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3626   0029F6  6A12               	clrf	(??___xxtofl+2)^0,c
  3627   0029F8  6A11               	clrf	(??___xxtofl+1)^0,c
  3628   0029FA  6A10               	clrf	??___xxtofl^0,c
  3629   0029FC  5010               	movf	??___xxtofl^0,w,c
  3630   0029FE  1216               	iorwf	___xxtofl@arg^0,f,c
  3631   002A00  5011               	movf	(??___xxtofl+1)^0,w,c
  3632   002A02  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3633   002A04  5012               	movf	(??___xxtofl+2)^0,w,c
  3634   002A06  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3635   002A08  5013               	movf	(??___xxtofl+3)^0,w,c
  3636   002A0A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3637   002A0C  5014               	movf	___xxtofl@sign^0,w,c
  3638   002A0E  B4D8               	btfsc	status,2,c
  3639   002A10  EF0C  F015         	goto	u3731
  3640   002A14  EF0E  F015         	goto	u3730
  3641   002A18                     u3731:
  3642   002A18  EF16  F015         	goto	l3979
  3643   002A1C                     u3730:
  3644   002A1C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3645   002A1E  EF15  F015         	goto	u3740
  3646   002A22  EF13  F015         	goto	u3741
  3647   002A26                     u3741:
  3648   002A26  EF16  F015         	goto	l3979
  3649   002A2A                     u3740:
  3650   002A2A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3651   002A2C                     l3979:
  3652   002A2C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3653   002A30  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3654   002A34  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3655   002A38  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3656   002A3C                     l1216:
  3657   002A3C  0012               	return		;funcret
  3658   002A3E                     __end_of___xxtofl:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function ___fltol *****************
  3662 ;; Defined at:
  3663 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  f1              4    0[COMRAM] unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  exp1            1    9[COMRAM] unsigned char 
  3668 ;;  sign1           1    8[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  4    0[COMRAM] long 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;Total ram usage:       10 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_RGB2Hue
  3688 ;;		_Left45
  3689 ;;		_Right45
  3690 ;;		_reverseHalfSquare
  3691 ;;		_Yellow_rev1_R90
  3692 ;;		_Pink_rev1_L90
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text19
  3697   0030CC                     __ptext19:
  3698                           	callstack 0
  3699   0030CC                     ___fltol:
  3700                           	callstack 29
  3701   0030CC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3702   0030CE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3703   0030D0  6E0A               	movwf	___fltol@exp1^0,c
  3704   0030D2  500A               	movf	___fltol@exp1^0,w,c
  3705   0030D4  A4D8               	btfss	status,2,c
  3706   0030D6  EF6F  F018         	goto	u3581
  3707   0030DA  EF71  F018         	goto	u3580
  3708   0030DE                     u3581:
  3709   0030DE  EF7B  F018         	goto	l3899
  3710   0030E2                     u3580:
  3711   0030E2                     l3895:
  3712   0030E2  0E00               	movlw	0
  3713   0030E4  6E01               	movwf	?___fltol^0,c
  3714   0030E6  0E00               	movlw	0
  3715   0030E8  6E02               	movwf	(?___fltol+1)^0,c
  3716   0030EA  0E00               	movlw	0
  3717   0030EC  6E03               	movwf	(?___fltol+2)^0,c
  3718   0030EE  0E00               	movlw	0
  3719   0030F0  6E04               	movwf	(?___fltol+3)^0,c
  3720   0030F2  EFE8  F018         	goto	l855
  3721   0030F6                     l3899:
  3722   0030F6  C001  F005         	movff	___fltol@f1,??___fltol
  3723   0030FA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3724   0030FE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3725   003102  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3726   003106  0E20               	movlw	32
  3727   003108  EF8B  F018         	goto	u3590
  3728   00310C                     u3595:
  3729   00310C  90D8               	bcf	status,0,c
  3730   00310E  3208               	rrcf	(??___fltol+3)^0,f,c
  3731   003110  3207               	rrcf	(??___fltol+2)^0,f,c
  3732   003112  3206               	rrcf	(??___fltol+1)^0,f,c
  3733   003114  3205               	rrcf	??___fltol^0,f,c
  3734   003116                     u3590:
  3735   003116  2EE8               	decfsz	wreg,f,c
  3736   003118  EF86  F018         	goto	u3595
  3737   00311C  5005               	movf	??___fltol^0,w,c
  3738   00311E  6E09               	movwf	___fltol@sign1^0,c
  3739   003120  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3740   003122  0EFF               	movlw	255
  3741   003124  1601               	andwf	___fltol@f1^0,f,c
  3742   003126  0EFF               	movlw	255
  3743   003128  1602               	andwf	(___fltol@f1+1)^0,f,c
  3744   00312A  0EFF               	movlw	255
  3745   00312C  1603               	andwf	(___fltol@f1+2)^0,f,c
  3746   00312E  0E00               	movlw	0
  3747   003130  1604               	andwf	(___fltol@f1+3)^0,f,c
  3748   003132  0E96               	movlw	150
  3749   003134  5E0A               	subwf	___fltol@exp1^0,f,c
  3750   003136  BE0A               	btfsc	___fltol@exp1^0,7,c
  3751   003138  EFA2  F018         	goto	u3600
  3752   00313C  EFA0  F018         	goto	u3601
  3753   003140                     u3601:
  3754   003140  EFB8  F018         	goto	l3919
  3755   003144                     u3600:
  3756   003144  500A               	movf	___fltol@exp1^0,w,c
  3757   003146  0A80               	xorlw	128
  3758   003148  0F97               	addlw	151
  3759   00314A  B0D8               	btfsc	status,0,c
  3760   00314C  EFAA  F018         	goto	u3611
  3761   003150  EFAC  F018         	goto	u3610
  3762   003154                     u3611:
  3763   003154  EFAE  F018         	goto	l3915
  3764   003158                     u3610:
  3765   003158  EF71  F018         	goto	l3895
  3766   00315C                     l3915:
  3767   00315C  90D8               	bcf	status,0,c
  3768   00315E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3769   003160  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3770   003162  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3771   003164  3201               	rrcf	___fltol@f1^0,f,c
  3772   003166  3E0A               	incfsz	___fltol@exp1^0,f,c
  3773   003168  EFAE  F018         	goto	l3915
  3774   00316C  EFD0  F018         	goto	l3929
  3775   003170                     l3919:
  3776   003170  0E1F               	movlw	31
  3777   003172  640A               	cpfsgt	___fltol@exp1^0,c
  3778   003174  EFBE  F018         	goto	u3621
  3779   003178  EFC0  F018         	goto	u3620
  3780   00317C                     u3621:
  3781   00317C  EFC8  F018         	goto	l3927
  3782   003180                     u3620:
  3783   003180  EF71  F018         	goto	l3895
  3784   003184                     l3925:
  3785   003184  90D8               	bcf	status,0,c
  3786   003186  3601               	rlcf	___fltol@f1^0,f,c
  3787   003188  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3788   00318A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3789   00318C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3790   00318E  060A               	decf	___fltol@exp1^0,f,c
  3791   003190                     l3927:
  3792   003190  500A               	movf	___fltol@exp1^0,w,c
  3793   003192  A4D8               	btfss	status,2,c
  3794   003194  EFCE  F018         	goto	u3631
  3795   003198  EFD0  F018         	goto	u3630
  3796   00319C                     u3631:
  3797   00319C  EFC2  F018         	goto	l3925
  3798   0031A0                     u3630:
  3799   0031A0                     l3929:
  3800   0031A0  5009               	movf	___fltol@sign1^0,w,c
  3801   0031A2  B4D8               	btfsc	status,2,c
  3802   0031A4  EFD6  F018         	goto	u3641
  3803   0031A8  EFD8  F018         	goto	u3640
  3804   0031AC                     u3641:
  3805   0031AC  EFE0  F018         	goto	l3933
  3806   0031B0                     u3640:
  3807   0031B0  1E04               	comf	(___fltol@f1+3)^0,f,c
  3808   0031B2  1E03               	comf	(___fltol@f1+2)^0,f,c
  3809   0031B4  1E02               	comf	(___fltol@f1+1)^0,f,c
  3810   0031B6  6C01               	negf	___fltol@f1^0,c
  3811   0031B8  0E00               	movlw	0
  3812   0031BA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3813   0031BC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3814   0031BE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3815   0031C0                     l3933:
  3816   0031C0  C001  F001         	movff	___fltol@f1,?___fltol
  3817   0031C4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3818   0031C8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3819   0031CC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3820   0031D0                     l855:
  3821   0031D0  0012               	return		;funcret
  3822   0031D2                     __end_of___fltol:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function ___flsub *****************
  3826 ;; Defined at:
  3827 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  b               4   41[COMRAM] long 
  3830 ;;  a               4   45[COMRAM] long 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  4   41[COMRAM] long 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3842 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;Total ram usage:        8 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; Hardware stack levels required when called: 1
  3849 ;; This function calls:
  3850 ;;		___fladd
  3851 ;; This function is called by:
  3852 ;;		_RGB2Hue
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text20
  3857   004188                     __ptext20:
  3858                           	callstack 0
  3859   004188                     ___flsub:
  3860                           	callstack 28
  3861   004188  0E00               	movlw	0
  3862   00418A  1A2E               	xorwf	___flsub@a^0,f,c
  3863   00418C  0E00               	movlw	0
  3864   00418E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  3865   004190  0E00               	movlw	0
  3866   004192  1A30               	xorwf	(___flsub@a+2)^0,f,c
  3867   004194  0E80               	movlw	128
  3868   004196  1A31               	xorwf	(___flsub@a+3)^0,f,c
  3869   004198  C02A  F01A         	movff	___flsub@b,___fladd@b
  3870   00419C  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  3871   0041A0  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  3872   0041A4  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  3873   0041A8  C02E  F01E         	movff	___flsub@a,___fladd@a
  3874   0041AC  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  3875   0041B0  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  3876   0041B4  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  3877   0041B8  EC21  F00D         	call	___fladd	;wreg free
  3878   0041BC  C01A  F02A         	movff	?___fladd,?___flsub
  3879   0041C0  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  3880   0041C4  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  3881   0041C8  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  3882   0041CC  0012               	return		;funcret
  3883   0041CE                     __end_of___flsub:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function ___fladd *****************
  3887 ;; Defined at:
  3888 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  b               4   25[COMRAM] long 
  3891 ;;  a               4   29[COMRAM] long 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  grs             1   40[COMRAM] unsigned char 
  3894 ;;  bexp            1   39[COMRAM] unsigned char 
  3895 ;;  aexp            1   38[COMRAM] unsigned char 
  3896 ;;  signs           1   37[COMRAM] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  4   25[COMRAM] unsigned char 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;Total ram usage:       16 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_RGB2Hue
  3916 ;;		___flsub
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text21
  3921   001A42                     __ptext21:
  3922                           	callstack 0
  3923   001A42                     ___fladd:
  3924                           	callstack 28
  3925   001A42  501D               	movf	(___fladd@b+3)^0,w,c
  3926   001A44  0B80               	andlw	128
  3927   001A46  6E26               	movwf	___fladd@signs^0,c
  3928   001A48  501D               	movf	(___fladd@b+3)^0,w,c
  3929   001A4A  241D               	addwf	(___fladd@b+3)^0,w,c
  3930   001A4C  6E28               	movwf	___fladd@bexp^0,c
  3931   001A4E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  3932   001A50  EF2C  F00D         	goto	u2441
  3933   001A54  EF2E  F00D         	goto	u2440
  3934   001A58                     u2441:
  3935   001A58  EF2F  F00D         	goto	l3167
  3936   001A5C                     u2440:
  3937   001A5C  8028               	bsf	___fladd@bexp^0,0,c
  3938   001A5E                     l3167:
  3939   001A5E  5028               	movf	___fladd@bexp^0,w,c
  3940   001A60  B4D8               	btfsc	status,2,c
  3941   001A62  EF35  F00D         	goto	u2451
  3942   001A66  EF37  F00D         	goto	u2450
  3943   001A6A                     u2451:
  3944   001A6A  EF4C  F00D         	goto	l3177
  3945   001A6E                     u2450:
  3946   001A6E  2828               	incf	___fladd@bexp^0,w,c
  3947   001A70  A4D8               	btfss	status,2,c
  3948   001A72  EF3D  F00D         	goto	u2461
  3949   001A76  EF3F  F00D         	goto	u2460
  3950   001A7A                     u2461:
  3951   001A7A  EF47  F00D         	goto	l3173
  3952   001A7E                     u2460:
  3953   001A7E  0E00               	movlw	0
  3954   001A80  6E1A               	movwf	___fladd@b^0,c
  3955   001A82  0E00               	movlw	0
  3956   001A84  6E1B               	movwf	(___fladd@b+1)^0,c
  3957   001A86  0E00               	movlw	0
  3958   001A88  6E1C               	movwf	(___fladd@b+2)^0,c
  3959   001A8A  0E00               	movlw	0
  3960   001A8C  6E1D               	movwf	(___fladd@b+3)^0,c
  3961   001A8E                     l3173:
  3962   001A8E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  3963   001A90  0E00               	movlw	0
  3964   001A92  6E1D               	movwf	(___fladd@b+3)^0,c
  3965   001A94  EF54  F00D         	goto	l3179
  3966   001A98                     l3177:
  3967   001A98  0E00               	movlw	0
  3968   001A9A  6E1A               	movwf	___fladd@b^0,c
  3969   001A9C  0E00               	movlw	0
  3970   001A9E  6E1B               	movwf	(___fladd@b+1)^0,c
  3971   001AA0  0E00               	movlw	0
  3972   001AA2  6E1C               	movwf	(___fladd@b+2)^0,c
  3973   001AA4  0E00               	movlw	0
  3974   001AA6  6E1D               	movwf	(___fladd@b+3)^0,c
  3975   001AA8                     l3179:
  3976   001AA8  5021               	movf	(___fladd@a+3)^0,w,c
  3977   001AAA  0B80               	andlw	128
  3978   001AAC  6E27               	movwf	___fladd@aexp^0,c
  3979   001AAE  5026               	movf	___fladd@signs^0,w,c
  3980   001AB0  1827               	xorwf	___fladd@aexp^0,w,c
  3981   001AB2  B4D8               	btfsc	status,2,c
  3982   001AB4  EF5E  F00D         	goto	u2471
  3983   001AB8  EF60  F00D         	goto	u2470
  3984   001ABC                     u2471:
  3985   001ABC  EF61  F00D         	goto	l3185
  3986   001AC0                     u2470:
  3987   001AC0  8C26               	bsf	___fladd@signs^0,6,c
  3988   001AC2                     l3185:
  3989   001AC2  5021               	movf	(___fladd@a+3)^0,w,c
  3990   001AC4  2421               	addwf	(___fladd@a+3)^0,w,c
  3991   001AC6  6E27               	movwf	___fladd@aexp^0,c
  3992   001AC8  AE20               	btfss	(___fladd@a+2)^0,7,c
  3993   001ACA  EF69  F00D         	goto	u2481
  3994   001ACE  EF6B  F00D         	goto	u2480
  3995   001AD2                     u2481:
  3996   001AD2  EF6C  F00D         	goto	l3191
  3997   001AD6                     u2480:
  3998   001AD6  8027               	bsf	___fladd@aexp^0,0,c
  3999   001AD8                     l3191:
  4000   001AD8  5027               	movf	___fladd@aexp^0,w,c
  4001   001ADA  B4D8               	btfsc	status,2,c
  4002   001ADC  EF72  F00D         	goto	u2491
  4003   001AE0  EF74  F00D         	goto	u2490
  4004   001AE4                     u2491:
  4005   001AE4  EF89  F00D         	goto	l3201
  4006   001AE8                     u2490:
  4007   001AE8  2827               	incf	___fladd@aexp^0,w,c
  4008   001AEA  A4D8               	btfss	status,2,c
  4009   001AEC  EF7A  F00D         	goto	u2501
  4010   001AF0  EF7C  F00D         	goto	u2500
  4011   001AF4                     u2501:
  4012   001AF4  EF84  F00D         	goto	l3197
  4013   001AF8                     u2500:
  4014   001AF8  0E00               	movlw	0
  4015   001AFA  6E1E               	movwf	___fladd@a^0,c
  4016   001AFC  0E00               	movlw	0
  4017   001AFE  6E1F               	movwf	(___fladd@a+1)^0,c
  4018   001B00  0E00               	movlw	0
  4019   001B02  6E20               	movwf	(___fladd@a+2)^0,c
  4020   001B04  0E00               	movlw	0
  4021   001B06  6E21               	movwf	(___fladd@a+3)^0,c
  4022   001B08                     l3197:
  4023   001B08  8E20               	bsf	(___fladd@a+2)^0,7,c
  4024   001B0A  0E00               	movlw	0
  4025   001B0C  6E21               	movwf	(___fladd@a+3)^0,c
  4026   001B0E  EF91  F00D         	goto	l3203
  4027   001B12                     l3201:
  4028   001B12  0E00               	movlw	0
  4029   001B14  6E1E               	movwf	___fladd@a^0,c
  4030   001B16  0E00               	movlw	0
  4031   001B18  6E1F               	movwf	(___fladd@a+1)^0,c
  4032   001B1A  0E00               	movlw	0
  4033   001B1C  6E20               	movwf	(___fladd@a+2)^0,c
  4034   001B1E  0E00               	movlw	0
  4035   001B20  6E21               	movwf	(___fladd@a+3)^0,c
  4036   001B22                     l3203:
  4037   001B22  5028               	movf	___fladd@bexp^0,w,c
  4038   001B24  5C27               	subwf	___fladd@aexp^0,w,c
  4039   001B26  B0D8               	btfsc	status,0,c
  4040   001B28  EF98  F00D         	goto	u2511
  4041   001B2C  EF9A  F00D         	goto	u2510
  4042   001B30                     u2511:
  4043   001B30  EFC1  F00D         	goto	l3239
  4044   001B34                     u2510:
  4045   001B34  AC26               	btfss	___fladd@signs^0,6,c
  4046   001B36  EF9F  F00D         	goto	u2521
  4047   001B3A  EFA1  F00D         	goto	u2520
  4048   001B3E                     u2521:
  4049   001B3E  EFA3  F00D         	goto	l3209
  4050   001B42                     u2520:
  4051   001B42  0E80               	movlw	128
  4052   001B44  1A26               	xorwf	___fladd@signs^0,f,c
  4053   001B46                     l3209:
  4054   001B46  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4055   001B4A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4056   001B4E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4057   001B52  C01A  F029         	movff	___fladd@b,___fladd@grs
  4058   001B56  C01E  F01A         	movff	___fladd@a,___fladd@b
  4059   001B5A  C029  F01E         	movff	___fladd@grs,___fladd@a
  4060   001B5E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4061   001B62  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4062   001B66  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4063   001B6A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4064   001B6E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4065   001B72  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4066   001B76  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4067   001B7A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4068   001B7E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4069   001B82                     l3239:
  4070   001B82  0E00               	movlw	0
  4071   001B84  6E29               	movwf	___fladd@grs^0,c
  4072   001B86  5028               	movf	___fladd@bexp^0,w,c
  4073   001B88  C027  F022         	movff	___fladd@aexp,??___fladd
  4074   001B8C  6A23               	clrf	(??___fladd+1)^0,c
  4075   001B8E  5E22               	subwf	??___fladd^0,f,c
  4076   001B90  0E00               	movlw	0
  4077   001B92  5A23               	subwfb	(??___fladd+1)^0,f,c
  4078   001B94  BE23               	btfsc	(??___fladd+1)^0,7,c
  4079   001B96  EFD6  F00D         	goto	u2531
  4080   001B9A  5023               	movf	(??___fladd+1)^0,w,c
  4081   001B9C  E109               	bnz	u2530
  4082   001B9E  0E1A               	movlw	26
  4083   001BA0  5C22               	subwf	??___fladd^0,w,c
  4084   001BA2  A0D8               	btfss	status,0,c
  4085   001BA4  EFD6  F00D         	goto	u2531
  4086   001BA8  EFD8  F00D         	goto	u2530
  4087   001BAC                     u2531:
  4088   001BAC  EF0F  F00E         	goto	l1087
  4089   001BB0                     u2530:
  4090   001BB0  501A               	movf	___fladd@b^0,w,c
  4091   001BB2  101B               	iorwf	(___fladd@b+1)^0,w,c
  4092   001BB4  101C               	iorwf	(___fladd@b+2)^0,w,c
  4093   001BB6  101D               	iorwf	(___fladd@b+3)^0,w,c
  4094   001BB8  A4D8               	btfss	status,2,c
  4095   001BBA  EFE1  F00D         	goto	u2541
  4096   001BBE  EFE4  F00D         	goto	u2540
  4097   001BC2                     u2541:
  4098   001BC2  0E01               	movlw	1
  4099   001BC4  EFE5  F00D         	goto	u2550
  4100   001BC8                     u2540:
  4101   001BC8  0E00               	movlw	0
  4102   001BCA                     u2550:
  4103   001BCA  6E29               	movwf	___fladd@grs^0,c
  4104   001BCC  0E00               	movlw	0
  4105   001BCE  6E1A               	movwf	___fladd@b^0,c
  4106   001BD0  0E00               	movlw	0
  4107   001BD2  6E1B               	movwf	(___fladd@b+1)^0,c
  4108   001BD4  0E00               	movlw	0
  4109   001BD6  6E1C               	movwf	(___fladd@b+2)^0,c
  4110   001BD8  0E00               	movlw	0
  4111   001BDA  6E1D               	movwf	(___fladd@b+3)^0,c
  4112   001BDC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4113   001BE0  EF18  F00E         	goto	l1086
  4114   001BE4                     l1088:
  4115   001BE4  A029               	btfss	___fladd@grs^0,0,c
  4116   001BE6  EFF7  F00D         	goto	u2561
  4117   001BEA  EFF9  F00D         	goto	u2560
  4118   001BEE                     u2561:
  4119   001BEE  EFFF  F00D         	goto	l3251
  4120   001BF2                     u2560:
  4121   001BF2  90D8               	bcf	status,0,c
  4122   001BF4  3029               	rrcf	___fladd@grs^0,w,c
  4123   001BF6  0901               	iorlw	1
  4124   001BF8  6E29               	movwf	___fladd@grs^0,c
  4125   001BFA  EF01  F00E         	goto	l3253
  4126   001BFE                     l3251:
  4127   001BFE  90D8               	bcf	status,0,c
  4128   001C00  3229               	rrcf	___fladd@grs^0,f,c
  4129   001C02                     l3253:
  4130   001C02  A01A               	btfss	___fladd@b^0,0,c
  4131   001C04  EF06  F00E         	goto	u2571
  4132   001C08  EF08  F00E         	goto	u2570
  4133   001C0C                     u2571:
  4134   001C0C  EF09  F00E         	goto	l3257
  4135   001C10                     u2570:
  4136   001C10  8E29               	bsf	___fladd@grs^0,7,c
  4137   001C12                     l3257:
  4138   001C12  341D               	rlcf	(___fladd@b+3)^0,w,c
  4139   001C14  321D               	rrcf	(___fladd@b+3)^0,f,c
  4140   001C16  321C               	rrcf	(___fladd@b+2)^0,f,c
  4141   001C18  321B               	rrcf	(___fladd@b+1)^0,f,c
  4142   001C1A  321A               	rrcf	___fladd@b^0,f,c
  4143   001C1C  2A28               	incf	___fladd@bexp^0,f,c
  4144   001C1E                     l1087:
  4145   001C1E  5027               	movf	___fladd@aexp^0,w,c
  4146   001C20  5C28               	subwf	___fladd@bexp^0,w,c
  4147   001C22  A0D8               	btfss	status,0,c
  4148   001C24  EF16  F00E         	goto	u2581
  4149   001C28  EF18  F00E         	goto	u2580
  4150   001C2C                     u2581:
  4151   001C2C  EFF2  F00D         	goto	l1088
  4152   001C30                     u2580:
  4153   001C30                     l1086:
  4154   001C30  BC26               	btfsc	___fladd@signs^0,6,c
  4155   001C32  EF1D  F00E         	goto	u2591
  4156   001C36  EF1F  F00E         	goto	u2590
  4157   001C3A                     u2591:
  4158   001C3A  EF5F  F00E         	goto	l3285
  4159   001C3E                     u2590:
  4160   001C3E  5028               	movf	___fladd@bexp^0,w,c
  4161   001C40  A4D8               	btfss	status,2,c
  4162   001C42  EF25  F00E         	goto	u2601
  4163   001C46  EF27  F00E         	goto	u2600
  4164   001C4A                     u2601:
  4165   001C4A  EF31  F00E         	goto	l3267
  4166   001C4E                     u2600:
  4167   001C4E  0E00               	movlw	0
  4168   001C50  6E1A               	movwf	?___fladd^0,c
  4169   001C52  0E00               	movlw	0
  4170   001C54  6E1B               	movwf	(?___fladd+1)^0,c
  4171   001C56  0E00               	movlw	0
  4172   001C58  6E1C               	movwf	(?___fladd+2)^0,c
  4173   001C5A  0E00               	movlw	0
  4174   001C5C  6E1D               	movwf	(?___fladd+3)^0,c
  4175   001C5E  EF80  F00F         	goto	l1095
  4176   001C62                     l3267:
  4177   001C62  501E               	movf	___fladd@a^0,w,c
  4178   001C64  261A               	addwf	___fladd@b^0,f,c
  4179   001C66  501F               	movf	(___fladd@a+1)^0,w,c
  4180   001C68  221B               	addwfc	(___fladd@b+1)^0,f,c
  4181   001C6A  5020               	movf	(___fladd@a+2)^0,w,c
  4182   001C6C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4183   001C6E  5021               	movf	(___fladd@a+3)^0,w,c
  4184   001C70  221D               	addwfc	(___fladd@b+3)^0,f,c
  4185   001C72  A01D               	btfss	(___fladd@b+3)^0,0,c
  4186   001C74  EF3E  F00E         	goto	u2611
  4187   001C78  EF40  F00E         	goto	u2610
  4188   001C7C                     u2611:
  4189   001C7C  EFEC  F00E         	goto	l3321
  4190   001C80                     u2610:
  4191   001C80  A029               	btfss	___fladd@grs^0,0,c
  4192   001C82  EF45  F00E         	goto	u2621
  4193   001C86  EF47  F00E         	goto	u2620
  4194   001C8A                     u2621:
  4195   001C8A  EF4D  F00E         	goto	l3275
  4196   001C8E                     u2620:
  4197   001C8E  90D8               	bcf	status,0,c
  4198   001C90  3029               	rrcf	___fladd@grs^0,w,c
  4199   001C92  0901               	iorlw	1
  4200   001C94  6E29               	movwf	___fladd@grs^0,c
  4201   001C96  EF4F  F00E         	goto	l3277
  4202   001C9A                     l3275:
  4203   001C9A  90D8               	bcf	status,0,c
  4204   001C9C  3229               	rrcf	___fladd@grs^0,f,c
  4205   001C9E                     l3277:
  4206   001C9E  A01A               	btfss	___fladd@b^0,0,c
  4207   001CA0  EF54  F00E         	goto	u2631
  4208   001CA4  EF56  F00E         	goto	u2630
  4209   001CA8                     u2631:
  4210   001CA8  EF57  F00E         	goto	l3281
  4211   001CAC                     u2630:
  4212   001CAC  8E29               	bsf	___fladd@grs^0,7,c
  4213   001CAE                     l3281:
  4214   001CAE  341D               	rlcf	(___fladd@b+3)^0,w,c
  4215   001CB0  321D               	rrcf	(___fladd@b+3)^0,f,c
  4216   001CB2  321C               	rrcf	(___fladd@b+2)^0,f,c
  4217   001CB4  321B               	rrcf	(___fladd@b+1)^0,f,c
  4218   001CB6  321A               	rrcf	___fladd@b^0,f,c
  4219   001CB8  2A28               	incf	___fladd@bexp^0,f,c
  4220   001CBA  EFEC  F00E         	goto	l3321
  4221   001CBE                     l3285:
  4222   001CBE  501E               	movf	___fladd@a^0,w,c
  4223   001CC0  5C1A               	subwf	___fladd@b^0,w,c
  4224   001CC2  501F               	movf	(___fladd@a+1)^0,w,c
  4225   001CC4  581B               	subwfb	(___fladd@b+1)^0,w,c
  4226   001CC6  5020               	movf	(___fladd@a+2)^0,w,c
  4227   001CC8  581C               	subwfb	(___fladd@b+2)^0,w,c
  4228   001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  4229   001CCC  0A80               	xorlw	128
  4230   001CCE  6E22               	movwf	??___fladd^0,c
  4231   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
  4232   001CD2  0A80               	xorlw	128
  4233   001CD4  5822               	subwfb	??___fladd^0,w,c
  4234   001CD6  B0D8               	btfsc	status,0,c
  4235   001CD8  EF70  F00E         	goto	u2641
  4236   001CDC  EF72  F00E         	goto	u2640
  4237   001CE0                     u2641:
  4238   001CE0  EF9D  F00E         	goto	l3295
  4239   001CE4                     u2640:
  4240   001CE4  501A               	movf	___fladd@b^0,w,c
  4241   001CE6  5C1E               	subwf	___fladd@a^0,w,c
  4242   001CE8  6E22               	movwf	??___fladd^0,c
  4243   001CEA  501B               	movf	(___fladd@b+1)^0,w,c
  4244   001CEC  581F               	subwfb	(___fladd@a+1)^0,w,c
  4245   001CEE  6E23               	movwf	(??___fladd+1)^0,c
  4246   001CF0  501C               	movf	(___fladd@b+2)^0,w,c
  4247   001CF2  5820               	subwfb	(___fladd@a+2)^0,w,c
  4248   001CF4  6E24               	movwf	(??___fladd+2)^0,c
  4249   001CF6  501D               	movf	(___fladd@b+3)^0,w,c
  4250   001CF8  5821               	subwfb	(___fladd@a+3)^0,w,c
  4251   001CFA  6E25               	movwf	(??___fladd+3)^0,c
  4252   001CFC  0EFF               	movlw	255
  4253   001CFE  2422               	addwf	??___fladd^0,w,c
  4254   001D00  6E1A               	movwf	___fladd@b^0,c
  4255   001D02  0EFF               	movlw	255
  4256   001D04  2023               	addwfc	(??___fladd+1)^0,w,c
  4257   001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  4258   001D08  0EFF               	movlw	255
  4259   001D0A  2024               	addwfc	(??___fladd+2)^0,w,c
  4260   001D0C  6E1C               	movwf	(___fladd@b+2)^0,c
  4261   001D0E  0EFF               	movlw	255
  4262   001D10  2025               	addwfc	(??___fladd+3)^0,w,c
  4263   001D12  6E1D               	movwf	(___fladd@b+3)^0,c
  4264   001D14  0E80               	movlw	128
  4265   001D16  1A26               	xorwf	___fladd@signs^0,f,c
  4266   001D18  6C29               	negf	___fladd@grs^0,c
  4267   001D1A  5029               	movf	___fladd@grs^0,w,c
  4268   001D1C  A4D8               	btfss	status,2,c
  4269   001D1E  EF93  F00E         	goto	u2651
  4270   001D22  EF95  F00E         	goto	u2650
  4271   001D26                     u2651:
  4272   001D26  EFA5  F00E         	goto	l1103
  4273   001D2A                     u2650:
  4274   001D2A  0E01               	movlw	1
  4275   001D2C  261A               	addwf	___fladd@b^0,f,c
  4276   001D2E  0E00               	movlw	0
  4277   001D30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4278   001D32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4279   001D34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4280   001D36  EFA5  F00E         	goto	l1103
  4281   001D3A                     l3295:
  4282   001D3A  501E               	movf	___fladd@a^0,w,c
  4283   001D3C  5E1A               	subwf	___fladd@b^0,f,c
  4284   001D3E  501F               	movf	(___fladd@a+1)^0,w,c
  4285   001D40  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4286   001D42  5020               	movf	(___fladd@a+2)^0,w,c
  4287   001D44  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4288   001D46  5021               	movf	(___fladd@a+3)^0,w,c
  4289   001D48  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4290   001D4A                     l1103:
  4291   001D4A  501A               	movf	___fladd@b^0,w,c
  4292   001D4C  101B               	iorwf	(___fladd@b+1)^0,w,c
  4293   001D4E  101C               	iorwf	(___fladd@b+2)^0,w,c
  4294   001D50  101D               	iorwf	(___fladd@b+3)^0,w,c
  4295   001D52  A4D8               	btfss	status,2,c
  4296   001D54  EFAE  F00E         	goto	u2661
  4297   001D58  EFB0  F00E         	goto	u2660
  4298   001D5C                     u2661:
  4299   001D5C  EFE5  F00E         	goto	l3319
  4300   001D60                     u2660:
  4301   001D60  5029               	movf	___fladd@grs^0,w,c
  4302   001D62  A4D8               	btfss	status,2,c
  4303   001D64  EFB6  F00E         	goto	u2671
  4304   001D68  EFB8  F00E         	goto	u2670
  4305   001D6C                     u2671:
  4306   001D6C  EFE5  F00E         	goto	l3319
  4307   001D70                     u2670:
  4308   001D70  0E00               	movlw	0
  4309   001D72  6E1A               	movwf	?___fladd^0,c
  4310   001D74  0E00               	movlw	0
  4311   001D76  6E1B               	movwf	(?___fladd+1)^0,c
  4312   001D78  0E00               	movlw	0
  4313   001D7A  6E1C               	movwf	(?___fladd+2)^0,c
  4314   001D7C  0E00               	movlw	0
  4315   001D7E  6E1D               	movwf	(?___fladd+3)^0,c
  4316   001D80  EF80  F00F         	goto	l1095
  4317   001D84                     l3303:
  4318   001D84  90D8               	bcf	status,0,c
  4319   001D86  361A               	rlcf	___fladd@b^0,f,c
  4320   001D88  361B               	rlcf	(___fladd@b+1)^0,f,c
  4321   001D8A  361C               	rlcf	(___fladd@b+2)^0,f,c
  4322   001D8C  361D               	rlcf	(___fladd@b+3)^0,f,c
  4323   001D8E  AE29               	btfss	___fladd@grs^0,7,c
  4324   001D90  EFCC  F00E         	goto	u2681
  4325   001D94  EFCE  F00E         	goto	u2680
  4326   001D98                     u2681:
  4327   001D98  EFCF  F00E         	goto	l3309
  4328   001D9C                     u2680:
  4329   001D9C  801A               	bsf	___fladd@b^0,0,c
  4330   001D9E                     l3309:
  4331   001D9E  A029               	btfss	___fladd@grs^0,0,c
  4332   001DA0  EFD4  F00E         	goto	u2691
  4333   001DA4  EFD6  F00E         	goto	u2690
  4334   001DA8                     u2691:
  4335   001DA8  EFDA  F00E         	goto	l3313
  4336   001DAC                     u2690:
  4337   001DAC  80D8               	bsf	status,0,c
  4338   001DAE  3629               	rlcf	___fladd@grs^0,f,c
  4339   001DB0  EFDC  F00E         	goto	l3315
  4340   001DB4                     l3313:
  4341   001DB4  90D8               	bcf	status,0,c
  4342   001DB6  3629               	rlcf	___fladd@grs^0,f,c
  4343   001DB8                     l3315:
  4344   001DB8  5028               	movf	___fladd@bexp^0,w,c
  4345   001DBA  B4D8               	btfsc	status,2,c
  4346   001DBC  EFE2  F00E         	goto	u2701
  4347   001DC0  EFE4  F00E         	goto	u2700
  4348   001DC4                     u2701:
  4349   001DC4  EFE5  F00E         	goto	l3319
  4350   001DC8                     u2700:
  4351   001DC8  0628               	decf	___fladd@bexp^0,f,c
  4352   001DCA                     l3319:
  4353   001DCA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4354   001DCC  EFEA  F00E         	goto	u2711
  4355   001DD0  EFEC  F00E         	goto	u2710
  4356   001DD4                     u2711:
  4357   001DD4  EFC2  F00E         	goto	l3303
  4358   001DD8                     u2710:
  4359   001DD8                     l3321:
  4360   001DD8  0E00               	movlw	0
  4361   001DDA  6E27               	movwf	___fladd@aexp^0,c
  4362   001DDC  AE29               	btfss	___fladd@grs^0,7,c
  4363   001DDE  EFF3  F00E         	goto	u2721
  4364   001DE2  EFF5  F00E         	goto	u2720
  4365   001DE6                     u2721:
  4366   001DE6  EF0D  F00F         	goto	l1112
  4367   001DEA                     u2720:
  4368   001DEA  C029  F022         	movff	___fladd@grs,??___fladd
  4369   001DEE  0E7F               	movlw	127
  4370   001DF0  1622               	andwf	??___fladd^0,f,c
  4371   001DF2  B4D8               	btfsc	status,2,c
  4372   001DF4  EFFE  F00E         	goto	u2731
  4373   001DF8  EF00  F00F         	goto	u2730
  4374   001DFC                     u2731:
  4375   001DFC  EF04  F00F         	goto	l1113
  4376   001E00                     u2730:
  4377   001E00                     l3327:
  4378   001E00  0E01               	movlw	1
  4379   001E02  6E27               	movwf	___fladd@aexp^0,c
  4380   001E04  EF0D  F00F         	goto	l1112
  4381   001E08                     l1113:
  4382   001E08  A01A               	btfss	___fladd@b^0,0,c
  4383   001E0A  EF09  F00F         	goto	u2741
  4384   001E0E  EF0B  F00F         	goto	u2740
  4385   001E12                     u2741:
  4386   001E12  EF0D  F00F         	goto	l1112
  4387   001E16                     u2740:
  4388   001E16  EF00  F00F         	goto	l3327
  4389   001E1A                     l1112:
  4390   001E1A  5027               	movf	___fladd@aexp^0,w,c
  4391   001E1C  B4D8               	btfsc	status,2,c
  4392   001E1E  EF13  F00F         	goto	u2751
  4393   001E22  EF15  F00F         	goto	u2750
  4394   001E26                     u2751:
  4395   001E26  EF40  F00F         	goto	l3339
  4396   001E2A                     u2750:
  4397   001E2A  0E01               	movlw	1
  4398   001E2C  261A               	addwf	___fladd@b^0,f,c
  4399   001E2E  0E00               	movlw	0
  4400   001E30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4401   001E32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4402   001E34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4403   001E36  A01D               	btfss	(___fladd@b+3)^0,0,c
  4404   001E38  EF20  F00F         	goto	u2761
  4405   001E3C  EF22  F00F         	goto	u2760
  4406   001E40                     u2761:
  4407   001E40  EF40  F00F         	goto	l3339
  4408   001E44                     u2760:
  4409   001E44  C01A  F022         	movff	___fladd@b,??___fladd
  4410   001E48  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4411   001E4C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4412   001E50  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4413   001E54  3425               	rlcf	(??___fladd+3)^0,w,c
  4414   001E56  3225               	rrcf	(??___fladd+3)^0,f,c
  4415   001E58  3224               	rrcf	(??___fladd+2)^0,f,c
  4416   001E5A  3223               	rrcf	(??___fladd+1)^0,f,c
  4417   001E5C  3222               	rrcf	??___fladd^0,f,c
  4418   001E5E  C022  F01A         	movff	??___fladd,___fladd@b
  4419   001E62  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4420   001E66  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4421   001E6A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4422   001E6E  2828               	incf	___fladd@bexp^0,w,c
  4423   001E70  B4D8               	btfsc	status,2,c
  4424   001E72  EF3D  F00F         	goto	u2771
  4425   001E76  EF3F  F00F         	goto	u2770
  4426   001E7A                     u2771:
  4427   001E7A  EF40  F00F         	goto	l3339
  4428   001E7E                     u2770:
  4429   001E7E  2A28               	incf	___fladd@bexp^0,f,c
  4430   001E80                     l3339:
  4431   001E80  2828               	incf	___fladd@bexp^0,w,c
  4432   001E82  B4D8               	btfsc	status,2,c
  4433   001E84  EF46  F00F         	goto	u2781
  4434   001E88  EF48  F00F         	goto	u2780
  4435   001E8C                     u2781:
  4436   001E8C  EF50  F00F         	goto	l3343
  4437   001E90                     u2780:
  4438   001E90  5028               	movf	___fladd@bexp^0,w,c
  4439   001E92  A4D8               	btfss	status,2,c
  4440   001E94  EF4E  F00F         	goto	u2791
  4441   001E98  EF50  F00F         	goto	u2790
  4442   001E9C                     u2791:
  4443   001E9C  EF62  F00F         	goto	l3347
  4444   001EA0                     u2790:
  4445   001EA0                     l3343:
  4446   001EA0  0E00               	movlw	0
  4447   001EA2  6E1A               	movwf	___fladd@b^0,c
  4448   001EA4  0E00               	movlw	0
  4449   001EA6  6E1B               	movwf	(___fladd@b+1)^0,c
  4450   001EA8  0E00               	movlw	0
  4451   001EAA  6E1C               	movwf	(___fladd@b+2)^0,c
  4452   001EAC  0E00               	movlw	0
  4453   001EAE  6E1D               	movwf	(___fladd@b+3)^0,c
  4454   001EB0  5028               	movf	___fladd@bexp^0,w,c
  4455   001EB2  A4D8               	btfss	status,2,c
  4456   001EB4  EF5E  F00F         	goto	u2801
  4457   001EB8  EF60  F00F         	goto	u2800
  4458   001EBC                     u2801:
  4459   001EBC  EF62  F00F         	goto	l3347
  4460   001EC0                     u2800:
  4461   001EC0  0E00               	movlw	0
  4462   001EC2  6E26               	movwf	___fladd@signs^0,c
  4463   001EC4                     l3347:
  4464   001EC4  A028               	btfss	___fladd@bexp^0,0,c
  4465   001EC6  EF67  F00F         	goto	u2811
  4466   001ECA  EF69  F00F         	goto	u2810
  4467   001ECE                     u2811:
  4468   001ECE  EF6C  F00F         	goto	l3351
  4469   001ED2                     u2810:
  4470   001ED2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4471   001ED4  EF6D  F00F         	goto	l3353
  4472   001ED8                     l3351:
  4473   001ED8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4474   001EDA                     l3353:
  4475   001EDA  90D8               	bcf	status,0,c
  4476   001EDC  3028               	rrcf	___fladd@bexp^0,w,c
  4477   001EDE  6E1D               	movwf	(___fladd@b+3)^0,c
  4478   001EE0  AE26               	btfss	___fladd@signs^0,7,c
  4479   001EE2  EF75  F00F         	goto	u2821
  4480   001EE6  EF77  F00F         	goto	u2820
  4481   001EEA                     u2821:
  4482   001EEA  EF78  F00F         	goto	l3359
  4483   001EEE                     u2820:
  4484   001EEE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4485   001EF0                     l3359:
  4486   001EF0  C01A  F01A         	movff	___fladd@b,?___fladd
  4487   001EF4  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4488   001EF8  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4489   001EFC  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4490   001F00                     l1095:
  4491   001F00  0012               	return		;funcret
  4492   001F02                     __end_of___fladd:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function ___flmul *****************
  4496 ;; Defined at:
  4497 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  b               4   74[COMRAM] unsigned char 
  4500 ;;  a               4   78[COMRAM] unsigned char 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  prod            4    7[BANK0 ] struct .
  4503 ;;  grs             4    1[BANK0 ] unsigned long 
  4504 ;;  temp            2   11[BANK0 ] struct .
  4505 ;;  bexp            1    6[BANK0 ] unsigned char 
  4506 ;;  aexp            1    5[BANK0 ] unsigned char 
  4507 ;;  sign            1    0[BANK0 ] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4   74[COMRAM] unsigned char 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, prodl, prodh
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4517 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4518 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4520 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;Total ram usage:       25 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_RGB2Hue
  4527 ;;		_Left45
  4528 ;;		_Right45
  4529 ;;		_reverseHalfSquare
  4530 ;;		_Yellow_rev1_R90
  4531 ;;		_Pink_rev1_L90
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text22
  4536   001F02                     __ptext22:
  4537                           	callstack 0
  4538   001F02                     ___flmul:
  4539                           	callstack 29
  4540   001F02  504E               	movf	(___flmul@b+3)^0,w,c
  4541   001F04  0B80               	andlw	128
  4542   001F06  0100               	movlb	0	; () banked
  4543   001F08  6F60               	movwf	___flmul@sign& (0+255),b
  4544   001F0A  504E               	movf	(___flmul@b+3)^0,w,c
  4545   001F0C  244E               	addwf	(___flmul@b+3)^0,w,c
  4546   001F0E  6F66               	movwf	___flmul@bexp& (0+255),b
  4547   001F10                     
  4548                           ; BSR set to: 0
  4549   001F10  AE4D               	btfss	(___flmul@b+2)^0,7,c
  4550   001F12  EF8D  F00F         	goto	u3361
  4551   001F16  EF8F  F00F         	goto	u3360
  4552   001F1A                     u3361:
  4553   001F1A  EF90  F00F         	goto	l3747
  4554   001F1E                     u3360:
  4555   001F1E                     
  4556                           ; BSR set to: 0
  4557   001F1E  8166               	bsf	___flmul@bexp& (0+255),0,b
  4558   001F20                     l3747:
  4559                           
  4560                           ; BSR set to: 0
  4561   001F20  5166               	movf	___flmul@bexp& (0+255),w,b
  4562   001F22  B4D8               	btfsc	status,2,c
  4563   001F24  EF96  F00F         	goto	u3371
  4564   001F28  EF98  F00F         	goto	u3370
  4565   001F2C                     u3371:
  4566   001F2C  EFAB  F00F         	goto	l3755
  4567   001F30                     u3370:
  4568   001F30                     
  4569                           ; BSR set to: 0
  4570   001F30  2966               	incf	___flmul@bexp& (0+255),w,b
  4571   001F32  A4D8               	btfss	status,2,c
  4572   001F34  EF9E  F00F         	goto	u3381
  4573   001F38  EFA0  F00F         	goto	u3380
  4574   001F3C                     u3381:
  4575   001F3C  EFA8  F00F         	goto	l3753
  4576   001F40                     u3380:
  4577   001F40                     
  4578                           ; BSR set to: 0
  4579   001F40  0E00               	movlw	0
  4580   001F42  6E4B               	movwf	___flmul@b^0,c
  4581   001F44  0E00               	movlw	0
  4582   001F46  6E4C               	movwf	(___flmul@b+1)^0,c
  4583   001F48  0E00               	movlw	0
  4584   001F4A  6E4D               	movwf	(___flmul@b+2)^0,c
  4585   001F4C  0E00               	movlw	0
  4586   001F4E  6E4E               	movwf	(___flmul@b+3)^0,c
  4587   001F50                     l3753:
  4588                           
  4589                           ; BSR set to: 0
  4590   001F50  8E4D               	bsf	(___flmul@b+2)^0,7,c
  4591   001F52  EFB3  F00F         	goto	l3757
  4592   001F56                     l3755:
  4593                           
  4594                           ; BSR set to: 0
  4595   001F56  0E00               	movlw	0
  4596   001F58  6E4B               	movwf	___flmul@b^0,c
  4597   001F5A  0E00               	movlw	0
  4598   001F5C  6E4C               	movwf	(___flmul@b+1)^0,c
  4599   001F5E  0E00               	movlw	0
  4600   001F60  6E4D               	movwf	(___flmul@b+2)^0,c
  4601   001F62  0E00               	movlw	0
  4602   001F64  6E4E               	movwf	(___flmul@b+3)^0,c
  4603   001F66                     l3757:
  4604                           
  4605                           ; BSR set to: 0
  4606   001F66  5052               	movf	(___flmul@a+3)^0,w,c
  4607   001F68  0B80               	andlw	128
  4608   001F6A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  4609   001F6C                     
  4610                           ; BSR set to: 0
  4611   001F6C  5052               	movf	(___flmul@a+3)^0,w,c
  4612   001F6E  2452               	addwf	(___flmul@a+3)^0,w,c
  4613   001F70  6F65               	movwf	___flmul@aexp& (0+255),b
  4614   001F72                     
  4615                           ; BSR set to: 0
  4616   001F72  AE51               	btfss	(___flmul@a+2)^0,7,c
  4617   001F74  EFBE  F00F         	goto	u3391
  4618   001F78  EFC0  F00F         	goto	u3390
  4619   001F7C                     u3391:
  4620   001F7C  EFC1  F00F         	goto	l3765
  4621   001F80                     u3390:
  4622   001F80                     
  4623                           ; BSR set to: 0
  4624   001F80  8165               	bsf	___flmul@aexp& (0+255),0,b
  4625   001F82                     l3765:
  4626                           
  4627                           ; BSR set to: 0
  4628   001F82  5165               	movf	___flmul@aexp& (0+255),w,b
  4629   001F84  B4D8               	btfsc	status,2,c
  4630   001F86  EFC7  F00F         	goto	u3401
  4631   001F8A  EFC9  F00F         	goto	u3400
  4632   001F8E                     u3401:
  4633   001F8E  EFDC  F00F         	goto	l3773
  4634   001F92                     u3400:
  4635   001F92                     
  4636                           ; BSR set to: 0
  4637   001F92  2965               	incf	___flmul@aexp& (0+255),w,b
  4638   001F94  A4D8               	btfss	status,2,c
  4639   001F96  EFCF  F00F         	goto	u3411
  4640   001F9A  EFD1  F00F         	goto	u3410
  4641   001F9E                     u3411:
  4642   001F9E  EFD9  F00F         	goto	l3771
  4643   001FA2                     u3410:
  4644   001FA2                     
  4645                           ; BSR set to: 0
  4646   001FA2  0E00               	movlw	0
  4647   001FA4  6E4F               	movwf	___flmul@a^0,c
  4648   001FA6  0E00               	movlw	0
  4649   001FA8  6E50               	movwf	(___flmul@a+1)^0,c
  4650   001FAA  0E00               	movlw	0
  4651   001FAC  6E51               	movwf	(___flmul@a+2)^0,c
  4652   001FAE  0E00               	movlw	0
  4653   001FB0  6E52               	movwf	(___flmul@a+3)^0,c
  4654   001FB2                     l3771:
  4655                           
  4656                           ; BSR set to: 0
  4657   001FB2  8E51               	bsf	(___flmul@a+2)^0,7,c
  4658   001FB4  EFE4  F00F         	goto	l1172
  4659   001FB8                     l3773:
  4660                           
  4661                           ; BSR set to: 0
  4662   001FB8  0E00               	movlw	0
  4663   001FBA  6E4F               	movwf	___flmul@a^0,c
  4664   001FBC  0E00               	movlw	0
  4665   001FBE  6E50               	movwf	(___flmul@a+1)^0,c
  4666   001FC0  0E00               	movlw	0
  4667   001FC2  6E51               	movwf	(___flmul@a+2)^0,c
  4668   001FC4  0E00               	movlw	0
  4669   001FC6  6E52               	movwf	(___flmul@a+3)^0,c
  4670   001FC8                     l1172:
  4671                           
  4672                           ; BSR set to: 0
  4673   001FC8  5165               	movf	___flmul@aexp& (0+255),w,b
  4674   001FCA  B4D8               	btfsc	status,2,c
  4675   001FCC  EFEA  F00F         	goto	u3421
  4676   001FD0  EFEC  F00F         	goto	u3420
  4677   001FD4                     u3421:
  4678   001FD4  EFF4  F00F         	goto	l3777
  4679   001FD8                     u3420:
  4680   001FD8                     
  4681                           ; BSR set to: 0
  4682   001FD8  5166               	movf	___flmul@bexp& (0+255),w,b
  4683   001FDA  A4D8               	btfss	status,2,c
  4684   001FDC  EFF2  F00F         	goto	u3431
  4685   001FE0  EFF4  F00F         	goto	u3430
  4686   001FE4                     u3431:
  4687   001FE4  EFFE  F00F         	goto	l3781
  4688   001FE8                     u3430:
  4689   001FE8                     l3777:
  4690                           
  4691                           ; BSR set to: 0
  4692   001FE8  0E00               	movlw	0
  4693   001FEA  6E4B               	movwf	?___flmul^0,c
  4694   001FEC  0E00               	movlw	0
  4695   001FEE  6E4C               	movwf	(?___flmul+1)^0,c
  4696   001FF0  0E00               	movlw	0
  4697   001FF2  6E4D               	movwf	(?___flmul+2)^0,c
  4698   001FF4  0E00               	movlw	0
  4699   001FF6  6E4E               	movwf	(?___flmul+3)^0,c
  4700   001FF8  EF96  F011         	goto	l1176
  4701   001FFC                     l3781:
  4702                           
  4703                           ; BSR set to: 0
  4704   001FFC  5051               	movf	(___flmul@a+2)^0,w,c
  4705   001FFE  024B               	mulwf	___flmul@b^0,c
  4706   002000  CFF3 F06B          	movff	prodl,___flmul@temp
  4707   002004  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4708   002008                     
  4709                           ; BSR set to: 0
  4710   002008  516B               	movf	___flmul@temp& (0+255),w,b
  4711   00200A  6F61               	movwf	___flmul@grs& (0+255),b
  4712   00200C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  4713   00200E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  4714   002010  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  4715   002012                     
  4716                           ; BSR set to: 0
  4717   002012  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4718   002014  6F67               	movwf	___flmul@prod& (0+255),b
  4719   002016  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  4720   002018  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  4721   00201A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  4722   00201C  5050               	movf	(___flmul@a+1)^0,w,c
  4723   00201E  024C               	mulwf	(___flmul@b+1)^0,c
  4724   002020  CFF3 F06B          	movff	prodl,___flmul@temp
  4725   002024  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4726   002028                     
  4727                           ; BSR set to: 0
  4728   002028  516B               	movf	___flmul@temp& (0+255),w,b
  4729   00202A  2761               	addwf	___flmul@grs& (0+255),f,b
  4730   00202C  0E00               	movlw	0
  4731   00202E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4732   002030  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4733   002032  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4734   002034                     
  4735                           ; BSR set to: 0
  4736   002034  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4737   002036  2767               	addwf	___flmul@prod& (0+255),f,b
  4738   002038  0E00               	movlw	0
  4739   00203A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4740   00203C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4741   00203E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4742   002040  504F               	movf	___flmul@a^0,w,c
  4743   002042  024D               	mulwf	(___flmul@b+2)^0,c
  4744   002044  CFF3 F06B          	movff	prodl,___flmul@temp
  4745   002048  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4746   00204C                     
  4747                           ; BSR set to: 0
  4748   00204C  516B               	movf	___flmul@temp& (0+255),w,b
  4749   00204E  2761               	addwf	___flmul@grs& (0+255),f,b
  4750   002050  0E00               	movlw	0
  4751   002052  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4752   002054  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4753   002056  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4754   002058                     
  4755                           ; BSR set to: 0
  4756   002058  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4757   00205A  2767               	addwf	___flmul@prod& (0+255),f,b
  4758   00205C  0E00               	movlw	0
  4759   00205E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4760   002060  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4761   002062  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4762   002064                     
  4763                           ; BSR set to: 0
  4764   002064  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4765   002068  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4766   00206C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4767   002070  6B61               	clrf	___flmul@grs& (0+255),b
  4768   002072                     
  4769                           ; BSR set to: 0
  4770   002072  504F               	movf	___flmul@a^0,w,c
  4771   002074  024C               	mulwf	(___flmul@b+1)^0,c
  4772   002076  CFF3 F06B          	movff	prodl,___flmul@temp
  4773   00207A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4774   00207E                     
  4775                           ; BSR set to: 0
  4776   00207E  516B               	movf	___flmul@temp& (0+255),w,b
  4777   002080  2761               	addwf	___flmul@grs& (0+255),f,b
  4778   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4779   002084  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4780   002086  0E00               	movlw	0
  4781   002088  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4782   00208A  0E00               	movlw	0
  4783   00208C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4784   00208E                     
  4785                           ; BSR set to: 0
  4786   00208E  5050               	movf	(___flmul@a+1)^0,w,c
  4787   002090  024B               	mulwf	___flmul@b^0,c
  4788   002092  CFF3 F06B          	movff	prodl,___flmul@temp
  4789   002096  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4790   00209A                     
  4791                           ; BSR set to: 0
  4792   00209A  516B               	movf	___flmul@temp& (0+255),w,b
  4793   00209C  2761               	addwf	___flmul@grs& (0+255),f,b
  4794   00209E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4795   0020A0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4796   0020A2  0E00               	movlw	0
  4797   0020A4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4798   0020A6  0E00               	movlw	0
  4799   0020A8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4800   0020AA                     
  4801                           ; BSR set to: 0
  4802   0020AA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4803   0020AE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4804   0020B2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4805   0020B6  6B61               	clrf	___flmul@grs& (0+255),b
  4806   0020B8  504F               	movf	___flmul@a^0,w,c
  4807   0020BA  024B               	mulwf	___flmul@b^0,c
  4808   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  4809   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4810   0020C4                     
  4811                           ; BSR set to: 0
  4812   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  4813   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  4814   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4815   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4816   0020CC  0E00               	movlw	0
  4817   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4818   0020D0  0E00               	movlw	0
  4819   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4820   0020D4                     
  4821                           ; BSR set to: 0
  4822   0020D4  5051               	movf	(___flmul@a+2)^0,w,c
  4823   0020D6  024C               	mulwf	(___flmul@b+1)^0,c
  4824   0020D8  CFF3 F06B          	movff	prodl,___flmul@temp
  4825   0020DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4826   0020E0  516B               	movf	___flmul@temp& (0+255),w,b
  4827   0020E2  2767               	addwf	___flmul@prod& (0+255),f,b
  4828   0020E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4829   0020E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4830   0020E8  0E00               	movlw	0
  4831   0020EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4832   0020EC  0E00               	movlw	0
  4833   0020EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4834   0020F0                     
  4835                           ; BSR set to: 0
  4836   0020F0  5050               	movf	(___flmul@a+1)^0,w,c
  4837   0020F2  024D               	mulwf	(___flmul@b+2)^0,c
  4838   0020F4  CFF3 F06B          	movff	prodl,___flmul@temp
  4839   0020F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4840   0020FC                     
  4841                           ; BSR set to: 0
  4842   0020FC  516B               	movf	___flmul@temp& (0+255),w,b
  4843   0020FE  2767               	addwf	___flmul@prod& (0+255),f,b
  4844   002100  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4845   002102  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4846   002104  0E00               	movlw	0
  4847   002106  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4848   002108  0E00               	movlw	0
  4849   00210A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4850   00210C  5051               	movf	(___flmul@a+2)^0,w,c
  4851   00210E  024D               	mulwf	(___flmul@b+2)^0,c
  4852   002110  CFF3 F06B          	movff	prodl,___flmul@temp
  4853   002114  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4854   002118                     
  4855                           ; BSR set to: 0
  4856   002118  516B               	movf	___flmul@temp& (0+255),w,b
  4857   00211A  6E53               	movwf	??___flmul^0,c
  4858   00211C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4859   00211E  6E54               	movwf	(??___flmul+1)^0,c
  4860   002120  6A55               	clrf	(??___flmul+2)^0,c
  4861   002122  6A56               	clrf	(??___flmul+3)^0,c
  4862   002124  C055  F056         	movff	??___flmul+2,??___flmul+3
  4863   002128  C054  F055         	movff	??___flmul+1,??___flmul+2
  4864   00212C  C053  F054         	movff	??___flmul,??___flmul+1
  4865   002130  6A53               	clrf	??___flmul^0,c
  4866   002132  5053               	movf	??___flmul^0,w,c
  4867   002134  2767               	addwf	___flmul@prod& (0+255),f,b
  4868   002136  5054               	movf	(??___flmul+1)^0,w,c
  4869   002138  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4870   00213A  5055               	movf	(??___flmul+2)^0,w,c
  4871   00213C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4872   00213E  5056               	movf	(??___flmul+3)^0,w,c
  4873   002140  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4874   002142                     
  4875                           ; BSR set to: 0
  4876   002142  C061  F053         	movff	___flmul@grs,??___flmul
  4877   002146  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  4878   00214A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  4879   00214E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  4880   002152  0E19               	movlw	25
  4881   002154  EFB1  F010         	goto	u3440
  4882   002158                     u3445:
  4883   002158  90D8               	bcf	status,0,c
  4884   00215A  3256               	rrcf	(??___flmul+3)^0,f,c
  4885   00215C  3255               	rrcf	(??___flmul+2)^0,f,c
  4886   00215E  3254               	rrcf	(??___flmul+1)^0,f,c
  4887   002160  3253               	rrcf	??___flmul^0,f,c
  4888   002162                     u3440:
  4889   002162  2EE8               	decfsz	wreg,f,c
  4890   002164  EFAC  F010         	goto	u3445
  4891   002168  5053               	movf	??___flmul^0,w,c
  4892   00216A  2767               	addwf	___flmul@prod& (0+255),f,b
  4893   00216C  5054               	movf	(??___flmul+1)^0,w,c
  4894   00216E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4895   002170  5055               	movf	(??___flmul+2)^0,w,c
  4896   002172  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4897   002174  5056               	movf	(??___flmul+3)^0,w,c
  4898   002176  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4899   002178                     
  4900                           ; BSR set to: 0
  4901   002178  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4902   00217C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4903   002180  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4904   002184  6B61               	clrf	___flmul@grs& (0+255),b
  4905   002186                     
  4906                           ; BSR set to: 0
  4907   002186  5165               	movf	___flmul@aexp& (0+255),w,b
  4908   002188  C066  F053         	movff	___flmul@bexp,??___flmul
  4909   00218C  6A54               	clrf	(??___flmul+1)^0,c
  4910   00218E  2653               	addwf	??___flmul^0,f,c
  4911   002190  0E00               	movlw	0
  4912   002192  2254               	addwfc	(??___flmul+1)^0,f,c
  4913   002194  0E82               	movlw	130
  4914   002196  2453               	addwf	??___flmul^0,w,c
  4915   002198  6F6B               	movwf	___flmul@temp& (0+255),b
  4916   00219A  0EFF               	movlw	255
  4917   00219C  2054               	addwfc	(??___flmul+1)^0,w,c
  4918   00219E  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  4919   0021A0  EFE7  F010         	goto	l3829
  4920   0021A4                     l3823:
  4921                           
  4922                           ; BSR set to: 0
  4923   0021A4  90D8               	bcf	status,0,c
  4924   0021A6  3767               	rlcf	___flmul@prod& (0+255),f,b
  4925   0021A8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  4926   0021AA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  4927   0021AC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  4928   0021AE                     
  4929                           ; BSR set to: 0
  4930   0021AE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  4931   0021B0  EFDC  F010         	goto	u3451
  4932   0021B4  EFDE  F010         	goto	u3450
  4933   0021B8                     u3451:
  4934   0021B8  EFDF  F010         	goto	l1179
  4935   0021BC                     u3450:
  4936   0021BC                     
  4937                           ; BSR set to: 0
  4938   0021BC  8167               	bsf	___flmul@prod& (0+255),0,b
  4939   0021BE                     l1179:
  4940                           
  4941                           ; BSR set to: 0
  4942   0021BE  90D8               	bcf	status,0,c
  4943   0021C0  3761               	rlcf	___flmul@grs& (0+255),f,b
  4944   0021C2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  4945   0021C4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  4946   0021C6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  4947   0021C8  076B               	decf	___flmul@temp& (0+255),f,b
  4948   0021CA  A0D8               	btfss	status,0,c
  4949   0021CC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  4950   0021CE                     l3829:
  4951                           
  4952                           ; BSR set to: 0
  4953   0021CE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  4954   0021D0  EFEC  F010         	goto	u3461
  4955   0021D4  EFEE  F010         	goto	u3460
  4956   0021D8                     u3461:
  4957   0021D8  EFD2  F010         	goto	l3823
  4958   0021DC                     u3460:
  4959   0021DC                     
  4960                           ; BSR set to: 0
  4961   0021DC  0E00               	movlw	0
  4962   0021DE  6F65               	movwf	___flmul@aexp& (0+255),b
  4963   0021E0                     
  4964                           ; BSR set to: 0
  4965   0021E0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  4966   0021E2  EFF5  F010         	goto	u3471
  4967   0021E6  EFF7  F010         	goto	u3470
  4968   0021EA                     u3471:
  4969   0021EA  EF1B  F011         	goto	l1181
  4970   0021EE                     u3470:
  4971   0021EE                     
  4972                           ; BSR set to: 0
  4973   0021EE  0EFF               	movlw	255
  4974   0021F0  1561               	andwf	___flmul@grs& (0+255),w,b
  4975   0021F2  6E53               	movwf	??___flmul^0,c
  4976   0021F4  0EFF               	movlw	255
  4977   0021F6  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  4978   0021F8  6E54               	movwf	(??___flmul+1)^0,c
  4979   0021FA  0EFF               	movlw	255
  4980   0021FC  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  4981   0021FE  6E55               	movwf	(??___flmul+2)^0,c
  4982   002200  0E7F               	movlw	127
  4983   002202  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  4984   002204  6E56               	movwf	(??___flmul+3)^0,c
  4985   002206  5053               	movf	??___flmul^0,w,c
  4986   002208  1054               	iorwf	(??___flmul+1)^0,w,c
  4987   00220A  1055               	iorwf	(??___flmul+2)^0,w,c
  4988   00220C  1056               	iorwf	(??___flmul+3)^0,w,c
  4989   00220E  B4D8               	btfsc	status,2,c
  4990   002210  EF0C  F011         	goto	u3481
  4991   002214  EF0E  F011         	goto	u3480
  4992   002218                     u3481:
  4993   002218  EF12  F011         	goto	l1182
  4994   00221C                     u3480:
  4995   00221C                     l3837:
  4996                           
  4997                           ; BSR set to: 0
  4998   00221C  0E01               	movlw	1
  4999   00221E  6F65               	movwf	___flmul@aexp& (0+255),b
  5000   002220  EF1B  F011         	goto	l1181
  5001   002224                     l1182:
  5002                           
  5003                           ; BSR set to: 0
  5004   002224  A167               	btfss	___flmul@prod& (0+255),0,b
  5005   002226  EF17  F011         	goto	u3491
  5006   00222A  EF19  F011         	goto	u3490
  5007   00222E                     u3491:
  5008   00222E  EF1B  F011         	goto	l1181
  5009   002232                     u3490:
  5010   002232  EF0E  F011         	goto	l3837
  5011   002236                     l1181:
  5012                           
  5013                           ; BSR set to: 0
  5014   002236  5165               	movf	___flmul@aexp& (0+255),w,b
  5015   002238  B4D8               	btfsc	status,2,c
  5016   00223A  EF21  F011         	goto	u3501
  5017   00223E  EF23  F011         	goto	u3500
  5018   002242                     u3501:
  5019   002242  EF47  F011         	goto	l3849
  5020   002246                     u3500:
  5021   002246                     
  5022                           ; BSR set to: 0
  5023   002246  0E01               	movlw	1
  5024   002248  2767               	addwf	___flmul@prod& (0+255),f,b
  5025   00224A  0E00               	movlw	0
  5026   00224C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5027   00224E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5028   002250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5029   002252                     
  5030                           ; BSR set to: 0
  5031   002252  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5032   002254  EF2E  F011         	goto	u3511
  5033   002258  EF30  F011         	goto	u3510
  5034   00225C                     u3511:
  5035   00225C  EF47  F011         	goto	l3849
  5036   002260                     u3510:
  5037   002260                     
  5038                           ; BSR set to: 0
  5039   002260  C067  F053         	movff	___flmul@prod,??___flmul
  5040   002264  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  5041   002268  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  5042   00226C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  5043   002270  3456               	rlcf	(??___flmul+3)^0,w,c
  5044   002272  3256               	rrcf	(??___flmul+3)^0,f,c
  5045   002274  3255               	rrcf	(??___flmul+2)^0,f,c
  5046   002276  3254               	rrcf	(??___flmul+1)^0,f,c
  5047   002278  3253               	rrcf	??___flmul^0,f,c
  5048   00227A  C053  F067         	movff	??___flmul,___flmul@prod
  5049   00227E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  5050   002282  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  5051   002286  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  5052   00228A                     
  5053                           ; BSR set to: 0
  5054   00228A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  5055   00228C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  5056   00228E                     l3849:
  5057                           
  5058                           ; BSR set to: 0
  5059   00228E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5060   002290  EF52  F011         	goto	u3521
  5061   002294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5062   002296  E108               	bnz	u3520
  5063   002298  296B               	incf	___flmul@temp& (0+255),w,b
  5064   00229A  A0D8               	btfss	status,0,c
  5065   00229C  EF52  F011         	goto	u3521
  5066   0022A0  EF54  F011         	goto	u3520
  5067   0022A4                     u3521:
  5068   0022A4  EF5E  F011         	goto	l3853
  5069   0022A8                     u3520:
  5070   0022A8                     
  5071                           ; BSR set to: 0
  5072   0022A8  0E00               	movlw	0
  5073   0022AA  6F67               	movwf	___flmul@prod& (0+255),b
  5074   0022AC  0E00               	movlw	0
  5075   0022AE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5076   0022B0  0E80               	movlw	128
  5077   0022B2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5078   0022B4  0E7F               	movlw	127
  5079   0022B6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5080   0022B8  EF8C  F011         	goto	l3865
  5081   0022BC                     l3853:
  5082                           
  5083                           ; BSR set to: 0
  5084   0022BC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5085   0022BE  EF6B  F011         	goto	u3530
  5086   0022C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5087   0022C4  E106               	bnz	u3531
  5088   0022C6  056B               	decf	___flmul@temp& (0+255),w,b
  5089   0022C8  B0D8               	btfsc	status,0,c
  5090   0022CA  EF69  F011         	goto	u3531
  5091   0022CE  EF6B  F011         	goto	u3530
  5092   0022D2                     u3531:
  5093   0022D2  EF77  F011         	goto	l1189
  5094   0022D6                     u3530:
  5095   0022D6                     
  5096                           ; BSR set to: 0
  5097   0022D6  0E00               	movlw	0
  5098   0022D8  6F67               	movwf	___flmul@prod& (0+255),b
  5099   0022DA  0E00               	movlw	0
  5100   0022DC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5101   0022DE  0E00               	movlw	0
  5102   0022E0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5103   0022E2  0E00               	movlw	0
  5104   0022E4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5105   0022E6  0E00               	movlw	0
  5106   0022E8  6F60               	movwf	___flmul@sign& (0+255),b
  5107   0022EA  EF8C  F011         	goto	l3865
  5108   0022EE                     l1189:
  5109                           
  5110                           ; BSR set to: 0
  5111   0022EE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  5112   0022F2                     
  5113                           ; BSR set to: 0
  5114   0022F2  0EFF               	movlw	255
  5115   0022F4  1767               	andwf	___flmul@prod& (0+255),f,b
  5116   0022F6  0EFF               	movlw	255
  5117   0022F8  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  5118   0022FA  0E7F               	movlw	127
  5119   0022FC  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  5120   0022FE  0E00               	movlw	0
  5121   002300  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5122   002302                     
  5123                           ; BSR set to: 0
  5124   002302  A166               	btfss	___flmul@bexp& (0+255),0,b
  5125   002304  EF86  F011         	goto	u3541
  5126   002308  EF88  F011         	goto	u3540
  5127   00230C                     u3541:
  5128   00230C  EF89  F011         	goto	l3863
  5129   002310                     u3540:
  5130   002310                     
  5131                           ; BSR set to: 0
  5132   002310  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  5133   002312                     l3863:
  5134                           
  5135                           ; BSR set to: 0
  5136   002312  90D8               	bcf	status,0,c
  5137   002314  3166               	rrcf	___flmul@bexp& (0+255),w,b
  5138   002316  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5139   002318                     l3865:
  5140                           
  5141                           ; BSR set to: 0
  5142   002318  5160               	movf	___flmul@sign& (0+255),w,b
  5143   00231A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5144   00231C                     
  5145                           ; BSR set to: 0
  5146   00231C  C067  F04B         	movff	___flmul@prod,?___flmul
  5147   002320  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  5148   002324  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  5149   002328  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  5150   00232C                     l1176:
  5151                           
  5152                           ; BSR set to: 0
  5153   00232C  0012               	return		;funcret
  5154   00232E                     __end_of___flmul:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function ___fleq *****************
  5158 ;; Defined at:
  5159 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  ff1             4    0[COMRAM] unsigned char 
  5162 ;;  ff2             4    4[COMRAM] unsigned char 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;		None               void
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5174 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;Total ram usage:       12 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_RGB2Hue
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text23
  5188   003626                     __ptext23:
  5189                           	callstack 0
  5190   003626                     ___fleq:
  5191                           	callstack 29
  5192   003626  0E00               	movlw	0
  5193   003628  1401               	andwf	___fleq@ff1^0,w,c
  5194   00362A  6E09               	movwf	??___fleq^0,c
  5195   00362C  0E00               	movlw	0
  5196   00362E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5197   003630  6E0A               	movwf	(??___fleq+1)^0,c
  5198   003632  0E80               	movlw	128
  5199   003634  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5200   003636  6E0B               	movwf	(??___fleq+2)^0,c
  5201   003638  0E7F               	movlw	127
  5202   00363A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5203   00363C  6E0C               	movwf	(??___fleq+3)^0,c
  5204   00363E  5009               	movf	??___fleq^0,w,c
  5205   003640  100A               	iorwf	(??___fleq+1)^0,w,c
  5206   003642  100B               	iorwf	(??___fleq+2)^0,w,c
  5207   003644  100C               	iorwf	(??___fleq+3)^0,w,c
  5208   003646  A4D8               	btfss	status,2,c
  5209   003648  EF28  F01B         	goto	u3551
  5210   00364C  EF2A  F01B         	goto	u3550
  5211   003650                     u3551:
  5212   003650  EF32  F01B         	goto	l3881
  5213   003654                     u3550:
  5214   003654  0E00               	movlw	0
  5215   003656  6E01               	movwf	___fleq@ff1^0,c
  5216   003658  0E00               	movlw	0
  5217   00365A  6E02               	movwf	(___fleq@ff1+1)^0,c
  5218   00365C  0E00               	movlw	0
  5219   00365E  6E03               	movwf	(___fleq@ff1+2)^0,c
  5220   003660  0E00               	movlw	0
  5221   003662  6E04               	movwf	(___fleq@ff1+3)^0,c
  5222   003664                     l3881:
  5223   003664  0E00               	movlw	0
  5224   003666  1405               	andwf	___fleq@ff2^0,w,c
  5225   003668  6E09               	movwf	??___fleq^0,c
  5226   00366A  0E00               	movlw	0
  5227   00366C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5228   00366E  6E0A               	movwf	(??___fleq+1)^0,c
  5229   003670  0E80               	movlw	128
  5230   003672  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5231   003674  6E0B               	movwf	(??___fleq+2)^0,c
  5232   003676  0E7F               	movlw	127
  5233   003678  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5234   00367A  6E0C               	movwf	(??___fleq+3)^0,c
  5235   00367C  5009               	movf	??___fleq^0,w,c
  5236   00367E  100A               	iorwf	(??___fleq+1)^0,w,c
  5237   003680  100B               	iorwf	(??___fleq+2)^0,w,c
  5238   003682  100C               	iorwf	(??___fleq+3)^0,w,c
  5239   003684  A4D8               	btfss	status,2,c
  5240   003686  EF47  F01B         	goto	u3561
  5241   00368A  EF49  F01B         	goto	u3560
  5242   00368E                     u3561:
  5243   00368E  EF51  F01B         	goto	l3885
  5244   003692                     u3560:
  5245   003692  0E00               	movlw	0
  5246   003694  6E05               	movwf	___fleq@ff2^0,c
  5247   003696  0E00               	movlw	0
  5248   003698  6E06               	movwf	(___fleq@ff2+1)^0,c
  5249   00369A  0E00               	movlw	0
  5250   00369C  6E07               	movwf	(___fleq@ff2+2)^0,c
  5251   00369E  0E00               	movlw	0
  5252   0036A0  6E08               	movwf	(___fleq@ff2+3)^0,c
  5253   0036A2                     l3885:
  5254   0036A2  5005               	movf	___fleq@ff2^0,w,c
  5255   0036A4  1801               	xorwf	___fleq@ff1^0,w,c
  5256   0036A6  E10F               	bnz	u3570
  5257   0036A8  5006               	movf	(___fleq@ff2+1)^0,w,c
  5258   0036AA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5259   0036AC  E10C               	bnz	u3570
  5260   0036AE  5007               	movf	(___fleq@ff2+2)^0,w,c
  5261   0036B0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5262   0036B2  E109               	bnz	u3570
  5263   0036B4  5008               	movf	(___fleq@ff2+3)^0,w,c
  5264   0036B6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5265   0036B8  B4D8               	btfsc	status,2,c
  5266   0036BA  EF61  F01B         	goto	u3571
  5267   0036BE  EF63  F01B         	goto	u3570
  5268   0036C2                     u3571:
  5269   0036C2  EF66  F01B         	goto	l3889
  5270   0036C6                     u3570:
  5271   0036C6  90D8               	bcf	status,0,c
  5272   0036C8  EF67  F01B         	goto	l817
  5273   0036CC                     l3889:
  5274   0036CC  80D8               	bsf	status,0,c
  5275   0036CE                     l817:
  5276   0036CE  0012               	return		;funcret
  5277   0036D0                     __end_of___fleq:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function ___fldiv *****************
  5281 ;; Defined at:
  5282 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  b               4   49[COMRAM] unsigned char 
  5285 ;;  a               4   53[COMRAM] unsigned char 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  grs             4   68[COMRAM] unsigned long 
  5288 ;;  rem             4   61[COMRAM] unsigned long 
  5289 ;;  new_exp         2   66[COMRAM] short 
  5290 ;;  aexp            1   73[COMRAM] unsigned char 
  5291 ;;  bexp            1   72[COMRAM] unsigned char 
  5292 ;;  sign            1   65[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4   49[COMRAM] unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5303 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5305 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;Total ram usage:       25 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_RGB2Hue
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text24
  5316   00232E                     __ptext24:
  5317                           	callstack 0
  5318   00232E                     ___fldiv:
  5319                           	callstack 29
  5320   00232E  5035               	movf	(___fldiv@b+3)^0,w,c
  5321   002330  0B80               	andlw	128
  5322   002332  6E42               	movwf	___fldiv@sign^0,c
  5323   002334  5035               	movf	(___fldiv@b+3)^0,w,c
  5324   002336  2435               	addwf	(___fldiv@b+3)^0,w,c
  5325   002338  6E49               	movwf	___fldiv@bexp^0,c
  5326   00233A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5327   00233C  EFA2  F011         	goto	u3131
  5328   002340  EFA4  F011         	goto	u3130
  5329   002344                     u3131:
  5330   002344  EFA5  F011         	goto	l3609
  5331   002348                     u3130:
  5332   002348  8049               	bsf	___fldiv@bexp^0,0,c
  5333   00234A                     l3609:
  5334   00234A  5049               	movf	___fldiv@bexp^0,w,c
  5335   00234C  B4D8               	btfsc	status,2,c
  5336   00234E  EFAB  F011         	goto	u3141
  5337   002352  EFAD  F011         	goto	u3140
  5338   002356                     u3141:
  5339   002356  EFC2  F011         	goto	l3619
  5340   00235A                     u3140:
  5341   00235A  2849               	incf	___fldiv@bexp^0,w,c
  5342   00235C  A4D8               	btfss	status,2,c
  5343   00235E  EFB3  F011         	goto	u3151
  5344   002362  EFB5  F011         	goto	u3150
  5345   002366                     u3151:
  5346   002366  EFBD  F011         	goto	l3615
  5347   00236A                     u3150:
  5348   00236A  0E00               	movlw	0
  5349   00236C  6E32               	movwf	___fldiv@b^0,c
  5350   00236E  0E00               	movlw	0
  5351   002370  6E33               	movwf	(___fldiv@b+1)^0,c
  5352   002372  0E00               	movlw	0
  5353   002374  6E34               	movwf	(___fldiv@b+2)^0,c
  5354   002376  0E00               	movlw	0
  5355   002378  6E35               	movwf	(___fldiv@b+3)^0,c
  5356   00237A                     l3615:
  5357   00237A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5358   00237C  0E00               	movlw	0
  5359   00237E  6E35               	movwf	(___fldiv@b+3)^0,c
  5360   002380  EFCA  F011         	goto	l3621
  5361   002384                     l3619:
  5362   002384  0E00               	movlw	0
  5363   002386  6E32               	movwf	___fldiv@b^0,c
  5364   002388  0E00               	movlw	0
  5365   00238A  6E33               	movwf	(___fldiv@b+1)^0,c
  5366   00238C  0E00               	movlw	0
  5367   00238E  6E34               	movwf	(___fldiv@b+2)^0,c
  5368   002390  0E00               	movlw	0
  5369   002392  6E35               	movwf	(___fldiv@b+3)^0,c
  5370   002394                     l3621:
  5371   002394  5039               	movf	(___fldiv@a+3)^0,w,c
  5372   002396  0B80               	andlw	128
  5373   002398  1A42               	xorwf	___fldiv@sign^0,f,c
  5374   00239A  5039               	movf	(___fldiv@a+3)^0,w,c
  5375   00239C  2439               	addwf	(___fldiv@a+3)^0,w,c
  5376   00239E  6E4A               	movwf	___fldiv@aexp^0,c
  5377   0023A0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  5378   0023A2  EFD5  F011         	goto	u3161
  5379   0023A6  EFD7  F011         	goto	u3160
  5380   0023AA                     u3161:
  5381   0023AA  EFD8  F011         	goto	l3629
  5382   0023AE                     u3160:
  5383   0023AE  804A               	bsf	___fldiv@aexp^0,0,c
  5384   0023B0                     l3629:
  5385   0023B0  504A               	movf	___fldiv@aexp^0,w,c
  5386   0023B2  B4D8               	btfsc	status,2,c
  5387   0023B4  EFDE  F011         	goto	u3171
  5388   0023B8  EFE0  F011         	goto	u3170
  5389   0023BC                     u3171:
  5390   0023BC  EFF5  F011         	goto	l3639
  5391   0023C0                     u3170:
  5392   0023C0  284A               	incf	___fldiv@aexp^0,w,c
  5393   0023C2  A4D8               	btfss	status,2,c
  5394   0023C4  EFE6  F011         	goto	u3181
  5395   0023C8  EFE8  F011         	goto	u3180
  5396   0023CC                     u3181:
  5397   0023CC  EFF0  F011         	goto	l3635
  5398   0023D0                     u3180:
  5399   0023D0  0E00               	movlw	0
  5400   0023D2  6E36               	movwf	___fldiv@a^0,c
  5401   0023D4  0E00               	movlw	0
  5402   0023D6  6E37               	movwf	(___fldiv@a+1)^0,c
  5403   0023D8  0E00               	movlw	0
  5404   0023DA  6E38               	movwf	(___fldiv@a+2)^0,c
  5405   0023DC  0E00               	movlw	0
  5406   0023DE  6E39               	movwf	(___fldiv@a+3)^0,c
  5407   0023E0                     l3635:
  5408   0023E0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  5409   0023E2  0E00               	movlw	0
  5410   0023E4  6E39               	movwf	(___fldiv@a+3)^0,c
  5411   0023E6  EFFD  F011         	goto	l3641
  5412   0023EA                     l3639:
  5413   0023EA  0E00               	movlw	0
  5414   0023EC  6E36               	movwf	___fldiv@a^0,c
  5415   0023EE  0E00               	movlw	0
  5416   0023F0  6E37               	movwf	(___fldiv@a+1)^0,c
  5417   0023F2  0E00               	movlw	0
  5418   0023F4  6E38               	movwf	(___fldiv@a+2)^0,c
  5419   0023F6  0E00               	movlw	0
  5420   0023F8  6E39               	movwf	(___fldiv@a+3)^0,c
  5421   0023FA                     l3641:
  5422   0023FA  5036               	movf	___fldiv@a^0,w,c
  5423   0023FC  1037               	iorwf	(___fldiv@a+1)^0,w,c
  5424   0023FE  1038               	iorwf	(___fldiv@a+2)^0,w,c
  5425   002400  1039               	iorwf	(___fldiv@a+3)^0,w,c
  5426   002402  A4D8               	btfss	status,2,c
  5427   002404  EF06  F012         	goto	u3191
  5428   002408  EF08  F012         	goto	u3190
  5429   00240C                     u3191:
  5430   00240C  EF20  F012         	goto	l3653
  5431   002410                     u3190:
  5432   002410  0E00               	movlw	0
  5433   002412  6E32               	movwf	___fldiv@b^0,c
  5434   002414  0E00               	movlw	0
  5435   002416  6E33               	movwf	(___fldiv@b+1)^0,c
  5436   002418  0E00               	movlw	0
  5437   00241A  6E34               	movwf	(___fldiv@b+2)^0,c
  5438   00241C  0E00               	movlw	0
  5439   00241E  6E35               	movwf	(___fldiv@b+3)^0,c
  5440   002420  0E80               	movlw	128
  5441   002422  1234               	iorwf	(___fldiv@b+2)^0,f,c
  5442   002424  0E7F               	movlw	127
  5443   002426  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5444   002428                     l3647:
  5445   002428  5042               	movf	___fldiv@sign^0,w,c
  5446   00242A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5447   00242C  C032  F032         	movff	___fldiv@b,?___fldiv
  5448   002430  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  5449   002434  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  5450   002438  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  5451   00243C  EF63  F013         	goto	l1140
  5452   002440                     l3653:
  5453   002440  5049               	movf	___fldiv@bexp^0,w,c
  5454   002442  A4D8               	btfss	status,2,c
  5455   002444  EF26  F012         	goto	u3201
  5456   002448  EF28  F012         	goto	u3200
  5457   00244C                     u3201:
  5458   00244C  EF32  F012         	goto	l3661
  5459   002450                     u3200:
  5460   002450  0E00               	movlw	0
  5461   002452  6E32               	movwf	?___fldiv^0,c
  5462   002454  0E00               	movlw	0
  5463   002456  6E33               	movwf	(?___fldiv+1)^0,c
  5464   002458  0E00               	movlw	0
  5465   00245A  6E34               	movwf	(?___fldiv+2)^0,c
  5466   00245C  0E00               	movlw	0
  5467   00245E  6E35               	movwf	(?___fldiv+3)^0,c
  5468   002460  EF63  F013         	goto	l1140
  5469   002464                     l3661:
  5470   002464  504A               	movf	___fldiv@aexp^0,w,c
  5471   002466  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  5472   00246A  6A3B               	clrf	(??___fldiv+1)^0,c
  5473   00246C  5E3A               	subwf	??___fldiv^0,f,c
  5474   00246E  0E00               	movlw	0
  5475   002470  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  5476   002472  0E7F               	movlw	127
  5477   002474  243A               	addwf	??___fldiv^0,w,c
  5478   002476  6E43               	movwf	___fldiv@new_exp^0,c
  5479   002478  0E00               	movlw	0
  5480   00247A  203B               	addwfc	(??___fldiv+1)^0,w,c
  5481   00247C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5482   00247E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  5483   002482  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  5484   002486  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  5485   00248A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  5486   00248E  0E00               	movlw	0
  5487   002490  6E32               	movwf	___fldiv@b^0,c
  5488   002492  0E00               	movlw	0
  5489   002494  6E33               	movwf	(___fldiv@b+1)^0,c
  5490   002496  0E00               	movlw	0
  5491   002498  6E34               	movwf	(___fldiv@b+2)^0,c
  5492   00249A  0E00               	movlw	0
  5493   00249C  6E35               	movwf	(___fldiv@b+3)^0,c
  5494   00249E  0E00               	movlw	0
  5495   0024A0  6E45               	movwf	___fldiv@grs^0,c
  5496   0024A2  0E00               	movlw	0
  5497   0024A4  6E46               	movwf	(___fldiv@grs+1)^0,c
  5498   0024A6  0E00               	movlw	0
  5499   0024A8  6E47               	movwf	(___fldiv@grs+2)^0,c
  5500   0024AA  0E00               	movlw	0
  5501   0024AC  6E48               	movwf	(___fldiv@grs+3)^0,c
  5502   0024AE  0E00               	movlw	0
  5503   0024B0  6E4A               	movwf	___fldiv@aexp^0,c
  5504   0024B2  EF93  F012         	goto	l1142
  5505   0024B6                     l3671:
  5506   0024B6  504A               	movf	___fldiv@aexp^0,w,c
  5507   0024B8  B4D8               	btfsc	status,2,c
  5508   0024BA  EF61  F012         	goto	u3211
  5509   0024BE  EF63  F012         	goto	u3210
  5510   0024C2                     u3211:
  5511   0024C2  EF7A  F012         	goto	l3679
  5512   0024C6                     u3210:
  5513   0024C6  90D8               	bcf	status,0,c
  5514   0024C8  363E               	rlcf	___fldiv@rem^0,f,c
  5515   0024CA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  5516   0024CC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  5517   0024CE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  5518   0024D0  90D8               	bcf	status,0,c
  5519   0024D2  3632               	rlcf	___fldiv@b^0,f,c
  5520   0024D4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5521   0024D6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5522   0024D8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5523   0024DA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5524   0024DC  EF72  F012         	goto	u3221
  5525   0024E0  EF74  F012         	goto	u3220
  5526   0024E4                     u3221:
  5527   0024E4  EF75  F012         	goto	l1145
  5528   0024E8                     u3220:
  5529   0024E8  8032               	bsf	___fldiv@b^0,0,c
  5530   0024EA                     l1145:
  5531   0024EA  90D8               	bcf	status,0,c
  5532   0024EC  3645               	rlcf	___fldiv@grs^0,f,c
  5533   0024EE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5534   0024F0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5535   0024F2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5536   0024F4                     l3679:
  5537   0024F4  5036               	movf	___fldiv@a^0,w,c
  5538   0024F6  5C3E               	subwf	___fldiv@rem^0,w,c
  5539   0024F8  5037               	movf	(___fldiv@a+1)^0,w,c
  5540   0024FA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  5541   0024FC  5038               	movf	(___fldiv@a+2)^0,w,c
  5542   0024FE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  5543   002500  5039               	movf	(___fldiv@a+3)^0,w,c
  5544   002502  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  5545   002504  A0D8               	btfss	status,0,c
  5546   002506  EF87  F012         	goto	u3231
  5547   00250A  EF89  F012         	goto	u3230
  5548   00250E                     u3231:
  5549   00250E  EF92  F012         	goto	l3685
  5550   002512                     u3230:
  5551   002512  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  5552   002514  5036               	movf	___fldiv@a^0,w,c
  5553   002516  5E3E               	subwf	___fldiv@rem^0,f,c
  5554   002518  5037               	movf	(___fldiv@a+1)^0,w,c
  5555   00251A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  5556   00251C  5038               	movf	(___fldiv@a+2)^0,w,c
  5557   00251E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  5558   002520  5039               	movf	(___fldiv@a+3)^0,w,c
  5559   002522  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  5560   002524                     l3685:
  5561   002524  2A4A               	incf	___fldiv@aexp^0,f,c
  5562   002526                     l1142:
  5563   002526  0E19               	movlw	25
  5564   002528  644A               	cpfsgt	___fldiv@aexp^0,c
  5565   00252A  EF99  F012         	goto	u3241
  5566   00252E  EF9B  F012         	goto	u3240
  5567   002532                     u3241:
  5568   002532  EF5B  F012         	goto	l3671
  5569   002536                     u3240:
  5570   002536  503E               	movf	___fldiv@rem^0,w,c
  5571   002538  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  5572   00253A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  5573   00253C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  5574   00253E  B4D8               	btfsc	status,2,c
  5575   002540  EFA4  F012         	goto	u3251
  5576   002544  EFA6  F012         	goto	u3250
  5577   002548                     u3251:
  5578   002548  EFBE  F012         	goto	l3697
  5579   00254C                     u3250:
  5580   00254C  8045               	bsf	___fldiv@grs^0,0,c
  5581   00254E  EFBE  F012         	goto	l3697
  5582   002552                     l3691:
  5583   002552  90D8               	bcf	status,0,c
  5584   002554  3632               	rlcf	___fldiv@b^0,f,c
  5585   002556  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5586   002558  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5587   00255A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5588   00255C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5589   00255E  EFB3  F012         	goto	u3261
  5590   002562  EFB5  F012         	goto	u3260
  5591   002566                     u3261:
  5592   002566  EFB6  F012         	goto	l1151
  5593   00256A                     u3260:
  5594   00256A  8032               	bsf	___fldiv@b^0,0,c
  5595   00256C                     l1151:
  5596   00256C  90D8               	bcf	status,0,c
  5597   00256E  3645               	rlcf	___fldiv@grs^0,f,c
  5598   002570  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5599   002572  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5600   002574  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5601   002576  0643               	decf	___fldiv@new_exp^0,f,c
  5602   002578  A0D8               	btfss	status,0,c
  5603   00257A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  5604   00257C                     l3697:
  5605   00257C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5606   00257E  EFC3  F012         	goto	u3271
  5607   002582  EFC5  F012         	goto	u3270
  5608   002586                     u3271:
  5609   002586  EFA9  F012         	goto	l3691
  5610   00258A                     u3270:
  5611   00258A  0E00               	movlw	0
  5612   00258C  6E4A               	movwf	___fldiv@aexp^0,c
  5613   00258E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5614   002590  EFCC  F012         	goto	u3281
  5615   002594  EFCE  F012         	goto	u3280
  5616   002598                     u3281:
  5617   002598  EFF2  F012         	goto	l1153
  5618   00259C                     u3280:
  5619   00259C  0EFF               	movlw	255
  5620   00259E  1445               	andwf	___fldiv@grs^0,w,c
  5621   0025A0  6E3A               	movwf	??___fldiv^0,c
  5622   0025A2  0EFF               	movlw	255
  5623   0025A4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  5624   0025A6  6E3B               	movwf	(??___fldiv+1)^0,c
  5625   0025A8  0EFF               	movlw	255
  5626   0025AA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  5627   0025AC  6E3C               	movwf	(??___fldiv+2)^0,c
  5628   0025AE  0E7F               	movlw	127
  5629   0025B0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  5630   0025B2  6E3D               	movwf	(??___fldiv+3)^0,c
  5631   0025B4  503A               	movf	??___fldiv^0,w,c
  5632   0025B6  103B               	iorwf	(??___fldiv+1)^0,w,c
  5633   0025B8  103C               	iorwf	(??___fldiv+2)^0,w,c
  5634   0025BA  103D               	iorwf	(??___fldiv+3)^0,w,c
  5635   0025BC  B4D8               	btfsc	status,2,c
  5636   0025BE  EFE3  F012         	goto	u3291
  5637   0025C2  EFE5  F012         	goto	u3290
  5638   0025C6                     u3291:
  5639   0025C6  EFE9  F012         	goto	l1154
  5640   0025CA                     u3290:
  5641   0025CA                     l3705:
  5642   0025CA  0E01               	movlw	1
  5643   0025CC  6E4A               	movwf	___fldiv@aexp^0,c
  5644   0025CE  EFF2  F012         	goto	l1153
  5645   0025D2                     l1154:
  5646   0025D2  A032               	btfss	___fldiv@b^0,0,c
  5647   0025D4  EFEE  F012         	goto	u3301
  5648   0025D8  EFF0  F012         	goto	u3300
  5649   0025DC                     u3301:
  5650   0025DC  EFF2  F012         	goto	l1153
  5651   0025E0                     u3300:
  5652   0025E0  EFE5  F012         	goto	l3705
  5653   0025E4                     l1153:
  5654   0025E4  504A               	movf	___fldiv@aexp^0,w,c
  5655   0025E6  B4D8               	btfsc	status,2,c
  5656   0025E8  EFF8  F012         	goto	u3311
  5657   0025EC  EFFA  F012         	goto	u3310
  5658   0025F0                     u3311:
  5659   0025F0  EF1E  F013         	goto	l3717
  5660   0025F4                     u3310:
  5661   0025F4  0E01               	movlw	1
  5662   0025F6  2632               	addwf	___fldiv@b^0,f,c
  5663   0025F8  0E00               	movlw	0
  5664   0025FA  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5665   0025FC  2234               	addwfc	(___fldiv@b+2)^0,f,c
  5666   0025FE  2235               	addwfc	(___fldiv@b+3)^0,f,c
  5667   002600  A035               	btfss	(___fldiv@b+3)^0,0,c
  5668   002602  EF05  F013         	goto	u3321
  5669   002606  EF07  F013         	goto	u3320
  5670   00260A                     u3321:
  5671   00260A  EF1E  F013         	goto	l3717
  5672   00260E                     u3320:
  5673   00260E  C032  F03A         	movff	___fldiv@b,??___fldiv
  5674   002612  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  5675   002616  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  5676   00261A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  5677   00261E  343D               	rlcf	(??___fldiv+3)^0,w,c
  5678   002620  323D               	rrcf	(??___fldiv+3)^0,f,c
  5679   002622  323C               	rrcf	(??___fldiv+2)^0,f,c
  5680   002624  323B               	rrcf	(??___fldiv+1)^0,f,c
  5681   002626  323A               	rrcf	??___fldiv^0,f,c
  5682   002628  C03A  F032         	movff	??___fldiv,___fldiv@b
  5683   00262C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  5684   002630  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  5685   002634  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  5686   002638  4A43               	infsnz	___fldiv@new_exp^0,f,c
  5687   00263A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  5688   00263C                     l3717:
  5689   00263C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5690   00263E  EF29  F013         	goto	u3331
  5691   002642  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5692   002644  E108               	bnz	u3330
  5693   002646  2843               	incf	___fldiv@new_exp^0,w,c
  5694   002648  A0D8               	btfss	status,0,c
  5695   00264A  EF29  F013         	goto	u3331
  5696   00264E  EF2B  F013         	goto	u3330
  5697   002652                     u3331:
  5698   002652  EF36  F013         	goto	l3721
  5699   002656                     u3330:
  5700   002656  0E00               	movlw	0
  5701   002658  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5702   00265A  6843               	setf	___fldiv@new_exp^0,c
  5703   00265C  0E00               	movlw	0
  5704   00265E  6E32               	movwf	___fldiv@b^0,c
  5705   002660  0E00               	movlw	0
  5706   002662  6E33               	movwf	(___fldiv@b+1)^0,c
  5707   002664  0E00               	movlw	0
  5708   002666  6E34               	movwf	(___fldiv@b+2)^0,c
  5709   002668  0E00               	movlw	0
  5710   00266A  6E35               	movwf	(___fldiv@b+3)^0,c
  5711   00266C                     l3721:
  5712   00266C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5713   00266E  EF43  F013         	goto	u3340
  5714   002672  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5715   002674  E106               	bnz	u3341
  5716   002676  0443               	decf	___fldiv@new_exp^0,w,c
  5717   002678  B0D8               	btfsc	status,0,c
  5718   00267A  EF41  F013         	goto	u3341
  5719   00267E  EF43  F013         	goto	u3340
  5720   002682                     u3341:
  5721   002682  EF51  F013         	goto	l3725
  5722   002686                     u3340:
  5723   002686  0E00               	movlw	0
  5724   002688  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5725   00268A  0E00               	movlw	0
  5726   00268C  6E43               	movwf	___fldiv@new_exp^0,c
  5727   00268E  0E00               	movlw	0
  5728   002690  6E32               	movwf	___fldiv@b^0,c
  5729   002692  0E00               	movlw	0
  5730   002694  6E33               	movwf	(___fldiv@b+1)^0,c
  5731   002696  0E00               	movlw	0
  5732   002698  6E34               	movwf	(___fldiv@b+2)^0,c
  5733   00269A  0E00               	movlw	0
  5734   00269C  6E35               	movwf	(___fldiv@b+3)^0,c
  5735   00269E  0E00               	movlw	0
  5736   0026A0  6E42               	movwf	___fldiv@sign^0,c
  5737   0026A2                     l3725:
  5738   0026A2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  5739   0026A6  A049               	btfss	___fldiv@bexp^0,0,c
  5740   0026A8  EF58  F013         	goto	u3351
  5741   0026AC  EF5A  F013         	goto	u3350
  5742   0026B0                     u3351:
  5743   0026B0  EF5D  F013         	goto	l3731
  5744   0026B4                     u3350:
  5745   0026B4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5746   0026B6  EF5E  F013         	goto	l3733
  5747   0026BA                     l3731:
  5748   0026BA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  5749   0026BC                     l3733:
  5750   0026BC  90D8               	bcf	status,0,c
  5751   0026BE  3049               	rrcf	___fldiv@bexp^0,w,c
  5752   0026C0  6E35               	movwf	(___fldiv@b+3)^0,c
  5753   0026C2  EF14  F012         	goto	l3647
  5754   0026C6                     l1140:
  5755   0026C6  0012               	return		;funcret
  5756   0026C8                     __end_of___fldiv:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _LED_init *****************
  5760 ;; Defined at:
  5761 ;;		line 4 in file "LED.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		None
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text25
  5789   0043DC                     __ptext25:
  5790                           	callstack 0
  5791   0043DC                     _LED_init:
  5792                           	callstack 30
  5793   0043DC                     
  5794                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5795   0043DC  9884               	bcf	132,4,c	;volatile
  5796                           
  5797                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5798   0043DE  9088               	bcf	136,0,c	;volatile
  5799                           
  5800                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5801   0043E0  9086               	bcf	134,0,c	;volatile
  5802                           
  5803                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5804   0043E2  987C               	bcf	124,4,c	;volatile
  5805                           
  5806                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5807   0043E4  9080               	bcf	128,0,c	;volatile
  5808                           
  5809                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5810   0043E6  907E               	bcf	126,0,c	;volatile
  5811   0043E8  0012               	return		;funcret
  5812   0043EA                     __end_of_LED_init:
  5813                           	callstack 0
  5814                           
  5815 ;; *************** function _Colour2Action *****************
  5816 ;; Defined at:
  5817 ;;		line 105 in file "colorfunctions.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  cf              2   39[COMRAM] PTR struct RGBC_rel
  5820 ;;		 -> colorf(22), 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;Total ram usage:        4 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 6
  5839 ;; This function calls:
  5840 ;;		_Blue_T180
  5841 ;;		_Green_L90
  5842 ;;		_LightBlue_L135
  5843 ;;		_Orange_R135
  5844 ;;		_Pink_rev1_L90
  5845 ;;		_Red_R90
  5846 ;;		_Yellow_rev1_R90
  5847 ;; This function is called by:
  5848 ;;		_main
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text26
  5853   002A3E                     __ptext26:
  5854                           	callstack 0
  5855   002A3E                     _Colour2Action:
  5856                           	callstack 24
  5857   002A3E                     
  5858                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  5859   002A3E  EE20 F014          	lfsr	2,20
  5860   002A42  5028               	movf	Colour2Action@cf^0,w,c
  5861   002A44  26D9               	addwf	fsr2l,f,c
  5862   002A46  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5863   002A48  22DA               	addwfc	fsr2h,f,c
  5864   002A4A  50DE               	movf	postinc2,w,c
  5865   002A4C  10DE               	iorwf	postinc2,w,c
  5866   002A4E  A4D8               	btfss	status,2,c
  5867   002A50  EF2C  F015         	goto	u3881
  5868   002A54  EF2E  F015         	goto	u3880
  5869   002A58                     u3881:
  5870   002A58  EF3A  F015         	goto	l4071
  5871   002A5C                     u3880:
  5872   002A5C                     
  5873                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  5874   002A5C  0EE8               	movlw	low _motorL
  5875   002A5E  6E21               	movwf	Red_R90@mL^0,c
  5876   002A60  0E00               	movlw	high _motorL
  5877   002A62  6E22               	movwf	(Red_R90@mL+1)^0,c
  5878   002A64  0EDF               	movlw	low _motorR
  5879   002A66  6E23               	movwf	Red_R90@mR^0,c
  5880   002A68  0E00               	movlw	high _motorR
  5881   002A6A  6E24               	movwf	(Red_R90@mR+1)^0,c
  5882   002A6C  EC39  F01E         	call	_Red_R90	;wreg free
  5883                           
  5884                           ;colorfunctions.c: 110:     }
  5885   002A70  EFE1  F015         	goto	l144
  5886   002A74                     l4071:
  5887   002A74  EE20 F014          	lfsr	2,20
  5888   002A78  5028               	movf	Colour2Action@cf^0,w,c
  5889   002A7A  26D9               	addwf	fsr2l,f,c
  5890   002A7C  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5891   002A7E  22DA               	addwfc	fsr2h,f,c
  5892   002A80  04DE               	decf	postinc2,w,c
  5893   002A82  10DE               	iorwf	postinc2,w,c
  5894   002A84  A4D8               	btfss	status,2,c
  5895   002A86  EF47  F015         	goto	u3891
  5896   002A8A  EF49  F015         	goto	u3890
  5897   002A8E                     u3891:
  5898   002A8E  EF55  F015         	goto	l4075
  5899   002A92                     u3890:
  5900   002A92                     
  5901                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  5902   002A92  0EE8               	movlw	low _motorL
  5903   002A94  6E21               	movwf	Green_L90@mL^0,c
  5904   002A96  0E00               	movlw	high _motorL
  5905   002A98  6E22               	movwf	(Green_L90@mL+1)^0,c
  5906   002A9A  0EDF               	movlw	low _motorR
  5907   002A9C  6E23               	movwf	Green_L90@mR^0,c
  5908   002A9E  0E00               	movlw	high _motorR
  5909   002AA0  6E24               	movwf	(Green_L90@mR+1)^0,c
  5910   002AA2  ECB7  F01E         	call	_Green_L90	;wreg free
  5911                           
  5912                           ;colorfunctions.c: 114:     }
  5913   002AA6  EFE1  F015         	goto	l144
  5914   002AAA                     l4075:
  5915   002AAA  EE20 F014          	lfsr	2,20
  5916   002AAE  5028               	movf	Colour2Action@cf^0,w,c
  5917   002AB0  26D9               	addwf	fsr2l,f,c
  5918   002AB2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5919   002AB4  22DA               	addwfc	fsr2h,f,c
  5920   002AB6  0E02               	movlw	2
  5921   002AB8  18DE               	xorwf	postinc2,w,c
  5922   002ABA  10DE               	iorwf	postinc2,w,c
  5923   002ABC  A4D8               	btfss	status,2,c
  5924   002ABE  EF63  F015         	goto	u3901
  5925   002AC2  EF65  F015         	goto	u3900
  5926   002AC6                     u3901:
  5927   002AC6  EF71  F015         	goto	l4079
  5928   002ACA                     u3900:
  5929   002ACA                     
  5930                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  5931   002ACA  0EE8               	movlw	low _motorL
  5932   002ACC  6E24               	movwf	Blue_T180@mL^0,c
  5933   002ACE  0E00               	movlw	high _motorL
  5934   002AD0  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5935   002AD2  0EDF               	movlw	low _motorR
  5936   002AD4  6E26               	movwf	Blue_T180@mR^0,c
  5937   002AD6  0E00               	movlw	high _motorR
  5938   002AD8  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5939   002ADA  EC30  F01F         	call	_Blue_T180	;wreg free
  5940                           
  5941                           ;colorfunctions.c: 118:     }
  5942   002ADE  EFE1  F015         	goto	l144
  5943   002AE2                     l4079:
  5944   002AE2  EE20 F014          	lfsr	2,20
  5945   002AE6  5028               	movf	Colour2Action@cf^0,w,c
  5946   002AE8  26D9               	addwf	fsr2l,f,c
  5947   002AEA  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5948   002AEC  22DA               	addwfc	fsr2h,f,c
  5949   002AEE  0E03               	movlw	3
  5950   002AF0  18DE               	xorwf	postinc2,w,c
  5951   002AF2  10DE               	iorwf	postinc2,w,c
  5952   002AF4  A4D8               	btfss	status,2,c
  5953   002AF6  EF7F  F015         	goto	u3911
  5954   002AFA  EF81  F015         	goto	u3910
  5955   002AFE                     u3911:
  5956   002AFE  EF8D  F015         	goto	l4083
  5957   002B02                     u3910:
  5958   002B02                     
  5959                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5960   002B02  0EE8               	movlw	low _motorL
  5961   002B04  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5962   002B06  0E00               	movlw	high _motorL
  5963   002B08  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5964   002B0A  0EDF               	movlw	low _motorR
  5965   002B0C  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5966   002B0E  0E00               	movlw	high _motorR
  5967   002B10  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5968   002B12  EC6B  F019         	call	_Yellow_rev1_R90	;wreg free
  5969                           
  5970                           ;colorfunctions.c: 122:     }
  5971   002B16  EFE1  F015         	goto	l144
  5972   002B1A                     l4083:
  5973   002B1A  EE20 F014          	lfsr	2,20
  5974   002B1E  5028               	movf	Colour2Action@cf^0,w,c
  5975   002B20  26D9               	addwf	fsr2l,f,c
  5976   002B22  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5977   002B24  22DA               	addwfc	fsr2h,f,c
  5978   002B26  0E04               	movlw	4
  5979   002B28  18DE               	xorwf	postinc2,w,c
  5980   002B2A  10DE               	iorwf	postinc2,w,c
  5981   002B2C  A4D8               	btfss	status,2,c
  5982   002B2E  EF9B  F015         	goto	u3921
  5983   002B32  EF9D  F015         	goto	u3920
  5984   002B36                     u3921:
  5985   002B36  EFA9  F015         	goto	l4087
  5986   002B3A                     u3920:
  5987   002B3A                     
  5988                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5989   002B3A  0EE8               	movlw	low _motorL
  5990   002B3C  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5991   002B3E  0E00               	movlw	high _motorL
  5992   002B40  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5993   002B42  0EDF               	movlw	low _motorR
  5994   002B44  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5995   002B46  0E00               	movlw	high _motorR
  5996   002B48  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5997   002B4A  EC78  F01E         	call	_Pink_rev1_L90	;wreg free
  5998                           
  5999                           ;colorfunctions.c: 126:     }
  6000   002B4E  EFE1  F015         	goto	l144
  6001   002B52                     l4087:
  6002   002B52  EE20 F014          	lfsr	2,20
  6003   002B56  5028               	movf	Colour2Action@cf^0,w,c
  6004   002B58  26D9               	addwf	fsr2l,f,c
  6005   002B5A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6006   002B5C  22DA               	addwfc	fsr2h,f,c
  6007   002B5E  0E05               	movlw	5
  6008   002B60  18DE               	xorwf	postinc2,w,c
  6009   002B62  10DE               	iorwf	postinc2,w,c
  6010   002B64  A4D8               	btfss	status,2,c
  6011   002B66  EFB7  F015         	goto	u3931
  6012   002B6A  EFB9  F015         	goto	u3930
  6013   002B6E                     u3931:
  6014   002B6E  EFC5  F015         	goto	l4091
  6015   002B72                     u3930:
  6016   002B72                     
  6017                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  6018   002B72  0EE8               	movlw	low _motorL
  6019   002B74  6E21               	movwf	Orange_R135@mL^0,c
  6020   002B76  0E00               	movlw	high _motorL
  6021   002B78  6E22               	movwf	(Orange_R135@mL+1)^0,c
  6022   002B7A  0EDF               	movlw	low _motorR
  6023   002B7C  6E23               	movwf	Orange_R135@mR^0,c
  6024   002B7E  0E00               	movlw	high _motorR
  6025   002B80  6E24               	movwf	(Orange_R135@mR+1)^0,c
  6026   002B82  ECB6  F01A         	call	_Orange_R135	;wreg free
  6027                           
  6028                           ;colorfunctions.c: 130:     }
  6029   002B86  EFE1  F015         	goto	l144
  6030   002B8A                     l4091:
  6031   002B8A  EE20 F014          	lfsr	2,20
  6032   002B8E  5028               	movf	Colour2Action@cf^0,w,c
  6033   002B90  26D9               	addwf	fsr2l,f,c
  6034   002B92  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6035   002B94  22DA               	addwfc	fsr2h,f,c
  6036   002B96  0E06               	movlw	6
  6037   002B98  18DE               	xorwf	postinc2,w,c
  6038   002B9A  10DE               	iorwf	postinc2,w,c
  6039   002B9C  A4D8               	btfss	status,2,c
  6040   002B9E  EFD3  F015         	goto	u3941
  6041   002BA2  EFD5  F015         	goto	u3940
  6042   002BA6                     u3941:
  6043   002BA6  EFE1  F015         	goto	l138
  6044   002BAA                     u3940:
  6045   002BAA                     
  6046                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  6047   002BAA  0EE8               	movlw	low _motorL
  6048   002BAC  6E21               	movwf	LightBlue_L135@mL^0,c
  6049   002BAE  0E00               	movlw	high _motorL
  6050   002BB0  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  6051   002BB2  0EDF               	movlw	low _motorR
  6052   002BB4  6E23               	movwf	LightBlue_L135@mR^0,c
  6053   002BB6  0E00               	movlw	high _motorR
  6054   002BB8  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  6055   002BBA  EC68  F01B         	call	_LightBlue_L135	;wreg free
  6056   002BBE  EFE1  F015         	goto	l144
  6057   002BC2                     l138:
  6058   002BC2                     l144:
  6059   002BC2  0012               	return		;funcret
  6060   002BC4                     __end_of_Colour2Action:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _Yellow_rev1_R90 *****************
  6064 ;; Defined at:
  6065 ;;		line 269 in file "dc_motor.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6068 ;;		 -> motorL(9), 
  6069 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6070 ;;		 -> motorR(9), 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;Total ram usage:        6 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 4
  6089 ;; This function calls:
  6090 ;;		_Left45
  6091 ;;		_Right45
  6092 ;;		_TimerReset
  6093 ;;		_fullSpeedAhead
  6094 ;;		_fullSpeedReverse
  6095 ;;		_reverseHalfSquare
  6096 ;;		_stop
  6097 ;; This function is called by:
  6098 ;;		_Colour2Action
  6099 ;;		_White
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text27
  6104   0032D6                     __ptext27:
  6105                           	callstack 0
  6106   0032D6                     _Yellow_rev1_R90:
  6107                           	callstack 25
  6108   0032D6                     
  6109                           ;dc_motor.c: 269: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 270: {;dc_motor.c: 271:     if (ForwardFlag){
  6110   0032D6  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6111   0032D8  B4D8               	btfsc	status,2,c
  6112   0032DA  EF71  F019         	goto	u3081
  6113   0032DE  EF73  F019         	goto	u3080
  6114   0032E2                     u3081:
  6115   0032E2  EFB5  F019         	goto	l3541
  6116   0032E6                     u3080:
  6117   0032E6                     
  6118                           ;dc_motor.c: 272:         reverseHalfSquare(mL,mR);
  6119   0032E6  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  6120   0032EA  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  6121   0032EE  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  6122   0032F2  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  6123   0032F6  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6124                           
  6125                           ;dc_motor.c: 274:         fullSpeedReverse(mL,mR);
  6126   0032FA  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  6127   0032FE  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  6128   003302  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  6129   003306  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  6130   00330A  ECF9  F01D         	call	_fullSpeedReverse	;wreg free
  6131   00330E                     
  6132                           ;dc_motor.c: 275:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6133   00330E  0E39               	movlw	57
  6134   003310  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6135   003312  0ED2               	movlw	210
  6136   003314  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6137   003316  0E4C               	movlw	76
  6138   003318                     u4107:
  6139   003318  2EE8               	decfsz	wreg,f,c
  6140   00331A  D7FE               	bra	u4107
  6141   00331C  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6142   00331E  D7FC               	bra	u4107
  6143   003320  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6144   003322  D7FA               	bra	u4107
  6145   003324  D000               	nop2	
  6146   003326                     
  6147                           ;dc_motor.c: 277:         Right45(mL,mR);
  6148   003326  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6149   00332A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6150   00332E  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6151   003332  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6152   003336  ECEC  F01C         	call	_Right45	;wreg free
  6153   00333A                     
  6154                           ;dc_motor.c: 278:         Right45(mL,mR);
  6155   00333A  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6156   00333E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6157   003342  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6158   003346  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6159   00334A  ECEC  F01C         	call	_Right45	;wreg free
  6160   00334E                     
  6161                           ;dc_motor.c: 279:         TimerReset();
  6162   00334E  EC0A  F022         	call	_TimerReset	;wreg free
  6163   003352                     l3539:
  6164                           
  6165                           ;dc_motor.c: 280:         stop(mL,mR);
  6166   003352  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  6167   003356  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  6168   00335A  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  6169   00335E  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  6170   003362  ECBB  F01B         	call	_stop	;wreg free
  6171                           
  6172                           ;dc_motor.c: 281:     }
  6173   003366  EFE1  F019         	goto	l490
  6174   00336A                     l3541:
  6175                           
  6176                           ;dc_motor.c: 284:         Left45(mL,mR);
  6177   00336A  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6178   00336E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6179   003372  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6180   003376  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6181   00337A  EC31  F01D         	call	_Left45	;wreg free
  6182                           
  6183                           ;dc_motor.c: 285:         Left45(mL,mR);
  6184   00337E  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6185   003382  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6186   003386  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6187   00338A  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6188   00338E  EC31  F01D         	call	_Left45	;wreg free
  6189                           
  6190                           ;dc_motor.c: 286:         fullSpeedAhead(mL,mR);
  6191   003392  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  6192   003396  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  6193   00339A  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  6194   00339E  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  6195   0033A2  ECB9  F01D         	call	_fullSpeedAhead	;wreg free
  6196   0033A6                     
  6197                           ;dc_motor.c: 287:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6198   0033A6  0E39               	movlw	57
  6199   0033A8  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6200   0033AA  0ED2               	movlw	210
  6201   0033AC  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6202   0033AE  0E4C               	movlw	76
  6203   0033B0                     u4117:
  6204   0033B0  2EE8               	decfsz	wreg,f,c
  6205   0033B2  D7FE               	bra	u4117
  6206   0033B4  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6207   0033B6  D7FC               	bra	u4117
  6208   0033B8  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6209   0033BA  D7FA               	bra	u4117
  6210   0033BC  D000               	nop2	
  6211   0033BE  EFA9  F019         	goto	l3539
  6212   0033C2                     l490:
  6213   0033C2  0012               	return		;funcret
  6214   0033C4                     __end_of_Yellow_rev1_R90:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _Red_R90 *****************
  6218 ;; Defined at:
  6219 ;;		line 226 in file "dc_motor.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6222 ;;		 -> motorL(9), 
  6223 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6224 ;;		 -> motorR(9), 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;Total ram usage:        4 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 4
  6243 ;; This function calls:
  6244 ;;		_Left45
  6245 ;;		_Right45
  6246 ;;		_TimerReset
  6247 ;;		_reverseHalfSquare
  6248 ;; This function is called by:
  6249 ;;		_Colour2Action
  6250 ;;		_White
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text28
  6255   003C72                     __ptext28:
  6256                           	callstack 0
  6257   003C72                     _Red_R90:
  6258                           	callstack 25
  6259   003C72                     
  6260                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  6261   003C72  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6262   003C74  B4D8               	btfsc	status,2,c
  6263   003C76  EF3F  F01E         	goto	u3051
  6264   003C7A  EF41  F01E         	goto	u3050
  6265   003C7E                     u3051:
  6266   003C7E  EF63  F01E         	goto	l3509
  6267   003C82                     u3050:
  6268   003C82                     
  6269                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  6270   003C82  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  6271   003C86  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  6272   003C8A  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  6273   003C8E  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  6274   003C92  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6275                           
  6276                           ;dc_motor.c: 230:         Right45(mL,mR);
  6277   003C96  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6278   003C9A  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6279   003C9E  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6280   003CA2  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6281   003CA6  ECEC  F01C         	call	_Right45	;wreg free
  6282                           
  6283                           ;dc_motor.c: 231:         Right45(mL,mR);
  6284   003CAA  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6285   003CAE  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6286   003CB2  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6287   003CB6  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6288   003CBA  ECEC  F01C         	call	_Right45	;wreg free
  6289   003CBE                     
  6290                           ;dc_motor.c: 232:         TimerReset();
  6291   003CBE  EC0A  F022         	call	_TimerReset	;wreg free
  6292                           
  6293                           ;dc_motor.c: 233:     }
  6294   003CC2  EF77  F01E         	goto	l475
  6295   003CC6                     l3509:
  6296                           
  6297                           ;dc_motor.c: 236:         Left45(mL,mR);
  6298   003CC6  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6299   003CCA  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6300   003CCE  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6301   003CD2  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6302   003CD6  EC31  F01D         	call	_Left45	;wreg free
  6303                           
  6304                           ;dc_motor.c: 237:         Left45(mL,mR);
  6305   003CDA  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6306   003CDE  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6307   003CE2  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6308   003CE6  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6309   003CEA  EC31  F01D         	call	_Left45	;wreg free
  6310   003CEE                     l475:
  6311   003CEE  0012               	return		;funcret
  6312   003CF0                     __end_of_Red_R90:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _Pink_rev1_L90 *****************
  6316 ;; Defined at:
  6317 ;;		line 291 in file "dc_motor.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6320 ;;		 -> motorL(9), 
  6321 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6322 ;;		 -> motorR(9), 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;Total ram usage:        6 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 4
  6341 ;; This function calls:
  6342 ;;		_Left45
  6343 ;;		_Right45
  6344 ;;		_TimerReset
  6345 ;;		_fullSpeedAhead
  6346 ;;		_fullSpeedReverse
  6347 ;;		_reverseHalfSquare
  6348 ;;		_stop
  6349 ;; This function is called by:
  6350 ;;		_Colour2Action
  6351 ;;		_White
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text29
  6356   003CF0                     __ptext29:
  6357                           	callstack 0
  6358   003CF0                     _Pink_rev1_L90:
  6359                           	callstack 25
  6360   003CF0                     
  6361                           ;dc_motor.c: 291: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 292: {;dc_motor.c: 293:     if (ForwardFlag){
  6362   003CF0  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6363   003CF2  B4D8               	btfsc	status,2,c
  6364   003CF4  EF7E  F01E         	goto	u3091
  6365   003CF8  EF80  F01E         	goto	u3090
  6366   003CFC                     u3091:
  6367   003CFC  EFB6  F01E         	goto	l496
  6368   003D00                     u3090:
  6369   003D00                     
  6370                           ;dc_motor.c: 294:         reverseHalfSquare(mL,mR);
  6371   003D00  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  6372   003D04  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  6373   003D08  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  6374   003D0C  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  6375   003D10  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6376                           
  6377                           ;dc_motor.c: 296:         fullSpeedReverse(mL,mR);
  6378   003D14  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  6379   003D18  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  6380   003D1C  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  6381   003D20  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  6382   003D24  ECF9  F01D         	call	_fullSpeedReverse	;wreg free
  6383   003D28                     
  6384                           ;dc_motor.c: 297:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6385   003D28  0E39               	movlw	57
  6386   003D2A  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6387   003D2C  0ED2               	movlw	210
  6388   003D2E  6E25               	movwf	??_Pink_rev1_L90^0,c
  6389   003D30  0E4C               	movlw	76
  6390   003D32                     u4127:
  6391   003D32  2EE8               	decfsz	wreg,f,c
  6392   003D34  D7FE               	bra	u4127
  6393   003D36  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6394   003D38  D7FC               	bra	u4127
  6395   003D3A  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6396   003D3C  D7FA               	bra	u4127
  6397   003D3E  D000               	nop2	
  6398   003D40                     
  6399                           ;dc_motor.c: 298:         Left45(mL,mR);
  6400   003D40  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6401   003D44  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6402   003D48  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6403   003D4C  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6404   003D50  EC31  F01D         	call	_Left45	;wreg free
  6405   003D54                     
  6406                           ;dc_motor.c: 299:         Left45(mL,mR);
  6407   003D54  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6408   003D58  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6409   003D5C  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6410   003D60  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6411   003D64  EC31  F01D         	call	_Left45	;wreg free
  6412   003D68                     
  6413                           ;dc_motor.c: 300:         TimerReset();
  6414   003D68  EC0A  F022         	call	_TimerReset	;wreg free
  6415   003D6C                     l496:
  6416   003D6C  0012               	return		;funcret
  6417   003D6E                     __end_of_Pink_rev1_L90:
  6418                           	callstack 0
  6419                           
  6420 ;; *************** function _fullSpeedAhead *****************
  6421 ;; Defined at:
  6422 ;;		line 149 in file "dc_motor.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6425 ;;		 -> motorL(9), 
  6426 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6427 ;;		 -> motorR(9), 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  i               2   24[COMRAM] unsigned int 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;Total ram usage:        7 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 2
  6446 ;; This function calls:
  6447 ;;		_setMotorPWM
  6448 ;; This function is called by:
  6449 ;;		_main
  6450 ;;		_Yellow_rev1_R90
  6451 ;;		_Pink_rev1_L90
  6452 ;;		_White
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text30
  6457   003B72                     __ptext30:
  6458                           	callstack 0
  6459   003B72                     _fullSpeedAhead:
  6460                           	callstack 28
  6461   003B72                     
  6462                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6463   003B72  EE20 F001          	lfsr	2,1
  6464   003B76  5014               	movf	fullSpeedAhead@mL^0,w,c
  6465   003B78  26D9               	addwf	fsr2l,f,c
  6466   003B7A  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6467   003B7C  22DA               	addwfc	fsr2h,f,c
  6468   003B7E  0E01               	movlw	1
  6469   003B80  6EDF               	movwf	indf2,c
  6470                           
  6471                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6472   003B82  EE20 F001          	lfsr	2,1
  6473   003B86  5016               	movf	fullSpeedAhead@mR^0,w,c
  6474   003B88  26D9               	addwf	fsr2l,f,c
  6475   003B8A  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6476   003B8C  22DA               	addwfc	fsr2h,f,c
  6477   003B8E  0E01               	movlw	1
  6478   003B90  6EDF               	movwf	indf2,c
  6479   003B92                     
  6480                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6481   003B92  0E00               	movlw	0
  6482   003B94  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6483   003B96  0E00               	movlw	0
  6484   003B98  6E19               	movwf	fullSpeedAhead@i^0,c
  6485   003B9A                     l3117:
  6486                           
  6487                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6488   003B9A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6489   003B9E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6490   003BA2  2ADF               	incf	indf2,f,c
  6491                           
  6492                           ;dc_motor.c: 157:         (mR->power)++;
  6493   003BA4  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6494   003BA8  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6495   003BAC  2ADF               	incf	indf2,f,c
  6496   003BAE                     
  6497                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6498   003BAE  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6499   003BB2  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6500   003BB6  ECE2  F015         	call	_setMotorPWM	;wreg free
  6501   003BBA                     
  6502                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6503   003BBA  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6504   003BBE  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6505   003BC2  ECE2  F015         	call	_setMotorPWM	;wreg free
  6506   003BC6                     
  6507                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6508   003BC6  0E09               	movlw	9
  6509   003BC8  6E18               	movwf	??_fullSpeedAhead^0,c
  6510   003BCA  0E4E               	movlw	78
  6511   003BCC                     u4137:
  6512   003BCC  2EE8               	decfsz	wreg,f,c
  6513   003BCE  D7FE               	bra	u4137
  6514   003BD0  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6515   003BD2  D7FC               	bra	u4137
  6516   003BD4  D000               	nop2	
  6517   003BD6                     
  6518                           ;dc_motor.c: 161:     }
  6519   003BD6  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6520   003BD8  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6521   003BDA  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6522   003BDC  E109               	bnz	u2420
  6523   003BDE  0E32               	movlw	50
  6524   003BE0  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6525   003BE2  A0D8               	btfss	status,0,c
  6526   003BE4  EFF6  F01D         	goto	u2421
  6527   003BE8  EFF8  F01D         	goto	u2420
  6528   003BEC                     u2421:
  6529   003BEC  EFCD  F01D         	goto	l3117
  6530   003BF0                     u2420:
  6531   003BF0  0012               	return		;funcret
  6532   003BF2                     __end_of_fullSpeedAhead:
  6533                           	callstack 0
  6534                           
  6535 ;; *************** function _Orange_R135 *****************
  6536 ;; Defined at:
  6537 ;;		line 311 in file "dc_motor.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6540 ;;		 -> motorL(9), 
  6541 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6542 ;;		 -> motorR(9), 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;Total ram usage:        4 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 4
  6561 ;; This function calls:
  6562 ;;		_Left45
  6563 ;;		_Right45
  6564 ;;		_TimerReset
  6565 ;;		_reverseHalfSquare
  6566 ;;		_stop
  6567 ;; This function is called by:
  6568 ;;		_Colour2Action
  6569 ;;		_White
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text31
  6574   00356C                     __ptext31:
  6575                           	callstack 0
  6576   00356C                     _Orange_R135:
  6577                           	callstack 25
  6578   00356C                     
  6579                           ;dc_motor.c: 311: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           312: {;dc_motor.c: 313:     if (ForwardFlag){
  6580   00356C  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6581   00356E  B4D8               	btfsc	status,2,c
  6582   003570  EFBC  F01A         	goto	u3101
  6583   003574  EFBE  F01A         	goto	u3100
  6584   003578                     u3101:
  6585   003578  EFEA  F01A         	goto	l3571
  6586   00357C                     u3100:
  6587   00357C                     
  6588                           ;dc_motor.c: 314:         reverseHalfSquare(mL,mR);
  6589   00357C  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  6590   003580  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  6591   003584  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  6592   003588  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  6593   00358C  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6594                           
  6595                           ;dc_motor.c: 316:         Right45(mL,mR);
  6596   003590  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6597   003594  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6598   003598  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6599   00359C  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6600   0035A0  ECEC  F01C         	call	_Right45	;wreg free
  6601                           
  6602                           ;dc_motor.c: 317:         Right45(mL,mR);
  6603   0035A4  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6604   0035A8  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6605   0035AC  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6606   0035B0  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6607   0035B4  ECEC  F01C         	call	_Right45	;wreg free
  6608                           
  6609                           ;dc_motor.c: 318:         Right45(mL,mR);
  6610   0035B8  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6611   0035BC  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6612   0035C0  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6613   0035C4  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6614   0035C8  ECEC  F01C         	call	_Right45	;wreg free
  6615   0035CC                     
  6616                           ;dc_motor.c: 319:         TimerReset();
  6617   0035CC  EC0A  F022         	call	_TimerReset	;wreg free
  6618                           
  6619                           ;dc_motor.c: 321:     }
  6620   0035D0  EF12  F01B         	goto	l501
  6621   0035D4                     l3571:
  6622                           
  6623                           ;dc_motor.c: 324:         Left45(mL,mR);
  6624   0035D4  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6625   0035D8  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6626   0035DC  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6627   0035E0  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6628   0035E4  EC31  F01D         	call	_Left45	;wreg free
  6629                           
  6630                           ;dc_motor.c: 325:         Left45(mL,mR);
  6631   0035E8  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6632   0035EC  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6633   0035F0  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6634   0035F4  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6635   0035F8  EC31  F01D         	call	_Left45	;wreg free
  6636                           
  6637                           ;dc_motor.c: 326:         Left45(mL,mR);
  6638   0035FC  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6639   003600  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6640   003604  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6641   003608  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6642   00360C  EC31  F01D         	call	_Left45	;wreg free
  6643                           
  6644                           ;dc_motor.c: 327:         stop(mL,mR);
  6645   003610  C021  F014         	movff	Orange_R135@mL,stop@mL
  6646   003614  C022  F015         	movff	Orange_R135@mL+1,stop@mL+1
  6647   003618  C023  F016         	movff	Orange_R135@mR,stop@mR
  6648   00361C  C024  F017         	movff	Orange_R135@mR+1,stop@mR+1
  6649   003620  ECBB  F01B         	call	_stop	;wreg free
  6650   003624                     l501:
  6651   003624  0012               	return		;funcret
  6652   003626                     __end_of_Orange_R135:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _LightBlue_L135 *****************
  6656 ;; Defined at:
  6657 ;;		line 330 in file "dc_motor.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6660 ;;		 -> motorL(9), 
  6661 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6662 ;;		 -> motorR(9), 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;Total ram usage:        4 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 4
  6681 ;; This function calls:
  6682 ;;		_Left45
  6683 ;;		_Right45
  6684 ;;		_TimerReset
  6685 ;;		_reverseHalfSquare
  6686 ;; This function is called by:
  6687 ;;		_Colour2Action
  6688 ;;		_White
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text32
  6693   0036D0                     __ptext32:
  6694                           	callstack 0
  6695   0036D0                     _LightBlue_L135:
  6696                           	callstack 25
  6697   0036D0                     
  6698                           ;dc_motor.c: 330: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 331: {;dc_motor.c: 333:      if (ForwardFlag){
  6699   0036D0  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6700   0036D2  B4D8               	btfsc	status,2,c
  6701   0036D4  EF6E  F01B         	goto	u3111
  6702   0036D8  EF70  F01B         	goto	u3110
  6703   0036DC                     u3111:
  6704   0036DC  EF9C  F01B         	goto	l3579
  6705   0036E0                     u3110:
  6706   0036E0                     
  6707                           ;dc_motor.c: 334:         reverseHalfSquare(mL,mR);
  6708   0036E0  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  6709   0036E4  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  6710   0036E8  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  6711   0036EC  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  6712   0036F0  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6713                           
  6714                           ;dc_motor.c: 336:         Left45(mL,mR);
  6715   0036F4  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6716   0036F8  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6717   0036FC  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6718   003700  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6719   003704  EC31  F01D         	call	_Left45	;wreg free
  6720                           
  6721                           ;dc_motor.c: 337:         Left45(mL,mR);
  6722   003708  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6723   00370C  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6724   003710  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6725   003714  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6726   003718  EC31  F01D         	call	_Left45	;wreg free
  6727                           
  6728                           ;dc_motor.c: 338:         Left45(mL,mR);
  6729   00371C  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6730   003720  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6731   003724  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6732   003728  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6733   00372C  EC31  F01D         	call	_Left45	;wreg free
  6734   003730                     
  6735                           ;dc_motor.c: 339:         TimerReset();
  6736   003730  EC0A  F022         	call	_TimerReset	;wreg free
  6737                           
  6738                           ;dc_motor.c: 340:     }
  6739   003734  EFBA  F01B         	goto	l506
  6740   003738                     l3579:
  6741                           
  6742                           ;dc_motor.c: 343:         Right45(mL,mR);
  6743   003738  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6744   00373C  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6745   003740  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6746   003744  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6747   003748  ECEC  F01C         	call	_Right45	;wreg free
  6748                           
  6749                           ;dc_motor.c: 344:         Right45(mL,mR);
  6750   00374C  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6751   003750  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6752   003754  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6753   003758  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6754   00375C  ECEC  F01C         	call	_Right45	;wreg free
  6755                           
  6756                           ;dc_motor.c: 345:         Right45(mL,mR);
  6757   003760  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6758   003764  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6759   003768  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6760   00376C  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6761   003770  ECEC  F01C         	call	_Right45	;wreg free
  6762   003774                     l506:
  6763   003774  0012               	return		;funcret
  6764   003776                     __end_of_LightBlue_L135:
  6765                           	callstack 0
  6766                           
  6767 ;; *************** function _Green_L90 *****************
  6768 ;; Defined at:
  6769 ;;		line 241 in file "dc_motor.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6772 ;;		 -> motorL(9), 
  6773 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6774 ;;		 -> motorR(9), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;Total ram usage:        4 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 4
  6793 ;; This function calls:
  6794 ;;		_Left45
  6795 ;;		_Right45
  6796 ;;		_TimerReset
  6797 ;;		_reverseHalfSquare
  6798 ;; This function is called by:
  6799 ;;		_Colour2Action
  6800 ;;		_White
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text33
  6805   003D6E                     __ptext33:
  6806                           	callstack 0
  6807   003D6E                     _Green_L90:
  6808                           	callstack 25
  6809   003D6E                     
  6810                           ;dc_motor.c: 241: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          42: {;dc_motor.c: 243:     if (ForwardFlag){
  6811   003D6E  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6812   003D70  B4D8               	btfsc	status,2,c
  6813   003D72  EFBD  F01E         	goto	u3061
  6814   003D76  EFBF  F01E         	goto	u3060
  6815   003D7A                     u3061:
  6816   003D7A  EFE1  F01E         	goto	l3517
  6817   003D7E                     u3060:
  6818   003D7E                     
  6819                           ;dc_motor.c: 244:         reverseHalfSquare(mL,mR);
  6820   003D7E  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  6821   003D82  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  6822   003D86  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  6823   003D8A  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  6824   003D8E  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  6825                           
  6826                           ;dc_motor.c: 246:         Left45(mL,mR);
  6827   003D92  C021  F01A         	movff	Green_L90@mL,Left45@mL
  6828   003D96  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  6829   003D9A  C023  F01C         	movff	Green_L90@mR,Left45@mR
  6830   003D9E  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  6831   003DA2  EC31  F01D         	call	_Left45	;wreg free
  6832                           
  6833                           ;dc_motor.c: 247:         Left45(mL,mR);
  6834   003DA6  C021  F01A         	movff	Green_L90@mL,Left45@mL
  6835   003DAA  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  6836   003DAE  C023  F01C         	movff	Green_L90@mR,Left45@mR
  6837   003DB2  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  6838   003DB6  EC31  F01D         	call	_Left45	;wreg free
  6839   003DBA                     
  6840                           ;dc_motor.c: 248:         TimerReset();
  6841   003DBA  EC0A  F022         	call	_TimerReset	;wreg free
  6842                           
  6843                           ;dc_motor.c: 249:     }
  6844   003DBE  EFF5  F01E         	goto	l480
  6845   003DC2                     l3517:
  6846                           
  6847                           ;dc_motor.c: 252:         Right45(mL,mR);
  6848   003DC2  C021  F01A         	movff	Green_L90@mL,Right45@mL
  6849   003DC6  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  6850   003DCA  C023  F01C         	movff	Green_L90@mR,Right45@mR
  6851   003DCE  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  6852   003DD2  ECEC  F01C         	call	_Right45	;wreg free
  6853                           
  6854                           ;dc_motor.c: 253:         Right45(mL,mR);
  6855   003DD6  C021  F01A         	movff	Green_L90@mL,Right45@mL
  6856   003DDA  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  6857   003DDE  C023  F01C         	movff	Green_L90@mR,Right45@mR
  6858   003DE2  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  6859   003DE6  ECEC  F01C         	call	_Right45	;wreg free
  6860   003DEA                     l480:
  6861   003DEA  0012               	return		;funcret
  6862   003DEC                     __end_of_Green_L90:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _Right45 *****************
  6866 ;; Defined at:
  6867 ;;		line 193 in file "dc_motor.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6870 ;;		 -> motorL(9), 
  6871 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6872 ;;		 -> motorR(9), 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;Total ram usage:        6 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 3
  6891 ;; This function calls:
  6892 ;;		_stop
  6893 ;;		_turnRight
  6894 ;; This function is called by:
  6895 ;;		_Red_R90
  6896 ;;		_Green_L90
  6897 ;;		_Yellow_rev1_R90
  6898 ;;		_Pink_rev1_L90
  6899 ;;		_Orange_R135
  6900 ;;		_LightBlue_L135
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text34
  6905   0039D8                     __ptext34:
  6906                           	callstack 0
  6907   0039D8                     _Right45:
  6908                           	callstack 25
  6909   0039D8                     
  6910                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  6911   0039D8  8080               	bsf	128,0,c	;volatile
  6912   0039DA                     
  6913                           ;dc_motor.c: 197:     stop(mL,mR);
  6914   0039DA  C01A  F014         	movff	Right45@mL,stop@mL
  6915   0039DE  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  6916   0039E2  C01C  F016         	movff	Right45@mR,stop@mR
  6917   0039E6  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  6918   0039EA  ECBB  F01B         	call	_stop	;wreg free
  6919   0039EE                     
  6920                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6921   0039EE  0E05               	movlw	5
  6922   0039F0  6E1F               	movwf	(??_Right45+1)^0,c
  6923   0039F2  0E0F               	movlw	15
  6924   0039F4  6E1E               	movwf	??_Right45^0,c
  6925   0039F6  0EF1               	movlw	241
  6926   0039F8                     u4147:
  6927   0039F8  2EE8               	decfsz	wreg,f,c
  6928   0039FA  D7FE               	bra	u4147
  6929   0039FC  2E1E               	decfsz	??_Right45^0,f,c
  6930   0039FE  D7FC               	bra	u4147
  6931   003A00  2E1F               	decfsz	(??_Right45+1)^0,f,c
  6932   003A02  D7FA               	bra	u4147
  6933   003A04  F000               	nop	
  6934   003A06                     
  6935                           ;dc_motor.c: 199:     turnRight(mL,mR);
  6936   003A06  C01A  F014         	movff	Right45@mL,turnRight@mL
  6937   003A0A  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  6938   003A0E  C01C  F016         	movff	Right45@mR,turnRight@mR
  6939   003A12  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  6940   003A16  EC0E  F01C         	call	_turnRight	;wreg free
  6941                           
  6942                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  6943   003A1A  0E0E               	movlw	14
  6944   003A1C  6E1F               	movwf	(??_Right45+1)^0,c
  6945   003A1E  0ECD               	movlw	205
  6946   003A20  6E1E               	movwf	??_Right45^0,c
  6947   003A22  0E6C               	movlw	108
  6948   003A24                     u4157:
  6949   003A24  2EE8               	decfsz	wreg,f,c
  6950   003A26  D7FE               	bra	u4157
  6951   003A28  2E1E               	decfsz	??_Right45^0,f,c
  6952   003A2A  D7FC               	bra	u4157
  6953   003A2C  2E1F               	decfsz	(??_Right45+1)^0,f,c
  6954   003A2E  D7FA               	bra	u4157
  6955   003A30  D000               	nop2	
  6956   003A32                     
  6957                           ;dc_motor.c: 201:     stop(mL,mR);
  6958   003A32  C01A  F014         	movff	Right45@mL,stop@mL
  6959   003A36  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  6960   003A3A  C01C  F016         	movff	Right45@mR,stop@mR
  6961   003A3E  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  6962   003A42  ECBB  F01B         	call	_stop	;wreg free
  6963   003A46                     
  6964                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6965   003A46  0E05               	movlw	5
  6966   003A48  6E1F               	movwf	(??_Right45+1)^0,c
  6967   003A4A  0E0F               	movlw	15
  6968   003A4C  6E1E               	movwf	??_Right45^0,c
  6969   003A4E  0EF1               	movlw	241
  6970   003A50                     u4167:
  6971   003A50  2EE8               	decfsz	wreg,f,c
  6972   003A52  D7FE               	bra	u4167
  6973   003A54  2E1E               	decfsz	??_Right45^0,f,c
  6974   003A56  D7FC               	bra	u4167
  6975   003A58  2E1F               	decfsz	(??_Right45+1)^0,f,c
  6976   003A5A  D7FA               	bra	u4167
  6977   003A5C  F000               	nop	
  6978   003A5E                     
  6979                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  6980   003A5E  9080               	bcf	128,0,c	;volatile
  6981   003A60  0012               	return		;funcret
  6982   003A62                     __end_of_Right45:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function _turnRight *****************
  6986 ;; Defined at:
  6987 ;;		line 132 in file "dc_motor.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6990 ;;		 -> motorL(9), 
  6991 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6992 ;;		 -> motorR(9), 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  i               2   23[COMRAM] unsigned int 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;Total ram usage:        6 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 2
  7011 ;; This function calls:
  7012 ;;		_setMotorPWM
  7013 ;; This function is called by:
  7014 ;;		_Right45
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text35
  7019   00381C                     __ptext35:
  7020                           	callstack 0
  7021   00381C                     _turnRight:
  7022                           	callstack 25
  7023   00381C                     
  7024                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 0;
  7025   00381C  EE20 F001          	lfsr	2,1
  7026   003820  5014               	movf	turnRight@mL^0,w,c
  7027   003822  26D9               	addwf	fsr2l,f,c
  7028   003824  5015               	movf	(turnRight@mL+1)^0,w,c
  7029   003826  22DA               	addwfc	fsr2h,f,c
  7030   003828  0E00               	movlw	0
  7031   00382A  6EDF               	movwf	indf2,c
  7032                           
  7033                           ;dc_motor.c: 135:     (mR->direction) = 1;
  7034   00382C  EE20 F001          	lfsr	2,1
  7035   003830  5016               	movf	turnRight@mR^0,w,c
  7036   003832  26D9               	addwf	fsr2l,f,c
  7037   003834  5017               	movf	(turnRight@mR+1)^0,w,c
  7038   003836  22DA               	addwfc	fsr2h,f,c
  7039   003838  0E01               	movlw	1
  7040   00383A  6EDF               	movwf	indf2,c
  7041   00383C                     
  7042                           ;dc_motor.c: 136:     setMotorPWM(mL);
  7043   00383C  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7044   003840  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7045   003844  ECE2  F015         	call	_setMotorPWM	;wreg free
  7046   003848                     
  7047                           ;dc_motor.c: 137:     setMotorPWM(mR);
  7048   003848  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7049   00384C  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7050   003850  ECE2  F015         	call	_setMotorPWM	;wreg free
  7051   003854                     
  7052                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  7053   003854  0E00               	movlw	0
  7054   003856  6E19               	movwf	(turnRight@i+1)^0,c
  7055   003858  0E00               	movlw	0
  7056   00385A  6E18               	movwf	turnRight@i^0,c
  7057   00385C                     l2999:
  7058                           
  7059                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  7060   00385C  C014  FFD9         	movff	turnRight@mL,fsr2l
  7061   003860  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7062   003864  2ADF               	incf	indf2,f,c
  7063                           
  7064                           ;dc_motor.c: 141:         mR->power++;
  7065   003866  C016  FFD9         	movff	turnRight@mR,fsr2l
  7066   00386A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7067   00386E  2ADF               	incf	indf2,f,c
  7068   003870                     
  7069                           ;dc_motor.c: 142:         setMotorPWM(mL);
  7070   003870  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7071   003874  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7072   003878  ECE2  F015         	call	_setMotorPWM	;wreg free
  7073   00387C                     
  7074                           ;dc_motor.c: 143:         setMotorPWM(mR);
  7075   00387C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7076   003880  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7077   003884  ECE2  F015         	call	_setMotorPWM	;wreg free
  7078   003888                     
  7079                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7080   003888  0EE4               	movlw	228
  7081   00388A                     u4177:
  7082   00388A  D000               	nop2	
  7083   00388C  D000               	nop2	
  7084   00388E  2EE8               	decfsz	wreg,f,c
  7085   003890  D7FC               	bra	u4177
  7086   003892  D000               	nop2	
  7087   003894  D000               	nop2	
  7088   003896                     
  7089                           ;dc_motor.c: 145:     }
  7090   003896  4A18               	infsnz	turnRight@i^0,f,c
  7091   003898  2A19               	incf	(turnRight@i+1)^0,f,c
  7092   00389A  5019               	movf	(turnRight@i+1)^0,w,c
  7093   00389C  E109               	bnz	u2340
  7094   00389E  0E32               	movlw	50
  7095   0038A0  5C18               	subwf	turnRight@i^0,w,c
  7096   0038A2  A0D8               	btfss	status,0,c
  7097   0038A4  EF56  F01C         	goto	u2341
  7098   0038A8  EF58  F01C         	goto	u2340
  7099   0038AC                     u2341:
  7100   0038AC  EF2E  F01C         	goto	l2999
  7101   0038B0                     u2340:
  7102   0038B0  0012               	return		;funcret
  7103   0038B2                     __end_of_turnRight:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _Blue_T180 *****************
  7107 ;; Defined at:
  7108 ;;		line 257 in file "dc_motor.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  7111 ;;		 -> motorL(9), 
  7112 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7113 ;;		 -> motorR(9), 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;Total ram usage:        4 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 5
  7132 ;; This function calls:
  7133 ;;		_TimerReset
  7134 ;;		_reverseHalfSquare
  7135 ;;		_rotate180left
  7136 ;; This function is called by:
  7137 ;;		_Colour2Action
  7138 ;;		_White
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text36
  7143   003E60                     __ptext36:
  7144                           	callstack 0
  7145   003E60                     _Blue_T180:
  7146                           	callstack 24
  7147   003E60                     
  7148                           ;dc_motor.c: 257: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          58: {;dc_motor.c: 259:     if (ForwardFlag){
  7149   003E60  505F               	movf	_ForwardFlag^0,w,c	;volatile
  7150   003E62  B4D8               	btfsc	status,2,c
  7151   003E64  EF36  F01F         	goto	u3071
  7152   003E68  EF38  F01F         	goto	u3070
  7153   003E6C                     u3071:
  7154   003E6C  EF50  F01F         	goto	l3525
  7155   003E70                     u3070:
  7156   003E70                     
  7157                           ;dc_motor.c: 260:     reverseHalfSquare(mL,mR);
  7158   003E70  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  7159   003E74  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  7160   003E78  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  7161   003E7C  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  7162   003E80  EC76  F01D         	call	_reverseHalfSquare	;wreg free
  7163                           
  7164                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  7165   003E84  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7166   003E88  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7167   003E8C  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7168   003E90  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7169   003E94  EC85  F01F         	call	_rotate180left	;wreg free
  7170   003E98                     
  7171                           ;dc_motor.c: 263:     TimerReset();
  7172   003E98  EC0A  F022         	call	_TimerReset	;wreg free
  7173                           
  7174                           ;dc_motor.c: 264:     }else{
  7175   003E9C  EF5A  F01F         	goto	l485
  7176   003EA0                     l3525:
  7177                           
  7178                           ;dc_motor.c: 265:     rotate180left(mL,mR);
  7179   003EA0  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7180   003EA4  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7181   003EA8  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7182   003EAC  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7183   003EB0  EC85  F01F         	call	_rotate180left	;wreg free
  7184   003EB4                     l485:
  7185   003EB4  0012               	return		;funcret
  7186   003EB6                     __end_of_Blue_T180:
  7187                           	callstack 0
  7188                           
  7189 ;; *************** function _rotate180left *****************
  7190 ;; Defined at:
  7191 ;;		line 207 in file "dc_motor.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7194 ;;		 -> motorL(9), 
  7195 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7196 ;;		 -> motorR(9), 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;Total ram usage:        4 bytes
  7213 ;; Hardware stack levels used: 1
  7214 ;; Hardware stack levels required when called: 4
  7215 ;; This function calls:
  7216 ;;		_Left45
  7217 ;; This function is called by:
  7218 ;;		_Blue_T180
  7219 ;;		_White
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text37
  7224   003F0A                     __ptext37:
  7225                           	callstack 0
  7226   003F0A                     _rotate180left:
  7227                           	callstack 24
  7228   003F0A                     
  7229                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  7230   003F0A  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7231   003F0E  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7232   003F12  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7233   003F16  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7234   003F1A  EC31  F01D         	call	_Left45	;wreg free
  7235                           
  7236                           ;dc_motor.c: 211:     Left45(mL,mR);
  7237   003F1E  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7238   003F22  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7239   003F26  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7240   003F2A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7241   003F2E  EC31  F01D         	call	_Left45	;wreg free
  7242                           
  7243                           ;dc_motor.c: 212:     Left45(mL,mR);
  7244   003F32  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7245   003F36  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7246   003F3A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7247   003F3E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7248   003F42  EC31  F01D         	call	_Left45	;wreg free
  7249                           
  7250                           ;dc_motor.c: 213:     Left45(mL,mR);
  7251   003F46  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7252   003F4A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7253   003F4E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7254   003F52  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7255   003F56  EC31  F01D         	call	_Left45	;wreg free
  7256   003F5A  0012               	return		;funcret
  7257   003F5C                     __end_of_rotate180left:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function _Left45 *****************
  7261 ;; Defined at:
  7262 ;;		line 179 in file "dc_motor.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7265 ;;		 -> motorL(9), 
  7266 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7267 ;;		 -> motorR(9), 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;Total ram usage:        6 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 3
  7286 ;; This function calls:
  7287 ;;		_stop
  7288 ;;		_turnLeft
  7289 ;; This function is called by:
  7290 ;;		_rotate180left
  7291 ;;		_Red_R90
  7292 ;;		_Green_L90
  7293 ;;		_Yellow_rev1_R90
  7294 ;;		_Pink_rev1_L90
  7295 ;;		_Orange_R135
  7296 ;;		_LightBlue_L135
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text38
  7301   003A62                     __ptext38:
  7302                           	callstack 0
  7303   003A62                     _Left45:
  7304                           	callstack 25
  7305   003A62                     
  7306                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  7307   003A62  807E               	bsf	126,0,c	;volatile
  7308   003A64                     
  7309                           ;dc_motor.c: 183:     stop(mL,mR);
  7310   003A64  C01A  F014         	movff	Left45@mL,stop@mL
  7311   003A68  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7312   003A6C  C01C  F016         	movff	Left45@mR,stop@mR
  7313   003A70  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7314   003A74  ECBB  F01B         	call	_stop	;wreg free
  7315   003A78                     
  7316                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7317   003A78  0E05               	movlw	5
  7318   003A7A  6E1F               	movwf	(??_Left45+1)^0,c
  7319   003A7C  0E0F               	movlw	15
  7320   003A7E  6E1E               	movwf	??_Left45^0,c
  7321   003A80  0EF1               	movlw	241
  7322   003A82                     u4187:
  7323   003A82  2EE8               	decfsz	wreg,f,c
  7324   003A84  D7FE               	bra	u4187
  7325   003A86  2E1E               	decfsz	??_Left45^0,f,c
  7326   003A88  D7FC               	bra	u4187
  7327   003A8A  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7328   003A8C  D7FA               	bra	u4187
  7329   003A8E  F000               	nop	
  7330   003A90                     
  7331                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  7332   003A90  C01A  F014         	movff	Left45@mL,turnLeft@mL
  7333   003A94  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  7334   003A98  C01C  F016         	movff	Left45@mR,turnLeft@mR
  7335   003A9C  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  7336   003AA0  EC59  F01C         	call	_turnLeft	;wreg free
  7337                           
  7338                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  7339   003AA4  0E0E               	movlw	14
  7340   003AA6  6E1F               	movwf	(??_Left45+1)^0,c
  7341   003AA8  0ECD               	movlw	205
  7342   003AAA  6E1E               	movwf	??_Left45^0,c
  7343   003AAC  0E6C               	movlw	108
  7344   003AAE                     u4197:
  7345   003AAE  2EE8               	decfsz	wreg,f,c
  7346   003AB0  D7FE               	bra	u4197
  7347   003AB2  2E1E               	decfsz	??_Left45^0,f,c
  7348   003AB4  D7FC               	bra	u4197
  7349   003AB6  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7350   003AB8  D7FA               	bra	u4197
  7351   003ABA  D000               	nop2	
  7352   003ABC                     
  7353                           ;dc_motor.c: 187:     stop(mL,mR);
  7354   003ABC  C01A  F014         	movff	Left45@mL,stop@mL
  7355   003AC0  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7356   003AC4  C01C  F016         	movff	Left45@mR,stop@mR
  7357   003AC8  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7358   003ACC  ECBB  F01B         	call	_stop	;wreg free
  7359   003AD0                     
  7360                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7361   003AD0  0E05               	movlw	5
  7362   003AD2  6E1F               	movwf	(??_Left45+1)^0,c
  7363   003AD4  0E0F               	movlw	15
  7364   003AD6  6E1E               	movwf	??_Left45^0,c
  7365   003AD8  0EF1               	movlw	241
  7366   003ADA                     u4207:
  7367   003ADA  2EE8               	decfsz	wreg,f,c
  7368   003ADC  D7FE               	bra	u4207
  7369   003ADE  2E1E               	decfsz	??_Left45^0,f,c
  7370   003AE0  D7FC               	bra	u4207
  7371   003AE2  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7372   003AE4  D7FA               	bra	u4207
  7373   003AE6  F000               	nop	
  7374   003AE8                     
  7375                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  7376   003AE8  907E               	bcf	126,0,c	;volatile
  7377   003AEA  0012               	return		;funcret
  7378   003AEC                     __end_of_Left45:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function _turnLeft *****************
  7382 ;; Defined at:
  7383 ;;		line 113 in file "dc_motor.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7386 ;;		 -> motorL(9), 
  7387 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7388 ;;		 -> motorR(9), 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  i               2   23[COMRAM] unsigned int 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;Total ram usage:        6 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 2
  7407 ;; This function calls:
  7408 ;;		_setMotorPWM
  7409 ;; This function is called by:
  7410 ;;		_Left45
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text39
  7415   0038B2                     __ptext39:
  7416                           	callstack 0
  7417   0038B2                     _turnLeft:
  7418                           	callstack 25
  7419   0038B2                     
  7420                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 1;
  7421   0038B2  EE20 F001          	lfsr	2,1
  7422   0038B6  5014               	movf	turnLeft@mL^0,w,c
  7423   0038B8  26D9               	addwf	fsr2l,f,c
  7424   0038BA  5015               	movf	(turnLeft@mL+1)^0,w,c
  7425   0038BC  22DA               	addwfc	fsr2h,f,c
  7426   0038BE  0E01               	movlw	1
  7427   0038C0  6EDF               	movwf	indf2,c
  7428                           
  7429                           ;dc_motor.c: 117:     (mR->direction) = 0;
  7430   0038C2  EE20 F001          	lfsr	2,1
  7431   0038C6  5016               	movf	turnLeft@mR^0,w,c
  7432   0038C8  26D9               	addwf	fsr2l,f,c
  7433   0038CA  5017               	movf	(turnLeft@mR+1)^0,w,c
  7434   0038CC  22DA               	addwfc	fsr2h,f,c
  7435   0038CE  0E00               	movlw	0
  7436   0038D0  6EDF               	movwf	indf2,c
  7437   0038D2                     
  7438                           ;dc_motor.c: 118:     setMotorPWM(mL);
  7439   0038D2  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7440   0038D6  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7441   0038DA  ECE2  F015         	call	_setMotorPWM	;wreg free
  7442   0038DE                     
  7443                           ;dc_motor.c: 119:     setMotorPWM(mR);
  7444   0038DE  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7445   0038E2  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7446   0038E6  ECE2  F015         	call	_setMotorPWM	;wreg free
  7447   0038EA                     
  7448                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  7449   0038EA  0E00               	movlw	0
  7450   0038EC  6E19               	movwf	(turnLeft@i+1)^0,c
  7451   0038EE  0E00               	movlw	0
  7452   0038F0  6E18               	movwf	turnLeft@i^0,c
  7453   0038F2                     l2919:
  7454                           
  7455                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  7456   0038F2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7457   0038F6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7458   0038FA  2ADF               	incf	indf2,f,c
  7459                           
  7460                           ;dc_motor.c: 123:         mR->power++;
  7461   0038FC  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7462   003900  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7463   003904  2ADF               	incf	indf2,f,c
  7464   003906                     
  7465                           ;dc_motor.c: 124:         setMotorPWM(mL);
  7466   003906  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7467   00390A  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7468   00390E  ECE2  F015         	call	_setMotorPWM	;wreg free
  7469   003912                     
  7470                           ;dc_motor.c: 125:         setMotorPWM(mR);
  7471   003912  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7472   003916  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7473   00391A  ECE2  F015         	call	_setMotorPWM	;wreg free
  7474   00391E                     
  7475                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7476   00391E  0EE4               	movlw	228
  7477   003920                     u4217:
  7478   003920  D000               	nop2	
  7479   003922  D000               	nop2	
  7480   003924  2EE8               	decfsz	wreg,f,c
  7481   003926  D7FC               	bra	u4217
  7482   003928  D000               	nop2	
  7483   00392A  D000               	nop2	
  7484   00392C                     
  7485                           ;dc_motor.c: 127:     }
  7486   00392C  4A18               	infsnz	turnLeft@i^0,f,c
  7487   00392E  2A19               	incf	(turnLeft@i+1)^0,f,c
  7488   003930  5019               	movf	(turnLeft@i+1)^0,w,c
  7489   003932  E109               	bnz	u2190
  7490   003934  0E32               	movlw	50
  7491   003936  5C18               	subwf	turnLeft@i^0,w,c
  7492   003938  A0D8               	btfss	status,0,c
  7493   00393A  EFA1  F01C         	goto	u2191
  7494   00393E  EFA3  F01C         	goto	u2190
  7495   003942                     u2191:
  7496   003942  EF79  F01C         	goto	l2919
  7497   003946                     u2190:
  7498   003946  0012               	return		;funcret
  7499   003948                     __end_of_turnLeft:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function _reverseHalfSquare *****************
  7503 ;; Defined at:
  7504 ;;		line 216 in file "dc_motor.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  7507 ;;		 -> motorL(9), 
  7508 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  7509 ;;		 -> motorR(9), 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:        6 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; Hardware stack levels required when called: 3
  7528 ;; This function calls:
  7529 ;;		_fullSpeedReverse
  7530 ;;		_stop
  7531 ;; This function is called by:
  7532 ;;		_Red_R90
  7533 ;;		_Green_L90
  7534 ;;		_Blue_T180
  7535 ;;		_Yellow_rev1_R90
  7536 ;;		_Pink_rev1_L90
  7537 ;;		_Orange_R135
  7538 ;;		_LightBlue_L135
  7539 ;;		_White
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text40
  7544   003AEC                     __ptext40:
  7545                           	callstack 0
  7546   003AEC                     _reverseHalfSquare:
  7547                           	callstack 25
  7548   003AEC                     
  7549                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  7550   003AEC  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7551   003AF0  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7552   003AF4  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7553   003AF8  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7554   003AFC  ECBB  F01B         	call	_stop	;wreg free
  7555   003B00                     
  7556                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7557   003B00  0E09               	movlw	9
  7558   003B02  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7559   003B04  0E1E               	movlw	30
  7560   003B06  6E1F               	movwf	??_reverseHalfSquare^0,c
  7561   003B08  0EE4               	movlw	228
  7562   003B0A                     u4227:
  7563   003B0A  2EE8               	decfsz	wreg,f,c
  7564   003B0C  D7FE               	bra	u4227
  7565   003B0E  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7566   003B10  D7FC               	bra	u4227
  7567   003B12  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7568   003B14  D7FA               	bra	u4227
  7569   003B16  D000               	nop2	
  7570   003B18                     
  7571                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  7572   003B18  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  7573   003B1C  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  7574   003B20  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  7575   003B24  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  7576   003B28  ECF9  F01D         	call	_fullSpeedReverse	;wreg free
  7577                           
  7578                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  7579   003B2C  0E1D               	movlw	29
  7580   003B2E  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7581   003B30  0E69               	movlw	105
  7582   003B32  6E1F               	movwf	??_reverseHalfSquare^0,c
  7583   003B34  0EA5               	movlw	165
  7584   003B36                     u4237:
  7585   003B36  2EE8               	decfsz	wreg,f,c
  7586   003B38  D7FE               	bra	u4237
  7587   003B3A  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7588   003B3C  D7FC               	bra	u4237
  7589   003B3E  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7590   003B40  D7FA               	bra	u4237
  7591   003B42  F000               	nop	
  7592   003B44                     
  7593                           ;dc_motor.c: 222:     stop(mL,mR);
  7594   003B44  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7595   003B48  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7596   003B4C  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7597   003B50  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7598   003B54  ECBB  F01B         	call	_stop	;wreg free
  7599   003B58                     
  7600                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7601   003B58  0E09               	movlw	9
  7602   003B5A  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7603   003B5C  0E1E               	movlw	30
  7604   003B5E  6E1F               	movwf	??_reverseHalfSquare^0,c
  7605   003B60  0EE4               	movlw	228
  7606   003B62                     u4247:
  7607   003B62  2EE8               	decfsz	wreg,f,c
  7608   003B64  D7FE               	bra	u4247
  7609   003B66  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7610   003B68  D7FC               	bra	u4247
  7611   003B6A  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7612   003B6C  D7FA               	bra	u4247
  7613   003B6E  D000               	nop2	
  7614   003B70  0012               	return		;funcret
  7615   003B72                     __end_of_reverseHalfSquare:
  7616                           	callstack 0
  7617                           
  7618 ;; *************** function _stop *****************
  7619 ;; Defined at:
  7620 ;;		line 93 in file "dc_motor.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7623 ;;		 -> motorL(9), 
  7624 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7625 ;;		 -> motorR(9), 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;Total ram usage:        5 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 2
  7644 ;; This function calls:
  7645 ;;		_setMotorPWM
  7646 ;; This function is called by:
  7647 ;;		_main
  7648 ;;		_Left45
  7649 ;;		_Right45
  7650 ;;		_reverseHalfSquare
  7651 ;;		_Yellow_rev1_R90
  7652 ;;		_Pink_rev1_L90
  7653 ;;		_Orange_R135
  7654 ;;		_White
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text41
  7659   003776                     __ptext41:
  7660                           	callstack 0
  7661   003776                     _stop:
  7662                           	callstack 28
  7663   003776                     
  7664                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  7665   003776  887C               	bsf	124,4,c	;volatile
  7666                           
  7667                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7668   003778  EFF4  F01B         	goto	l2903
  7669   00377C                     l2889:
  7670                           
  7671                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  7672   00377C  C014  FFD9         	movff	stop@mL,fsr2l
  7673   003780  C015  FFDA         	movff	stop@mL+1,fsr2h
  7674   003784  50DF               	movf	indf2,w,c
  7675   003786  B4D8               	btfsc	status,2,c
  7676   003788  EFC8  F01B         	goto	u2151
  7677   00378C  EFCA  F01B         	goto	u2150
  7678   003790                     u2151:
  7679   003790  EFCF  F01B         	goto	l2893
  7680   003794                     u2150:
  7681   003794                     
  7682                           ;dc_motor.c: 100:             mL->power--;
  7683   003794  C014  FFD9         	movff	stop@mL,fsr2l
  7684   003798  C015  FFDA         	movff	stop@mL+1,fsr2h
  7685   00379C  06DF               	decf	indf2,f,c
  7686   00379E                     l2893:
  7687                           
  7688                           ;dc_motor.c: 102:         if ((mR->power)>0){
  7689   00379E  C016  FFD9         	movff	stop@mR,fsr2l
  7690   0037A2  C017  FFDA         	movff	stop@mR+1,fsr2h
  7691   0037A6  50DF               	movf	indf2,w,c
  7692   0037A8  B4D8               	btfsc	status,2,c
  7693   0037AA  EFD9  F01B         	goto	u2161
  7694   0037AE  EFDB  F01B         	goto	u2160
  7695   0037B2                     u2161:
  7696   0037B2  EFE0  F01B         	goto	l2897
  7697   0037B6                     u2160:
  7698   0037B6                     
  7699                           ;dc_motor.c: 103:             mR->power--;
  7700   0037B6  C016  FFD9         	movff	stop@mR,fsr2l
  7701   0037BA  C017  FFDA         	movff	stop@mR+1,fsr2h
  7702   0037BE  06DF               	decf	indf2,f,c
  7703   0037C0                     l2897:
  7704                           
  7705                           ;dc_motor.c: 105:         setMotorPWM(mL);
  7706   0037C0  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7707   0037C4  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7708   0037C8  ECE2  F015         	call	_setMotorPWM	;wreg free
  7709   0037CC                     
  7710                           ;dc_motor.c: 106:         setMotorPWM(mR);
  7711   0037CC  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7712   0037D0  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7713   0037D4  ECE2  F015         	call	_setMotorPWM	;wreg free
  7714   0037D8                     
  7715                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7716   0037D8  0E09               	movlw	9
  7717   0037DA  6E18               	movwf	??_stop^0,c
  7718   0037DC  0E4E               	movlw	78
  7719   0037DE                     u4257:
  7720   0037DE  2EE8               	decfsz	wreg,f,c
  7721   0037E0  D7FE               	bra	u4257
  7722   0037E2  2E18               	decfsz	??_stop^0,f,c
  7723   0037E4  D7FC               	bra	u4257
  7724   0037E6  D000               	nop2	
  7725   0037E8                     l2903:
  7726                           
  7727                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7728   0037E8  C014  FFD9         	movff	stop@mL,fsr2l
  7729   0037EC  C015  FFDA         	movff	stop@mL+1,fsr2h
  7730   0037F0  50DF               	movf	indf2,w,c
  7731   0037F2  B4D8               	btfsc	status,2,c
  7732   0037F4  EFFE  F01B         	goto	u2171
  7733   0037F8  EF00  F01C         	goto	u2170
  7734   0037FC                     u2171:
  7735   0037FC  EF0C  F01C         	goto	l437
  7736   003800                     u2170:
  7737   003800  C016  FFD9         	movff	stop@mR,fsr2l
  7738   003804  C017  FFDA         	movff	stop@mR+1,fsr2h
  7739   003808  50DF               	movf	indf2,w,c
  7740   00380A  A4D8               	btfss	status,2,c
  7741   00380C  EF0A  F01C         	goto	u2181
  7742   003810  EF0C  F01C         	goto	u2180
  7743   003814                     u2181:
  7744   003814  EFBE  F01B         	goto	l2889
  7745   003818                     u2180:
  7746   003818                     l437:
  7747                           
  7748                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  7749   003818  987C               	bcf	124,4,c	;volatile
  7750   00381A  0012               	return		;funcret
  7751   00381C                     __end_of_stop:
  7752                           	callstack 0
  7753                           
  7754 ;; *************** function _fullSpeedReverse *****************
  7755 ;; Defined at:
  7756 ;;		line 163 in file "dc_motor.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7759 ;;		 -> motorL(9), 
  7760 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7761 ;;		 -> motorR(9), 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  i               2   24[COMRAM] unsigned int 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;Total ram usage:        7 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; Hardware stack levels required when called: 2
  7780 ;; This function calls:
  7781 ;;		_setMotorPWM
  7782 ;; This function is called by:
  7783 ;;		_reverseHalfSquare
  7784 ;;		_Yellow_rev1_R90
  7785 ;;		_Pink_rev1_L90
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text42
  7790   003BF2                     __ptext42:
  7791                           	callstack 0
  7792   003BF2                     _fullSpeedReverse:
  7793                           	callstack 25
  7794   003BF2                     
  7795                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  7796   003BF2  EE20 F001          	lfsr	2,1
  7797   003BF6  5014               	movf	fullSpeedReverse@mL^0,w,c
  7798   003BF8  26D9               	addwf	fsr2l,f,c
  7799   003BFA  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  7800   003BFC  22DA               	addwfc	fsr2h,f,c
  7801   003BFE  0E00               	movlw	0
  7802   003C00  6EDF               	movwf	indf2,c
  7803                           
  7804                           ;dc_motor.c: 166:  (mR->direction) = 0;
  7805   003C02  EE20 F001          	lfsr	2,1
  7806   003C06  5016               	movf	fullSpeedReverse@mR^0,w,c
  7807   003C08  26D9               	addwf	fsr2l,f,c
  7808   003C0A  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  7809   003C0C  22DA               	addwfc	fsr2h,f,c
  7810   003C0E  0E00               	movlw	0
  7811   003C10  6EDF               	movwf	indf2,c
  7812   003C12                     
  7813                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  7814   003C12  0E00               	movlw	0
  7815   003C14  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  7816   003C16  0E00               	movlw	0
  7817   003C18  6E19               	movwf	fullSpeedReverse@i^0,c
  7818   003C1A                     l3019:
  7819                           
  7820                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  7821   003C1A  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  7822   003C1E  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  7823   003C22  2ADF               	incf	indf2,f,c
  7824                           
  7825                           ;dc_motor.c: 171:         (mR->power)++;
  7826   003C24  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  7827   003C28  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  7828   003C2C  2ADF               	incf	indf2,f,c
  7829   003C2E                     
  7830                           ;dc_motor.c: 172:         setMotorPWM(mL);
  7831   003C2E  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  7832   003C32  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  7833   003C36  ECE2  F015         	call	_setMotorPWM	;wreg free
  7834   003C3A                     
  7835                           ;dc_motor.c: 173:         setMotorPWM(mR);
  7836   003C3A  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  7837   003C3E  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  7838   003C42  ECE2  F015         	call	_setMotorPWM	;wreg free
  7839   003C46                     
  7840                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7841   003C46  0E09               	movlw	9
  7842   003C48  6E18               	movwf	??_fullSpeedReverse^0,c
  7843   003C4A  0E4E               	movlw	78
  7844   003C4C                     u4267:
  7845   003C4C  2EE8               	decfsz	wreg,f,c
  7846   003C4E  D7FE               	bra	u4267
  7847   003C50  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  7848   003C52  D7FC               	bra	u4267
  7849   003C54  D000               	nop2	
  7850   003C56                     
  7851                           ;dc_motor.c: 175:     }
  7852   003C56  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  7853   003C58  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  7854   003C5A  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  7855   003C5C  E109               	bnz	u2350
  7856   003C5E  0E32               	movlw	50
  7857   003C60  5C19               	subwf	fullSpeedReverse@i^0,w,c
  7858   003C62  A0D8               	btfss	status,0,c
  7859   003C64  EF36  F01E         	goto	u2351
  7860   003C68  EF38  F01E         	goto	u2350
  7861   003C6C                     u2351:
  7862   003C6C  EF0D  F01E         	goto	l3019
  7863   003C70                     u2350:
  7864   003C70  0012               	return		;funcret
  7865   003C72                     __end_of_fullSpeedReverse:
  7866                           	callstack 0
  7867                           
  7868 ;; *************** function _setMotorPWM *****************
  7869 ;; Defined at:
  7870 ;;		line 70 in file "dc_motor.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  m               2   13[COMRAM] PTR struct DC_motor
  7873 ;;		 -> motorR(9), motorL(9), 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  negDuty         1   18[COMRAM] unsigned char 
  7876 ;;  posDuty         1   17[COMRAM] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        6 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 1
  7893 ;; This function calls:
  7894 ;;		___lwdiv
  7895 ;;		___wmul
  7896 ;; This function is called by:
  7897 ;;		_stop
  7898 ;;		_turnLeft
  7899 ;;		_turnRight
  7900 ;;		_fullSpeedAhead
  7901 ;;		_fullSpeedReverse
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text43
  7906   002BC4                     __ptext43:
  7907                           	callstack 0
  7908   002BC4                     _setMotorPWM:
  7909                           	callstack 28
  7910   002BC4                     
  7911                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  7912   002BC4  EE20 F002          	lfsr	2,2
  7913   002BC8  500E               	movf	setMotorPWM@m^0,w,c
  7914   002BCA  26D9               	addwf	fsr2l,f,c
  7915   002BCC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7916   002BCE  22DA               	addwfc	fsr2h,f,c
  7917   002BD0  50DF               	movf	indf2,w,c
  7918   002BD2  B4D8               	btfsc	status,2,c
  7919   002BD4  EFEE  F015         	goto	u2071
  7920   002BD8  EFF0  F015         	goto	u2070
  7921   002BDC                     u2071:
  7922   002BDC  EF24  F016         	goto	l2853
  7923   002BE0                     u2070:
  7924   002BE0                     
  7925                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  7926   002BE0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7927   002BE4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7928   002BE8  50DF               	movf	indf2,w,c
  7929   002BEA  6E10               	movwf	??_setMotorPWM^0,c
  7930   002BEC  5010               	movf	??_setMotorPWM^0,w,c
  7931   002BEE  6E01               	movwf	___wmul@multiplier^0,c
  7932   002BF0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7933   002BF2  EE20 F003          	lfsr	2,3
  7934   002BF6  500E               	movf	setMotorPWM@m^0,w,c
  7935   002BF8  26D9               	addwf	fsr2l,f,c
  7936   002BFA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7937   002BFC  22DA               	addwfc	fsr2h,f,c
  7938   002BFE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7939   002C02  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7940   002C06  ECA6  F021         	call	___wmul	;wreg free
  7941   002C0A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7942   002C0E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7943   002C12  0E00               	movlw	0
  7944   002C14  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7945   002C16  0E64               	movlw	100
  7946   002C18  6E09               	movwf	___lwdiv@divisor^0,c
  7947   002C1A  ECF6  F01E         	call	___lwdiv	;wreg free
  7948   002C1E  EE20 F003          	lfsr	2,3
  7949   002C22  500E               	movf	setMotorPWM@m^0,w,c
  7950   002C24  26D9               	addwf	fsr2l,f,c
  7951   002C26  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7952   002C28  22DA               	addwfc	fsr2h,f,c
  7953   002C2A  50DF               	movf	indf2,w,c
  7954   002C2C  6E11               	movwf	(??_setMotorPWM+1)^0,c
  7955   002C2E  5007               	movf	?___lwdiv^0,w,c
  7956   002C30  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  7957   002C32  6E12               	movwf	setMotorPWM@posDuty^0,c
  7958   002C34                     
  7959                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  7960   002C34  EE20 F003          	lfsr	2,3
  7961   002C38  500E               	movf	setMotorPWM@m^0,w,c
  7962   002C3A  26D9               	addwf	fsr2l,f,c
  7963   002C3C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7964   002C3E  22DA               	addwfc	fsr2h,f,c
  7965   002C40  50DF               	movf	indf2,w,c
  7966   002C42  6E13               	movwf	setMotorPWM@negDuty^0,c
  7967                           
  7968                           ;dc_motor.c: 77:     }
  7969   002C44  EF47  F016         	goto	l2857
  7970   002C48                     l2853:
  7971                           
  7972                           ;dc_motor.c: 79:         posDuty=0;
  7973   002C48  0E00               	movlw	0
  7974   002C4A  6E12               	movwf	setMotorPWM@posDuty^0,c
  7975   002C4C                     
  7976                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7977   002C4C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7978   002C50  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7979   002C54  50DF               	movf	indf2,w,c
  7980   002C56  6E10               	movwf	??_setMotorPWM^0,c
  7981   002C58  5010               	movf	??_setMotorPWM^0,w,c
  7982   002C5A  6E01               	movwf	___wmul@multiplier^0,c
  7983   002C5C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7984   002C5E  EE20 F003          	lfsr	2,3
  7985   002C62  500E               	movf	setMotorPWM@m^0,w,c
  7986   002C64  26D9               	addwf	fsr2l,f,c
  7987   002C66  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7988   002C68  22DA               	addwfc	fsr2h,f,c
  7989   002C6A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7990   002C6E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7991   002C72  ECA6  F021         	call	___wmul	;wreg free
  7992   002C76  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7993   002C7A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7994   002C7E  0E00               	movlw	0
  7995   002C80  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7996   002C82  0E64               	movlw	100
  7997   002C84  6E09               	movwf	___lwdiv@divisor^0,c
  7998   002C86  ECF6  F01E         	call	___lwdiv	;wreg free
  7999   002C8A  5007               	movf	?___lwdiv^0,w,c
  8000   002C8C  6E13               	movwf	setMotorPWM@negDuty^0,c
  8001   002C8E                     l2857:
  8002                           
  8003                           ;dc_motor.c: 83:     if (m->direction) {
  8004   002C8E  EE20 F001          	lfsr	2,1
  8005   002C92  500E               	movf	setMotorPWM@m^0,w,c
  8006   002C94  26D9               	addwf	fsr2l,f,c
  8007   002C96  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8008   002C98  22DA               	addwfc	fsr2h,f,c
  8009   002C9A  50DF               	movf	indf2,w,c
  8010   002C9C  B4D8               	btfsc	status,2,c
  8011   002C9E  EF53  F016         	goto	u2081
  8012   002CA2  EF55  F016         	goto	u2080
  8013   002CA6                     u2081:
  8014   002CA6  EF77  F016         	goto	l2861
  8015   002CAA                     u2080:
  8016   002CAA                     
  8017                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  8018   002CAA  EE20 F005          	lfsr	2,5
  8019   002CAE  500E               	movf	setMotorPWM@m^0,w,c
  8020   002CB0  26D9               	addwf	fsr2l,f,c
  8021   002CB2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8022   002CB4  22DA               	addwfc	fsr2h,f,c
  8023   002CB6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8024   002CBA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8025   002CBE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8026   002CC2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8027   002CC6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8028                           
  8029                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  8030   002CCA  EE20 F007          	lfsr	2,7
  8031   002CCE  500E               	movf	setMotorPWM@m^0,w,c
  8032   002CD0  26D9               	addwf	fsr2l,f,c
  8033   002CD2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8034   002CD4  22DA               	addwfc	fsr2h,f,c
  8035   002CD6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8036   002CDA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8037   002CDE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8038   002CE2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8039   002CE6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8040                           
  8041                           ;dc_motor.c: 86:     } else {
  8042   002CEA  EF97  F016         	goto	l428
  8043   002CEE                     l2861:
  8044                           
  8045                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  8046   002CEE  EE20 F005          	lfsr	2,5
  8047   002CF2  500E               	movf	setMotorPWM@m^0,w,c
  8048   002CF4  26D9               	addwf	fsr2l,f,c
  8049   002CF6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8050   002CF8  22DA               	addwfc	fsr2h,f,c
  8051   002CFA  CFDE F010          	movff	postinc2,??_setMotorPWM
  8052   002CFE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8053   002D02  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8054   002D06  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8055   002D0A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8056                           
  8057                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  8058   002D0E  EE20 F007          	lfsr	2,7
  8059   002D12  500E               	movf	setMotorPWM@m^0,w,c
  8060   002D14  26D9               	addwf	fsr2l,f,c
  8061   002D16  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8062   002D18  22DA               	addwfc	fsr2h,f,c
  8063   002D1A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8064   002D1E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8065   002D22  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8066   002D26  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8067   002D2A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8068   002D2E                     l428:
  8069   002D2E  0012               	return		;funcret
  8070   002D30                     __end_of_setMotorPWM:
  8071                           	callstack 0
  8072                           
  8073 ;; *************** function ___wmul *****************
  8074 ;; Defined at:
  8075 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;  multiplier      2    0[COMRAM] unsigned int 
  8078 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8079 ;; Auto vars:     Size  Location     Type
  8080 ;;  product         2    4[COMRAM] unsigned int 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  2    0[COMRAM] unsigned int 
  8083 ;; Registers used:
  8084 ;;		wreg, status,2, status,0, prodl, prodh
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8094 ;;Total ram usage:        6 bytes
  8095 ;; Hardware stack levels used: 1
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_setMotorPWM
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text44
  8104   00434C                     __ptext44:
  8105                           	callstack 0
  8106   00434C                     ___wmul:
  8107                           	callstack 28
  8108   00434C  5001               	movf	___wmul@multiplier^0,w,c
  8109   00434E  0203               	mulwf	___wmul@multiplicand^0,c
  8110   004350  CFF3 F005          	movff	prodl,___wmul@product
  8111   004354  CFF4 F006          	movff	prodh,___wmul@product+1
  8112   004358  5001               	movf	___wmul@multiplier^0,w,c
  8113   00435A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8114   00435C  50F3               	movf	243,w,c
  8115   00435E  2606               	addwf	(___wmul@product+1)^0,f,c
  8116   004360  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8117   004362  0203               	mulwf	___wmul@multiplicand^0,c
  8118   004364  50F3               	movf	243,w,c
  8119   004366  2606               	addwf	(___wmul@product+1)^0,f,c
  8120   004368  C005  F001         	movff	___wmul@product,?___wmul
  8121   00436C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8122   004370  0012               	return		;funcret
  8123   004372                     __end_of___wmul:
  8124                           	callstack 0
  8125                           
  8126 ;; *************** function ___lwdiv *****************
  8127 ;; Defined at:
  8128 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  dividend        2    6[COMRAM] unsigned int 
  8131 ;;  divisor         2    8[COMRAM] unsigned int 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  quotient        2   10[COMRAM] unsigned int 
  8134 ;;  counter         1   12[COMRAM] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  2    6[COMRAM] unsigned int 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2, status,0
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;Total ram usage:        7 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_setMotorPWM
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text45
  8158   003DEC                     __ptext45:
  8159                           	callstack 0
  8160   003DEC                     ___lwdiv:
  8161                           	callstack 28
  8162   003DEC  0E00               	movlw	0
  8163   003DEE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8164   003DF0  0E00               	movlw	0
  8165   003DF2  6E0B               	movwf	___lwdiv@quotient^0,c
  8166   003DF4  5009               	movf	___lwdiv@divisor^0,w,c
  8167   003DF6  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8168   003DF8  B4D8               	btfsc	status,2,c
  8169   003DFA  EF01  F01F         	goto	u2041
  8170   003DFE  EF03  F01F         	goto	u2040
  8171   003E02                     u2041:
  8172   003E02  EF2B  F01F         	goto	l1049
  8173   003E06                     u2040:
  8174   003E06  0E01               	movlw	1
  8175   003E08  6E0D               	movwf	___lwdiv@counter^0,c
  8176   003E0A  EF0B  F01F         	goto	l2833
  8177   003E0E                     l2831:
  8178   003E0E  90D8               	bcf	status,0,c
  8179   003E10  3609               	rlcf	___lwdiv@divisor^0,f,c
  8180   003E12  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8181   003E14  2A0D               	incf	___lwdiv@counter^0,f,c
  8182   003E16                     l2833:
  8183   003E16  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8184   003E18  EF10  F01F         	goto	u2051
  8185   003E1C  EF12  F01F         	goto	u2050
  8186   003E20                     u2051:
  8187   003E20  EF07  F01F         	goto	l2831
  8188   003E24                     u2050:
  8189   003E24                     l2835:
  8190   003E24  90D8               	bcf	status,0,c
  8191   003E26  360B               	rlcf	___lwdiv@quotient^0,f,c
  8192   003E28  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8193   003E2A  5009               	movf	___lwdiv@divisor^0,w,c
  8194   003E2C  5C07               	subwf	___lwdiv@dividend^0,w,c
  8195   003E2E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8196   003E30  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8197   003E32  A0D8               	btfss	status,0,c
  8198   003E34  EF1E  F01F         	goto	u2061
  8199   003E38  EF20  F01F         	goto	u2060
  8200   003E3C                     u2061:
  8201   003E3C  EF25  F01F         	goto	l2843
  8202   003E40                     u2060:
  8203   003E40  5009               	movf	___lwdiv@divisor^0,w,c
  8204   003E42  5E07               	subwf	___lwdiv@dividend^0,f,c
  8205   003E44  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8206   003E46  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8207   003E48  800B               	bsf	___lwdiv@quotient^0,0,c
  8208   003E4A                     l2843:
  8209   003E4A  90D8               	bcf	status,0,c
  8210   003E4C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8211   003E4E  3209               	rrcf	___lwdiv@divisor^0,f,c
  8212   003E50  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8213   003E52  EF12  F01F         	goto	l2835
  8214   003E56                     l1049:
  8215   003E56  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8216   003E5A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8217   003E5E  0012               	return		;funcret
  8218   003E60                     __end_of___lwdiv:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function _TimerReset *****************
  8222 ;; Defined at:
  8223 ;;		line 19 in file "timer.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;Total ram usage:        0 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_Red_R90
  8247 ;;		_Green_L90
  8248 ;;		_Blue_T180
  8249 ;;		_Yellow_rev1_R90
  8250 ;;		_Pink_rev1_L90
  8251 ;;		_Orange_R135
  8252 ;;		_LightBlue_L135
  8253 ;;		_White
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text46
  8258   004414                     __ptext46:
  8259                           	callstack 0
  8260   004414                     _TimerReset:
  8261                           	callstack 28
  8262   004414                     
  8263                           ;timer.c: 21:     TMR0L = 0;
  8264   004414  0E00               	movlw	0
  8265   004416  6ED3               	movwf	211,c	;volatile
  8266                           
  8267                           ;timer.c: 22:     TMR0H = 0;
  8268   004418  0E00               	movlw	0
  8269   00441A  6ED4               	movwf	212,c	;volatile
  8270   00441C  0012               	return		;funcret
  8271   00441E                     __end_of_TimerReset:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function _Color2String *****************
  8275 ;; Defined at:
  8276 ;;		line 39 in file "serial.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  buf             2   68[COMRAM] PTR unsigned char 
  8279 ;;		 -> main@data(100), 
  8280 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  8281 ;;		 -> colorf(22), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  8284 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  8285 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  8286 ;;		 -> STR_1(1), 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8300 ;;Total ram usage:        6 bytes
  8301 ;; Hardware stack levels used: 1
  8302 ;; Hardware stack levels required when called: 6
  8303 ;; This function calls:
  8304 ;;		_Hue2Colour
  8305 ;;		_sendStringSerial4
  8306 ;;		_sprintf
  8307 ;; This function is called by:
  8308 ;;		_main
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text47
  8313   004250                     __ptext47:
  8314                           	callstack 0
  8315   004250                     _Color2String:
  8316                           	callstack 24
  8317   004250                     
  8318                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  8319   004250  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  8320   004254  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  8321   004258  ECAA  F00A         	call	_Hue2Colour	;wreg free
  8322   00425C  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  8323   004260  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  8324   004264                     
  8325                           ;serial.c: 45:     sprintf(buf,"Colour is %s  \r",colourname);
  8326   004264  C045  F032         	movff	Color2String@buf,sprintf@s
  8327   004268  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  8328   00426C  0E01               	movlw	low STR_10
  8329   00426E  6E34               	movwf	sprintf@fmt^0,c
  8330   004270  0E0E               	movlw	high STR_10
  8331   004272  6E35               	movwf	(sprintf@fmt+1)^0,c
  8332   004274  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  8333   004278  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  8334   00427C  EC76  F020         	call	_sprintf	;wreg free
  8335   004280                     
  8336                           ;serial.c: 46:     sendStringSerial4(buf);
  8337   004280  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  8338   004284  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  8339   004288  EC47  F021         	call	_sendStringSerial4	;wreg free
  8340   00428C  0012               	return		;funcret
  8341   00428E                     __end_of_Color2String:
  8342                           	callstack 0
  8343                           
  8344 ;; *************** function _sprintf *****************
  8345 ;; Defined at:
  8346 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  s               2   49[COMRAM] PTR unsigned char 
  8349 ;;		 -> main@data(100), 
  8350 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  8351 ;;		 -> STR_10(16), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  f              11   57[COMRAM] struct _IO_FILE
  8354 ;;  ap              2   55[COMRAM] PTR void [1]
  8355 ;;		 -> ?_sprintf(2), 
  8356 ;;  ret             2    0        int 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  2   49[COMRAM] int 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8366 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;Total ram usage:       19 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 5
  8373 ;; This function calls:
  8374 ;;		_vfprintf
  8375 ;; This function is called by:
  8376 ;;		_Color2String
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text48
  8381   0040EC                     __ptext48:
  8382                           	callstack 0
  8383   0040EC                     _sprintf:
  8384                           	callstack 24
  8385   0040EC  0E36               	movlw	low (?_sprintf+4)
  8386   0040EE  6E38               	movwf	sprintf@ap^0,c
  8387   0040F0  0E00               	movlw	high (?_sprintf+4)
  8388   0040F2  6E39               	movwf	(sprintf@ap+1)^0,c
  8389   0040F4  C032  F03A         	movff	sprintf@s,sprintf@f
  8390   0040F8  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  8391   0040FC  0E00               	movlw	0
  8392   0040FE  6E3E               	movwf	(sprintf@f+4)^0,c
  8393   004100  0E00               	movlw	0
  8394   004102  6E3D               	movwf	(sprintf@f+3)^0,c
  8395   004104  0E00               	movlw	0
  8396   004106  6E44               	movwf	(sprintf@f+10)^0,c
  8397   004108  0E00               	movlw	0
  8398   00410A  6E43               	movwf	(sprintf@f+9)^0,c
  8399   00410C  0E3A               	movlw	low sprintf@f
  8400   00410E  6E2A               	movwf	vfprintf@fp^0,c
  8401   004110  0E00               	movlw	high sprintf@f
  8402   004112  6E2B               	movwf	(vfprintf@fp+1)^0,c
  8403   004114  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  8404   004118  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8405   00411C  0E38               	movlw	low sprintf@ap
  8406   00411E  6E2E               	movwf	vfprintf@ap^0,c
  8407   004120  0E00               	movlw	high sprintf@ap
  8408   004122  6E2F               	movwf	(vfprintf@ap+1)^0,c
  8409   004124  EC9D  F020         	call	_vfprintf	;wreg free
  8410   004128  503D               	movf	(sprintf@f+3)^0,w,c
  8411   00412A  2432               	addwf	sprintf@s^0,w,c
  8412   00412C  6ED9               	movwf	fsr2l,c
  8413   00412E  503E               	movf	(sprintf@f+4)^0,w,c
  8414   004130  2033               	addwfc	(sprintf@s+1)^0,w,c
  8415   004132  6EDA               	movwf	fsr2h,c
  8416   004134  0E00               	movlw	0
  8417   004136  6EDF               	movwf	indf2,c
  8418   004138  0012               	return		;funcret
  8419   00413A                     __end_of_sprintf:
  8420                           	callstack 0
  8421                           
  8422 ;; *************** function _vfprintf *****************
  8423 ;; Defined at:
  8424 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  8427 ;;		 -> sprintf@f(11), 
  8428 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  8429 ;;		 -> STR_10(16), 
  8430 ;;  ap              2   45[COMRAM] PTR PTR void 
  8431 ;;		 -> sprintf@ap(2), 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  8434 ;;		 -> STR_10(16), 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  2   41[COMRAM] int 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8444 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;Total ram usage:        8 bytes
  8449 ;; Hardware stack levels used: 1
  8450 ;; Hardware stack levels required when called: 4
  8451 ;; This function calls:
  8452 ;;		_vfpfcnvrt
  8453 ;; This function is called by:
  8454 ;;		_sprintf
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text49
  8459   00413A                     __ptext49:
  8460                           	callstack 0
  8461   00413A                     _vfprintf:
  8462                           	callstack 24
  8463   00413A                     
  8464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  8465   00413A  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  8466   00413E  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8467                           
  8468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8469   004142  EFB1  F020         	goto	l3389
  8470   004146                     l3387:
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8473   004146  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  8474   00414A  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8475   00414E  0E30               	movlw	low vfprintf@cfmt
  8476   004150  6E22               	movwf	vfpfcnvrt@fmt^0,c
  8477   004152  0E00               	movlw	high vfprintf@cfmt
  8478   004154  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8479   004156  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  8480   00415A  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8481   00415E  EC98  F016         	call	_vfpfcnvrt	;wreg free
  8482   004162                     l3389:
  8483                           
  8484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8485   004162  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  8486   004166  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8487   00416A                     	if	0	;tblptru may be non-zero
  8488   00416A                     	endif
  8489   00416A                     	if	0	;tblptru may be non-zero
  8490   00416A                     	endif
  8491   00416A  0008               	tblrd		*
  8492   00416C  50F5               	movf	tablat,w,c
  8493   00416E  0900               	iorlw	0
  8494   004170  A4D8               	btfss	status,2,c
  8495   004172  EFBD  F020         	goto	u2881
  8496   004176  EFBF  F020         	goto	u2880
  8497   00417A                     u2881:
  8498   00417A  EFA3  F020         	goto	l3387
  8499   00417E                     u2880:
  8500   00417E                     
  8501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  8502   00417E  0E00               	movlw	0
  8503   004180  6E2B               	movwf	(?_vfprintf+1)^0,c
  8504   004182  0E00               	movlw	0
  8505   004184  6E2A               	movwf	?_vfprintf^0,c
  8506   004186  0012               	return		;funcret
  8507   004188                     __end_of_vfprintf:
  8508                           	callstack 0
  8509                           
  8510 ;; *************** function _vfpfcnvrt *****************
  8511 ;; Defined at:
  8512 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8515 ;;		 -> sprintf@f(11), 
  8516 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  8517 ;;		 -> vfprintf@cfmt(2), 
  8518 ;;  ap              2   35[COMRAM] PTR PTR void 
  8519 ;;		 -> sprintf@ap(2), 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  convarg         8    0        struct .
  8522 ;;  cp              3    0        PTR unsigned char 
  8523 ;;  i               2    0        int 
  8524 ;;  done            2    0        int 
  8525 ;;  c               1    0        unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8535 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;Total ram usage:       10 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 3
  8542 ;; This function calls:
  8543 ;;		_fputc
  8544 ;;		_stoa
  8545 ;;		_strncmp
  8546 ;; This function is called by:
  8547 ;;		_vfprintf
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text50
  8552   002D30                     __ptext50:
  8553                           	callstack 0
  8554   002D30                     _vfpfcnvrt:
  8555                           	callstack 24
  8556   002D30                     
  8557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  8558   002D30  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8559   002D34  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8560   002D38  CFDE FFF6          	movff	postinc2,tblptrl
  8561   002D3C  CFDD FFF7          	movff	postdec2,tblptrh
  8562   002D40                     	if	0	;tblptru may be non-zero
  8563   002D40                     	endif
  8564   002D40                     	if	0	;tblptru may be non-zero
  8565   002D40                     	endif
  8566   002D40  0008               	tblrd		*
  8567   002D42  50F5               	movf	tablat,w,c
  8568   002D44  0A25               	xorlw	37
  8569   002D46  A4D8               	btfss	status,2,c
  8570   002D48  EFA8  F016         	goto	u2361
  8571   002D4C  EFAA  F016         	goto	u2360
  8572   002D50                     u2361:
  8573   002D50  EF30  F017         	goto	l3073
  8574   002D54                     u2360:
  8575   002D54                     
  8576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  8577   002D54  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8578   002D58  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8579   002D5C  2ADE               	incf	postinc2,f,c
  8580   002D5E  0E00               	movlw	0
  8581   002D60  22DD               	addwfc	postdec2,f,c
  8582   002D62                     
  8583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  8584   002D62  0E00               	movlw	0
  8585   002D64  0100               	movlb	0	; () banked
  8586   002D66  6FDB               	movwf	(_width+1)& (0+255),b
  8587   002D68  0E00               	movlw	0
  8588   002D6A  6FDA               	movwf	_width& (0+255),b
  8589   002D6C  C0DA  F0DE         	movff	_width,_flags
  8590   002D70                     
  8591                           ; BSR set to: 0
  8592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  8593   002D70  69DC               	setf	_prec& (0+255),b
  8594   002D72  69DD               	setf	(_prec+1)& (0+255),b
  8595   002D74                     
  8596                           ; BSR set to: 0
  8597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  8598   002D74  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8599   002D78  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8600   002D7C  CFDE FFF6          	movff	postinc2,tblptrl
  8601   002D80  CFDD FFF7          	movff	postdec2,tblptrh
  8602   002D84                     	if	0	;tblptru may be non-zero
  8603   002D84                     	endif
  8604   002D84                     	if	0	;tblptru may be non-zero
  8605   002D84                     	endif
  8606   002D84  0008               	tblrd		*
  8607   002D86  50F5               	movf	tablat,w,c
  8608   002D88  0A73               	xorlw	115
  8609   002D8A  B4D8               	btfsc	status,2,c
  8610   002D8C  EFCA  F016         	goto	u2371
  8611   002D90  EFCC  F016         	goto	u2370
  8612   002D94                     u2371:
  8613   002D94  EFE7  F016         	goto	l3057
  8614   002D98                     u2370:
  8615   002D98                     
  8616                           ; BSR set to: 0
  8617   002D98  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8618   002D9C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8619   002DA0  CFDE F001          	movff	postinc2,strncmp@_l
  8620   002DA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  8621   002DA8  0E48               	movlw	low STR_11
  8622   002DAA  6E03               	movwf	strncmp@_r^0,c
  8623   002DAC  0E0E               	movlw	high STR_11
  8624   002DAE  6E04               	movwf	(strncmp@_r+1)^0,c
  8625   002DB0  0E00               	movlw	0
  8626   002DB2  6E06               	movwf	(strncmp@n+1)^0,c
  8627   002DB4  0E03               	movlw	3
  8628   002DB6  6E05               	movwf	strncmp@n^0,c
  8629   002DB8  ECE2  F019         	call	_strncmp	;wreg free
  8630   002DBC  5001               	movf	?_strncmp^0,w,c
  8631   002DBE  1002               	iorwf	(?_strncmp+1)^0,w,c
  8632   002DC0  A4D8               	btfss	status,2,c
  8633   002DC2  EFE5  F016         	goto	u2381
  8634   002DC6  EFE7  F016         	goto	u2380
  8635   002DCA                     u2381:
  8636   002DCA  EF27  F017         	goto	l3069
  8637   002DCE                     u2380:
  8638   002DCE                     l3057:
  8639                           
  8640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  8641   002DCE  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8642   002DD2  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8643   002DD6  CFDE FFF6          	movff	postinc2,tblptrl
  8644   002DDA  CFDD FFF7          	movff	postdec2,tblptrh
  8645   002DDE                     	if	0	;tblptru may be non-zero
  8646   002DDE                     	endif
  8647   002DDE                     	if	0	;tblptru may be non-zero
  8648   002DDE                     	endif
  8649   002DDE  0008               	tblrd		*
  8650   002DE0  50F5               	movf	tablat,w,c
  8651   002DE2  0A73               	xorlw	115
  8652   002DE4  B4D8               	btfsc	status,2,c
  8653   002DE6  EFF7  F016         	goto	u2391
  8654   002DEA  EFF9  F016         	goto	u2390
  8655   002DEE                     u2391:
  8656   002DEE  EFFF  F016         	goto	l3061
  8657   002DF2                     u2390:
  8658   002DF2  0E00               	movlw	0
  8659   002DF4  6E29               	movwf	(_vfpfcnvrt$2673+1)^0,c
  8660   002DF6  0E03               	movlw	3
  8661   002DF8  6E28               	movwf	_vfpfcnvrt$2673^0,c
  8662   002DFA  EF03  F017         	goto	l3063
  8663   002DFE                     l3061:
  8664   002DFE  0E00               	movlw	0
  8665   002E00  6E29               	movwf	(_vfpfcnvrt$2673+1)^0,c
  8666   002E02  0E01               	movlw	1
  8667   002E04  6E28               	movwf	_vfpfcnvrt$2673^0,c
  8668   002E06                     l3063:
  8669   002E06  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8670   002E0A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8671   002E0E  5028               	movf	_vfpfcnvrt$2673^0,w,c
  8672   002E10  26DE               	addwf	postinc2,f,c
  8673   002E12  5029               	movf	(_vfpfcnvrt$2673+1)^0,w,c
  8674   002E14  22DD               	addwfc	postdec2,f,c
  8675   002E16                     
  8676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  8677   002E16  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8678   002E1A  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8679   002E1E  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8680   002E22  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8681   002E26  CFDF F026          	movff	indf2,??_vfpfcnvrt
  8682   002E2A  0E02               	movlw	2
  8683   002E2C  26DE               	addwf	postinc2,f,c
  8684   002E2E  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  8685   002E32  0E00               	movlw	0
  8686   002E34  22DD               	addwfc	postdec2,f,c
  8687   002E36  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8688   002E3A  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8689   002E3E  CFDE F00C          	movff	postinc2,stoa@s
  8690   002E42  CFDD F00D          	movff	postdec2,stoa@s+1
  8691   002E46  EC45  F017         	call	_stoa	;wreg free
  8692   002E4A  EF44  F017         	goto	l1293
  8693   002E4E                     l3069:
  8694                           
  8695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  8696   002E4E  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8697   002E52  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8698   002E56  2ADE               	incf	postinc2,f,c
  8699   002E58  0E00               	movlw	0
  8700   002E5A  22DD               	addwfc	postdec2,f,c
  8701   002E5C  EF44  F017         	goto	l1293
  8702   002E60                     l3073:
  8703                           
  8704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  8705   002E60  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8706   002E64  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8707   002E68  CFDE FFF6          	movff	postinc2,tblptrl
  8708   002E6C  CFDD FFF7          	movff	postdec2,tblptrh
  8709   002E70                     	if	0	;tblptru may be non-zero
  8710   002E70                     	endif
  8711   002E70                     	if	0	;tblptru may be non-zero
  8712   002E70                     	endif
  8713   002E70  0008               	tblrd		*
  8714   002E72  50F5               	movf	tablat,w,c
  8715   002E74  6E01               	movwf	fputc@c^0,c
  8716   002E76  6A02               	clrf	(fputc@c+1)^0,c
  8717   002E78  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8718   002E7C  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8719   002E80  EC51  F01A         	call	_fputc	;wreg free
  8720   002E84  EF27  F017         	goto	l3069
  8721   002E88                     l1293:
  8722   002E88  0012               	return		;funcret
  8723   002E8A                     __end_of_vfpfcnvrt:
  8724                           	callstack 0
  8725                           
  8726 ;; *************** function _strncmp *****************
  8727 ;; Defined at:
  8728 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8731 ;;		 -> STR_10(16), 
  8732 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8733 ;;		 -> STR_13(4), 
  8734 ;;  n               2    4[COMRAM] unsigned int 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8737 ;;		 -> STR_13(4), 
  8738 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8739 ;;		 -> STR_10(16), 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  2    0[COMRAM] int 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:       11 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_vfpfcnvrt
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text51
  8763   0033C4                     __ptext51:
  8764                           	callstack 0
  8765   0033C4                     _strncmp:
  8766                           	callstack 26
  8767   0033C4  C001  F008         	movff	strncmp@_l,strncmp@l
  8768   0033C8  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8769   0033CC  C003  F00A         	movff	strncmp@_r,strncmp@r
  8770   0033D0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8771   0033D4  0605               	decf	strncmp@n^0,f,c
  8772   0033D6  A0D8               	btfss	status,0,c
  8773   0033D8  0606               	decf	(strncmp@n+1)^0,f,c
  8774   0033DA  2805               	incf	strncmp@n^0,w,c
  8775   0033DC  E106               	bnz	u2271
  8776   0033DE  2806               	incf	(strncmp@n+1)^0,w,c
  8777   0033E0  A4D8               	btfss	status,2,c
  8778   0033E2  EFF5  F019         	goto	u2271
  8779   0033E6  EFF7  F019         	goto	u2270
  8780   0033EA                     u2271:
  8781   0033EA  EF04  F01A         	goto	l2971
  8782   0033EE                     u2270:
  8783   0033EE  0E00               	movlw	0
  8784   0033F0  6E02               	movwf	(?_strncmp+1)^0,c
  8785   0033F2  0E00               	movlw	0
  8786   0033F4  6E01               	movwf	?_strncmp^0,c
  8787   0033F6  EF50  F01A         	goto	l1332
  8788   0033FA                     l2969:
  8789   0033FA  4A08               	infsnz	strncmp@l^0,f,c
  8790   0033FC  2A09               	incf	(strncmp@l+1)^0,f,c
  8791   0033FE  4A0A               	infsnz	strncmp@r^0,f,c
  8792   003400  2A0B               	incf	(strncmp@r+1)^0,f,c
  8793   003402  0605               	decf	strncmp@n^0,f,c
  8794   003404  A0D8               	btfss	status,0,c
  8795   003406  0606               	decf	(strncmp@n+1)^0,f,c
  8796   003408                     l2971:
  8797   003408  C008  FFF6         	movff	strncmp@l,tblptrl
  8798   00340C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8799   003410                     	if	0	;tblptru may be non-zero
  8800   003410                     	endif
  8801   003410                     	if	0	;tblptru may be non-zero
  8802   003410                     	endif
  8803   003410  0008               	tblrd		*
  8804   003412  50F5               	movf	tablat,w,c
  8805   003414  0900               	iorlw	0
  8806   003416  B4D8               	btfsc	status,2,c
  8807   003418  EF10  F01A         	goto	u2281
  8808   00341C  EF12  F01A         	goto	u2280
  8809   003420                     u2281:
  8810   003420  EF3E  F01A         	goto	l2979
  8811   003424                     u2280:
  8812   003424  C00A  FFF6         	movff	strncmp@r,tblptrl
  8813   003428  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8814   00342C                     	if	0	;tblptru may be non-zero
  8815   00342C                     	endif
  8816   00342C                     	if	0	;tblptru may be non-zero
  8817   00342C                     	endif
  8818   00342C  0008               	tblrd		*
  8819   00342E  50F5               	movf	tablat,w,c
  8820   003430  0900               	iorlw	0
  8821   003432  B4D8               	btfsc	status,2,c
  8822   003434  EF1E  F01A         	goto	u2291
  8823   003438  EF20  F01A         	goto	u2290
  8824   00343C                     u2291:
  8825   00343C  EF3E  F01A         	goto	l2979
  8826   003440                     u2290:
  8827   003440  5005               	movf	strncmp@n^0,w,c
  8828   003442  1006               	iorwf	(strncmp@n+1)^0,w,c
  8829   003444  B4D8               	btfsc	status,2,c
  8830   003446  EF27  F01A         	goto	u2301
  8831   00344A  EF29  F01A         	goto	u2300
  8832   00344E                     u2301:
  8833   00344E  EF3E  F01A         	goto	l2979
  8834   003452                     u2300:
  8835   003452  C008  FFF6         	movff	strncmp@l,tblptrl
  8836   003456  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8837   00345A                     	if	0	;tblptru may be non-zero
  8838   00345A                     	endif
  8839   00345A                     	if	0	;tblptru may be non-zero
  8840   00345A                     	endif
  8841   00345A  0008               	tblrd		*
  8842   00345C  CFF5 F007          	movff	tablat,??_strncmp
  8843   003460  C00A  FFF6         	movff	strncmp@r,tblptrl
  8844   003464  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8845   003468                     	if	0	;tblptru may be non-zero
  8846   003468                     	endif
  8847   003468                     	if	0	;tblptru may be non-zero
  8848   003468                     	endif
  8849   003468  0008               	tblrd		*
  8850   00346A  50F5               	movf	tablat,w,c
  8851   00346C  1807               	xorwf	??_strncmp^0,w,c
  8852   00346E  B4D8               	btfsc	status,2,c
  8853   003470  EF3C  F01A         	goto	u2311
  8854   003474  EF3E  F01A         	goto	u2310
  8855   003478                     u2311:
  8856   003478  EFFD  F019         	goto	l2969
  8857   00347C                     u2310:
  8858   00347C                     l2979:
  8859   00347C  C008  FFF6         	movff	strncmp@l,tblptrl
  8860   003480  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8861   003484                     	if	0	;tblptru may be non-zero
  8862   003484                     	endif
  8863   003484                     	if	0	;tblptru may be non-zero
  8864   003484                     	endif
  8865   003484  0008               	tblrd		*
  8866   003486  CFF5 F007          	movff	tablat,??_strncmp
  8867   00348A  C00A  FFF6         	movff	strncmp@r,tblptrl
  8868   00348E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8869   003492                     	if	0	;tblptru may be non-zero
  8870   003492                     	endif
  8871   003492                     	if	0	;tblptru may be non-zero
  8872   003492                     	endif
  8873   003492  0008               	tblrd		*
  8874   003494  50F5               	movf	tablat,w,c
  8875   003496  5C07               	subwf	??_strncmp^0,w,c
  8876   003498  6E01               	movwf	?_strncmp^0,c
  8877   00349A  6A02               	clrf	(?_strncmp+1)^0,c
  8878   00349C  A0D8               	btfss	status,0,c
  8879   00349E  0602               	decf	(?_strncmp+1)^0,f,c
  8880   0034A0                     l1332:
  8881   0034A0  0012               	return		;funcret
  8882   0034A2                     __end_of_strncmp:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function _stoa *****************
  8886 ;; Defined at:
  8887 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8890 ;;		 -> sprintf@f(11), 
  8891 ;;  s               2   11[COMRAM] PTR unsigned char 
  8892 ;;		 -> ?_sprintf(2), STR_9(9), STR_8(11), STR_7(7), 
  8893 ;;		 -> STR_6(5), STR_5(7), STR_4(10), STR_3(6), 
  8894 ;;		 -> STR_2(4), STR_1(1), 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8897 ;;  p               2   29[COMRAM] int 
  8898 ;;  l               2   27[COMRAM] int 
  8899 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8900 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  8901 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  8902 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  8903 ;;  i               2   23[COMRAM] int 
  8904 ;;  w               2   21[COMRAM] int 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;Total ram usage:       22 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 2
  8921 ;; This function calls:
  8922 ;;		_fputc
  8923 ;;		_strlen
  8924 ;; This function is called by:
  8925 ;;		_vfpfcnvrt
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text52
  8930   002E8A                     __ptext52:
  8931                           	callstack 0
  8932   002E8A                     _stoa:
  8933                           	callstack 24
  8934   002E8A                     
  8935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  8936   002E8A  EE20  F0F1         	lfsr	2,stoa@F1144
  8937   002E8E  EE10  F00F         	lfsr	1,stoa@nuls
  8938   002E92  0E06               	movlw	6
  8939   002E94                     u2201:
  8940   002E94  CFDB FFE3          	movff	plusw2,plusw1
  8941   002E98  06E8               	decf	wreg,f,c
  8942   002E9A  E2FC               	bc	u2201
  8943   002E9C                     
  8944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  8945   002E9C  C00C  F01A         	movff	stoa@s,stoa@cp
  8946   002EA0  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8947   002EA4                     
  8948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  8949   002EA4  501A               	movf	stoa@cp^0,w,c
  8950   002EA6  101B               	iorwf	(stoa@cp+1)^0,w,c
  8951   002EA8  A4D8               	btfss	status,2,c
  8952   002EAA  EF59  F017         	goto	u2211
  8953   002EAE  EF5B  F017         	goto	u2210
  8954   002EB2                     u2211:
  8955   002EB2  EF5F  F017         	goto	l2939
  8956   002EB6                     u2210:
  8957   002EB6                     
  8958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  8959   002EB6  0E0F               	movlw	low stoa@nuls
  8960   002EB8  6E1A               	movwf	stoa@cp^0,c
  8961   002EBA  0E00               	movlw	high stoa@nuls
  8962   002EBC  6E1B               	movwf	(stoa@cp+1)^0,c
  8963   002EBE                     l2939:
  8964                           
  8965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  8966   002EBE  C01A  F001         	movff	stoa@cp,strlen@s
  8967   002EC2  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8968   002EC6  EC4E  F020         	call	_strlen	;wreg free
  8969   002ECA  C001  F01C         	movff	?_strlen,stoa@l
  8970   002ECE  C002  F01D         	movff	?_strlen+1,stoa@l+1
  8971   002ED2                     
  8972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  8973   002ED2  C0DC  F01E         	movff	_prec,stoa@p
  8974   002ED6  C0DD  F01F         	movff	_prec+1,stoa@p+1
  8975   002EDA                     
  8976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  8977   002EDA  BE1F               	btfsc	(stoa@p+1)^0,7,c
  8978   002EDC  EF72  F017         	goto	u2221
  8979   002EE0  EF74  F017         	goto	u2220
  8980   002EE4                     u2221:
  8981   002EE4  EF89  F017         	goto	l1273
  8982   002EE8                     u2220:
  8983   002EE8  501C               	movf	stoa@l^0,w,c
  8984   002EEA  5C1E               	subwf	stoa@p^0,w,c
  8985   002EEC  501F               	movf	(stoa@p+1)^0,w,c
  8986   002EEE  0A80               	xorlw	128
  8987   002EF0  6E0E               	movwf	??_stoa^0,c
  8988   002EF2  501D               	movf	(stoa@l+1)^0,w,c
  8989   002EF4  0A80               	xorlw	128
  8990   002EF6  580E               	subwfb	??_stoa^0,w,c
  8991   002EF8  A0D8               	btfss	status,0,c
  8992   002EFA  EF81  F017         	goto	u2231
  8993   002EFE  EF83  F017         	goto	u2230
  8994   002F02                     u2231:
  8995   002F02  EF85  F017         	goto	l1271
  8996   002F06                     u2230:
  8997   002F06  EF89  F017         	goto	l1273
  8998   002F0A                     l1271:
  8999   002F0A  C01E  F01C         	movff	stoa@p,stoa@l
  9000   002F0E  C01F  F01D         	movff	stoa@p+1,stoa@l+1
  9001   002F12                     l1273:
  9002                           
  9003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  9004   002F12  C01C  F01E         	movff	stoa@l,stoa@p
  9005   002F16  C01D  F01F         	movff	stoa@l+1,stoa@p+1
  9006                           
  9007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  9008   002F1A  C0DA  F016         	movff	_width,stoa@w
  9009   002F1E  C0DB  F017         	movff	_width+1,stoa@w+1
  9010                           
  9011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9012   002F22  EF9F  F017         	goto	l2951
  9013   002F26                     l2947:
  9014                           
  9015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  9016   002F26  0E00               	movlw	0
  9017   002F28  6E02               	movwf	(fputc@c+1)^0,c
  9018   002F2A  0E20               	movlw	32
  9019   002F2C  6E01               	movwf	fputc@c^0,c
  9020   002F2E  C00A  F003         	movff	stoa@fp,fputc@fp
  9021   002F32  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9022   002F36  EC51  F01A         	call	_fputc	;wreg free
  9023   002F3A                     
  9024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  9025   002F3A  4A1C               	infsnz	stoa@l^0,f,c
  9026   002F3C  2A1D               	incf	(stoa@l+1)^0,f,c
  9027   002F3E                     l2951:
  9028                           
  9029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9030   002F3E  5016               	movf	stoa@w^0,w,c
  9031   002F40  5C1C               	subwf	stoa@l^0,w,c
  9032   002F42  501D               	movf	(stoa@l+1)^0,w,c
  9033   002F44  0A80               	xorlw	128
  9034   002F46  6E0E               	movwf	??_stoa^0,c
  9035   002F48  5017               	movf	(stoa@w+1)^0,w,c
  9036   002F4A  0A80               	xorlw	128
  9037   002F4C  580E               	subwfb	??_stoa^0,w,c
  9038   002F4E  A0D8               	btfss	status,0,c
  9039   002F50  EFAC  F017         	goto	u2241
  9040   002F54  EFAE  F017         	goto	u2240
  9041   002F58                     u2241:
  9042   002F58  EF93  F017         	goto	l2947
  9043   002F5C                     u2240:
  9044   002F5C                     
  9045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  9046   002F5C  0E00               	movlw	0
  9047   002F5E  6E19               	movwf	(stoa@i+1)^0,c
  9048   002F60  0E00               	movlw	0
  9049   002F62  6E18               	movwf	stoa@i^0,c
  9050                           
  9051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9052   002F64  EFD3  F017         	goto	l2961
  9053   002F68                     l2955:
  9054                           
  9055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  9056   002F68  C01A  FFF6         	movff	stoa@cp,tblptrl
  9057   002F6C  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9058   002F70  0E00               	movlw	low (__smallconst shr (0+16))
  9059   002F72  6EF8               	movwf	tblptru,c
  9060   002F74  0E0D               	movlw	(high __ramtop+-1)
  9061   002F76  64F7               	cpfsgt	tblptrh,c
  9062   002F78  D003               	bra	u2257
  9063   002F7A  0008               	tblrd		*
  9064   002F7C  50F5               	movf	tablat,w,c
  9065   002F7E  D005               	bra	u2250
  9066   002F80                     u2257:
  9067   002F80  CFF6 FFE9          	movff	tblptrl,fsr0l
  9068   002F84  CFF7 FFEA          	movff	tblptrh,fsr0h
  9069   002F88  50EF               	movf	indf0,w,c
  9070   002F8A                     u2250:
  9071   002F8A  6E0E               	movwf	??_stoa^0,c
  9072   002F8C  500E               	movf	??_stoa^0,w,c
  9073   002F8E  6E01               	movwf	fputc@c^0,c
  9074   002F90  6A02               	clrf	(fputc@c+1)^0,c
  9075   002F92  C00A  F003         	movff	stoa@fp,fputc@fp
  9076   002F96  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9077   002F9A  EC51  F01A         	call	_fputc	;wreg free
  9078   002F9E                     
  9079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  9080   002F9E  4A1A               	infsnz	stoa@cp^0,f,c
  9081   002FA0  2A1B               	incf	(stoa@cp+1)^0,f,c
  9082   002FA2                     
  9083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  9084   002FA2  4A18               	infsnz	stoa@i^0,f,c
  9085   002FA4  2A19               	incf	(stoa@i+1)^0,f,c
  9086   002FA6                     l2961:
  9087                           
  9088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9089   002FA6  501E               	movf	stoa@p^0,w,c
  9090   002FA8  5C18               	subwf	stoa@i^0,w,c
  9091   002FAA  5019               	movf	(stoa@i+1)^0,w,c
  9092   002FAC  0A80               	xorlw	128
  9093   002FAE  6E0E               	movwf	??_stoa^0,c
  9094   002FB0  501F               	movf	(stoa@p+1)^0,w,c
  9095   002FB2  0A80               	xorlw	128
  9096   002FB4  580E               	subwfb	??_stoa^0,w,c
  9097   002FB6  A0D8               	btfss	status,0,c
  9098   002FB8  EFE0  F017         	goto	u2261
  9099   002FBC  EFE2  F017         	goto	u2260
  9100   002FC0                     u2261:
  9101   002FC0  EFB4  F017         	goto	l2955
  9102   002FC4                     u2260:
  9103   002FC4  0012               	return		;funcret
  9104   002FC6                     __end_of_stoa:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _strlen *****************
  9108 ;; Defined at:
  9109 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9112 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9113 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9114 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9117 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9118 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9119 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    0[COMRAM] unsigned int 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;Total ram usage:        4 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_stoa
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text53
  9143   00409C                     __ptext53:
  9144                           	callstack 0
  9145   00409C                     _strlen:
  9146                           	callstack 25
  9147   00409C  C001  F003         	movff	strlen@s,strlen@a
  9148   0040A0  C002  F004         	movff	strlen@s+1,strlen@a+1
  9149   0040A4  EF56  F020         	goto	l2881
  9150   0040A8                     l2879:
  9151   0040A8  4A01               	infsnz	strlen@s^0,f,c
  9152   0040AA  2A02               	incf	(strlen@s+1)^0,f,c
  9153   0040AC                     l2881:
  9154   0040AC  C001  FFF6         	movff	strlen@s,tblptrl
  9155   0040B0  C002  FFF7         	movff	strlen@s+1,tblptrh
  9156   0040B4  0E00               	movlw	low (__smallconst shr (0+16))
  9157   0040B6  6EF8               	movwf	tblptru,c
  9158   0040B8  0E0D               	movlw	(high __ramtop+-1)
  9159   0040BA  64F7               	cpfsgt	tblptrh,c
  9160   0040BC  D003               	bra	u2137
  9161   0040BE  0008               	tblrd		*
  9162   0040C0  50F5               	movf	tablat,w,c
  9163   0040C2  D005               	bra	u2130
  9164   0040C4                     u2137:
  9165   0040C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9166   0040C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9167   0040CC  50EF               	movf	indf0,w,c
  9168   0040CE                     u2130:
  9169   0040CE  0900               	iorlw	0
  9170   0040D0  A4D8               	btfss	status,2,c
  9171   0040D2  EF6D  F020         	goto	u2141
  9172   0040D6  EF6F  F020         	goto	u2140
  9173   0040DA                     u2141:
  9174   0040DA  EF54  F020         	goto	l2879
  9175   0040DE                     u2140:
  9176   0040DE  5003               	movf	strlen@a^0,w,c
  9177   0040E0  5C01               	subwf	strlen@s^0,w,c
  9178   0040E2  6E01               	movwf	?_strlen^0,c
  9179   0040E4  5004               	movf	(strlen@a+1)^0,w,c
  9180   0040E6  5802               	subwfb	(strlen@s+1)^0,w,c
  9181   0040E8  6E02               	movwf	(?_strlen+1)^0,c
  9182   0040EA  0012               	return		;funcret
  9183   0040EC                     __end_of_strlen:
  9184                           	callstack 0
  9185                           
  9186 ;; *************** function _fputc *****************
  9187 ;; Defined at:
  9188 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  c               2    0[COMRAM] int 
  9191 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9192 ;;		 -> sprintf@f(11), 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;		None
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  2    0[COMRAM] int 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9206 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9207 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9208 ;;Total ram usage:        9 bytes
  9209 ;; Hardware stack levels used: 1
  9210 ;; Hardware stack levels required when called: 1
  9211 ;; This function calls:
  9212 ;;		_putch
  9213 ;; This function is called by:
  9214 ;;		_stoa
  9215 ;;		_vfpfcnvrt
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text54
  9220   0034A2                     __ptext54:
  9221                           	callstack 0
  9222   0034A2                     _fputc:
  9223                           	callstack 24
  9224   0034A2  5003               	movf	fputc@fp^0,w,c
  9225   0034A4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9226   0034A6  B4D8               	btfsc	status,2,c
  9227   0034A8  EF58  F01A         	goto	u2091
  9228   0034AC  EF5A  F01A         	goto	u2090
  9229   0034B0                     u2091:
  9230   0034B0  EF63  F01A         	goto	l2867
  9231   0034B4                     u2090:
  9232   0034B4  5003               	movf	fputc@fp^0,w,c
  9233   0034B6  1004               	iorwf	(fputc@fp+1)^0,w,c
  9234   0034B8  A4D8               	btfss	status,2,c
  9235   0034BA  EF61  F01A         	goto	u2101
  9236   0034BE  EF63  F01A         	goto	u2100
  9237   0034C2                     u2101:
  9238   0034C2  EF68  F01A         	goto	l2869
  9239   0034C6                     u2100:
  9240   0034C6                     l2867:
  9241   0034C6  5001               	movf	fputc@c^0,w,c
  9242   0034C8  EC0F  F022         	call	_putch
  9243   0034CC  EFB5  F01A         	goto	l1311
  9244   0034D0                     l2869:
  9245   0034D0  EE20 F009          	lfsr	2,9
  9246   0034D4  5003               	movf	fputc@fp^0,w,c
  9247   0034D6  26D9               	addwf	fsr2l,f,c
  9248   0034D8  5004               	movf	(fputc@fp+1)^0,w,c
  9249   0034DA  22DA               	addwfc	fsr2h,f,c
  9250   0034DC  50DE               	movf	postinc2,w,c
  9251   0034DE  10DE               	iorwf	postinc2,w,c
  9252   0034E0  B4D8               	btfsc	status,2,c
  9253   0034E2  EF75  F01A         	goto	u2111
  9254   0034E6  EF77  F01A         	goto	u2110
  9255   0034EA                     u2111:
  9256   0034EA  EF92  F01A         	goto	l2873
  9257   0034EE                     u2110:
  9258   0034EE  EE20 F009          	lfsr	2,9
  9259   0034F2  5003               	movf	fputc@fp^0,w,c
  9260   0034F4  26D9               	addwf	fsr2l,f,c
  9261   0034F6  5004               	movf	(fputc@fp+1)^0,w,c
  9262   0034F8  22DA               	addwfc	fsr2h,f,c
  9263   0034FA  EE10 F003          	lfsr	1,3
  9264   0034FE  5003               	movf	fputc@fp^0,w,c
  9265   003500  26E1               	addwf	fsr1l,f,c
  9266   003502  5004               	movf	(fputc@fp+1)^0,w,c
  9267   003504  22E2               	addwfc	fsr1h,f,c
  9268   003506  50DE               	movf	postinc2,w,c
  9269   003508  5CE6               	subwf	postinc1,w,c
  9270   00350A  50E6               	movf	postinc1,w,c
  9271   00350C  0A80               	xorlw	128
  9272   00350E  6E09               	movwf	(??_fputc+4)^0,c
  9273   003510  50DE               	movf	postinc2,w,c
  9274   003512  0A80               	xorlw	128
  9275   003514  5809               	subwfb	(??_fputc+4)^0,w,c
  9276   003516  B0D8               	btfsc	status,0,c
  9277   003518  EF90  F01A         	goto	u2121
  9278   00351C  EF92  F01A         	goto	u2120
  9279   003520                     u2121:
  9280   003520  EFB5  F01A         	goto	l1311
  9281   003524                     u2120:
  9282   003524                     l2873:
  9283   003524  EE20 F003          	lfsr	2,3
  9284   003528  5003               	movf	fputc@fp^0,w,c
  9285   00352A  26D9               	addwf	fsr2l,f,c
  9286   00352C  5004               	movf	(fputc@fp+1)^0,w,c
  9287   00352E  22DA               	addwfc	fsr2h,f,c
  9288   003530  CFDE F005          	movff	postinc2,??_fputc
  9289   003534  CFDD F006          	movff	postdec2,??_fputc+1
  9290   003538  C003  FFD9         	movff	fputc@fp,fsr2l
  9291   00353C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9292   003540  CFDE F007          	movff	postinc2,??_fputc+2
  9293   003544  CFDD F008          	movff	postdec2,??_fputc+3
  9294   003548  5005               	movf	??_fputc^0,w,c
  9295   00354A  2407               	addwf	(??_fputc+2)^0,w,c
  9296   00354C  6ED9               	movwf	fsr2l,c
  9297   00354E  5006               	movf	(??_fputc+1)^0,w,c
  9298   003550  2008               	addwfc	(??_fputc+3)^0,w,c
  9299   003552  6EDA               	movwf	fsr2h,c
  9300   003554  C001  FFDF         	movff	fputc@c,indf2
  9301   003558  EE20 F003          	lfsr	2,3
  9302   00355C  5003               	movf	fputc@fp^0,w,c
  9303   00355E  26D9               	addwf	fsr2l,f,c
  9304   003560  5004               	movf	(fputc@fp+1)^0,w,c
  9305   003562  22DA               	addwfc	fsr2h,f,c
  9306   003564  2ADE               	incf	postinc2,f,c
  9307   003566  0E00               	movlw	0
  9308   003568  22DD               	addwfc	postdec2,f,c
  9309   00356A                     l1311:
  9310   00356A  0012               	return		;funcret
  9311   00356C                     __end_of_fputc:
  9312                           	callstack 0
  9313                           
  9314 ;; *************** function _putch *****************
  9315 ;; Defined at:
  9316 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  c               1    wreg     unsigned char 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;  c               1    0[COMRAM] unsigned char 
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_fputc
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text55
  9344   00441E                     __ptext55:
  9345                           	callstack 0
  9346   00441E                     _putch:
  9347                           	callstack 24
  9348   00441E  0012               	return		;funcret
  9349   004420                     __end_of_putch:
  9350                           	callstack 0
  9351                           
  9352 ;; *************** function _sendStringSerial4 *****************
  9353 ;; Defined at:
  9354 ;;		line 49 in file "serial.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  string          2    1[COMRAM] PTR unsigned char 
  9357 ;;		 -> main@data(100), 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;Total ram usage:        2 bytes
  9374 ;; Hardware stack levels used: 1
  9375 ;; Hardware stack levels required when called: 1
  9376 ;; This function calls:
  9377 ;;		_sendCharSerial4
  9378 ;; This function is called by:
  9379 ;;		_Color2String
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text56
  9384   00428E                     __ptext56:
  9385                           	callstack 0
  9386   00428E                     _sendStringSerial4:
  9387                           	callstack 28
  9388   00428E                     
  9389                           ;serial.c: 52:     while(*string != 0){
  9390   00428E  EF56  F021         	goto	l3601
  9391   004292                     l3595:
  9392                           
  9393                           ;serial.c: 54:   sendCharSerial4(*string++);
  9394   004292  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9395   004296  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9396   00429A  50DF               	movf	indf2,w,c
  9397   00429C  ECDA  F021         	call	_sendCharSerial4
  9398   0042A0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9399   0042A2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9400   0042A4                     
  9401                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  9402   0042A4  0E6A               	movlw	106
  9403   0042A6                     u4277:
  9404   0042A6  2EE8               	decfsz	wreg,f,c
  9405   0042A8  D7FE               	bra	u4277
  9406   0042AA  D000               	nop2	
  9407   0042AC                     l3601:
  9408                           
  9409                           ;serial.c: 52:     while(*string != 0){
  9410   0042AC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9411   0042B0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9412   0042B4  50DF               	movf	indf2,w,c
  9413   0042B6  A4D8               	btfss	status,2,c
  9414   0042B8  EF60  F021         	goto	u3121
  9415   0042BC  EF62  F021         	goto	u3120
  9416   0042C0                     u3121:
  9417   0042C0  EF49  F021         	goto	l3595
  9418   0042C4                     u3120:
  9419   0042C4  0012               	return		;funcret
  9420   0042C6                     __end_of_sendStringSerial4:
  9421                           	callstack 0
  9422                           
  9423 ;; *************** function _sendCharSerial4 *****************
  9424 ;; Defined at:
  9425 ;;		line 34 in file "serial.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  charToSend      1    wreg     unsigned char 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  charToSend      1    0[COMRAM] unsigned char 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9443 ;;Total ram usage:        1 bytes
  9444 ;; Hardware stack levels used: 1
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_sendStringSerial4
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text57
  9453   0043B4                     __ptext57:
  9454                           	callstack 0
  9455   0043B4                     _sendCharSerial4:
  9456                           	callstack 28
  9457                           
  9458                           ;incstack = 0
  9459                           ;sendCharSerial4@charToSend stored from wreg
  9460   0043B4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9461   0043B6                     l313:
  9462   0043B6  010E               	movlb	14	; () banked
  9463   0043B8  A537               	btfss	55,2,b	;volatile
  9464   0043BA  EFE1  F021         	goto	u2431
  9465   0043BE  EFE3  F021         	goto	u2430
  9466   0043C2                     u2431:
  9467   0043C2  EFDB  F021         	goto	l313
  9468   0043C6                     u2430:
  9469   0043C6                     
  9470                           ; BSR set to: 14
  9471                           ;serial.c: 36:     TX4REG = charToSend;
  9472   0043C6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9473   0043CA                     
  9474                           ; BSR set to: 14
  9475   0043CA  0012               	return		;funcret
  9476   0043CC                     __end_of_sendCharSerial4:
  9477                           	callstack 0
  9478                           
  9479 ;; *************** function _Hue2Colour *****************
  9480 ;; Defined at:
  9481 ;;		line 56 in file "colorfunctions.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
  9484 ;;		 -> colorf(22), 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  colourname      2   14[COMRAM] PTR unsigned char 
  9487 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  9488 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  9489 ;;		 -> STR_1(1), 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  2   12[COMRAM] PTR unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;Total ram usage:        4 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 1
  9506 ;; This function calls:
  9507 ;;		___flge
  9508 ;; This function is called by:
  9509 ;;		_main
  9510 ;;		_Color2String
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text58
  9515   001554                     __ptext58:
  9516                           	callstack 0
  9517   001554                     _Hue2Colour:
  9518                           	callstack 29
  9519   001554                     
  9520                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
  9521   001554  0E10               	movlw	low (STR_10+15)
  9522   001556  6E0F               	movwf	Hue2Colour@colourname^0,c
  9523   001558  0E0E               	movlw	high (STR_10+15)
  9524   00155A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9525   00155C                     
  9526                           ;colorfunctions.c: 59:     if (((cf->h)>352)&&((cf->h)<360))
  9527   00155C  0E00               	movlw	0
  9528   00155E  6E01               	movwf	___flge@ff1^0,c
  9529   001560  0E00               	movlw	0
  9530   001562  6E02               	movwf	(___flge@ff1+1)^0,c
  9531   001564  0EB0               	movlw	176
  9532   001566  6E03               	movwf	(___flge@ff1+2)^0,c
  9533   001568  0E43               	movlw	67
  9534   00156A  6E04               	movwf	(___flge@ff1+3)^0,c
  9535   00156C  EE20 F010          	lfsr	2,16
  9536   001570  500D               	movf	Hue2Colour@cf^0,w,c
  9537   001572  26D9               	addwf	fsr2l,f,c
  9538   001574  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9539   001576  22DA               	addwfc	fsr2h,f,c
  9540   001578  CFDE F005          	movff	postinc2,___flge@ff2
  9541   00157C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9542   001580  CFDE F007          	movff	postinc2,___flge@ff2+2
  9543   001584  CFDE F008          	movff	postinc2,___flge@ff2+3
  9544   001588  ECE9  F018         	call	___flge	;wreg free
  9545   00158C  B0D8               	btfsc	status,0,c
  9546   00158E  EFCB  F00A         	goto	u2891
  9547   001592  EFCD  F00A         	goto	u2890
  9548   001596                     u2891:
  9549   001596  EFFA  F00A         	goto	l3443
  9550   00159A                     u2890:
  9551   00159A  EE20 F010          	lfsr	2,16
  9552   00159E  500D               	movf	Hue2Colour@cf^0,w,c
  9553   0015A0  26D9               	addwf	fsr2l,f,c
  9554   0015A2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9555   0015A4  22DA               	addwfc	fsr2h,f,c
  9556   0015A6  CFDE F001          	movff	postinc2,___flge@ff1
  9557   0015AA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9558   0015AE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9559   0015B2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9560   0015B6  0E00               	movlw	0
  9561   0015B8  6E05               	movwf	___flge@ff2^0,c
  9562   0015BA  0E00               	movlw	0
  9563   0015BC  6E06               	movwf	(___flge@ff2+1)^0,c
  9564   0015BE  0EB4               	movlw	180
  9565   0015C0  6E07               	movwf	(___flge@ff2+2)^0,c
  9566   0015C2  0E43               	movlw	67
  9567   0015C4  6E08               	movwf	(___flge@ff2+3)^0,c
  9568   0015C6  ECE9  F018         	call	___flge	;wreg free
  9569   0015CA  B0D8               	btfsc	status,0,c
  9570   0015CC  EFEA  F00A         	goto	u2901
  9571   0015D0  EFEC  F00A         	goto	u2900
  9572   0015D4                     u2901:
  9573   0015D4  EFFA  F00A         	goto	l3443
  9574   0015D8                     u2900:
  9575   0015D8                     
  9576                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
  9577   0015D8  0E4C               	movlw	low STR_2
  9578   0015DA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9579   0015DC  0E0E               	movlw	high STR_2
  9580   0015DE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9581   0015E0                     
  9582                           ;colorfunctions.c: 65:         cf->colourindex=0;
  9583   0015E0  EE20 F014          	lfsr	2,20
  9584   0015E4  500D               	movf	Hue2Colour@cf^0,w,c
  9585   0015E6  26D9               	addwf	fsr2l,f,c
  9586   0015E8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9587   0015EA  22DA               	addwfc	fsr2h,f,c
  9588   0015EC  0E00               	movlw	0
  9589   0015EE  6EDE               	movwf	postinc2,c
  9590   0015F0  0E00               	movlw	0
  9591   0015F2  6EDD               	movwf	postdec2,c
  9592   0015F4                     l3443:
  9593                           
  9594                           ;colorfunctions.c: 67:      if (((cf->h)>75)&&((cf->h)<79))
  9595   0015F4  0E00               	movlw	0
  9596   0015F6  6E01               	movwf	___flge@ff1^0,c
  9597   0015F8  0E00               	movlw	0
  9598   0015FA  6E02               	movwf	(___flge@ff1+1)^0,c
  9599   0015FC  0E96               	movlw	150
  9600   0015FE  6E03               	movwf	(___flge@ff1+2)^0,c
  9601   001600  0E42               	movlw	66
  9602   001602  6E04               	movwf	(___flge@ff1+3)^0,c
  9603   001604  EE20 F010          	lfsr	2,16
  9604   001608  500D               	movf	Hue2Colour@cf^0,w,c
  9605   00160A  26D9               	addwf	fsr2l,f,c
  9606   00160C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9607   00160E  22DA               	addwfc	fsr2h,f,c
  9608   001610  CFDE F005          	movff	postinc2,___flge@ff2
  9609   001614  CFDE F006          	movff	postinc2,___flge@ff2+1
  9610   001618  CFDE F007          	movff	postinc2,___flge@ff2+2
  9611   00161C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9612   001620  ECE9  F018         	call	___flge	;wreg free
  9613   001624  B0D8               	btfsc	status,0,c
  9614   001626  EF17  F00B         	goto	u2911
  9615   00162A  EF19  F00B         	goto	u2910
  9616   00162E                     u2911:
  9617   00162E  EF48  F00B         	goto	l3451
  9618   001632                     u2910:
  9619   001632  EE20 F010          	lfsr	2,16
  9620   001636  500D               	movf	Hue2Colour@cf^0,w,c
  9621   001638  26D9               	addwf	fsr2l,f,c
  9622   00163A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9623   00163C  22DA               	addwfc	fsr2h,f,c
  9624   00163E  CFDE F001          	movff	postinc2,___flge@ff1
  9625   001642  CFDE F002          	movff	postinc2,___flge@ff1+1
  9626   001646  CFDE F003          	movff	postinc2,___flge@ff1+2
  9627   00164A  CFDE F004          	movff	postinc2,___flge@ff1+3
  9628   00164E  0E00               	movlw	0
  9629   001650  6E05               	movwf	___flge@ff2^0,c
  9630   001652  0E00               	movlw	0
  9631   001654  6E06               	movwf	(___flge@ff2+1)^0,c
  9632   001656  0E9E               	movlw	158
  9633   001658  6E07               	movwf	(___flge@ff2+2)^0,c
  9634   00165A  0E42               	movlw	66
  9635   00165C  6E08               	movwf	(___flge@ff2+3)^0,c
  9636   00165E  ECE9  F018         	call	___flge	;wreg free
  9637   001662  B0D8               	btfsc	status,0,c
  9638   001664  EF36  F00B         	goto	u2921
  9639   001668  EF38  F00B         	goto	u2920
  9640   00166C                     u2921:
  9641   00166C  EF48  F00B         	goto	l3451
  9642   001670                     u2920:
  9643   001670                     
  9644                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
  9645   001670  0E3D               	movlw	low STR_3
  9646   001672  6E0F               	movwf	Hue2Colour@colourname^0,c
  9647   001674  0E0E               	movlw	high STR_3
  9648   001676  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9649   001678                     
  9650                           ;colorfunctions.c: 70:         cf->colourindex=1;
  9651   001678  EE20 F014          	lfsr	2,20
  9652   00167C  500D               	movf	Hue2Colour@cf^0,w,c
  9653   00167E  26D9               	addwf	fsr2l,f,c
  9654   001680  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9655   001682  22DA               	addwfc	fsr2h,f,c
  9656   001684  0E01               	movlw	1
  9657   001686  6EDE               	movwf	postinc2,c
  9658   001688  0E00               	movlw	0
  9659   00168A  6EDD               	movwf	postdec2,c
  9660                           
  9661                           ;colorfunctions.c: 71:     }
  9662   00168C  EF1C  F00D         	goto	l3499
  9663   001690                     l3451:
  9664   001690  0E00               	movlw	0
  9665   001692  6E01               	movwf	___flge@ff1^0,c
  9666   001694  0E00               	movlw	0
  9667   001696  6E02               	movwf	(___flge@ff1+1)^0,c
  9668   001698  0E11               	movlw	17
  9669   00169A  6E03               	movwf	(___flge@ff1+2)^0,c
  9670   00169C  0E43               	movlw	67
  9671   00169E  6E04               	movwf	(___flge@ff1+3)^0,c
  9672   0016A0  EE20 F010          	lfsr	2,16
  9673   0016A4  500D               	movf	Hue2Colour@cf^0,w,c
  9674   0016A6  26D9               	addwf	fsr2l,f,c
  9675   0016A8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9676   0016AA  22DA               	addwfc	fsr2h,f,c
  9677   0016AC  CFDE F005          	movff	postinc2,___flge@ff2
  9678   0016B0  CFDE F006          	movff	postinc2,___flge@ff2+1
  9679   0016B4  CFDE F007          	movff	postinc2,___flge@ff2+2
  9680   0016B8  CFDE F008          	movff	postinc2,___flge@ff2+3
  9681   0016BC  ECE9  F018         	call	___flge	;wreg free
  9682   0016C0  B0D8               	btfsc	status,0,c
  9683   0016C2  EF65  F00B         	goto	u2931
  9684   0016C6  EF67  F00B         	goto	u2930
  9685   0016CA                     u2931:
  9686   0016CA  EF96  F00B         	goto	l3459
  9687   0016CE                     u2930:
  9688   0016CE  EE20 F010          	lfsr	2,16
  9689   0016D2  500D               	movf	Hue2Colour@cf^0,w,c
  9690   0016D4  26D9               	addwf	fsr2l,f,c
  9691   0016D6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9692   0016D8  22DA               	addwfc	fsr2h,f,c
  9693   0016DA  CFDE F001          	movff	postinc2,___flge@ff1
  9694   0016DE  CFDE F002          	movff	postinc2,___flge@ff1+1
  9695   0016E2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9696   0016E6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9697   0016EA  0E00               	movlw	0
  9698   0016EC  6E05               	movwf	___flge@ff2^0,c
  9699   0016EE  0E00               	movlw	0
  9700   0016F0  6E06               	movwf	(___flge@ff2+1)^0,c
  9701   0016F2  0E24               	movlw	36
  9702   0016F4  6E07               	movwf	(___flge@ff2+2)^0,c
  9703   0016F6  0E43               	movlw	67
  9704   0016F8  6E08               	movwf	(___flge@ff2+3)^0,c
  9705   0016FA  ECE9  F018         	call	___flge	;wreg free
  9706   0016FE  B0D8               	btfsc	status,0,c
  9707   001700  EF84  F00B         	goto	u2941
  9708   001704  EF86  F00B         	goto	u2940
  9709   001708                     u2941:
  9710   001708  EF96  F00B         	goto	l3459
  9711   00170C                     u2940:
  9712   00170C                     
  9713                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
  9714   00170C  0E1C               	movlw	low STR_4
  9715   00170E  6E0F               	movwf	Hue2Colour@colourname^0,c
  9716   001710  0E0E               	movlw	high STR_4
  9717   001712  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9718   001714                     
  9719                           ;colorfunctions.c: 75:         cf->colourindex=2;
  9720   001714  EE20 F014          	lfsr	2,20
  9721   001718  500D               	movf	Hue2Colour@cf^0,w,c
  9722   00171A  26D9               	addwf	fsr2l,f,c
  9723   00171C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9724   00171E  22DA               	addwfc	fsr2h,f,c
  9725   001720  0E02               	movlw	2
  9726   001722  6EDE               	movwf	postinc2,c
  9727   001724  0E00               	movlw	0
  9728   001726  6EDD               	movwf	postdec2,c
  9729                           
  9730                           ;colorfunctions.c: 76:     }
  9731   001728  EF1C  F00D         	goto	l3499
  9732   00172C                     l3459:
  9733   00172C  0E00               	movlw	0
  9734   00172E  6E01               	movwf	___flge@ff1^0,c
  9735   001730  0E00               	movlw	0
  9736   001732  6E02               	movwf	(___flge@ff1+1)^0,c
  9737   001734  0EA8               	movlw	168
  9738   001736  6E03               	movwf	(___flge@ff1+2)^0,c
  9739   001738  0E41               	movlw	65
  9740   00173A  6E04               	movwf	(___flge@ff1+3)^0,c
  9741   00173C  EE20 F010          	lfsr	2,16
  9742   001740  500D               	movf	Hue2Colour@cf^0,w,c
  9743   001742  26D9               	addwf	fsr2l,f,c
  9744   001744  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9745   001746  22DA               	addwfc	fsr2h,f,c
  9746   001748  CFDE F005          	movff	postinc2,___flge@ff2
  9747   00174C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9748   001750  CFDE F007          	movff	postinc2,___flge@ff2+2
  9749   001754  CFDE F008          	movff	postinc2,___flge@ff2+3
  9750   001758  ECE9  F018         	call	___flge	;wreg free
  9751   00175C  B0D8               	btfsc	status,0,c
  9752   00175E  EFB3  F00B         	goto	u2951
  9753   001762  EFB5  F00B         	goto	u2950
  9754   001766                     u2951:
  9755   001766  EFE4  F00B         	goto	l3467
  9756   00176A                     u2950:
  9757   00176A  EE20 F010          	lfsr	2,16
  9758   00176E  500D               	movf	Hue2Colour@cf^0,w,c
  9759   001770  26D9               	addwf	fsr2l,f,c
  9760   001772  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9761   001774  22DA               	addwfc	fsr2h,f,c
  9762   001776  CFDE F001          	movff	postinc2,___flge@ff1
  9763   00177A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9764   00177E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9765   001782  CFDE F004          	movff	postinc2,___flge@ff1+3
  9766   001786  0E00               	movlw	0
  9767   001788  6E05               	movwf	___flge@ff2^0,c
  9768   00178A  0E00               	movlw	0
  9769   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
  9770   00178E  0EC8               	movlw	200
  9771   001790  6E07               	movwf	(___flge@ff2+2)^0,c
  9772   001792  0E41               	movlw	65
  9773   001794  6E08               	movwf	(___flge@ff2+3)^0,c
  9774   001796  ECE9  F018         	call	___flge	;wreg free
  9775   00179A  B0D8               	btfsc	status,0,c
  9776   00179C  EFD2  F00B         	goto	u2961
  9777   0017A0  EFD4  F00B         	goto	u2960
  9778   0017A4                     u2961:
  9779   0017A4  EFE4  F00B         	goto	l3467
  9780   0017A8                     u2960:
  9781   0017A8                     
  9782                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
  9783   0017A8  0E36               	movlw	low STR_5
  9784   0017AA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9785   0017AC  0E0E               	movlw	high STR_5
  9786   0017AE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9787   0017B0                     
  9788                           ;colorfunctions.c: 80:         cf->colourindex=3;
  9789   0017B0  EE20 F014          	lfsr	2,20
  9790   0017B4  500D               	movf	Hue2Colour@cf^0,w,c
  9791   0017B6  26D9               	addwf	fsr2l,f,c
  9792   0017B8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9793   0017BA  22DA               	addwfc	fsr2h,f,c
  9794   0017BC  0E03               	movlw	3
  9795   0017BE  6EDE               	movwf	postinc2,c
  9796   0017C0  0E00               	movlw	0
  9797   0017C2  6EDD               	movwf	postdec2,c
  9798                           
  9799                           ;colorfunctions.c: 81:     }
  9800   0017C4  EF1C  F00D         	goto	l3499
  9801   0017C8                     l3467:
  9802   0017C8  0E00               	movlw	0
  9803   0017CA  6E01               	movwf	___flge@ff1^0,c
  9804   0017CC  0E00               	movlw	0
  9805   0017CE  6E02               	movwf	(___flge@ff1+1)^0,c
  9806   0017D0  0E70               	movlw	112
  9807   0017D2  6E03               	movwf	(___flge@ff1+2)^0,c
  9808   0017D4  0E41               	movlw	65
  9809   0017D6  6E04               	movwf	(___flge@ff1+3)^0,c
  9810   0017D8  EE20 F010          	lfsr	2,16
  9811   0017DC  500D               	movf	Hue2Colour@cf^0,w,c
  9812   0017DE  26D9               	addwf	fsr2l,f,c
  9813   0017E0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9814   0017E2  22DA               	addwfc	fsr2h,f,c
  9815   0017E4  CFDE F005          	movff	postinc2,___flge@ff2
  9816   0017E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9817   0017EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9818   0017F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9819   0017F4  ECE9  F018         	call	___flge	;wreg free
  9820   0017F8  B0D8               	btfsc	status,0,c
  9821   0017FA  EF01  F00C         	goto	u2971
  9822   0017FE  EF03  F00C         	goto	u2970
  9823   001802                     u2971:
  9824   001802  EF32  F00C         	goto	l3475
  9825   001806                     u2970:
  9826   001806  EE20 F010          	lfsr	2,16
  9827   00180A  500D               	movf	Hue2Colour@cf^0,w,c
  9828   00180C  26D9               	addwf	fsr2l,f,c
  9829   00180E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9830   001810  22DA               	addwfc	fsr2h,f,c
  9831   001812  CFDE F001          	movff	postinc2,___flge@ff1
  9832   001816  CFDE F002          	movff	postinc2,___flge@ff1+1
  9833   00181A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9834   00181E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9835   001822  0E00               	movlw	0
  9836   001824  6E05               	movwf	___flge@ff2^0,c
  9837   001826  0E00               	movlw	0
  9838   001828  6E06               	movwf	(___flge@ff2+1)^0,c
  9839   00182A  0E98               	movlw	152
  9840   00182C  6E07               	movwf	(___flge@ff2+2)^0,c
  9841   00182E  0E41               	movlw	65
  9842   001830  6E08               	movwf	(___flge@ff2+3)^0,c
  9843   001832  ECE9  F018         	call	___flge	;wreg free
  9844   001836  B0D8               	btfsc	status,0,c
  9845   001838  EF20  F00C         	goto	u2981
  9846   00183C  EF22  F00C         	goto	u2980
  9847   001840                     u2981:
  9848   001840  EF32  F00C         	goto	l3475
  9849   001844                     u2980:
  9850   001844                     
  9851                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
  9852   001844  0E43               	movlw	low STR_6
  9853   001846  6E0F               	movwf	Hue2Colour@colourname^0,c
  9854   001848  0E0E               	movlw	high STR_6
  9855   00184A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9856   00184C                     
  9857                           ;colorfunctions.c: 85:         cf->colourindex=4;
  9858   00184C  EE20 F014          	lfsr	2,20
  9859   001850  500D               	movf	Hue2Colour@cf^0,w,c
  9860   001852  26D9               	addwf	fsr2l,f,c
  9861   001854  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9862   001856  22DA               	addwfc	fsr2h,f,c
  9863   001858  0E04               	movlw	4
  9864   00185A  6EDE               	movwf	postinc2,c
  9865   00185C  0E00               	movlw	0
  9866   00185E  6EDD               	movwf	postdec2,c
  9867                           
  9868                           ;colorfunctions.c: 86:     }
  9869   001860  EF1C  F00D         	goto	l3499
  9870   001864                     l3475:
  9871   001864  0E00               	movlw	0
  9872   001866  6E01               	movwf	___flge@ff1^0,c
  9873   001868  0E00               	movlw	0
  9874   00186A  6E02               	movwf	(___flge@ff1+1)^0,c
  9875   00186C  0EE0               	movlw	224
  9876   00186E  6E03               	movwf	(___flge@ff1+2)^0,c
  9877   001870  0E40               	movlw	64
  9878   001872  6E04               	movwf	(___flge@ff1+3)^0,c
  9879   001874  EE20 F010          	lfsr	2,16
  9880   001878  500D               	movf	Hue2Colour@cf^0,w,c
  9881   00187A  26D9               	addwf	fsr2l,f,c
  9882   00187C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9883   00187E  22DA               	addwfc	fsr2h,f,c
  9884   001880  CFDE F005          	movff	postinc2,___flge@ff2
  9885   001884  CFDE F006          	movff	postinc2,___flge@ff2+1
  9886   001888  CFDE F007          	movff	postinc2,___flge@ff2+2
  9887   00188C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9888   001890  ECE9  F018         	call	___flge	;wreg free
  9889   001894  B0D8               	btfsc	status,0,c
  9890   001896  EF4F  F00C         	goto	u2991
  9891   00189A  EF51  F00C         	goto	u2990
  9892   00189E                     u2991:
  9893   00189E  EF80  F00C         	goto	l3483
  9894   0018A2                     u2990:
  9895   0018A2  EE20 F010          	lfsr	2,16
  9896   0018A6  500D               	movf	Hue2Colour@cf^0,w,c
  9897   0018A8  26D9               	addwf	fsr2l,f,c
  9898   0018AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9899   0018AC  22DA               	addwfc	fsr2h,f,c
  9900   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
  9901   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
  9902   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
  9903   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
  9904   0018BE  0E00               	movlw	0
  9905   0018C0  6E05               	movwf	___flge@ff2^0,c
  9906   0018C2  0E00               	movlw	0
  9907   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
  9908   0018C6  0E10               	movlw	16
  9909   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
  9910   0018CA  0E41               	movlw	65
  9911   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
  9912   0018CE  ECE9  F018         	call	___flge	;wreg free
  9913   0018D2  B0D8               	btfsc	status,0,c
  9914   0018D4  EF6E  F00C         	goto	u3001
  9915   0018D8  EF70  F00C         	goto	u3000
  9916   0018DC                     u3001:
  9917   0018DC  EF80  F00C         	goto	l3483
  9918   0018E0                     u3000:
  9919   0018E0                     
  9920                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
  9921   0018E0  0E2F               	movlw	low STR_7
  9922   0018E2  6E0F               	movwf	Hue2Colour@colourname^0,c
  9923   0018E4  0E0E               	movlw	high STR_7
  9924   0018E6  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9925   0018E8                     
  9926                           ;colorfunctions.c: 90:         cf->colourindex=5;
  9927   0018E8  EE20 F014          	lfsr	2,20
  9928   0018EC  500D               	movf	Hue2Colour@cf^0,w,c
  9929   0018EE  26D9               	addwf	fsr2l,f,c
  9930   0018F0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9931   0018F2  22DA               	addwfc	fsr2h,f,c
  9932   0018F4  0E05               	movlw	5
  9933   0018F6  6EDE               	movwf	postinc2,c
  9934   0018F8  0E00               	movlw	0
  9935   0018FA  6EDD               	movwf	postdec2,c
  9936                           
  9937                           ;colorfunctions.c: 91:     }
  9938   0018FC  EF1C  F00D         	goto	l3499
  9939   001900                     l3483:
  9940   001900  0E00               	movlw	0
  9941   001902  6E01               	movwf	___flge@ff1^0,c
  9942   001904  0E00               	movlw	0
  9943   001906  6E02               	movwf	(___flge@ff1+1)^0,c
  9944   001908  0EAA               	movlw	170
  9945   00190A  6E03               	movwf	(___flge@ff1+2)^0,c
  9946   00190C  0E42               	movlw	66
  9947   00190E  6E04               	movwf	(___flge@ff1+3)^0,c
  9948   001910  EE20 F010          	lfsr	2,16
  9949   001914  500D               	movf	Hue2Colour@cf^0,w,c
  9950   001916  26D9               	addwf	fsr2l,f,c
  9951   001918  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9952   00191A  22DA               	addwfc	fsr2h,f,c
  9953   00191C  CFDE F005          	movff	postinc2,___flge@ff2
  9954   001920  CFDE F006          	movff	postinc2,___flge@ff2+1
  9955   001924  CFDE F007          	movff	postinc2,___flge@ff2+2
  9956   001928  CFDE F008          	movff	postinc2,___flge@ff2+3
  9957   00192C  ECE9  F018         	call	___flge	;wreg free
  9958   001930  B0D8               	btfsc	status,0,c
  9959   001932  EF9D  F00C         	goto	u3011
  9960   001936  EF9F  F00C         	goto	u3010
  9961   00193A                     u3011:
  9962   00193A  EFCE  F00C         	goto	l3491
  9963   00193E                     u3010:
  9964   00193E  EE20 F010          	lfsr	2,16
  9965   001942  500D               	movf	Hue2Colour@cf^0,w,c
  9966   001944  26D9               	addwf	fsr2l,f,c
  9967   001946  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9968   001948  22DA               	addwfc	fsr2h,f,c
  9969   00194A  CFDE F001          	movff	postinc2,___flge@ff1
  9970   00194E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9971   001952  CFDE F003          	movff	postinc2,___flge@ff1+2
  9972   001956  CFDE F004          	movff	postinc2,___flge@ff1+3
  9973   00195A  0E00               	movlw	0
  9974   00195C  6E05               	movwf	___flge@ff2^0,c
  9975   00195E  0E00               	movlw	0
  9976   001960  6E06               	movwf	(___flge@ff2+1)^0,c
  9977   001962  0EBC               	movlw	188
  9978   001964  6E07               	movwf	(___flge@ff2+2)^0,c
  9979   001966  0E42               	movlw	66
  9980   001968  6E08               	movwf	(___flge@ff2+3)^0,c
  9981   00196A  ECE9  F018         	call	___flge	;wreg free
  9982   00196E  B0D8               	btfsc	status,0,c
  9983   001970  EFBC  F00C         	goto	u3021
  9984   001974  EFBE  F00C         	goto	u3020
  9985   001978                     u3021:
  9986   001978  EFCE  F00C         	goto	l3491
  9987   00197C                     u3020:
  9988   00197C                     
  9989                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
  9990   00197C  0E11               	movlw	low STR_8
  9991   00197E  6E0F               	movwf	Hue2Colour@colourname^0,c
  9992   001980  0E0E               	movlw	high STR_8
  9993   001982  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9994   001984                     
  9995                           ;colorfunctions.c: 95:         cf->colourindex=6;
  9996   001984  EE20 F014          	lfsr	2,20
  9997   001988  500D               	movf	Hue2Colour@cf^0,w,c
  9998   00198A  26D9               	addwf	fsr2l,f,c
  9999   00198C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10000   00198E  22DA               	addwfc	fsr2h,f,c
 10001   001990  0E06               	movlw	6
 10002   001992  6EDE               	movwf	postinc2,c
 10003   001994  0E00               	movlw	0
 10004   001996  6EDD               	movwf	postdec2,c
 10005                           
 10006                           ;colorfunctions.c: 96:     }
 10007   001998  EF1C  F00D         	goto	l3499
 10008   00199C                     l3491:
 10009   00199C  0E00               	movlw	0
 10010   00199E  6E01               	movwf	___flge@ff1^0,c
 10011   0019A0  0E00               	movlw	0
 10012   0019A2  6E02               	movwf	(___flge@ff1+1)^0,c
 10013   0019A4  0ED0               	movlw	208
 10014   0019A6  6E03               	movwf	(___flge@ff1+2)^0,c
 10015   0019A8  0E41               	movlw	65
 10016   0019AA  6E04               	movwf	(___flge@ff1+3)^0,c
 10017   0019AC  EE20 F010          	lfsr	2,16
 10018   0019B0  500D               	movf	Hue2Colour@cf^0,w,c
 10019   0019B2  26D9               	addwf	fsr2l,f,c
 10020   0019B4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10021   0019B6  22DA               	addwfc	fsr2h,f,c
 10022   0019B8  CFDE F005          	movff	postinc2,___flge@ff2
 10023   0019BC  CFDE F006          	movff	postinc2,___flge@ff2+1
 10024   0019C0  CFDE F007          	movff	postinc2,___flge@ff2+2
 10025   0019C4  CFDE F008          	movff	postinc2,___flge@ff2+3
 10026   0019C8  ECE9  F018         	call	___flge	;wreg free
 10027   0019CC  B0D8               	btfsc	status,0,c
 10028   0019CE  EFEB  F00C         	goto	u3031
 10029   0019D2  EFED  F00C         	goto	u3030
 10030   0019D6                     u3031:
 10031   0019D6  EF1C  F00D         	goto	l122
 10032   0019DA                     u3030:
 10033   0019DA  EE20 F010          	lfsr	2,16
 10034   0019DE  500D               	movf	Hue2Colour@cf^0,w,c
 10035   0019E0  26D9               	addwf	fsr2l,f,c
 10036   0019E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10037   0019E4  22DA               	addwfc	fsr2h,f,c
 10038   0019E6  CFDE F001          	movff	postinc2,___flge@ff1
 10039   0019EA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10040   0019EE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10041   0019F2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10042   0019F6  0E00               	movlw	0
 10043   0019F8  6E05               	movwf	___flge@ff2^0,c
 10044   0019FA  0E00               	movlw	0
 10045   0019FC  6E06               	movwf	(___flge@ff2+1)^0,c
 10046   0019FE  0EE8               	movlw	232
 10047   001A00  6E07               	movwf	(___flge@ff2+2)^0,c
 10048   001A02  0E41               	movlw	65
 10049   001A04  6E08               	movwf	(___flge@ff2+3)^0,c
 10050   001A06  ECE9  F018         	call	___flge	;wreg free
 10051   001A0A  B0D8               	btfsc	status,0,c
 10052   001A0C  EF0A  F00D         	goto	u3041
 10053   001A10  EF0C  F00D         	goto	u3040
 10054   001A14                     u3041:
 10055   001A14  EF1C  F00D         	goto	l122
 10056   001A18                     u3040:
 10057   001A18                     
 10058                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 10059   001A18  0E26               	movlw	low STR_9
 10060   001A1A  6E0F               	movwf	Hue2Colour@colourname^0,c
 10061   001A1C  0E0E               	movlw	high STR_9
 10062   001A1E  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10063   001A20                     
 10064                           ;colorfunctions.c: 100:         cf->colourindex=7;
 10065   001A20  EE20 F014          	lfsr	2,20
 10066   001A24  500D               	movf	Hue2Colour@cf^0,w,c
 10067   001A26  26D9               	addwf	fsr2l,f,c
 10068   001A28  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10069   001A2A  22DA               	addwfc	fsr2h,f,c
 10070   001A2C  0E07               	movlw	7
 10071   001A2E  6EDE               	movwf	postinc2,c
 10072   001A30  0E00               	movlw	0
 10073   001A32  6EDD               	movwf	postdec2,c
 10074   001A34  EF1C  F00D         	goto	l3499
 10075   001A38                     l122:
 10076   001A38                     l3499:
 10077                           
 10078                           ;colorfunctions.c: 102:     return colourname;
 10079   001A38  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 10080   001A3C  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 10081   001A40  0012               	return		;funcret
 10082   001A42                     __end_of_Hue2Colour:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function ___flge *****************
 10086 ;; Defined at:
 10087 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 10090 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;		None
 10093 ;; Return value:  Size  Location     Type
 10094 ;;		None               void
 10095 ;; Registers used:
 10096 ;;		wreg, status,2, status,0
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;Total ram usage:       12 bytes
 10107 ;; Hardware stack levels used: 1
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_RGB2Hue
 10112 ;;		_Hue2Colour
 10113 ;;		_main
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text59
 10118   0031D2                     __ptext59:
 10119                           	callstack 0
 10120   0031D2                     ___flge:
 10121                           	callstack 30
 10122   0031D2  0E00               	movlw	0
 10123   0031D4  1401               	andwf	___flge@ff1^0,w,c
 10124   0031D6  6E09               	movwf	??___flge^0,c
 10125   0031D8  0E00               	movlw	0
 10126   0031DA  1402               	andwf	(___flge@ff1+1)^0,w,c
 10127   0031DC  6E0A               	movwf	(??___flge+1)^0,c
 10128   0031DE  0E80               	movlw	128
 10129   0031E0  1403               	andwf	(___flge@ff1+2)^0,w,c
 10130   0031E2  6E0B               	movwf	(??___flge+2)^0,c
 10131   0031E4  0E7F               	movlw	127
 10132   0031E6  1404               	andwf	(___flge@ff1+3)^0,w,c
 10133   0031E8  6E0C               	movwf	(??___flge+3)^0,c
 10134   0031EA  5009               	movf	??___flge^0,w,c
 10135   0031EC  100A               	iorwf	(??___flge+1)^0,w,c
 10136   0031EE  100B               	iorwf	(??___flge+2)^0,w,c
 10137   0031F0  100C               	iorwf	(??___flge+3)^0,w,c
 10138   0031F2  A4D8               	btfss	status,2,c
 10139   0031F4  EFFE  F018         	goto	u2831
 10140   0031F8  EF00  F019         	goto	u2830
 10141   0031FC                     u2831:
 10142   0031FC  EF08  F019         	goto	l3367
 10143   003200                     u2830:
 10144   003200  0E00               	movlw	0
 10145   003202  6E01               	movwf	___flge@ff1^0,c
 10146   003204  0E00               	movlw	0
 10147   003206  6E02               	movwf	(___flge@ff1+1)^0,c
 10148   003208  0E00               	movlw	0
 10149   00320A  6E03               	movwf	(___flge@ff1+2)^0,c
 10150   00320C  0E00               	movlw	0
 10151   00320E  6E04               	movwf	(___flge@ff1+3)^0,c
 10152   003210                     l3367:
 10153   003210  0E00               	movlw	0
 10154   003212  1405               	andwf	___flge@ff2^0,w,c
 10155   003214  6E09               	movwf	??___flge^0,c
 10156   003216  0E00               	movlw	0
 10157   003218  1406               	andwf	(___flge@ff2+1)^0,w,c
 10158   00321A  6E0A               	movwf	(??___flge+1)^0,c
 10159   00321C  0E80               	movlw	128
 10160   00321E  1407               	andwf	(___flge@ff2+2)^0,w,c
 10161   003220  6E0B               	movwf	(??___flge+2)^0,c
 10162   003222  0E7F               	movlw	127
 10163   003224  1408               	andwf	(___flge@ff2+3)^0,w,c
 10164   003226  6E0C               	movwf	(??___flge+3)^0,c
 10165   003228  5009               	movf	??___flge^0,w,c
 10166   00322A  100A               	iorwf	(??___flge+1)^0,w,c
 10167   00322C  100B               	iorwf	(??___flge+2)^0,w,c
 10168   00322E  100C               	iorwf	(??___flge+3)^0,w,c
 10169   003230  A4D8               	btfss	status,2,c
 10170   003232  EF1D  F019         	goto	u2841
 10171   003236  EF1F  F019         	goto	u2840
 10172   00323A                     u2841:
 10173   00323A  EF27  F019         	goto	l3371
 10174   00323E                     u2840:
 10175   00323E  0E00               	movlw	0
 10176   003240  6E05               	movwf	___flge@ff2^0,c
 10177   003242  0E00               	movlw	0
 10178   003244  6E06               	movwf	(___flge@ff2+1)^0,c
 10179   003246  0E00               	movlw	0
 10180   003248  6E07               	movwf	(___flge@ff2+2)^0,c
 10181   00324A  0E00               	movlw	0
 10182   00324C  6E08               	movwf	(___flge@ff2+3)^0,c
 10183   00324E                     l3371:
 10184   00324E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10185   003250  EF2C  F019         	goto	u2851
 10186   003254  EF2E  F019         	goto	u2850
 10187   003258                     u2851:
 10188   003258  EF37  F019         	goto	l3375
 10189   00325C                     u2850:
 10190   00325C  6C01               	negf	___flge@ff1^0,c
 10191   00325E  1E02               	comf	(___flge@ff1+1)^0,f,c
 10192   003260  B0D8               	btfsc	status,0,c
 10193   003262  2A02               	incf	(___flge@ff1+1)^0,f,c
 10194   003264  1E03               	comf	(___flge@ff1+2)^0,f,c
 10195   003266  B0D8               	btfsc	status,0,c
 10196   003268  2A03               	incf	(___flge@ff1+2)^0,f,c
 10197   00326A  0E80               	movlw	128
 10198   00326C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10199   00326E                     l3375:
 10200   00326E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10201   003270  EF3C  F019         	goto	u2861
 10202   003274  EF3E  F019         	goto	u2860
 10203   003278                     u2861:
 10204   003278  EF47  F019         	goto	l823
 10205   00327C                     u2860:
 10206   00327C  6C05               	negf	___flge@ff2^0,c
 10207   00327E  1E06               	comf	(___flge@ff2+1)^0,f,c
 10208   003280  B0D8               	btfsc	status,0,c
 10209   003282  2A06               	incf	(___flge@ff2+1)^0,f,c
 10210   003284  1E07               	comf	(___flge@ff2+2)^0,f,c
 10211   003286  B0D8               	btfsc	status,0,c
 10212   003288  2A07               	incf	(___flge@ff2+2)^0,f,c
 10213   00328A  0E80               	movlw	128
 10214   00328C  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10215   00328E                     l823:
 10216   00328E  0E00               	movlw	0
 10217   003290  1A01               	xorwf	___flge@ff1^0,f,c
 10218   003292  0E00               	movlw	0
 10219   003294  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10220   003296  0E00               	movlw	0
 10221   003298  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10222   00329A  0E80               	movlw	128
 10223   00329C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10224   00329E  0E00               	movlw	0
 10225   0032A0  1A05               	xorwf	___flge@ff2^0,f,c
 10226   0032A2  0E00               	movlw	0
 10227   0032A4  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10228   0032A6  0E00               	movlw	0
 10229   0032A8  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10230   0032AA  0E80               	movlw	128
 10231   0032AC  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10232   0032AE  5005               	movf	___flge@ff2^0,w,c
 10233   0032B0  5C01               	subwf	___flge@ff1^0,w,c
 10234   0032B2  5006               	movf	(___flge@ff2+1)^0,w,c
 10235   0032B4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10236   0032B6  5007               	movf	(___flge@ff2+2)^0,w,c
 10237   0032B8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10238   0032BA  5008               	movf	(___flge@ff2+3)^0,w,c
 10239   0032BC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10240   0032BE  B0D8               	btfsc	status,0,c
 10241   0032C0  EF64  F019         	goto	u2871
 10242   0032C4  EF66  F019         	goto	u2870
 10243   0032C8                     u2871:
 10244   0032C8  EF69  F019         	goto	l3381
 10245   0032CC                     u2870:
 10246   0032CC  90D8               	bcf	status,0,c
 10247   0032CE  EF6A  F019         	goto	l828
 10248   0032D2                     l3381:
 10249   0032D2  80D8               	bsf	status,0,c
 10250   0032D4                     l828:
 10251   0032D4  0012               	return		;funcret
 10252   0032D6                     __end_of___flge:
 10253                           	callstack 0
 10254                           
 10255 ;; *************** function _ClickLEDOn *****************
 10256 ;; Defined at:
 10257 ;;		line 93 in file "colorclick.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  power           1    wreg     unsigned char 
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  power           1    0[COMRAM] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10275 ;;Total ram usage:        1 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_main
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text60
 10285   0042C6                     __ptext60:
 10286                           	callstack 0
 10287   0042C6                     _ClickLEDOn:
 10288                           	callstack 30
 10289                           
 10290                           ;incstack = 0
 10291                           ;ClickLEDOn@power stored from wreg
 10292   0042C6  6E01               	movwf	ClickLEDOn@power^0,c
 10293   0042C8                     
 10294                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10295   0042C8  5001               	movf	ClickLEDOn@power^0,w,c
 10296   0042CA  B4D8               	btfsc	status,2,c
 10297   0042CC  EF6A  F021         	goto	u3751
 10298   0042D0  EF6C  F021         	goto	u3750
 10299   0042D4                     u3751:
 10300   0042D4  EF71  F021         	goto	l4009
 10301   0042D8                     u3750:
 10302   0042D8                     
 10303                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10304   0042D8  827F               	bsf	127,1,c	;volatile
 10305                           
 10306                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10307   0042DA  8879               	bsf	121,4,c	;volatile
 10308                           
 10309                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10310   0042DC  8E7E               	bsf	126,7,c	;volatile
 10311                           
 10312                           ;colorclick.c: 99:     }
 10313   0042DE  EF7C  F021         	goto	l52
 10314   0042E2                     l4009:
 10315   0042E2  5001               	movf	ClickLEDOn@power^0,w,c
 10316   0042E4  A4D8               	btfss	status,2,c
 10317   0042E6  EF77  F021         	goto	u3761
 10318   0042EA  EF79  F021         	goto	u3760
 10319   0042EE                     u3761:
 10320   0042EE  EF7C  F021         	goto	l52
 10321   0042F2                     u3760:
 10322   0042F2                     
 10323                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10324   0042F2  927F               	bcf	127,1,c	;volatile
 10325                           
 10326                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10327   0042F4  9879               	bcf	121,4,c	;volatile
 10328                           
 10329                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10330   0042F6  9E7E               	bcf	126,7,c	;volatile
 10331   0042F8                     l52:
 10332   0042F8  0012               	return		;funcret
 10333   0042FA                     __end_of_ClickLEDOn:
 10334                           	callstack 0
 10335                           
 10336                           	psect	rparam
 10337   000000                     
 10338                           	psect	idloc
 10339                           
 10340                           ;Config register IDLOC0 @ 0x200000
 10341                           ;	unspecified, using default values
 10342   200000                     	org	2097152
 10343   200000  0FFF               	dw	4095
 10344                           
 10345                           ;Config register IDLOC1 @ 0x200002
 10346                           ;	unspecified, using default values
 10347   200002                     	org	2097154
 10348   200002  0FFF               	dw	4095
 10349                           
 10350                           ;Config register IDLOC2 @ 0x200004
 10351                           ;	unspecified, using default values
 10352   200004                     	org	2097156
 10353   200004  0FFF               	dw	4095
 10354                           
 10355                           ;Config register IDLOC3 @ 0x200006
 10356                           ;	unspecified, using default values
 10357   200006                     	org	2097158
 10358   200006  0FFF               	dw	4095
 10359                           
 10360                           ;Config register IDLOC4 @ 0x200008
 10361                           ;	unspecified, using default values
 10362   200008                     	org	2097160
 10363   200008  0FFF               	dw	4095
 10364                           
 10365                           ;Config register IDLOC5 @ 0x20000A
 10366                           ;	unspecified, using default values
 10367   20000A                     	org	2097162
 10368   20000A  0FFF               	dw	4095
 10369                           
 10370                           ;Config register IDLOC6 @ 0x20000C
 10371                           ;	unspecified, using default values
 10372   20000C                     	org	2097164
 10373   20000C  0FFF               	dw	4095
 10374                           
 10375                           ;Config register IDLOC7 @ 0x20000E
 10376                           ;	unspecified, using default values
 10377   20000E                     	org	2097166
 10378   20000E  0FFF               	dw	4095
 10379                           
 10380                           	psect	config
 10381                           
 10382                           ;Config register CONFIG1L @ 0x300000
 10383                           ;	External Oscillator mode Selection bits
 10384                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10385                           ;	Power-up default value for COSC bits
 10386                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10387   300000                     	org	3145728
 10388   300000  AA                 	db	170
 10389                           
 10390                           ;Config register CONFIG1H @ 0x300001
 10391                           ;	unspecified, using default values
 10392                           ;	Clock Out Enable bit
 10393                           ;	CLKOUTEN = 0x1, unprogrammed default
 10394                           ;	Clock Switch Enable bit
 10395                           ;	CSWEN = 0x1, unprogrammed default
 10396                           ;	Fail-Safe Clock Monitor Enable bit
 10397                           ;	FCMEN = 0x1, unprogrammed default
 10398   300001                     	org	3145729
 10399   300001  FF                 	db	255
 10400                           
 10401                           ;Config register CONFIG2L @ 0x300002
 10402                           ;	unspecified, using default values
 10403                           ;	Master Clear Enable bit
 10404                           ;	MCLRE = 0x1, unprogrammed default
 10405                           ;	Power-up Timer Enable bit
 10406                           ;	PWRTE = 0x1, unprogrammed default
 10407                           ;	Low-power BOR enable bit
 10408                           ;	LPBOREN = 0x1, unprogrammed default
 10409                           ;	Brown-out Reset Enable bits
 10410                           ;	BOREN = 0x3, unprogrammed default
 10411   300002                     	org	3145730
 10412   300002  FF                 	db	255
 10413                           
 10414                           ;Config register CONFIG2H @ 0x300003
 10415                           ;	unspecified, using default values
 10416                           ;	Brown Out Reset Voltage selection bits
 10417                           ;	BORV = 0x3, unprogrammed default
 10418                           ;	ZCD Disable bit
 10419                           ;	ZCD = 0x1, unprogrammed default
 10420                           ;	PPSLOCK bit One-Way Set Enable bit
 10421                           ;	PPS1WAY = 0x1, unprogrammed default
 10422                           ;	Stack Full/Underflow Reset Enable bit
 10423                           ;	STVREN = 0x1, unprogrammed default
 10424                           ;	Debugger Enable bit
 10425                           ;	DEBUG = 0x1, unprogrammed default
 10426                           ;	Extended Instruction Set Enable bit
 10427                           ;	XINST = 0x1, unprogrammed default
 10428   300003                     	org	3145731
 10429   300003  FF                 	db	255
 10430                           
 10431                           ;Config register CONFIG3L @ 0x300004
 10432                           ;	WDT Period Select bits
 10433                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10434                           ;	WDT operating mode
 10435                           ;	WDTE = OFF, WDT Disabled
 10436   300004                     	org	3145732
 10437   300004  9F                 	db	159
 10438                           
 10439                           ;Config register CONFIG3H @ 0x300005
 10440                           ;	unspecified, using default values
 10441                           ;	WDT Window Select bits
 10442                           ;	WDTCWS = 0x7, unprogrammed default
 10443                           ;	WDT input clock selector
 10444                           ;	WDTCCS = 0x7, unprogrammed default
 10445   300005                     	org	3145733
 10446   300005  FF                 	db	255
 10447                           
 10448                           ;Config register CONFIG4L @ 0x300006
 10449                           ;	unspecified, using default values
 10450                           ;	Write Protection Block 0
 10451                           ;	WRT0 = 0x1, unprogrammed default
 10452                           ;	Write Protection Block 1
 10453                           ;	WRT1 = 0x1, unprogrammed default
 10454                           ;	Write Protection Block 2
 10455                           ;	WRT2 = 0x1, unprogrammed default
 10456                           ;	Write Protection Block 3
 10457                           ;	WRT3 = 0x1, unprogrammed default
 10458                           ;	Write Protection Block 3
 10459                           ;	WRT4 = 0x1, unprogrammed default
 10460                           ;	Write Protection Block 3
 10461                           ;	WRT5 = 0x1, unprogrammed default
 10462                           ;	Write Protection Block 3
 10463                           ;	WRT6 = 0x1, unprogrammed default
 10464                           ;	Write Protection Block 3
 10465                           ;	WRT7 = 0x1, unprogrammed default
 10466   300006                     	org	3145734
 10467   300006  FF                 	db	255
 10468                           
 10469                           ;Config register CONFIG4H @ 0x300007
 10470                           ;	unspecified, using default values
 10471                           ;	Configuration Register Write Protection bit
 10472                           ;	WRTC = 0x1, unprogrammed default
 10473                           ;	Boot Block Write Protection bit
 10474                           ;	WRTB = 0x1, unprogrammed default
 10475                           ;	Data EEPROM Write Protection bit
 10476                           ;	WRTD = 0x1, unprogrammed default
 10477                           ;	Scanner Enable bit
 10478                           ;	SCANE = 0x1, unprogrammed default
 10479                           ;	Low Voltage Programming Enable bit
 10480                           ;	LVP = 0x1, unprogrammed default
 10481   300007                     	org	3145735
 10482   300007  FF                 	db	255
 10483                           
 10484                           ;Config register CONFIG5L @ 0x300008
 10485                           ;	unspecified, using default values
 10486                           ;	UserNVM Program Memory Code Protection bit
 10487                           ;	CP = 0x1, unprogrammed default
 10488                           ;	DataNVM Memory Code Protection bit
 10489                           ;	CPD = 0x1, unprogrammed default
 10490   300008                     	org	3145736
 10491   300008  FF                 	db	255
 10492                           
 10493                           ;Config register CONFIG5H @ 0x300009
 10494                           ;	unspecified, using default values
 10495   300009                     	org	3145737
 10496   300009  FF                 	db	255
 10497                           
 10498                           ;Config register CONFIG6L @ 0x30000A
 10499                           ;	unspecified, using default values
 10500                           ;	Table Read Protection Block 0
 10501                           ;	EBTR0 = 0x1, unprogrammed default
 10502                           ;	Table Read Protection Block 1
 10503                           ;	EBTR1 = 0x1, unprogrammed default
 10504                           ;	Table Read Protection Block 2
 10505                           ;	EBTR2 = 0x1, unprogrammed default
 10506                           ;	Table Read Protection Block 3
 10507                           ;	EBTR3 = 0x1, unprogrammed default
 10508                           ;	Table Read Protection Block 4
 10509                           ;	EBTR4 = 0x1, unprogrammed default
 10510                           ;	Table Read Protection Block 5
 10511                           ;	EBTR5 = 0x1, unprogrammed default
 10512                           ;	Table Read Protection Block 6
 10513                           ;	EBTR6 = 0x1, unprogrammed default
 10514                           ;	Table Read Protection Block 7
 10515                           ;	EBTR7 = 0x1, unprogrammed default
 10516   30000A                     	org	3145738
 10517   30000A  FF                 	db	255
 10518                           
 10519                           ;Config register CONFIG6H @ 0x30000B
 10520                           ;	unspecified, using default values
 10521                           ;	Boot Block Table Read Protection bit
 10522                           ;	EBTRB = 0x1, unprogrammed default
 10523   30000B                     	org	3145739
 10524   30000B  FF                 	db	255
 10525                           tosu	equ	0xFFF
 10526                           tosh	equ	0xFFE
 10527                           tosl	equ	0xFFD
 10528                           stkptr	equ	0xFFC
 10529                           pclatu	equ	0xFFB
 10530                           pclath	equ	0xFFA
 10531                           pcl	equ	0xFF9
 10532                           tblptru	equ	0xFF8
 10533                           tblptrh	equ	0xFF7
 10534                           tblptrl	equ	0xFF6
 10535                           tablat	equ	0xFF5
 10536                           prodh	equ	0xFF4
 10537                           prodl	equ	0xFF3
 10538                           indf0	equ	0xFEF
 10539                           postinc0	equ	0xFEE
 10540                           postdec0	equ	0xFED
 10541                           preinc0	equ	0xFEC
 10542                           plusw0	equ	0xFEB
 10543                           fsr0h	equ	0xFEA
 10544                           fsr0l	equ	0xFE9
 10545                           wreg	equ	0xFE8
 10546                           indf1	equ	0xFE7
 10547                           postinc1	equ	0xFE6
 10548                           postdec1	equ	0xFE5
 10549                           preinc1	equ	0xFE4
 10550                           plusw1	equ	0xFE3
 10551                           fsr1h	equ	0xFE2
 10552                           fsr1l	equ	0xFE1
 10553                           bsr	equ	0xFE0
 10554                           indf2	equ	0xFDF
 10555                           postinc2	equ	0xFDE
 10556                           postdec2	equ	0xFDD
 10557                           preinc2	equ	0xFDC
 10558                           plusw2	equ	0xFDB
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         157
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    122     160
    BANK1           256      0     134
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2619$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), 
		 -> STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2566$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2566$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S308DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S308DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_RGB2Hue
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _Colour2Action->_Blue_T180
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0  255202
                                             92 COMRAM     2     2      0
                                             21 BANK0    101   101      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                           _LED_init
                            _RGB2Hue
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16629
                                             86 COMRAM     6     4      2
                                             13 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     999
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2838
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  214253
                                             39 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   38611
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Red_R90                                              4     0      4   28188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Pink_rev1_L90                                        6     2      4   38567
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Orange_R135                                          4     0      4   32697
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _LightBlue_L135                                       4     0      4   28276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Green_L90                                            4     0      4   28188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9236
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Blue_T180                                            4     0      4   19496
                                             35 COMRAM     4     0      4
                         _TimerReset
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10476
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9844
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8584
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4377
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8157
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _TimerReset
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _TimerReset
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
       _stop
     _Pink_rev1_L90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Yellow_rev1_R90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
   _Hue2Colour
   _I2C_2_Master_Init
   _LED_init
   _RGB2Hue
     ___fladd
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      86       7       52.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhh       52      0       0      41        0.0%
BITBIGSFRllhllh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRhhhhh      29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      46        0.0%
BITBIGSFRlllllh     1E      0       0      48        0.0%
BITBIGSFRlllllh     19      0       0      55        0.0%
BITBIGSFRhhllh      17      0       0      37        0.0%
BITBIGSFRhhhhl      13      0       0      33        0.0%
BITBIGSFRlllllh     11      0       0      49        0.0%
BITBIGSFRhhhlh       E      0       0      34        0.0%
BITBIGSFRllllhl      C      0       0      47        0.0%
BITBIGSFRllhlll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      52        0.0%
BITBIGSFRhhlll       5      0       0      38        0.0%
BITBIGSFRlllllh      3      0       0      51        0.0%
BITBIGSFRllhlh       2      0       0      42        0.0%
BITBIGSFRhhlh        2      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BITBIGSFRhhhll       1      0       0      35        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     185      58        0.0%
DATA                 0      0     185       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 17:23:04 2023

               _color_read_Red 3F5C                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 404C                             l31 424E  
                           l40 3FFA                             l34 43B2                             l43 409A  
                           l52 42F8                             l37 3FAA                             l46 404A  
                           l97 30CA            ___wmul@multiplicand 0003                 ?_rotate180left 0020  
             _color_read_Clear 3FFC               _color_read_Green 3FAC                    Green_L90@mL 0021  
                  Green_L90@mR 0023                            l103 10A0                            l111 1552  
                          l122 1A38                            l128 1A40                            l144 2BC2  
                          l304 4392                            l313 43B6                            l138 2BC2  
                          l171 4322                            l316 43CA                            l340 43E8  
                          l180 4412                            l325 42C4                            l501 3624  
                          l421 39D6                            l174 4324                            l319 428C  
                          l183 43FE                            l192 420E                            l177 434A  
                          l506 3774                            l186 4408                            l443 3946  
                          l259 2734                            l428 2D2E                            l437 3818  
                          l461 3AEA                            l453 3BF0                            l189 43F4  
                          l438 381A                            l470 3B70                            l552 441C  
                          l448 38B0                            l464 3A60                            l480 3DEA  
                          l458 3C70                            l490 33C2                            l467 3F5A  
                          l475 3CEE                            l485 3EB4                            l558 4370  
                          l823 328E                            l496 3D6C                            l817 36CE  
                          l828 32D4                            l855 31D0                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1554  
                 ___fltol@exp1 000A                           l1103 1D4A                           l1112 1E1A  
                         l1113 1E08                           l1140 26C6                           l1220 2978  
                         l1213 28E0                           l1142 2526                           l1311 356A  
                         l1151 256C                           l1056 3E5E                           l1128 41CC  
                         l1216 2A3C                           l1049 3E56                           l3001 3870  
                         l1153 25E4                           l1145 24EA                           l1322 441E  
                         l1154 25D2                           l3011 3BF2                           l3003 387C  
                         l1227 29D4                           l1332 34A0                           l1236 4138  
                         l1172 1FC8                           l3021 3C2E                           l3013 3C12  
                         l3005 3888                           l1181 2236                           l3101 41E4  
                         l1182 2224                           l1086 1C30                           l1271 2F0A  
                         l3023 3C3A                           l3031 3A62                           l3007 3896  
                         l3111 3B92                           l1095 1F00                           l1087 1C1E  
                         l3103 420A                           l1328 40EA                           l1176 232C  
                         l1088 1BE4                           l1273 2F12                           l3025 3C46  
                         l3041 3AD0                           l3033 3A64                           l3009 389A  
                         l3121 3BBA                           l3201 1B12                           l4001 424A  
                         l3105 420C                           l1282 2FC4                           l4011 42F2  
                         l3131 43C6                           l3051 2D70                           l3027 3C56  
                         l3019 3C1A                           l3043 3AE8                           l3035 3A78  
                         l3123 3BC6                           l1179 21BE                           l3211 1B4A  
                         l3203 1B22                           l4003 424C                           l4005 42C8  
                         l1293 2E88                           l3061 2DFE                           l3053 2D74  
                         l3045 2D30                           l3029 3C5A                           l3037 3A90  
                         l3141 3A32                           l3133 39D8                           l3125 3BD6  
                         l3117 3B9A                           l3109 3B72                           l1189 22EE  
                         l3221 1B5E                           l3213 1B4E                           l3205 1B34  
                         l4021 30AE                           l4013 2FC6                           l4101 4382  
                         l4007 42D8                           l3063 2E06                           l3055 2D98  
                         l3047 2D54                           l3151 3B00                           l3039 3ABC  
                         l3143 3A46                           l3135 39DA                           l3127 3BDA  
                         l3119 3BAE                           l3311 1DAC                           l3303 1D84  
                         l3231 1B72                           l3223 1B62                           l3215 1B52  
                         l3207 1B42                           l4031 0F08                           l4023 0E52  
                         l4015 305E                           l4111 3948                           l4103 438C  
                         l4009 42E2                           l3129 43B6                           l3065 2E16  
                         l3057 2DCE                           l3049 2D62                           l3073 2E60  
                         l3153 3B18                           l3145 3A5E                           l3137 39EE  
                         l3313 1DB4                           l3305 1D8E                           l3321 1DD8  
                         l3241 1B86                           l3233 1B76                           l3225 1B66  
                         l3217 1B56                           l3209 1B46                           l3161 1A42  
                         l4041 104C                           l4033 0F4E                           l4025 0E98  
                         l3401 430C                           l3081 440E                           l4017 3076  
                         l4121 39B0                           l4113 3958                           l4105 438E  
                         l4201 27F0                           l3059 2DF2                           l1299 4186  
                         l3155 3B44                           l3147 3F0A                           l3139 3A06  
                         l3331 1E2A                           l3323 1DDC                           l3315 1DB8  
                         l3307 1D9C                           l3251 1BFE                           l3243 1BB0  
                         l3235 1B7A                           l3227 1B6A                           l3219 1B5A  
                         l3171 1A7E                           l3163 1A4E                           l4051 121A  
                         l4043 1078                           l4035 0F94                           l4027 0EDE  
                         l3403 430E                           l3083 43EC                           l3091 43F6  
                         l3411 3FA2                           l4019 3092                           l4131 39CA  
                         l4123 39B2                           l4115 397E                           l4107 4390  
                         l4211 284A                           l4203 2808                           l3069 2E4E  
                         l3157 3B58                           l3149 3AEC                           l4109 43DC  
                         l3341 1E90                           l3333 1E36                           l3325 1DEA  
                         l3317 1DC8                           l3309 1D9E                           l3261 1C3E  
                         l3253 1C02                           l3245 1BCC                           l3237 1B7E  
                         l3229 1B6E                           l3181 1AAE                           l3173 1A8E  
                         l3165 1A5C                           l4061 1486                           l4053 1260  
                         l4045 10E6                           l4037 0FBC                           l4029 0EFE  
                         l3405 4310                           l3085 43F0                           l3093 43FA  
                         l3421 404C                           l4133 39D4                           l4125 39BC  
                         l4117 3982                           l4213 285E                           l4205 281A  
                         l4141 26C8                           l4135 4250                           l3159 4414  
                         l3511 3D6E                           l3503 3C72                           l4071 2A74  
                         l3351 1ED8                           l3343 1EA0                           l3335 1E44  
                         l3327 1E00                           l3319 1DCA                           l3271 1C80  
                         l3263 1C4E                           l3255 1C10                           l3247 1BDC  
                         l3239 1B82                           l3191 1AD8                           l3183 1AC0  
                         l3175 1A90                           l3167 1A5E                           l4055 12AA  
                         l4063 14EA                           l4047 112C                           l4039 1002  
                         l3079 440A                           l3087 4400                           l3407 4396  
                         l3095 41D0                           l3423 4092                           l3415 3FAC  
                         l4127 39BE                           l4119 39A6                           l4215 2876  
                         l4207 2826                           l4151 26D8                           l4143 26CC  
                         l3441 15E0                           l3433 1554                           l3601 42AC  
                         l4137 4264                           l3521 3E70                           l3513 3D7E  
                         l3505 3C82                           l4081 2B02                           l4073 2A92  
                         l3353 1EDA                           l3345 1EC0                           l3337 1E7E  
                         l3281 1CAE                           l3273 1C8E                           l3257 1C12  
                         l3249 1BF2                           l3193 1AE8                           l3185 1AC2  
                         l3169 1A6E                           l3177 1A98                           l4065 1506  
                         l4057 1364                           l4049 1150                           l3089 4404  
                         l3097 41D4                           l3417 3FF2                           l3409 3F5C  
                         l4129 39C8                           l4217 287C                           l4209 2832  
                         l4161 26FA                           l4153 26E4                           l4145 26D0  
                         l3371 324E                           l3363 31D2                           l3451 1690  
                         l3443 15F4                           l3435 155C                           l4139 4280  
                         l3523 3E98                           l3515 3DBA                           l3507 3CBE  
                         l3531 330E                           l4091 2B8A                           l4083 2B1A  
                         l4075 2AAA                           l4067 2A3E                           l3611 235A  
                         l3603 232E                           l3355 1EE0                           l3347 1EC4  
                         l3339 1E80                           l3291 1D1A                           l3283 1CB8  
                         l3275 1C9A                           l3267 1C62                           l3259 1C1C  
                         l3195 1AF8                           l3187 1AC8                           l3179 1AA8  
                         l4059 13CC                           l3099 41DC                           l3427 3FFC  
                         l4171 2716                           l4163 2702                           l4155 26EA  
                         l4147 26D4                           l3381 32D2                           l3373 325C  
                         l3365 3200                           l3461 176A                           l3453 16CE  
                         l3445 1632                           l3437 159A                           l2821 4368  
                         l2901 37D8                           l3525 3EA0                           l3517 3DC2  
                         l3509 3CC6                           l3533 3326                           l3541 336A  
                         l4093 2BAA                           l4085 2B3A                           l4077 2ACA  
                         l4069 2A5C                           l3701 258E                           l3621 2394  
                         l3613 236A                           l3605 233A                           l3357 1EEE  
                         l3349 1ED2                           l3293 1D2A                           l3277 1C9E  
                         l3269 1C72                           l3285 1CBE                           l3197 1B08  
                         l3189 1AD6                           l3429 4042                           l4181 2742  
                         l4173 271E                           l4165 270A                           l4157 26EE  
                         l4149 26D8                           l3375 326E                           l3367 3210  
                         l3471 1844                           l3463 17A8                           l3455 170C  
                         l3447 1670                           l3439 15D8                           l3391 417E  
                         l2831 3E0E                           l2903 37E8                           l2911 38DE  
                         l3519 3E60                           l3551 3D28                           l3543 33A6  
                         l3535 333A                           l3527 32D6                           l4087 2B52  
                         l4079 2AE2                           l3711 2600                           l3703 259C  
                         l3631 23C0                           l3623 239A                           l3615 237A  
                         l3607 2348                           l3359 1EF0                           l3287 1CE4  
                         l3295 1D3A                           l3279 1CAC                           l3199 1B0A  
                         l4095 4372                           l4191 278A                           l4183 2748  
                         l4175 2726                           l4167 270E                           l4159 26F2  
                         l3377 327C                           l3369 323E                           l3481 18E8  
                         l3473 184C                           l3465 17B0                           l3457 1714  
                         l3449 1678                           l3385 413A                           l2841 3E48  
                         l2833 3E16                           l2825 3DEC                           l2905 3800  
                         l2921 3906                           l2913 38EA                           l3553 3D40  
                         l3537 334E                           l3529 32E6                           l4089 2B72  
                         l3721 266C                           l3713 260E                           l3705 25CA  
                         l3641 23FA                           l3633 23D0                           l3625 23A0  
                         l3617 237C                           l3609 234A                           l3801 208E  
                         l3297 1D60                           l3289 1D18                           l4097 4376  
                         l4193 279E                           l4185 274E                           l4177 272E  
                         l4169 2712                           l3379 32CC                           l3491 199C  
                         l3483 1900                           l3475 1864                           l3467 17C8  
                         l3459 172C                           l2931 2E8A                           l3387 4146  
                         l2843 3E4A                           l2835 3E24                           l2827 3DF4  
                         l2819 434C                           l2851 2C34                           l2923 3912  
                         l2907 38B2                           l3571 35D4                           l3555 3D54  
                         l3547 3CF0                           l3539 3352                           l3731 26BA  
                         l3723 2686                           l3715 2638                           l3643 2410  
                         l3635 23E0                           l3627 23AE                           l3619 2384  
                         l3811 20F0                           l3803 209A                           l3299 1D70  
                         l3395 42FA                           l4099 4380                           l4195 27D0  
                         l4187 2762                           l4179 2730                           l3493 19DA  
                         l3485 193E                           l3477 18A2                           l3469 1806  
                         l2941 2ED2                           l2933 2E9C                           l3389 4162  
                         l3581 40EC                           l2845 3E50                           l2837 3E2A  
                         l2829 3E06                           l2861 2CEE                           l2853 2C48  
                         l2925 391E                           l2909 38D2                           l3573 36D0  
                         l3565 356C                           l3557 3D68                           l3549 3D00  
                         l3733 26BC                           l3725 26A2                           l3709 25F4  
                         l3717 263C                           l3661 2464                           l3645 2420  
                         l3653 2440                           l3637 23E2                           l3629 23B0  
                         l3821 2186                           l3813 20FC                           l3805 20AA  
                         l3741 1F02                           l3901 3120                           l3397 4304  
                         l4197 27D6                           l4189 277E                           l3495 1A18  
                         l3487 197C                           l3479 18E0                           l2871 34EE  
                         l2863 34A2                           l2951 2F3E                           l2943 2EDA  
                         l2935 2EA4                           l3583 40FC                           l2839 3E40  
                         l2855 2C4C                           l2847 2BC4                           l2927 392C  
                         l2919 38F2                           l3575 36E0                           l3567 357C  
                         l3727 26A6                           l3719 2656                           l3671 24B6  
                         l3663 247E                           l3655 2450                           l3647 2428  
                         l3639 23EA                           l3831 21DC                           l3823 21A4  
                         l3815 2118                           l3807 20C4                           l3751 1F40  
                         l3743 1F10                           l3903 3122                           l3399 430A  
                         l4199 27DC                           l3497 1A20                           l3489 1984  
                         l3593 428E                           l2873 3524                           l2865 34B4  
                         l2881 40AC                           l2961 2FA6                           l2953 2F5C  
                         l2945 2EE8                           l2937 2EB6                           l3585 4104  
                         l2857 2C8E                           l2849 2BE0                           l2929 3930  
                         l3577 3730                           l3569 35CC                           l3729 26B4  
                         l3681 2512                           l3673 24C6                           l3665 248E  
                         l3657 2450                           l3649 242C                           l3841 2246  
                         l3833 21E0                           l3825 21AE                           l3817 2142  
                         l3809 20D4                           l3761 1F72                           l3753 1F50  
                         l3745 1F1E                           l3905 3132                           l3499 1A38  
                         l3595 4292                           l2867 34C6                           l2883 40DE  
                         l2955 2F68                           l2947 2F26                           l2939 2EBE  
                         l2971 3408                           l2963 33C4                           l3587 410C  
                         l2859 2CAA                           l2891 3794                           l3579 3738  
                         l3691 2552                           l3683 2514                           l3675 24DA  
                         l3667 249E                           l3851 22A8                           l3843 2252  
                         l3835 21EE                           l3827 21BC                           l3819 2178  
                         l3771 1FB2                           l3763 1F80                           l3755 1F56  
                         l3747 1F20                           l3931 31B0                           l3915 315C  
                         l3907 3136                           l3597 42A0                           l2869 34D0  
                         l2877 409C                           l2957 2F9E                           l2949 2F3A  
                         l2973 3424                           l2965 33EE                           l3589 4128  
                         l2893 379E                           l3693 255C                           l3685 2524  
                         l3677 24E8                           l3669 24AE                           l3861 2310  
                         l3853 22BC                           l3845 2260                           l3837 221C  
                         l3829 21CE                           l3781 1FFC                           l3773 1FB8  
                         l3765 1F82                           l3757 1F66                           l3749 1F30  
                         l3933 31C0                           l3925 3184                           l3917 3166  
                         l3909 3144                           l3941 28AA                           l3599 42A4  
                         l2879 40A8                           l2959 2FA2                           l2975 3440  
                         l2895 37B6                           l2887 3776                           l2991 3848  
                         l3695 256A                           l3687 2536                           l3679 24F4  
                         l3863 2312                           l3855 22D6                           l3847 228A  
                         l3791 204C                           l3783 2008                           l3775 1FD8  
                         l3767 1F92                           l3759 1F6C                           l3871 4188  
                         l3927 3190                           l3919 3170                           l3951 2922  
                         l3943 28F0                           l2983 4324                           l2977 3452  
                         l2969 33FA                           l2897 37C0                           l2889 377C  
                         l2993 3854                           l3689 254C                           l3697 257C  
                         l3881 3664                           l3857 22F2                           l3865 2318  
                         l3849 228E                           l3793 2058                           l3785 2012  
                         l3777 1FE8                           l3769 1FA2                           l3873 4198  
                         l3929 31A0                           l3961 29AA                           l3953 292E  
                         l3945 2906                           l3937 288C                           l2985 4334  
                         l2979 347C                           l2899 37CC                           l2987 381C  
                         l3699 258A                           l3883 3692                           l3867 231C  
                         l3859 2302                           l3795 2064                           l3787 2028  
                         l3971 29E8                           l3963 29B6                           l3955 2960  
                         l3939 289C                           l2989 383C                           l3885 36A2  
                         l3877 3626                           l3797 2072                           l3789 2034  
                         l3893 30CC                           l3973 2A0C                           l3965 29C4  
                         l3957 2962                           l3949 291A                           l2999 385C  
                         l3887 36C6                           l3879 3654                           l3799 207E  
                         l3895 30E2                           l3975 2A1C                           l3967 29E2  
                         l3959 296E                           l3991 4238                           l3983 4210  
                         l3889 36CC                           l3977 2A2A                           l3969 29E4  
                         l3993 4242                           l3985 4214                           l3899 30F6  
                         l3979 2A2C                           l3995 4244                           l3987 421E  
                         l3997 4246                           l3989 422E                           l3999 4248  
                         STR_1 0E10                           STR_2 0E4C                           STR_3 0E3D  
                         STR_4 0E1C                           STR_5 0E36                           STR_6 0E43  
                         STR_7 0E2F                           STR_8 0E11                           STR_9 0E26  
                         u2100 34C6                           u2101 34C2                           u2110 34EE  
                         u2111 34EA                           u3000 18E0                           u2120 3524  
                         u2040 3E06                           u3001 18DC                           u2121 3520  
                         u2201 2E94                           u2041 3E02                           u3010 193E  
                         u2130 40CE                           u2210 2EB6                           u2050 3E24  
                         u3011 193A                           u2211 2EB2                           u2051 3E20  
                         u3020 197C                           u2140 40DE                           u2220 2EE8  
                         u2300 3452                           u2060 3E40                           u3100 357C  
                         u3021 1978                           u2141 40DA                           u2221 2EE4  
                         u2301 344E                           u2061 3E3C                           u3101 3578  
                         u3030 19DA                           u2230 2F06                           u2310 347C  
                         u2070 2BE0                           u2150 3794                           u3110 36E0  
                         u3031 19D6                           u2231 2F02                           u2311 3478  
                         u2071 2BDC                           u2151 3790                           u3111 36DC  
                         u3040 1A18                           u3120 42C4                           u2240 2F5C  
                         u2080 2CAA                           u2160 37B6                           u3200 2450  
                         u2320 4334                           u2400 41F8                   _BAUD4CONbits 000EE9  
                         u3041 1A14                           u3121 42C0                           u2137 40C4  
                         u2241 2F58                           u2081 2CA6                           u2161 37B2  
                         u3201 244C                           u2321 4330                           u2401 41F0  
                         u2090 34B4                           u2250 2F8A                           u2170 3800  
                         u3050 3C82                           u3210 24C6                           u3130 2348  
                         u2330 434A                           u2091 34B0                           u2171 37FC  
                         u3051 3C7E                           u3211 24C2                           u3131 2344  
                         u2331 4346                           u2260 2FC4                           u2180 3818  
                         u2340 38B0                           u3060 3D7E                           u2420 3BF0  
                         u3300 25E0                           u3220 24E8                           u3140 235A  
                         u2500 1AF8                           u2261 2FC0                           u2181 3814  
                         u2341 38AC                           u3061 3D7A                           u2421 3BEC  
                         u3301 25DC                           u3221 24E4                           u3141 2356  
                         u2501 1AF4                           u2430 43C6                           u2270 33EE  
                         u2350 3C70                           u2190 3946                           u3070 3E70  
                         u3310 25F4                           u3230 2512                           u3150 236A  
                         u2510 1B34                           u2431 43C2                           u2271 33EA  
                         u2351 3C6C                           u2191 3942                           u3071 3E6C  
                         u3311 25F0                           u3231 250E                           u3151 2366  
                         u2511 1B30                           u2280 3424                           u2360 2D54  
                         u3080 32E6                           u3320 260E                           u3240 2536  
                         u3160 23AE                           u3400 1F92                           u2600 1C4E  
                         u2520 1B42                           u2440 1A5C                           u2257 2F80  
                         u2281 3420                           u2361 2D50                           u3081 32E2  
                         u3321 260A                           u3241 2532                           u3161 23AA  
                         u3401 1F8E                           u2601 1C4A                           u2521 1B3E  
                         u2441 1A58                           u2290 3440                           u2370 2D98  
                         u3090 3D00                           u3330 2656                           u3250 254C  
                         u3170 23C0                           u3410 1FA2                           u2610 1C80  
                         u2530 1BB0                           u2450 1A6E                           u2418 41FA  
                         _T2PR 000FBC                           u2291 343C                           u2371 2D94  
                         u3091 3CFC                           u4107 3318                           u3331 2652  
                         u3251 2548                           u3171 23BC                           u3411 1F9E  
                         u2611 1C7C                           u2531 1BAC                           u2451 1A6A  
                         u2380 2DCE                           u3340 2686                           u3260 256A  
                         u3180 23D0                           u3500 2246                           u3420 1FD8  
                         u2700 1DC8                           u2620 1C8E                           u2540 1BC8  
                         u2460 1A7E                           u2381 2DCA                           u4117 33B0  
                         u3341 2682                           u3261 2566                           u3181 23CC  
                         u3501 2242                           u3421 1FD4                           u2701 1DC4  
                         u2621 1C8A                           u2541 1BC2                           u2461 1A7A  
                         u2390 2DF2                           u3350 26B4                           u3270 258A  
                         u3190 2410                           u3510 2260                           u3430 1FE8  
                         u2710 1DD8                           u2630 1CAC                           u2550 1BCA  
                         u2470 1AC0                           u2391 2DEE                           u4207 3ADA  
                         u4127 3D32                           u3351 26B0                           u3271 2586  
                         u3191 240C                           u3511 225C                           u3431 1FE4  
                         u2711 1DD4                           u2631 1CA8                           u2471 1ABC  
                         u3280 259C                           u3520 22A8                           u3440 2162  
                         u3360 1F1E                           u2800 1EC0                           u2720 1DEA  
                         u2640 1CE4                           u2560 1BF2                           u2480 1AD6  
                         u3600 3144                           u4217 3920                           u4137 3BCC  
                         u3281 2598                           u3521 22A4                           u3361 1F1A  
                         u2801 1EBC                           u2721 1DE6                           u2641 1CE0  
                         u2561 1BEE                           u2481 1AD2                           u3601 3140  
                         u3290 25CA                           u3530 22D6                           u3450 21BC  
                         u3370 1F30                           u2810 1ED2                           u2730 1E00  
                         u2650 1D2A                           u2570 1C10                           u2490 1AE8  
                         u3610 3158                           u4227 3B0A                           u4147 39F8  
                         u3291 25C6                           u3531 22D2                           u3451 21B8  
                         u3371 1F2C                           u2811 1ECE                           u2731 1DFC  
                         u2651 1D26                           u2571 1C0C                           u2491 1AE4  
                         u3611 3154                           u4067 276C                           u2900 15D8  
                         u3540 2310                           u3460 21DC                           u3380 1F40  
                         u2820 1EEE                           u2740 1E16                           u2660 1D60  
                         u2580 1C30                           u3620 3180                           u3700 29C4  
                         u2901 15D4                           u4237 3B36                           u4157 3A24  
                         u3541 230C                           u3461 21D8                           u3445 2158  
                         u3381 1F3C                           u2821 1EEA                           u2741 1E12  
                         u2661 1D5C                           u2581 1C2C                           u3621 317C  
                         u3701 29C0                           u4077 27FA                           u2830 3200  
                         u2910 1632                           u3550 3654                           u3470 21EE  
                         u3390 1F80                           u2750 1E2A                           u2670 1D70  
                         u2590 1C3E                           u3630 31A0                           u3710 29D4  
                         u2831 31FC                           u2911 162E                           u4247 3B62  
                         u4167 3A50                           u3551 3650                           u3471 21EA  
                         u3391 1F7C                           u2751 1E26                           u2671 1D6C  
                         u2591 1C3A                           u3631 319C                           u3711 29D0  
                         u4087 2868                           u2840 323E                           u2920 1670  
                         u3560 3692                           u3480 221C                           u2760 1E44  
                         u2680 1D9C                           u3640 31B0                           u3720 29E2  
                         u3800 0F94                           u2841 323A                           u2921 166C  
                         u4257 37DE                           u4177 388A                           u3561 368E  
                         u3481 2218                           u2761 1E40                           u2681 1D98  
                         u3641 31AC                           u3721 29DE                           u3801 0F90  
                         u4097 4224                           u2850 325C                           u2930 16CE  
                         u3570 36C6                           u3490 2232                           u2770 1E7E  
                         u2690 1DAC                           u3730 2A1C                           u3650 289C  
                         u3810 1002                           u2851 3258                           u2931 16CA  
                         u4267 3C4C                           u4187 3A82                           u3571 36C2  
                         u3491 222E                           u2771 1E7A                           u2691 1DA8  
                         u3731 2A18                           u3651 2898                           u3811 0FFE  
                         u2860 327C                           u2940 170C                           u3900 2ACA  
                         u2780 1E90                           u3580 30E2                           u3740 2A2A  
                         u3660 28AA                           u3820 104C                           u2861 3278  
                         u2941 1708                           u4277 42A6                           u4197 3AAE  
                         u3901 2AC6                           u2781 1E8C                           u3581 30DE  
                         u3741 2A26                           u3661 28A6                           u3821 1048  
                         u3750 42D8                           u2870 32CC                           u2950 176A  
                         u3910 2B02                           u2790 1EA0                           u3590 3116  
                         u3670 2906                           u3830 10E6                           u3751 42D4  
                         u2871 32C8                           u2951 1766                           u3911 2AFE  
                         u2791 1E9C                           u3671 2902                           u3831 10E2  
                         u3760 42F2                           u2960 17A8                           u2880 417E  
                         u3920 2B3A                           u3680 295C                           u3840 112C  
                         u3761 42EE                           u2961 17A4                           u2881 417A  
                         u3921 2B36                           u3681 2958                           u3841 1128  
                         u2970 1806                           u2890 159A                           u3930 2B72  
                         u3690 29A6                           u3850 1260                           u3770 0E98  
                         u2971 1802                           u2891 1596                           u3931 2B6E  
                         u3595 310C                           u3691 29A2                           u3851 125C  
                         u3771 0E94                           u2980 1844                           u3940 2BAA  
                         u3860 12AA                           u3780 0EDE                           u2981 1840  
                         u3941 2BA6                           u3861 12A6                           u3781 0EDA  
                         u2990 18A2                           u3870 1506                           u3790 0F4E  
                         u3950 2742                           u2991 189E                           u3871 1502  
                         u3791 0F4A                           u3951 273E                           u3880 2A5C  
                         u3960 27D0                           u3881 2A58                           u3961 27CC  
                         u3890 2A92                           u3970 281A                           u3891 2A8E  
                         u3971 2816            reverseHalfSquare@mL 001B            reverseHalfSquare@mR 001D  
                         _dbuf 0150                           _main 26C8                           _prec 00DC  
                         fsr0h 000FEA                           fsr1h 000FE2                           indf0 000FEF  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           _stoa 2E8A  
                         _stop 3776                     _ClickLEDOn 42C6                           prodh 000FF4  
                         prodl 000FF3                           start 0000                ___fldiv@new_exp 0043  
      __end_of_Yellow_rev1_R90 33C4         __end_of_color_read_Red 3FAC                   ___param_bank 000000  
              __end_of_Red_R90 3CF0                     _Hue2Colour 1554                __end_of_Right45 3A62  
             __end_of_LED_init 43EA                  ___fltol@sign1 0009                __end_of___fladd 1F02  
                        ?_main 0001                __end_of___fldiv 26C8                          STR_10 0E01  
                        STR_11 0E48                          STR_13 0E48                __end_of___flmul 232E  
              __end_of___flsub 41CE                __end_of___fltol 31D2                          ?_stoa 000A  
               _LightBlue_L135 36D0                          ?_stop 0014                __end_of___lwdiv 3E60  
                 vfpfcnvrt@fmt 0022                          _TMR0H 000FD4                          _TMR0L 000FD3  
      __end_of_sendCharSerial4 43CC     __end_of_I2C_2_Master_Start 4414     __end_of_I2C_2_Master_Write 43F6  
                        _flags 00DE                          _fputc 34A2              fullSpeedReverse@i 0019  
                        _width 00DA                          _putch 441E                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          stoa@i 0018  
                        stoa@l 001C                          stoa@p 001E                          stoa@s 000C  
                        stoa@w 0016                          status 000FD8                __end_of_sprintf 413A  
              __end_of_strncmp 34A2           __end_of_Color2String 428E        __end_of_color_read_Blue 409C  
        _I2C_2_Master_RepStart 43F6                ?_color_read_Red 0005                __initialization 3EB6  
                 __end_of_main 288A                   __end_of_stoa 2FC6                   __end_of_stop 381C  
              ??_rotate180left 0024         __end_of_LightBlue_L135 3776                         ??_main 005D  
                       ??_stoa 000E                         ??_stop 0018                  __activetblptr 000002  
                    ??_RGB2Hue 0059                  ??_Orange_R135 0025                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                _colour_read_all 2FC6  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
     __end_of_color_click_init 4250                         _RX4PPS 000E15                         _TX4REG 000EE4  
                  ?_ClickLEDOn 0001               __end_of___xxtofl 2A3E                      ??_Red_R90 0025  
                       _Left45 3A62                      ??_Right45 001E               _fullSpeedReverse 3BF2  
             ?_Yellow_rev1_R90 0021                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0030  
                       ___flge 31D2                         ___fleq 3626                      ??___fladd 0022  
                  ?_Hue2Colour 000D                         ___wmul 434C                      ??___fldiv 003A  
                Orange_R135@mL 0021                      ??___flmul 0053                  Orange_R135@mR 0023  
                    ??___flsub 0032                      ??___fltol 0005                      ??___lwdiv 000B  
                   _TimerReset 4414                         _colorf 0170                ?_LightBlue_L135 0021  
                       clear_0 3EEE                         clear_1 3EFA             fullSpeedReverse@mL 0014  
           fullSpeedReverse@mR 0016                         _motorL 00E8                         _motorR 00DF  
                       isa$std 000001                         _strlen 409C                         fputc@c 0001  
                 __pdataCOMRAM 005F                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       stoa@cp 001A                         stoa@fp 000A                         putch@c 0001  
             __end_of_vfprintf 4188                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0038                      ??_strncmp 0007  
             __end_of_turnLeft 3948                     ___flge@ff1 0001                     ___flge@ff2 0005  
                 ___xxtofl@arg 0016                   ___xxtofl@exp 0015                   ___xxtofl@val 000C  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005            __end_of_Orange_R135 3626  
                   __accesstop 0060        __end_of__initialization 3F00       __end_of_color_read_Clear 404C  
              fullSpeedAhead@i 0019              __end_of_Blue_T180 3EB6       __end_of_color_read_Green 3FFC  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 43CC                  __end_of_fputc 356C              __end_of_Green_L90 3DEC  
                __end_of_putch 4420                      RGB2Hue@cf 0057                    _ForwardFlag 005F  
      __end_of_colour_read_all 30CC                        ??_fputc 0005                        ??_putch 0001  
                   __pbssBANK0 00DA                     __pbssBANK1 0100                     ??_LED_init 0001  
                      ?_Left45 001A              _color_writetoaddr 4394                   _T2CLKCONbits 000FBF  
        __end_of_Colour2Action 2BC4                        ?___flge 0001                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001                    ?_TimerReset 0001  
          ??_color_writetoaddr 0004                        ?_strlen 0001                   _Color2String 4250  
                      _RGB2Hue 0E52                      ?___xxtofl 000C                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                    _Orange_R135 356C                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 43B4                        _Red_R90 3C72             _I2C_2_Master_Start 440A  
                   _initUSART4 4372             _I2C_2_Master_Write 43EA                        _Right45 39D8  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___fladd 1A42                        ___fldiv 232E  
                      ___flmul 1F02                        ___flsub 4188                        ___fltol 30CC  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 3DEC            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 002A                   __psmallconst 0E00                        __pcinit 3EB6  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 26C8  
                      __ptext1 4372                        __ptext2 3948                        __ptext3 2FC6  
                      __ptext4 3F5C                        __ptext5 3FAC                        __ptext6 3FFC  
                      __ptext7 404C                        __ptext8 43F6                        __ptext9 41CE  
                    _T2CONbits 000FBD               ?_colour_read_all 001A                     ??___xxtofl 0010  
               Color2String@cf 0047       __end_of_fullSpeedReverse 3C72                      _T2HLTbits 000FBE  
                      _sprintf 40EC           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
                      _strncmp 33C4           end_of_initialization 3F00                        fputc@fp 0003  
                _Pink_rev1_L90 3CF0                  __Lmediumconst 0000                   ??_ClickLEDOn 0001  
            ?_color_click_init 0001                 __45drightdelay 00FC             ??_color_click_init 0005  
             ??_LightBlue_L135 0025              __end_of_vfpfcnvrt 2E8A              _reverseHalfSquare 3AEC  
                      postdec1 000FE5                        postdec2 000FDD                   ??_Hue2Colour 000F  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0030             ?_reverseHalfSquare 001B                        strlen@a 0003  
                      strlen@s 0001          __end_of_rotate180left 3F5C                _initDCmotorsPWM 3948  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 38B2                    ___fladd@grs 0029            ??_reverseHalfSquare 001F  
           __end_of_ClickLEDOn 42FA                  ___xxtofl@sign 0014                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
                    Red_R90@mL 0021                      Red_R90@mR 0023        ??_I2C_2_Master_RepStart 0002  
               _movementMemory 0128             __end_of_Hue2Colour 1A42                 ?_Pink_rev1_L90 0021  
                  ___flmul@grs 0061                    _CCP1CONbits 000FAB              ?_color_read_Clear 0005  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
              Colour2Action@cf 0028      __end_of_reverseHalfSquare 3B72             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                      _Blue_T180 3E60                 __end_of_Left45 3AEC  
                 _RGB2Hue$2959 006D                 __end_of___flge 32D6                 __end_of___fleq 36D0  
               _fullSpeedAhead 3B72                    vfpfcnvrt@ap 0024                    vfpfcnvrt@fp 0020  
               __end_of___wmul 4372                  __pidataCOMRAM 4420                      _Green_L90 3D6E  
                    Right45@mL 001A                      Right45@mR 001C                 __end_of_strlen 40EC  
                   RGB2Hue@max 0071                     RGB2Hue@min 0073            color_read_Clear@tmp 000A  
          start_initialization 3EB6                    __halfsquare 00F8                       ??_Left45 001E  
          color_read_Green@tmp 000A                     ?_Blue_T180 0024        __end_of_initDCmotorsPWM 39D8  
                  vfprintf@fmt 002C         __end_of_fullSpeedAhead 3BF2                       ??___flge 0009  
                     ??___fleq 0009                       ??___wmul 0005                   ??_TimerReset 0001  
                  __pdataBANK0 00F1                       ??_strlen 0003                      ___fladd@a 001E  
                    ___fladd@b 001A                ClickLEDOn@power 0001                     ?_Green_L90 0021  
                    ___fldiv@a 0036                      ___fldiv@b 0032                       ?_RGB2Hue 0057  
                    ___flmul@a 004F                      ___flmul@b 004B                      ___flsub@a 002E  
                    ___flsub@b 002A                  __pcstackBANK0 0060                   ?_Orange_R135 0021  
              ??_Pink_rev1_L90 0025             __end_of_TimerReset 441E                       ?_Red_R90 0021  
       Color2String@colourname 0049                       ?_Right45 001A               ___lwdiv@dividend 0007  
              ?_fullSpeedAhead 0014                       ?___fladd 001A                       ?___fldiv 0032  
                     ?___flmul 004B                       ?___flsub 002A                       ?___fltol 0001  
                     ?___lwdiv 0007           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
              Pink_rev1_L90@mL 0021                Pink_rev1_L90@mR 0023                    __smallconst 0E00  
            _I2C_2_Master_Idle 4324              _I2C_2_Master_Init 42FA              _I2C_2_Master_Read 41CE  
                __45dleftdelay 00FE              _I2C_2_Master_Stop 4400              ?_fullSpeedReverse 0014  
            ??_Yellow_rev1_R90 0025             ?_I2C_2_Master_Idle 0001                rotate180left@mL 0020  
              rotate180left@mR 0022             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0032             ??_fullSpeedReverse 0018  
                     ?_strncmp 0001           Hue2Colour@colourname 000F              colour_read_all@cf 001A  
                 Hue2Colour@cf 000D              _sendStringSerial4 428E            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _LED_init 43DC  
           ?_sendStringSerial4 0002                    turnRight@mL 0014                    turnRight@mR 0016  
                  ??_Blue_T180 0028                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
                     Left45@mL 001A                       Left45@mR 001C              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 2D30      __end_of_I2C_2_Master_Idle 434C      __end_of_I2C_2_Master_Init 4324  
    __end_of_I2C_2_Master_Read 4210              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 440A  
                  ??_Green_L90 0025                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                      _turnRight 381C                       __1square 00FA  
                    copy_data0 3ECA      __end_of_sendStringSerial4 42C6  __end_of_I2C_2_Master_RepStart 4400  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 2D30                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 002E                       __Lrparam 0000  
                   vfprintf@fp 002A                  _Colour2Action 2A3E                     ?_vfpfcnvrt 0020  
                   _ANSELDbits 000EA7                     _ANSELFbits 000EB4                     sprintf@fmt 0034  
                  Blue_T180@mL 0024                    Blue_T180@mR 0026                       ___xxtofl 288A  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4394                ___lwdiv@counter 000D                     ?_turnRight 0014  
                     __ptext10 4210                       __ptext11 4394                       __ptext20 4188  
                     __ptext12 43EA                       __ptext21 1A42                       __ptext13 4400  
                     __ptext30 3B72                       __ptext22 1F02                       __ptext14 440A  
                     __ptext31 356C                       __ptext23 3626                       __ptext15 4324  
                     __ptext40 3AEC                       __ptext32 36D0                       __ptext24 232E  
                     __ptext16 42FA                       __ptext41 3776                       __ptext33 3D6E  
                     __ptext25 43DC                       __ptext17 0E52                       __ptext50 2D30  
                     __ptext42 3BF2                       __ptext34 39D8                       __ptext26 2A3E  
                     __ptext18 288A                       __ptext51 33C4                       __ptext43 2BC4  
                     __ptext35 381C                       __ptext27 32D6                       __ptext19 30CC  
                     __ptext60 42C6                       __ptext52 2E8A                       __ptext44 434C  
                     __ptext36 3E60                       __ptext28 3C72                       __ptext53 409C  
                     __ptext45 3DEC                       __ptext37 3F0A                       __ptext29 3CF0  
                     __ptext54 34A2                       __ptext46 4414                       __ptext38 3A62  
                     __ptext55 441E                       __ptext47 4250                       __ptext39 38B2  
                     __ptext56 428E                       __ptext48 40EC                       __ptext57 43B4  
                     __ptext49 413A                       __ptext58 1554                       __ptext59 31D2  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016                Color2String@buf 0045               colour_read_all@B 0024  
             colour_read_all@C 0028               colour_read_all@G 0020               colour_read_all@R 001C  
                   turnRight@i 0018               LightBlue_L135@mL 0021               LightBlue_L135@mR 0023  
                    stoa@F1144 00F1                 ?_Colour2Action 0028                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 413A                       main@data 0075  
            Yellow_rev1_R90@mL 0021              Yellow_rev1_R90@mR 0023                       main@wall 00D9  
                     _turnLeft 38B2                  ?_Color2String 0045                 _vfpfcnvrt$2673 0028  
                  _setMotorPWM 2BC4                      sprintf@ap 0038               ??_fullSpeedAhead 0018  
                    turnLeft@i 0018                      strncmp@_l 0001                      strncmp@_r 0003  
            ??_colour_read_all 001C                _Yellow_rev1_R90 32D6                    ??_vfpfcnvrt 0026  
                     stoa@nuls 000F               _color_click_init 4210                  _rotate180left 3F0A  
               ??_Color2String 0049                       sprintf@f 003A                       sprintf@s 0032  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                    _timerMemory 0100  
                     strncmp@l 0008                       strncmp@n 0005                       strncmp@r 000A  
                  ??_turnRight 0018                  ___fladd@signs 0026                     _TX4STAbits 000EE8  
        __end_of_Pink_rev1_L90 3D6E                _sendCharSerial4 43B4                   ___fladd@aexp 0027  
                 ___fladd@bexp 0028                ??_Colour2Action 002A  
