

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 19:43:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   0045A4                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for __recogniseColour
   116   0045A4  012C               	dw	300
   117                           
   118                           ;initializer for __halfsquare
   119   0045A6  0190               	dw	400
   120                           
   121                           ;initializer for __1square
   122   0045A8  0320               	dw	800
   123                           
   124                           ;initializer for __45drightdelay
   125   0045AA  0093               	dw	147
   126                           
   127                           ;initializer for __45dleftdelay
   128   0045AC  0092               	dw	146
   129                           
   130                           ;initializer for _ForwardFlag
   131   0045AE  01                 	db	1
   132   000000                     _LATEbits	set	3965
   133   000000                     _TRISEbits	set	3973
   134   000000                     _LATHbits	set	3968
   135   000000                     _TX4REG	set	3812
   136   000000                     _RC4STAbits	set	3815
   137   000000                     _SP4BRGH	set	3814
   138   000000                     _TRISAbits	set	3969
   139   000000                     _TRISGbits	set	3975
   140   000000                     _SSP2CON2bits	set	3802
   141   000000                     _RX4PPS	set	3605
   142   000000                     _SSP2CLKPPS	set	3612
   143   000000                     _SSP2DATPPS	set	3613
   144   000000                     _ANSELDbits	set	3751
   145   000000                     _SSP2ADD	set	3798
   146   000000                     _SSP2CON1bits	set	3801
   147   000000                     _LATAbits	set	3961
   148   000000                     _LATGbits	set	3967
   149   000000                     _TRISHbits	set	3976
   150   000000                     _PORTFbits	set	3982
   151   000000                     _CCPR2H	set	4006
   152   000000                     _CCPR1H	set	4010
   153   000000                     _LATCbits	set	3963
   154   000000                     _LATDbits	set	3964
   155   000000                     _LATFbits	set	3966
   156   000000                     _TRISCbits	set	3971
   157   000000                     _TRISDbits	set	3972
   158   000000                     _TRISFbits	set	3974
   159   000000                     _RC4REG	set	3811
   160   000000                     _SP4BRGL	set	3813
   161   000000                     _TX4STAbits	set	3816
   162   000000                     _BAUD4CONbits	set	3817
   163   000000                     _SSP2CON2	set	3802
   164   000000                     _CCPR4H	set	3873
   165   000000                     _CCPR3H	set	3877
   166   000000                     _SSP2STAT	set	3800
   167   000000                     _ANSELFbits	set	3764
   168   000000                     _SSP2BUF	set	3797
   169   000000                     _PIE0bits	set	3625
   170   000000                     _PIR4bits	set	3639
   171   000000                     _RC0PPS	set	3682
   172   000000                     _RD5PPS	set	3695
   173   000000                     _RE2PPS	set	3700
   174   000000                     _RD6PPS	set	3696
   175   000000                     _CCP1CONbits	set	4011
   176   000000                     _CCPTMRS0bits	set	4013
   177   000000                     _T2PR	set	4028
   178   000000                     _T2CONbits	set	4029
   179   000000                     _CCP2CONbits	set	4007
   180   000000                     _CCP3CONbits	set	3878
   181   000000                     _CCP4CONbits	set	3874
   182   000000                     _RC7PPS	set	3689
   183   000000                     _RE4PPS	set	3702
   184   000000                     _RG6PPS	set	3720
   185   000000                     _TMR0L	set	4051
   186   000000                     _TMR0H	set	4052
   187   000000                     _T0CON0bits	set	4053
   188   000000                     _T0CON1bits	set	4054
   189   000000                     _T2CLKCONbits	set	4031
   190   000000                     _T2HLTbits	set	4030
   191   000000                     _INTCONbits	set	4082
   192   000000                     _PIE4bits	set	3629
   193   000000                     _PIR0bits	set	3635
   194                           
   195                           	psect	smallconst
   196   000E00                     __psmallconst:
   197                           	callstack 0
   198   000E00  00                 	db	0
   199   000E01                     STR_10:
   200                           
   201                           ; BSR set to: 14
   202   000E01  20                 	db	32
   203   000E02  52                 	db	82	;'R'
   204   000E03  65                 	db	101	;'e'
   205   000E04  64                 	db	100	;'d'
   206   000E05  20                 	db	32
   207   000E06  25                 	db	37
   208   000E07  66                 	db	102	;'f'
   209   000E08  20                 	db	32
   210   000E09  47                 	db	71	;'G'
   211   000E0A  72                 	db	114	;'r'
   212   000E0B  65                 	db	101	;'e'
   213   000E0C  65                 	db	101	;'e'
   214   000E0D  6E                 	db	110	;'n'
   215   000E0E  2C                 	db	44
   216   000E0F  25                 	db	37
   217   000E10  66                 	db	102	;'f'
   218   000E11  20                 	db	32
   219   000E12  42                 	db	66	;'B'
   220   000E13  6C                 	db	108	;'l'
   221   000E14  75                 	db	117	;'u'
   222   000E15  65                 	db	101	;'e'
   223   000E16  2C                 	db	44
   224   000E17  25                 	db	37
   225   000E18  66                 	db	102	;'f'
   226   000E19  20                 	db	32
   227   000E1A  63                 	db	99	;'c'
   228   000E1B  6C                 	db	108	;'l'
   229   000E1C  65                 	db	101	;'e'
   230   000E1D  61                 	db	97	;'a'
   231   000E1E  72                 	db	114	;'r'
   232   000E1F  20                 	db	32
   233   000E20  25                 	db	37
   234   000E21  66                 	db	102	;'f'
   235   000E22  20                 	db	32
   236   000E23  48                 	db	72	;'H'
   237   000E24  75                 	db	117	;'u'
   238   000E25  65                 	db	101	;'e'
   239   000E26  20                 	db	32
   240   000E27  25                 	db	37
   241   000E28  66                 	db	102	;'f'
   242   000E29  20                 	db	32
   243   000E2A  0D                 	db	13
   244   000E2B  00                 	db	0
   245   000E2C                     STR_6:
   246                           
   247                           ; BSR set to: 14
   248   000E2C  4C                 	db	76	;'L'
   249   000E2D  69                 	db	105	;'i'
   250   000E2E  67                 	db	103	;'g'
   251   000E2F  68                 	db	104	;'h'
   252   000E30  74                 	db	116	;'t'
   253   000E31  20                 	db	32
   254   000E32  42                 	db	66	;'B'
   255   000E33  6C                 	db	108	;'l'
   256   000E34  75                 	db	117	;'u'
   257   000E35  65                 	db	101	;'e'
   258   000E36  00                 	db	0
   259   000E37                     STR_4:
   260                           
   261                           ; BSR set to: 14
   262   000E37  44                 	db	68	;'D'
   263   000E38  61                 	db	97	;'a'
   264   000E39  72                 	db	114	;'r'
   265   000E3A  6B                 	db	107	;'k'
   266   000E3B  20                 	db	32
   267   000E3C  42                 	db	66	;'B'
   268   000E3D  6C                 	db	108	;'l'
   269   000E3E  75                 	db	117	;'u'
   270   000E3F  65                 	db	101	;'e'
   271   000E40  00                 	db	0
   272   000E41                     STR_5:
   273                           
   274                           ; BSR set to: 14
   275   000E41  4F                 	db	79	;'O'
   276   000E42  72                 	db	114	;'r'
   277   000E43  61                 	db	97	;'a'
   278   000E44  6E                 	db	110	;'n'
   279   000E45  67                 	db	103	;'g'
   280   000E46  65                 	db	101	;'e'
   281   000E47  00                 	db	0
   282   000E48                     STR_8:
   283                           
   284                           ; BSR set to: 14
   285   000E48  59                 	db	89	;'Y'
   286   000E49  65                 	db	101	;'e'
   287   000E4A  6C                 	db	108	;'l'
   288   000E4B  6C                 	db	108	;'l'
   289   000E4C  6F                 	db	111	;'o'
   290   000E4D  77                 	db	119	;'w'
   291   000E4E  00                 	db	0
   292   000E4F                     STR_9:
   293                           
   294                           ; BSR set to: 14
   295   000E4F  57                 	db	87	;'W'
   296   000E50  68                 	db	104	;'h'
   297   000E51  69                 	db	105	;'i'
   298   000E52  74                 	db	116	;'t'
   299   000E53  65                 	db	101	;'e'
   300   000E54  00                 	db	0
   301   000E55                     STR_7:
   302                           
   303                           ; BSR set to: 14
   304   000E55  47                 	db	71	;'G'
   305   000E56  72                 	db	114	;'r'
   306   000E57  65                 	db	101	;'e'
   307   000E58  65                 	db	101	;'e'
   308   000E59  6E                 	db	110	;'n'
   309   000E5A  00                 	db	0
   310   000E5B                     STR_3:
   311                           
   312                           ; BSR set to: 14
   313   000E5B  50                 	db	80	;'P'
   314   000E5C  69                 	db	105	;'i'
   315   000E5D  6E                 	db	110	;'n'
   316   000E5E  6B                 	db	107	;'k'
   317   000E5F  00                 	db	0
   318   000E60                     STR_2:
   319                           
   320                           ; BSR set to: 14
   321   000E60  52                 	db	82	;'R'
   322   000E61  65                 	db	101	;'e'
   323   000E62  64                 	db	100	;'d'
   324   000E63  00                 	db	0
   325   000E64  00                 	db	0	; dummy byte at the end
   326   000000                     
   327                           ; #config settings
   328                           
   329                           	psect	cinit
   330   00432A                     __pcinit:
   331                           	callstack 0
   332   00432A                     start_initialization:
   333                           	callstack 0
   334   00432A                     __initialization:
   335                           	callstack 0
   336                           
   337                           ; Initialize objects allocated to BANK0 (11 bytes)
   338                           ; load TBLPTR registers with __pidataBANK0
   339   00432A  0EA4               	movlw	low __pidataBANK0
   340   00432C  6EF6               	movwf	tblptrl,c
   341   00432E  0E45               	movlw	high __pidataBANK0
   342   004330  6EF7               	movwf	tblptrh,c
   343   004332  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   344   004334  6EF8               	movwf	tblptru,c
   345   004336  EE00  F0EE         	lfsr	0,__pdataBANK0
   346   00433A  EE10 F00B          	lfsr	1,11
   347   00433E                     copy_data0:
   348   00433E  0009               	tblrd		*+
   349   004340  CFF5 FFEE          	movff	tablat,postinc0
   350   004344  50E5               	movf	postdec1,w,c
   351   004346  50E1               	movf	fsr1l,w,c
   352   004348  E1FA               	bnz	copy_data0
   353                           
   354                           ; Clear objects allocated to BANK1 (80 bytes)
   355   00434A  EE01  F000         	lfsr	0,__pbssBANK1
   356   00434E  0E50               	movlw	80
   357   004350                     clear_0:
   358   004350  6AEE               	clrf	postinc0,c
   359   004352  06E8               	decf	wreg,f,c
   360   004354  E1FD               	bnz	clear_0
   361                           
   362                           ; Clear objects allocated to BANK0 (98 bytes)
   363   004356  EE00  F060         	lfsr	0,__pbssBANK0
   364   00435A  0E62               	movlw	98
   365   00435C                     clear_1:
   366   00435C  6AEE               	clrf	postinc0,c
   367   00435E  06E8               	decf	wreg,f,c
   368   004360  E1FD               	bnz	clear_1
   369   004362                     end_of_initialization:
   370                           	callstack 0
   371   004362                     __end_of__initialization:
   372                           	callstack 0
   373   004362  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   374   004364  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   375   004366  0E00               	movlw	low (__Lsmallconst shr (0+16))
   376   004368  6EF8               	movwf	tblptru,c
   377   00436A  0E0E               	movlw	high __Lsmallconst
   378   00436C  6EF7               	movwf	tblptrh,c
   379   00436E  0100               	movlb	0
   380   004370  EFDA  F016         	goto	_main	;jump to C main() function
   381                           
   382                           	psect	bssBANK0
   383   000060                     __pbssBANK0:
   384                           	callstack 0
   385   000060                     _retracingDone:
   386                           	callstack 0
   387   000060                     	ds	2
   388   000062                     _movementCount:
   389                           	callstack 0
   390   000062                     	ds	2
   391   000064                     _maxTime:
   392                           	callstack 0
   393   000064                     	ds	2
   394   000066                     _movementMemory:
   395                           	callstack 0
   396   000066                     	ds	40
   397   00008E                     _colorf:
   398                           	callstack 0
   399   00008E                     	ds	22
   400   0000A4                     _colorrel:
   401                           	callstack 0
   402   0000A4                     	ds	12
   403   0000B0                     _motorR:
   404                           	callstack 0
   405   0000B0                     	ds	9
   406   0000B9                     _motorL:
   407                           	callstack 0
   408   0000B9                     	ds	9
   409                           
   410                           	psect	dataBANK0
   411   0000EE                     __pdataBANK0:
   412                           	callstack 0
   413   0000EE                     __recogniseColour:
   414                           	callstack 0
   415   0000EE                     	ds	2
   416   0000F0                     __halfsquare:
   417                           	callstack 0
   418   0000F0                     	ds	2
   419   0000F2                     __1square:
   420                           	callstack 0
   421   0000F2                     	ds	2
   422   0000F4                     __45drightdelay:
   423                           	callstack 0
   424   0000F4                     	ds	2
   425   0000F6                     __45dleftdelay:
   426                           	callstack 0
   427   0000F6                     	ds	2
   428   0000F8                     _ForwardFlag:
   429                           	callstack 0
   430   0000F8                     	ds	1
   431                           
   432                           	psect	bssBANK1
   433   000100                     __pbssBANK1:
   434                           	callstack 0
   435   000100                     _timerMemory:
   436                           	callstack 0
   437   000100                     	ds	80
   438                           
   439                           	psect	cstackBANK0
   440   0000C2                     __pcstackBANK0:
   441                           	callstack 0
   442   0000C2                     White@mL:
   443                           	callstack 0
   444   0000C2                     ___fldiv@rem:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x0
   448   0000C2                     	ds	2
   449   0000C4                     White@mR:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453   0000C4                     	ds	2
   454   0000C6                     ___fldiv@sign:
   455                           	callstack 0
   456   0000C6                     White@movementCount:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460   0000C6                     	ds	1
   461   0000C7                     ___fldiv@new_exp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x5
   465   0000C7                     	ds	1
   466   0000C8                     White@movementMemory:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x6
   470   0000C8                     	ds	1
   471   0000C9                     ___fldiv@grs:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x7
   475   0000C9                     	ds	1
   476   0000CA                     White@timerMemory:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x8
   480   0000CA                     	ds	2
   481   0000CC                     White@tempTimer:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0xA
   485   0000CC                     	ds	1
   486   0000CD                     ___fldiv@bexp:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0xB
   490   0000CD                     	ds	1
   491   0000CE                     ___fldiv@aexp:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xC
   495   0000CE                     	ds	1
   496   0000CF                     colour_read_all@cf:
   497                           	callstack 0
   498   0000CF                     RGB2Hue@cf:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xD
   502   0000CF                     	ds	1
   503   0000D0                     White@i:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0xE
   507   0000D0                     	ds	1
   508   0000D1                     ??_RGB2Hue:
   509   0000D1                     colour_read_all@rel:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xF
   513   0000D1                     	ds	2
   514   0000D3                     colour_read_all@C:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x11
   518   0000D3                     	ds	2
   519   0000D5                     _RGB2Hue$3094:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x13
   523   0000D5                     	ds	2
   524   0000D7                     _colour_read_all$3093:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x15
   528   0000D7                     	ds	2
   529   0000D9                     RGB2Hue@max:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x17
   533   0000D9                     	ds	2
   534   0000DB                     RGB2Hue@min:
   535                           	callstack 0
   536   0000DB                     colour_read_all@R:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x19
   540   0000DB                     	ds	4
   541   0000DF                     colour_read_all@G:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x1D
   545   0000DF                     	ds	4
   546   0000E3                     colour_read_all@B:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x21
   550   0000E3                     	ds	4
   551   0000E7                     colour_read_all@total:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x25
   555   0000E7                     	ds	4
   556   0000EB                     ??_main:
   557                           
   558                           ; 1 bytes @ 0x29
   559   0000EB                     	ds	2
   560   0000ED                     main@wall:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x2B
   564   0000ED                     	ds	1
   565                           
   566                           	psect	cstackCOMRAM
   567   000001                     __pcstackCOMRAM:
   568                           	callstack 0
   569   000001                     ??_I2C_2_Master_Idle:
   570   000001                     ?___wmul:
   571                           	callstack 0
   572   000001                     ?___fltol:
   573                           	callstack 0
   574   000001                     ClickLEDOn@power:
   575                           	callstack 0
   576   000001                     initDCmotorsPWM@PWMperiod:
   577                           	callstack 0
   578   000001                     memoryUpdateMovement@cf:
   579                           	callstack 0
   580   000001                     ___wmul@multiplier:
   581                           	callstack 0
   582   000001                     ___fleq@ff1:
   583                           	callstack 0
   584   000001                     ___fltol@f1:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x0
   588   000001                     	ds	1
   589   000002                     ??_I2C_2_Master_Read:
   590   000002                     I2C_2_Master_Write@data_byte:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x1
   594   000002                     	ds	1
   595   000003                     color_writetoaddr@value:
   596                           	callstack 0
   597   000003                     I2C_2_Master_Read@ack:
   598                           	callstack 0
   599   000003                     memoryUpdateMovement@movementCount:
   600                           	callstack 0
   601   000003                     ___wmul@multiplicand:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x2
   605   000003                     	ds	1
   606   000004                     color_writetoaddr@address:
   607                           	callstack 0
   608   000004                     I2C_2_Master_Read@tmp:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x3
   612   000004                     	ds	1
   613   000005                     ??_color_click_init:
   614   000005                     ??___fltol:
   615   000005                     ?_color_read_Red:
   616                           	callstack 0
   617   000005                     ?_color_read_Green:
   618                           	callstack 0
   619   000005                     ?_color_read_Blue:
   620                           	callstack 0
   621   000005                     ?_color_read_Clear:
   622                           	callstack 0
   623   000005                     memoryUpdateMovement@movementMemory:
   624                           	callstack 0
   625   000005                     ___wmul@product:
   626                           	callstack 0
   627   000005                     ___fleq@ff2:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x4
   631   000005                     	ds	2
   632   000007                     ??_color_read_Red:
   633   000007                     ??_color_read_Green:
   634   000007                     ??_color_read_Blue:
   635   000007                     ??_color_read_Clear:
   636   000007                     ?___lwdiv:
   637                           	callstack 0
   638   000007                     memoryUpdateMovement@colourcode:
   639                           	callstack 0
   640   000007                     ___lwdiv@dividend:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x6
   644   000007                     	ds	2
   645   000009                     ??___fleq:
   646   000009                     ___fltol@sign1:
   647                           	callstack 0
   648   000009                     ___lwdiv@divisor:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x8
   652   000009                     	ds	1
   653   00000A                     ___fltol@exp1:
   654                           	callstack 0
   655   00000A                     color_read_Red@tmp:
   656                           	callstack 0
   657   00000A                     color_read_Green@tmp:
   658                           	callstack 0
   659   00000A                     color_read_Blue@tmp:
   660                           	callstack 0
   661   00000A                     color_read_Clear@tmp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x9
   665   00000A                     	ds	1
   666   00000B                     ___lwdiv@quotient:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xA
   670   00000B                     	ds	1
   671   00000C                     ?___xxtofl:
   672                           	callstack 0
   673   00000C                     ___xxtofl@val:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0xB
   677   00000C                     	ds	1
   678   00000D                     ___lwdiv@counter:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xC
   682   00000D                     	ds	1
   683   00000E                     setMotorPWM@m:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0xD
   687   00000E                     	ds	2
   688   000010                     ??_setMotorPWM:
   689   000010                     ??___xxtofl:
   690                           
   691                           ; 1 bytes @ 0xF
   692   000010                     	ds	2
   693   000012                     setMotorPWM@posDuty:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x11
   697   000012                     	ds	1
   698   000013                     setMotorPWM@negDuty:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x12
   702   000013                     	ds	1
   703   000014                     ___xxtofl@sign:
   704                           	callstack 0
   705   000014                     stop@mL:
   706                           	callstack 0
   707   000014                     turnLeft@mL:
   708                           	callstack 0
   709   000014                     turnRight@mL:
   710                           	callstack 0
   711   000014                     fullSpeedAhead@mL:
   712                           	callstack 0
   713   000014                     fullSpeedReverse@mL:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x13
   717   000014                     	ds	1
   718   000015                     ___xxtofl@exp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x14
   722   000015                     	ds	1
   723   000016                     stop@mR:
   724                           	callstack 0
   725   000016                     turnLeft@mR:
   726                           	callstack 0
   727   000016                     turnRight@mR:
   728                           	callstack 0
   729   000016                     fullSpeedAhead@mR:
   730                           	callstack 0
   731   000016                     fullSpeedReverse@mR:
   732                           	callstack 0
   733   000016                     ___xxtofl@arg:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x15
   737   000016                     	ds	2
   738   000018                     ??_fullSpeedAhead:
   739   000018                     ??_stop:
   740   000018                     ??_fullSpeedReverse:
   741   000018                     turnLeft@i:
   742                           	callstack 0
   743   000018                     turnRight@i:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x17
   747   000018                     	ds	1
   748   000019                     fullSpeedAhead@i:
   749                           	callstack 0
   750   000019                     fullSpeedReverse@i:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x18
   754   000019                     	ds	1
   755   00001A                     ?___flmul:
   756                           	callstack 0
   757   00001A                     Left45@mL:
   758                           	callstack 0
   759   00001A                     Right45@mL:
   760                           	callstack 0
   761   00001A                     ___flmul@b:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x19
   765   00001A                     	ds	1
   766   00001B                     reverseHalfSquare@mL:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x1A
   770   00001B                     	ds	1
   771   00001C                     Left45@mR:
   772                           	callstack 0
   773   00001C                     Right45@mR:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x1B
   777   00001C                     	ds	1
   778   00001D                     reverseHalfSquare@mR:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x1C
   782   00001D                     	ds	1
   783   00001E                     ??_Left45:
   784   00001E                     ??_Right45:
   785   00001E                     ___flmul@a:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x1D
   789   00001E                     	ds	1
   790   00001F                     ??_reverseHalfSquare:
   791                           
   792                           ; 1 bytes @ 0x1E
   793   00001F                     	ds	1
   794   000020                     rotate180left@mL:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x1F
   798   000020                     	ds	1
   799   000021                     Red_R90@mL:
   800                           	callstack 0
   801   000021                     Green_L90@mL:
   802                           	callstack 0
   803   000021                     Yellow_rev1_R90@mL:
   804                           	callstack 0
   805   000021                     Pink_rev1_L90@mL:
   806                           	callstack 0
   807   000021                     Orange_R135@mL:
   808                           	callstack 0
   809   000021                     LightBlue_L135@mL:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x20
   813   000021                     	ds	1
   814   000022                     ??___flmul:
   815   000022                     rotate180left@mR:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x21
   819   000022                     	ds	1
   820   000023                     Red_R90@mR:
   821                           	callstack 0
   822   000023                     Green_L90@mR:
   823                           	callstack 0
   824   000023                     Yellow_rev1_R90@mR:
   825                           	callstack 0
   826   000023                     Pink_rev1_L90@mR:
   827                           	callstack 0
   828   000023                     Orange_R135@mR:
   829                           	callstack 0
   830   000023                     LightBlue_L135@mR:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x22
   834   000023                     	ds	1
   835   000024                     Blue_T180@mL:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x23
   839   000024                     	ds	1
   840   000025                     ??_Yellow_rev1_R90:
   841   000025                     ??_Pink_rev1_L90:
   842   000025                     
   843                           ; 1 bytes @ 0x24
   844   000025                     	ds	1
   845   000026                     ___flmul@sign:
   846                           	callstack 0
   847   000026                     Blue_T180@mR:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x25
   851   000026                     	ds	1
   852   000027                     ___flmul@grs:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x26
   856   000027                     	ds	1
   857   000028                     
   858                           ; 1 bytes @ 0x27
   859   000028                     	ds	3
   860   00002B                     ___flmul@aexp:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x2A
   864   00002B                     	ds	1
   865   00002C                     ___flmul@bexp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x2B
   869   00002C                     	ds	1
   870   00002D                     ___flmul@prod:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x2C
   874   00002D                     	ds	4
   875   000031                     ___flmul@temp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x30
   879   000031                     	ds	2
   880   000033                     ?_getTimerValue:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x32
   884   000033                     	ds	4
   885   000037                     ??_getTimerValue:
   886                           
   887                           ; 1 bytes @ 0x36
   888   000037                     	ds	2
   889   000039                     getTimerValue@timerCount:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x38
   893   000039                     	ds	2
   894   00003B                     ?___fladd:
   895                           	callstack 0
   896   00003B                     ___fladd@b:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x3A
   900   00003B                     	ds	4
   901   00003F                     ___fladd@a:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x3E
   905   00003F                     	ds	4
   906   000043                     ??___fladd:
   907                           
   908                           ; 1 bytes @ 0x42
   909   000043                     	ds	4
   910   000047                     ___fladd@signs:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x46
   914   000047                     	ds	1
   915   000048                     ___fladd@aexp:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x47
   919   000048                     	ds	1
   920   000049                     ___fladd@bexp:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x48
   924   000049                     	ds	1
   925   00004A                     ___fladd@grs:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x49
   929   00004A                     	ds	1
   930   00004B                     ?___flsub:
   931                           	callstack 0
   932   00004B                     memoryUpdateTime@movementCount:
   933                           	callstack 0
   934   00004B                     ___flge@ff1:
   935                           	callstack 0
   936   00004B                     ___flsub@b:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x4A
   940   00004B                     	ds	2
   941   00004D                     memoryUpdateTime@timerMemory:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x4C
   945   00004D                     	ds	2
   946   00004F                     ___flge@ff2:
   947                           	callstack 0
   948   00004F                     ___flsub@a:
   949                           	callstack 0
   950   00004F                     _memoryUpdateTime$3097:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x4E
   954   00004F                     	ds	4
   955   000053                     ??___flge:
   956   000053                     ?___fldiv:
   957                           	callstack 0
   958   000053                     memoryUpdateTime@timerVal:
   959                           	callstack 0
   960   000053                     ___fldiv@b:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x52
   964   000053                     	ds	4
   965   000057                     ??_White:
   966   000057                     ?_Hue2Colour:
   967                           	callstack 0
   968   000057                     Hue2Colour@cf:
   969                           	callstack 0
   970   000057                     ___fldiv@a:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x56
   974   000057                     	ds	2
   975   000059                     Hue2Colour@rel:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x58
   979   000059                     	ds	2
   980   00005B                     ??___fldiv:
   981   00005B                     Hue2Colour@colourname:
   982                           	callstack 0
   983   00005B                     Colour2Action@cf:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x5A
   987   00005B                     	ds	2
   988   00005D                     
   989                           ; 1 bytes @ 0x5C
   990   00005D                     	ds	2
   991   00005F                     
   992                           ; 1 bytes @ 0x5E
   993 ;;
   994 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   995 ;;
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 19 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  data          100    0        unsigned char [100]
  1003 ;;  buf            20    0        unsigned char [20]
  1004 ;;  PWMcycle        2    0        unsigned int 
  1005 ;;  wall            1   43[BANK0 ] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1019 ;;Total ram usage:        3 bytes
  1020 ;; Hardware stack levels required when called: 9
  1021 ;; This function calls:
  1022 ;;		_ClickLEDOn
  1023 ;;		_Colour2Action
  1024 ;;		_Hue2Colour
  1025 ;;		_I2C_2_Master_Init
  1026 ;;		_Interrupts_init
  1027 ;;		_LED_init
  1028 ;;		_RGB2Hue
  1029 ;;		_Timer0_init
  1030 ;;		_TimerReset
  1031 ;;		___flge
  1032 ;;		_color_click_init
  1033 ;;		_colour_read_all
  1034 ;;		_fullSpeedAhead
  1035 ;;		_initDCmotorsPWM
  1036 ;;		_initUSART4
  1037 ;;		_memoryUpdateMovement
  1038 ;;		_memoryUpdateTime
  1039 ;;		_stop
  1040 ;; This function is called by:
  1041 ;;		Startup code after reset
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text0
  1046   002DB4                     __ptext0:
  1047                           	callstack 0
  1048   002DB4                     _main:
  1049                           	callstack 22
  1050   002DB4                     
  1051                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1052   002DB4  EC9E  F022         	call	_initUSART4	;wreg free
  1053   002DB8                     
  1054                           ;main.c: 23:     color_click_init();
  1055   002DB8  ECFE  F021         	call	_color_click_init	;wreg free
  1056   002DBC                     
  1057                           ;main.c: 24:     I2C_2_Master_Init();
  1058   002DBC  EC50  F022         	call	_I2C_2_Master_Init	;wreg free
  1059   002DC0                     
  1060                           ;main.c: 25:     LED_init();
  1061   002DC0  ECBF  F022         	call	_LED_init	;wreg free
  1062   002DC4                     
  1063                           ;main.c: 26:     Interrupts_init();
  1064   002DC4  ECCC  F022         	call	_Interrupts_init	;wreg free
  1065   002DC8                     
  1066                           ;main.c: 27:     Timer0_init();
  1067   002DC8  EC8C  F022         	call	_Timer0_init	;wreg free
  1068   002DCC                     
  1069                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1070   002DCC  0E00               	movlw	0
  1071   002DCE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1072   002DD0  0E63               	movlw	99
  1073   002DD2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1074   002DD4  EC27  F01E         	call	_initDCmotorsPWM	;wreg free
  1075   002DD8                     
  1076                           ;main.c: 31:     motorL.power=0;
  1077   002DD8  0E00               	movlw	0
  1078   002DDA  0100               	movlb	0	; () banked
  1079   002DDC  6FB9               	movwf	_motorL& (0+255),b
  1080   002DDE                     
  1081                           ; BSR set to: 0
  1082                           ;main.c: 32:     motorL.direction=1;
  1083   002DDE  0E01               	movlw	1
  1084   002DE0  6FBA               	movwf	(_motorL+1)& (0+255),b
  1085   002DE2                     
  1086                           ; BSR set to: 0
  1087                           ;main.c: 33:     motorL.brakemode=1;
  1088   002DE2  0E01               	movlw	1
  1089   002DE4  6FBB               	movwf	(_motorL+2)& (0+255),b
  1090   002DE6                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1093   002DE6  0EAA               	movlw	170
  1094   002DE8  6FBE               	movwf	(_motorL+5)& (0+255),b
  1095   002DEA  0E0F               	movlw	15
  1096   002DEC  6FBF               	movwf	(_motorL+6)& (0+255),b
  1097   002DEE                     
  1098                           ; BSR set to: 0
  1099                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1100   002DEE  0EA6               	movlw	166
  1101   002DF0  6FC0               	movwf	(_motorL+7)& (0+255),b
  1102   002DF2  0E0F               	movlw	15
  1103   002DF4  6FC1               	movwf	(_motorL+8)& (0+255),b
  1104   002DF6                     
  1105                           ; BSR set to: 0
  1106                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1107   002DF6  0E00               	movlw	0
  1108   002DF8  6FBD               	movwf	(_motorL+4)& (0+255),b
  1109   002DFA  0E63               	movlw	99
  1110   002DFC  6FBC               	movwf	(_motorL+3)& (0+255),b
  1111   002DFE                     
  1112                           ; BSR set to: 0
  1113                           ;main.c: 38:     motorR.power=0;
  1114   002DFE  0E00               	movlw	0
  1115   002E00  6FB0               	movwf	_motorR& (0+255),b
  1116   002E02                     
  1117                           ; BSR set to: 0
  1118                           ;main.c: 39:     motorR.direction=1;
  1119   002E02  0E01               	movlw	1
  1120   002E04  6FB1               	movwf	(_motorR+1)& (0+255),b
  1121   002E06                     
  1122                           ; BSR set to: 0
  1123                           ;main.c: 40:     motorR.brakemode=1;
  1124   002E06  0E01               	movlw	1
  1125   002E08  6FB2               	movwf	(_motorR+2)& (0+255),b
  1126   002E0A                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1129   002E0A  0E25               	movlw	37
  1130   002E0C  6FB5               	movwf	(_motorR+5)& (0+255),b
  1131   002E0E  0E0F               	movlw	15
  1132   002E10  6FB6               	movwf	(_motorR+6)& (0+255),b
  1133   002E12                     
  1134                           ; BSR set to: 0
  1135                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1136   002E12  0E21               	movlw	33
  1137   002E14  6FB7               	movwf	(_motorR+7)& (0+255),b
  1138   002E16  0E0F               	movlw	15
  1139   002E18  6FB8               	movwf	(_motorR+8)& (0+255),b
  1140   002E1A                     
  1141                           ; BSR set to: 0
  1142                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1143   002E1A  0E00               	movlw	0
  1144   002E1C  6FB4               	movwf	(_motorR+4)& (0+255),b
  1145   002E1E  0E63               	movlw	99
  1146   002E20  6FB3               	movwf	(_motorR+3)& (0+255),b
  1147   002E22                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1150   002E22  8486               	bsf	134,2,c	;volatile
  1151   002E24                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1154   002E24  010E               	movlb	14	; () banked
  1155   002E26  95B4               	bcf	180,2,b	;volatile
  1156   002E28                     l296:
  1157                           
  1158                           ;main.c: 47:     while(PORTFbits.RF2){
  1159   002E28  B48E               	btfsc	142,2,c	;volatile
  1160   002E2A  EF19  F017         	goto	u3711
  1161   002E2E  EF1B  F017         	goto	u3710
  1162   002E32                     u3711:
  1163   002E32  EF14  F017         	goto	l296
  1164   002E36                     u3710:
  1165   002E36                     
  1166                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1167   002E36  0E29               	movlw	41
  1168   002E38  0100               	movlb	0	; () banked
  1169   002E3A  6FEC               	movwf	(??_main+1)& (0+255),b
  1170   002E3C  0E96               	movlw	150
  1171   002E3E  6FEB               	movwf	??_main& (0+255),b
  1172   002E40  0E7F               	movlw	127
  1173   002E42                     u3787:
  1174   002E42  2EE8               	decfsz	wreg,f,c
  1175   002E44  D7FE               	bra	u3787
  1176   002E46  2FEB               	decfsz	??_main& (0+255),f,b
  1177   002E48  D7FC               	bra	u3787
  1178   002E4A  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1179   002E4C  D7FA               	bra	u3787
  1180   002E4E                     
  1181                           ;main.c: 50:     TimerReset();
  1182   002E4E  ECE7  F022         	call	_TimerReset	;wreg free
  1183   002E52                     
  1184                           ;main.c: 51:     char wall=0;
  1185   002E52  0E00               	movlw	0
  1186   002E54  0100               	movlb	0	; () banked
  1187   002E56  6FED               	movwf	main@wall& (0+255),b
  1188   002E58                     
  1189                           ; BSR set to: 0
  1190                           ;main.c: 53:     ClickLEDOn(1);
  1191   002E58  0E01               	movlw	1
  1192   002E5A  EC1E  F022         	call	_ClickLEDOn
  1193                           
  1194                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1195   002E5E  EFD7  F017         	goto	l4159
  1196   002E62                     l4121:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1200   002E62  0EB9               	movlw	low _motorL
  1201   002E64  6E14               	movwf	fullSpeedAhead@mL^0,c
  1202   002E66  0E00               	movlw	high _motorL
  1203   002E68  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1204   002E6A  0EB0               	movlw	low _motorR
  1205   002E6C  6E16               	movwf	fullSpeedAhead@mR^0,c
  1206   002E6E  0E00               	movlw	high _motorR
  1207   002E70  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1208   002E72  EC3B  F01F         	call	_fullSpeedAhead	;wreg free
  1209                           
  1210                           ;main.c: 59:         while (!wall){
  1211   002E76  EF84  F017         	goto	l4135
  1212   002E7A                     l4123:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;main.c: 60:             colour_read_all(&colorf,&colorrel);
  1216   002E7A  0E8E               	movlw	low _colorf
  1217   002E7C  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1218   002E7E  0E00               	movlw	high _colorf
  1219   002E80  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1220   002E82  0EA4               	movlw	low _colorrel
  1221   002E84  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1222   002E86  0E00               	movlw	high _colorrel
  1223   002E88  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1224   002E8A  ECC2  F015         	call	_colour_read_all	;wreg free
  1225   002E8E                     
  1226                           ;main.c: 63:              if (colorf.Cf>300)
  1227   002E8E  0E00               	movlw	0
  1228   002E90  6E4B               	movwf	___flge@ff1^0,c
  1229   002E92  0E00               	movlw	0
  1230   002E94  6E4C               	movwf	(___flge@ff1+1)^0,c
  1231   002E96  0E96               	movlw	150
  1232   002E98  6E4D               	movwf	(___flge@ff1+2)^0,c
  1233   002E9A  0E43               	movlw	67
  1234   002E9C  6E4E               	movwf	(___flge@ff1+3)^0,c
  1235   002E9E  C09A  F04F         	movff	_colorf+12,___flge@ff2
  1236   002EA2  C09B  F050         	movff	_colorf+13,___flge@ff2+1
  1237   002EA6  C09C  F051         	movff	_colorf+14,___flge@ff2+2
  1238   002EAA  C09D  F052         	movff	_colorf+15,___flge@ff2+3
  1239   002EAE  ECD0  F01A         	call	___flge	;wreg free
  1240   002EB2  B0D8               	btfsc	status,0,c
  1241   002EB4  EF5E  F017         	goto	u3721
  1242   002EB8  EF60  F017         	goto	u3720
  1243   002EBC                     u3721:
  1244   002EBC  EF84  F017         	goto	l4135
  1245   002EC0                     u3720:
  1246   002EC0                     
  1247                           ;main.c: 64:              {;main.c: 71:             memoryUpdateTime(movementCount,timer
      +                          Memory);
  1248   002EC0  C062  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1249   002EC4  C063  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1250   002EC8  0E00               	movlw	low _timerMemory
  1251   002ECA  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1252   002ECC  0E01               	movlw	high _timerMemory
  1253   002ECE  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1254   002ED0  EC46  F01D         	call	_memoryUpdateTime	;wreg free
  1255   002ED4                     
  1256                           ;main.c: 73:             wall=1;
  1257   002ED4  0E01               	movlw	1
  1258   002ED6  0100               	movlb	0	; () banked
  1259   002ED8  6FED               	movwf	main@wall& (0+255),b
  1260   002EDA                     
  1261                           ; BSR set to: 0
  1262                           ;main.c: 74:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1263   002EDA  0E09               	movlw	9
  1264   002EDC  0100               	movlb	0	; () banked
  1265   002EDE  6FEC               	movwf	(??_main+1)& (0+255),b
  1266   002EE0  0E1E               	movlw	30
  1267   002EE2  6FEB               	movwf	??_main& (0+255),b
  1268   002EE4  0EE4               	movlw	228
  1269   002EE6                     u3797:
  1270   002EE6  2EE8               	decfsz	wreg,f,c
  1271   002EE8  D7FE               	bra	u3797
  1272   002EEA  2FEB               	decfsz	??_main& (0+255),f,b
  1273   002EEC  D7FC               	bra	u3797
  1274   002EEE  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1275   002EF0  D7FA               	bra	u3797
  1276   002EF2  F000               	nop	
  1277   002EF4                     
  1278                           ;main.c: 75:             stop(&motorL,&motorR);
  1279   002EF4  0EB9               	movlw	low _motorL
  1280   002EF6  6E14               	movwf	stop@mL^0,c
  1281   002EF8  0E00               	movlw	high _motorL
  1282   002EFA  6E15               	movwf	(stop@mL+1)^0,c
  1283   002EFC  0EB0               	movlw	low _motorR
  1284   002EFE  6E16               	movwf	stop@mR^0,c
  1285   002F00  0E00               	movlw	high _motorR
  1286   002F02  6E17               	movwf	(stop@mR+1)^0,c
  1287   002F04  EC4F  F01C         	call	_stop	;wreg free
  1288   002F08                     l4135:
  1289                           
  1290                           ;main.c: 59:         while (!wall){
  1291   002F08  0100               	movlb	0	; () banked
  1292   002F0A  51ED               	movf	main@wall& (0+255),w,b
  1293   002F0C  B4D8               	btfsc	status,2,c
  1294   002F0E  EF8B  F017         	goto	u3731
  1295   002F12  EF8D  F017         	goto	u3730
  1296   002F16                     u3731:
  1297   002F16  EF3D  F017         	goto	l4123
  1298   002F1A                     u3730:
  1299   002F1A                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 78:         colour_read_all(&colorf,&colorrel);
  1302   002F1A  0E8E               	movlw	low _colorf
  1303   002F1C  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1304   002F1E  0E00               	movlw	high _colorf
  1305   002F20  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1306   002F22  0EA4               	movlw	low _colorrel
  1307   002F24  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1308   002F26  0E00               	movlw	high _colorrel
  1309   002F28  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1310   002F2A  ECC2  F015         	call	_colour_read_all	;wreg free
  1311   002F2E                     
  1312                           ;main.c: 79:         wall=0;
  1313   002F2E  0E00               	movlw	0
  1314   002F30  0100               	movlb	0	; () banked
  1315   002F32  6FED               	movwf	main@wall& (0+255),b
  1316   002F34                     
  1317                           ; BSR set to: 0
  1318                           ;main.c: 80:         RGB2Hue(&colorf);
  1319   002F34  0E8E               	movlw	low _colorf
  1320   002F36  6FCF               	movwf	RGB2Hue@cf& (0+255),b
  1321   002F38  0E00               	movlw	high _colorf
  1322   002F3A  6FD0               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1323   002F3C  EC33  F007         	call	_RGB2Hue	;wreg free
  1324   002F40                     
  1325                           ;main.c: 81:         Hue2Colour(&colorf,&colorrel);
  1326   002F40  0E8E               	movlw	low _colorf
  1327   002F42  6E57               	movwf	Hue2Colour@cf^0,c
  1328   002F44  0E00               	movlw	high _colorf
  1329   002F46  6E58               	movwf	(Hue2Colour@cf+1)^0,c
  1330   002F48  0EA4               	movlw	low _colorrel
  1331   002F4A  6E59               	movwf	Hue2Colour@rel^0,c
  1332   002F4C  0E00               	movlw	high _colorrel
  1333   002F4E  6E5A               	movwf	(Hue2Colour@rel+1)^0,c
  1334   002F50  ECC9  F00A         	call	_Hue2Colour	;wreg free
  1335   002F54                     
  1336                           ;main.c: 82:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1337   002F54  0E8E               	movlw	low _colorf
  1338   002F56  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1339   002F58  0E00               	movlw	high _colorf
  1340   002F5A  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1341   002F5C  C062  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1342   002F60  C063  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1343   002F64  0E66               	movlw	low _movementMemory
  1344   002F66  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1345   002F68  0E00               	movlw	high _movementMemory
  1346   002F6A  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1347   002F6C  EC38  F022         	call	_memoryUpdateMovement	;wreg free
  1348   002F70                     
  1349                           ;main.c: 83:         Colour2Action(&colorf);
  1350   002F70  0E8E               	movlw	low _colorf
  1351   002F72  6E5B               	movwf	Colour2Action@cf^0,c
  1352   002F74  0E00               	movlw	high _colorf
  1353   002F76  6E5C               	movwf	(Colour2Action@cf+1)^0,c
  1354   002F78  ECE3  F017         	call	_Colour2Action	;wreg free
  1355   002F7C                     
  1356                           ;main.c: 84:         if (colorf.colourindex == 7)
  1357   002F7C  0E07               	movlw	7
  1358   002F7E  0100               	movlb	0	; () banked
  1359   002F80  19A2               	xorwf	(_colorf+20)& (0+255),w,b
  1360   002F82  11A3               	iorwf	(_colorf+21)& (0+255),w,b
  1361   002F84  A4D8               	btfss	status,2,c
  1362   002F86  EFC7  F017         	goto	u3741
  1363   002F8A  EFC9  F017         	goto	u3740
  1364   002F8E                     u3741:
  1365   002F8E  EFD2  F017         	goto	l4155
  1366   002F92                     u3740:
  1367   002F92                     l4153:
  1368                           
  1369                           ; BSR set to: 0
  1370   002F92  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1371   002F94  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1372   002F96  B4D8               	btfsc	status,2,c
  1373   002F98  EFD0  F017         	goto	u3751
  1374   002F9C  EFD2  F017         	goto	u3750
  1375   002FA0                     u3751:
  1376   002FA0  EFC9  F017         	goto	l4153
  1377   002FA4                     u3750:
  1378   002FA4                     l4155:
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;main.c: 88:         TimerReset();
  1382   002FA4  ECE7  F022         	call	_TimerReset	;wreg free
  1383   002FA8                     
  1384                           ;main.c: 89:         movementCount++;
  1385   002FA8  0100               	movlb	0	; () banked
  1386   002FAA  4B62               	infsnz	_movementCount& (0+255),f,b	;volatile
  1387   002FAC  2B63               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1388   002FAE                     l4159:
  1389                           
  1390                           ;main.c: 56:     while (!retracingDone){
  1391   002FAE  0100               	movlb	0	; () banked
  1392   002FB0  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1393   002FB2  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1394   002FB4  B4D8               	btfsc	status,2,c
  1395   002FB6  EFDF  F017         	goto	u3761
  1396   002FBA  EFE1  F017         	goto	u3760
  1397   002FBE                     u3761:
  1398   002FBE  EF31  F017         	goto	l4121
  1399   002FC2                     u3760:
  1400   002FC2                     
  1401                           ; BSR set to: 0
  1402   002FC2  EF16  F000         	goto	start
  1403   002FC6                     __end_of_main:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _memoryUpdateTime *****************
  1407 ;; Defined at:
  1408 ;;		line 16 in file "memory.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  movementCoun    2   74[COMRAM] volatile unsigned int 
  1411 ;;  timerMemory     2   76[COMRAM] PTR volatile float 
  1412 ;;		 -> timerMemory(80), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  timerVal        4   82[COMRAM] float 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;Total ram usage:       12 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 3
  1431 ;; This function calls:
  1432 ;;		___fladd
  1433 ;;		_getTimerValue
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text1
  1440   003A8C                     __ptext1:
  1441                           	callstack 0
  1442   003A8C                     _memoryUpdateTime:
  1443                           	callstack 27
  1444   003A8C                     
  1445                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1446   003A8C  0E00               	movlw	0
  1447   003A8E  6E3F               	movwf	___fladd@a^0,c
  1448   003A90  0E00               	movlw	0
  1449   003A92  6E40               	movwf	(___fladd@a+1)^0,c
  1450   003A94  0EC8               	movlw	200
  1451   003A96  6E41               	movwf	(___fladd@a+2)^0,c
  1452   003A98  0EC3               	movlw	195
  1453   003A9A  6E42               	movwf	(___fladd@a+3)^0,c
  1454   003A9C  EC71  F020         	call	_getTimerValue	;wreg free
  1455   003AA0  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1456   003AA4  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1457   003AA8  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1458   003AAC  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1459   003AB0  EC4A  F00D         	call	___fladd	;wreg free
  1460   003AB4  C03B  F04F         	movff	?___fladd,_memoryUpdateTime$3097
  1461   003AB8  C03C  F050         	movff	?___fladd+1,_memoryUpdateTime$3097+1
  1462   003ABC  C03D  F051         	movff	?___fladd+2,_memoryUpdateTime$3097+2
  1463   003AC0  C03E  F052         	movff	?___fladd+3,_memoryUpdateTime$3097+3
  1464   003AC4                     
  1465                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_halfs
      +                          quare-_recogniseColour;
  1466   003AC4  C04F  F03B         	movff	_memoryUpdateTime$3097,___fladd@b
  1467   003AC8  C050  F03C         	movff	_memoryUpdateTime$3097+1,___fladd@b+1
  1468   003ACC  C051  F03D         	movff	_memoryUpdateTime$3097+2,___fladd@b+2
  1469   003AD0  C052  F03E         	movff	_memoryUpdateTime$3097+3,___fladd@b+3
  1470   003AD4  0E00               	movlw	0
  1471   003AD6  6E3F               	movwf	___fladd@a^0,c
  1472   003AD8  0E00               	movlw	0
  1473   003ADA  6E40               	movwf	(___fladd@a+1)^0,c
  1474   003ADC  0E96               	movlw	150
  1475   003ADE  6E41               	movwf	(___fladd@a+2)^0,c
  1476   003AE0  0EC3               	movlw	195
  1477   003AE2  6E42               	movwf	(___fladd@a+3)^0,c
  1478   003AE4  EC4A  F00D         	call	___fladd	;wreg free
  1479   003AE8  C03B  F053         	movff	?___fladd,memoryUpdateTime@timerVal
  1480   003AEC  C03C  F054         	movff	?___fladd+1,memoryUpdateTime@timerVal+1
  1481   003AF0  C03D  F055         	movff	?___fladd+2,memoryUpdateTime@timerVal+2
  1482   003AF4  C03E  F056         	movff	?___fladd+3,memoryUpdateTime@timerVal+3
  1483   003AF8                     
  1484                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1485   003AF8  90D8               	bcf	status,0,c
  1486   003AFA  344B               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1487   003AFC  6ED9               	movwf	fsr2l,c
  1488   003AFE  344C               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1489   003B00  6EDA               	movwf	fsr2h,c
  1490   003B02  90D8               	bcf	status,0,c
  1491   003B04  36D9               	rlcf	fsr2l,f,c
  1492   003B06  36DA               	rlcf	fsr2h,f,c
  1493   003B08  504D               	movf	memoryUpdateTime@timerMemory^0,w,c
  1494   003B0A  26D9               	addwf	fsr2l,f,c
  1495   003B0C  504E               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1496   003B0E  22DA               	addwfc	fsr2h,f,c
  1497   003B10  C053  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1498   003B14  C054  FFDE         	movff	memoryUpdateTime@timerVal+1,postinc2
  1499   003B18  C055  FFDE         	movff	memoryUpdateTime@timerVal+2,postinc2
  1500   003B1C  C056  FFDE         	movff	memoryUpdateTime@timerVal+3,postinc2
  1501   003B20  0012               	return		;funcret
  1502   003B22                     __end_of_memoryUpdateTime:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _memoryUpdateMovement *****************
  1506 ;; Defined at:
  1507 ;;		line 10 in file "memory.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  cf              2    0[COMRAM] PTR struct RGBC
  1510 ;;		 -> colorf(22), 
  1511 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1512 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1513 ;;		 -> movementMemory(40), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  colourcode      2    6[COMRAM] int 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text2
  1540   004470                     __ptext2:
  1541                           	callstack 0
  1542   004470                     _memoryUpdateMovement:
  1543                           	callstack 29
  1544   004470                     
  1545                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC *cf, volatile unsigned int movement
      +                          Count, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int colo
      +                          urcode = cf->colourindex;
  1546   004470  EE20 F014          	lfsr	2,20
  1547   004474  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1548   004476  26D9               	addwf	fsr2l,f,c
  1549   004478  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1550   00447A  22DA               	addwfc	fsr2h,f,c
  1551   00447C  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1552   004480  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1553                           
  1554                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1555   004484  90D8               	bcf	status,0,c
  1556   004486  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1557   004488  6ED9               	movwf	fsr2l,c
  1558   00448A  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1559   00448C  6EDA               	movwf	fsr2h,c
  1560   00448E  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1561   004490  26D9               	addwf	fsr2l,f,c
  1562   004492  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1563   004494  22DA               	addwfc	fsr2h,f,c
  1564   004496  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1565   00449A  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1566   00449E  0012               	return		;funcret
  1567   0044A0                     __end_of_memoryUpdateMovement:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _initUSART4 *****************
  1571 ;; Defined at:
  1572 ;;		line 7 in file "serial.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text3
  1601   00453C                     __ptext3:
  1602                           	callstack 0
  1603   00453C                     _initUSART4:
  1604                           	callstack 29
  1605   00453C                     
  1606                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1607   00453C  8883               	bsf	131,4,c	;volatile
  1608                           
  1609                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1610   00453E  8283               	bsf	131,1,c	;volatile
  1611   004540                     
  1612                           ;serial.c: 10:     RC0PPS = 0x12;
  1613   004540  0E12               	movlw	18
  1614   004542  010E               	movlb	14	; () banked
  1615   004544  6F62               	movwf	98,b	;volatile
  1616                           
  1617                           ;serial.c: 11:     RX4PPS = 0x11;
  1618   004546  0E11               	movlw	17
  1619   004548  6F15               	movwf	21,b	;volatile
  1620   00454A                     
  1621                           ; BSR set to: 14
  1622                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1623   00454A  97E9               	bcf	233,3,b	;volatile
  1624   00454C                     
  1625                           ; BSR set to: 14
  1626                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1627   00454C  95E8               	bcf	232,2,b	;volatile
  1628                           
  1629                           ;serial.c: 15:     SP4BRGL = 51;
  1630   00454E  0E33               	movlw	51
  1631   004550  6FE5               	movwf	229,b	;volatile
  1632                           
  1633                           ;serial.c: 16:     SP4BRGH = 0;
  1634   004552  0E00               	movlw	0
  1635   004554  6FE6               	movwf	230,b	;volatile
  1636   004556                     
  1637                           ; BSR set to: 14
  1638                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1639   004556  89E7               	bsf	231,4,b	;volatile
  1640   004558                     
  1641                           ; BSR set to: 14
  1642                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1643   004558  8BE8               	bsf	232,5,b	;volatile
  1644   00455A                     
  1645                           ; BSR set to: 14
  1646                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1647   00455A  8FE7               	bsf	231,7,b	;volatile
  1648   00455C                     
  1649                           ; BSR set to: 14
  1650   00455C  0012               	return		;funcret
  1651   00455E                     __end_of_initUSART4:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _initDCmotorsPWM *****************
  1655 ;; Defined at:
  1656 ;;		line 11 in file "dc_motor.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text4
  1685   003C4E                     __ptext4:
  1686                           	callstack 0
  1687   003C4E                     _initDCmotorsPWM:
  1688                           	callstack 29
  1689   003C4E                     
  1690                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1691   003C4E  9485               	bcf	133,2,c	;volatile
  1692                           
  1693                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1694   003C50  9E83               	bcf	131,7,c	;volatile
  1695                           
  1696                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1697   003C52  9885               	bcf	133,4,c	;volatile
  1698                           
  1699                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1700   003C54  9C87               	bcf	135,6,c	;volatile
  1701                           
  1702                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1703   003C56  947D               	bcf	125,2,c	;volatile
  1704                           
  1705                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1706   003C58  9E7B               	bcf	123,7,c	;volatile
  1707                           
  1708                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1709   003C5A  987D               	bcf	125,4,c	;volatile
  1710                           
  1711                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1712   003C5C  9C7F               	bcf	127,6,c	;volatile
  1713   003C5E                     
  1714                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1715   003C5E  0E05               	movlw	5
  1716   003C60  010E               	movlb	14	; () banked
  1717   003C62  6F74               	movwf	116,b	;volatile
  1718                           
  1719                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1720   003C64  0E06               	movlw	6
  1721   003C66  6F76               	movwf	118,b	;volatile
  1722                           
  1723                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1724   003C68  0E07               	movlw	7
  1725   003C6A  6F69               	movwf	105,b	;volatile
  1726                           
  1727                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1728   003C6C  0E08               	movlw	8
  1729   003C6E  6F88               	movwf	136,b	;volatile
  1730                           
  1731                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1732   003C70  50BD               	movf	189,w,c	;volatile
  1733   003C72  0B8F               	andlw	-113
  1734   003C74  0940               	iorlw	64
  1735   003C76  6EBD               	movwf	189,c	;volatile
  1736                           
  1737                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1738   003C78  0EE0               	movlw	-32
  1739   003C7A  16BE               	andwf	190,f,c	;volatile
  1740                           
  1741                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1742   003C7C  50BF               	movf	191,w,c	;volatile
  1743   003C7E  0BF0               	andlw	-16
  1744   003C80  0901               	iorlw	1
  1745   003C82  6EBF               	movwf	191,c	;volatile
  1746   003C84                     
  1747                           ; BSR set to: 14
  1748                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1749   003C84  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1750   003C88                     
  1751                           ; BSR set to: 14
  1752                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1753   003C88  8EBD               	bsf	189,7,c	;volatile
  1754                           
  1755                           ;dc_motor.c: 40:     CCPR1H=0;
  1756   003C8A  0E00               	movlw	0
  1757   003C8C  6EAA               	movwf	170,c	;volatile
  1758                           
  1759                           ;dc_motor.c: 41:     CCPR2H=0;
  1760   003C8E  0E00               	movlw	0
  1761   003C90  6EA6               	movwf	166,c	;volatile
  1762                           
  1763                           ;dc_motor.c: 42:     CCPR3H=0;
  1764   003C92  0E00               	movlw	0
  1765   003C94  010F               	movlb	15	; () banked
  1766   003C96  6F25               	movwf	37,b	;volatile
  1767                           
  1768                           ;dc_motor.c: 43:     CCPR4H=0;
  1769   003C98  0E00               	movlw	0
  1770   003C9A  6F21               	movwf	33,b	;volatile
  1771                           
  1772                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1773   003C9C  0EFC               	movlw	-4
  1774   003C9E  16AD               	andwf	173,f,c	;volatile
  1775                           
  1776                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1777   003CA0  0EF3               	movlw	-13
  1778   003CA2  16AD               	andwf	173,f,c	;volatile
  1779                           
  1780                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1781   003CA4  0ECF               	movlw	-49
  1782   003CA6  16AD               	andwf	173,f,c	;volatile
  1783                           
  1784                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1785   003CA8  0E3F               	movlw	-193
  1786   003CAA  16AD               	andwf	173,f,c	;volatile
  1787   003CAC                     
  1788                           ; BSR set to: 15
  1789                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1790   003CAC  88AB               	bsf	171,4,c	;volatile
  1791                           
  1792                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1793   003CAE  50AB               	movf	171,w,c	;volatile
  1794   003CB0  0BF0               	andlw	-16
  1795   003CB2  090C               	iorlw	12
  1796   003CB4  6EAB               	movwf	171,c	;volatile
  1797   003CB6                     
  1798                           ; BSR set to: 15
  1799                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1800   003CB6  8EAB               	bsf	171,7,c	;volatile
  1801   003CB8                     
  1802                           ; BSR set to: 15
  1803                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1804   003CB8  88A7               	bsf	167,4,c	;volatile
  1805                           
  1806                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1807   003CBA  50A7               	movf	167,w,c	;volatile
  1808   003CBC  0BF0               	andlw	-16
  1809   003CBE  090C               	iorlw	12
  1810   003CC0  6EA7               	movwf	167,c	;volatile
  1811   003CC2                     
  1812                           ; BSR set to: 15
  1813                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1814   003CC2  8EA7               	bsf	167,7,c	;volatile
  1815   003CC4                     
  1816                           ; BSR set to: 15
  1817                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1818   003CC4  8926               	bsf	38,4,b	;volatile
  1819                           
  1820                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1821   003CC6  5126               	movf	38,w,b	;volatile
  1822   003CC8  0BF0               	andlw	-16
  1823   003CCA  090C               	iorlw	12
  1824   003CCC  6F26               	movwf	38,b	;volatile
  1825   003CCE                     
  1826                           ; BSR set to: 15
  1827                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1828   003CCE  8F26               	bsf	38,7,b	;volatile
  1829   003CD0                     
  1830                           ; BSR set to: 15
  1831                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1832   003CD0  8922               	bsf	34,4,b	;volatile
  1833                           
  1834                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1835   003CD2  5122               	movf	34,w,b	;volatile
  1836   003CD4  0BF0               	andlw	-16
  1837   003CD6  090C               	iorlw	12
  1838   003CD8  6F22               	movwf	34,b	;volatile
  1839   003CDA                     
  1840                           ; BSR set to: 15
  1841                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1842   003CDA  8F22               	bsf	34,7,b	;volatile
  1843   003CDC                     
  1844                           ; BSR set to: 15
  1845   003CDC  0012               	return		;funcret
  1846   003CDE                     __end_of_initDCmotorsPWM:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _colour_read_all *****************
  1850 ;; Defined at:
  1851 ;;		line 8 in file "colorfunctions.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  1854 ;;		 -> colorf(22), 
  1855 ;;  rel             2   15[BANK0 ] PTR struct RGB_rel
  1856 ;;		 -> colorrel(12), 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  total           4   37[BANK0 ] float 
  1859 ;;  B               4   33[BANK0 ] float 
  1860 ;;  G               4   29[BANK0 ] float 
  1861 ;;  R               4   25[BANK0 ] float 
  1862 ;;  C               4   17[BANK0 ] float 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1873 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;Total ram usage:       28 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 4
  1879 ;; This function calls:
  1880 ;;		___fladd
  1881 ;;		___fldiv
  1882 ;;		___xxtofl
  1883 ;;		_color_read_Blue
  1884 ;;		_color_read_Clear
  1885 ;;		_color_read_Green
  1886 ;;		_color_read_Red
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text5
  1893   002B84                     __ptext5:
  1894                           	callstack 0
  1895   002B84                     _colour_read_all:
  1896                           	callstack 26
  1897   002B84                     
  1898                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1899   002B84  ECF5  F020         	call	_color_read_Red	;wreg free
  1900   002B88  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1901   002B8C  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1902   002B90  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1903   002B92  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1904   002B94  0E00               	movlw	0
  1905   002B96  ECBD  F018         	call	___xxtofl
  1906   002B9A  C00C  F0DB         	movff	?___xxtofl,colour_read_all@R
  1907   002B9E  C00D  F0DC         	movff	?___xxtofl+1,colour_read_all@R+1
  1908   002BA2  C00E  F0DD         	movff	?___xxtofl+2,colour_read_all@R+2
  1909   002BA6  C00F  F0DE         	movff	?___xxtofl+3,colour_read_all@R+3
  1910                           
  1911                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1912   002BAA  EC1D  F021         	call	_color_read_Green	;wreg free
  1913   002BAE  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1914   002BB2  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1915   002BB6  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1916   002BB8  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1917   002BBA  0E00               	movlw	0
  1918   002BBC  ECBD  F018         	call	___xxtofl
  1919   002BC0  C00C  F0DF         	movff	?___xxtofl,colour_read_all@G
  1920   002BC4  C00D  F0E0         	movff	?___xxtofl+1,colour_read_all@G+1
  1921   002BC8  C00E  F0E1         	movff	?___xxtofl+2,colour_read_all@G+2
  1922   002BCC  C00F  F0E2         	movff	?___xxtofl+3,colour_read_all@G+3
  1923                           
  1924                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1925   002BD0  EC6D  F021         	call	_color_read_Blue	;wreg free
  1926   002BD4  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1927   002BD8  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1928   002BDC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1929   002BDE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1930   002BE0  0E00               	movlw	0
  1931   002BE2  ECBD  F018         	call	___xxtofl
  1932   002BE6  C00C  F0E3         	movff	?___xxtofl,colour_read_all@B
  1933   002BEA  C00D  F0E4         	movff	?___xxtofl+1,colour_read_all@B+1
  1934   002BEE  C00E  F0E5         	movff	?___xxtofl+2,colour_read_all@B+2
  1935   002BF2  C00F  F0E6         	movff	?___xxtofl+3,colour_read_all@B+3
  1936                           
  1937                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1938   002BF6  EC45  F021         	call	_color_read_Clear	;wreg free
  1939   002BFA  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1940   002BFE  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1941   002C02  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1942   002C04  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1943   002C06  0E00               	movlw	0
  1944   002C08  ECBD  F018         	call	___xxtofl
  1945   002C0C  C00C  F0D3         	movff	?___xxtofl,colour_read_all@C
  1946   002C10  C00D  F0D4         	movff	?___xxtofl+1,colour_read_all@C+1
  1947   002C14  C00E  F0D5         	movff	?___xxtofl+2,colour_read_all@C+2
  1948   002C18  C00F  F0D6         	movff	?___xxtofl+3,colour_read_all@C+3
  1949                           
  1950                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  1951   002C1C  C0DF  F03F         	movff	colour_read_all@G,___fladd@a
  1952   002C20  C0E0  F040         	movff	colour_read_all@G+1,___fladd@a+1
  1953   002C24  C0E1  F041         	movff	colour_read_all@G+2,___fladd@a+2
  1954   002C28  C0E2  F042         	movff	colour_read_all@G+3,___fladd@a+3
  1955   002C2C  C0DB  F03B         	movff	colour_read_all@R,___fladd@b
  1956   002C30  C0DC  F03C         	movff	colour_read_all@R+1,___fladd@b+1
  1957   002C34  C0DD  F03D         	movff	colour_read_all@R+2,___fladd@b+2
  1958   002C38  C0DE  F03E         	movff	colour_read_all@R+3,___fladd@b+3
  1959   002C3C  EC4A  F00D         	call	___fladd	;wreg free
  1960   002C40  C03B  F0D7         	movff	?___fladd,_colour_read_all$3093
  1961   002C44  C03C  F0D8         	movff	?___fladd+1,_colour_read_all$3093+1
  1962   002C48  C03D  F0D9         	movff	?___fladd+2,_colour_read_all$3093+2
  1963   002C4C  C03E  F0DA         	movff	?___fladd+3,_colour_read_all$3093+3
  1964                           
  1965                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  1966   002C50  C0D7  F03B         	movff	_colour_read_all$3093,___fladd@b
  1967   002C54  C0D8  F03C         	movff	_colour_read_all$3093+1,___fladd@b+1
  1968   002C58  C0D9  F03D         	movff	_colour_read_all$3093+2,___fladd@b+2
  1969   002C5C  C0DA  F03E         	movff	_colour_read_all$3093+3,___fladd@b+3
  1970   002C60  C0E3  F03F         	movff	colour_read_all@B,___fladd@a
  1971   002C64  C0E4  F040         	movff	colour_read_all@B+1,___fladd@a+1
  1972   002C68  C0E5  F041         	movff	colour_read_all@B+2,___fladd@a+2
  1973   002C6C  C0E6  F042         	movff	colour_read_all@B+3,___fladd@a+3
  1974   002C70  EC4A  F00D         	call	___fladd	;wreg free
  1975   002C74  C03B  F0E7         	movff	?___fladd,colour_read_all@total
  1976   002C78  C03C  F0E8         	movff	?___fladd+1,colour_read_all@total+1
  1977   002C7C  C03D  F0E9         	movff	?___fladd+2,colour_read_all@total+2
  1978   002C80  C03E  F0EA         	movff	?___fladd+3,colour_read_all@total+3
  1979   002C84                     
  1980                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1981   002C84  C0CF  FFD9         	movff	colour_read_all@cf,fsr2l
  1982   002C88  C0D0  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1983   002C8C  C0DB  FFDE         	movff	colour_read_all@R,postinc2
  1984   002C90  C0DC  FFDE         	movff	colour_read_all@R+1,postinc2
  1985   002C94  C0DD  FFDE         	movff	colour_read_all@R+2,postinc2
  1986   002C98  C0DE  FFDE         	movff	colour_read_all@R+3,postinc2
  1987   002C9C                     
  1988                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1989   002C9C  0100               	movlb	0	; () banked
  1990   002C9E  EE20 F008          	lfsr	2,8
  1991   002CA2  51CF               	movf	colour_read_all@cf& (0+255),w,b
  1992   002CA4  26D9               	addwf	fsr2l,f,c
  1993   002CA6  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  1994   002CA8  22DA               	addwfc	fsr2h,f,c
  1995   002CAA  C0E3  FFDE         	movff	colour_read_all@B,postinc2
  1996   002CAE  C0E4  FFDE         	movff	colour_read_all@B+1,postinc2
  1997   002CB2  C0E5  FFDE         	movff	colour_read_all@B+2,postinc2
  1998   002CB6  C0E6  FFDE         	movff	colour_read_all@B+3,postinc2
  1999   002CBA                     
  2000                           ; BSR set to: 0
  2001                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2002   002CBA  EE20 F004          	lfsr	2,4
  2003   002CBE  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2004   002CC0  26D9               	addwf	fsr2l,f,c
  2005   002CC2  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2006   002CC4  22DA               	addwfc	fsr2h,f,c
  2007   002CC6  C0DF  FFDE         	movff	colour_read_all@G,postinc2
  2008   002CCA  C0E0  FFDE         	movff	colour_read_all@G+1,postinc2
  2009   002CCE  C0E1  FFDE         	movff	colour_read_all@G+2,postinc2
  2010   002CD2  C0E2  FFDE         	movff	colour_read_all@G+3,postinc2
  2011   002CD6                     
  2012                           ; BSR set to: 0
  2013                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2014   002CD6  EE20 F00C          	lfsr	2,12
  2015   002CDA  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2016   002CDC  26D9               	addwf	fsr2l,f,c
  2017   002CDE  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2018   002CE0  22DA               	addwfc	fsr2h,f,c
  2019   002CE2  C0D3  FFDE         	movff	colour_read_all@C,postinc2
  2020   002CE6  C0D4  FFDE         	movff	colour_read_all@C+1,postinc2
  2021   002CEA  C0D5  FFDE         	movff	colour_read_all@C+2,postinc2
  2022   002CEE  C0D6  FFDE         	movff	colour_read_all@C+3,postinc2
  2023   002CF2                     
  2024                           ; BSR set to: 0
  2025                           ;colorfunctions.c: 21:     (rel->R)=R/total;
  2026   002CF2  C0DB  F053         	movff	colour_read_all@R,___fldiv@b
  2027   002CF6  C0DC  F054         	movff	colour_read_all@R+1,___fldiv@b+1
  2028   002CFA  C0DD  F055         	movff	colour_read_all@R+2,___fldiv@b+2
  2029   002CFE  C0DE  F056         	movff	colour_read_all@R+3,___fldiv@b+3
  2030   002D02  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2031   002D06  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2032   002D0A  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2033   002D0E  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2034   002D12  ECF4  F013         	call	___fldiv	;wreg free
  2035   002D16  C0D1  FFD9         	movff	colour_read_all@rel,fsr2l
  2036   002D1A  C0D2  FFDA         	movff	colour_read_all@rel+1,fsr2h
  2037   002D1E  C053  FFDE         	movff	?___fldiv,postinc2
  2038   002D22  C054  FFDE         	movff	?___fldiv+1,postinc2
  2039   002D26  C055  FFDE         	movff	?___fldiv+2,postinc2
  2040   002D2A  C056  FFDE         	movff	?___fldiv+3,postinc2
  2041   002D2E                     
  2042                           ;colorfunctions.c: 22:     (rel->B)=B/total;
  2043   002D2E  C0E3  F053         	movff	colour_read_all@B,___fldiv@b
  2044   002D32  C0E4  F054         	movff	colour_read_all@B+1,___fldiv@b+1
  2045   002D36  C0E5  F055         	movff	colour_read_all@B+2,___fldiv@b+2
  2046   002D3A  C0E6  F056         	movff	colour_read_all@B+3,___fldiv@b+3
  2047   002D3E  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2048   002D42  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2049   002D46  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2050   002D4A  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2051   002D4E  ECF4  F013         	call	___fldiv	;wreg free
  2052   002D52  0100               	movlb	0	; () banked
  2053   002D54  EE20 F008          	lfsr	2,8
  2054   002D58  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2055   002D5A  26D9               	addwf	fsr2l,f,c
  2056   002D5C  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2057   002D5E  22DA               	addwfc	fsr2h,f,c
  2058   002D60  C053  FFDE         	movff	?___fldiv,postinc2
  2059   002D64  C054  FFDE         	movff	?___fldiv+1,postinc2
  2060   002D68  C055  FFDE         	movff	?___fldiv+2,postinc2
  2061   002D6C  C056  FFDE         	movff	?___fldiv+3,postinc2
  2062   002D70                     
  2063                           ; BSR set to: 0
  2064                           ;colorfunctions.c: 23:     (rel->G)=G/total;
  2065   002D70  C0DF  F053         	movff	colour_read_all@G,___fldiv@b
  2066   002D74  C0E0  F054         	movff	colour_read_all@G+1,___fldiv@b+1
  2067   002D78  C0E1  F055         	movff	colour_read_all@G+2,___fldiv@b+2
  2068   002D7C  C0E2  F056         	movff	colour_read_all@G+3,___fldiv@b+3
  2069   002D80  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2070   002D84  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2071   002D88  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2072   002D8C  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2073   002D90  ECF4  F013         	call	___fldiv	;wreg free
  2074   002D94  0100               	movlb	0	; () banked
  2075   002D96  EE20 F004          	lfsr	2,4
  2076   002D9A  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2077   002D9C  26D9               	addwf	fsr2l,f,c
  2078   002D9E  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2079   002DA0  22DA               	addwfc	fsr2h,f,c
  2080   002DA2  C053  FFDE         	movff	?___fldiv,postinc2
  2081   002DA6  C054  FFDE         	movff	?___fldiv+1,postinc2
  2082   002DAA  C055  FFDE         	movff	?___fldiv+2,postinc2
  2083   002DAE  C056  FFDE         	movff	?___fldiv+3,postinc2
  2084   002DB2                     
  2085                           ; BSR set to: 0
  2086   002DB2  0012               	return		;funcret
  2087   002DB4                     __end_of_colour_read_all:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _color_read_Red *****************
  2091 ;; Defined at:
  2092 ;;		line 38 in file "colorclick.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  tmp             2    9[COMRAM] unsigned int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    4[COMRAM] unsigned int 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;Total ram usage:        7 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 3
  2113 ;; This function calls:
  2114 ;;		_I2C_2_Master_Read
  2115 ;;		_I2C_2_Master_RepStart
  2116 ;;		_I2C_2_Master_Start
  2117 ;;		_I2C_2_Master_Stop
  2118 ;;		_I2C_2_Master_Write
  2119 ;; This function is called by:
  2120 ;;		_colour_read_all
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text6
  2125   0041EA                     __ptext6:
  2126                           	callstack 0
  2127   0041EA                     _color_read_Red:
  2128                           	callstack 26
  2129   0041EA                     
  2130                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2131   0041EA  ECE2  F022         	call	_I2C_2_Master_Start	;wreg free
  2132                           
  2133                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2134   0041EE  0E52               	movlw	82
  2135   0041F0  ECC6  F022         	call	_I2C_2_Master_Write
  2136                           
  2137                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2138   0041F4  0EB6               	movlw	182
  2139   0041F6  ECC6  F022         	call	_I2C_2_Master_Write
  2140                           
  2141                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2142   0041FA  ECD8  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2143                           
  2144                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2145   0041FE  0E53               	movlw	83
  2146   004200  ECC6  F022         	call	_I2C_2_Master_Write
  2147                           
  2148                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2149   004204  0E01               	movlw	1
  2150   004206  ECDD  F021         	call	_I2C_2_Master_Read
  2151   00420A  6E07               	movwf	??_color_read_Red^0,c
  2152   00420C  5007               	movf	??_color_read_Red^0,w,c
  2153   00420E  6E0A               	movwf	color_read_Red@tmp^0,c
  2154   004210  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2155                           
  2156                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2157   004212  0E00               	movlw	0
  2158   004214  ECDD  F021         	call	_I2C_2_Master_Read
  2159   004218  6E07               	movwf	??_color_read_Red^0,c
  2160   00421A  5007               	movf	??_color_read_Red^0,w,c
  2161   00421C  6E09               	movwf	(??_color_read_Red+2)^0,c
  2162   00421E  6A08               	clrf	(??_color_read_Red+1)^0,c
  2163   004220  500A               	movf	color_read_Red@tmp^0,w,c
  2164   004222  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2165   004224  6E0A               	movwf	color_read_Red@tmp^0,c
  2166   004226  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2167   004228  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2168   00422A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2169                           
  2170                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2171   00422C  ECDD  F022         	call	_I2C_2_Master_Stop	;wreg free
  2172   004230                     
  2173                           ;colorclick.c: 49:  return tmp;
  2174   004230  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2175   004234  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2176   004238  0012               	return		;funcret
  2177   00423A                     __end_of_color_read_Red:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _color_read_Green *****************
  2181 ;; Defined at:
  2182 ;;		line 51 in file "colorclick.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  tmp             2    9[COMRAM] unsigned int 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2    4[COMRAM] unsigned int 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;Total ram usage:        7 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 3
  2203 ;; This function calls:
  2204 ;;		_I2C_2_Master_Read
  2205 ;;		_I2C_2_Master_RepStart
  2206 ;;		_I2C_2_Master_Start
  2207 ;;		_I2C_2_Master_Stop
  2208 ;;		_I2C_2_Master_Write
  2209 ;; This function is called by:
  2210 ;;		_colour_read_all
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text7
  2215   00423A                     __ptext7:
  2216                           	callstack 0
  2217   00423A                     _color_read_Green:
  2218                           	callstack 26
  2219   00423A                     
  2220                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2221   00423A  ECE2  F022         	call	_I2C_2_Master_Start	;wreg free
  2222                           
  2223                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2224   00423E  0E52               	movlw	82
  2225   004240  ECC6  F022         	call	_I2C_2_Master_Write
  2226                           
  2227                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2228   004244  0EB8               	movlw	184
  2229   004246  ECC6  F022         	call	_I2C_2_Master_Write
  2230                           
  2231                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2232   00424A  ECD8  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2233                           
  2234                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2235   00424E  0E53               	movlw	83
  2236   004250  ECC6  F022         	call	_I2C_2_Master_Write
  2237                           
  2238                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2239   004254  0E01               	movlw	1
  2240   004256  ECDD  F021         	call	_I2C_2_Master_Read
  2241   00425A  6E07               	movwf	??_color_read_Green^0,c
  2242   00425C  5007               	movf	??_color_read_Green^0,w,c
  2243   00425E  6E0A               	movwf	color_read_Green@tmp^0,c
  2244   004260  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2245                           
  2246                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2247   004262  0E00               	movlw	0
  2248   004264  ECDD  F021         	call	_I2C_2_Master_Read
  2249   004268  6E07               	movwf	??_color_read_Green^0,c
  2250   00426A  5007               	movf	??_color_read_Green^0,w,c
  2251   00426C  6E09               	movwf	(??_color_read_Green+2)^0,c
  2252   00426E  6A08               	clrf	(??_color_read_Green+1)^0,c
  2253   004270  500A               	movf	color_read_Green@tmp^0,w,c
  2254   004272  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2255   004274  6E0A               	movwf	color_read_Green@tmp^0,c
  2256   004276  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2257   004278  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2258   00427A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2259                           
  2260                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2261   00427C  ECDD  F022         	call	_I2C_2_Master_Stop	;wreg free
  2262   004280                     
  2263                           ;colorclick.c: 62:     return tmp;
  2264   004280  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2265   004284  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2266   004288  0012               	return		;funcret
  2267   00428A                     __end_of_color_read_Green:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _color_read_Clear *****************
  2271 ;; Defined at:
  2272 ;;		line 80 in file "colorclick.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  tmp             2    9[COMRAM] unsigned int 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    4[COMRAM] unsigned int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;Total ram usage:        7 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 3
  2293 ;; This function calls:
  2294 ;;		_I2C_2_Master_Read
  2295 ;;		_I2C_2_Master_RepStart
  2296 ;;		_I2C_2_Master_Start
  2297 ;;		_I2C_2_Master_Stop
  2298 ;;		_I2C_2_Master_Write
  2299 ;; This function is called by:
  2300 ;;		_colour_read_all
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text8
  2305   00428A                     __ptext8:
  2306                           	callstack 0
  2307   00428A                     _color_read_Clear:
  2308                           	callstack 26
  2309   00428A                     
  2310                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2311   00428A  ECE2  F022         	call	_I2C_2_Master_Start	;wreg free
  2312                           
  2313                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2314   00428E  0E52               	movlw	82
  2315   004290  ECC6  F022         	call	_I2C_2_Master_Write
  2316                           
  2317                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2318   004294  0EB4               	movlw	180
  2319   004296  ECC6  F022         	call	_I2C_2_Master_Write
  2320                           
  2321                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2322   00429A  ECD8  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2323                           
  2324                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2325   00429E  0E53               	movlw	83
  2326   0042A0  ECC6  F022         	call	_I2C_2_Master_Write
  2327                           
  2328                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2329   0042A4  0E01               	movlw	1
  2330   0042A6  ECDD  F021         	call	_I2C_2_Master_Read
  2331   0042AA  6E07               	movwf	??_color_read_Clear^0,c
  2332   0042AC  5007               	movf	??_color_read_Clear^0,w,c
  2333   0042AE  6E0A               	movwf	color_read_Clear@tmp^0,c
  2334   0042B0  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2335                           
  2336                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2337   0042B2  0E00               	movlw	0
  2338   0042B4  ECDD  F021         	call	_I2C_2_Master_Read
  2339   0042B8  6E07               	movwf	??_color_read_Clear^0,c
  2340   0042BA  5007               	movf	??_color_read_Clear^0,w,c
  2341   0042BC  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2342   0042BE  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2343   0042C0  500A               	movf	color_read_Clear@tmp^0,w,c
  2344   0042C2  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2345   0042C4  6E0A               	movwf	color_read_Clear@tmp^0,c
  2346   0042C6  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2347   0042C8  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2348   0042CA  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2349                           
  2350                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2351   0042CC  ECDD  F022         	call	_I2C_2_Master_Stop	;wreg free
  2352   0042D0                     
  2353                           ;colorclick.c: 91:     return tmp;
  2354   0042D0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2355   0042D4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2356   0042D8  0012               	return		;funcret
  2357   0042DA                     __end_of_color_read_Clear:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _color_read_Blue *****************
  2361 ;; Defined at:
  2362 ;;		line 65 in file "colorclick.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  tmp             2    9[COMRAM] unsigned int 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  2    4[COMRAM] unsigned int 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;Total ram usage:        7 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 3
  2383 ;; This function calls:
  2384 ;;		_I2C_2_Master_Read
  2385 ;;		_I2C_2_Master_RepStart
  2386 ;;		_I2C_2_Master_Start
  2387 ;;		_I2C_2_Master_Stop
  2388 ;;		_I2C_2_Master_Write
  2389 ;; This function is called by:
  2390 ;;		_colour_read_all
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text9
  2395   0042DA                     __ptext9:
  2396                           	callstack 0
  2397   0042DA                     _color_read_Blue:
  2398                           	callstack 26
  2399   0042DA                     
  2400                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2401   0042DA  ECE2  F022         	call	_I2C_2_Master_Start	;wreg free
  2402                           
  2403                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2404   0042DE  0E52               	movlw	82
  2405   0042E0  ECC6  F022         	call	_I2C_2_Master_Write
  2406                           
  2407                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2408   0042E4  0EBA               	movlw	186
  2409   0042E6  ECC6  F022         	call	_I2C_2_Master_Write
  2410                           
  2411                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2412   0042EA  ECD8  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2413                           
  2414                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2415   0042EE  0E53               	movlw	83
  2416   0042F0  ECC6  F022         	call	_I2C_2_Master_Write
  2417                           
  2418                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2419   0042F4  0E01               	movlw	1
  2420   0042F6  ECDD  F021         	call	_I2C_2_Master_Read
  2421   0042FA  6E07               	movwf	??_color_read_Blue^0,c
  2422   0042FC  5007               	movf	??_color_read_Blue^0,w,c
  2423   0042FE  6E0A               	movwf	color_read_Blue@tmp^0,c
  2424   004300  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2425                           
  2426                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2427   004302  0E00               	movlw	0
  2428   004304  ECDD  F021         	call	_I2C_2_Master_Read
  2429   004308  6E07               	movwf	??_color_read_Blue^0,c
  2430   00430A  5007               	movf	??_color_read_Blue^0,w,c
  2431   00430C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2432   00430E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2433   004310  500A               	movf	color_read_Blue@tmp^0,w,c
  2434   004312  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2435   004314  6E0A               	movwf	color_read_Blue@tmp^0,c
  2436   004316  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2437   004318  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2438   00431A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2439                           
  2440                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2441   00431C  ECDD  F022         	call	_I2C_2_Master_Stop	;wreg free
  2442   004320                     
  2443                           ;colorclick.c: 76:     return tmp;
  2444   004320  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2445   004324  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2446   004328  0012               	return		;funcret
  2447   00432A                     __end_of_color_read_Blue:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _I2C_2_Master_RepStart *****************
  2451 ;; Defined at:
  2452 ;;		line 33 in file "i2c.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 2
  2473 ;; This function calls:
  2474 ;;		_I2C_2_Master_Idle
  2475 ;; This function is called by:
  2476 ;;		_color_read_Red
  2477 ;;		_color_read_Green
  2478 ;;		_color_read_Blue
  2479 ;;		_color_read_Clear
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text10
  2484   0045B0                     __ptext10:
  2485                           	callstack 0
  2486   0045B0                     _I2C_2_Master_RepStart:
  2487                           	callstack 26
  2488   0045B0                     
  2489                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2490   0045B0  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2491   0045B4                     
  2492                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2493   0045B4  010E               	movlb	14	; () banked
  2494   0045B6  83DA               	bsf	218,1,b	;volatile
  2495   0045B8                     
  2496                           ; BSR set to: 14
  2497   0045B8  0012               	return		;funcret
  2498   0045BA                     __end_of_I2C_2_Master_RepStart:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _I2C_2_Master_Read *****************
  2502 ;; Defined at:
  2503 ;;		line 51 in file "i2c.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  ack             1    wreg     unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  ack             1    2[COMRAM] unsigned char 
  2508 ;;  tmp             1    3[COMRAM] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      unsigned char 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;Total ram usage:        3 bytes
  2523 ;; Hardware stack levels used: 1
  2524 ;; Hardware stack levels required when called: 2
  2525 ;; This function calls:
  2526 ;;		_I2C_2_Master_Idle
  2527 ;; This function is called by:
  2528 ;;		_color_read_Red
  2529 ;;		_color_read_Green
  2530 ;;		_color_read_Blue
  2531 ;;		_color_read_Clear
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text11
  2536   0043BA                     __ptext11:
  2537                           	callstack 0
  2538   0043BA                     _I2C_2_Master_Read:
  2539                           	callstack 26
  2540                           
  2541                           ; BSR set to: 14
  2542                           ;incstack = 0
  2543                           ;I2C_2_Master_Read@ack stored from wreg
  2544   0043BA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2545   0043BC                     
  2546                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2547   0043BC  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2548   0043C0                     
  2549                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2550   0043C0  010E               	movlb	14	; () banked
  2551   0043C2  87DA               	bsf	218,3,b	;volatile
  2552                           
  2553                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2554   0043C4  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2555   0043C8                     
  2556                           ;i2c.c: 57:   tmp = SSP2BUF;
  2557   0043C8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2558                           
  2559                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2560   0043CC  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2561   0043D0                     
  2562                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2563   0043D0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2564   0043D2  B4D8               	btfsc	status,2,c
  2565   0043D4  EFEE  F021         	goto	u2341
  2566   0043D8  EFF2  F021         	goto	u2340
  2567   0043DC                     u2341:
  2568   0043DC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2569   0043DE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2570   0043E0  EFF3  F021         	goto	u2358
  2571   0043E4                     u2340:
  2572   0043E4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2573   0043E6                     u2358:
  2574   0043E6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2575   0043E8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2576   0043EA  010E               	movlb	14	; () banked
  2577   0043EC  51DA               	movf	218,w,b	;volatile
  2578   0043EE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2579   0043F0  0BDF               	andlw	-33
  2580   0043F2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2581   0043F4  6FDA               	movwf	218,b	;volatile
  2582   0043F6                     
  2583                           ; BSR set to: 14
  2584                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2585   0043F6  89DA               	bsf	218,4,b	;volatile
  2586   0043F8                     
  2587                           ; BSR set to: 14
  2588                           ;i2c.c: 61:   return tmp;
  2589   0043F8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2590   0043FA                     
  2591                           ; BSR set to: 14
  2592   0043FA  0012               	return		;funcret
  2593   0043FC                     __end_of_I2C_2_Master_Read:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _color_click_init *****************
  2597 ;; Defined at:
  2598 ;;		line 6 in file "colorclick.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;Total ram usage:        1 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 4
  2619 ;; This function calls:
  2620 ;;		_I2C_2_Master_Init
  2621 ;;		_color_writetoaddr
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628   0043FC                     __ptext12:
  2629                           	callstack 0
  2630   0043FC                     _color_click_init:
  2631                           	callstack 26
  2632   0043FC                     
  2633                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2634   0043FC  EC50  F022         	call	_I2C_2_Master_Init	;wreg free
  2635   004400                     
  2636                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2637   004400  0E01               	movlw	1
  2638   004402  6E03               	movwf	color_writetoaddr@value^0,c
  2639   004404  0E00               	movlw	0
  2640   004406  ECAF  F022         	call	_color_writetoaddr
  2641   00440A                     
  2642                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2643   00440A  0E3F               	movlw	63
  2644   00440C  6E05               	movwf	??_color_click_init^0,c
  2645   00440E  0E55               	movlw	85
  2646   004410                     u3807:
  2647   004410  2EE8               	decfsz	wreg,f,c
  2648   004412  D7FE               	bra	u3807
  2649   004414  2E05               	decfsz	??_color_click_init^0,f,c
  2650   004416  D7FC               	bra	u3807
  2651   004418  F000               	nop	
  2652   00441A                     
  2653                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2654   00441A  0E03               	movlw	3
  2655   00441C  6E03               	movwf	color_writetoaddr@value^0,c
  2656   00441E  0E00               	movlw	0
  2657   004420  ECAF  F022         	call	_color_writetoaddr
  2658   004424                     
  2659                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2660   004424  0ED6               	movlw	214
  2661   004426  6E03               	movwf	color_writetoaddr@value^0,c
  2662   004428  0E01               	movlw	1
  2663   00442A  ECAF  F022         	call	_color_writetoaddr
  2664   00442E                     
  2665                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2666   00442E  927F               	bcf	127,1,c	;volatile
  2667   004430                     
  2668                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2669   004430  9287               	bcf	135,1,c	;volatile
  2670   004432                     
  2671                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2672   004432  9879               	bcf	121,4,c	;volatile
  2673   004434                     
  2674                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2675   004434  9881               	bcf	129,4,c	;volatile
  2676   004436                     
  2677                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2678   004436  9E7E               	bcf	126,7,c	;volatile
  2679   004438                     
  2680                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2681   004438  9E86               	bcf	134,7,c	;volatile
  2682   00443A  0012               	return		;funcret
  2683   00443C                     __end_of_color_click_init:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _color_writetoaddr *****************
  2687 ;; Defined at:
  2688 ;;		line 30 in file "colorclick.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  address         1    wreg     unsigned char 
  2691 ;;  value           1    2[COMRAM] unsigned char 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  address         1    3[COMRAM] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;Total ram usage:        2 bytes
  2708 ;; Hardware stack levels used: 1
  2709 ;; Hardware stack levels required when called: 3
  2710 ;; This function calls:
  2711 ;;		_I2C_2_Master_Start
  2712 ;;		_I2C_2_Master_Stop
  2713 ;;		_I2C_2_Master_Write
  2714 ;; This function is called by:
  2715 ;;		_color_click_init
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text13
  2720   00455E                     __ptext13:
  2721                           	callstack 0
  2722   00455E                     _color_writetoaddr:
  2723                           	callstack 26
  2724                           
  2725                           ;incstack = 0
  2726                           ;color_writetoaddr@address stored from wreg
  2727   00455E  6E04               	movwf	color_writetoaddr@address^0,c
  2728   004560                     
  2729                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2730   004560  ECE2  F022         	call	_I2C_2_Master_Start	;wreg free
  2731                           
  2732                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2733   004564  0E52               	movlw	82
  2734   004566  ECC6  F022         	call	_I2C_2_Master_Write
  2735                           
  2736                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2737   00456A  5004               	movf	color_writetoaddr@address^0,w,c
  2738   00456C  0980               	iorlw	128
  2739   00456E  ECC6  F022         	call	_I2C_2_Master_Write
  2740                           
  2741                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2742   004572  5003               	movf	color_writetoaddr@value^0,w,c
  2743   004574  ECC6  F022         	call	_I2C_2_Master_Write
  2744                           
  2745                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2746   004578  ECDD  F022         	call	_I2C_2_Master_Stop	;wreg free
  2747   00457C  0012               	return		;funcret
  2748   00457E                     __end_of_color_writetoaddr:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _I2C_2_Master_Write *****************
  2752 ;; Defined at:
  2753 ;;		line 45 in file "i2c.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  data_byte       1    wreg     unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  data_byte       1    1[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;Total ram usage:        1 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 2
  2774 ;; This function calls:
  2775 ;;		_I2C_2_Master_Idle
  2776 ;; This function is called by:
  2777 ;;		_color_writetoaddr
  2778 ;;		_color_read_Red
  2779 ;;		_color_read_Green
  2780 ;;		_color_read_Blue
  2781 ;;		_color_read_Clear
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text14
  2786   00458C                     __ptext14:
  2787                           	callstack 0
  2788   00458C                     _I2C_2_Master_Write:
  2789                           	callstack 26
  2790                           
  2791                           ;incstack = 0
  2792                           ;I2C_2_Master_Write@data_byte stored from wreg
  2793   00458C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2794   00458E                     
  2795                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2796   00458E  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2797   004592                     
  2798                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2799   004592  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2800   004596  0012               	return		;funcret
  2801   004598                     __end_of_I2C_2_Master_Write:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _I2C_2_Master_Stop *****************
  2805 ;; Defined at:
  2806 ;;		line 39 in file "i2c.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		_I2C_2_Master_Idle
  2829 ;; This function is called by:
  2830 ;;		_color_writetoaddr
  2831 ;;		_color_read_Red
  2832 ;;		_color_read_Green
  2833 ;;		_color_read_Blue
  2834 ;;		_color_read_Clear
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text15
  2839   0045BA                     __ptext15:
  2840                           	callstack 0
  2841   0045BA                     _I2C_2_Master_Stop:
  2842                           	callstack 26
  2843   0045BA                     
  2844                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2845   0045BA  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2846   0045BE                     
  2847                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2848   0045BE  010E               	movlb	14	; () banked
  2849   0045C0  85DA               	bsf	218,2,b	;volatile
  2850   0045C2                     
  2851                           ; BSR set to: 14
  2852   0045C2  0012               	return		;funcret
  2853   0045C4                     __end_of_I2C_2_Master_Stop:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _I2C_2_Master_Start *****************
  2857 ;; Defined at:
  2858 ;;		line 27 in file "i2c.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;		None
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;Total ram usage:        0 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 2
  2879 ;; This function calls:
  2880 ;;		_I2C_2_Master_Idle
  2881 ;; This function is called by:
  2882 ;;		_color_writetoaddr
  2883 ;;		_color_read_Red
  2884 ;;		_color_read_Green
  2885 ;;		_color_read_Blue
  2886 ;;		_color_read_Clear
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text16
  2891   0045C4                     __ptext16:
  2892                           	callstack 0
  2893   0045C4                     _I2C_2_Master_Start:
  2894                           	callstack 26
  2895   0045C4                     
  2896                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2897   0045C4  EC65  F022         	call	_I2C_2_Master_Idle	;wreg free
  2898   0045C8                     
  2899                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2900   0045C8  010E               	movlb	14	; () banked
  2901   0045CA  81DA               	bsf	218,0,b	;volatile
  2902   0045CC                     
  2903                           ; BSR set to: 14
  2904   0045CC  0012               	return		;funcret
  2905   0045CE                     __end_of_I2C_2_Master_Start:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _I2C_2_Master_Idle *****************
  2909 ;; Defined at:
  2910 ;;		line 22 in file "i2c.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_I2C_2_Master_Start
  2935 ;;		_I2C_2_Master_RepStart
  2936 ;;		_I2C_2_Master_Stop
  2937 ;;		_I2C_2_Master_Write
  2938 ;;		_I2C_2_Master_Read
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text17
  2943   0044CA                     __ptext17:
  2944                           	callstack 0
  2945   0044CA                     _I2C_2_Master_Idle:
  2946                           	callstack 26
  2947   0044CA                     l193:
  2948   0044CA  010E               	movlb	14	; () banked
  2949   0044CC  B5D8               	btfsc	216,2,b	;volatile
  2950   0044CE  EF6B  F022         	goto	u2031
  2951   0044D2  EF6D  F022         	goto	u2030
  2952   0044D6                     u2031:
  2953   0044D6  EF65  F022         	goto	l193
  2954   0044DA                     u2030:
  2955   0044DA                     
  2956                           ; BSR set to: 14
  2957   0044DA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2958   0044DE  0E1F               	movlw	31
  2959   0044E0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2960   0044E2  A4D8               	btfss	status,2,c
  2961   0044E4  EF76  F022         	goto	u2041
  2962   0044E8  EF78  F022         	goto	u2040
  2963   0044EC                     u2041:
  2964   0044EC  EF65  F022         	goto	l193
  2965   0044F0                     u2040:
  2966   0044F0                     
  2967                           ; BSR set to: 14
  2968   0044F0  0012               	return		;funcret
  2969   0044F2                     __end_of_I2C_2_Master_Idle:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _I2C_2_Master_Init *****************
  2973 ;; Defined at:
  2974 ;;		line 4 in file "i2c.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_color_click_init
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text18
  3004   0044A0                     __ptext18:
  3005                           	callstack 0
  3006   0044A0                     _I2C_2_Master_Init:
  3007                           	callstack 28
  3008   0044A0                     
  3009                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3010   0044A0  010E               	movlb	14	; () banked
  3011   0044A2  51D9               	movf	217,w,b	;volatile
  3012   0044A4  0BF0               	andlw	-16
  3013   0044A6  0908               	iorlw	8
  3014   0044A8  6FD9               	movwf	217,b	;volatile
  3015   0044AA                     
  3016                           ; BSR set to: 14
  3017                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3018   0044AA  8BD9               	bsf	217,5,b	;volatile
  3019                           
  3020                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3021   0044AC  0E9F               	movlw	159
  3022   0044AE  6FD6               	movwf	214,b	;volatile
  3023   0044B0                     
  3024                           ; BSR set to: 14
  3025                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3026   0044B0  8A84               	bsf	132,5,c	;volatile
  3027   0044B2                     
  3028                           ; BSR set to: 14
  3029                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3030   0044B2  8C84               	bsf	132,6,c	;volatile
  3031   0044B4                     
  3032                           ; BSR set to: 14
  3033                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3034   0044B4  9BA7               	bcf	167,5,b	;volatile
  3035   0044B6                     
  3036                           ; BSR set to: 14
  3037                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3038   0044B6  9DA7               	bcf	167,6,b	;volatile
  3039                           
  3040                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3041   0044B8  0E1D               	movlw	29
  3042   0044BA  6F1D               	movwf	29,b	;volatile
  3043                           
  3044                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3045   0044BC  0E1E               	movlw	30
  3046   0044BE  6F1C               	movwf	28,b	;volatile
  3047                           
  3048                           ;i2c.c: 18:   RD5PPS=0x1C;
  3049   0044C0  0E1C               	movlw	28
  3050   0044C2  6F6F               	movwf	111,b	;volatile
  3051                           
  3052                           ;i2c.c: 19:   RD6PPS=0x1B;
  3053   0044C4  0E1B               	movlw	27
  3054   0044C6  6F70               	movwf	112,b	;volatile
  3055   0044C8                     
  3056                           ; BSR set to: 14
  3057   0044C8  0012               	return		;funcret
  3058   0044CA                     __end_of_I2C_2_Master_Init:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _Timer0_init *****************
  3062 ;; Defined at:
  3063 ;;		line 7 in file "timer.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text19
  3092   004518                     __ptext19:
  3093                           	callstack 0
  3094   004518                     _Timer0_init:
  3095                           	callstack 29
  3096   004518                     
  3097                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3098   004518  50D6               	movf	214,w,c	;volatile
  3099   00451A  0B1F               	andlw	-225
  3100   00451C  0940               	iorlw	64
  3101   00451E  6ED6               	movwf	214,c	;volatile
  3102   004520                     
  3103                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3104   004520  88D6               	bsf	214,4,c	;volatile
  3105                           
  3106                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3107   004522  50D6               	movf	214,w,c	;volatile
  3108   004524  0BF0               	andlw	-16
  3109   004526  090D               	iorlw	13
  3110   004528  6ED6               	movwf	214,c	;volatile
  3111   00452A                     
  3112                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3113   00452A  88D5               	bsf	213,4,c	;volatile
  3114   00452C                     
  3115                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3116   00452C  010E               	movlb	14	; () banked
  3117   00452E  8B29               	bsf	41,5,b	;volatile
  3118                           
  3119                           ;timer.c: 17:     TMR0H=0;
  3120   004530  0E00               	movlw	0
  3121   004532  6ED4               	movwf	212,c	;volatile
  3122                           
  3123                           ;timer.c: 18:     TMR0L=0;
  3124   004534  0E00               	movlw	0
  3125   004536  6ED3               	movwf	211,c	;volatile
  3126   004538                     
  3127                           ; BSR set to: 14
  3128                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3129   004538  8ED5               	bsf	213,7,c	;volatile
  3130   00453A                     
  3131                           ; BSR set to: 14
  3132   00453A  0012               	return		;funcret
  3133   00453C                     __end_of_Timer0_init:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _RGB2Hue *****************
  3137 ;; Defined at:
  3138 ;;		line 26 in file "colorfunctions.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  3141 ;;		 -> colorf(22), 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  min             2   25[BANK0 ] int 
  3144 ;;  max             2   23[BANK0 ] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;Total ram usage:       14 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 3
  3161 ;; This function calls:
  3162 ;;		___fladd
  3163 ;;		___fldiv
  3164 ;;		___fleq
  3165 ;;		___flge
  3166 ;;		___flmul
  3167 ;;		___flsub
  3168 ;;		___fltol
  3169 ;;		___xxtofl
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text20
  3176   000E66                     __ptext20:
  3177                           	callstack 0
  3178   000E66                     _RGB2Hue:
  3179                           	callstack 27
  3180   000E66                     
  3181                           ;colorfunctions.c: 27:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3182   000E66  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3183   000E6A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3184   000E6E  CFDE F001          	movff	postinc2,___fleq@ff1
  3185   000E72  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3186   000E76  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3187   000E7A  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3188   000E7E  0100               	movlb	0	; () banked
  3189   000E80  EE20 F004          	lfsr	2,4
  3190   000E84  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3191   000E86  26D9               	addwf	fsr2l,f,c
  3192   000E88  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3193   000E8A  22DA               	addwfc	fsr2h,f,c
  3194   000E8C  CFDE F005          	movff	postinc2,___fleq@ff2
  3195   000E90  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3196   000E94  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3197   000E98  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3198   000E9C  EC52  F01B         	call	___fleq	;wreg free
  3199   000EA0  A0D8               	btfss	status,0,c
  3200   000EA2  EF55  F007         	goto	u3371
  3201   000EA6  EF57  F007         	goto	u3370
  3202   000EAA                     u3371:
  3203   000EAA  EF8C  F007         	goto	l3865
  3204   000EAE                     u3370:
  3205   000EAE  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3206   000EB2  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3207   000EB6  CFDE F001          	movff	postinc2,___fleq@ff1
  3208   000EBA  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3209   000EBE  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3210   000EC2  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3211   000EC6  0100               	movlb	0	; () banked
  3212   000EC8  EE20 F008          	lfsr	2,8
  3213   000ECC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3214   000ECE  26D9               	addwf	fsr2l,f,c
  3215   000ED0  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3216   000ED2  22DA               	addwfc	fsr2h,f,c
  3217   000ED4  CFDE F005          	movff	postinc2,___fleq@ff2
  3218   000ED8  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3219   000EDC  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3220   000EE0  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3221   000EE4  EC52  F01B         	call	___fleq	;wreg free
  3222   000EE8  A0D8               	btfss	status,0,c
  3223   000EEA  EF79  F007         	goto	u3381
  3224   000EEE  EF7B  F007         	goto	u3380
  3225   000EF2                     u3381:
  3226   000EF2  EF8C  F007         	goto	l3865
  3227   000EF6                     u3380:
  3228   000EF6                     
  3229                           ;colorfunctions.c: 28:         cf->h=0;
  3230   000EF6  0100               	movlb	0	; () banked
  3231   000EF8  EE20 F010          	lfsr	2,16
  3232   000EFC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3233   000EFE  26D9               	addwf	fsr2l,f,c
  3234   000F00  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3235   000F02  22DA               	addwfc	fsr2h,f,c
  3236   000F04  0E00               	movlw	0
  3237   000F06  6EDE               	movwf	postinc2,c
  3238   000F08  0E00               	movlw	0
  3239   000F0A  6EDE               	movwf	postinc2,c
  3240   000F0C  0E00               	movlw	0
  3241   000F0E  6EDE               	movwf	postinc2,c
  3242   000F10  0E00               	movlw	0
  3243   000F12  6EDD               	movwf	postdec2,c
  3244                           
  3245                           ;colorfunctions.c: 29:     } else{
  3246   000F14  EFC8  F00A         	goto	l123
  3247   000F18                     l3865:
  3248                           
  3249                           ;colorfunctions.c: 31:         signed int min=0;
  3250   000F18  0E00               	movlw	0
  3251   000F1A  0100               	movlb	0	; () banked
  3252   000F1C  6FDC               	movwf	(RGB2Hue@min+1)& (0+255),b
  3253   000F1E  0E00               	movlw	0
  3254   000F20  6FDB               	movwf	RGB2Hue@min& (0+255),b
  3255   000F22                     
  3256                           ; BSR set to: 0
  3257                           ;colorfunctions.c: 33:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3258   000F22  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3259   000F26  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3260   000F2A  CFDE F04B          	movff	postinc2,___flge@ff1
  3261   000F2E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3262   000F32  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3263   000F36  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3264   000F3A  EE20 F004          	lfsr	2,4
  3265   000F3E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3266   000F40  26D9               	addwf	fsr2l,f,c
  3267   000F42  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3268   000F44  22DA               	addwfc	fsr2h,f,c
  3269   000F46  CFDE F04F          	movff	postinc2,___flge@ff2
  3270   000F4A  CFDE F050          	movff	postinc2,___flge@ff2+1
  3271   000F4E  CFDE F051          	movff	postinc2,___flge@ff2+2
  3272   000F52  CFDE F052          	movff	postinc2,___flge@ff2+3
  3273   000F56  ECD0  F01A         	call	___flge	;wreg free
  3274   000F5A  B0D8               	btfsc	status,0,c
  3275   000F5C  EFB2  F007         	goto	u3391
  3276   000F60  EFB4  F007         	goto	u3390
  3277   000F64                     u3391:
  3278   000F64  EFEC  F007         	goto	l3873
  3279   000F68                     u3390:
  3280   000F68  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3281   000F6C  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3282   000F70  CFDE F04B          	movff	postinc2,___flge@ff1
  3283   000F74  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3284   000F78  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3285   000F7C  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3286   000F80  0100               	movlb	0	; () banked
  3287   000F82  EE20 F008          	lfsr	2,8
  3288   000F86  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3289   000F88  26D9               	addwf	fsr2l,f,c
  3290   000F8A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3291   000F8C  22DA               	addwfc	fsr2h,f,c
  3292   000F8E  CFDE F04F          	movff	postinc2,___flge@ff2
  3293   000F92  CFDE F050          	movff	postinc2,___flge@ff2+1
  3294   000F96  CFDE F051          	movff	postinc2,___flge@ff2+2
  3295   000F9A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3296   000F9E  ECD0  F01A         	call	___flge	;wreg free
  3297   000FA2  B0D8               	btfsc	status,0,c
  3298   000FA4  EFD6  F007         	goto	u3401
  3299   000FA8  EFD8  F007         	goto	u3400
  3300   000FAC                     u3401:
  3301   000FAC  EFEC  F007         	goto	l3873
  3302   000FB0                     u3400:
  3303   000FB0                     
  3304                           ;colorfunctions.c: 34:             min=cf->Rf;
  3305   000FB0  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3306   000FB4  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3307   000FB8  CFDE F001          	movff	postinc2,___fltol@f1
  3308   000FBC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3309   000FC0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3310   000FC4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3311   000FC8  EC4D  F01A         	call	___fltol	;wreg free
  3312   000FCC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3313   000FD0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3314                           
  3315                           ;colorfunctions.c: 35:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3316   000FD4  EF62  F008         	goto	l115
  3317   000FD8                     l3873:
  3318   000FD8  0100               	movlb	0	; () banked
  3319   000FDA  EE20 F004          	lfsr	2,4
  3320   000FDE  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3321   000FE0  26D9               	addwf	fsr2l,f,c
  3322   000FE2  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3323   000FE4  22DA               	addwfc	fsr2h,f,c
  3324   000FE6  CFDE F04B          	movff	postinc2,___flge@ff1
  3325   000FEA  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3326   000FEE  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3327   000FF2  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3328   000FF6  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3329   000FFA  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3330   000FFE  CFDE F04F          	movff	postinc2,___flge@ff2
  3331   001002  CFDE F050          	movff	postinc2,___flge@ff2+1
  3332   001006  CFDE F051          	movff	postinc2,___flge@ff2+2
  3333   00100A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3334   00100E  ECD0  F01A         	call	___flge	;wreg free
  3335   001012  B0D8               	btfsc	status,0,c
  3336   001014  EF0E  F008         	goto	u3411
  3337   001018  EF10  F008         	goto	u3410
  3338   00101C                     u3411:
  3339   00101C  EF4D  F008         	goto	l3879
  3340   001020                     u3410:
  3341   001020  0100               	movlb	0	; () banked
  3342   001022  EE20 F004          	lfsr	2,4
  3343   001026  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3344   001028  26D9               	addwf	fsr2l,f,c
  3345   00102A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3346   00102C  22DA               	addwfc	fsr2h,f,c
  3347   00102E  CFDE F04B          	movff	postinc2,___flge@ff1
  3348   001032  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3349   001036  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3350   00103A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3351   00103E  EE20 F008          	lfsr	2,8
  3352   001042  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3353   001044  26D9               	addwf	fsr2l,f,c
  3354   001046  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3355   001048  22DA               	addwfc	fsr2h,f,c
  3356   00104A  CFDE F04F          	movff	postinc2,___flge@ff2
  3357   00104E  CFDE F050          	movff	postinc2,___flge@ff2+1
  3358   001052  CFDE F051          	movff	postinc2,___flge@ff2+2
  3359   001056  CFDE F052          	movff	postinc2,___flge@ff2+3
  3360   00105A  ECD0  F01A         	call	___flge	;wreg free
  3361   00105E  B0D8               	btfsc	status,0,c
  3362   001060  EF34  F008         	goto	u3421
  3363   001064  EF36  F008         	goto	u3420
  3364   001068                     u3421:
  3365   001068  EF4D  F008         	goto	l3879
  3366   00106C                     u3420:
  3367   00106C                     
  3368                           ;colorfunctions.c: 36:             min=cf->Gf;
  3369   00106C  0100               	movlb	0	; () banked
  3370   00106E  EE20 F004          	lfsr	2,4
  3371   001072  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3372   001074  26D9               	addwf	fsr2l,f,c
  3373   001076  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3374   001078  22DA               	addwfc	fsr2h,f,c
  3375   00107A  CFDE F001          	movff	postinc2,___fltol@f1
  3376   00107E  CFDE F002          	movff	postinc2,___fltol@f1+1
  3377   001082  CFDE F003          	movff	postinc2,___fltol@f1+2
  3378   001086  CFDE F004          	movff	postinc2,___fltol@f1+3
  3379   00108A  EC4D  F01A         	call	___fltol	;wreg free
  3380   00108E  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3381   001092  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3382                           
  3383                           ;colorfunctions.c: 37:         } else{
  3384   001096  EF62  F008         	goto	l115
  3385   00109A                     l3879:
  3386                           
  3387                           ;colorfunctions.c: 38:             min=cf->Bf;
  3388   00109A  0100               	movlb	0	; () banked
  3389   00109C  EE20 F008          	lfsr	2,8
  3390   0010A0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3391   0010A2  26D9               	addwf	fsr2l,f,c
  3392   0010A4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3393   0010A6  22DA               	addwfc	fsr2h,f,c
  3394   0010A8  CFDE F001          	movff	postinc2,___fltol@f1
  3395   0010AC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3396   0010B0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3397   0010B4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3398   0010B8  EC4D  F01A         	call	___fltol	;wreg free
  3399   0010BC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3400   0010C0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3401   0010C4                     l115:
  3402                           
  3403                           ;colorfunctions.c: 41:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3404   0010C4  0100               	movlb	0	; () banked
  3405   0010C6  EE20 F004          	lfsr	2,4
  3406   0010CA  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3407   0010CC  26D9               	addwf	fsr2l,f,c
  3408   0010CE  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3409   0010D0  22DA               	addwfc	fsr2h,f,c
  3410   0010D2  CFDE F04B          	movff	postinc2,___flge@ff1
  3411   0010D6  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3412   0010DA  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3413   0010DE  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3414   0010E2  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3415   0010E6  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3416   0010EA  CFDE F04F          	movff	postinc2,___flge@ff2
  3417   0010EE  CFDE F050          	movff	postinc2,___flge@ff2+1
  3418   0010F2  CFDE F051          	movff	postinc2,___flge@ff2+2
  3419   0010F6  CFDE F052          	movff	postinc2,___flge@ff2+3
  3420   0010FA  ECD0  F01A         	call	___flge	;wreg free
  3421   0010FE  B0D8               	btfsc	status,0,c
  3422   001100  EF84  F008         	goto	u3431
  3423   001104  EF86  F008         	goto	u3430
  3424   001108                     u3431:
  3425   001108  EF23  F009         	goto	l3887
  3426   00110C                     u3430:
  3427   00110C  0100               	movlb	0	; () banked
  3428   00110E  EE20 F008          	lfsr	2,8
  3429   001112  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3430   001114  26D9               	addwf	fsr2l,f,c
  3431   001116  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3432   001118  22DA               	addwfc	fsr2h,f,c
  3433   00111A  CFDE F04B          	movff	postinc2,___flge@ff1
  3434   00111E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3435   001122  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3436   001126  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3437   00112A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3438   00112E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3439   001132  CFDE F04F          	movff	postinc2,___flge@ff2
  3440   001136  CFDE F050          	movff	postinc2,___flge@ff2+1
  3441   00113A  CFDE F051          	movff	postinc2,___flge@ff2+2
  3442   00113E  CFDE F052          	movff	postinc2,___flge@ff2+3
  3443   001142  ECD0  F01A         	call	___flge	;wreg free
  3444   001146  B0D8               	btfsc	status,0,c
  3445   001148  EFA8  F008         	goto	u3441
  3446   00114C  EFAA  F008         	goto	u3440
  3447   001150                     u3441:
  3448   001150  EF23  F009         	goto	l3887
  3449   001154                     u3440:
  3450   001154                     
  3451                           ;colorfunctions.c: 42:             max=(cf->Rf);
  3452   001154  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3453   001158  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3454   00115C  CFDE F001          	movff	postinc2,___fltol@f1
  3455   001160  CFDE F002          	movff	postinc2,___fltol@f1+1
  3456   001164  CFDE F003          	movff	postinc2,___fltol@f1+2
  3457   001168  CFDE F004          	movff	postinc2,___fltol@f1+3
  3458   00116C  EC4D  F01A         	call	___fltol	;wreg free
  3459   001170  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3460   001174  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3461   001178                     
  3462                           ;colorfunctions.c: 45:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3463   001178  0100               	movlb	0	; () banked
  3464   00117A  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3465   00117C  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3466   00117E  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3467   001180  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3468   001182  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3469   001184  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3470   001186  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3471   00118A  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3472   00118E  0E00               	movlw	0
  3473   001190  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3474   001192  0EFF               	movlw	-1
  3475   001194  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3476   001196  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3477   001198  0E01               	movlw	1
  3478   00119A  ECBD  F018         	call	___xxtofl
  3479   00119E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3480   0011A2  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3481   0011A6  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3482   0011AA  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3483   0011AE  0100               	movlb	0	; () banked
  3484   0011B0  EE20 F008          	lfsr	2,8
  3485   0011B4  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3486   0011B6  26D9               	addwf	fsr2l,f,c
  3487   0011B8  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3488   0011BA  22DA               	addwfc	fsr2h,f,c
  3489   0011BC  CFDE F04F          	movff	postinc2,___flsub@a
  3490   0011C0  CFDE F050          	movff	postinc2,___flsub@a+1
  3491   0011C4  CFDE F051          	movff	postinc2,___flsub@a+2
  3492   0011C8  CFDE F052          	movff	postinc2,___flsub@a+3
  3493   0011CC  EE20 F004          	lfsr	2,4
  3494   0011D0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3495   0011D2  26D9               	addwf	fsr2l,f,c
  3496   0011D4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3497   0011D6  22DA               	addwfc	fsr2h,f,c
  3498   0011D8  CFDE F04B          	movff	postinc2,___flsub@b
  3499   0011DC  CFDE F04C          	movff	postinc2,___flsub@b+1
  3500   0011E0  CFDE F04D          	movff	postinc2,___flsub@b+2
  3501   0011E4  CFDE F04E          	movff	postinc2,___flsub@b+3
  3502   0011E8  ECBA  F021         	call	___flsub	;wreg free
  3503   0011EC  C04B  F053         	movff	?___flsub,___fldiv@b
  3504   0011F0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3505   0011F4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3506   0011F8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3507   0011FC  ECF4  F013         	call	___fldiv	;wreg free
  3508   001200  C053  F01A         	movff	?___fldiv,___flmul@b
  3509   001204  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3510   001208  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3511   00120C  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3512   001210  0E00               	movlw	0
  3513   001212  6E1E               	movwf	___flmul@a^0,c
  3514   001214  0E00               	movlw	0
  3515   001216  6E1F               	movwf	(___flmul@a+1)^0,c
  3516   001218  0E70               	movlw	112
  3517   00121A  6E20               	movwf	(___flmul@a+2)^0,c
  3518   00121C  0E42               	movlw	66
  3519   00121E  6E21               	movwf	(___flmul@a+3)^0,c
  3520   001220  ECDF  F011         	call	___flmul	;wreg free
  3521   001224  0100               	movlb	0	; () banked
  3522   001226  EE20 F010          	lfsr	2,16
  3523   00122A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3524   00122C  26D9               	addwf	fsr2l,f,c
  3525   00122E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3526   001230  22DA               	addwfc	fsr2h,f,c
  3527   001232  C01A  FFDE         	movff	?___flmul,postinc2
  3528   001236  C01B  FFDE         	movff	?___flmul+1,postinc2
  3529   00123A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3530   00123E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3531                           
  3532                           ;colorfunctions.c: 46:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3533   001242  EF93  F00A         	goto	l3899
  3534   001246                     l3887:
  3535   001246  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3536   00124A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3537   00124E  CFDE F04B          	movff	postinc2,___flge@ff1
  3538   001252  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3539   001256  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3540   00125A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3541   00125E  0100               	movlb	0	; () banked
  3542   001260  EE20 F004          	lfsr	2,4
  3543   001264  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3544   001266  26D9               	addwf	fsr2l,f,c
  3545   001268  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3546   00126A  22DA               	addwfc	fsr2h,f,c
  3547   00126C  CFDE F04F          	movff	postinc2,___flge@ff2
  3548   001270  CFDE F050          	movff	postinc2,___flge@ff2+1
  3549   001274  CFDE F051          	movff	postinc2,___flge@ff2+2
  3550   001278  CFDE F052          	movff	postinc2,___flge@ff2+3
  3551   00127C  ECD0  F01A         	call	___flge	;wreg free
  3552   001280  B0D8               	btfsc	status,0,c
  3553   001282  EF45  F009         	goto	u3451
  3554   001286  EF47  F009         	goto	u3450
  3555   00128A                     u3451:
  3556   00128A  EF01  F00A         	goto	l3895
  3557   00128E                     u3450:
  3558   00128E  0100               	movlb	0	; () banked
  3559   001290  EE20 F008          	lfsr	2,8
  3560   001294  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3561   001296  26D9               	addwf	fsr2l,f,c
  3562   001298  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3563   00129A  22DA               	addwfc	fsr2h,f,c
  3564   00129C  CFDE F04B          	movff	postinc2,___flge@ff1
  3565   0012A0  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3566   0012A4  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3567   0012A8  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3568   0012AC  EE20 F004          	lfsr	2,4
  3569   0012B0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3570   0012B2  26D9               	addwf	fsr2l,f,c
  3571   0012B4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3572   0012B6  22DA               	addwfc	fsr2h,f,c
  3573   0012B8  CFDE F04F          	movff	postinc2,___flge@ff2
  3574   0012BC  CFDE F050          	movff	postinc2,___flge@ff2+1
  3575   0012C0  CFDE F051          	movff	postinc2,___flge@ff2+2
  3576   0012C4  CFDE F052          	movff	postinc2,___flge@ff2+3
  3577   0012C8  ECD0  F01A         	call	___flge	;wreg free
  3578   0012CC  B0D8               	btfsc	status,0,c
  3579   0012CE  EF6B  F009         	goto	u3461
  3580   0012D2  EF6D  F009         	goto	u3460
  3581   0012D6                     u3461:
  3582   0012D6  EF01  F00A         	goto	l3895
  3583   0012DA                     u3460:
  3584   0012DA                     
  3585                           ;colorfunctions.c: 47:             max=cf->Gf;
  3586   0012DA  0100               	movlb	0	; () banked
  3587   0012DC  EE20 F004          	lfsr	2,4
  3588   0012E0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3589   0012E2  26D9               	addwf	fsr2l,f,c
  3590   0012E4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3591   0012E6  22DA               	addwfc	fsr2h,f,c
  3592   0012E8  CFDE F001          	movff	postinc2,___fltol@f1
  3593   0012EC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3594   0012F0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3595   0012F4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3596   0012F8  EC4D  F01A         	call	___fltol	;wreg free
  3597   0012FC  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3598   001300  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3599                           
  3600                           ;colorfunctions.c: 48:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3601   001304  0100               	movlb	0	; () banked
  3602   001306  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3603   001308  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3604   00130A  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3605   00130C  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3606   00130E  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3607   001310  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3608   001312  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3609   001316  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3610   00131A  0E00               	movlw	0
  3611   00131C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3612   00131E  0EFF               	movlw	-1
  3613   001320  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3614   001322  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3615   001324  0E01               	movlw	1
  3616   001326  ECBD  F018         	call	___xxtofl
  3617   00132A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3618   00132E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3619   001332  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3620   001336  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3621   00133A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3622   00133E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3623   001342  CFDE F04F          	movff	postinc2,___flsub@a
  3624   001346  CFDE F050          	movff	postinc2,___flsub@a+1
  3625   00134A  CFDE F051          	movff	postinc2,___flsub@a+2
  3626   00134E  CFDE F052          	movff	postinc2,___flsub@a+3
  3627   001352  0100               	movlb	0	; () banked
  3628   001354  EE20 F008          	lfsr	2,8
  3629   001358  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3630   00135A  26D9               	addwf	fsr2l,f,c
  3631   00135C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3632   00135E  22DA               	addwfc	fsr2h,f,c
  3633   001360  CFDE F04B          	movff	postinc2,___flsub@b
  3634   001364  CFDE F04C          	movff	postinc2,___flsub@b+1
  3635   001368  CFDE F04D          	movff	postinc2,___flsub@b+2
  3636   00136C  CFDE F04E          	movff	postinc2,___flsub@b+3
  3637   001370  ECBA  F021         	call	___flsub	;wreg free
  3638   001374  C04B  F053         	movff	?___flsub,___fldiv@b
  3639   001378  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3640   00137C  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3641   001380  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3642   001384  ECF4  F013         	call	___fldiv	;wreg free
  3643   001388  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3094
  3644   00138C  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3094+1
  3645   001390  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3094+2
  3646   001394  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3094+3
  3647   001398                     
  3648                           ;colorfunctions.c: 48:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3649   001398  0E00               	movlw	0
  3650   00139A  6E3F               	movwf	___fladd@a^0,c
  3651   00139C  0E00               	movlw	0
  3652   00139E  6E40               	movwf	(___fladd@a+1)^0,c
  3653   0013A0  0E00               	movlw	0
  3654   0013A2  6E41               	movwf	(___fladd@a+2)^0,c
  3655   0013A4  0E40               	movlw	64
  3656   0013A6  6E42               	movwf	(___fladd@a+3)^0,c
  3657   0013A8  C0D5  F03B         	movff	_RGB2Hue$3094,___fladd@b
  3658   0013AC  C0D6  F03C         	movff	_RGB2Hue$3094+1,___fladd@b+1
  3659   0013B0  C0D7  F03D         	movff	_RGB2Hue$3094+2,___fladd@b+2
  3660   0013B4  C0D8  F03E         	movff	_RGB2Hue$3094+3,___fladd@b+3
  3661   0013B8  EC4A  F00D         	call	___fladd	;wreg free
  3662   0013BC  C03B  F01A         	movff	?___fladd,___flmul@b
  3663   0013C0  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3664   0013C4  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3665   0013C8  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3666   0013CC  0E00               	movlw	0
  3667   0013CE  6E1E               	movwf	___flmul@a^0,c
  3668   0013D0  0E00               	movlw	0
  3669   0013D2  6E1F               	movwf	(___flmul@a+1)^0,c
  3670   0013D4  0E70               	movlw	112
  3671   0013D6  6E20               	movwf	(___flmul@a+2)^0,c
  3672   0013D8  0E42               	movlw	66
  3673   0013DA  6E21               	movwf	(___flmul@a+3)^0,c
  3674   0013DC  ECDF  F011         	call	___flmul	;wreg free
  3675   0013E0  0100               	movlb	0	; () banked
  3676   0013E2  EE20 F010          	lfsr	2,16
  3677   0013E6  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3678   0013E8  26D9               	addwf	fsr2l,f,c
  3679   0013EA  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3680   0013EC  22DA               	addwfc	fsr2h,f,c
  3681   0013EE  C01A  FFDE         	movff	?___flmul,postinc2
  3682   0013F2  C01B  FFDE         	movff	?___flmul+1,postinc2
  3683   0013F6  C01C  FFDE         	movff	?___flmul+2,postinc2
  3684   0013FA  C01D  FFDE         	movff	?___flmul+3,postinc2
  3685                           
  3686                           ;colorfunctions.c: 49:         }else{
  3687   0013FE  EF93  F00A         	goto	l3899
  3688   001402                     l3895:
  3689                           
  3690                           ;colorfunctions.c: 50:             max=cf->Bf;
  3691   001402  0100               	movlb	0	; () banked
  3692   001404  EE20 F008          	lfsr	2,8
  3693   001408  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3694   00140A  26D9               	addwf	fsr2l,f,c
  3695   00140C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3696   00140E  22DA               	addwfc	fsr2h,f,c
  3697   001410  CFDE F001          	movff	postinc2,___fltol@f1
  3698   001414  CFDE F002          	movff	postinc2,___fltol@f1+1
  3699   001418  CFDE F003          	movff	postinc2,___fltol@f1+2
  3700   00141C  CFDE F004          	movff	postinc2,___fltol@f1+3
  3701   001420  EC4D  F01A         	call	___fltol	;wreg free
  3702   001424  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3703   001428  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3704                           
  3705                           ;colorfunctions.c: 51:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3706   00142C  0100               	movlb	0	; () banked
  3707   00142E  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3708   001430  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3709   001432  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3710   001434  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3711   001436  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3712   001438  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3713   00143A  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3714   00143E  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3715   001442  0E00               	movlw	0
  3716   001444  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3717   001446  0EFF               	movlw	-1
  3718   001448  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3719   00144A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3720   00144C  0E01               	movlw	1
  3721   00144E  ECBD  F018         	call	___xxtofl
  3722   001452  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3723   001456  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3724   00145A  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3725   00145E  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3726   001462  0100               	movlb	0	; () banked
  3727   001464  EE20 F004          	lfsr	2,4
  3728   001468  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3729   00146A  26D9               	addwf	fsr2l,f,c
  3730   00146C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3731   00146E  22DA               	addwfc	fsr2h,f,c
  3732   001470  CFDE F04F          	movff	postinc2,___flsub@a
  3733   001474  CFDE F050          	movff	postinc2,___flsub@a+1
  3734   001478  CFDE F051          	movff	postinc2,___flsub@a+2
  3735   00147C  CFDE F052          	movff	postinc2,___flsub@a+3
  3736   001480  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3737   001484  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3738   001488  CFDE F04B          	movff	postinc2,___flsub@b
  3739   00148C  CFDE F04C          	movff	postinc2,___flsub@b+1
  3740   001490  CFDE F04D          	movff	postinc2,___flsub@b+2
  3741   001494  CFDE F04E          	movff	postinc2,___flsub@b+3
  3742   001498  ECBA  F021         	call	___flsub	;wreg free
  3743   00149C  C04B  F053         	movff	?___flsub,___fldiv@b
  3744   0014A0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3745   0014A4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3746   0014A8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3747   0014AC  ECF4  F013         	call	___fldiv	;wreg free
  3748   0014B0  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3094
  3749   0014B4  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3094+1
  3750   0014B8  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3094+2
  3751   0014BC  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3094+3
  3752   0014C0                     
  3753                           ;colorfunctions.c: 51:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3754   0014C0  0E00               	movlw	0
  3755   0014C2  6E3F               	movwf	___fladd@a^0,c
  3756   0014C4  0E00               	movlw	0
  3757   0014C6  6E40               	movwf	(___fladd@a+1)^0,c
  3758   0014C8  0E80               	movlw	128
  3759   0014CA  6E41               	movwf	(___fladd@a+2)^0,c
  3760   0014CC  0E40               	movlw	64
  3761   0014CE  6E42               	movwf	(___fladd@a+3)^0,c
  3762   0014D0  C0D5  F03B         	movff	_RGB2Hue$3094,___fladd@b
  3763   0014D4  C0D6  F03C         	movff	_RGB2Hue$3094+1,___fladd@b+1
  3764   0014D8  C0D7  F03D         	movff	_RGB2Hue$3094+2,___fladd@b+2
  3765   0014DC  C0D8  F03E         	movff	_RGB2Hue$3094+3,___fladd@b+3
  3766   0014E0  EC4A  F00D         	call	___fladd	;wreg free
  3767   0014E4  C03B  F01A         	movff	?___fladd,___flmul@b
  3768   0014E8  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3769   0014EC  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3770   0014F0  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3771   0014F4  0E00               	movlw	0
  3772   0014F6  6E1E               	movwf	___flmul@a^0,c
  3773   0014F8  0E00               	movlw	0
  3774   0014FA  6E1F               	movwf	(___flmul@a+1)^0,c
  3775   0014FC  0E70               	movlw	112
  3776   0014FE  6E20               	movwf	(___flmul@a+2)^0,c
  3777   001500  0E42               	movlw	66
  3778   001502  6E21               	movwf	(___flmul@a+3)^0,c
  3779   001504  ECDF  F011         	call	___flmul	;wreg free
  3780   001508  0100               	movlb	0	; () banked
  3781   00150A  EE20 F010          	lfsr	2,16
  3782   00150E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3783   001510  26D9               	addwf	fsr2l,f,c
  3784   001512  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3785   001514  22DA               	addwfc	fsr2h,f,c
  3786   001516  C01A  FFDE         	movff	?___flmul,postinc2
  3787   00151A  C01B  FFDE         	movff	?___flmul+1,postinc2
  3788   00151E  C01C  FFDE         	movff	?___flmul+2,postinc2
  3789   001522  C01D  FFDE         	movff	?___flmul+3,postinc2
  3790   001526                     l3899:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;colorfunctions.c: 53:         if (cf->h < 0){
  3794   001526  EE20 F010          	lfsr	2,16
  3795   00152A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3796   00152C  26D9               	addwf	fsr2l,f,c
  3797   00152E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3798   001530  22DA               	addwfc	fsr2h,f,c
  3799   001532  0E03               	movlw	3
  3800   001534  BEDB               	btfsc	plusw2,7,c
  3801   001536  EFA1  F00A         	goto	u3470
  3802   00153A  EF9F  F00A         	goto	u3471
  3803   00153E                     u3471:
  3804   00153E  EFC8  F00A         	goto	l123
  3805   001542                     u3470:
  3806   001542                     
  3807                           ; BSR set to: 0
  3808                           ;colorfunctions.c: 54:             cf->h= cf->h +360;
  3809   001542  EE20 F010          	lfsr	2,16
  3810   001546  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3811   001548  26D9               	addwf	fsr2l,f,c
  3812   00154A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3813   00154C  22DA               	addwfc	fsr2h,f,c
  3814   00154E  CFDE F03B          	movff	postinc2,___fladd@b
  3815   001552  CFDE F03C          	movff	postinc2,___fladd@b+1
  3816   001556  CFDE F03D          	movff	postinc2,___fladd@b+2
  3817   00155A  CFDE F03E          	movff	postinc2,___fladd@b+3
  3818   00155E  0E00               	movlw	0
  3819   001560  6E3F               	movwf	___fladd@a^0,c
  3820   001562  0E00               	movlw	0
  3821   001564  6E40               	movwf	(___fladd@a+1)^0,c
  3822   001566  0EB4               	movlw	180
  3823   001568  6E41               	movwf	(___fladd@a+2)^0,c
  3824   00156A  0E43               	movlw	67
  3825   00156C  6E42               	movwf	(___fladd@a+3)^0,c
  3826   00156E  EC4A  F00D         	call	___fladd	;wreg free
  3827   001572  0100               	movlb	0	; () banked
  3828   001574  EE20 F010          	lfsr	2,16
  3829   001578  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3830   00157A  26D9               	addwf	fsr2l,f,c
  3831   00157C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3832   00157E  22DA               	addwfc	fsr2h,f,c
  3833   001580  C03B  FFDE         	movff	?___fladd,postinc2
  3834   001584  C03C  FFDE         	movff	?___fladd+1,postinc2
  3835   001588  C03D  FFDE         	movff	?___fladd+2,postinc2
  3836   00158C  C03E  FFDE         	movff	?___fladd+3,postinc2
  3837   001590                     l123:
  3838                           
  3839                           ; BSR set to: 0
  3840   001590  0012               	return		;funcret
  3841   001592                     __end_of_RGB2Hue:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function ___fltol *****************
  3845 ;; Defined at:
  3846 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  f1              4    0[COMRAM] void 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  exp1            1    9[COMRAM] unsigned char 
  3851 ;;  sign1           1    8[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  4    0[COMRAM] long 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3861 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;Total ram usage:       10 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_RGB2Hue
  3872 ;;		_Left45
  3873 ;;		_Right45
  3874 ;;		_reverseHalfSquare
  3875 ;;		_Yellow_rev1_R90
  3876 ;;		_Pink_rev1_L90
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text21
  3881   00349A                     __ptext21:
  3882                           	callstack 0
  3883   00349A                     ___fltol:
  3884                           	callstack 28
  3885   00349A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3886   00349C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3887   00349E  6E0A               	movwf	___fltol@exp1^0,c
  3888   0034A0  500A               	movf	___fltol@exp1^0,w,c
  3889   0034A2  A4D8               	btfss	status,2,c
  3890   0034A4  EF56  F01A         	goto	u3281
  3891   0034A8  EF58  F01A         	goto	u3280
  3892   0034AC                     u3281:
  3893   0034AC  EF62  F01A         	goto	l3775
  3894   0034B0                     u3280:
  3895   0034B0                     l3771:
  3896   0034B0  0E00               	movlw	0
  3897   0034B2  6E01               	movwf	?___fltol^0,c
  3898   0034B4  0E00               	movlw	0
  3899   0034B6  6E02               	movwf	(?___fltol+1)^0,c
  3900   0034B8  0E00               	movlw	0
  3901   0034BA  6E03               	movwf	(?___fltol+2)^0,c
  3902   0034BC  0E00               	movlw	0
  3903   0034BE  6E04               	movwf	(?___fltol+3)^0,c
  3904   0034C0  EFCF  F01A         	goto	l1002
  3905   0034C4                     l3775:
  3906   0034C4  C001  F005         	movff	___fltol@f1,??___fltol
  3907   0034C8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3908   0034CC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3909   0034D0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3910   0034D4  0E20               	movlw	32
  3911   0034D6  EF72  F01A         	goto	u3290
  3912   0034DA                     u3295:
  3913   0034DA  90D8               	bcf	status,0,c
  3914   0034DC  3208               	rrcf	(??___fltol+3)^0,f,c
  3915   0034DE  3207               	rrcf	(??___fltol+2)^0,f,c
  3916   0034E0  3206               	rrcf	(??___fltol+1)^0,f,c
  3917   0034E2  3205               	rrcf	??___fltol^0,f,c
  3918   0034E4                     u3290:
  3919   0034E4  2EE8               	decfsz	wreg,f,c
  3920   0034E6  EF6D  F01A         	goto	u3295
  3921   0034EA  5005               	movf	??___fltol^0,w,c
  3922   0034EC  6E09               	movwf	___fltol@sign1^0,c
  3923   0034EE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3924   0034F0  0EFF               	movlw	255
  3925   0034F2  1601               	andwf	___fltol@f1^0,f,c
  3926   0034F4  0EFF               	movlw	255
  3927   0034F6  1602               	andwf	(___fltol@f1+1)^0,f,c
  3928   0034F8  0EFF               	movlw	255
  3929   0034FA  1603               	andwf	(___fltol@f1+2)^0,f,c
  3930   0034FC  0E00               	movlw	0
  3931   0034FE  1604               	andwf	(___fltol@f1+3)^0,f,c
  3932   003500  0E96               	movlw	150
  3933   003502  5E0A               	subwf	___fltol@exp1^0,f,c
  3934   003504  BE0A               	btfsc	___fltol@exp1^0,7,c
  3935   003506  EF89  F01A         	goto	u3300
  3936   00350A  EF87  F01A         	goto	u3301
  3937   00350E                     u3301:
  3938   00350E  EF9F  F01A         	goto	l3795
  3939   003512                     u3300:
  3940   003512  500A               	movf	___fltol@exp1^0,w,c
  3941   003514  0A80               	xorlw	128
  3942   003516  0F97               	addlw	151
  3943   003518  B0D8               	btfsc	status,0,c
  3944   00351A  EF91  F01A         	goto	u3311
  3945   00351E  EF93  F01A         	goto	u3310
  3946   003522                     u3311:
  3947   003522  EF95  F01A         	goto	l3791
  3948   003526                     u3310:
  3949   003526  EF58  F01A         	goto	l3771
  3950   00352A                     l3791:
  3951   00352A  90D8               	bcf	status,0,c
  3952   00352C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3953   00352E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3954   003530  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3955   003532  3201               	rrcf	___fltol@f1^0,f,c
  3956   003534  3E0A               	incfsz	___fltol@exp1^0,f,c
  3957   003536  EF95  F01A         	goto	l3791
  3958   00353A  EFB7  F01A         	goto	l3805
  3959   00353E                     l3795:
  3960   00353E  0E1F               	movlw	31
  3961   003540  640A               	cpfsgt	___fltol@exp1^0,c
  3962   003542  EFA5  F01A         	goto	u3321
  3963   003546  EFA7  F01A         	goto	u3320
  3964   00354A                     u3321:
  3965   00354A  EFAF  F01A         	goto	l3803
  3966   00354E                     u3320:
  3967   00354E  EF58  F01A         	goto	l3771
  3968   003552                     l3801:
  3969   003552  90D8               	bcf	status,0,c
  3970   003554  3601               	rlcf	___fltol@f1^0,f,c
  3971   003556  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3972   003558  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3973   00355A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3974   00355C  060A               	decf	___fltol@exp1^0,f,c
  3975   00355E                     l3803:
  3976   00355E  500A               	movf	___fltol@exp1^0,w,c
  3977   003560  A4D8               	btfss	status,2,c
  3978   003562  EFB5  F01A         	goto	u3331
  3979   003566  EFB7  F01A         	goto	u3330
  3980   00356A                     u3331:
  3981   00356A  EFA9  F01A         	goto	l3801
  3982   00356E                     u3330:
  3983   00356E                     l3805:
  3984   00356E  5009               	movf	___fltol@sign1^0,w,c
  3985   003570  B4D8               	btfsc	status,2,c
  3986   003572  EFBD  F01A         	goto	u3341
  3987   003576  EFBF  F01A         	goto	u3340
  3988   00357A                     u3341:
  3989   00357A  EFC7  F01A         	goto	l3809
  3990   00357E                     u3340:
  3991   00357E  1E04               	comf	(___fltol@f1+3)^0,f,c
  3992   003580  1E03               	comf	(___fltol@f1+2)^0,f,c
  3993   003582  1E02               	comf	(___fltol@f1+1)^0,f,c
  3994   003584  6C01               	negf	___fltol@f1^0,c
  3995   003586  0E00               	movlw	0
  3996   003588  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3997   00358A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3998   00358C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3999   00358E                     l3809:
  4000   00358E  C001  F001         	movff	___fltol@f1,?___fltol
  4001   003592  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4002   003596  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4003   00359A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4004   00359E                     l1002:
  4005   00359E  0012               	return		;funcret
  4006   0035A0                     __end_of___fltol:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function ___flsub *****************
  4010 ;; Defined at:
  4011 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  b               4   74[COMRAM] long 
  4014 ;;  a               4   78[COMRAM] long 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  4   74[COMRAM] long 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4026 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;Total ram usage:        8 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 2
  4033 ;; This function calls:
  4034 ;;		___fladd
  4035 ;; This function is called by:
  4036 ;;		_RGB2Hue
  4037 ;;		_memoryUpdateTime
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text22
  4042   004374                     __ptext22:
  4043                           	callstack 0
  4044   004374                     ___flsub:
  4045                           	callstack 27
  4046   004374  0E00               	movlw	0
  4047   004376  1A4F               	xorwf	___flsub@a^0,f,c
  4048   004378  0E00               	movlw	0
  4049   00437A  1A50               	xorwf	(___flsub@a+1)^0,f,c
  4050   00437C  0E00               	movlw	0
  4051   00437E  1A51               	xorwf	(___flsub@a+2)^0,f,c
  4052   004380  0E80               	movlw	128
  4053   004382  1A52               	xorwf	(___flsub@a+3)^0,f,c
  4054   004384  C04B  F03B         	movff	___flsub@b,___fladd@b
  4055   004388  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  4056   00438C  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  4057   004390  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  4058   004394  C04F  F03F         	movff	___flsub@a,___fladd@a
  4059   004398  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  4060   00439C  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  4061   0043A0  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  4062   0043A4  EC4A  F00D         	call	___fladd	;wreg free
  4063   0043A8  C03B  F04B         	movff	?___fladd,?___flsub
  4064   0043AC  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  4065   0043B0  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  4066   0043B4  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  4067   0043B8  0012               	return		;funcret
  4068   0043BA                     __end_of___flsub:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function ___fleq *****************
  4072 ;; Defined at:
  4073 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  ff1             4    0[COMRAM] long 
  4076 ;;  ff2             4    4[COMRAM] long 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4088 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;Total ram usage:       12 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; Hardware stack levels required when called: 1
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_RGB2Hue
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text23
  4103   0036A4                     __ptext23:
  4104                           	callstack 0
  4105   0036A4                     ___fleq:
  4106                           	callstack 28
  4107   0036A4  0E00               	movlw	0
  4108   0036A6  1401               	andwf	___fleq@ff1^0,w,c
  4109   0036A8  6E09               	movwf	??___fleq^0,c
  4110   0036AA  0E00               	movlw	0
  4111   0036AC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4112   0036AE  6E0A               	movwf	(??___fleq+1)^0,c
  4113   0036B0  0E80               	movlw	128
  4114   0036B2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4115   0036B4  6E0B               	movwf	(??___fleq+2)^0,c
  4116   0036B6  0E7F               	movlw	127
  4117   0036B8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4118   0036BA  6E0C               	movwf	(??___fleq+3)^0,c
  4119   0036BC  5009               	movf	??___fleq^0,w,c
  4120   0036BE  100A               	iorwf	(??___fleq+1)^0,w,c
  4121   0036C0  100B               	iorwf	(??___fleq+2)^0,w,c
  4122   0036C2  100C               	iorwf	(??___fleq+3)^0,w,c
  4123   0036C4  A4D8               	btfss	status,2,c
  4124   0036C6  EF67  F01B         	goto	u3251
  4125   0036CA  EF69  F01B         	goto	u3250
  4126   0036CE                     u3251:
  4127   0036CE  EF71  F01B         	goto	l3757
  4128   0036D2                     u3250:
  4129   0036D2  0E00               	movlw	0
  4130   0036D4  6E01               	movwf	___fleq@ff1^0,c
  4131   0036D6  0E00               	movlw	0
  4132   0036D8  6E02               	movwf	(___fleq@ff1+1)^0,c
  4133   0036DA  0E00               	movlw	0
  4134   0036DC  6E03               	movwf	(___fleq@ff1+2)^0,c
  4135   0036DE  0E00               	movlw	0
  4136   0036E0  6E04               	movwf	(___fleq@ff1+3)^0,c
  4137   0036E2                     l3757:
  4138   0036E2  0E00               	movlw	0
  4139   0036E4  1405               	andwf	___fleq@ff2^0,w,c
  4140   0036E6  6E09               	movwf	??___fleq^0,c
  4141   0036E8  0E00               	movlw	0
  4142   0036EA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4143   0036EC  6E0A               	movwf	(??___fleq+1)^0,c
  4144   0036EE  0E80               	movlw	128
  4145   0036F0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4146   0036F2  6E0B               	movwf	(??___fleq+2)^0,c
  4147   0036F4  0E7F               	movlw	127
  4148   0036F6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4149   0036F8  6E0C               	movwf	(??___fleq+3)^0,c
  4150   0036FA  5009               	movf	??___fleq^0,w,c
  4151   0036FC  100A               	iorwf	(??___fleq+1)^0,w,c
  4152   0036FE  100B               	iorwf	(??___fleq+2)^0,w,c
  4153   003700  100C               	iorwf	(??___fleq+3)^0,w,c
  4154   003702  A4D8               	btfss	status,2,c
  4155   003704  EF86  F01B         	goto	u3261
  4156   003708  EF88  F01B         	goto	u3260
  4157   00370C                     u3261:
  4158   00370C  EF90  F01B         	goto	l3761
  4159   003710                     u3260:
  4160   003710  0E00               	movlw	0
  4161   003712  6E05               	movwf	___fleq@ff2^0,c
  4162   003714  0E00               	movlw	0
  4163   003716  6E06               	movwf	(___fleq@ff2+1)^0,c
  4164   003718  0E00               	movlw	0
  4165   00371A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4166   00371C  0E00               	movlw	0
  4167   00371E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4168   003720                     l3761:
  4169   003720  5005               	movf	___fleq@ff2^0,w,c
  4170   003722  1801               	xorwf	___fleq@ff1^0,w,c
  4171   003724  E10F               	bnz	u3270
  4172   003726  5006               	movf	(___fleq@ff2+1)^0,w,c
  4173   003728  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4174   00372A  E10C               	bnz	u3270
  4175   00372C  5007               	movf	(___fleq@ff2+2)^0,w,c
  4176   00372E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4177   003730  E109               	bnz	u3270
  4178   003732  5008               	movf	(___fleq@ff2+3)^0,w,c
  4179   003734  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4180   003736  B4D8               	btfsc	status,2,c
  4181   003738  EFA0  F01B         	goto	u3271
  4182   00373C  EFA2  F01B         	goto	u3270
  4183   003740                     u3271:
  4184   003740  EFA5  F01B         	goto	l3765
  4185   003744                     u3270:
  4186   003744  90D8               	bcf	status,0,c
  4187   003746  EFA6  F01B         	goto	l964
  4188   00374A                     l3765:
  4189   00374A  80D8               	bsf	status,0,c
  4190   00374C                     l964:
  4191   00374C  0012               	return		;funcret
  4192   00374E                     __end_of___fleq:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function ___fldiv *****************
  4196 ;; Defined at:
  4197 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  b               4   82[COMRAM] long 
  4200 ;;  a               4   86[COMRAM] long 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  grs             4    7[BANK0 ] unsigned long 
  4203 ;;  rem             4    0[BANK0 ] unsigned long 
  4204 ;;  new_exp         2    5[BANK0 ] short 
  4205 ;;  aexp            1   12[BANK0 ] unsigned char 
  4206 ;;  bexp            1   11[BANK0 ] unsigned char 
  4207 ;;  sign            1    4[BANK0 ] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4   82[COMRAM] unsigned char 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;Total ram usage:       25 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; Hardware stack levels required when called: 1
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_colour_read_all
  4228 ;;		_RGB2Hue
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text24
  4233   0027E8                     __ptext24:
  4234                           	callstack 0
  4235   0027E8                     ___fldiv:
  4236                           	callstack 28
  4237   0027E8  5056               	movf	(___fldiv@b+3)^0,w,c
  4238   0027EA  0B80               	andlw	128
  4239   0027EC  0100               	movlb	0	; () banked
  4240   0027EE  6FC6               	movwf	___fldiv@sign& (0+255),b
  4241   0027F0  5056               	movf	(___fldiv@b+3)^0,w,c
  4242   0027F2  2456               	addwf	(___fldiv@b+3)^0,w,c
  4243   0027F4  6FCD               	movwf	___fldiv@bexp& (0+255),b
  4244   0027F6                     
  4245                           ; BSR set to: 0
  4246   0027F6  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4247   0027F8  EF00  F014         	goto	u3021
  4248   0027FC  EF02  F014         	goto	u3020
  4249   002800                     u3021:
  4250   002800  EF03  F014         	goto	l3615
  4251   002804                     u3020:
  4252   002804                     
  4253                           ; BSR set to: 0
  4254   002804  81CD               	bsf	___fldiv@bexp& (0+255),0,b
  4255   002806                     l3615:
  4256                           
  4257                           ; BSR set to: 0
  4258   002806  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4259   002808  B4D8               	btfsc	status,2,c
  4260   00280A  EF09  F014         	goto	u3031
  4261   00280E  EF0B  F014         	goto	u3030
  4262   002812                     u3031:
  4263   002812  EF20  F014         	goto	l3625
  4264   002816                     u3030:
  4265   002816                     
  4266                           ; BSR set to: 0
  4267   002816  29CD               	incf	___fldiv@bexp& (0+255),w,b
  4268   002818  A4D8               	btfss	status,2,c
  4269   00281A  EF11  F014         	goto	u3041
  4270   00281E  EF13  F014         	goto	u3040
  4271   002822                     u3041:
  4272   002822  EF1B  F014         	goto	l3621
  4273   002826                     u3040:
  4274   002826                     
  4275                           ; BSR set to: 0
  4276   002826  0E00               	movlw	0
  4277   002828  6E53               	movwf	___fldiv@b^0,c
  4278   00282A  0E00               	movlw	0
  4279   00282C  6E54               	movwf	(___fldiv@b+1)^0,c
  4280   00282E  0E00               	movlw	0
  4281   002830  6E55               	movwf	(___fldiv@b+2)^0,c
  4282   002832  0E00               	movlw	0
  4283   002834  6E56               	movwf	(___fldiv@b+3)^0,c
  4284   002836                     l3621:
  4285                           
  4286                           ; BSR set to: 0
  4287   002836  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4288   002838                     
  4289                           ; BSR set to: 0
  4290   002838  0E00               	movlw	0
  4291   00283A  6E56               	movwf	(___fldiv@b+3)^0,c
  4292   00283C  EF28  F014         	goto	l3627
  4293   002840                     l3625:
  4294                           
  4295                           ; BSR set to: 0
  4296   002840  0E00               	movlw	0
  4297   002842  6E53               	movwf	___fldiv@b^0,c
  4298   002844  0E00               	movlw	0
  4299   002846  6E54               	movwf	(___fldiv@b+1)^0,c
  4300   002848  0E00               	movlw	0
  4301   00284A  6E55               	movwf	(___fldiv@b+2)^0,c
  4302   00284C  0E00               	movlw	0
  4303   00284E  6E56               	movwf	(___fldiv@b+3)^0,c
  4304   002850                     l3627:
  4305                           
  4306                           ; BSR set to: 0
  4307   002850  505A               	movf	(___fldiv@a+3)^0,w,c
  4308   002852  0B80               	andlw	128
  4309   002854  1BC6               	xorwf	___fldiv@sign& (0+255),f,b
  4310   002856                     
  4311                           ; BSR set to: 0
  4312   002856  505A               	movf	(___fldiv@a+3)^0,w,c
  4313   002858  245A               	addwf	(___fldiv@a+3)^0,w,c
  4314   00285A  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4315   00285C                     
  4316                           ; BSR set to: 0
  4317   00285C  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4318   00285E  EF33  F014         	goto	u3051
  4319   002862  EF35  F014         	goto	u3050
  4320   002866                     u3051:
  4321   002866  EF36  F014         	goto	l3635
  4322   00286A                     u3050:
  4323   00286A                     
  4324                           ; BSR set to: 0
  4325   00286A  81CE               	bsf	___fldiv@aexp& (0+255),0,b
  4326   00286C                     l3635:
  4327                           
  4328                           ; BSR set to: 0
  4329   00286C  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4330   00286E  B4D8               	btfsc	status,2,c
  4331   002870  EF3C  F014         	goto	u3061
  4332   002874  EF3E  F014         	goto	u3060
  4333   002878                     u3061:
  4334   002878  EF53  F014         	goto	l3645
  4335   00287C                     u3060:
  4336   00287C                     
  4337                           ; BSR set to: 0
  4338   00287C  29CE               	incf	___fldiv@aexp& (0+255),w,b
  4339   00287E  A4D8               	btfss	status,2,c
  4340   002880  EF44  F014         	goto	u3071
  4341   002884  EF46  F014         	goto	u3070
  4342   002888                     u3071:
  4343   002888  EF4E  F014         	goto	l3641
  4344   00288C                     u3070:
  4345   00288C                     
  4346                           ; BSR set to: 0
  4347   00288C  0E00               	movlw	0
  4348   00288E  6E57               	movwf	___fldiv@a^0,c
  4349   002890  0E00               	movlw	0
  4350   002892  6E58               	movwf	(___fldiv@a+1)^0,c
  4351   002894  0E00               	movlw	0
  4352   002896  6E59               	movwf	(___fldiv@a+2)^0,c
  4353   002898  0E00               	movlw	0
  4354   00289A  6E5A               	movwf	(___fldiv@a+3)^0,c
  4355   00289C                     l3641:
  4356                           
  4357                           ; BSR set to: 0
  4358   00289C  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4359   00289E                     
  4360                           ; BSR set to: 0
  4361   00289E  0E00               	movlw	0
  4362   0028A0  6E5A               	movwf	(___fldiv@a+3)^0,c
  4363   0028A2  EF5B  F014         	goto	l3647
  4364   0028A6                     l3645:
  4365                           
  4366                           ; BSR set to: 0
  4367   0028A6  0E00               	movlw	0
  4368   0028A8  6E57               	movwf	___fldiv@a^0,c
  4369   0028AA  0E00               	movlw	0
  4370   0028AC  6E58               	movwf	(___fldiv@a+1)^0,c
  4371   0028AE  0E00               	movlw	0
  4372   0028B0  6E59               	movwf	(___fldiv@a+2)^0,c
  4373   0028B2  0E00               	movlw	0
  4374   0028B4  6E5A               	movwf	(___fldiv@a+3)^0,c
  4375   0028B6                     l3647:
  4376                           
  4377                           ; BSR set to: 0
  4378   0028B6  5057               	movf	___fldiv@a^0,w,c
  4379   0028B8  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4380   0028BA  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4381   0028BC  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4382   0028BE  A4D8               	btfss	status,2,c
  4383   0028C0  EF64  F014         	goto	u3081
  4384   0028C4  EF66  F014         	goto	u3080
  4385   0028C8                     u3081:
  4386   0028C8  EF7E  F014         	goto	l3659
  4387   0028CC                     u3080:
  4388   0028CC                     
  4389                           ; BSR set to: 0
  4390   0028CC  0E00               	movlw	0
  4391   0028CE  6E53               	movwf	___fldiv@b^0,c
  4392   0028D0  0E00               	movlw	0
  4393   0028D2  6E54               	movwf	(___fldiv@b+1)^0,c
  4394   0028D4  0E00               	movlw	0
  4395   0028D6  6E55               	movwf	(___fldiv@b+2)^0,c
  4396   0028D8  0E00               	movlw	0
  4397   0028DA  6E56               	movwf	(___fldiv@b+3)^0,c
  4398   0028DC                     
  4399                           ; BSR set to: 0
  4400   0028DC  0E80               	movlw	128
  4401   0028DE  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4402   0028E0  0E7F               	movlw	127
  4403   0028E2  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4404   0028E4                     l3653:
  4405                           
  4406                           ; BSR set to: 0
  4407   0028E4  51C6               	movf	___fldiv@sign& (0+255),w,b
  4408   0028E6  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4409   0028E8                     
  4410                           ; BSR set to: 0
  4411   0028E8  C053  F053         	movff	___fldiv@b,?___fldiv
  4412   0028EC  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4413   0028F0  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4414   0028F4  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4415   0028F8  EFC1  F015         	goto	l1287
  4416   0028FC                     l3659:
  4417                           
  4418                           ; BSR set to: 0
  4419   0028FC  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4420   0028FE  A4D8               	btfss	status,2,c
  4421   002900  EF84  F014         	goto	u3091
  4422   002904  EF86  F014         	goto	u3090
  4423   002908                     u3091:
  4424   002908  EF90  F014         	goto	l3667
  4425   00290C                     u3090:
  4426   00290C                     
  4427                           ; BSR set to: 0
  4428   00290C  0E00               	movlw	0
  4429   00290E  6E53               	movwf	?___fldiv^0,c
  4430   002910  0E00               	movlw	0
  4431   002912  6E54               	movwf	(?___fldiv+1)^0,c
  4432   002914  0E00               	movlw	0
  4433   002916  6E55               	movwf	(?___fldiv+2)^0,c
  4434   002918  0E00               	movlw	0
  4435   00291A  6E56               	movwf	(?___fldiv+3)^0,c
  4436   00291C  EFC1  F015         	goto	l1287
  4437   002920                     l3667:
  4438                           
  4439                           ; BSR set to: 0
  4440   002920  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4441   002922  C0CD  F05B         	movff	___fldiv@bexp,??___fldiv
  4442   002926  6A5C               	clrf	(??___fldiv+1)^0,c
  4443   002928  5E5B               	subwf	??___fldiv^0,f,c
  4444   00292A  0E00               	movlw	0
  4445   00292C  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4446   00292E  0E7F               	movlw	127
  4447   002930  245B               	addwf	??___fldiv^0,w,c
  4448   002932  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4449   002934  0E00               	movlw	0
  4450   002936  205C               	addwfc	(??___fldiv+1)^0,w,c
  4451   002938  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4452   00293A                     
  4453                           ; BSR set to: 0
  4454   00293A  C053  F0C2         	movff	___fldiv@b,___fldiv@rem
  4455   00293E  C054  F0C3         	movff	___fldiv@b+1,___fldiv@rem+1
  4456   002942  C055  F0C4         	movff	___fldiv@b+2,___fldiv@rem+2
  4457   002946  C056  F0C5         	movff	___fldiv@b+3,___fldiv@rem+3
  4458   00294A                     
  4459                           ; BSR set to: 0
  4460   00294A  0E00               	movlw	0
  4461   00294C  6E53               	movwf	___fldiv@b^0,c
  4462   00294E  0E00               	movlw	0
  4463   002950  6E54               	movwf	(___fldiv@b+1)^0,c
  4464   002952  0E00               	movlw	0
  4465   002954  6E55               	movwf	(___fldiv@b+2)^0,c
  4466   002956  0E00               	movlw	0
  4467   002958  6E56               	movwf	(___fldiv@b+3)^0,c
  4468   00295A                     
  4469                           ; BSR set to: 0
  4470   00295A  0E00               	movlw	0
  4471   00295C  6FC9               	movwf	___fldiv@grs& (0+255),b
  4472   00295E  0E00               	movlw	0
  4473   002960  6FCA               	movwf	(___fldiv@grs+1)& (0+255),b
  4474   002962  0E00               	movlw	0
  4475   002964  6FCB               	movwf	(___fldiv@grs+2)& (0+255),b
  4476   002966  0E00               	movlw	0
  4477   002968  6FCC               	movwf	(___fldiv@grs+3)& (0+255),b
  4478   00296A                     
  4479                           ; BSR set to: 0
  4480   00296A  0E00               	movlw	0
  4481   00296C  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4482   00296E  EFF1  F014         	goto	l1289
  4483   002972                     l3677:
  4484                           
  4485                           ; BSR set to: 0
  4486   002972  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4487   002974  B4D8               	btfsc	status,2,c
  4488   002976  EFBF  F014         	goto	u3101
  4489   00297A  EFC1  F014         	goto	u3100
  4490   00297E                     u3101:
  4491   00297E  EFD8  F014         	goto	l3685
  4492   002982                     u3100:
  4493   002982                     
  4494                           ; BSR set to: 0
  4495   002982  90D8               	bcf	status,0,c
  4496   002984  37C2               	rlcf	___fldiv@rem& (0+255),f,b
  4497   002986  37C3               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4498   002988  37C4               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4499   00298A  37C5               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4500   00298C  90D8               	bcf	status,0,c
  4501   00298E  3653               	rlcf	___fldiv@b^0,f,c
  4502   002990  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4503   002992  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4504   002994  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4505   002996                     
  4506                           ; BSR set to: 0
  4507   002996  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4508   002998  EFD0  F014         	goto	u3111
  4509   00299C  EFD2  F014         	goto	u3110
  4510   0029A0                     u3111:
  4511   0029A0  EFD3  F014         	goto	l1292
  4512   0029A4                     u3110:
  4513   0029A4                     
  4514                           ; BSR set to: 0
  4515   0029A4  8053               	bsf	___fldiv@b^0,0,c
  4516   0029A6                     l1292:
  4517                           
  4518                           ; BSR set to: 0
  4519   0029A6  90D8               	bcf	status,0,c
  4520   0029A8  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4521   0029AA  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4522   0029AC  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4523   0029AE  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4524   0029B0                     l3685:
  4525                           
  4526                           ; BSR set to: 0
  4527   0029B0  5057               	movf	___fldiv@a^0,w,c
  4528   0029B2  5DC2               	subwf	___fldiv@rem& (0+255),w,b
  4529   0029B4  5058               	movf	(___fldiv@a+1)^0,w,c
  4530   0029B6  59C3               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4531   0029B8  5059               	movf	(___fldiv@a+2)^0,w,c
  4532   0029BA  59C4               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4533   0029BC  505A               	movf	(___fldiv@a+3)^0,w,c
  4534   0029BE  59C5               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4535   0029C0  A0D8               	btfss	status,0,c
  4536   0029C2  EFE5  F014         	goto	u3121
  4537   0029C6  EFE7  F014         	goto	u3120
  4538   0029CA                     u3121:
  4539   0029CA  EFF0  F014         	goto	l3691
  4540   0029CE                     u3120:
  4541   0029CE                     
  4542                           ; BSR set to: 0
  4543   0029CE  8DCC               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4544   0029D0                     
  4545                           ; BSR set to: 0
  4546   0029D0  5057               	movf	___fldiv@a^0,w,c
  4547   0029D2  5FC2               	subwf	___fldiv@rem& (0+255),f,b
  4548   0029D4  5058               	movf	(___fldiv@a+1)^0,w,c
  4549   0029D6  5BC3               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4550   0029D8  5059               	movf	(___fldiv@a+2)^0,w,c
  4551   0029DA  5BC4               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4552   0029DC  505A               	movf	(___fldiv@a+3)^0,w,c
  4553   0029DE  5BC5               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4554   0029E0                     l3691:
  4555                           
  4556                           ; BSR set to: 0
  4557   0029E0  2BCE               	incf	___fldiv@aexp& (0+255),f,b
  4558   0029E2                     l1289:
  4559                           
  4560                           ; BSR set to: 0
  4561   0029E2  0E19               	movlw	25
  4562   0029E4  65CE               	cpfsgt	___fldiv@aexp& (0+255),b
  4563   0029E6  EFF7  F014         	goto	u3131
  4564   0029EA  EFF9  F014         	goto	u3130
  4565   0029EE                     u3131:
  4566   0029EE  EFB9  F014         	goto	l3677
  4567   0029F2                     u3130:
  4568   0029F2                     
  4569                           ; BSR set to: 0
  4570   0029F2  51C2               	movf	___fldiv@rem& (0+255),w,b
  4571   0029F4  11C3               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4572   0029F6  11C4               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4573   0029F8  11C5               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4574   0029FA  B4D8               	btfsc	status,2,c
  4575   0029FC  EF02  F015         	goto	u3141
  4576   002A00  EF04  F015         	goto	u3140
  4577   002A04                     u3141:
  4578   002A04  EF1C  F015         	goto	l3703
  4579   002A08                     u3140:
  4580   002A08                     
  4581                           ; BSR set to: 0
  4582   002A08  81C9               	bsf	___fldiv@grs& (0+255),0,b
  4583   002A0A  EF1C  F015         	goto	l3703
  4584   002A0E                     l3697:
  4585                           
  4586                           ; BSR set to: 0
  4587   002A0E  90D8               	bcf	status,0,c
  4588   002A10  3653               	rlcf	___fldiv@b^0,f,c
  4589   002A12  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4590   002A14  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4591   002A16  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4592   002A18                     
  4593                           ; BSR set to: 0
  4594   002A18  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4595   002A1A  EF11  F015         	goto	u3151
  4596   002A1E  EF13  F015         	goto	u3150
  4597   002A22                     u3151:
  4598   002A22  EF14  F015         	goto	l1298
  4599   002A26                     u3150:
  4600   002A26                     
  4601                           ; BSR set to: 0
  4602   002A26  8053               	bsf	___fldiv@b^0,0,c
  4603   002A28                     l1298:
  4604                           
  4605                           ; BSR set to: 0
  4606   002A28  90D8               	bcf	status,0,c
  4607   002A2A  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4608   002A2C  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4609   002A2E  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4610   002A30  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4611   002A32  07C7               	decf	___fldiv@new_exp& (0+255),f,b
  4612   002A34  A0D8               	btfss	status,0,c
  4613   002A36  07C8               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4614   002A38                     l3703:
  4615                           
  4616                           ; BSR set to: 0
  4617   002A38  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4618   002A3A  EF21  F015         	goto	u3161
  4619   002A3E  EF23  F015         	goto	u3160
  4620   002A42                     u3161:
  4621   002A42  EF07  F015         	goto	l3697
  4622   002A46                     u3160:
  4623   002A46                     
  4624                           ; BSR set to: 0
  4625   002A46  0E00               	movlw	0
  4626   002A48  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4627   002A4A                     
  4628                           ; BSR set to: 0
  4629   002A4A  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4630   002A4C  EF2A  F015         	goto	u3171
  4631   002A50  EF2C  F015         	goto	u3170
  4632   002A54                     u3171:
  4633   002A54  EF50  F015         	goto	l1300
  4634   002A58                     u3170:
  4635   002A58                     
  4636                           ; BSR set to: 0
  4637   002A58  0EFF               	movlw	255
  4638   002A5A  15C9               	andwf	___fldiv@grs& (0+255),w,b
  4639   002A5C  6E5B               	movwf	??___fldiv^0,c
  4640   002A5E  0EFF               	movlw	255
  4641   002A60  15CA               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4642   002A62  6E5C               	movwf	(??___fldiv+1)^0,c
  4643   002A64  0EFF               	movlw	255
  4644   002A66  15CB               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4645   002A68  6E5D               	movwf	(??___fldiv+2)^0,c
  4646   002A6A  0E7F               	movlw	127
  4647   002A6C  15CC               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4648   002A6E  6E5E               	movwf	(??___fldiv+3)^0,c
  4649   002A70  505B               	movf	??___fldiv^0,w,c
  4650   002A72  105C               	iorwf	(??___fldiv+1)^0,w,c
  4651   002A74  105D               	iorwf	(??___fldiv+2)^0,w,c
  4652   002A76  105E               	iorwf	(??___fldiv+3)^0,w,c
  4653   002A78  B4D8               	btfsc	status,2,c
  4654   002A7A  EF41  F015         	goto	u3181
  4655   002A7E  EF43  F015         	goto	u3180
  4656   002A82                     u3181:
  4657   002A82  EF47  F015         	goto	l1301
  4658   002A86                     u3180:
  4659   002A86                     l3711:
  4660                           
  4661                           ; BSR set to: 0
  4662   002A86  0E01               	movlw	1
  4663   002A88  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4664   002A8A  EF50  F015         	goto	l1300
  4665   002A8E                     l1301:
  4666                           
  4667                           ; BSR set to: 0
  4668   002A8E  A053               	btfss	___fldiv@b^0,0,c
  4669   002A90  EF4C  F015         	goto	u3191
  4670   002A94  EF4E  F015         	goto	u3190
  4671   002A98                     u3191:
  4672   002A98  EF50  F015         	goto	l1300
  4673   002A9C                     u3190:
  4674   002A9C  EF43  F015         	goto	l3711
  4675   002AA0                     l1300:
  4676                           
  4677                           ; BSR set to: 0
  4678   002AA0  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4679   002AA2  B4D8               	btfsc	status,2,c
  4680   002AA4  EF56  F015         	goto	u3201
  4681   002AA8  EF58  F015         	goto	u3200
  4682   002AAC                     u3201:
  4683   002AAC  EF7C  F015         	goto	l3723
  4684   002AB0                     u3200:
  4685   002AB0                     
  4686                           ; BSR set to: 0
  4687   002AB0  0E01               	movlw	1
  4688   002AB2  2653               	addwf	___fldiv@b^0,f,c
  4689   002AB4  0E00               	movlw	0
  4690   002AB6  2254               	addwfc	(___fldiv@b+1)^0,f,c
  4691   002AB8  2255               	addwfc	(___fldiv@b+2)^0,f,c
  4692   002ABA  2256               	addwfc	(___fldiv@b+3)^0,f,c
  4693   002ABC                     
  4694                           ; BSR set to: 0
  4695   002ABC  A056               	btfss	(___fldiv@b+3)^0,0,c
  4696   002ABE  EF63  F015         	goto	u3211
  4697   002AC2  EF65  F015         	goto	u3210
  4698   002AC6                     u3211:
  4699   002AC6  EF7C  F015         	goto	l3723
  4700   002ACA                     u3210:
  4701   002ACA                     
  4702                           ; BSR set to: 0
  4703   002ACA  C053  F05B         	movff	___fldiv@b,??___fldiv
  4704   002ACE  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  4705   002AD2  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  4706   002AD6  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  4707   002ADA  345E               	rlcf	(??___fldiv+3)^0,w,c
  4708   002ADC  325E               	rrcf	(??___fldiv+3)^0,f,c
  4709   002ADE  325D               	rrcf	(??___fldiv+2)^0,f,c
  4710   002AE0  325C               	rrcf	(??___fldiv+1)^0,f,c
  4711   002AE2  325B               	rrcf	??___fldiv^0,f,c
  4712   002AE4  C05B  F053         	movff	??___fldiv,___fldiv@b
  4713   002AE8  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  4714   002AEC  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  4715   002AF0  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  4716   002AF4                     
  4717                           ; BSR set to: 0
  4718   002AF4  4BC7               	infsnz	___fldiv@new_exp& (0+255),f,b
  4719   002AF6  2BC8               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4720   002AF8                     l3723:
  4721                           
  4722                           ; BSR set to: 0
  4723   002AF8  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4724   002AFA  EF87  F015         	goto	u3221
  4725   002AFE  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4726   002B00  E108               	bnz	u3220
  4727   002B02  29C7               	incf	___fldiv@new_exp& (0+255),w,b
  4728   002B04  A0D8               	btfss	status,0,c
  4729   002B06  EF87  F015         	goto	u3221
  4730   002B0A  EF89  F015         	goto	u3220
  4731   002B0E                     u3221:
  4732   002B0E  EF94  F015         	goto	l3727
  4733   002B12                     u3220:
  4734   002B12                     
  4735                           ; BSR set to: 0
  4736   002B12  0E00               	movlw	0
  4737   002B14  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4738   002B16  69C7               	setf	___fldiv@new_exp& (0+255),b
  4739   002B18  0E00               	movlw	0
  4740   002B1A  6E53               	movwf	___fldiv@b^0,c
  4741   002B1C  0E00               	movlw	0
  4742   002B1E  6E54               	movwf	(___fldiv@b+1)^0,c
  4743   002B20  0E00               	movlw	0
  4744   002B22  6E55               	movwf	(___fldiv@b+2)^0,c
  4745   002B24  0E00               	movlw	0
  4746   002B26  6E56               	movwf	(___fldiv@b+3)^0,c
  4747   002B28                     l3727:
  4748                           
  4749                           ; BSR set to: 0
  4750   002B28  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4751   002B2A  EFA1  F015         	goto	u3230
  4752   002B2E  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4753   002B30  E106               	bnz	u3231
  4754   002B32  05C7               	decf	___fldiv@new_exp& (0+255),w,b
  4755   002B34  B0D8               	btfsc	status,0,c
  4756   002B36  EF9F  F015         	goto	u3231
  4757   002B3A  EFA1  F015         	goto	u3230
  4758   002B3E                     u3231:
  4759   002B3E  EFAF  F015         	goto	l3731
  4760   002B42                     u3230:
  4761   002B42                     
  4762                           ; BSR set to: 0
  4763   002B42  0E00               	movlw	0
  4764   002B44  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4765   002B46  0E00               	movlw	0
  4766   002B48  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4767   002B4A  0E00               	movlw	0
  4768   002B4C  6E53               	movwf	___fldiv@b^0,c
  4769   002B4E  0E00               	movlw	0
  4770   002B50  6E54               	movwf	(___fldiv@b+1)^0,c
  4771   002B52  0E00               	movlw	0
  4772   002B54  6E55               	movwf	(___fldiv@b+2)^0,c
  4773   002B56  0E00               	movlw	0
  4774   002B58  6E56               	movwf	(___fldiv@b+3)^0,c
  4775   002B5A  0E00               	movlw	0
  4776   002B5C  6FC6               	movwf	___fldiv@sign& (0+255),b
  4777   002B5E                     l3731:
  4778                           
  4779                           ; BSR set to: 0
  4780   002B5E  C0C7  F0CD         	movff	___fldiv@new_exp,___fldiv@bexp
  4781   002B62                     
  4782                           ; BSR set to: 0
  4783   002B62  A1CD               	btfss	___fldiv@bexp& (0+255),0,b
  4784   002B64  EFB6  F015         	goto	u3241
  4785   002B68  EFB8  F015         	goto	u3240
  4786   002B6C                     u3241:
  4787   002B6C  EFBB  F015         	goto	l3737
  4788   002B70                     u3240:
  4789   002B70                     
  4790                           ; BSR set to: 0
  4791   002B70  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4792   002B72  EFBC  F015         	goto	l3739
  4793   002B76                     l3737:
  4794                           
  4795                           ; BSR set to: 0
  4796   002B76  9E55               	bcf	(___fldiv@b+2)^0,7,c
  4797   002B78                     l3739:
  4798                           
  4799                           ; BSR set to: 0
  4800   002B78  90D8               	bcf	status,0,c
  4801   002B7A  31CD               	rrcf	___fldiv@bexp& (0+255),w,b
  4802   002B7C  6E56               	movwf	(___fldiv@b+3)^0,c
  4803   002B7E  EF72  F014         	goto	l3653
  4804   002B82                     l1287:
  4805                           
  4806                           ; BSR set to: 0
  4807   002B82  0012               	return		;funcret
  4808   002B84                     __end_of___fldiv:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _LED_init *****************
  4812 ;; Defined at:
  4813 ;;		line 4 in file "LED.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		None
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text25
  4842   00457E                     __ptext25:
  4843                           	callstack 0
  4844   00457E                     _LED_init:
  4845                           	callstack 29
  4846   00457E                     
  4847                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  4848   00457E  9884               	bcf	132,4,c	;volatile
  4849                           
  4850                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  4851   004580  9088               	bcf	136,0,c	;volatile
  4852                           
  4853                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  4854   004582  9086               	bcf	134,0,c	;volatile
  4855                           
  4856                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  4857   004584  987C               	bcf	124,4,c	;volatile
  4858                           
  4859                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  4860   004586  9080               	bcf	128,0,c	;volatile
  4861                           
  4862                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  4863   004588  907E               	bcf	126,0,c	;volatile
  4864   00458A  0012               	return		;funcret
  4865   00458C                     __end_of_LED_init:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function _Interrupts_init *****************
  4869 ;; Defined at:
  4870 ;;		line 5 in file "interrupts.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		None
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 1
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text26
  4899   004598                     __ptext26:
  4900                           	callstack 0
  4901   004598                     _Interrupts_init:
  4902                           	callstack 29
  4903   004598                     
  4904                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  4905   004598  010E               	movlb	14	; () banked
  4906   00459A  872D               	bsf	45,3,b	;volatile
  4907                           
  4908                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  4909   00459C  8AF2               	bsf	242,5,c	;volatile
  4910                           
  4911                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  4912   00459E  8CF2               	bsf	242,6,c	;volatile
  4913                           
  4914                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  4915   0045A0  8EF2               	bsf	242,7,c	;volatile
  4916   0045A2                     
  4917                           ; BSR set to: 14
  4918   0045A2  0012               	return		;funcret
  4919   0045A4                     __end_of_Interrupts_init:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _Hue2Colour *****************
  4923 ;; Defined at:
  4924 ;;		line 59 in file "colorfunctions.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  cf              2   86[COMRAM] PTR struct RGBC
  4927 ;;		 -> colorf(22), 
  4928 ;;  rel             2   88[COMRAM] PTR struct RGB_rel
  4929 ;;		 -> colorrel(12), 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  colourname      2   90[COMRAM] PTR unsigned char 
  4932 ;;		 -> STR_9(6), STR_8(7), STR_7(6), STR_6(11), 
  4933 ;;		 -> STR_5(7), STR_4(10), STR_3(5), STR_2(4), 
  4934 ;;		 -> STR_1(1), 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  2   86[COMRAM] PTR unsigned char 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;Total ram usage:        6 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 2
  4951 ;; This function calls:
  4952 ;;		___flge
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;;		_Color2String
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text27
  4960   001592                     __ptext27:
  4961                           	callstack 0
  4962   001592                     _Hue2Colour:
  4963                           	callstack 28
  4964   001592                     
  4965                           ;colorfunctions.c: 59: char* Hue2Colour(struct RGBC *cf, struct RGB_rel *rel);colorfunct
      +                          ions.c: 60: {;colorfunctions.c: 61:     char* colourname = "";
  4966   001592  0E2B               	movlw	low (STR_10+42)
  4967   001594  6E5B               	movwf	Hue2Colour@colourname^0,c
  4968   001596  0E0E               	movlw	high (STR_10+42)
  4969   001598  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  4970   00159A                     
  4971                           ;colorfunctions.c: 62:     if ((((cf->h)>0)&&((cf->h)<3)|((cf->h)>352)&&((cf->h)<=360)))
  4972   00159A  0E00               	movlw	0
  4973   00159C  6E4B               	movwf	___flge@ff1^0,c
  4974   00159E  0E00               	movlw	0
  4975   0015A0  6E4C               	movwf	(___flge@ff1+1)^0,c
  4976   0015A2  0E00               	movlw	0
  4977   0015A4  6E4D               	movwf	(___flge@ff1+2)^0,c
  4978   0015A6  0E00               	movlw	0
  4979   0015A8  6E4E               	movwf	(___flge@ff1+3)^0,c
  4980   0015AA  EE20 F010          	lfsr	2,16
  4981   0015AE  5057               	movf	Hue2Colour@cf^0,w,c
  4982   0015B0  26D9               	addwf	fsr2l,f,c
  4983   0015B2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  4984   0015B4  22DA               	addwfc	fsr2h,f,c
  4985   0015B6  CFDE F04F          	movff	postinc2,___flge@ff2
  4986   0015BA  CFDE F050          	movff	postinc2,___flge@ff2+1
  4987   0015BE  CFDE F051          	movff	postinc2,___flge@ff2+2
  4988   0015C2  CFDE F052          	movff	postinc2,___flge@ff2+3
  4989   0015C6  ECD0  F01A         	call	___flge	;wreg free
  4990   0015CA  B0D8               	btfsc	status,0,c
  4991   0015CC  EFEA  F00A         	goto	u3481
  4992   0015D0  EFEC  F00A         	goto	u3480
  4993   0015D4                     u3481:
  4994   0015D4  EF59  F00B         	goto	l3917
  4995   0015D8                     u3480:
  4996   0015D8  EE20 F010          	lfsr	2,16
  4997   0015DC  5057               	movf	Hue2Colour@cf^0,w,c
  4998   0015DE  26D9               	addwf	fsr2l,f,c
  4999   0015E0  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5000   0015E2  22DA               	addwfc	fsr2h,f,c
  5001   0015E4  CFDE F04B          	movff	postinc2,___flge@ff1
  5002   0015E8  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5003   0015EC  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5004   0015F0  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5005   0015F4  0E00               	movlw	0
  5006   0015F6  6E4F               	movwf	___flge@ff2^0,c
  5007   0015F8  0E00               	movlw	0
  5008   0015FA  6E50               	movwf	(___flge@ff2+1)^0,c
  5009   0015FC  0E40               	movlw	64
  5010   0015FE  6E51               	movwf	(___flge@ff2+2)^0,c
  5011   001600  0E40               	movlw	64
  5012   001602  6E52               	movwf	(___flge@ff2+3)^0,c
  5013   001604  ECD0  F01A         	call	___flge	;wreg free
  5014   001608  A0D8               	btfss	status,0,c
  5015   00160A  EF09  F00B         	goto	u3491
  5016   00160E  EF0B  F00B         	goto	u3490
  5017   001612                     u3491:
  5018   001612  EF2A  F00B         	goto	l3911
  5019   001616                     u3490:
  5020   001616  0E00               	movlw	0
  5021   001618  6E4B               	movwf	___flge@ff1^0,c
  5022   00161A  0E00               	movlw	0
  5023   00161C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5024   00161E  0EB0               	movlw	176
  5025   001620  6E4D               	movwf	(___flge@ff1+2)^0,c
  5026   001622  0E43               	movlw	67
  5027   001624  6E4E               	movwf	(___flge@ff1+3)^0,c
  5028   001626  EE20 F010          	lfsr	2,16
  5029   00162A  5057               	movf	Hue2Colour@cf^0,w,c
  5030   00162C  26D9               	addwf	fsr2l,f,c
  5031   00162E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5032   001630  22DA               	addwfc	fsr2h,f,c
  5033   001632  CFDE F04F          	movff	postinc2,___flge@ff2
  5034   001636  CFDE F050          	movff	postinc2,___flge@ff2+1
  5035   00163A  CFDE F051          	movff	postinc2,___flge@ff2+2
  5036   00163E  CFDE F052          	movff	postinc2,___flge@ff2+3
  5037   001642  ECD0  F01A         	call	___flge	;wreg free
  5038   001646  B0D8               	btfsc	status,0,c
  5039   001648  EF28  F00B         	goto	u3501
  5040   00164C  EF2A  F00B         	goto	u3500
  5041   001650                     u3501:
  5042   001650  EF59  F00B         	goto	l3917
  5043   001654                     u3500:
  5044   001654                     l3911:
  5045   001654  0E00               	movlw	0
  5046   001656  6E4B               	movwf	___flge@ff1^0,c
  5047   001658  0E00               	movlw	0
  5048   00165A  6E4C               	movwf	(___flge@ff1+1)^0,c
  5049   00165C  0EB4               	movlw	180
  5050   00165E  6E4D               	movwf	(___flge@ff1+2)^0,c
  5051   001660  0E43               	movlw	67
  5052   001662  6E4E               	movwf	(___flge@ff1+3)^0,c
  5053   001664  EE20 F010          	lfsr	2,16
  5054   001668  5057               	movf	Hue2Colour@cf^0,w,c
  5055   00166A  26D9               	addwf	fsr2l,f,c
  5056   00166C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5057   00166E  22DA               	addwfc	fsr2h,f,c
  5058   001670  CFDE F04F          	movff	postinc2,___flge@ff2
  5059   001674  CFDE F050          	movff	postinc2,___flge@ff2+1
  5060   001678  CFDE F051          	movff	postinc2,___flge@ff2+2
  5061   00167C  CFDE F052          	movff	postinc2,___flge@ff2+3
  5062   001680  ECD0  F01A         	call	___flge	;wreg free
  5063   001684  A0D8               	btfss	status,0,c
  5064   001686  EF47  F00B         	goto	u3511
  5065   00168A  EF49  F00B         	goto	u3510
  5066   00168E                     u3511:
  5067   00168E  EF59  F00B         	goto	l3917
  5068   001692                     u3510:
  5069   001692                     
  5070                           ;colorfunctions.c: 63:     {;colorfunctions.c: 65:         colourname = "Red";
  5071   001692  0E60               	movlw	low STR_2
  5072   001694  6E5B               	movwf	Hue2Colour@colourname^0,c
  5073   001696  0E0E               	movlw	high STR_2
  5074   001698  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5075   00169A                     
  5076                           ;colorfunctions.c: 68:         cf->colourindex=0;
  5077   00169A  EE20 F014          	lfsr	2,20
  5078   00169E  5057               	movf	Hue2Colour@cf^0,w,c
  5079   0016A0  26D9               	addwf	fsr2l,f,c
  5080   0016A2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5081   0016A4  22DA               	addwfc	fsr2h,f,c
  5082   0016A6  0E00               	movlw	0
  5083   0016A8  6EDE               	movwf	postinc2,c
  5084   0016AA  0E00               	movlw	0
  5085   0016AC  6EDD               	movwf	postdec2,c
  5086                           
  5087                           ;colorfunctions.c: 69:     }
  5088   0016AE  EF45  F00D         	goto	l3971
  5089   0016B2                     l3917:
  5090   0016B2  0E00               	movlw	0
  5091   0016B4  6E4B               	movwf	___flge@ff1^0,c
  5092   0016B6  0E00               	movlw	0
  5093   0016B8  6E4C               	movwf	(___flge@ff1+1)^0,c
  5094   0016BA  0E60               	movlw	96
  5095   0016BC  6E4D               	movwf	(___flge@ff1+2)^0,c
  5096   0016BE  0E41               	movlw	65
  5097   0016C0  6E4E               	movwf	(___flge@ff1+3)^0,c
  5098   0016C2  EE20 F010          	lfsr	2,16
  5099   0016C6  5057               	movf	Hue2Colour@cf^0,w,c
  5100   0016C8  26D9               	addwf	fsr2l,f,c
  5101   0016CA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5102   0016CC  22DA               	addwfc	fsr2h,f,c
  5103   0016CE  CFDE F04F          	movff	postinc2,___flge@ff2
  5104   0016D2  CFDE F050          	movff	postinc2,___flge@ff2+1
  5105   0016D6  CFDE F051          	movff	postinc2,___flge@ff2+2
  5106   0016DA  CFDE F052          	movff	postinc2,___flge@ff2+3
  5107   0016DE  ECD0  F01A         	call	___flge	;wreg free
  5108   0016E2  B0D8               	btfsc	status,0,c
  5109   0016E4  EF76  F00B         	goto	u3521
  5110   0016E8  EF78  F00B         	goto	u3520
  5111   0016EC                     u3521:
  5112   0016EC  EFA7  F00B         	goto	l3925
  5113   0016F0                     u3520:
  5114   0016F0  EE20 F010          	lfsr	2,16
  5115   0016F4  5057               	movf	Hue2Colour@cf^0,w,c
  5116   0016F6  26D9               	addwf	fsr2l,f,c
  5117   0016F8  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5118   0016FA  22DA               	addwfc	fsr2h,f,c
  5119   0016FC  CFDE F04B          	movff	postinc2,___flge@ff1
  5120   001700  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5121   001704  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5122   001708  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5123   00170C  0E00               	movlw	0
  5124   00170E  6E4F               	movwf	___flge@ff2^0,c
  5125   001710  0E00               	movlw	0
  5126   001712  6E50               	movwf	(___flge@ff2+1)^0,c
  5127   001714  0E90               	movlw	144
  5128   001716  6E51               	movwf	(___flge@ff2+2)^0,c
  5129   001718  0E41               	movlw	65
  5130   00171A  6E52               	movwf	(___flge@ff2+3)^0,c
  5131   00171C  ECD0  F01A         	call	___flge	;wreg free
  5132   001720  B0D8               	btfsc	status,0,c
  5133   001722  EF95  F00B         	goto	u3531
  5134   001726  EF97  F00B         	goto	u3530
  5135   00172A                     u3531:
  5136   00172A  EFA7  F00B         	goto	l3925
  5137   00172E                     u3530:
  5138   00172E                     
  5139                           ;colorfunctions.c: 71:     {;colorfunctions.c: 72:         colourname = "Pink";
  5140   00172E  0E5B               	movlw	low STR_3
  5141   001730  6E5B               	movwf	Hue2Colour@colourname^0,c
  5142   001732  0E0E               	movlw	high STR_3
  5143   001734  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5144   001736                     
  5145                           ;colorfunctions.c: 73:         cf->colourindex=4;
  5146   001736  EE20 F014          	lfsr	2,20
  5147   00173A  5057               	movf	Hue2Colour@cf^0,w,c
  5148   00173C  26D9               	addwf	fsr2l,f,c
  5149   00173E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5150   001740  22DA               	addwfc	fsr2h,f,c
  5151   001742  0E04               	movlw	4
  5152   001744  6EDE               	movwf	postinc2,c
  5153   001746  0E00               	movlw	0
  5154   001748  6EDD               	movwf	postdec2,c
  5155                           
  5156                           ;colorfunctions.c: 74:     }
  5157   00174A  EF45  F00D         	goto	l3971
  5158   00174E                     l3925:
  5159   00174E  0E00               	movlw	0
  5160   001750  6E4B               	movwf	___flge@ff1^0,c
  5161   001752  0E00               	movlw	0
  5162   001754  6E4C               	movwf	(___flge@ff1+1)^0,c
  5163   001756  0EAA               	movlw	170
  5164   001758  6E4D               	movwf	(___flge@ff1+2)^0,c
  5165   00175A  0E42               	movlw	66
  5166   00175C  6E4E               	movwf	(___flge@ff1+3)^0,c
  5167   00175E  EE20 F010          	lfsr	2,16
  5168   001762  5057               	movf	Hue2Colour@cf^0,w,c
  5169   001764  26D9               	addwf	fsr2l,f,c
  5170   001766  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5171   001768  22DA               	addwfc	fsr2h,f,c
  5172   00176A  CFDE F04F          	movff	postinc2,___flge@ff2
  5173   00176E  CFDE F050          	movff	postinc2,___flge@ff2+1
  5174   001772  CFDE F051          	movff	postinc2,___flge@ff2+2
  5175   001776  CFDE F052          	movff	postinc2,___flge@ff2+3
  5176   00177A  ECD0  F01A         	call	___flge	;wreg free
  5177   00177E  B0D8               	btfsc	status,0,c
  5178   001780  EFC4  F00B         	goto	u3541
  5179   001784  EFC6  F00B         	goto	u3540
  5180   001788                     u3541:
  5181   001788  EFF5  F00B         	goto	l3933
  5182   00178C                     u3540:
  5183   00178C  EE20 F010          	lfsr	2,16
  5184   001790  5057               	movf	Hue2Colour@cf^0,w,c
  5185   001792  26D9               	addwf	fsr2l,f,c
  5186   001794  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5187   001796  22DA               	addwfc	fsr2h,f,c
  5188   001798  CFDE F04B          	movff	postinc2,___flge@ff1
  5189   00179C  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5190   0017A0  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5191   0017A4  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5192   0017A8  0E00               	movlw	0
  5193   0017AA  6E4F               	movwf	___flge@ff2^0,c
  5194   0017AC  0E00               	movlw	0
  5195   0017AE  6E50               	movwf	(___flge@ff2+1)^0,c
  5196   0017B0  0E02               	movlw	2
  5197   0017B2  6E51               	movwf	(___flge@ff2+2)^0,c
  5198   0017B4  0E43               	movlw	67
  5199   0017B6  6E52               	movwf	(___flge@ff2+3)^0,c
  5200   0017B8  ECD0  F01A         	call	___flge	;wreg free
  5201   0017BC  B0D8               	btfsc	status,0,c
  5202   0017BE  EFE3  F00B         	goto	u3551
  5203   0017C2  EFE5  F00B         	goto	u3550
  5204   0017C6                     u3551:
  5205   0017C6  EFF5  F00B         	goto	l3933
  5206   0017CA                     u3550:
  5207   0017CA                     
  5208                           ;colorfunctions.c: 76:      {colourname = "Dark Blue";
  5209   0017CA  0E37               	movlw	low STR_4
  5210   0017CC  6E5B               	movwf	Hue2Colour@colourname^0,c
  5211   0017CE  0E0E               	movlw	high STR_4
  5212   0017D0  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5213   0017D2                     
  5214                           ;colorfunctions.c: 77:         cf->colourindex=2;}
  5215   0017D2  EE20 F014          	lfsr	2,20
  5216   0017D6  5057               	movf	Hue2Colour@cf^0,w,c
  5217   0017D8  26D9               	addwf	fsr2l,f,c
  5218   0017DA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5219   0017DC  22DA               	addwfc	fsr2h,f,c
  5220   0017DE  0E02               	movlw	2
  5221   0017E0  6EDE               	movwf	postinc2,c
  5222   0017E2  0E00               	movlw	0
  5223   0017E4  6EDD               	movwf	postdec2,c
  5224   0017E6  EF45  F00D         	goto	l3971
  5225   0017EA                     l3933:
  5226   0017EA  0E00               	movlw	0
  5227   0017EC  6E4B               	movwf	___flge@ff1^0,c
  5228   0017EE  0E00               	movlw	0
  5229   0017F0  6E4C               	movwf	(___flge@ff1+1)^0,c
  5230   0017F2  0EC0               	movlw	192
  5231   0017F4  6E4D               	movwf	(___flge@ff1+2)^0,c
  5232   0017F6  0E40               	movlw	64
  5233   0017F8  6E4E               	movwf	(___flge@ff1+3)^0,c
  5234   0017FA  EE20 F010          	lfsr	2,16
  5235   0017FE  5057               	movf	Hue2Colour@cf^0,w,c
  5236   001800  26D9               	addwf	fsr2l,f,c
  5237   001802  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5238   001804  22DA               	addwfc	fsr2h,f,c
  5239   001806  CFDE F04F          	movff	postinc2,___flge@ff2
  5240   00180A  CFDE F050          	movff	postinc2,___flge@ff2+1
  5241   00180E  CFDE F051          	movff	postinc2,___flge@ff2+2
  5242   001812  CFDE F052          	movff	postinc2,___flge@ff2+3
  5243   001816  ECD0  F01A         	call	___flge	;wreg free
  5244   00181A  B0D8               	btfsc	status,0,c
  5245   00181C  EF12  F00C         	goto	u3561
  5246   001820  EF14  F00C         	goto	u3560
  5247   001824                     u3561:
  5248   001824  EF43  F00C         	goto	l3941
  5249   001828                     u3560:
  5250   001828  EE20 F010          	lfsr	2,16
  5251   00182C  5057               	movf	Hue2Colour@cf^0,w,c
  5252   00182E  26D9               	addwf	fsr2l,f,c
  5253   001830  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5254   001832  22DA               	addwfc	fsr2h,f,c
  5255   001834  CFDE F04B          	movff	postinc2,___flge@ff1
  5256   001838  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5257   00183C  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5258   001840  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5259   001844  0E00               	movlw	0
  5260   001846  6E4F               	movwf	___flge@ff2^0,c
  5261   001848  0E00               	movlw	0
  5262   00184A  6E50               	movwf	(___flge@ff2+1)^0,c
  5263   00184C  0E40               	movlw	64
  5264   00184E  6E51               	movwf	(___flge@ff2+2)^0,c
  5265   001850  0E41               	movlw	65
  5266   001852  6E52               	movwf	(___flge@ff2+3)^0,c
  5267   001854  ECD0  F01A         	call	___flge	;wreg free
  5268   001858  B0D8               	btfsc	status,0,c
  5269   00185A  EF31  F00C         	goto	u3571
  5270   00185E  EF33  F00C         	goto	u3570
  5271   001862                     u3571:
  5272   001862  EF43  F00C         	goto	l3941
  5273   001866                     u3570:
  5274   001866                     
  5275                           ;colorfunctions.c: 79:     {;colorfunctions.c: 80:         colourname = "Orange";
  5276   001866  0E41               	movlw	low STR_5
  5277   001868  6E5B               	movwf	Hue2Colour@colourname^0,c
  5278   00186A  0E0E               	movlw	high STR_5
  5279   00186C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5280   00186E                     
  5281                           ;colorfunctions.c: 81:         cf->colourindex=5;
  5282   00186E  EE20 F014          	lfsr	2,20
  5283   001872  5057               	movf	Hue2Colour@cf^0,w,c
  5284   001874  26D9               	addwf	fsr2l,f,c
  5285   001876  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5286   001878  22DA               	addwfc	fsr2h,f,c
  5287   00187A  0E05               	movlw	5
  5288   00187C  6EDE               	movwf	postinc2,c
  5289   00187E  0E00               	movlw	0
  5290   001880  6EDD               	movwf	postdec2,c
  5291                           
  5292                           ;colorfunctions.c: 82:     }
  5293   001882  EF45  F00D         	goto	l3971
  5294   001886                     l3941:
  5295   001886  0E00               	movlw	0
  5296   001888  6E4B               	movwf	___flge@ff1^0,c
  5297   00188A  0E00               	movlw	0
  5298   00188C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5299   00188E  0E82               	movlw	130
  5300   001890  6E4D               	movwf	(___flge@ff1+2)^0,c
  5301   001892  0E42               	movlw	66
  5302   001894  6E4E               	movwf	(___flge@ff1+3)^0,c
  5303   001896  EE20 F010          	lfsr	2,16
  5304   00189A  5057               	movf	Hue2Colour@cf^0,w,c
  5305   00189C  26D9               	addwf	fsr2l,f,c
  5306   00189E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5307   0018A0  22DA               	addwfc	fsr2h,f,c
  5308   0018A2  CFDE F04F          	movff	postinc2,___flge@ff2
  5309   0018A6  CFDE F050          	movff	postinc2,___flge@ff2+1
  5310   0018AA  CFDE F051          	movff	postinc2,___flge@ff2+2
  5311   0018AE  CFDE F052          	movff	postinc2,___flge@ff2+3
  5312   0018B2  ECD0  F01A         	call	___flge	;wreg free
  5313   0018B6  B0D8               	btfsc	status,0,c
  5314   0018B8  EF60  F00C         	goto	u3581
  5315   0018BC  EF62  F00C         	goto	u3580
  5316   0018C0                     u3581:
  5317   0018C0  EFC0  F00C         	goto	l3955
  5318   0018C4                     u3580:
  5319   0018C4  EE20 F010          	lfsr	2,16
  5320   0018C8  5057               	movf	Hue2Colour@cf^0,w,c
  5321   0018CA  26D9               	addwf	fsr2l,f,c
  5322   0018CC  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5323   0018CE  22DA               	addwfc	fsr2h,f,c
  5324   0018D0  CFDE F04B          	movff	postinc2,___flge@ff1
  5325   0018D4  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5326   0018D8  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5327   0018DC  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5328   0018E0  0E00               	movlw	0
  5329   0018E2  6E4F               	movwf	___flge@ff2^0,c
  5330   0018E4  0E00               	movlw	0
  5331   0018E6  6E50               	movwf	(___flge@ff2+1)^0,c
  5332   0018E8  0EA0               	movlw	160
  5333   0018EA  6E51               	movwf	(___flge@ff2+2)^0,c
  5334   0018EC  0E42               	movlw	66
  5335   0018EE  6E52               	movwf	(___flge@ff2+3)^0,c
  5336   0018F0  ECD0  F01A         	call	___flge	;wreg free
  5337   0018F4  B0D8               	btfsc	status,0,c
  5338   0018F6  EF7F  F00C         	goto	u3591
  5339   0018FA  EF81  F00C         	goto	u3590
  5340   0018FE                     u3591:
  5341   0018FE  EFC0  F00C         	goto	l3955
  5342   001902                     u3590:
  5343   001902                     
  5344                           ;colorfunctions.c: 84:     {;colorfunctions.c: 87:         if (rel->B > 0.22)
  5345   001902  0EAE               	movlw	174
  5346   001904  6E4B               	movwf	___flge@ff1^0,c
  5347   001906  0E47               	movlw	71
  5348   001908  6E4C               	movwf	(___flge@ff1+1)^0,c
  5349   00190A  0E61               	movlw	97
  5350   00190C  6E4D               	movwf	(___flge@ff1+2)^0,c
  5351   00190E  0E3E               	movlw	62
  5352   001910  6E4E               	movwf	(___flge@ff1+3)^0,c
  5353   001912  EE20 F008          	lfsr	2,8
  5354   001916  5059               	movf	Hue2Colour@rel^0,w,c
  5355   001918  26D9               	addwf	fsr2l,f,c
  5356   00191A  505A               	movf	(Hue2Colour@rel+1)^0,w,c
  5357   00191C  22DA               	addwfc	fsr2h,f,c
  5358   00191E  CFDE F04F          	movff	postinc2,___flge@ff2
  5359   001922  CFDE F050          	movff	postinc2,___flge@ff2+1
  5360   001926  CFDE F051          	movff	postinc2,___flge@ff2+2
  5361   00192A  CFDE F052          	movff	postinc2,___flge@ff2+3
  5362   00192E  ECD0  F01A         	call	___flge	;wreg free
  5363   001932  B0D8               	btfsc	status,0,c
  5364   001934  EF9E  F00C         	goto	u3601
  5365   001938  EFA0  F00C         	goto	u3600
  5366   00193C                     u3601:
  5367   00193C  EFB0  F00C         	goto	l3951
  5368   001940                     u3600:
  5369   001940                     
  5370                           ;colorfunctions.c: 88:         { colourname = "Light Blue";
  5371   001940  0E2C               	movlw	low STR_6
  5372   001942  6E5B               	movwf	Hue2Colour@colourname^0,c
  5373   001944  0E0E               	movlw	high STR_6
  5374   001946  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5375   001948                     
  5376                           ;colorfunctions.c: 89:         cf->colourindex=6;}
  5377   001948  EE20 F014          	lfsr	2,20
  5378   00194C  5057               	movf	Hue2Colour@cf^0,w,c
  5379   00194E  26D9               	addwf	fsr2l,f,c
  5380   001950  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5381   001952  22DA               	addwfc	fsr2h,f,c
  5382   001954  0E06               	movlw	6
  5383   001956  6EDE               	movwf	postinc2,c
  5384   001958  0E00               	movlw	0
  5385   00195A  6EDD               	movwf	postdec2,c
  5386   00195C  EF45  F00D         	goto	l3971
  5387   001960                     l3951:
  5388                           
  5389                           ;colorfunctions.c: 91:             colourname = "Green";
  5390   001960  0E55               	movlw	low STR_7
  5391   001962  6E5B               	movwf	Hue2Colour@colourname^0,c
  5392   001964  0E0E               	movlw	high STR_7
  5393   001966  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5394   001968                     
  5395                           ;colorfunctions.c: 92:         cf->colourindex=1;
  5396   001968  EE20 F014          	lfsr	2,20
  5397   00196C  5057               	movf	Hue2Colour@cf^0,w,c
  5398   00196E  26D9               	addwf	fsr2l,f,c
  5399   001970  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5400   001972  22DA               	addwfc	fsr2h,f,c
  5401   001974  0E01               	movlw	1
  5402   001976  6EDE               	movwf	postinc2,c
  5403   001978  0E00               	movlw	0
  5404   00197A  6EDD               	movwf	postdec2,c
  5405   00197C  EF45  F00D         	goto	l3971
  5406   001980                     l3955:
  5407   001980  0E00               	movlw	0
  5408   001982  6E4B               	movwf	___flge@ff1^0,c
  5409   001984  0E00               	movlw	0
  5410   001986  6E4C               	movwf	(___flge@ff1+1)^0,c
  5411   001988  0E90               	movlw	144
  5412   00198A  6E4D               	movwf	(___flge@ff1+2)^0,c
  5413   00198C  0E41               	movlw	65
  5414   00198E  6E4E               	movwf	(___flge@ff1+3)^0,c
  5415   001990  EE20 F010          	lfsr	2,16
  5416   001994  5057               	movf	Hue2Colour@cf^0,w,c
  5417   001996  26D9               	addwf	fsr2l,f,c
  5418   001998  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5419   00199A  22DA               	addwfc	fsr2h,f,c
  5420   00199C  CFDE F04F          	movff	postinc2,___flge@ff2
  5421   0019A0  CFDE F050          	movff	postinc2,___flge@ff2+1
  5422   0019A4  CFDE F051          	movff	postinc2,___flge@ff2+2
  5423   0019A8  CFDE F052          	movff	postinc2,___flge@ff2+3
  5424   0019AC  ECD0  F01A         	call	___flge	;wreg free
  5425   0019B0  B0D8               	btfsc	status,0,c
  5426   0019B2  EFDD  F00C         	goto	u3611
  5427   0019B6  EFDF  F00C         	goto	u3610
  5428   0019BA                     u3611:
  5429   0019BA  EF3B  F00D         	goto	l3969
  5430   0019BE                     u3610:
  5431   0019BE  EE20 F010          	lfsr	2,16
  5432   0019C2  5057               	movf	Hue2Colour@cf^0,w,c
  5433   0019C4  26D9               	addwf	fsr2l,f,c
  5434   0019C6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5435   0019C8  22DA               	addwfc	fsr2h,f,c
  5436   0019CA  CFDE F04B          	movff	postinc2,___flge@ff1
  5437   0019CE  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5438   0019D2  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5439   0019D6  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5440   0019DA  0E00               	movlw	0
  5441   0019DC  6E4F               	movwf	___flge@ff2^0,c
  5442   0019DE  0E00               	movlw	0
  5443   0019E0  6E50               	movwf	(___flge@ff2+1)^0,c
  5444   0019E2  0ED8               	movlw	216
  5445   0019E4  6E51               	movwf	(___flge@ff2+2)^0,c
  5446   0019E6  0E41               	movlw	65
  5447   0019E8  6E52               	movwf	(___flge@ff2+3)^0,c
  5448   0019EA  ECD0  F01A         	call	___flge	;wreg free
  5449   0019EE  B0D8               	btfsc	status,0,c
  5450   0019F0  EFFC  F00C         	goto	u3621
  5451   0019F4  EFFE  F00C         	goto	u3620
  5452   0019F8                     u3621:
  5453   0019F8  EF3B  F00D         	goto	l3969
  5454   0019FC                     u3620:
  5455   0019FC                     
  5456                           ;colorfunctions.c: 96:     {;colorfunctions.c: 97:         if (rel->R > 0.51)
  5457   0019FC  0E5C               	movlw	92
  5458   0019FE  6E4B               	movwf	___flge@ff1^0,c
  5459   001A00  0E8F               	movlw	143
  5460   001A02  6E4C               	movwf	(___flge@ff1+1)^0,c
  5461   001A04  0E02               	movlw	2
  5462   001A06  6E4D               	movwf	(___flge@ff1+2)^0,c
  5463   001A08  0E3F               	movlw	63
  5464   001A0A  6E4E               	movwf	(___flge@ff1+3)^0,c
  5465   001A0C  C059  FFD9         	movff	Hue2Colour@rel,fsr2l
  5466   001A10  C05A  FFDA         	movff	Hue2Colour@rel+1,fsr2h
  5467   001A14  CFDE F04F          	movff	postinc2,___flge@ff2
  5468   001A18  CFDE F050          	movff	postinc2,___flge@ff2+1
  5469   001A1C  CFDE F051          	movff	postinc2,___flge@ff2+2
  5470   001A20  CFDE F052          	movff	postinc2,___flge@ff2+3
  5471   001A24  ECD0  F01A         	call	___flge	;wreg free
  5472   001A28  B0D8               	btfsc	status,0,c
  5473   001A2A  EF19  F00D         	goto	u3631
  5474   001A2E  EF1B  F00D         	goto	u3630
  5475   001A32                     u3631:
  5476   001A32  EF2B  F00D         	goto	l3965
  5477   001A36                     u3630:
  5478   001A36                     
  5479                           ;colorfunctions.c: 98:         {;colorfunctions.c: 99:                   colourname = "Y
      +                          ellow";
  5480   001A36  0E48               	movlw	low STR_8
  5481   001A38  6E5B               	movwf	Hue2Colour@colourname^0,c
  5482   001A3A  0E0E               	movlw	high STR_8
  5483   001A3C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5484   001A3E                     
  5485                           ;colorfunctions.c: 100:         cf->colourindex=3;
  5486   001A3E  EE20 F014          	lfsr	2,20
  5487   001A42  5057               	movf	Hue2Colour@cf^0,w,c
  5488   001A44  26D9               	addwf	fsr2l,f,c
  5489   001A46  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5490   001A48  22DA               	addwfc	fsr2h,f,c
  5491   001A4A  0E03               	movlw	3
  5492   001A4C  6EDE               	movwf	postinc2,c
  5493   001A4E  0E00               	movlw	0
  5494   001A50  6EDD               	movwf	postdec2,c
  5495                           
  5496                           ;colorfunctions.c: 101:             }
  5497   001A52  EF45  F00D         	goto	l3971
  5498   001A56                     l3965:
  5499                           
  5500                           ;colorfunctions.c: 103:             colourname = "White";
  5501   001A56  0E4F               	movlw	low STR_9
  5502   001A58  6E5B               	movwf	Hue2Colour@colourname^0,c
  5503   001A5A  0E0E               	movlw	high STR_9
  5504   001A5C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5505   001A5E                     
  5506                           ;colorfunctions.c: 104:        cf->colourindex=7;
  5507   001A5E  EE20 F014          	lfsr	2,20
  5508   001A62  5057               	movf	Hue2Colour@cf^0,w,c
  5509   001A64  26D9               	addwf	fsr2l,f,c
  5510   001A66  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5511   001A68  22DA               	addwfc	fsr2h,f,c
  5512   001A6A  0E07               	movlw	7
  5513   001A6C  6EDE               	movwf	postinc2,c
  5514   001A6E  0E00               	movlw	0
  5515   001A70  6EDD               	movwf	postdec2,c
  5516   001A72  EF45  F00D         	goto	l3971
  5517   001A76                     l3969:
  5518   001A76  EE20 F014          	lfsr	2,20
  5519   001A7A  5057               	movf	Hue2Colour@cf^0,w,c
  5520   001A7C  26D9               	addwf	fsr2l,f,c
  5521   001A7E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5522   001A80  22DA               	addwfc	fsr2h,f,c
  5523   001A82  0E08               	movlw	8
  5524   001A84  6EDE               	movwf	postinc2,c
  5525   001A86  0E00               	movlw	0
  5526   001A88  6EDD               	movwf	postdec2,c
  5527   001A8A                     l3971:
  5528                           
  5529                           ;colorfunctions.c: 108:     return colourname;
  5530   001A8A  C05B  F057         	movff	Hue2Colour@colourname,?_Hue2Colour
  5531   001A8E  C05C  F058         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
  5532   001A92  0012               	return		;funcret
  5533   001A94                     __end_of_Hue2Colour:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _Colour2Action *****************
  5537 ;; Defined at:
  5538 ;;		line 111 in file "colorfunctions.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  cf              2   90[COMRAM] PTR struct RGBC
  5541 ;;		 -> colorf(22), 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;Total ram usage:        4 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 8
  5560 ;; This function calls:
  5561 ;;		_Blue_T180
  5562 ;;		_Green_L90
  5563 ;;		_LightBlue_L135
  5564 ;;		_Orange_R135
  5565 ;;		_Pink_rev1_L90
  5566 ;;		_Red_R90
  5567 ;;		_White
  5568 ;;		_Yellow_rev1_R90
  5569 ;; This function is called by:
  5570 ;;		_main
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text28
  5575   002FC6                     __ptext28:
  5576                           	callstack 0
  5577   002FC6                     _Colour2Action:
  5578                           	callstack 22
  5579   002FC6                     
  5580                           ;colorfunctions.c: 111: void Colour2Action(struct RGBC *cf);colorfunctions.c: 112: {;col
      +                          orfunctions.c: 113:     if (cf->colourindex == 0)
  5581   002FC6  EE20 F014          	lfsr	2,20
  5582   002FCA  505B               	movf	Colour2Action@cf^0,w,c
  5583   002FCC  26D9               	addwf	fsr2l,f,c
  5584   002FCE  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5585   002FD0  22DA               	addwfc	fsr2h,f,c
  5586   002FD2  50DE               	movf	postinc2,w,c
  5587   002FD4  10DE               	iorwf	postinc2,w,c
  5588   002FD6  A4D8               	btfss	status,2,c
  5589   002FD8  EFF0  F017         	goto	u3641
  5590   002FDC  EFF2  F017         	goto	u3640
  5591   002FE0                     u3641:
  5592   002FE0  EFFE  F017         	goto	l3979
  5593   002FE4                     u3640:
  5594   002FE4                     
  5595                           ;colorfunctions.c: 114:     {;colorfunctions.c: 115:         Red_R90(&motorL,&motorR);
  5596   002FE4  0EB9               	movlw	low _motorL
  5597   002FE6  6E21               	movwf	Red_R90@mL^0,c
  5598   002FE8  0E00               	movlw	high _motorL
  5599   002FEA  6E22               	movwf	(Red_R90@mL+1)^0,c
  5600   002FEC  0EB0               	movlw	low _motorR
  5601   002FEE  6E23               	movwf	Red_R90@mR^0,c
  5602   002FF0  0E00               	movlw	high _motorR
  5603   002FF2  6E24               	movwf	(Red_R90@mR+1)^0,c
  5604   002FF4  ECBB  F01F         	call	_Red_R90	;wreg free
  5605                           
  5606                           ;colorfunctions.c: 116:     }
  5607   002FF8  EFBC  F018         	goto	l163
  5608   002FFC                     l3979:
  5609   002FFC  EE20 F014          	lfsr	2,20
  5610   003000  505B               	movf	Colour2Action@cf^0,w,c
  5611   003002  26D9               	addwf	fsr2l,f,c
  5612   003004  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5613   003006  22DA               	addwfc	fsr2h,f,c
  5614   003008  04DE               	decf	postinc2,w,c
  5615   00300A  10DE               	iorwf	postinc2,w,c
  5616   00300C  A4D8               	btfss	status,2,c
  5617   00300E  EF0B  F018         	goto	u3651
  5618   003012  EF0D  F018         	goto	u3650
  5619   003016                     u3651:
  5620   003016  EF19  F018         	goto	l3983
  5621   00301A                     u3650:
  5622   00301A                     
  5623                           ;colorfunctions.c: 118:     {;colorfunctions.c: 119:         Green_L90(&motorL,&motorR);
  5624   00301A  0EB9               	movlw	low _motorL
  5625   00301C  6E21               	movwf	Green_L90@mL^0,c
  5626   00301E  0E00               	movlw	high _motorL
  5627   003020  6E22               	movwf	(Green_L90@mL+1)^0,c
  5628   003022  0EB0               	movlw	low _motorR
  5629   003024  6E23               	movwf	Green_L90@mR^0,c
  5630   003026  0E00               	movlw	high _motorR
  5631   003028  6E24               	movwf	(Green_L90@mR+1)^0,c
  5632   00302A  ECF9  F01F         	call	_Green_L90	;wreg free
  5633                           
  5634                           ;colorfunctions.c: 120:     }
  5635   00302E  EFBC  F018         	goto	l163
  5636   003032                     l3983:
  5637   003032  EE20 F014          	lfsr	2,20
  5638   003036  505B               	movf	Colour2Action@cf^0,w,c
  5639   003038  26D9               	addwf	fsr2l,f,c
  5640   00303A  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5641   00303C  22DA               	addwfc	fsr2h,f,c
  5642   00303E  0E02               	movlw	2
  5643   003040  18DE               	xorwf	postinc2,w,c
  5644   003042  10DE               	iorwf	postinc2,w,c
  5645   003044  A4D8               	btfss	status,2,c
  5646   003046  EF27  F018         	goto	u3661
  5647   00304A  EF29  F018         	goto	u3660
  5648   00304E                     u3661:
  5649   00304E  EF35  F018         	goto	l3987
  5650   003052                     u3660:
  5651   003052                     
  5652                           ;colorfunctions.c: 122:     {;colorfunctions.c: 123:         Blue_T180(&motorL,&motorR);
  5653   003052  0EB9               	movlw	low _motorL
  5654   003054  6E24               	movwf	Blue_T180@mL^0,c
  5655   003056  0E00               	movlw	high _motorL
  5656   003058  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5657   00305A  0EB0               	movlw	low _motorR
  5658   00305C  6E26               	movwf	Blue_T180@mR^0,c
  5659   00305E  0E00               	movlw	high _motorR
  5660   003060  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5661   003062  ECA2  F020         	call	_Blue_T180	;wreg free
  5662                           
  5663                           ;colorfunctions.c: 124:     }
  5664   003066  EFBC  F018         	goto	l163
  5665   00306A                     l3987:
  5666   00306A  EE20 F014          	lfsr	2,20
  5667   00306E  505B               	movf	Colour2Action@cf^0,w,c
  5668   003070  26D9               	addwf	fsr2l,f,c
  5669   003072  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5670   003074  22DA               	addwfc	fsr2h,f,c
  5671   003076  0E03               	movlw	3
  5672   003078  18DE               	xorwf	postinc2,w,c
  5673   00307A  10DE               	iorwf	postinc2,w,c
  5674   00307C  A4D8               	btfss	status,2,c
  5675   00307E  EF43  F018         	goto	u3671
  5676   003082  EF45  F018         	goto	u3670
  5677   003086                     u3671:
  5678   003086  EF51  F018         	goto	l3991
  5679   00308A                     u3670:
  5680   00308A                     
  5681                           ;colorfunctions.c: 126:     {;colorfunctions.c: 127:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5682   00308A  0EB9               	movlw	low _motorL
  5683   00308C  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5684   00308E  0E00               	movlw	high _motorL
  5685   003090  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5686   003092  0EB0               	movlw	low _motorR
  5687   003094  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5688   003096  0E00               	movlw	high _motorR
  5689   003098  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5690   00309A  ECA7  F01B         	call	_Yellow_rev1_R90	;wreg free
  5691                           
  5692                           ;colorfunctions.c: 128:     }
  5693   00309E  EFBC  F018         	goto	l163
  5694   0030A2                     l3991:
  5695   0030A2  EE20 F014          	lfsr	2,20
  5696   0030A6  505B               	movf	Colour2Action@cf^0,w,c
  5697   0030A8  26D9               	addwf	fsr2l,f,c
  5698   0030AA  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5699   0030AC  22DA               	addwfc	fsr2h,f,c
  5700   0030AE  0E04               	movlw	4
  5701   0030B0  18DE               	xorwf	postinc2,w,c
  5702   0030B2  10DE               	iorwf	postinc2,w,c
  5703   0030B4  A4D8               	btfss	status,2,c
  5704   0030B6  EF5F  F018         	goto	u3681
  5705   0030BA  EF61  F018         	goto	u3680
  5706   0030BE                     u3681:
  5707   0030BE  EF6D  F018         	goto	l3995
  5708   0030C2                     u3680:
  5709   0030C2                     
  5710                           ;colorfunctions.c: 130:     {;colorfunctions.c: 131:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5711   0030C2  0EB9               	movlw	low _motorL
  5712   0030C4  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5713   0030C6  0E00               	movlw	high _motorL
  5714   0030C8  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5715   0030CA  0EB0               	movlw	low _motorR
  5716   0030CC  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5717   0030CE  0E00               	movlw	high _motorR
  5718   0030D0  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5719   0030D2  ECFB  F01B         	call	_Pink_rev1_L90	;wreg free
  5720                           
  5721                           ;colorfunctions.c: 132:     }
  5722   0030D6  EFBC  F018         	goto	l163
  5723   0030DA                     l3995:
  5724   0030DA  EE20 F014          	lfsr	2,20
  5725   0030DE  505B               	movf	Colour2Action@cf^0,w,c
  5726   0030E0  26D9               	addwf	fsr2l,f,c
  5727   0030E2  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5728   0030E4  22DA               	addwfc	fsr2h,f,c
  5729   0030E6  0E05               	movlw	5
  5730   0030E8  18DE               	xorwf	postinc2,w,c
  5731   0030EA  10DE               	iorwf	postinc2,w,c
  5732   0030EC  A4D8               	btfss	status,2,c
  5733   0030EE  EF7B  F018         	goto	u3691
  5734   0030F2  EF7D  F018         	goto	u3690
  5735   0030F6                     u3691:
  5736   0030F6  EF89  F018         	goto	l3999
  5737   0030FA                     u3690:
  5738   0030FA                     
  5739                           ;colorfunctions.c: 134:     {;colorfunctions.c: 135:         Orange_R135(&motorL,&motorR
      +                          );
  5740   0030FA  0EB9               	movlw	low _motorL
  5741   0030FC  6E21               	movwf	Orange_R135@mL^0,c
  5742   0030FE  0E00               	movlw	high _motorL
  5743   003100  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5744   003102  0EB0               	movlw	low _motorR
  5745   003104  6E23               	movwf	Orange_R135@mR^0,c
  5746   003106  0E00               	movlw	high _motorR
  5747   003108  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5748   00310A  ECA2  F01C         	call	_Orange_R135	;wreg free
  5749                           
  5750                           ;colorfunctions.c: 136:     }
  5751   00310E  EFBC  F018         	goto	l163
  5752   003112                     l3999:
  5753   003112  EE20 F014          	lfsr	2,20
  5754   003116  505B               	movf	Colour2Action@cf^0,w,c
  5755   003118  26D9               	addwf	fsr2l,f,c
  5756   00311A  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5757   00311C  22DA               	addwfc	fsr2h,f,c
  5758   00311E  0E06               	movlw	6
  5759   003120  18DE               	xorwf	postinc2,w,c
  5760   003122  10DE               	iorwf	postinc2,w,c
  5761   003124  A4D8               	btfss	status,2,c
  5762   003126  EF97  F018         	goto	u3701
  5763   00312A  EF99  F018         	goto	u3700
  5764   00312E                     u3701:
  5765   00312E  EFA5  F018         	goto	l4003
  5766   003132                     u3700:
  5767   003132                     
  5768                           ;colorfunctions.c: 138:     {;colorfunctions.c: 139:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5769   003132  0EB9               	movlw	low _motorL
  5770   003134  6E21               	movwf	LightBlue_L135@mL^0,c
  5771   003136  0E00               	movlw	high _motorL
  5772   003138  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5773   00313A  0EB0               	movlw	low _motorR
  5774   00313C  6E23               	movwf	LightBlue_L135@mR^0,c
  5775   00313E  0E00               	movlw	high _motorR
  5776   003140  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5777   003142  ECF4  F01C         	call	_LightBlue_L135	;wreg free
  5778                           
  5779                           ;colorfunctions.c: 140:     }
  5780   003146  EFBC  F018         	goto	l163
  5781   00314A                     l4003:
  5782   00314A                     
  5783                           ;colorfunctions.c: 142:     {;colorfunctions.c: 143:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5784   00314A  0EB9               	movlw	low _motorL
  5785   00314C  0100               	movlb	0	; () banked
  5786   00314E  6FC2               	movwf	White@mL& (0+255),b
  5787   003150  0E00               	movlw	high _motorL
  5788   003152  6FC3               	movwf	(White@mL+1)& (0+255),b
  5789   003154  0EB0               	movlw	low _motorR
  5790   003156  6FC4               	movwf	White@mR& (0+255),b
  5791   003158  0E00               	movlw	high _motorR
  5792   00315A  6FC5               	movwf	(White@mR+1)& (0+255),b
  5793   00315C  C062  F0C6         	movff	_movementCount,White@movementCount	;volatile
  5794   003160  C063  F0C7         	movff	_movementCount+1,White@movementCount+1	;volatile
  5795   003164  0E66               	movlw	low _movementMemory
  5796   003166  6FC8               	movwf	White@movementMemory& (0+255),b
  5797   003168  0E00               	movlw	high _movementMemory
  5798   00316A  6FC9               	movwf	(White@movementMemory+1)& (0+255),b
  5799   00316C  0E00               	movlw	low _timerMemory
  5800   00316E  6FCA               	movwf	White@timerMemory& (0+255),b
  5801   003170  0E01               	movlw	high _timerMemory
  5802   003172  6FCB               	movwf	(White@timerMemory+1)& (0+255),b
  5803   003174  ECAA  F00F         	call	_White	;wreg free
  5804   003178                     l163:
  5805   003178  0012               	return		;funcret
  5806   00317A                     __end_of_Colour2Action:
  5807                           	callstack 0
  5808                           
  5809 ;; *************** function _White *****************
  5810 ;; Defined at:
  5811 ;;		line 334 in file "dc_motor.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  5814 ;;		 -> motorL(9), 
  5815 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  5816 ;;		 -> motorR(9), 
  5817 ;;  movementCoun    2    4[BANK0 ] unsigned int 
  5818 ;;  movementMemo    2    6[BANK0 ] PTR volatile unsigned in
  5819 ;;		 -> movementMemory(40), 
  5820 ;;  timerMemory     2    8[BANK0 ] PTR volatile float 
  5821 ;;		 -> timerMemory(80), 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  tempTimer       4   10[BANK0 ] float 
  5824 ;;  i               2   14[BANK0 ] int 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5834 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;Total ram usage:       20 bytes
  5839 ;; Hardware stack levels used: 1
  5840 ;; Hardware stack levels required when called: 7
  5841 ;; This function calls:
  5842 ;;		_Blue_T180
  5843 ;;		_Green_L90
  5844 ;;		_LightBlue_L135
  5845 ;;		_Orange_R135
  5846 ;;		_Pink_rev1_L90
  5847 ;;		_Red_R90
  5848 ;;		_TimerReset
  5849 ;;		_Yellow_rev1_R90
  5850 ;;		___fladd
  5851 ;;		___flge
  5852 ;;		_fullSpeedAhead
  5853 ;;		_getTimerValue
  5854 ;;		_reverseHalfSquare
  5855 ;;		_rotate180left
  5856 ;;		_stop
  5857 ;; This function is called by:
  5858 ;;		_Colour2Action
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text29
  5863   001F54                     __ptext29:
  5864                           	callstack 0
  5865   001F54                     _White:
  5866                           	callstack 22
  5867   001F54                     
  5868                           ;dc_motor.c: 334: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile float *timerMemory);dc_motor.c
      +                          : 335: {;dc_motor.c: 336:     LATDbits.LATD4 = 1;;
  5869   001F54  887C               	bsf	124,4,c	;volatile
  5870                           
  5871                           ;dc_motor.c: 338:     while (!retracingDone){
  5872   001F56  EFBD  F011         	goto	l3601
  5873   001F5A                     l3523:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;dc_motor.c: 339:         reverseHalfSquare(mL,mR);
  5877   001F5A  C0C2  F01B         	movff	White@mL,reverseHalfSquare@mL
  5878   001F5E  C0C3  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5879   001F62  C0C4  F01D         	movff	White@mR,reverseHalfSquare@mR
  5880   001F66  C0C5  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5881   001F6A  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  5882                           
  5883                           ;dc_motor.c: 340:         rotate180left(mL,mR);
  5884   001F6E  C0C2  F020         	movff	White@mL,rotate180left@mL
  5885   001F72  C0C3  F021         	movff	White@mL+1,rotate180left@mL+1
  5886   001F76  C0C4  F022         	movff	White@mR,rotate180left@mR
  5887   001F7A  C0C5  F023         	movff	White@mR+1,rotate180left@mR+1
  5888   001F7E  ECCC  F020         	call	_rotate180left	;wreg free
  5889   001F82                     
  5890                           ;dc_motor.c: 341:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5891   001F82  0E29               	movlw	41
  5892   001F84  6E58               	movwf	(??_White+1)^0,c
  5893   001F86  0E96               	movlw	150
  5894   001F88  6E57               	movwf	??_White^0,c
  5895   001F8A  0E7F               	movlw	127
  5896   001F8C                     u3817:
  5897   001F8C  2EE8               	decfsz	wreg,f,c
  5898   001F8E  D7FE               	bra	u3817
  5899   001F90  2E57               	decfsz	??_White^0,f,c
  5900   001F92  D7FC               	bra	u3817
  5901   001F94  2E58               	decfsz	(??_White+1)^0,f,c
  5902   001F96  D7FA               	bra	u3817
  5903   001F98  F000               	nop	
  5904   001F9A                     
  5905                           ;dc_motor.c: 342:         ForwardFlag = 0;
  5906   001F9A  0E00               	movlw	0
  5907   001F9C  0100               	movlb	0	; () banked
  5908   001F9E  6FF8               	movwf	_ForwardFlag& (0+255),b	;volatile
  5909   001FA0                     
  5910                           ; BSR set to: 0
  5911                           ;dc_motor.c: 343:         retracingDone = 1;
  5912   001FA0  0E00               	movlw	0
  5913   001FA2  6F61               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5914   001FA4  0E01               	movlw	1
  5915   001FA6  6F60               	movwf	_retracingDone& (0+255),b	;volatile
  5916   001FA8                     
  5917                           ; BSR set to: 0
  5918                           ;dc_motor.c: 345:         for (int i=movementCount; i>=0;i--){
  5919   001FA8  C0C6  F0D0         	movff	White@movementCount,White@i
  5920   001FAC  C0C7  F0D1         	movff	White@movementCount+1,White@i+1
  5921   001FB0                     l3533:
  5922                           
  5923                           ; BSR set to: 0
  5924   001FB0  BFD1               	btfsc	(White@i+1)& (0+255),7,b
  5925   001FB2  EFDF  F00F         	goto	u2880
  5926   001FB6  EFDD  F00F         	goto	u2881
  5927   001FBA                     u2881:
  5928   001FBA  EFE1  F00F         	goto	l566
  5929   001FBE                     u2880:
  5930   001FBE  EFBD  F011         	goto	l3601
  5931   001FC2                     l566:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;dc_motor.c: 346:             LATDbits.LATD4 = 1;;
  5935   001FC2  887C               	bsf	124,4,c	;volatile
  5936   001FC4                     
  5937                           ; BSR set to: 0
  5938                           ;dc_motor.c: 347:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5939   001FC4  0E11               	movlw	17
  5940   001FC6  6E58               	movwf	(??_White+1)^0,c
  5941   001FC8  0E3C               	movlw	60
  5942   001FCA  6E57               	movwf	??_White^0,c
  5943   001FCC  0ECB               	movlw	203
  5944   001FCE                     u3827:
  5945   001FCE  2EE8               	decfsz	wreg,f,c
  5946   001FD0  D7FE               	bra	u3827
  5947   001FD2  2E57               	decfsz	??_White^0,f,c
  5948   001FD4  D7FC               	bra	u3827
  5949   001FD6  2E58               	decfsz	(??_White+1)^0,f,c
  5950   001FD8  D7FA               	bra	u3827
  5951   001FDA  F000               	nop	
  5952   001FDC                     
  5953                           ;dc_motor.c: 348:             if (movementMemory[i]==0){
  5954   001FDC  90D8               	bcf	status,0,c
  5955   001FDE  0100               	movlb	0	; () banked
  5956   001FE0  35D0               	rlcf	White@i& (0+255),w,b
  5957   001FE2  6ED9               	movwf	fsr2l,c
  5958   001FE4  35D1               	rlcf	(White@i+1)& (0+255),w,b
  5959   001FE6  6EDA               	movwf	fsr2h,c
  5960   001FE8  51C8               	movf	White@movementMemory& (0+255),w,b
  5961   001FEA  26D9               	addwf	fsr2l,f,c
  5962   001FEC  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  5963   001FEE  22DA               	addwfc	fsr2h,f,c
  5964   001FF0  50DE               	movf	postinc2,w,c
  5965   001FF2  10DE               	iorwf	postinc2,w,c
  5966   001FF4  A4D8               	btfss	status,2,c
  5967   001FF6  EFFF  F00F         	goto	u2891
  5968   001FFA  EF01  F010         	goto	u2890
  5969   001FFE                     u2891:
  5970   001FFE  EF0D  F010         	goto	l3543
  5971   002002                     u2890:
  5972   002002                     
  5973                           ; BSR set to: 0
  5974                           ;dc_motor.c: 349:                 Red_R90(mL,mR);}
  5975   002002  C0C2  F021         	movff	White@mL,Red_R90@mL
  5976   002006  C0C3  F022         	movff	White@mL+1,Red_R90@mL+1
  5977   00200A  C0C4  F023         	movff	White@mR,Red_R90@mR
  5978   00200E  C0C5  F024         	movff	White@mR+1,Red_R90@mR+1
  5979   002012  ECBB  F01F         	call	_Red_R90	;wreg free
  5980   002016  EFE5  F010         	goto	l3571
  5981   00201A                     l3543:
  5982                           
  5983                           ; BSR set to: 0
  5984   00201A  90D8               	bcf	status,0,c
  5985   00201C  35D0               	rlcf	White@i& (0+255),w,b
  5986   00201E  6ED9               	movwf	fsr2l,c
  5987   002020  35D1               	rlcf	(White@i+1)& (0+255),w,b
  5988   002022  6EDA               	movwf	fsr2h,c
  5989   002024  51C8               	movf	White@movementMemory& (0+255),w,b
  5990   002026  26D9               	addwf	fsr2l,f,c
  5991   002028  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  5992   00202A  22DA               	addwfc	fsr2h,f,c
  5993   00202C  04DE               	decf	postinc2,w,c
  5994   00202E  10DE               	iorwf	postinc2,w,c
  5995   002030  A4D8               	btfss	status,2,c
  5996   002032  EF1D  F010         	goto	u2901
  5997   002036  EF1F  F010         	goto	u2900
  5998   00203A                     u2901:
  5999   00203A  EF2B  F010         	goto	l3547
  6000   00203E                     u2900:
  6001   00203E                     
  6002                           ; BSR set to: 0
  6003                           ;dc_motor.c: 351:                 Green_L90(mL,mR);}
  6004   00203E  C0C2  F021         	movff	White@mL,Green_L90@mL
  6005   002042  C0C3  F022         	movff	White@mL+1,Green_L90@mL+1
  6006   002046  C0C4  F023         	movff	White@mR,Green_L90@mR
  6007   00204A  C0C5  F024         	movff	White@mR+1,Green_L90@mR+1
  6008   00204E  ECF9  F01F         	call	_Green_L90	;wreg free
  6009   002052  EFE5  F010         	goto	l3571
  6010   002056                     l3547:
  6011                           
  6012                           ; BSR set to: 0
  6013   002056  90D8               	bcf	status,0,c
  6014   002058  35D0               	rlcf	White@i& (0+255),w,b
  6015   00205A  6ED9               	movwf	fsr2l,c
  6016   00205C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6017   00205E  6EDA               	movwf	fsr2h,c
  6018   002060  51C8               	movf	White@movementMemory& (0+255),w,b
  6019   002062  26D9               	addwf	fsr2l,f,c
  6020   002064  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6021   002066  22DA               	addwfc	fsr2h,f,c
  6022   002068  0E02               	movlw	2
  6023   00206A  18DE               	xorwf	postinc2,w,c
  6024   00206C  10DE               	iorwf	postinc2,w,c
  6025   00206E  A4D8               	btfss	status,2,c
  6026   002070  EF3C  F010         	goto	u2911
  6027   002074  EF3E  F010         	goto	u2910
  6028   002078                     u2911:
  6029   002078  EF4A  F010         	goto	l3551
  6030   00207C                     u2910:
  6031   00207C                     
  6032                           ; BSR set to: 0
  6033                           ;dc_motor.c: 353:                 Blue_T180(mL,mR);}
  6034   00207C  C0C2  F024         	movff	White@mL,Blue_T180@mL
  6035   002080  C0C3  F025         	movff	White@mL+1,Blue_T180@mL+1
  6036   002084  C0C4  F026         	movff	White@mR,Blue_T180@mR
  6037   002088  C0C5  F027         	movff	White@mR+1,Blue_T180@mR+1
  6038   00208C  ECA2  F020         	call	_Blue_T180	;wreg free
  6039   002090  EFE5  F010         	goto	l3571
  6040   002094                     l3551:
  6041                           
  6042                           ; BSR set to: 0
  6043   002094  90D8               	bcf	status,0,c
  6044   002096  35D0               	rlcf	White@i& (0+255),w,b
  6045   002098  6ED9               	movwf	fsr2l,c
  6046   00209A  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6047   00209C  6EDA               	movwf	fsr2h,c
  6048   00209E  51C8               	movf	White@movementMemory& (0+255),w,b
  6049   0020A0  26D9               	addwf	fsr2l,f,c
  6050   0020A2  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6051   0020A4  22DA               	addwfc	fsr2h,f,c
  6052   0020A6  0E03               	movlw	3
  6053   0020A8  18DE               	xorwf	postinc2,w,c
  6054   0020AA  10DE               	iorwf	postinc2,w,c
  6055   0020AC  A4D8               	btfss	status,2,c
  6056   0020AE  EF5B  F010         	goto	u2921
  6057   0020B2  EF5D  F010         	goto	u2920
  6058   0020B6                     u2921:
  6059   0020B6  EF69  F010         	goto	l3555
  6060   0020BA                     u2920:
  6061   0020BA                     
  6062                           ; BSR set to: 0
  6063                           ;dc_motor.c: 355:                 Yellow_rev1_R90(mL,mR);}
  6064   0020BA  C0C2  F021         	movff	White@mL,Yellow_rev1_R90@mL
  6065   0020BE  C0C3  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  6066   0020C2  C0C4  F023         	movff	White@mR,Yellow_rev1_R90@mR
  6067   0020C6  C0C5  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  6068   0020CA  ECA7  F01B         	call	_Yellow_rev1_R90	;wreg free
  6069   0020CE  EFE5  F010         	goto	l3571
  6070   0020D2                     l3555:
  6071                           
  6072                           ; BSR set to: 0
  6073   0020D2  90D8               	bcf	status,0,c
  6074   0020D4  35D0               	rlcf	White@i& (0+255),w,b
  6075   0020D6  6ED9               	movwf	fsr2l,c
  6076   0020D8  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6077   0020DA  6EDA               	movwf	fsr2h,c
  6078   0020DC  51C8               	movf	White@movementMemory& (0+255),w,b
  6079   0020DE  26D9               	addwf	fsr2l,f,c
  6080   0020E0  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6081   0020E2  22DA               	addwfc	fsr2h,f,c
  6082   0020E4  0E04               	movlw	4
  6083   0020E6  18DE               	xorwf	postinc2,w,c
  6084   0020E8  10DE               	iorwf	postinc2,w,c
  6085   0020EA  A4D8               	btfss	status,2,c
  6086   0020EC  EF7A  F010         	goto	u2931
  6087   0020F0  EF7C  F010         	goto	u2930
  6088   0020F4                     u2931:
  6089   0020F4  EF88  F010         	goto	l3559
  6090   0020F8                     u2930:
  6091   0020F8                     
  6092                           ; BSR set to: 0
  6093                           ;dc_motor.c: 357:                 Pink_rev1_L90(mL,mR);}
  6094   0020F8  C0C2  F021         	movff	White@mL,Pink_rev1_L90@mL
  6095   0020FC  C0C3  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  6096   002100  C0C4  F023         	movff	White@mR,Pink_rev1_L90@mR
  6097   002104  C0C5  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  6098   002108  ECFB  F01B         	call	_Pink_rev1_L90	;wreg free
  6099   00210C  EFE5  F010         	goto	l3571
  6100   002110                     l3559:
  6101                           
  6102                           ; BSR set to: 0
  6103   002110  90D8               	bcf	status,0,c
  6104   002112  35D0               	rlcf	White@i& (0+255),w,b
  6105   002114  6ED9               	movwf	fsr2l,c
  6106   002116  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6107   002118  6EDA               	movwf	fsr2h,c
  6108   00211A  51C8               	movf	White@movementMemory& (0+255),w,b
  6109   00211C  26D9               	addwf	fsr2l,f,c
  6110   00211E  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6111   002120  22DA               	addwfc	fsr2h,f,c
  6112   002122  0E05               	movlw	5
  6113   002124  18DE               	xorwf	postinc2,w,c
  6114   002126  10DE               	iorwf	postinc2,w,c
  6115   002128  A4D8               	btfss	status,2,c
  6116   00212A  EF99  F010         	goto	u2941
  6117   00212E  EF9B  F010         	goto	u2940
  6118   002132                     u2941:
  6119   002132  EFA7  F010         	goto	l3563
  6120   002136                     u2940:
  6121   002136                     
  6122                           ; BSR set to: 0
  6123                           ;dc_motor.c: 359:                 Orange_R135(mL,mR);}
  6124   002136  C0C2  F021         	movff	White@mL,Orange_R135@mL
  6125   00213A  C0C3  F022         	movff	White@mL+1,Orange_R135@mL+1
  6126   00213E  C0C4  F023         	movff	White@mR,Orange_R135@mR
  6127   002142  C0C5  F024         	movff	White@mR+1,Orange_R135@mR+1
  6128   002146  ECA2  F01C         	call	_Orange_R135	;wreg free
  6129   00214A  EFE5  F010         	goto	l3571
  6130   00214E                     l3563:
  6131                           
  6132                           ; BSR set to: 0
  6133   00214E  90D8               	bcf	status,0,c
  6134   002150  35D0               	rlcf	White@i& (0+255),w,b
  6135   002152  6ED9               	movwf	fsr2l,c
  6136   002154  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6137   002156  6EDA               	movwf	fsr2h,c
  6138   002158  51C8               	movf	White@movementMemory& (0+255),w,b
  6139   00215A  26D9               	addwf	fsr2l,f,c
  6140   00215C  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6141   00215E  22DA               	addwfc	fsr2h,f,c
  6142   002160  0E06               	movlw	6
  6143   002162  18DE               	xorwf	postinc2,w,c
  6144   002164  10DE               	iorwf	postinc2,w,c
  6145   002166  A4D8               	btfss	status,2,c
  6146   002168  EFB8  F010         	goto	u2951
  6147   00216C  EFBA  F010         	goto	u2950
  6148   002170                     u2951:
  6149   002170  EFC6  F010         	goto	l3567
  6150   002174                     u2950:
  6151   002174                     
  6152                           ; BSR set to: 0
  6153                           ;dc_motor.c: 361:                 LightBlue_L135(mL,mR);}
  6154   002174  C0C2  F021         	movff	White@mL,LightBlue_L135@mL
  6155   002178  C0C3  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  6156   00217C  C0C4  F023         	movff	White@mR,LightBlue_L135@mR
  6157   002180  C0C5  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  6158   002184  ECF4  F01C         	call	_LightBlue_L135	;wreg free
  6159   002188  EFE5  F010         	goto	l3571
  6160   00218C                     l3567:
  6161                           
  6162                           ; BSR set to: 0
  6163   00218C  90D8               	bcf	status,0,c
  6164   00218E  35D0               	rlcf	White@i& (0+255),w,b
  6165   002190  6ED9               	movwf	fsr2l,c
  6166   002192  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6167   002194  6EDA               	movwf	fsr2h,c
  6168   002196  51C8               	movf	White@movementMemory& (0+255),w,b
  6169   002198  26D9               	addwf	fsr2l,f,c
  6170   00219A  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6171   00219C  22DA               	addwfc	fsr2h,f,c
  6172   00219E  0E07               	movlw	7
  6173   0021A0  18DE               	xorwf	postinc2,w,c
  6174   0021A2  10DE               	iorwf	postinc2,w,c
  6175   0021A4  A4D8               	btfss	status,2,c
  6176   0021A6  EFD7  F010         	goto	u2961
  6177   0021AA  EFD9  F010         	goto	u2960
  6178   0021AE                     u2961:
  6179   0021AE  EFE5  F010         	goto	l577
  6180   0021B2                     u2960:
  6181   0021B2                     
  6182                           ; BSR set to: 0
  6183                           ;dc_motor.c: 363:                 stop(mL,mR);}
  6184   0021B2  C0C2  F014         	movff	White@mL,stop@mL
  6185   0021B6  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6186   0021BA  C0C4  F016         	movff	White@mR,stop@mR
  6187   0021BE  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6188   0021C2  EC4F  F01C         	call	_stop	;wreg free
  6189   0021C6  EFE5  F010         	goto	l3571
  6190   0021CA                     l577:
  6191   0021CA                     l3571:
  6192                           
  6193                           ;dc_motor.c: 364:             LATDbits.LATD4 = 1;;
  6194   0021CA  887C               	bsf	124,4,c	;volatile
  6195   0021CC                     
  6196                           ;dc_motor.c: 366:             float tempTimer = 0;
  6197   0021CC  0E00               	movlw	0
  6198   0021CE  0100               	movlb	0	; () banked
  6199   0021D0  6FCC               	movwf	White@tempTimer& (0+255),b
  6200   0021D2  0E00               	movlw	0
  6201   0021D4  6FCD               	movwf	(White@tempTimer+1)& (0+255),b
  6202   0021D6  0E00               	movlw	0
  6203   0021D8  6FCE               	movwf	(White@tempTimer+2)& (0+255),b
  6204   0021DA  0E00               	movlw	0
  6205   0021DC  6FCF               	movwf	(White@tempTimer+3)& (0+255),b
  6206   0021DE                     
  6207                           ; BSR set to: 0
  6208                           ;dc_motor.c: 367:             TimerReset();
  6209   0021DE  ECE7  F022         	call	_TimerReset	;wreg free
  6210   0021E2                     
  6211                           ;dc_motor.c: 368:             fullSpeedAhead(mL,mR);
  6212   0021E2  C0C2  F014         	movff	White@mL,fullSpeedAhead@mL
  6213   0021E6  C0C3  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  6214   0021EA  C0C4  F016         	movff	White@mR,fullSpeedAhead@mR
  6215   0021EE  C0C5  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  6216   0021F2  EC3B  F01F         	call	_fullSpeedAhead	;wreg free
  6217   0021F6                     
  6218                           ;dc_motor.c: 369:             if (timerMemory[i]<0)
  6219   0021F6  90D8               	bcf	status,0,c
  6220   0021F8  0100               	movlb	0	; () banked
  6221   0021FA  35D0               	rlcf	White@i& (0+255),w,b
  6222   0021FC  6ED9               	movwf	fsr2l,c
  6223   0021FE  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6224   002200  6EDA               	movwf	fsr2h,c
  6225   002202  90D8               	bcf	status,0,c
  6226   002204  36D9               	rlcf	fsr2l,f,c
  6227   002206  36DA               	rlcf	fsr2h,f,c
  6228   002208  51CA               	movf	White@timerMemory& (0+255),w,b
  6229   00220A  26D9               	addwf	fsr2l,f,c
  6230   00220C  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6231   00220E  22DA               	addwfc	fsr2h,f,c
  6232   002210  0E03               	movlw	3
  6233   002212  BEDB               	btfsc	plusw2,7,c
  6234   002214  EF10  F011         	goto	u2970
  6235   002218  EF0E  F011         	goto	u2971
  6236   00221C                     u2971:
  6237   00221C  EF56  F011         	goto	l3587
  6238   002220                     u2970:
  6239   002220  EF1C  F011         	goto	l3585
  6240   002224                     l3583:
  6241                           
  6242                           ;dc_motor.c: 372:                 {;dc_motor.c: 373:                     tempTimer = get
      +                          TimerValue();
  6243   002224  EC71  F020         	call	_getTimerValue	;wreg free
  6244   002228  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6245   00222C  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6246   002230  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6247   002234  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6248   002238                     l3585:
  6249                           
  6250                           ;dc_motor.c: 371:                 while(tempTimer <(timerMemory[i]+_recogniseColour))
  6251   002238  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6252   00223C  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6253   002240  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6254   002244  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6255   002248  0E00               	movlw	0
  6256   00224A  6E3F               	movwf	___fladd@a^0,c
  6257   00224C  0E00               	movlw	0
  6258   00224E  6E40               	movwf	(___fladd@a+1)^0,c
  6259   002250  0E96               	movlw	150
  6260   002252  6E41               	movwf	(___fladd@a+2)^0,c
  6261   002254  0E43               	movlw	67
  6262   002256  6E42               	movwf	(___fladd@a+3)^0,c
  6263   002258  90D8               	bcf	status,0,c
  6264   00225A  0100               	movlb	0	; () banked
  6265   00225C  35D0               	rlcf	White@i& (0+255),w,b
  6266   00225E  6ED9               	movwf	fsr2l,c
  6267   002260  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6268   002262  6EDA               	movwf	fsr2h,c
  6269   002264  90D8               	bcf	status,0,c
  6270   002266  36D9               	rlcf	fsr2l,f,c
  6271   002268  36DA               	rlcf	fsr2h,f,c
  6272   00226A  51CA               	movf	White@timerMemory& (0+255),w,b
  6273   00226C  26D9               	addwf	fsr2l,f,c
  6274   00226E  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6275   002270  22DA               	addwfc	fsr2h,f,c
  6276   002272  CFDE F03B          	movff	postinc2,___fladd@b
  6277   002276  CFDE F03C          	movff	postinc2,___fladd@b+1
  6278   00227A  CFDE F03D          	movff	postinc2,___fladd@b+2
  6279   00227E  CFDE F03E          	movff	postinc2,___fladd@b+3
  6280   002282  EC4A  F00D         	call	___fladd	;wreg free
  6281   002286  C03B  F04F         	movff	?___fladd,___flge@ff2
  6282   00228A  C03C  F050         	movff	?___fladd+1,___flge@ff2+1
  6283   00228E  C03D  F051         	movff	?___fladd+2,___flge@ff2+2
  6284   002292  C03E  F052         	movff	?___fladd+3,___flge@ff2+3
  6285   002296  ECD0  F01A         	call	___flge	;wreg free
  6286   00229A  A0D8               	btfss	status,0,c
  6287   00229C  EF52  F011         	goto	u2981
  6288   0022A0  EF54  F011         	goto	u2980
  6289   0022A4                     u2981:
  6290   0022A4  EF12  F011         	goto	l3583
  6291   0022A8                     u2980:
  6292   0022A8  EFAD  F011         	goto	l3595
  6293   0022AC                     l3587:
  6294                           
  6295                           ; BSR set to: 0
  6296   0022AC  0E00               	movlw	0
  6297   0022AE  6E4B               	movwf	___flge@ff1^0,c
  6298   0022B0  0E00               	movlw	0
  6299   0022B2  6E4C               	movwf	(___flge@ff1+1)^0,c
  6300   0022B4  0E00               	movlw	0
  6301   0022B6  6E4D               	movwf	(___flge@ff1+2)^0,c
  6302   0022B8  0E00               	movlw	0
  6303   0022BA  6E4E               	movwf	(___flge@ff1+3)^0,c
  6304   0022BC  90D8               	bcf	status,0,c
  6305   0022BE  35D0               	rlcf	White@i& (0+255),w,b
  6306   0022C0  6ED9               	movwf	fsr2l,c
  6307   0022C2  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6308   0022C4  6EDA               	movwf	fsr2h,c
  6309   0022C6  90D8               	bcf	status,0,c
  6310   0022C8  36D9               	rlcf	fsr2l,f,c
  6311   0022CA  36DA               	rlcf	fsr2h,f,c
  6312   0022CC  51CA               	movf	White@timerMemory& (0+255),w,b
  6313   0022CE  26D9               	addwf	fsr2l,f,c
  6314   0022D0  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6315   0022D2  22DA               	addwfc	fsr2h,f,c
  6316   0022D4  CFDE F04F          	movff	postinc2,___flge@ff2
  6317   0022D8  CFDE F050          	movff	postinc2,___flge@ff2+1
  6318   0022DC  CFDE F051          	movff	postinc2,___flge@ff2+2
  6319   0022E0  CFDE F052          	movff	postinc2,___flge@ff2+3
  6320   0022E4  ECD0  F01A         	call	___flge	;wreg free
  6321   0022E8  B0D8               	btfsc	status,0,c
  6322   0022EA  EF79  F011         	goto	u2991
  6323   0022EE  EF7B  F011         	goto	u2990
  6324   0022F2                     u2991:
  6325   0022F2  EFAD  F011         	goto	l3595
  6326   0022F6                     u2990:
  6327   0022F6  EF87  F011         	goto	l3593
  6328   0022FA                     l3591:
  6329                           
  6330                           ;dc_motor.c: 377:                 {;dc_motor.c: 378:                     tempTimer = get
      +                          TimerValue();
  6331   0022FA  EC71  F020         	call	_getTimerValue	;wreg free
  6332   0022FE  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6333   002302  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6334   002306  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6335   00230A  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6336   00230E                     l3593:
  6337                           
  6338                           ;dc_motor.c: 376:                 while(tempTimer<timerMemory[i])
  6339   00230E  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6340   002312  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6341   002316  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6342   00231A  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6343   00231E  90D8               	bcf	status,0,c
  6344   002320  0100               	movlb	0	; () banked
  6345   002322  35D0               	rlcf	White@i& (0+255),w,b
  6346   002324  6ED9               	movwf	fsr2l,c
  6347   002326  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6348   002328  6EDA               	movwf	fsr2h,c
  6349   00232A  90D8               	bcf	status,0,c
  6350   00232C  36D9               	rlcf	fsr2l,f,c
  6351   00232E  36DA               	rlcf	fsr2h,f,c
  6352   002330  51CA               	movf	White@timerMemory& (0+255),w,b
  6353   002332  26D9               	addwf	fsr2l,f,c
  6354   002334  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6355   002336  22DA               	addwfc	fsr2h,f,c
  6356   002338  CFDE F04F          	movff	postinc2,___flge@ff2
  6357   00233C  CFDE F050          	movff	postinc2,___flge@ff2+1
  6358   002340  CFDE F051          	movff	postinc2,___flge@ff2+2
  6359   002344  CFDE F052          	movff	postinc2,___flge@ff2+3
  6360   002348  ECD0  F01A         	call	___flge	;wreg free
  6361   00234C  A0D8               	btfss	status,0,c
  6362   00234E  EFAB  F011         	goto	u3001
  6363   002352  EFAD  F011         	goto	u3000
  6364   002356                     u3001:
  6365   002356  EF7D  F011         	goto	l3591
  6366   00235A                     u3000:
  6367   00235A                     l3595:
  6368                           
  6369                           ;dc_motor.c: 381:             stop(mL,mR);
  6370   00235A  C0C2  F014         	movff	White@mL,stop@mL
  6371   00235E  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6372   002362  C0C4  F016         	movff	White@mR,stop@mR
  6373   002366  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6374   00236A  EC4F  F01C         	call	_stop	;wreg free
  6375   00236E                     
  6376                           ;dc_motor.c: 382:         }
  6377   00236E  0100               	movlb	0	; () banked
  6378   002370  07D0               	decf	White@i& (0+255),f,b
  6379   002372  A0D8               	btfss	status,0,c
  6380   002374  07D1               	decf	(White@i+1)& (0+255),f,b
  6381   002376  EFD8  F00F         	goto	l3533
  6382   00237A                     l3601:
  6383                           
  6384                           ;dc_motor.c: 338:     while (!retracingDone){
  6385   00237A  0100               	movlb	0	; () banked
  6386   00237C  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  6387   00237E  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  6388   002380  B4D8               	btfsc	status,2,c
  6389   002382  EFC5  F011         	goto	u3011
  6390   002386  EFC7  F011         	goto	u3010
  6391   00238A                     u3011:
  6392   00238A  EFAD  F00F         	goto	l3523
  6393   00238E                     u3010:
  6394   00238E                     
  6395                           ; BSR set to: 0
  6396                           ;dc_motor.c: 384:     stop(mL,mR);
  6397   00238E  C0C2  F014         	movff	White@mL,stop@mL
  6398   002392  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6399   002396  C0C4  F016         	movff	White@mR,stop@mR
  6400   00239A  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6401   00239E  EC4F  F01C         	call	_stop	;wreg free
  6402   0023A2                     
  6403                           ;dc_motor.c: 385:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6404   0023A2  0E52               	movlw	82
  6405   0023A4  6E58               	movwf	(??_White+1)^0,c
  6406   0023A6  0E2B               	movlw	43
  6407   0023A8  6E57               	movwf	??_White^0,c
  6408   0023AA  0E00               	movlw	0
  6409   0023AC                     u3837:
  6410   0023AC  2EE8               	decfsz	wreg,f,c
  6411   0023AE  D7FE               	bra	u3837
  6412   0023B0  2E57               	decfsz	??_White^0,f,c
  6413   0023B2  D7FC               	bra	u3837
  6414   0023B4  2E58               	decfsz	(??_White+1)^0,f,c
  6415   0023B6  D7FA               	bra	u3837
  6416   0023B8  D000               	nop2	
  6417   0023BA                     
  6418                           ;dc_motor.c: 386:     LATDbits.LATD4 = 0;;
  6419   0023BA  987C               	bcf	124,4,c	;volatile
  6420   0023BC  0012               	return		;funcret
  6421   0023BE                     __end_of_White:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _getTimerValue *****************
  6425 ;; Defined at:
  6426 ;;		line 28 in file "timer.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  timerCount      2   56[COMRAM] int 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  4   50[COMRAM] float 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;Total ram usage:        8 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 2
  6447 ;; This function calls:
  6448 ;;		___flmul
  6449 ;;		___xxtofl
  6450 ;; This function is called by:
  6451 ;;		_White
  6452 ;;		_memoryUpdateTime
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text30
  6457   0040E2                     __ptext30:
  6458                           	callstack 0
  6459   0040E2                     _getTimerValue:
  6460                           	callstack 27
  6461   0040E2                     
  6462                           ;timer.c: 30:     int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6463   0040E2  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  6464   0040E6  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  6465   0040E8                     
  6466                           ;timer.c: 34:     timerCount |= (int)(TMR0H << 8);
  6467   0040E8  50D4               	movf	212,w,c	;volatile
  6468   0040EA  6E38               	movwf	(??_getTimerValue+1)^0,c
  6469   0040EC  6A37               	clrf	??_getTimerValue^0,c
  6470   0040EE  5037               	movf	??_getTimerValue^0,w,c
  6471   0040F0  1239               	iorwf	getTimerValue@timerCount^0,f,c
  6472   0040F2  5038               	movf	(??_getTimerValue+1)^0,w,c
  6473   0040F4  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  6474   0040F6                     
  6475                           ;timer.c: 35:     return timerCount*1.048576;
  6476   0040F6  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  6477   0040FA  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  6478   0040FE  0E00               	movlw	0
  6479   004100  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6480   004102  0EFF               	movlw	-1
  6481   004104  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6482   004106  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6483   004108  0E01               	movlw	1
  6484   00410A  ECBD  F018         	call	___xxtofl
  6485   00410E  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6486   004112  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6487   004116  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6488   00411A  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6489   00411E  0EBD               	movlw	189
  6490   004120  6E1E               	movwf	___flmul@a^0,c
  6491   004122  0E37               	movlw	55
  6492   004124  6E1F               	movwf	(___flmul@a+1)^0,c
  6493   004126  0E86               	movlw	134
  6494   004128  6E20               	movwf	(___flmul@a+2)^0,c
  6495   00412A  0E3F               	movlw	63
  6496   00412C  6E21               	movwf	(___flmul@a+3)^0,c
  6497   00412E  ECDF  F011         	call	___flmul	;wreg free
  6498   004132  C01A  F033         	movff	?___flmul,?_getTimerValue
  6499   004136  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  6500   00413A  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  6501   00413E  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  6502   004142  0012               	return		;funcret
  6503   004144                     __end_of_getTimerValue:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function ___xxtofl *****************
  6507 ;; Defined at:
  6508 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  sign            1    wreg     unsigned char 
  6511 ;;  val             4   11[COMRAM] long 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  sign            1   19[COMRAM] unsigned char 
  6514 ;;  arg             4   21[COMRAM] unsigned long 
  6515 ;;  exp             1   20[COMRAM] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  4   11[COMRAM] unsigned char 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;Total ram usage:       14 bytes
  6530 ;; Hardware stack levels used: 1
  6531 ;; Hardware stack levels required when called: 1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_colour_read_all
  6536 ;;		_RGB2Hue
  6537 ;;		_Left45
  6538 ;;		_Right45
  6539 ;;		_reverseHalfSquare
  6540 ;;		_Yellow_rev1_R90
  6541 ;;		_Pink_rev1_L90
  6542 ;;		_White
  6543 ;;		_memoryUpdateTime
  6544 ;;		_getTimerValue
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text31
  6549   00317A                     __ptext31:
  6550                           	callstack 0
  6551   00317A                     ___xxtofl:
  6552                           	callstack 27
  6553                           
  6554                           ;incstack = 0
  6555                           ;___xxtofl@sign stored from wreg
  6556   00317A  6E14               	movwf	___xxtofl@sign^0,c
  6557   00317C  5014               	movf	___xxtofl@sign^0,w,c
  6558   00317E  B4D8               	btfsc	status,2,c
  6559   003180  EFC4  F018         	goto	u2241
  6560   003184  EFC6  F018         	goto	u2240
  6561   003188                     u2241:
  6562   003188  EFE8  F018         	goto	l1360
  6563   00318C                     u2240:
  6564   00318C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6565   00318E  EFCD  F018         	goto	u2250
  6566   003192  EFCB  F018         	goto	u2251
  6567   003196                     u2251:
  6568   003196  EFE8  F018         	goto	l1360
  6569   00319A                     u2250:
  6570   00319A  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6571   00319E  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6572   0031A2  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6573   0031A6  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6574   0031AA  1E10               	comf	??___xxtofl^0,f,c
  6575   0031AC  1E11               	comf	(??___xxtofl+1)^0,f,c
  6576   0031AE  1E12               	comf	(??___xxtofl+2)^0,f,c
  6577   0031B0  1E13               	comf	(??___xxtofl+3)^0,f,c
  6578   0031B2  2A10               	incf	??___xxtofl^0,f,c
  6579   0031B4  0E00               	movlw	0
  6580   0031B6  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6581   0031B8  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6582   0031BA  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6583   0031BC  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6584   0031C0  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6585   0031C4  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6586   0031C8  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6587   0031CC  EFF0  F018         	goto	l3105
  6588   0031D0                     l1360:
  6589   0031D0  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6590   0031D4  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6591   0031D8  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6592   0031DC  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6593   0031E0                     l3105:
  6594   0031E0  500C               	movf	___xxtofl@val^0,w,c
  6595   0031E2  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6596   0031E4  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6597   0031E6  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6598   0031E8  A4D8               	btfss	status,2,c
  6599   0031EA  EFF9  F018         	goto	u2261
  6600   0031EE  EFFB  F018         	goto	u2260
  6601   0031F2                     u2261:
  6602   0031F2  EF05  F019         	goto	l3111
  6603   0031F6                     u2260:
  6604   0031F6  0E00               	movlw	0
  6605   0031F8  6E0C               	movwf	?___xxtofl^0,c
  6606   0031FA  0E00               	movlw	0
  6607   0031FC  6E0D               	movwf	(?___xxtofl+1)^0,c
  6608   0031FE  0E00               	movlw	0
  6609   003200  6E0E               	movwf	(?___xxtofl+2)^0,c
  6610   003202  0E00               	movlw	0
  6611   003204  6E0F               	movwf	(?___xxtofl+3)^0,c
  6612   003206  EF96  F019         	goto	l1363
  6613   00320A                     l3111:
  6614   00320A  0E96               	movlw	150
  6615   00320C  6E15               	movwf	___xxtofl@exp^0,c
  6616   00320E  EF0F  F019         	goto	l3115
  6617   003212                     l3113:
  6618   003212  2A15               	incf	___xxtofl@exp^0,f,c
  6619   003214  90D8               	bcf	status,0,c
  6620   003216  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6621   003218  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6622   00321A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6623   00321C  3216               	rrcf	___xxtofl@arg^0,f,c
  6624   00321E                     l3115:
  6625   00321E  0E00               	movlw	0
  6626   003220  1416               	andwf	___xxtofl@arg^0,w,c
  6627   003222  6E10               	movwf	??___xxtofl^0,c
  6628   003224  0E00               	movlw	0
  6629   003226  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6630   003228  6E11               	movwf	(??___xxtofl+1)^0,c
  6631   00322A  0E00               	movlw	0
  6632   00322C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6633   00322E  6E12               	movwf	(??___xxtofl+2)^0,c
  6634   003230  0EFE               	movlw	254
  6635   003232  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6636   003234  6E13               	movwf	(??___xxtofl+3)^0,c
  6637   003236  5010               	movf	??___xxtofl^0,w,c
  6638   003238  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6639   00323A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6640   00323C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6641   00323E  A4D8               	btfss	status,2,c
  6642   003240  EF24  F019         	goto	u2271
  6643   003244  EF26  F019         	goto	u2270
  6644   003248                     u2271:
  6645   003248  EF09  F019         	goto	l3113
  6646   00324C                     u2270:
  6647   00324C  EF34  F019         	goto	l1367
  6648   003250                     l3117:
  6649   003250  2A15               	incf	___xxtofl@exp^0,f,c
  6650   003252  0E01               	movlw	1
  6651   003254  2616               	addwf	___xxtofl@arg^0,f,c
  6652   003256  0E00               	movlw	0
  6653   003258  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6654   00325A  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6655   00325C  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6656   00325E  90D8               	bcf	status,0,c
  6657   003260  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6658   003262  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6659   003264  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6660   003266  3216               	rrcf	___xxtofl@arg^0,f,c
  6661   003268                     l1367:
  6662   003268  0E00               	movlw	0
  6663   00326A  1416               	andwf	___xxtofl@arg^0,w,c
  6664   00326C  6E10               	movwf	??___xxtofl^0,c
  6665   00326E  0E00               	movlw	0
  6666   003270  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6667   003272  6E11               	movwf	(??___xxtofl+1)^0,c
  6668   003274  0E00               	movlw	0
  6669   003276  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6670   003278  6E12               	movwf	(??___xxtofl+2)^0,c
  6671   00327A  0EFF               	movlw	255
  6672   00327C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6673   00327E  6E13               	movwf	(??___xxtofl+3)^0,c
  6674   003280  5010               	movf	??___xxtofl^0,w,c
  6675   003282  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6676   003284  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6677   003286  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6678   003288  A4D8               	btfss	status,2,c
  6679   00328A  EF49  F019         	goto	u2281
  6680   00328E  EF4B  F019         	goto	u2280
  6681   003292                     u2281:
  6682   003292  EF28  F019         	goto	l3117
  6683   003296                     u2280:
  6684   003296  EF53  F019         	goto	l3125
  6685   00329A                     l3123:
  6686   00329A  0615               	decf	___xxtofl@exp^0,f,c
  6687   00329C  90D8               	bcf	status,0,c
  6688   00329E  3616               	rlcf	___xxtofl@arg^0,f,c
  6689   0032A0  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6690   0032A2  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6691   0032A4  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6692   0032A6                     l3125:
  6693   0032A6  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6694   0032A8  EF58  F019         	goto	u2291
  6695   0032AC  EF5A  F019         	goto	u2290
  6696   0032B0                     u2291:
  6697   0032B0  EF62  F019         	goto	l1374
  6698   0032B4                     u2290:
  6699   0032B4  0E02               	movlw	2
  6700   0032B6  6015               	cpfslt	___xxtofl@exp^0,c
  6701   0032B8  EF60  F019         	goto	u2301
  6702   0032BC  EF62  F019         	goto	u2300
  6703   0032C0                     u2301:
  6704   0032C0  EF4D  F019         	goto	l3123
  6705   0032C4                     u2300:
  6706   0032C4                     l1374:
  6707   0032C4  B015               	btfsc	___xxtofl@exp^0,0,c
  6708   0032C6  EF67  F019         	goto	u2311
  6709   0032CA  EF69  F019         	goto	u2310
  6710   0032CE                     u2311:
  6711   0032CE  EF6A  F019         	goto	l3131
  6712   0032D2                     u2310:
  6713   0032D2  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6714   0032D4                     l3131:
  6715   0032D4  90D8               	bcf	status,0,c
  6716   0032D6  3215               	rrcf	___xxtofl@exp^0,f,c
  6717   0032D8  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6718   0032DC  6A11               	clrf	(??___xxtofl+1)^0,c
  6719   0032DE  6A12               	clrf	(??___xxtofl+2)^0,c
  6720   0032E0  6A13               	clrf	(??___xxtofl+3)^0,c
  6721   0032E2  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6722   0032E6  6A12               	clrf	(??___xxtofl+2)^0,c
  6723   0032E8  6A11               	clrf	(??___xxtofl+1)^0,c
  6724   0032EA  6A10               	clrf	??___xxtofl^0,c
  6725   0032EC  5010               	movf	??___xxtofl^0,w,c
  6726   0032EE  1216               	iorwf	___xxtofl@arg^0,f,c
  6727   0032F0  5011               	movf	(??___xxtofl+1)^0,w,c
  6728   0032F2  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6729   0032F4  5012               	movf	(??___xxtofl+2)^0,w,c
  6730   0032F6  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6731   0032F8  5013               	movf	(??___xxtofl+3)^0,w,c
  6732   0032FA  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6733   0032FC  5014               	movf	___xxtofl@sign^0,w,c
  6734   0032FE  B4D8               	btfsc	status,2,c
  6735   003300  EF84  F019         	goto	u2321
  6736   003304  EF86  F019         	goto	u2320
  6737   003308                     u2321:
  6738   003308  EF8E  F019         	goto	l3141
  6739   00330C                     u2320:
  6740   00330C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6741   00330E  EF8D  F019         	goto	u2330
  6742   003312  EF8B  F019         	goto	u2331
  6743   003316                     u2331:
  6744   003316  EF8E  F019         	goto	l3141
  6745   00331A                     u2330:
  6746   00331A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6747   00331C                     l3141:
  6748   00331C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6749   003320  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6750   003324  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6751   003328  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6752   00332C                     l1363:
  6753   00332C  0012               	return		;funcret
  6754   00332E                     __end_of___xxtofl:
  6755                           	callstack 0
  6756                           
  6757 ;; *************** function ___flmul *****************
  6758 ;; Defined at:
  6759 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  b               4   25[COMRAM] unsigned char 
  6762 ;;  a               4   29[COMRAM] unsigned char 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  prod            4   44[COMRAM] struct .
  6765 ;;  grs             4   38[COMRAM] unsigned long 
  6766 ;;  temp            2   48[COMRAM] struct .
  6767 ;;  bexp            1   43[COMRAM] unsigned char 
  6768 ;;  aexp            1   42[COMRAM] unsigned char 
  6769 ;;  sign            1   37[COMRAM] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  4   25[COMRAM] unsigned char 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0, prodl, prodh
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6779 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6780 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;Total ram usage:       25 bytes
  6784 ;; Hardware stack levels used: 1
  6785 ;; Hardware stack levels required when called: 1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_RGB2Hue
  6790 ;;		_Left45
  6791 ;;		_Right45
  6792 ;;		_reverseHalfSquare
  6793 ;;		_Yellow_rev1_R90
  6794 ;;		_Pink_rev1_L90
  6795 ;;		_getTimerValue
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text32
  6800   0023BE                     __ptext32:
  6801                           	callstack 0
  6802   0023BE                     ___flmul:
  6803                           	callstack 27
  6804   0023BE  501D               	movf	(___flmul@b+3)^0,w,c
  6805   0023C0  0B80               	andlw	128
  6806   0023C2  6E26               	movwf	___flmul@sign^0,c
  6807   0023C4  501D               	movf	(___flmul@b+3)^0,w,c
  6808   0023C6  241D               	addwf	(___flmul@b+3)^0,w,c
  6809   0023C8  6E2C               	movwf	___flmul@bexp^0,c
  6810   0023CA  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6811   0023CC  EFEA  F011         	goto	u2051
  6812   0023D0  EFEC  F011         	goto	u2050
  6813   0023D4                     u2051:
  6814   0023D4  EFED  F011         	goto	l2975
  6815   0023D8                     u2050:
  6816   0023D8  802C               	bsf	___flmul@bexp^0,0,c
  6817   0023DA                     l2975:
  6818   0023DA  502C               	movf	___flmul@bexp^0,w,c
  6819   0023DC  B4D8               	btfsc	status,2,c
  6820   0023DE  EFF3  F011         	goto	u2061
  6821   0023E2  EFF5  F011         	goto	u2060
  6822   0023E6                     u2061:
  6823   0023E6  EF08  F012         	goto	l2983
  6824   0023EA                     u2060:
  6825   0023EA  282C               	incf	___flmul@bexp^0,w,c
  6826   0023EC  A4D8               	btfss	status,2,c
  6827   0023EE  EFFB  F011         	goto	u2071
  6828   0023F2  EFFD  F011         	goto	u2070
  6829   0023F6                     u2071:
  6830   0023F6  EF05  F012         	goto	l2981
  6831   0023FA                     u2070:
  6832   0023FA  0E00               	movlw	0
  6833   0023FC  6E1A               	movwf	___flmul@b^0,c
  6834   0023FE  0E00               	movlw	0
  6835   002400  6E1B               	movwf	(___flmul@b+1)^0,c
  6836   002402  0E00               	movlw	0
  6837   002404  6E1C               	movwf	(___flmul@b+2)^0,c
  6838   002406  0E00               	movlw	0
  6839   002408  6E1D               	movwf	(___flmul@b+3)^0,c
  6840   00240A                     l2981:
  6841   00240A  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6842   00240C  EF10  F012         	goto	l2985
  6843   002410                     l2983:
  6844   002410  0E00               	movlw	0
  6845   002412  6E1A               	movwf	___flmul@b^0,c
  6846   002414  0E00               	movlw	0
  6847   002416  6E1B               	movwf	(___flmul@b+1)^0,c
  6848   002418  0E00               	movlw	0
  6849   00241A  6E1C               	movwf	(___flmul@b+2)^0,c
  6850   00241C  0E00               	movlw	0
  6851   00241E  6E1D               	movwf	(___flmul@b+3)^0,c
  6852   002420                     l2985:
  6853   002420  5021               	movf	(___flmul@a+3)^0,w,c
  6854   002422  0B80               	andlw	128
  6855   002424  1A26               	xorwf	___flmul@sign^0,f,c
  6856   002426  5021               	movf	(___flmul@a+3)^0,w,c
  6857   002428  2421               	addwf	(___flmul@a+3)^0,w,c
  6858   00242A  6E2B               	movwf	___flmul@aexp^0,c
  6859   00242C  AE20               	btfss	(___flmul@a+2)^0,7,c
  6860   00242E  EF1B  F012         	goto	u2081
  6861   002432  EF1D  F012         	goto	u2080
  6862   002436                     u2081:
  6863   002436  EF1E  F012         	goto	l2993
  6864   00243A                     u2080:
  6865   00243A  802B               	bsf	___flmul@aexp^0,0,c
  6866   00243C                     l2993:
  6867   00243C  502B               	movf	___flmul@aexp^0,w,c
  6868   00243E  B4D8               	btfsc	status,2,c
  6869   002440  EF24  F012         	goto	u2091
  6870   002444  EF26  F012         	goto	u2090
  6871   002448                     u2091:
  6872   002448  EF39  F012         	goto	l3001
  6873   00244C                     u2090:
  6874   00244C  282B               	incf	___flmul@aexp^0,w,c
  6875   00244E  A4D8               	btfss	status,2,c
  6876   002450  EF2C  F012         	goto	u2101
  6877   002454  EF2E  F012         	goto	u2100
  6878   002458                     u2101:
  6879   002458  EF36  F012         	goto	l2999
  6880   00245C                     u2100:
  6881   00245C  0E00               	movlw	0
  6882   00245E  6E1E               	movwf	___flmul@a^0,c
  6883   002460  0E00               	movlw	0
  6884   002462  6E1F               	movwf	(___flmul@a+1)^0,c
  6885   002464  0E00               	movlw	0
  6886   002466  6E20               	movwf	(___flmul@a+2)^0,c
  6887   002468  0E00               	movlw	0
  6888   00246A  6E21               	movwf	(___flmul@a+3)^0,c
  6889   00246C                     l2999:
  6890   00246C  8E20               	bsf	(___flmul@a+2)^0,7,c
  6891   00246E  EF41  F012         	goto	l1319
  6892   002472                     l3001:
  6893   002472  0E00               	movlw	0
  6894   002474  6E1E               	movwf	___flmul@a^0,c
  6895   002476  0E00               	movlw	0
  6896   002478  6E1F               	movwf	(___flmul@a+1)^0,c
  6897   00247A  0E00               	movlw	0
  6898   00247C  6E20               	movwf	(___flmul@a+2)^0,c
  6899   00247E  0E00               	movlw	0
  6900   002480  6E21               	movwf	(___flmul@a+3)^0,c
  6901   002482                     l1319:
  6902   002482  502B               	movf	___flmul@aexp^0,w,c
  6903   002484  B4D8               	btfsc	status,2,c
  6904   002486  EF47  F012         	goto	u2111
  6905   00248A  EF49  F012         	goto	u2110
  6906   00248E                     u2111:
  6907   00248E  EF51  F012         	goto	l3005
  6908   002492                     u2110:
  6909   002492  502C               	movf	___flmul@bexp^0,w,c
  6910   002494  A4D8               	btfss	status,2,c
  6911   002496  EF4F  F012         	goto	u2121
  6912   00249A  EF51  F012         	goto	u2120
  6913   00249E                     u2121:
  6914   00249E  EF5B  F012         	goto	l3009
  6915   0024A2                     u2120:
  6916   0024A2                     l3005:
  6917   0024A2  0E00               	movlw	0
  6918   0024A4  6E1A               	movwf	?___flmul^0,c
  6919   0024A6  0E00               	movlw	0
  6920   0024A8  6E1B               	movwf	(?___flmul+1)^0,c
  6921   0024AA  0E00               	movlw	0
  6922   0024AC  6E1C               	movwf	(?___flmul+2)^0,c
  6923   0024AE  0E00               	movlw	0
  6924   0024B0  6E1D               	movwf	(?___flmul+3)^0,c
  6925   0024B2  EFF3  F013         	goto	l1323
  6926   0024B6                     l3009:
  6927   0024B6  5020               	movf	(___flmul@a+2)^0,w,c
  6928   0024B8  021A               	mulwf	___flmul@b^0,c
  6929   0024BA  CFF3 F031          	movff	prodl,___flmul@temp
  6930   0024BE  CFF4 F032          	movff	prodh,___flmul@temp+1
  6931   0024C2  5031               	movf	___flmul@temp^0,w,c
  6932   0024C4  6E27               	movwf	___flmul@grs^0,c
  6933   0024C6  6A28               	clrf	(___flmul@grs+1)^0,c
  6934   0024C8  6A29               	clrf	(___flmul@grs+2)^0,c
  6935   0024CA  6A2A               	clrf	(___flmul@grs+3)^0,c
  6936   0024CC  5032               	movf	(___flmul@temp+1)^0,w,c
  6937   0024CE  6E2D               	movwf	___flmul@prod^0,c
  6938   0024D0  6A2E               	clrf	(___flmul@prod+1)^0,c
  6939   0024D2  6A2F               	clrf	(___flmul@prod+2)^0,c
  6940   0024D4  6A30               	clrf	(___flmul@prod+3)^0,c
  6941   0024D6  501F               	movf	(___flmul@a+1)^0,w,c
  6942   0024D8  021B               	mulwf	(___flmul@b+1)^0,c
  6943   0024DA  CFF3 F031          	movff	prodl,___flmul@temp
  6944   0024DE  CFF4 F032          	movff	prodh,___flmul@temp+1
  6945   0024E2  5031               	movf	___flmul@temp^0,w,c
  6946   0024E4  2627               	addwf	___flmul@grs^0,f,c
  6947   0024E6  0E00               	movlw	0
  6948   0024E8  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6949   0024EA  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6950   0024EC  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6951   0024EE  5032               	movf	(___flmul@temp+1)^0,w,c
  6952   0024F0  262D               	addwf	___flmul@prod^0,f,c
  6953   0024F2  0E00               	movlw	0
  6954   0024F4  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6955   0024F6  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6956   0024F8  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6957   0024FA  501E               	movf	___flmul@a^0,w,c
  6958   0024FC  021C               	mulwf	(___flmul@b+2)^0,c
  6959   0024FE  CFF3 F031          	movff	prodl,___flmul@temp
  6960   002502  CFF4 F032          	movff	prodh,___flmul@temp+1
  6961   002506  5031               	movf	___flmul@temp^0,w,c
  6962   002508  2627               	addwf	___flmul@grs^0,f,c
  6963   00250A  0E00               	movlw	0
  6964   00250C  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6965   00250E  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6966   002510  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6967   002512  5032               	movf	(___flmul@temp+1)^0,w,c
  6968   002514  262D               	addwf	___flmul@prod^0,f,c
  6969   002516  0E00               	movlw	0
  6970   002518  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6971   00251A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6972   00251C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6973   00251E  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6974   002522  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6975   002526  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6976   00252A  6A27               	clrf	___flmul@grs^0,c
  6977   00252C  501E               	movf	___flmul@a^0,w,c
  6978   00252E  021B               	mulwf	(___flmul@b+1)^0,c
  6979   002530  CFF3 F031          	movff	prodl,___flmul@temp
  6980   002534  CFF4 F032          	movff	prodh,___flmul@temp+1
  6981   002538  5031               	movf	___flmul@temp^0,w,c
  6982   00253A  2627               	addwf	___flmul@grs^0,f,c
  6983   00253C  5032               	movf	(___flmul@temp+1)^0,w,c
  6984   00253E  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6985   002540  0E00               	movlw	0
  6986   002542  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6987   002544  0E00               	movlw	0
  6988   002546  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6989   002548  501F               	movf	(___flmul@a+1)^0,w,c
  6990   00254A  021A               	mulwf	___flmul@b^0,c
  6991   00254C  CFF3 F031          	movff	prodl,___flmul@temp
  6992   002550  CFF4 F032          	movff	prodh,___flmul@temp+1
  6993   002554  5031               	movf	___flmul@temp^0,w,c
  6994   002556  2627               	addwf	___flmul@grs^0,f,c
  6995   002558  5032               	movf	(___flmul@temp+1)^0,w,c
  6996   00255A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6997   00255C  0E00               	movlw	0
  6998   00255E  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6999   002560  0E00               	movlw	0
  7000   002562  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7001   002564  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7002   002568  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7003   00256C  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7004   002570  6A27               	clrf	___flmul@grs^0,c
  7005   002572  501E               	movf	___flmul@a^0,w,c
  7006   002574  021A               	mulwf	___flmul@b^0,c
  7007   002576  CFF3 F031          	movff	prodl,___flmul@temp
  7008   00257A  CFF4 F032          	movff	prodh,___flmul@temp+1
  7009   00257E  5031               	movf	___flmul@temp^0,w,c
  7010   002580  2627               	addwf	___flmul@grs^0,f,c
  7011   002582  5032               	movf	(___flmul@temp+1)^0,w,c
  7012   002584  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7013   002586  0E00               	movlw	0
  7014   002588  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7015   00258A  0E00               	movlw	0
  7016   00258C  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7017   00258E  5020               	movf	(___flmul@a+2)^0,w,c
  7018   002590  021B               	mulwf	(___flmul@b+1)^0,c
  7019   002592  CFF3 F031          	movff	prodl,___flmul@temp
  7020   002596  CFF4 F032          	movff	prodh,___flmul@temp+1
  7021   00259A  5031               	movf	___flmul@temp^0,w,c
  7022   00259C  262D               	addwf	___flmul@prod^0,f,c
  7023   00259E  5032               	movf	(___flmul@temp+1)^0,w,c
  7024   0025A0  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7025   0025A2  0E00               	movlw	0
  7026   0025A4  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7027   0025A6  0E00               	movlw	0
  7028   0025A8  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7029   0025AA  501F               	movf	(___flmul@a+1)^0,w,c
  7030   0025AC  021C               	mulwf	(___flmul@b+2)^0,c
  7031   0025AE  CFF3 F031          	movff	prodl,___flmul@temp
  7032   0025B2  CFF4 F032          	movff	prodh,___flmul@temp+1
  7033   0025B6  5031               	movf	___flmul@temp^0,w,c
  7034   0025B8  262D               	addwf	___flmul@prod^0,f,c
  7035   0025BA  5032               	movf	(___flmul@temp+1)^0,w,c
  7036   0025BC  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7037   0025BE  0E00               	movlw	0
  7038   0025C0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7039   0025C2  0E00               	movlw	0
  7040   0025C4  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7041   0025C6  5020               	movf	(___flmul@a+2)^0,w,c
  7042   0025C8  021C               	mulwf	(___flmul@b+2)^0,c
  7043   0025CA  CFF3 F031          	movff	prodl,___flmul@temp
  7044   0025CE  CFF4 F032          	movff	prodh,___flmul@temp+1
  7045   0025D2  5031               	movf	___flmul@temp^0,w,c
  7046   0025D4  6E22               	movwf	??___flmul^0,c
  7047   0025D6  5032               	movf	(___flmul@temp+1)^0,w,c
  7048   0025D8  6E23               	movwf	(??___flmul+1)^0,c
  7049   0025DA  6A24               	clrf	(??___flmul+2)^0,c
  7050   0025DC  6A25               	clrf	(??___flmul+3)^0,c
  7051   0025DE  C024  F025         	movff	??___flmul+2,??___flmul+3
  7052   0025E2  C023  F024         	movff	??___flmul+1,??___flmul+2
  7053   0025E6  C022  F023         	movff	??___flmul,??___flmul+1
  7054   0025EA  6A22               	clrf	??___flmul^0,c
  7055   0025EC  5022               	movf	??___flmul^0,w,c
  7056   0025EE  262D               	addwf	___flmul@prod^0,f,c
  7057   0025F0  5023               	movf	(??___flmul+1)^0,w,c
  7058   0025F2  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7059   0025F4  5024               	movf	(??___flmul+2)^0,w,c
  7060   0025F6  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7061   0025F8  5025               	movf	(??___flmul+3)^0,w,c
  7062   0025FA  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7063   0025FC  C027  F022         	movff	___flmul@grs,??___flmul
  7064   002600  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  7065   002604  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  7066   002608  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  7067   00260C  0E19               	movlw	25
  7068   00260E  EF0E  F013         	goto	u2130
  7069   002612                     u2135:
  7070   002612  90D8               	bcf	status,0,c
  7071   002614  3225               	rrcf	(??___flmul+3)^0,f,c
  7072   002616  3224               	rrcf	(??___flmul+2)^0,f,c
  7073   002618  3223               	rrcf	(??___flmul+1)^0,f,c
  7074   00261A  3222               	rrcf	??___flmul^0,f,c
  7075   00261C                     u2130:
  7076   00261C  2EE8               	decfsz	wreg,f,c
  7077   00261E  EF09  F013         	goto	u2135
  7078   002622  5022               	movf	??___flmul^0,w,c
  7079   002624  262D               	addwf	___flmul@prod^0,f,c
  7080   002626  5023               	movf	(??___flmul+1)^0,w,c
  7081   002628  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7082   00262A  5024               	movf	(??___flmul+2)^0,w,c
  7083   00262C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7084   00262E  5025               	movf	(??___flmul+3)^0,w,c
  7085   002630  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7086   002632  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7087   002636  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7088   00263A  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7089   00263E  6A27               	clrf	___flmul@grs^0,c
  7090   002640  502B               	movf	___flmul@aexp^0,w,c
  7091   002642  C02C  F022         	movff	___flmul@bexp,??___flmul
  7092   002646  6A23               	clrf	(??___flmul+1)^0,c
  7093   002648  2622               	addwf	??___flmul^0,f,c
  7094   00264A  0E00               	movlw	0
  7095   00264C  2223               	addwfc	(??___flmul+1)^0,f,c
  7096   00264E  0E82               	movlw	130
  7097   002650  2422               	addwf	??___flmul^0,w,c
  7098   002652  6E31               	movwf	___flmul@temp^0,c
  7099   002654  0EFF               	movlw	255
  7100   002656  2023               	addwfc	(??___flmul+1)^0,w,c
  7101   002658  6E32               	movwf	(___flmul@temp+1)^0,c
  7102   00265A  EF44  F013         	goto	l3057
  7103   00265E                     l3051:
  7104   00265E  90D8               	bcf	status,0,c
  7105   002660  362D               	rlcf	___flmul@prod^0,f,c
  7106   002662  362E               	rlcf	(___flmul@prod+1)^0,f,c
  7107   002664  362F               	rlcf	(___flmul@prod+2)^0,f,c
  7108   002666  3630               	rlcf	(___flmul@prod+3)^0,f,c
  7109   002668  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7110   00266A  EF39  F013         	goto	u2141
  7111   00266E  EF3B  F013         	goto	u2140
  7112   002672                     u2141:
  7113   002672  EF3C  F013         	goto	l1326
  7114   002676                     u2140:
  7115   002676  802D               	bsf	___flmul@prod^0,0,c
  7116   002678                     l1326:
  7117   002678  90D8               	bcf	status,0,c
  7118   00267A  3627               	rlcf	___flmul@grs^0,f,c
  7119   00267C  3628               	rlcf	(___flmul@grs+1)^0,f,c
  7120   00267E  3629               	rlcf	(___flmul@grs+2)^0,f,c
  7121   002680  362A               	rlcf	(___flmul@grs+3)^0,f,c
  7122   002682  0631               	decf	___flmul@temp^0,f,c
  7123   002684  A0D8               	btfss	status,0,c
  7124   002686  0632               	decf	(___flmul@temp+1)^0,f,c
  7125   002688                     l3057:
  7126   002688  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  7127   00268A  EF49  F013         	goto	u2151
  7128   00268E  EF4B  F013         	goto	u2150
  7129   002692                     u2151:
  7130   002692  EF2F  F013         	goto	l3051
  7131   002696                     u2150:
  7132   002696  0E00               	movlw	0
  7133   002698  6E2B               	movwf	___flmul@aexp^0,c
  7134   00269A  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7135   00269C  EF52  F013         	goto	u2161
  7136   0026A0  EF54  F013         	goto	u2160
  7137   0026A4                     u2161:
  7138   0026A4  EF78  F013         	goto	l1328
  7139   0026A8                     u2160:
  7140   0026A8  0EFF               	movlw	255
  7141   0026AA  1427               	andwf	___flmul@grs^0,w,c
  7142   0026AC  6E22               	movwf	??___flmul^0,c
  7143   0026AE  0EFF               	movlw	255
  7144   0026B0  1428               	andwf	(___flmul@grs+1)^0,w,c
  7145   0026B2  6E23               	movwf	(??___flmul+1)^0,c
  7146   0026B4  0EFF               	movlw	255
  7147   0026B6  1429               	andwf	(___flmul@grs+2)^0,w,c
  7148   0026B8  6E24               	movwf	(??___flmul+2)^0,c
  7149   0026BA  0E7F               	movlw	127
  7150   0026BC  142A               	andwf	(___flmul@grs+3)^0,w,c
  7151   0026BE  6E25               	movwf	(??___flmul+3)^0,c
  7152   0026C0  5022               	movf	??___flmul^0,w,c
  7153   0026C2  1023               	iorwf	(??___flmul+1)^0,w,c
  7154   0026C4  1024               	iorwf	(??___flmul+2)^0,w,c
  7155   0026C6  1025               	iorwf	(??___flmul+3)^0,w,c
  7156   0026C8  B4D8               	btfsc	status,2,c
  7157   0026CA  EF69  F013         	goto	u2171
  7158   0026CE  EF6B  F013         	goto	u2170
  7159   0026D2                     u2171:
  7160   0026D2  EF6F  F013         	goto	l1329
  7161   0026D6                     u2170:
  7162   0026D6                     l3065:
  7163   0026D6  0E01               	movlw	1
  7164   0026D8  6E2B               	movwf	___flmul@aexp^0,c
  7165   0026DA  EF78  F013         	goto	l1328
  7166   0026DE                     l1329:
  7167   0026DE  A02D               	btfss	___flmul@prod^0,0,c
  7168   0026E0  EF74  F013         	goto	u2181
  7169   0026E4  EF76  F013         	goto	u2180
  7170   0026E8                     u2181:
  7171   0026E8  EF78  F013         	goto	l1328
  7172   0026EC                     u2180:
  7173   0026EC  EF6B  F013         	goto	l3065
  7174   0026F0                     l1328:
  7175   0026F0  502B               	movf	___flmul@aexp^0,w,c
  7176   0026F2  B4D8               	btfsc	status,2,c
  7177   0026F4  EF7E  F013         	goto	u2191
  7178   0026F8  EF80  F013         	goto	u2190
  7179   0026FC                     u2191:
  7180   0026FC  EFA4  F013         	goto	l3077
  7181   002700                     u2190:
  7182   002700  0E01               	movlw	1
  7183   002702  262D               	addwf	___flmul@prod^0,f,c
  7184   002704  0E00               	movlw	0
  7185   002706  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7186   002708  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7187   00270A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7188   00270C  A030               	btfss	(___flmul@prod+3)^0,0,c
  7189   00270E  EF8B  F013         	goto	u2201
  7190   002712  EF8D  F013         	goto	u2200
  7191   002716                     u2201:
  7192   002716  EFA4  F013         	goto	l3077
  7193   00271A                     u2200:
  7194   00271A  C02D  F022         	movff	___flmul@prod,??___flmul
  7195   00271E  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  7196   002722  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  7197   002726  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  7198   00272A  3425               	rlcf	(??___flmul+3)^0,w,c
  7199   00272C  3225               	rrcf	(??___flmul+3)^0,f,c
  7200   00272E  3224               	rrcf	(??___flmul+2)^0,f,c
  7201   002730  3223               	rrcf	(??___flmul+1)^0,f,c
  7202   002732  3222               	rrcf	??___flmul^0,f,c
  7203   002734  C022  F02D         	movff	??___flmul,___flmul@prod
  7204   002738  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  7205   00273C  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  7206   002740  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  7207   002744  4A31               	infsnz	___flmul@temp^0,f,c
  7208   002746  2A32               	incf	(___flmul@temp+1)^0,f,c
  7209   002748                     l3077:
  7210   002748  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7211   00274A  EFAF  F013         	goto	u2211
  7212   00274E  5032               	movf	(___flmul@temp+1)^0,w,c
  7213   002750  E108               	bnz	u2210
  7214   002752  2831               	incf	___flmul@temp^0,w,c
  7215   002754  A0D8               	btfss	status,0,c
  7216   002756  EFAF  F013         	goto	u2211
  7217   00275A  EFB1  F013         	goto	u2210
  7218   00275E                     u2211:
  7219   00275E  EFBB  F013         	goto	l3081
  7220   002762                     u2210:
  7221   002762  0E00               	movlw	0
  7222   002764  6E2D               	movwf	___flmul@prod^0,c
  7223   002766  0E00               	movlw	0
  7224   002768  6E2E               	movwf	(___flmul@prod+1)^0,c
  7225   00276A  0E80               	movlw	128
  7226   00276C  6E2F               	movwf	(___flmul@prod+2)^0,c
  7227   00276E  0E7F               	movlw	127
  7228   002770  6E30               	movwf	(___flmul@prod+3)^0,c
  7229   002772  EFE9  F013         	goto	l3093
  7230   002776                     l3081:
  7231   002776  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7232   002778  EFC8  F013         	goto	u2220
  7233   00277C  5032               	movf	(___flmul@temp+1)^0,w,c
  7234   00277E  E106               	bnz	u2221
  7235   002780  0431               	decf	___flmul@temp^0,w,c
  7236   002782  B0D8               	btfsc	status,0,c
  7237   002784  EFC6  F013         	goto	u2221
  7238   002788  EFC8  F013         	goto	u2220
  7239   00278C                     u2221:
  7240   00278C  EFD4  F013         	goto	l1336
  7241   002790                     u2220:
  7242   002790  0E00               	movlw	0
  7243   002792  6E2D               	movwf	___flmul@prod^0,c
  7244   002794  0E00               	movlw	0
  7245   002796  6E2E               	movwf	(___flmul@prod+1)^0,c
  7246   002798  0E00               	movlw	0
  7247   00279A  6E2F               	movwf	(___flmul@prod+2)^0,c
  7248   00279C  0E00               	movlw	0
  7249   00279E  6E30               	movwf	(___flmul@prod+3)^0,c
  7250   0027A0  0E00               	movlw	0
  7251   0027A2  6E26               	movwf	___flmul@sign^0,c
  7252   0027A4  EFE9  F013         	goto	l3093
  7253   0027A8                     l1336:
  7254   0027A8  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  7255   0027AC  0EFF               	movlw	255
  7256   0027AE  162D               	andwf	___flmul@prod^0,f,c
  7257   0027B0  0EFF               	movlw	255
  7258   0027B2  162E               	andwf	(___flmul@prod+1)^0,f,c
  7259   0027B4  0E7F               	movlw	127
  7260   0027B6  162F               	andwf	(___flmul@prod+2)^0,f,c
  7261   0027B8  0E00               	movlw	0
  7262   0027BA  1630               	andwf	(___flmul@prod+3)^0,f,c
  7263   0027BC  A02C               	btfss	___flmul@bexp^0,0,c
  7264   0027BE  EFE3  F013         	goto	u2231
  7265   0027C2  EFE5  F013         	goto	u2230
  7266   0027C6                     u2231:
  7267   0027C6  EFE6  F013         	goto	l3091
  7268   0027CA                     u2230:
  7269   0027CA  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  7270   0027CC                     l3091:
  7271   0027CC  90D8               	bcf	status,0,c
  7272   0027CE  302C               	rrcf	___flmul@bexp^0,w,c
  7273   0027D0  6E30               	movwf	(___flmul@prod+3)^0,c
  7274   0027D2                     l3093:
  7275   0027D2  5026               	movf	___flmul@sign^0,w,c
  7276   0027D4  1230               	iorwf	(___flmul@prod+3)^0,f,c
  7277   0027D6  C02D  F01A         	movff	___flmul@prod,?___flmul
  7278   0027DA  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  7279   0027DE  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  7280   0027E2  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  7281   0027E6                     l1323:
  7282   0027E6  0012               	return		;funcret
  7283   0027E8                     __end_of___flmul:
  7284                           	callstack 0
  7285                           
  7286 ;; *************** function _fullSpeedAhead *****************
  7287 ;; Defined at:
  7288 ;;		line 149 in file "dc_motor.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7291 ;;		 -> motorL(9), 
  7292 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7293 ;;		 -> motorR(9), 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  i               2   24[COMRAM] unsigned int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7308 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;Total ram usage:        7 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 3
  7312 ;; This function calls:
  7313 ;;		_setMotorPWM
  7314 ;; This function is called by:
  7315 ;;		_main
  7316 ;;		_White
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text33
  7321   003E76                     __ptext33:
  7322                           	callstack 0
  7323   003E76                     _fullSpeedAhead:
  7324                           	callstack 27
  7325   003E76                     
  7326                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  7327   003E76  EE20 F001          	lfsr	2,1
  7328   003E7A  5014               	movf	fullSpeedAhead@mL^0,w,c
  7329   003E7C  26D9               	addwf	fsr2l,f,c
  7330   003E7E  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7331   003E80  22DA               	addwfc	fsr2h,f,c
  7332   003E82  0E01               	movlw	1
  7333   003E84  6EDF               	movwf	indf2,c
  7334                           
  7335                           ;dc_motor.c: 152:  (mR->direction) = 1;
  7336   003E86  EE20 F001          	lfsr	2,1
  7337   003E8A  5016               	movf	fullSpeedAhead@mR^0,w,c
  7338   003E8C  26D9               	addwf	fsr2l,f,c
  7339   003E8E  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7340   003E90  22DA               	addwfc	fsr2h,f,c
  7341   003E92  0E01               	movlw	1
  7342   003E94  6EDF               	movwf	indf2,c
  7343   003E96                     
  7344                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <30; i++)
  7345   003E96  0E00               	movlw	0
  7346   003E98  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7347   003E9A  0E00               	movlw	0
  7348   003E9C  6E19               	movwf	fullSpeedAhead@i^0,c
  7349   003E9E                     l3239:
  7350                           
  7351                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  7352   003E9E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7353   003EA2  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7354   003EA6  2ADF               	incf	indf2,f,c
  7355                           
  7356                           ;dc_motor.c: 157:         (mR->power)++;
  7357   003EA8  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7358   003EAC  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7359   003EB0  2ADF               	incf	indf2,f,c
  7360   003EB2                     
  7361                           ;dc_motor.c: 158:         setMotorPWM(mL);
  7362   003EB2  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7363   003EB6  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7364   003EBA  EC97  F019         	call	_setMotorPWM	;wreg free
  7365   003EBE                     
  7366                           ;dc_motor.c: 159:         setMotorPWM(mR);
  7367   003EBE  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7368   003EC2  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7369   003EC6  EC97  F019         	call	_setMotorPWM	;wreg free
  7370   003ECA                     
  7371                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7372   003ECA  0E09               	movlw	9
  7373   003ECC  6E18               	movwf	??_fullSpeedAhead^0,c
  7374   003ECE  0E4E               	movlw	78
  7375   003ED0                     u3847:
  7376   003ED0  2EE8               	decfsz	wreg,f,c
  7377   003ED2  D7FE               	bra	u3847
  7378   003ED4  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7379   003ED6  D7FC               	bra	u3847
  7380   003ED8  D000               	nop2	
  7381   003EDA                     
  7382                           ;dc_motor.c: 161:     }
  7383   003EDA  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7384   003EDC  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7385   003EDE  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7386   003EE0  E109               	bnz	u2430
  7387   003EE2  0E1E               	movlw	30
  7388   003EE4  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7389   003EE6  A0D8               	btfss	status,0,c
  7390   003EE8  EF78  F01F         	goto	u2431
  7391   003EEC  EF7A  F01F         	goto	u2430
  7392   003EF0                     u2431:
  7393   003EF0  EF4F  F01F         	goto	l3239
  7394   003EF4                     u2430:
  7395   003EF4  0012               	return		;funcret
  7396   003EF6                     __end_of_fullSpeedAhead:
  7397                           	callstack 0
  7398                           
  7399 ;; *************** function ___flge *****************
  7400 ;; Defined at:
  7401 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  ff1             4   74[COMRAM] void 
  7404 ;;  ff2             4   78[COMRAM] void 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;		None               void
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7416 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;Total ram usage:       12 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; Hardware stack levels required when called: 1
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_RGB2Hue
  7427 ;;		_Hue2Colour
  7428 ;;		_main
  7429 ;;		_White
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text34
  7434   0035A0                     __ptext34:
  7435                           	callstack 0
  7436   0035A0                     ___flge:
  7437                           	callstack 29
  7438   0035A0  0E00               	movlw	0
  7439   0035A2  144B               	andwf	___flge@ff1^0,w,c
  7440   0035A4  6E53               	movwf	??___flge^0,c
  7441   0035A6  0E00               	movlw	0
  7442   0035A8  144C               	andwf	(___flge@ff1+1)^0,w,c
  7443   0035AA  6E54               	movwf	(??___flge+1)^0,c
  7444   0035AC  0E80               	movlw	128
  7445   0035AE  144D               	andwf	(___flge@ff1+2)^0,w,c
  7446   0035B0  6E55               	movwf	(??___flge+2)^0,c
  7447   0035B2  0E7F               	movlw	127
  7448   0035B4  144E               	andwf	(___flge@ff1+3)^0,w,c
  7449   0035B6  6E56               	movwf	(??___flge+3)^0,c
  7450   0035B8  5053               	movf	??___flge^0,w,c
  7451   0035BA  1054               	iorwf	(??___flge+1)^0,w,c
  7452   0035BC  1055               	iorwf	(??___flge+2)^0,w,c
  7453   0035BE  1056               	iorwf	(??___flge+3)^0,w,c
  7454   0035C0  A4D8               	btfss	status,2,c
  7455   0035C2  EFE5  F01A         	goto	u2831
  7456   0035C6  EFE7  F01A         	goto	u2830
  7457   0035CA                     u2831:
  7458   0035CA  EFEF  F01A         	goto	l3465
  7459   0035CE                     u2830:
  7460   0035CE  0E00               	movlw	0
  7461   0035D0  6E4B               	movwf	___flge@ff1^0,c
  7462   0035D2  0E00               	movlw	0
  7463   0035D4  6E4C               	movwf	(___flge@ff1+1)^0,c
  7464   0035D6  0E00               	movlw	0
  7465   0035D8  6E4D               	movwf	(___flge@ff1+2)^0,c
  7466   0035DA  0E00               	movlw	0
  7467   0035DC  6E4E               	movwf	(___flge@ff1+3)^0,c
  7468   0035DE                     l3465:
  7469   0035DE  0E00               	movlw	0
  7470   0035E0  144F               	andwf	___flge@ff2^0,w,c
  7471   0035E2  6E53               	movwf	??___flge^0,c
  7472   0035E4  0E00               	movlw	0
  7473   0035E6  1450               	andwf	(___flge@ff2+1)^0,w,c
  7474   0035E8  6E54               	movwf	(??___flge+1)^0,c
  7475   0035EA  0E80               	movlw	128
  7476   0035EC  1451               	andwf	(___flge@ff2+2)^0,w,c
  7477   0035EE  6E55               	movwf	(??___flge+2)^0,c
  7478   0035F0  0E7F               	movlw	127
  7479   0035F2  1452               	andwf	(___flge@ff2+3)^0,w,c
  7480   0035F4  6E56               	movwf	(??___flge+3)^0,c
  7481   0035F6  5053               	movf	??___flge^0,w,c
  7482   0035F8  1054               	iorwf	(??___flge+1)^0,w,c
  7483   0035FA  1055               	iorwf	(??___flge+2)^0,w,c
  7484   0035FC  1056               	iorwf	(??___flge+3)^0,w,c
  7485   0035FE  A4D8               	btfss	status,2,c
  7486   003600  EF04  F01B         	goto	u2841
  7487   003604  EF06  F01B         	goto	u2840
  7488   003608                     u2841:
  7489   003608  EF0E  F01B         	goto	l3469
  7490   00360C                     u2840:
  7491   00360C  0E00               	movlw	0
  7492   00360E  6E4F               	movwf	___flge@ff2^0,c
  7493   003610  0E00               	movlw	0
  7494   003612  6E50               	movwf	(___flge@ff2+1)^0,c
  7495   003614  0E00               	movlw	0
  7496   003616  6E51               	movwf	(___flge@ff2+2)^0,c
  7497   003618  0E00               	movlw	0
  7498   00361A  6E52               	movwf	(___flge@ff2+3)^0,c
  7499   00361C                     l3469:
  7500   00361C  AE4E               	btfss	(___flge@ff1+3)^0,7,c
  7501   00361E  EF13  F01B         	goto	u2851
  7502   003622  EF15  F01B         	goto	u2850
  7503   003626                     u2851:
  7504   003626  EF1E  F01B         	goto	l3473
  7505   00362A                     u2850:
  7506   00362A  6C4B               	negf	___flge@ff1^0,c
  7507   00362C  1E4C               	comf	(___flge@ff1+1)^0,f,c
  7508   00362E  B0D8               	btfsc	status,0,c
  7509   003630  2A4C               	incf	(___flge@ff1+1)^0,f,c
  7510   003632  1E4D               	comf	(___flge@ff1+2)^0,f,c
  7511   003634  B0D8               	btfsc	status,0,c
  7512   003636  2A4D               	incf	(___flge@ff1+2)^0,f,c
  7513   003638  0E80               	movlw	128
  7514   00363A  564E               	subfwb	(___flge@ff1+3)^0,f,c
  7515   00363C                     l3473:
  7516   00363C  AE52               	btfss	(___flge@ff2+3)^0,7,c
  7517   00363E  EF23  F01B         	goto	u2861
  7518   003642  EF25  F01B         	goto	u2860
  7519   003646                     u2861:
  7520   003646  EF2E  F01B         	goto	l970
  7521   00364A                     u2860:
  7522   00364A  6C4F               	negf	___flge@ff2^0,c
  7523   00364C  1E50               	comf	(___flge@ff2+1)^0,f,c
  7524   00364E  B0D8               	btfsc	status,0,c
  7525   003650  2A50               	incf	(___flge@ff2+1)^0,f,c
  7526   003652  1E51               	comf	(___flge@ff2+2)^0,f,c
  7527   003654  B0D8               	btfsc	status,0,c
  7528   003656  2A51               	incf	(___flge@ff2+2)^0,f,c
  7529   003658  0E80               	movlw	128
  7530   00365A  5652               	subfwb	(___flge@ff2+3)^0,f,c
  7531   00365C                     l970:
  7532   00365C  0E00               	movlw	0
  7533   00365E  1A4B               	xorwf	___flge@ff1^0,f,c
  7534   003660  0E00               	movlw	0
  7535   003662  1A4C               	xorwf	(___flge@ff1+1)^0,f,c
  7536   003664  0E00               	movlw	0
  7537   003666  1A4D               	xorwf	(___flge@ff1+2)^0,f,c
  7538   003668  0E80               	movlw	128
  7539   00366A  1A4E               	xorwf	(___flge@ff1+3)^0,f,c
  7540   00366C  0E00               	movlw	0
  7541   00366E  1A4F               	xorwf	___flge@ff2^0,f,c
  7542   003670  0E00               	movlw	0
  7543   003672  1A50               	xorwf	(___flge@ff2+1)^0,f,c
  7544   003674  0E00               	movlw	0
  7545   003676  1A51               	xorwf	(___flge@ff2+2)^0,f,c
  7546   003678  0E80               	movlw	128
  7547   00367A  1A52               	xorwf	(___flge@ff2+3)^0,f,c
  7548   00367C  504F               	movf	___flge@ff2^0,w,c
  7549   00367E  5C4B               	subwf	___flge@ff1^0,w,c
  7550   003680  5050               	movf	(___flge@ff2+1)^0,w,c
  7551   003682  584C               	subwfb	(___flge@ff1+1)^0,w,c
  7552   003684  5051               	movf	(___flge@ff2+2)^0,w,c
  7553   003686  584D               	subwfb	(___flge@ff1+2)^0,w,c
  7554   003688  5052               	movf	(___flge@ff2+3)^0,w,c
  7555   00368A  584E               	subwfb	(___flge@ff1+3)^0,w,c
  7556   00368C  B0D8               	btfsc	status,0,c
  7557   00368E  EF4B  F01B         	goto	u2871
  7558   003692  EF4D  F01B         	goto	u2870
  7559   003696                     u2871:
  7560   003696  EF50  F01B         	goto	l3479
  7561   00369A                     u2870:
  7562   00369A  90D8               	bcf	status,0,c
  7563   00369C  EF51  F01B         	goto	l975
  7564   0036A0                     l3479:
  7565   0036A0  80D8               	bsf	status,0,c
  7566   0036A2                     l975:
  7567   0036A2  0012               	return		;funcret
  7568   0036A4                     __end_of___flge:
  7569                           	callstack 0
  7570                           
  7571 ;; *************** function ___fladd *****************
  7572 ;; Defined at:
  7573 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  b               4   58[COMRAM] void 
  7576 ;;  a               4   62[COMRAM] void 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  grs             1   73[COMRAM] unsigned char 
  7579 ;;  bexp            1   72[COMRAM] unsigned char 
  7580 ;;  aexp            1   71[COMRAM] unsigned char 
  7581 ;;  signs           1   70[COMRAM] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  4   58[COMRAM] unsigned char 
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;Total ram usage:       16 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 1
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_colour_read_all
  7602 ;;		_RGB2Hue
  7603 ;;		_White
  7604 ;;		___flsub
  7605 ;;		_memoryUpdateTime
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text35
  7610   001A94                     __ptext35:
  7611                           	callstack 0
  7612   001A94                     ___fladd:
  7613                           	callstack 28
  7614   001A94  503E               	movf	(___fladd@b+3)^0,w,c
  7615   001A96  0B80               	andlw	128
  7616   001A98  6E47               	movwf	___fladd@signs^0,c
  7617   001A9A  503E               	movf	(___fladd@b+3)^0,w,c
  7618   001A9C  243E               	addwf	(___fladd@b+3)^0,w,c
  7619   001A9E  6E49               	movwf	___fladd@bexp^0,c
  7620   001AA0  AE3D               	btfss	(___fladd@b+2)^0,7,c
  7621   001AA2  EF55  F00D         	goto	u2441
  7622   001AA6  EF57  F00D         	goto	u2440
  7623   001AAA                     u2441:
  7624   001AAA  EF58  F00D         	goto	l3265
  7625   001AAE                     u2440:
  7626   001AAE  8049               	bsf	___fladd@bexp^0,0,c
  7627   001AB0                     l3265:
  7628   001AB0  5049               	movf	___fladd@bexp^0,w,c
  7629   001AB2  B4D8               	btfsc	status,2,c
  7630   001AB4  EF5E  F00D         	goto	u2451
  7631   001AB8  EF60  F00D         	goto	u2450
  7632   001ABC                     u2451:
  7633   001ABC  EF75  F00D         	goto	l3275
  7634   001AC0                     u2450:
  7635   001AC0  2849               	incf	___fladd@bexp^0,w,c
  7636   001AC2  A4D8               	btfss	status,2,c
  7637   001AC4  EF66  F00D         	goto	u2461
  7638   001AC8  EF68  F00D         	goto	u2460
  7639   001ACC                     u2461:
  7640   001ACC  EF70  F00D         	goto	l3271
  7641   001AD0                     u2460:
  7642   001AD0  0E00               	movlw	0
  7643   001AD2  6E3B               	movwf	___fladd@b^0,c
  7644   001AD4  0E00               	movlw	0
  7645   001AD6  6E3C               	movwf	(___fladd@b+1)^0,c
  7646   001AD8  0E00               	movlw	0
  7647   001ADA  6E3D               	movwf	(___fladd@b+2)^0,c
  7648   001ADC  0E00               	movlw	0
  7649   001ADE  6E3E               	movwf	(___fladd@b+3)^0,c
  7650   001AE0                     l3271:
  7651   001AE0  8E3D               	bsf	(___fladd@b+2)^0,7,c
  7652   001AE2  0E00               	movlw	0
  7653   001AE4  6E3E               	movwf	(___fladd@b+3)^0,c
  7654   001AE6  EF7D  F00D         	goto	l3277
  7655   001AEA                     l3275:
  7656   001AEA  0E00               	movlw	0
  7657   001AEC  6E3B               	movwf	___fladd@b^0,c
  7658   001AEE  0E00               	movlw	0
  7659   001AF0  6E3C               	movwf	(___fladd@b+1)^0,c
  7660   001AF2  0E00               	movlw	0
  7661   001AF4  6E3D               	movwf	(___fladd@b+2)^0,c
  7662   001AF6  0E00               	movlw	0
  7663   001AF8  6E3E               	movwf	(___fladd@b+3)^0,c
  7664   001AFA                     l3277:
  7665   001AFA  5042               	movf	(___fladd@a+3)^0,w,c
  7666   001AFC  0B80               	andlw	128
  7667   001AFE  6E48               	movwf	___fladd@aexp^0,c
  7668   001B00  5047               	movf	___fladd@signs^0,w,c
  7669   001B02  1848               	xorwf	___fladd@aexp^0,w,c
  7670   001B04  B4D8               	btfsc	status,2,c
  7671   001B06  EF87  F00D         	goto	u2471
  7672   001B0A  EF89  F00D         	goto	u2470
  7673   001B0E                     u2471:
  7674   001B0E  EF8A  F00D         	goto	l3283
  7675   001B12                     u2470:
  7676   001B12  8C47               	bsf	___fladd@signs^0,6,c
  7677   001B14                     l3283:
  7678   001B14  5042               	movf	(___fladd@a+3)^0,w,c
  7679   001B16  2442               	addwf	(___fladd@a+3)^0,w,c
  7680   001B18  6E48               	movwf	___fladd@aexp^0,c
  7681   001B1A  AE41               	btfss	(___fladd@a+2)^0,7,c
  7682   001B1C  EF92  F00D         	goto	u2481
  7683   001B20  EF94  F00D         	goto	u2480
  7684   001B24                     u2481:
  7685   001B24  EF95  F00D         	goto	l3289
  7686   001B28                     u2480:
  7687   001B28  8048               	bsf	___fladd@aexp^0,0,c
  7688   001B2A                     l3289:
  7689   001B2A  5048               	movf	___fladd@aexp^0,w,c
  7690   001B2C  B4D8               	btfsc	status,2,c
  7691   001B2E  EF9B  F00D         	goto	u2491
  7692   001B32  EF9D  F00D         	goto	u2490
  7693   001B36                     u2491:
  7694   001B36  EFB2  F00D         	goto	l3299
  7695   001B3A                     u2490:
  7696   001B3A  2848               	incf	___fladd@aexp^0,w,c
  7697   001B3C  A4D8               	btfss	status,2,c
  7698   001B3E  EFA3  F00D         	goto	u2501
  7699   001B42  EFA5  F00D         	goto	u2500
  7700   001B46                     u2501:
  7701   001B46  EFAD  F00D         	goto	l3295
  7702   001B4A                     u2500:
  7703   001B4A  0E00               	movlw	0
  7704   001B4C  6E3F               	movwf	___fladd@a^0,c
  7705   001B4E  0E00               	movlw	0
  7706   001B50  6E40               	movwf	(___fladd@a+1)^0,c
  7707   001B52  0E00               	movlw	0
  7708   001B54  6E41               	movwf	(___fladd@a+2)^0,c
  7709   001B56  0E00               	movlw	0
  7710   001B58  6E42               	movwf	(___fladd@a+3)^0,c
  7711   001B5A                     l3295:
  7712   001B5A  8E41               	bsf	(___fladd@a+2)^0,7,c
  7713   001B5C  0E00               	movlw	0
  7714   001B5E  6E42               	movwf	(___fladd@a+3)^0,c
  7715   001B60  EFBA  F00D         	goto	l3301
  7716   001B64                     l3299:
  7717   001B64  0E00               	movlw	0
  7718   001B66  6E3F               	movwf	___fladd@a^0,c
  7719   001B68  0E00               	movlw	0
  7720   001B6A  6E40               	movwf	(___fladd@a+1)^0,c
  7721   001B6C  0E00               	movlw	0
  7722   001B6E  6E41               	movwf	(___fladd@a+2)^0,c
  7723   001B70  0E00               	movlw	0
  7724   001B72  6E42               	movwf	(___fladd@a+3)^0,c
  7725   001B74                     l3301:
  7726   001B74  5049               	movf	___fladd@bexp^0,w,c
  7727   001B76  5C48               	subwf	___fladd@aexp^0,w,c
  7728   001B78  B0D8               	btfsc	status,0,c
  7729   001B7A  EFC1  F00D         	goto	u2511
  7730   001B7E  EFC3  F00D         	goto	u2510
  7731   001B82                     u2511:
  7732   001B82  EFEA  F00D         	goto	l3337
  7733   001B86                     u2510:
  7734   001B86  AC47               	btfss	___fladd@signs^0,6,c
  7735   001B88  EFC8  F00D         	goto	u2521
  7736   001B8C  EFCA  F00D         	goto	u2520
  7737   001B90                     u2521:
  7738   001B90  EFCC  F00D         	goto	l3307
  7739   001B94                     u2520:
  7740   001B94  0E80               	movlw	128
  7741   001B96  1A47               	xorwf	___fladd@signs^0,f,c
  7742   001B98                     l3307:
  7743   001B98  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  7744   001B9C  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7745   001BA0  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  7746   001BA4  C03B  F04A         	movff	___fladd@b,___fladd@grs
  7747   001BA8  C03F  F03B         	movff	___fladd@a,___fladd@b
  7748   001BAC  C04A  F03F         	movff	___fladd@grs,___fladd@a
  7749   001BB0  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  7750   001BB4  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  7751   001BB8  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  7752   001BBC  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  7753   001BC0  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  7754   001BC4  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  7755   001BC8  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  7756   001BCC  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  7757   001BD0  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  7758   001BD4                     l3337:
  7759   001BD4  0E00               	movlw	0
  7760   001BD6  6E4A               	movwf	___fladd@grs^0,c
  7761   001BD8  5049               	movf	___fladd@bexp^0,w,c
  7762   001BDA  C048  F043         	movff	___fladd@aexp,??___fladd
  7763   001BDE  6A44               	clrf	(??___fladd+1)^0,c
  7764   001BE0  5E43               	subwf	??___fladd^0,f,c
  7765   001BE2  0E00               	movlw	0
  7766   001BE4  5A44               	subwfb	(??___fladd+1)^0,f,c
  7767   001BE6  BE44               	btfsc	(??___fladd+1)^0,7,c
  7768   001BE8  EFFF  F00D         	goto	u2531
  7769   001BEC  5044               	movf	(??___fladd+1)^0,w,c
  7770   001BEE  E109               	bnz	u2530
  7771   001BF0  0E1A               	movlw	26
  7772   001BF2  5C43               	subwf	??___fladd^0,w,c
  7773   001BF4  A0D8               	btfss	status,0,c
  7774   001BF6  EFFF  F00D         	goto	u2531
  7775   001BFA  EF01  F00E         	goto	u2530
  7776   001BFE                     u2531:
  7777   001BFE  EF38  F00E         	goto	l1234
  7778   001C02                     u2530:
  7779   001C02  503B               	movf	___fladd@b^0,w,c
  7780   001C04  103C               	iorwf	(___fladd@b+1)^0,w,c
  7781   001C06  103D               	iorwf	(___fladd@b+2)^0,w,c
  7782   001C08  103E               	iorwf	(___fladd@b+3)^0,w,c
  7783   001C0A  A4D8               	btfss	status,2,c
  7784   001C0C  EF0A  F00E         	goto	u2541
  7785   001C10  EF0D  F00E         	goto	u2540
  7786   001C14                     u2541:
  7787   001C14  0E01               	movlw	1
  7788   001C16  EF0E  F00E         	goto	u2550
  7789   001C1A                     u2540:
  7790   001C1A  0E00               	movlw	0
  7791   001C1C                     u2550:
  7792   001C1C  6E4A               	movwf	___fladd@grs^0,c
  7793   001C1E  0E00               	movlw	0
  7794   001C20  6E3B               	movwf	___fladd@b^0,c
  7795   001C22  0E00               	movlw	0
  7796   001C24  6E3C               	movwf	(___fladd@b+1)^0,c
  7797   001C26  0E00               	movlw	0
  7798   001C28  6E3D               	movwf	(___fladd@b+2)^0,c
  7799   001C2A  0E00               	movlw	0
  7800   001C2C  6E3E               	movwf	(___fladd@b+3)^0,c
  7801   001C2E  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7802   001C32  EF41  F00E         	goto	l1233
  7803   001C36                     l1235:
  7804   001C36  A04A               	btfss	___fladd@grs^0,0,c
  7805   001C38  EF20  F00E         	goto	u2561
  7806   001C3C  EF22  F00E         	goto	u2560
  7807   001C40                     u2561:
  7808   001C40  EF28  F00E         	goto	l3349
  7809   001C44                     u2560:
  7810   001C44  90D8               	bcf	status,0,c
  7811   001C46  304A               	rrcf	___fladd@grs^0,w,c
  7812   001C48  0901               	iorlw	1
  7813   001C4A  6E4A               	movwf	___fladd@grs^0,c
  7814   001C4C  EF2A  F00E         	goto	l3351
  7815   001C50                     l3349:
  7816   001C50  90D8               	bcf	status,0,c
  7817   001C52  324A               	rrcf	___fladd@grs^0,f,c
  7818   001C54                     l3351:
  7819   001C54  A03B               	btfss	___fladd@b^0,0,c
  7820   001C56  EF2F  F00E         	goto	u2571
  7821   001C5A  EF31  F00E         	goto	u2570
  7822   001C5E                     u2571:
  7823   001C5E  EF32  F00E         	goto	l3355
  7824   001C62                     u2570:
  7825   001C62  8E4A               	bsf	___fladd@grs^0,7,c
  7826   001C64                     l3355:
  7827   001C64  343E               	rlcf	(___fladd@b+3)^0,w,c
  7828   001C66  323E               	rrcf	(___fladd@b+3)^0,f,c
  7829   001C68  323D               	rrcf	(___fladd@b+2)^0,f,c
  7830   001C6A  323C               	rrcf	(___fladd@b+1)^0,f,c
  7831   001C6C  323B               	rrcf	___fladd@b^0,f,c
  7832   001C6E  2A49               	incf	___fladd@bexp^0,f,c
  7833   001C70                     l1234:
  7834   001C70  5048               	movf	___fladd@aexp^0,w,c
  7835   001C72  5C49               	subwf	___fladd@bexp^0,w,c
  7836   001C74  A0D8               	btfss	status,0,c
  7837   001C76  EF3F  F00E         	goto	u2581
  7838   001C7A  EF41  F00E         	goto	u2580
  7839   001C7E                     u2581:
  7840   001C7E  EF1B  F00E         	goto	l1235
  7841   001C82                     u2580:
  7842   001C82                     l1233:
  7843   001C82  BC47               	btfsc	___fladd@signs^0,6,c
  7844   001C84  EF46  F00E         	goto	u2591
  7845   001C88  EF48  F00E         	goto	u2590
  7846   001C8C                     u2591:
  7847   001C8C  EF88  F00E         	goto	l3383
  7848   001C90                     u2590:
  7849   001C90  5049               	movf	___fladd@bexp^0,w,c
  7850   001C92  A4D8               	btfss	status,2,c
  7851   001C94  EF4E  F00E         	goto	u2601
  7852   001C98  EF50  F00E         	goto	u2600
  7853   001C9C                     u2601:
  7854   001C9C  EF5A  F00E         	goto	l3365
  7855   001CA0                     u2600:
  7856   001CA0  0E00               	movlw	0
  7857   001CA2  6E3B               	movwf	?___fladd^0,c
  7858   001CA4  0E00               	movlw	0
  7859   001CA6  6E3C               	movwf	(?___fladd+1)^0,c
  7860   001CA8  0E00               	movlw	0
  7861   001CAA  6E3D               	movwf	(?___fladd+2)^0,c
  7862   001CAC  0E00               	movlw	0
  7863   001CAE  6E3E               	movwf	(?___fladd+3)^0,c
  7864   001CB0  EFA9  F00F         	goto	l1242
  7865   001CB4                     l3365:
  7866   001CB4  503F               	movf	___fladd@a^0,w,c
  7867   001CB6  263B               	addwf	___fladd@b^0,f,c
  7868   001CB8  5040               	movf	(___fladd@a+1)^0,w,c
  7869   001CBA  223C               	addwfc	(___fladd@b+1)^0,f,c
  7870   001CBC  5041               	movf	(___fladd@a+2)^0,w,c
  7871   001CBE  223D               	addwfc	(___fladd@b+2)^0,f,c
  7872   001CC0  5042               	movf	(___fladd@a+3)^0,w,c
  7873   001CC2  223E               	addwfc	(___fladd@b+3)^0,f,c
  7874   001CC4  A03E               	btfss	(___fladd@b+3)^0,0,c
  7875   001CC6  EF67  F00E         	goto	u2611
  7876   001CCA  EF69  F00E         	goto	u2610
  7877   001CCE                     u2611:
  7878   001CCE  EF15  F00F         	goto	l3419
  7879   001CD2                     u2610:
  7880   001CD2  A04A               	btfss	___fladd@grs^0,0,c
  7881   001CD4  EF6E  F00E         	goto	u2621
  7882   001CD8  EF70  F00E         	goto	u2620
  7883   001CDC                     u2621:
  7884   001CDC  EF76  F00E         	goto	l3373
  7885   001CE0                     u2620:
  7886   001CE0  90D8               	bcf	status,0,c
  7887   001CE2  304A               	rrcf	___fladd@grs^0,w,c
  7888   001CE4  0901               	iorlw	1
  7889   001CE6  6E4A               	movwf	___fladd@grs^0,c
  7890   001CE8  EF78  F00E         	goto	l3375
  7891   001CEC                     l3373:
  7892   001CEC  90D8               	bcf	status,0,c
  7893   001CEE  324A               	rrcf	___fladd@grs^0,f,c
  7894   001CF0                     l3375:
  7895   001CF0  A03B               	btfss	___fladd@b^0,0,c
  7896   001CF2  EF7D  F00E         	goto	u2631
  7897   001CF6  EF7F  F00E         	goto	u2630
  7898   001CFA                     u2631:
  7899   001CFA  EF80  F00E         	goto	l3379
  7900   001CFE                     u2630:
  7901   001CFE  8E4A               	bsf	___fladd@grs^0,7,c
  7902   001D00                     l3379:
  7903   001D00  343E               	rlcf	(___fladd@b+3)^0,w,c
  7904   001D02  323E               	rrcf	(___fladd@b+3)^0,f,c
  7905   001D04  323D               	rrcf	(___fladd@b+2)^0,f,c
  7906   001D06  323C               	rrcf	(___fladd@b+1)^0,f,c
  7907   001D08  323B               	rrcf	___fladd@b^0,f,c
  7908   001D0A  2A49               	incf	___fladd@bexp^0,f,c
  7909   001D0C  EF15  F00F         	goto	l3419
  7910   001D10                     l3383:
  7911   001D10  503F               	movf	___fladd@a^0,w,c
  7912   001D12  5C3B               	subwf	___fladd@b^0,w,c
  7913   001D14  5040               	movf	(___fladd@a+1)^0,w,c
  7914   001D16  583C               	subwfb	(___fladd@b+1)^0,w,c
  7915   001D18  5041               	movf	(___fladd@a+2)^0,w,c
  7916   001D1A  583D               	subwfb	(___fladd@b+2)^0,w,c
  7917   001D1C  503E               	movf	(___fladd@b+3)^0,w,c
  7918   001D1E  0A80               	xorlw	128
  7919   001D20  6E43               	movwf	??___fladd^0,c
  7920   001D22  5042               	movf	(___fladd@a+3)^0,w,c
  7921   001D24  0A80               	xorlw	128
  7922   001D26  5843               	subwfb	??___fladd^0,w,c
  7923   001D28  B0D8               	btfsc	status,0,c
  7924   001D2A  EF99  F00E         	goto	u2641
  7925   001D2E  EF9B  F00E         	goto	u2640
  7926   001D32                     u2641:
  7927   001D32  EFC6  F00E         	goto	l3393
  7928   001D36                     u2640:
  7929   001D36  503B               	movf	___fladd@b^0,w,c
  7930   001D38  5C3F               	subwf	___fladd@a^0,w,c
  7931   001D3A  6E43               	movwf	??___fladd^0,c
  7932   001D3C  503C               	movf	(___fladd@b+1)^0,w,c
  7933   001D3E  5840               	subwfb	(___fladd@a+1)^0,w,c
  7934   001D40  6E44               	movwf	(??___fladd+1)^0,c
  7935   001D42  503D               	movf	(___fladd@b+2)^0,w,c
  7936   001D44  5841               	subwfb	(___fladd@a+2)^0,w,c
  7937   001D46  6E45               	movwf	(??___fladd+2)^0,c
  7938   001D48  503E               	movf	(___fladd@b+3)^0,w,c
  7939   001D4A  5842               	subwfb	(___fladd@a+3)^0,w,c
  7940   001D4C  6E46               	movwf	(??___fladd+3)^0,c
  7941   001D4E  0EFF               	movlw	255
  7942   001D50  2443               	addwf	??___fladd^0,w,c
  7943   001D52  6E3B               	movwf	___fladd@b^0,c
  7944   001D54  0EFF               	movlw	255
  7945   001D56  2044               	addwfc	(??___fladd+1)^0,w,c
  7946   001D58  6E3C               	movwf	(___fladd@b+1)^0,c
  7947   001D5A  0EFF               	movlw	255
  7948   001D5C  2045               	addwfc	(??___fladd+2)^0,w,c
  7949   001D5E  6E3D               	movwf	(___fladd@b+2)^0,c
  7950   001D60  0EFF               	movlw	255
  7951   001D62  2046               	addwfc	(??___fladd+3)^0,w,c
  7952   001D64  6E3E               	movwf	(___fladd@b+3)^0,c
  7953   001D66  0E80               	movlw	128
  7954   001D68  1A47               	xorwf	___fladd@signs^0,f,c
  7955   001D6A  6C4A               	negf	___fladd@grs^0,c
  7956   001D6C  504A               	movf	___fladd@grs^0,w,c
  7957   001D6E  A4D8               	btfss	status,2,c
  7958   001D70  EFBC  F00E         	goto	u2651
  7959   001D74  EFBE  F00E         	goto	u2650
  7960   001D78                     u2651:
  7961   001D78  EFCE  F00E         	goto	l1250
  7962   001D7C                     u2650:
  7963   001D7C  0E01               	movlw	1
  7964   001D7E  263B               	addwf	___fladd@b^0,f,c
  7965   001D80  0E00               	movlw	0
  7966   001D82  223C               	addwfc	(___fladd@b+1)^0,f,c
  7967   001D84  223D               	addwfc	(___fladd@b+2)^0,f,c
  7968   001D86  223E               	addwfc	(___fladd@b+3)^0,f,c
  7969   001D88  EFCE  F00E         	goto	l1250
  7970   001D8C                     l3393:
  7971   001D8C  503F               	movf	___fladd@a^0,w,c
  7972   001D8E  5E3B               	subwf	___fladd@b^0,f,c
  7973   001D90  5040               	movf	(___fladd@a+1)^0,w,c
  7974   001D92  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  7975   001D94  5041               	movf	(___fladd@a+2)^0,w,c
  7976   001D96  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  7977   001D98  5042               	movf	(___fladd@a+3)^0,w,c
  7978   001D9A  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  7979   001D9C                     l1250:
  7980   001D9C  503B               	movf	___fladd@b^0,w,c
  7981   001D9E  103C               	iorwf	(___fladd@b+1)^0,w,c
  7982   001DA0  103D               	iorwf	(___fladd@b+2)^0,w,c
  7983   001DA2  103E               	iorwf	(___fladd@b+3)^0,w,c
  7984   001DA4  A4D8               	btfss	status,2,c
  7985   001DA6  EFD7  F00E         	goto	u2661
  7986   001DAA  EFD9  F00E         	goto	u2660
  7987   001DAE                     u2661:
  7988   001DAE  EF0E  F00F         	goto	l3417
  7989   001DB2                     u2660:
  7990   001DB2  504A               	movf	___fladd@grs^0,w,c
  7991   001DB4  A4D8               	btfss	status,2,c
  7992   001DB6  EFDF  F00E         	goto	u2671
  7993   001DBA  EFE1  F00E         	goto	u2670
  7994   001DBE                     u2671:
  7995   001DBE  EF0E  F00F         	goto	l3417
  7996   001DC2                     u2670:
  7997   001DC2  0E00               	movlw	0
  7998   001DC4  6E3B               	movwf	?___fladd^0,c
  7999   001DC6  0E00               	movlw	0
  8000   001DC8  6E3C               	movwf	(?___fladd+1)^0,c
  8001   001DCA  0E00               	movlw	0
  8002   001DCC  6E3D               	movwf	(?___fladd+2)^0,c
  8003   001DCE  0E00               	movlw	0
  8004   001DD0  6E3E               	movwf	(?___fladd+3)^0,c
  8005   001DD2  EFA9  F00F         	goto	l1242
  8006   001DD6                     l3401:
  8007   001DD6  90D8               	bcf	status,0,c
  8008   001DD8  363B               	rlcf	___fladd@b^0,f,c
  8009   001DDA  363C               	rlcf	(___fladd@b+1)^0,f,c
  8010   001DDC  363D               	rlcf	(___fladd@b+2)^0,f,c
  8011   001DDE  363E               	rlcf	(___fladd@b+3)^0,f,c
  8012   001DE0  AE4A               	btfss	___fladd@grs^0,7,c
  8013   001DE2  EFF5  F00E         	goto	u2681
  8014   001DE6  EFF7  F00E         	goto	u2680
  8015   001DEA                     u2681:
  8016   001DEA  EFF8  F00E         	goto	l3407
  8017   001DEE                     u2680:
  8018   001DEE  803B               	bsf	___fladd@b^0,0,c
  8019   001DF0                     l3407:
  8020   001DF0  A04A               	btfss	___fladd@grs^0,0,c
  8021   001DF2  EFFD  F00E         	goto	u2691
  8022   001DF6  EFFF  F00E         	goto	u2690
  8023   001DFA                     u2691:
  8024   001DFA  EF03  F00F         	goto	l3411
  8025   001DFE                     u2690:
  8026   001DFE  80D8               	bsf	status,0,c
  8027   001E00  364A               	rlcf	___fladd@grs^0,f,c
  8028   001E02  EF05  F00F         	goto	l3413
  8029   001E06                     l3411:
  8030   001E06  90D8               	bcf	status,0,c
  8031   001E08  364A               	rlcf	___fladd@grs^0,f,c
  8032   001E0A                     l3413:
  8033   001E0A  5049               	movf	___fladd@bexp^0,w,c
  8034   001E0C  B4D8               	btfsc	status,2,c
  8035   001E0E  EF0B  F00F         	goto	u2701
  8036   001E12  EF0D  F00F         	goto	u2700
  8037   001E16                     u2701:
  8038   001E16  EF0E  F00F         	goto	l3417
  8039   001E1A                     u2700:
  8040   001E1A  0649               	decf	___fladd@bexp^0,f,c
  8041   001E1C                     l3417:
  8042   001E1C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  8043   001E1E  EF13  F00F         	goto	u2711
  8044   001E22  EF15  F00F         	goto	u2710
  8045   001E26                     u2711:
  8046   001E26  EFEB  F00E         	goto	l3401
  8047   001E2A                     u2710:
  8048   001E2A                     l3419:
  8049   001E2A  0E00               	movlw	0
  8050   001E2C  6E48               	movwf	___fladd@aexp^0,c
  8051   001E2E  AE4A               	btfss	___fladd@grs^0,7,c
  8052   001E30  EF1C  F00F         	goto	u2721
  8053   001E34  EF1E  F00F         	goto	u2720
  8054   001E38                     u2721:
  8055   001E38  EF36  F00F         	goto	l1259
  8056   001E3C                     u2720:
  8057   001E3C  C04A  F043         	movff	___fladd@grs,??___fladd
  8058   001E40  0E7F               	movlw	127
  8059   001E42  1643               	andwf	??___fladd^0,f,c
  8060   001E44  B4D8               	btfsc	status,2,c
  8061   001E46  EF27  F00F         	goto	u2731
  8062   001E4A  EF29  F00F         	goto	u2730
  8063   001E4E                     u2731:
  8064   001E4E  EF2D  F00F         	goto	l1260
  8065   001E52                     u2730:
  8066   001E52                     l3425:
  8067   001E52  0E01               	movlw	1
  8068   001E54  6E48               	movwf	___fladd@aexp^0,c
  8069   001E56  EF36  F00F         	goto	l1259
  8070   001E5A                     l1260:
  8071   001E5A  A03B               	btfss	___fladd@b^0,0,c
  8072   001E5C  EF32  F00F         	goto	u2741
  8073   001E60  EF34  F00F         	goto	u2740
  8074   001E64                     u2741:
  8075   001E64  EF36  F00F         	goto	l1259
  8076   001E68                     u2740:
  8077   001E68  EF29  F00F         	goto	l3425
  8078   001E6C                     l1259:
  8079   001E6C  5048               	movf	___fladd@aexp^0,w,c
  8080   001E6E  B4D8               	btfsc	status,2,c
  8081   001E70  EF3C  F00F         	goto	u2751
  8082   001E74  EF3E  F00F         	goto	u2750
  8083   001E78                     u2751:
  8084   001E78  EF69  F00F         	goto	l3437
  8085   001E7C                     u2750:
  8086   001E7C  0E01               	movlw	1
  8087   001E7E  263B               	addwf	___fladd@b^0,f,c
  8088   001E80  0E00               	movlw	0
  8089   001E82  223C               	addwfc	(___fladd@b+1)^0,f,c
  8090   001E84  223D               	addwfc	(___fladd@b+2)^0,f,c
  8091   001E86  223E               	addwfc	(___fladd@b+3)^0,f,c
  8092   001E88  A03E               	btfss	(___fladd@b+3)^0,0,c
  8093   001E8A  EF49  F00F         	goto	u2761
  8094   001E8E  EF4B  F00F         	goto	u2760
  8095   001E92                     u2761:
  8096   001E92  EF69  F00F         	goto	l3437
  8097   001E96                     u2760:
  8098   001E96  C03B  F043         	movff	___fladd@b,??___fladd
  8099   001E9A  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  8100   001E9E  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  8101   001EA2  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  8102   001EA6  3446               	rlcf	(??___fladd+3)^0,w,c
  8103   001EA8  3246               	rrcf	(??___fladd+3)^0,f,c
  8104   001EAA  3245               	rrcf	(??___fladd+2)^0,f,c
  8105   001EAC  3244               	rrcf	(??___fladd+1)^0,f,c
  8106   001EAE  3243               	rrcf	??___fladd^0,f,c
  8107   001EB0  C043  F03B         	movff	??___fladd,___fladd@b
  8108   001EB4  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  8109   001EB8  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  8110   001EBC  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  8111   001EC0  2849               	incf	___fladd@bexp^0,w,c
  8112   001EC2  B4D8               	btfsc	status,2,c
  8113   001EC4  EF66  F00F         	goto	u2771
  8114   001EC8  EF68  F00F         	goto	u2770
  8115   001ECC                     u2771:
  8116   001ECC  EF69  F00F         	goto	l3437
  8117   001ED0                     u2770:
  8118   001ED0  2A49               	incf	___fladd@bexp^0,f,c
  8119   001ED2                     l3437:
  8120   001ED2  2849               	incf	___fladd@bexp^0,w,c
  8121   001ED4  B4D8               	btfsc	status,2,c
  8122   001ED6  EF6F  F00F         	goto	u2781
  8123   001EDA  EF71  F00F         	goto	u2780
  8124   001EDE                     u2781:
  8125   001EDE  EF79  F00F         	goto	l3441
  8126   001EE2                     u2780:
  8127   001EE2  5049               	movf	___fladd@bexp^0,w,c
  8128   001EE4  A4D8               	btfss	status,2,c
  8129   001EE6  EF77  F00F         	goto	u2791
  8130   001EEA  EF79  F00F         	goto	u2790
  8131   001EEE                     u2791:
  8132   001EEE  EF8B  F00F         	goto	l3445
  8133   001EF2                     u2790:
  8134   001EF2                     l3441:
  8135   001EF2  0E00               	movlw	0
  8136   001EF4  6E3B               	movwf	___fladd@b^0,c
  8137   001EF6  0E00               	movlw	0
  8138   001EF8  6E3C               	movwf	(___fladd@b+1)^0,c
  8139   001EFA  0E00               	movlw	0
  8140   001EFC  6E3D               	movwf	(___fladd@b+2)^0,c
  8141   001EFE  0E00               	movlw	0
  8142   001F00  6E3E               	movwf	(___fladd@b+3)^0,c
  8143   001F02  5049               	movf	___fladd@bexp^0,w,c
  8144   001F04  A4D8               	btfss	status,2,c
  8145   001F06  EF87  F00F         	goto	u2801
  8146   001F0A  EF89  F00F         	goto	u2800
  8147   001F0E                     u2801:
  8148   001F0E  EF8B  F00F         	goto	l3445
  8149   001F12                     u2800:
  8150   001F12  0E00               	movlw	0
  8151   001F14  6E47               	movwf	___fladd@signs^0,c
  8152   001F16                     l3445:
  8153   001F16  A049               	btfss	___fladd@bexp^0,0,c
  8154   001F18  EF90  F00F         	goto	u2811
  8155   001F1C  EF92  F00F         	goto	u2810
  8156   001F20                     u2811:
  8157   001F20  EF95  F00F         	goto	l3449
  8158   001F24                     u2810:
  8159   001F24  8E3D               	bsf	(___fladd@b+2)^0,7,c
  8160   001F26  EF96  F00F         	goto	l3451
  8161   001F2A                     l3449:
  8162   001F2A  9E3D               	bcf	(___fladd@b+2)^0,7,c
  8163   001F2C                     l3451:
  8164   001F2C  90D8               	bcf	status,0,c
  8165   001F2E  3049               	rrcf	___fladd@bexp^0,w,c
  8166   001F30  6E3E               	movwf	(___fladd@b+3)^0,c
  8167   001F32  AE47               	btfss	___fladd@signs^0,7,c
  8168   001F34  EF9E  F00F         	goto	u2821
  8169   001F38  EFA0  F00F         	goto	u2820
  8170   001F3C                     u2821:
  8171   001F3C  EFA1  F00F         	goto	l3457
  8172   001F40                     u2820:
  8173   001F40  8E3E               	bsf	(___fladd@b+3)^0,7,c
  8174   001F42                     l3457:
  8175   001F42  C03B  F03B         	movff	___fladd@b,?___fladd
  8176   001F46  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  8177   001F4A  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  8178   001F4E  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  8179   001F52                     l1242:
  8180   001F52  0012               	return		;funcret
  8181   001F54                     __end_of___fladd:
  8182                           	callstack 0
  8183                           
  8184 ;; *************** function _Yellow_rev1_R90 *****************
  8185 ;; Defined at:
  8186 ;;		line 266 in file "dc_motor.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8189 ;;		 -> motorL(9), 
  8190 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8191 ;;		 -> motorR(9), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 5
  8210 ;; This function calls:
  8211 ;;		_Left45
  8212 ;;		_Right45
  8213 ;;		_fullSpeedReverse
  8214 ;;		_reverseHalfSquare
  8215 ;; This function is called by:
  8216 ;;		_Colour2Action
  8217 ;;		_White
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text36
  8222   00374E                     __ptext36:
  8223                           	callstack 0
  8224   00374E                     _Yellow_rev1_R90:
  8225                           	callstack 24
  8226   00374E                     
  8227                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  8228   00374E  0100               	movlb	0	; () banked
  8229   003750  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8230   003752  B4D8               	btfsc	status,2,c
  8231   003754  EFAE  F01B         	goto	u2391
  8232   003758  EFB0  F01B         	goto	u2390
  8233   00375C                     u2391:
  8234   00375C  EFE6  F01B         	goto	l3203
  8235   003760                     u2390:
  8236   003760                     
  8237                           ; BSR set to: 0
  8238                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  8239   003760  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  8240   003764  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  8241   003768  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  8242   00376C  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  8243   003770  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8244                           
  8245                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  8246   003774  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  8247   003778  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  8248   00377C  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  8249   003780  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  8250   003784  EC7B  F01F         	call	_fullSpeedReverse	;wreg free
  8251   003788                     
  8252                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8253   003788  0E41               	movlw	65
  8254   00378A  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  8255   00378C  0EF0               	movlw	240
  8256   00378E  6E25               	movwf	??_Yellow_rev1_R90^0,c
  8257   003790  0E33               	movlw	51
  8258   003792                     u3857:
  8259   003792  2EE8               	decfsz	wreg,f,c
  8260   003794  D7FE               	bra	u3857
  8261   003796  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  8262   003798  D7FC               	bra	u3857
  8263   00379A  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  8264   00379C  D7FA               	bra	u3857
  8265   00379E  F000               	nop	
  8266   0037A0                     
  8267                           ;dc_motor.c: 274:         Right45(mL,mR);
  8268   0037A0  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8269   0037A4  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8270   0037A8  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8271   0037AC  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8272   0037B0  ECB4  F01E         	call	_Right45	;wreg free
  8273   0037B4                     
  8274                           ;dc_motor.c: 275:         Right45(mL,mR);
  8275   0037B4  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8276   0037B8  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8277   0037BC  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8278   0037C0  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8279   0037C4  ECB4  F01E         	call	_Right45	;wreg free
  8280                           
  8281                           ;dc_motor.c: 276:     }
  8282   0037C8  EFFA  F01B         	goto	l546
  8283   0037CC                     l3203:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;dc_motor.c: 280:         Left45(mL,mR);
  8287   0037CC  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8288   0037D0  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8289   0037D4  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8290   0037D8  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8291   0037DC  EC6F  F01E         	call	_Left45	;wreg free
  8292                           
  8293                           ;dc_motor.c: 281:         Left45(mL,mR);
  8294   0037E0  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8295   0037E4  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8296   0037E8  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8297   0037EC  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8298   0037F0  EC6F  F01E         	call	_Left45	;wreg free
  8299   0037F4                     l546:
  8300   0037F4  0012               	return		;funcret
  8301   0037F6                     __end_of_Yellow_rev1_R90:
  8302                           	callstack 0
  8303                           
  8304 ;; *************** function _TimerReset *****************
  8305 ;; Defined at:
  8306 ;;		line 23 in file "timer.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used: 1
  8326 ;; Hardware stack levels required when called: 1
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;;		_White
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text37
  8336   0045CE                     __ptext37:
  8337                           	callstack 0
  8338   0045CE                     _TimerReset:
  8339                           	callstack 29
  8340   0045CE                     
  8341                           ;timer.c: 25:     TMR0L = 0;
  8342   0045CE  0E00               	movlw	0
  8343   0045D0  6ED3               	movwf	211,c	;volatile
  8344                           
  8345                           ;timer.c: 26:     TMR0H = 0;
  8346   0045D2  0E00               	movlw	0
  8347   0045D4  6ED4               	movwf	212,c	;volatile
  8348   0045D6  0012               	return		;funcret
  8349   0045D8                     __end_of_TimerReset:
  8350                           	callstack 0
  8351                           
  8352 ;; *************** function _Red_R90 *****************
  8353 ;; Defined at:
  8354 ;;		line 226 in file "dc_motor.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8357 ;;		 -> motorL(9), 
  8358 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8359 ;;		 -> motorR(9), 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;		None
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  1    wreg      void 
  8364 ;; Registers used:
  8365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8375 ;;Total ram usage:        4 bytes
  8376 ;; Hardware stack levels used: 1
  8377 ;; Hardware stack levels required when called: 5
  8378 ;; This function calls:
  8379 ;;		_Left45
  8380 ;;		_Right45
  8381 ;;		_reverseHalfSquare
  8382 ;; This function is called by:
  8383 ;;		_Colour2Action
  8384 ;;		_White
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text38
  8389   003F76                     __ptext38:
  8390                           	callstack 0
  8391   003F76                     _Red_R90:
  8392                           	callstack 23
  8393   003F76                     
  8394                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  8395   003F76  0100               	movlb	0	; () banked
  8396   003F78  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8397   003F7A  B4D8               	btfsc	status,2,c
  8398   003F7C  EFC2  F01F         	goto	u2361
  8399   003F80  EFC4  F01F         	goto	u2360
  8400   003F84                     u2361:
  8401   003F84  EFE4  F01F         	goto	l3179
  8402   003F88                     u2360:
  8403   003F88                     
  8404                           ; BSR set to: 0
  8405                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  8406   003F88  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  8407   003F8C  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  8408   003F90  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  8409   003F94  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  8410   003F98  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8411                           
  8412                           ;dc_motor.c: 230:         Right45(mL,mR);
  8413   003F9C  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8414   003FA0  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8415   003FA4  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8416   003FA8  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8417   003FAC  ECB4  F01E         	call	_Right45	;wreg free
  8418                           
  8419                           ;dc_motor.c: 231:         Right45(mL,mR);
  8420   003FB0  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8421   003FB4  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8422   003FB8  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8423   003FBC  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8424   003FC0  ECB4  F01E         	call	_Right45	;wreg free
  8425                           
  8426                           ;dc_motor.c: 232:     }
  8427   003FC4  EFF8  F01F         	goto	l531
  8428   003FC8                     l3179:
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;dc_motor.c: 235:         Left45(mL,mR);
  8432   003FC8  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8433   003FCC  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8434   003FD0  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8435   003FD4  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8436   003FD8  EC6F  F01E         	call	_Left45	;wreg free
  8437                           
  8438                           ;dc_motor.c: 236:         Left45(mL,mR);
  8439   003FDC  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8440   003FE0  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8441   003FE4  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8442   003FE8  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8443   003FEC  EC6F  F01E         	call	_Left45	;wreg free
  8444   003FF0                     l531:
  8445   003FF0  0012               	return		;funcret
  8446   003FF2                     __end_of_Red_R90:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _Pink_rev1_L90 *****************
  8450 ;; Defined at:
  8451 ;;		line 284 in file "dc_motor.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8454 ;;		 -> motorL(9), 
  8455 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8456 ;;		 -> motorR(9), 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;Total ram usage:        6 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 5
  8475 ;; This function calls:
  8476 ;;		_Left45
  8477 ;;		_Right45
  8478 ;;		_fullSpeedReverse
  8479 ;;		_reverseHalfSquare
  8480 ;; This function is called by:
  8481 ;;		_Colour2Action
  8482 ;;		_White
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text39
  8487   0037F6                     __ptext39:
  8488                           	callstack 0
  8489   0037F6                     _Pink_rev1_L90:
  8490                           	callstack 23
  8491   0037F6                     
  8492                           ;dc_motor.c: 284: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 285: {;dc_motor.c: 286:     if (ForwardFlag){
  8493   0037F6  0100               	movlb	0	; () banked
  8494   0037F8  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8495   0037FA  B4D8               	btfsc	status,2,c
  8496   0037FC  EF02  F01C         	goto	u2401
  8497   003800  EF04  F01C         	goto	u2400
  8498   003804                     u2401:
  8499   003804  EF3A  F01C         	goto	l3215
  8500   003808                     u2400:
  8501   003808                     
  8502                           ; BSR set to: 0
  8503                           ;dc_motor.c: 287:         reverseHalfSquare(mL,mR);
  8504   003808  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  8505   00380C  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  8506   003810  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  8507   003814  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  8508   003818  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8509                           
  8510                           ;dc_motor.c: 289:         fullSpeedReverse(mL,mR);
  8511   00381C  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  8512   003820  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  8513   003824  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  8514   003828  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  8515   00382C  EC7B  F01F         	call	_fullSpeedReverse	;wreg free
  8516   003830                     
  8517                           ;dc_motor.c: 290:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8518   003830  0E41               	movlw	65
  8519   003832  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  8520   003834  0EF0               	movlw	240
  8521   003836  6E25               	movwf	??_Pink_rev1_L90^0,c
  8522   003838  0E33               	movlw	51
  8523   00383A                     u3867:
  8524   00383A  2EE8               	decfsz	wreg,f,c
  8525   00383C  D7FE               	bra	u3867
  8526   00383E  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  8527   003840  D7FC               	bra	u3867
  8528   003842  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  8529   003844  D7FA               	bra	u3867
  8530   003846  F000               	nop	
  8531   003848                     
  8532                           ;dc_motor.c: 291:         Left45(mL,mR);
  8533   003848  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8534   00384C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8535   003850  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8536   003854  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8537   003858  EC6F  F01E         	call	_Left45	;wreg free
  8538   00385C                     
  8539                           ;dc_motor.c: 292:         Left45(mL,mR);
  8540   00385C  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8541   003860  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8542   003864  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8543   003868  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8544   00386C  EC6F  F01E         	call	_Left45	;wreg free
  8545                           
  8546                           ;dc_motor.c: 293:     }
  8547   003870  EF4E  F01C         	goto	l551
  8548   003874                     l3215:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;dc_motor.c: 296:         Right45(mL,mR);
  8552   003874  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8553   003878  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8554   00387C  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8555   003880  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8556   003884  ECB4  F01E         	call	_Right45	;wreg free
  8557                           
  8558                           ;dc_motor.c: 297:         Right45(mL,mR);
  8559   003888  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8560   00388C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8561   003890  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8562   003894  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8563   003898  ECB4  F01E         	call	_Right45	;wreg free
  8564   00389C                     l551:
  8565   00389C  0012               	return		;funcret
  8566   00389E                     __end_of_Pink_rev1_L90:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _Orange_R135 *****************
  8570 ;; Defined at:
  8571 ;;		line 300 in file "dc_motor.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8574 ;;		 -> motorL(9), 
  8575 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8576 ;;		 -> motorR(9), 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;Total ram usage:        4 bytes
  8593 ;; Hardware stack levels used: 1
  8594 ;; Hardware stack levels required when called: 5
  8595 ;; This function calls:
  8596 ;;		_Left45
  8597 ;;		_Right45
  8598 ;;		_reverseHalfSquare
  8599 ;; This function is called by:
  8600 ;;		_Colour2Action
  8601 ;;		_White
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text40
  8606   003944                     __ptext40:
  8607                           	callstack 0
  8608   003944                     _Orange_R135:
  8609                           	callstack 23
  8610   003944                     
  8611                           ;dc_motor.c: 300: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           301: {;dc_motor.c: 302:     if (ForwardFlag){
  8612   003944  0100               	movlb	0	; () banked
  8613   003946  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8614   003948  B4D8               	btfsc	status,2,c
  8615   00394A  EFA9  F01C         	goto	u2411
  8616   00394E  EFAB  F01C         	goto	u2410
  8617   003952                     u2411:
  8618   003952  EFD5  F01C         	goto	l3221
  8619   003956                     u2410:
  8620   003956                     
  8621                           ; BSR set to: 0
  8622                           ;dc_motor.c: 303:         reverseHalfSquare(mL,mR);
  8623   003956  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  8624   00395A  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  8625   00395E  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  8626   003962  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  8627   003966  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8628                           
  8629                           ;dc_motor.c: 305:         Right45(mL,mR);
  8630   00396A  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8631   00396E  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8632   003972  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8633   003976  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8634   00397A  ECB4  F01E         	call	_Right45	;wreg free
  8635                           
  8636                           ;dc_motor.c: 306:         Right45(mL,mR);
  8637   00397E  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8638   003982  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8639   003986  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8640   00398A  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8641   00398E  ECB4  F01E         	call	_Right45	;wreg free
  8642                           
  8643                           ;dc_motor.c: 307:         Right45(mL,mR);
  8644   003992  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8645   003996  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8646   00399A  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8647   00399E  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8648   0039A2  ECB4  F01E         	call	_Right45	;wreg free
  8649                           
  8650                           ;dc_motor.c: 308:     }
  8651   0039A6  EFF3  F01C         	goto	l556
  8652   0039AA                     l3221:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;dc_motor.c: 311:         Left45(mL,mR);
  8656   0039AA  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8657   0039AE  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8658   0039B2  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8659   0039B6  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8660   0039BA  EC6F  F01E         	call	_Left45	;wreg free
  8661                           
  8662                           ;dc_motor.c: 312:         Left45(mL,mR);
  8663   0039BE  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8664   0039C2  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8665   0039C6  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8666   0039CA  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8667   0039CE  EC6F  F01E         	call	_Left45	;wreg free
  8668                           
  8669                           ;dc_motor.c: 313:         Left45(mL,mR);
  8670   0039D2  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8671   0039D6  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8672   0039DA  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8673   0039DE  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8674   0039E2  EC6F  F01E         	call	_Left45	;wreg free
  8675   0039E6                     l556:
  8676   0039E6  0012               	return		;funcret
  8677   0039E8                     __end_of_Orange_R135:
  8678                           	callstack 0
  8679                           
  8680 ;; *************** function _LightBlue_L135 *****************
  8681 ;; Defined at:
  8682 ;;		line 316 in file "dc_motor.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8685 ;;		 -> motorL(9), 
  8686 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8687 ;;		 -> motorR(9), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8703 ;;Total ram usage:        4 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 5
  8706 ;; This function calls:
  8707 ;;		_Left45
  8708 ;;		_Right45
  8709 ;;		_reverseHalfSquare
  8710 ;; This function is called by:
  8711 ;;		_Colour2Action
  8712 ;;		_White
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text41
  8717   0039E8                     __ptext41:
  8718                           	callstack 0
  8719   0039E8                     _LightBlue_L135:
  8720                           	callstack 23
  8721   0039E8                     
  8722                           ;dc_motor.c: 316: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 317: {;dc_motor.c: 319:      if (ForwardFlag){
  8723   0039E8  0100               	movlb	0	; () banked
  8724   0039EA  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8725   0039EC  B4D8               	btfsc	status,2,c
  8726   0039EE  EFFB  F01C         	goto	u2421
  8727   0039F2  EFFD  F01C         	goto	u2420
  8728   0039F6                     u2421:
  8729   0039F6  EF27  F01D         	goto	l3227
  8730   0039FA                     u2420:
  8731   0039FA                     
  8732                           ; BSR set to: 0
  8733                           ;dc_motor.c: 320:         reverseHalfSquare(mL,mR);
  8734   0039FA  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  8735   0039FE  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  8736   003A02  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  8737   003A06  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  8738   003A0A  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8739                           
  8740                           ;dc_motor.c: 322:         Left45(mL,mR);
  8741   003A0E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8742   003A12  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8743   003A16  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8744   003A1A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8745   003A1E  EC6F  F01E         	call	_Left45	;wreg free
  8746                           
  8747                           ;dc_motor.c: 323:         Left45(mL,mR);
  8748   003A22  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8749   003A26  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8750   003A2A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8751   003A2E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8752   003A32  EC6F  F01E         	call	_Left45	;wreg free
  8753                           
  8754                           ;dc_motor.c: 324:         Left45(mL,mR);
  8755   003A36  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8756   003A3A  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8757   003A3E  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8758   003A42  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8759   003A46  EC6F  F01E         	call	_Left45	;wreg free
  8760                           
  8761                           ;dc_motor.c: 326:     }
  8762   003A4A  EF45  F01D         	goto	l561
  8763   003A4E                     l3227:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;dc_motor.c: 329:         Right45(mL,mR);
  8767   003A4E  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8768   003A52  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8769   003A56  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8770   003A5A  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8771   003A5E  ECB4  F01E         	call	_Right45	;wreg free
  8772                           
  8773                           ;dc_motor.c: 330:         Right45(mL,mR);
  8774   003A62  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8775   003A66  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8776   003A6A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8777   003A6E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8778   003A72  ECB4  F01E         	call	_Right45	;wreg free
  8779                           
  8780                           ;dc_motor.c: 331:         Right45(mL,mR);
  8781   003A76  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8782   003A7A  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8783   003A7E  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8784   003A82  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8785   003A86  ECB4  F01E         	call	_Right45	;wreg free
  8786   003A8A                     l561:
  8787   003A8A  0012               	return		;funcret
  8788   003A8C                     __end_of_LightBlue_L135:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function _Green_L90 *****************
  8792 ;; Defined at:
  8793 ;;		line 240 in file "dc_motor.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8796 ;;		 -> motorL(9), 
  8797 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8798 ;;		 -> motorR(9), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;Total ram usage:        4 bytes
  8815 ;; Hardware stack levels used: 1
  8816 ;; Hardware stack levels required when called: 5
  8817 ;; This function calls:
  8818 ;;		_Left45
  8819 ;;		_Right45
  8820 ;;		_reverseHalfSquare
  8821 ;; This function is called by:
  8822 ;;		_Colour2Action
  8823 ;;		_White
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text42
  8828   003FF2                     __ptext42:
  8829                           	callstack 0
  8830   003FF2                     _Green_L90:
  8831                           	callstack 23
  8832   003FF2                     
  8833                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  8834   003FF2  0100               	movlb	0	; () banked
  8835   003FF4  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8836   003FF6  B4D8               	btfsc	status,2,c
  8837   003FF8  EF00  F020         	goto	u2371
  8838   003FFC  EF02  F020         	goto	u2370
  8839   004000                     u2371:
  8840   004000  EF22  F020         	goto	l3185
  8841   004004                     u2370:
  8842   004004                     
  8843                           ; BSR set to: 0
  8844                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  8845   004004  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  8846   004008  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  8847   00400C  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  8848   004010  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  8849   004014  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  8850                           
  8851                           ;dc_motor.c: 245:         Left45(mL,mR);
  8852   004018  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8853   00401C  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8854   004020  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8855   004024  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8856   004028  EC6F  F01E         	call	_Left45	;wreg free
  8857                           
  8858                           ;dc_motor.c: 246:         Left45(mL,mR);
  8859   00402C  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8860   004030  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8861   004034  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8862   004038  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8863   00403C  EC6F  F01E         	call	_Left45	;wreg free
  8864                           
  8865                           ;dc_motor.c: 247:     }
  8866   004040  EF36  F020         	goto	l536
  8867   004044                     l3185:
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;dc_motor.c: 250:         Right45(mL,mR);
  8871   004044  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8872   004048  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8873   00404C  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8874   004050  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8875   004054  ECB4  F01E         	call	_Right45	;wreg free
  8876                           
  8877                           ;dc_motor.c: 251:         Right45(mL,mR);
  8878   004058  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8879   00405C  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8880   004060  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8881   004064  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8882   004068  ECB4  F01E         	call	_Right45	;wreg free
  8883   00406C                     l536:
  8884   00406C  0012               	return		;funcret
  8885   00406E                     __end_of_Green_L90:
  8886                           	callstack 0
  8887                           
  8888 ;; *************** function _Right45 *****************
  8889 ;; Defined at:
  8890 ;;		line 193 in file "dc_motor.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8893 ;;		 -> motorL(9), 
  8894 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8895 ;;		 -> motorR(9), 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;Total ram usage:        6 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 4
  8914 ;; This function calls:
  8915 ;;		_stop
  8916 ;;		_turnRight
  8917 ;; This function is called by:
  8918 ;;		_Red_R90
  8919 ;;		_Green_L90
  8920 ;;		_Yellow_rev1_R90
  8921 ;;		_Pink_rev1_L90
  8922 ;;		_Orange_R135
  8923 ;;		_LightBlue_L135
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text43
  8928   003D68                     __ptext43:
  8929                           	callstack 0
  8930   003D68                     _Right45:
  8931                           	callstack 24
  8932   003D68                     
  8933                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  8934   003D68  8080               	bsf	128,0,c	;volatile
  8935   003D6A                     
  8936                           ;dc_motor.c: 197:     stop(mL,mR);
  8937   003D6A  C01A  F014         	movff	Right45@mL,stop@mL
  8938   003D6E  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8939   003D72  C01C  F016         	movff	Right45@mR,stop@mR
  8940   003D76  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8941   003D7A  EC4F  F01C         	call	_stop	;wreg free
  8942   003D7E                     
  8943                           ;dc_motor.c: 198:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8944   003D7E  0E09               	movlw	9
  8945   003D80  6E1F               	movwf	(??_Right45+1)^0,c
  8946   003D82  0E1E               	movlw	30
  8947   003D84  6E1E               	movwf	??_Right45^0,c
  8948   003D86  0EE4               	movlw	228
  8949   003D88                     u3877:
  8950   003D88  2EE8               	decfsz	wreg,f,c
  8951   003D8A  D7FE               	bra	u3877
  8952   003D8C  2E1E               	decfsz	??_Right45^0,f,c
  8953   003D8E  D7FC               	bra	u3877
  8954   003D90  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8955   003D92  D7FA               	bra	u3877
  8956   003D94  D000               	nop2	
  8957   003D96                     
  8958                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8959   003D96  C01A  F014         	movff	Right45@mL,turnRight@mL
  8960   003D9A  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8961   003D9E  C01C  F016         	movff	Right45@mR,turnRight@mR
  8962   003DA2  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8963   003DA6  EC91  F01D         	call	_turnRight	;wreg free
  8964                           
  8965                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8966   003DAA  0E0C               	movlw	12
  8967   003DAC  6E1F               	movwf	(??_Right45+1)^0,c
  8968   003DAE  0EEF               	movlw	239
  8969   003DB0  6E1E               	movwf	??_Right45^0,c
  8970   003DB2  0E82               	movlw	130
  8971   003DB4                     u3887:
  8972   003DB4  2EE8               	decfsz	wreg,f,c
  8973   003DB6  D7FE               	bra	u3887
  8974   003DB8  2E1E               	decfsz	??_Right45^0,f,c
  8975   003DBA  D7FC               	bra	u3887
  8976   003DBC  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8977   003DBE  D7FA               	bra	u3887
  8978   003DC0                     
  8979                           ;dc_motor.c: 201:     stop(mL,mR);
  8980   003DC0  C01A  F014         	movff	Right45@mL,stop@mL
  8981   003DC4  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8982   003DC8  C01C  F016         	movff	Right45@mR,stop@mR
  8983   003DCC  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8984   003DD0  EC4F  F01C         	call	_stop	;wreg free
  8985   003DD4                     
  8986                           ;dc_motor.c: 202:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8987   003DD4  0E09               	movlw	9
  8988   003DD6  6E1F               	movwf	(??_Right45+1)^0,c
  8989   003DD8  0E1E               	movlw	30
  8990   003DDA  6E1E               	movwf	??_Right45^0,c
  8991   003DDC  0EE4               	movlw	228
  8992   003DDE                     u3897:
  8993   003DDE  2EE8               	decfsz	wreg,f,c
  8994   003DE0  D7FE               	bra	u3897
  8995   003DE2  2E1E               	decfsz	??_Right45^0,f,c
  8996   003DE4  D7FC               	bra	u3897
  8997   003DE6  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8998   003DE8  D7FA               	bra	u3897
  8999   003DEA  D000               	nop2	
  9000   003DEC                     
  9001                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  9002   003DEC  9080               	bcf	128,0,c	;volatile
  9003   003DEE  0012               	return		;funcret
  9004   003DF0                     __end_of_Right45:
  9005                           	callstack 0
  9006                           
  9007 ;; *************** function _turnRight *****************
  9008 ;; Defined at:
  9009 ;;		line 132 in file "dc_motor.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9012 ;;		 -> motorL(9), 
  9013 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9014 ;;		 -> motorR(9), 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  i               2   23[COMRAM] unsigned int 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;Total ram usage:        6 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 3
  9033 ;; This function calls:
  9034 ;;		_setMotorPWM
  9035 ;; This function is called by:
  9036 ;;		_Right45
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text44
  9041   003B22                     __ptext44:
  9042                           	callstack 0
  9043   003B22                     _turnRight:
  9044                           	callstack 24
  9045   003B22                     
  9046                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  9047   003B22  EE20 F001          	lfsr	2,1
  9048   003B26  5014               	movf	turnRight@mL^0,w,c
  9049   003B28  26D9               	addwf	fsr2l,f,c
  9050   003B2A  5015               	movf	(turnRight@mL+1)^0,w,c
  9051   003B2C  22DA               	addwfc	fsr2h,f,c
  9052   003B2E  0E01               	movlw	1
  9053   003B30  6EDF               	movwf	indf2,c
  9054                           
  9055                           ;dc_motor.c: 135:     (mR->direction) = 0;
  9056   003B32  EE20 F001          	lfsr	2,1
  9057   003B36  5016               	movf	turnRight@mR^0,w,c
  9058   003B38  26D9               	addwf	fsr2l,f,c
  9059   003B3A  5017               	movf	(turnRight@mR+1)^0,w,c
  9060   003B3C  22DA               	addwfc	fsr2h,f,c
  9061   003B3E  0E00               	movlw	0
  9062   003B40  6EDF               	movwf	indf2,c
  9063   003B42                     
  9064                           ;dc_motor.c: 136:     setMotorPWM(mL);
  9065   003B42  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9066   003B46  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9067   003B4A  EC97  F019         	call	_setMotorPWM	;wreg free
  9068   003B4E                     
  9069                           ;dc_motor.c: 137:     setMotorPWM(mR);
  9070   003B4E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9071   003B52  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9072   003B56  EC97  F019         	call	_setMotorPWM	;wreg free
  9073   003B5A                     
  9074                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  9075   003B5A  0E00               	movlw	0
  9076   003B5C  6E19               	movwf	(turnRight@i+1)^0,c
  9077   003B5E  0E00               	movlw	0
  9078   003B60  6E18               	movwf	turnRight@i^0,c
  9079   003B62                     l2893:
  9080                           
  9081                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  9082   003B62  C014  FFD9         	movff	turnRight@mL,fsr2l
  9083   003B66  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9084   003B6A  2ADF               	incf	indf2,f,c
  9085                           
  9086                           ;dc_motor.c: 141:         mR->power++;
  9087   003B6C  C016  FFD9         	movff	turnRight@mR,fsr2l
  9088   003B70  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9089   003B74  2ADF               	incf	indf2,f,c
  9090   003B76                     
  9091                           ;dc_motor.c: 142:         setMotorPWM(mL);
  9092   003B76  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9093   003B7A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9094   003B7E  EC97  F019         	call	_setMotorPWM	;wreg free
  9095   003B82                     
  9096                           ;dc_motor.c: 143:         setMotorPWM(mR);
  9097   003B82  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9098   003B86  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9099   003B8A  EC97  F019         	call	_setMotorPWM	;wreg free
  9100   003B8E                     
  9101                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9102   003B8E  0EE4               	movlw	228
  9103   003B90                     u3907:
  9104   003B90  D000               	nop2	
  9105   003B92  D000               	nop2	
  9106   003B94  2EE8               	decfsz	wreg,f,c
  9107   003B96  D7FC               	bra	u3907
  9108   003B98  D000               	nop2	
  9109   003B9A  D000               	nop2	
  9110   003B9C                     
  9111                           ;dc_motor.c: 145:     }
  9112   003B9C  4A18               	infsnz	turnRight@i^0,f,c
  9113   003B9E  2A19               	incf	(turnRight@i+1)^0,f,c
  9114   003BA0  5019               	movf	(turnRight@i+1)^0,w,c
  9115   003BA2  E109               	bnz	u2010
  9116   003BA4  0E32               	movlw	50
  9117   003BA6  5C18               	subwf	turnRight@i^0,w,c
  9118   003BA8  A0D8               	btfss	status,0,c
  9119   003BAA  EFD9  F01D         	goto	u2011
  9120   003BAE  EFDB  F01D         	goto	u2010
  9121   003BB2                     u2011:
  9122   003BB2  EFB1  F01D         	goto	l2893
  9123   003BB6                     u2010:
  9124   003BB6  0012               	return		;funcret
  9125   003BB8                     __end_of_turnRight:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function _Blue_T180 *****************
  9129 ;; Defined at:
  9130 ;;		line 255 in file "dc_motor.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  9133 ;;		 -> motorL(9), 
  9134 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  9135 ;;		 -> motorR(9), 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      void 
  9140 ;; Registers used:
  9141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;Total ram usage:        4 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 6
  9154 ;; This function calls:
  9155 ;;		_reverseHalfSquare
  9156 ;;		_rotate180left
  9157 ;; This function is called by:
  9158 ;;		_Colour2Action
  9159 ;;		_White
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text45
  9164   004144                     __ptext45:
  9165                           	callstack 0
  9166   004144                     _Blue_T180:
  9167                           	callstack 22
  9168   004144                     
  9169                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  9170   004144  0100               	movlb	0	; () banked
  9171   004146  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  9172   004148  B4D8               	btfsc	status,2,c
  9173   00414A  EFA9  F020         	goto	u2381
  9174   00414E  EFAB  F020         	goto	u2380
  9175   004152                     u2381:
  9176   004152  EFC1  F020         	goto	l3191
  9177   004156                     u2380:
  9178   004156                     
  9179                           ; BSR set to: 0
  9180                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  9181   004156  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  9182   00415A  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  9183   00415E  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  9184   004162  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  9185   004166  ECF8  F01E         	call	_reverseHalfSquare	;wreg free
  9186                           
  9187                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  9188   00416A  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9189   00416E  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9190   004172  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9191   004176  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9192   00417A  ECCC  F020         	call	_rotate180left	;wreg free
  9193                           
  9194                           ;dc_motor.c: 261:     }else{
  9195   00417E  EFCB  F020         	goto	l541
  9196   004182                     l3191:
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  9200   004182  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9201   004186  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9202   00418A  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9203   00418E  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9204   004192  ECCC  F020         	call	_rotate180left	;wreg free
  9205   004196                     l541:
  9206   004196  0012               	return		;funcret
  9207   004198                     __end_of_Blue_T180:
  9208                           	callstack 0
  9209                           
  9210 ;; *************** function _rotate180left *****************
  9211 ;; Defined at:
  9212 ;;		line 207 in file "dc_motor.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9215 ;;		 -> motorL(9), 
  9216 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9217 ;;		 -> motorR(9), 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;Total ram usage:        4 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 5
  9236 ;; This function calls:
  9237 ;;		_Left45
  9238 ;; This function is called by:
  9239 ;;		_Blue_T180
  9240 ;;		_White
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text46
  9245   004198                     __ptext46:
  9246                           	callstack 0
  9247   004198                     _rotate180left:
  9248                           	callstack 23
  9249   004198                     
  9250                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  9251   004198  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9252   00419C  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9253   0041A0  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9254   0041A4  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9255   0041A8  EC6F  F01E         	call	_Left45	;wreg free
  9256                           
  9257                           ;dc_motor.c: 211:     Left45(mL,mR);
  9258   0041AC  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9259   0041B0  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9260   0041B4  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9261   0041B8  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9262   0041BC  EC6F  F01E         	call	_Left45	;wreg free
  9263                           
  9264                           ;dc_motor.c: 212:     Left45(mL,mR);
  9265   0041C0  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9266   0041C4  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9267   0041C8  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9268   0041CC  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9269   0041D0  EC6F  F01E         	call	_Left45	;wreg free
  9270                           
  9271                           ;dc_motor.c: 213:     Left45(mL,mR);
  9272   0041D4  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9273   0041D8  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9274   0041DC  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9275   0041E0  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9276   0041E4  EC6F  F01E         	call	_Left45	;wreg free
  9277   0041E8  0012               	return		;funcret
  9278   0041EA                     __end_of_rotate180left:
  9279                           	callstack 0
  9280                           
  9281 ;; *************** function _Left45 *****************
  9282 ;; Defined at:
  9283 ;;		line 179 in file "dc_motor.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9286 ;;		 -> motorL(9), 
  9287 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9288 ;;		 -> motorR(9), 
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;		None
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  1    wreg      void 
  9293 ;; Registers used:
  9294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9304 ;;Total ram usage:        6 bytes
  9305 ;; Hardware stack levels used: 1
  9306 ;; Hardware stack levels required when called: 4
  9307 ;; This function calls:
  9308 ;;		_stop
  9309 ;;		_turnLeft
  9310 ;; This function is called by:
  9311 ;;		_rotate180left
  9312 ;;		_Red_R90
  9313 ;;		_Green_L90
  9314 ;;		_Yellow_rev1_R90
  9315 ;;		_Pink_rev1_L90
  9316 ;;		_Orange_R135
  9317 ;;		_LightBlue_L135
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text47
  9322   003CDE                     __ptext47:
  9323                           	callstack 0
  9324   003CDE                     _Left45:
  9325                           	callstack 24
  9326   003CDE                     
  9327                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  9328   003CDE  807E               	bsf	126,0,c	;volatile
  9329   003CE0                     
  9330                           ;dc_motor.c: 183:     stop(mL,mR);
  9331   003CE0  C01A  F014         	movff	Left45@mL,stop@mL
  9332   003CE4  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9333   003CE8  C01C  F016         	movff	Left45@mR,stop@mR
  9334   003CEC  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9335   003CF0  EC4F  F01C         	call	_stop	;wreg free
  9336   003CF4                     
  9337                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9338   003CF4  0E05               	movlw	5
  9339   003CF6  6E1F               	movwf	(??_Left45+1)^0,c
  9340   003CF8  0E0F               	movlw	15
  9341   003CFA  6E1E               	movwf	??_Left45^0,c
  9342   003CFC  0EF1               	movlw	241
  9343   003CFE                     u3917:
  9344   003CFE  2EE8               	decfsz	wreg,f,c
  9345   003D00  D7FE               	bra	u3917
  9346   003D02  2E1E               	decfsz	??_Left45^0,f,c
  9347   003D04  D7FC               	bra	u3917
  9348   003D06  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9349   003D08  D7FA               	bra	u3917
  9350   003D0A  F000               	nop	
  9351   003D0C                     
  9352                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  9353   003D0C  C01A  F014         	movff	Left45@mL,turnLeft@mL
  9354   003D10  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  9355   003D14  C01C  F016         	movff	Left45@mR,turnLeft@mR
  9356   003D18  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  9357   003D1C  ECDC  F01D         	call	_turnLeft	;wreg free
  9358                           
  9359                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  9360   003D20  0E0C               	movlw	12
  9361   003D22  6E1F               	movwf	(??_Left45+1)^0,c
  9362   003D24  0EDA               	movlw	218
  9363   003D26  6E1E               	movwf	??_Left45^0,c
  9364   003D28  0EBA               	movlw	186
  9365   003D2A                     u3927:
  9366   003D2A  2EE8               	decfsz	wreg,f,c
  9367   003D2C  D7FE               	bra	u3927
  9368   003D2E  2E1E               	decfsz	??_Left45^0,f,c
  9369   003D30  D7FC               	bra	u3927
  9370   003D32  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9371   003D34  D7FA               	bra	u3927
  9372   003D36  D000               	nop2	
  9373   003D38                     
  9374                           ;dc_motor.c: 187:     stop(mL,mR);
  9375   003D38  C01A  F014         	movff	Left45@mL,stop@mL
  9376   003D3C  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9377   003D40  C01C  F016         	movff	Left45@mR,stop@mR
  9378   003D44  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9379   003D48  EC4F  F01C         	call	_stop	;wreg free
  9380   003D4C                     
  9381                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9382   003D4C  0E05               	movlw	5
  9383   003D4E  6E1F               	movwf	(??_Left45+1)^0,c
  9384   003D50  0E0F               	movlw	15
  9385   003D52  6E1E               	movwf	??_Left45^0,c
  9386   003D54  0EF1               	movlw	241
  9387   003D56                     u3937:
  9388   003D56  2EE8               	decfsz	wreg,f,c
  9389   003D58  D7FE               	bra	u3937
  9390   003D5A  2E1E               	decfsz	??_Left45^0,f,c
  9391   003D5C  D7FC               	bra	u3937
  9392   003D5E  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9393   003D60  D7FA               	bra	u3937
  9394   003D62  F000               	nop	
  9395   003D64                     
  9396                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  9397   003D64  907E               	bcf	126,0,c	;volatile
  9398   003D66  0012               	return		;funcret
  9399   003D68                     __end_of_Left45:
  9400                           	callstack 0
  9401                           
  9402 ;; *************** function _turnLeft *****************
  9403 ;; Defined at:
  9404 ;;		line 113 in file "dc_motor.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9407 ;;		 -> motorL(9), 
  9408 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9409 ;;		 -> motorR(9), 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  i               2   23[COMRAM] unsigned int 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  1    wreg      void 
  9414 ;; Registers used:
  9415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;Total ram usage:        6 bytes
  9426 ;; Hardware stack levels used: 1
  9427 ;; Hardware stack levels required when called: 3
  9428 ;; This function calls:
  9429 ;;		_setMotorPWM
  9430 ;; This function is called by:
  9431 ;;		_Left45
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text48
  9436   003BB8                     __ptext48:
  9437                           	callstack 0
  9438   003BB8                     _turnLeft:
  9439                           	callstack 24
  9440   003BB8                     
  9441                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  9442   003BB8  EE20 F001          	lfsr	2,1
  9443   003BBC  5014               	movf	turnLeft@mL^0,w,c
  9444   003BBE  26D9               	addwf	fsr2l,f,c
  9445   003BC0  5015               	movf	(turnLeft@mL+1)^0,w,c
  9446   003BC2  22DA               	addwfc	fsr2h,f,c
  9447   003BC4  0E00               	movlw	0
  9448   003BC6  6EDF               	movwf	indf2,c
  9449                           
  9450                           ;dc_motor.c: 117:     (mR->direction) = 1;
  9451   003BC8  EE20 F001          	lfsr	2,1
  9452   003BCC  5016               	movf	turnLeft@mR^0,w,c
  9453   003BCE  26D9               	addwf	fsr2l,f,c
  9454   003BD0  5017               	movf	(turnLeft@mR+1)^0,w,c
  9455   003BD2  22DA               	addwfc	fsr2h,f,c
  9456   003BD4  0E01               	movlw	1
  9457   003BD6  6EDF               	movwf	indf2,c
  9458   003BD8                     
  9459                           ;dc_motor.c: 118:     setMotorPWM(mL);
  9460   003BD8  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9461   003BDC  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9462   003BE0  EC97  F019         	call	_setMotorPWM	;wreg free
  9463   003BE4                     
  9464                           ;dc_motor.c: 119:     setMotorPWM(mR);
  9465   003BE4  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9466   003BE8  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9467   003BEC  EC97  F019         	call	_setMotorPWM	;wreg free
  9468   003BF0                     
  9469                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  9470   003BF0  0E00               	movlw	0
  9471   003BF2  6E19               	movwf	(turnLeft@i+1)^0,c
  9472   003BF4  0E00               	movlw	0
  9473   003BF6  6E18               	movwf	turnLeft@i^0,c
  9474   003BF8                     l2869:
  9475                           
  9476                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  9477   003BF8  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9478   003BFC  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9479   003C00  2ADF               	incf	indf2,f,c
  9480                           
  9481                           ;dc_motor.c: 123:         mR->power++;
  9482   003C02  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9483   003C06  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9484   003C0A  2ADF               	incf	indf2,f,c
  9485   003C0C                     
  9486                           ;dc_motor.c: 124:         setMotorPWM(mL);
  9487   003C0C  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9488   003C10  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9489   003C14  EC97  F019         	call	_setMotorPWM	;wreg free
  9490   003C18                     
  9491                           ;dc_motor.c: 125:         setMotorPWM(mR);
  9492   003C18  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9493   003C1C  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9494   003C20  EC97  F019         	call	_setMotorPWM	;wreg free
  9495   003C24                     
  9496                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9497   003C24  0EE4               	movlw	228
  9498   003C26                     u3947:
  9499   003C26  D000               	nop2	
  9500   003C28  D000               	nop2	
  9501   003C2A  2EE8               	decfsz	wreg,f,c
  9502   003C2C  D7FC               	bra	u3947
  9503   003C2E  D000               	nop2	
  9504   003C30  D000               	nop2	
  9505   003C32                     
  9506                           ;dc_motor.c: 127:     }
  9507   003C32  4A18               	infsnz	turnLeft@i^0,f,c
  9508   003C34  2A19               	incf	(turnLeft@i+1)^0,f,c
  9509   003C36  5019               	movf	(turnLeft@i+1)^0,w,c
  9510   003C38  E109               	bnz	u2000
  9511   003C3A  0E32               	movlw	50
  9512   003C3C  5C18               	subwf	turnLeft@i^0,w,c
  9513   003C3E  A0D8               	btfss	status,0,c
  9514   003C40  EF24  F01E         	goto	u2001
  9515   003C44  EF26  F01E         	goto	u2000
  9516   003C48                     u2001:
  9517   003C48  EFFC  F01D         	goto	l2869
  9518   003C4C                     u2000:
  9519   003C4C  0012               	return		;funcret
  9520   003C4E                     __end_of_turnLeft:
  9521                           	callstack 0
  9522                           
  9523 ;; *************** function _reverseHalfSquare *****************
  9524 ;; Defined at:
  9525 ;;		line 216 in file "dc_motor.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  9528 ;;		 -> motorL(9), 
  9529 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  9530 ;;		 -> motorR(9), 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;Total ram usage:        6 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 4
  9549 ;; This function calls:
  9550 ;;		_fullSpeedReverse
  9551 ;;		_stop
  9552 ;; This function is called by:
  9553 ;;		_Red_R90
  9554 ;;		_Green_L90
  9555 ;;		_Blue_T180
  9556 ;;		_Yellow_rev1_R90
  9557 ;;		_Pink_rev1_L90
  9558 ;;		_Orange_R135
  9559 ;;		_LightBlue_L135
  9560 ;;		_White
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text49
  9565   003DF0                     __ptext49:
  9566                           	callstack 0
  9567   003DF0                     _reverseHalfSquare:
  9568                           	callstack 24
  9569   003DF0                     
  9570                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  9571   003DF0  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9572   003DF4  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9573   003DF8  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9574   003DFC  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9575   003E00  EC4F  F01C         	call	_stop	;wreg free
  9576   003E04                     
  9577                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9578   003E04  0E09               	movlw	9
  9579   003E06  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9580   003E08  0E1E               	movlw	30
  9581   003E0A  6E1F               	movwf	??_reverseHalfSquare^0,c
  9582   003E0C  0EE4               	movlw	228
  9583   003E0E                     u3957:
  9584   003E0E  2EE8               	decfsz	wreg,f,c
  9585   003E10  D7FE               	bra	u3957
  9586   003E12  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9587   003E14  D7FC               	bra	u3957
  9588   003E16  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9589   003E18  D7FA               	bra	u3957
  9590   003E1A  D000               	nop2	
  9591   003E1C                     
  9592                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  9593   003E1C  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  9594   003E20  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  9595   003E24  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  9596   003E28  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  9597   003E2C  EC7B  F01F         	call	_fullSpeedReverse	;wreg free
  9598                           
  9599                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  9600   003E30  0E21               	movlw	33
  9601   003E32  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9602   003E34  0E78               	movlw	120
  9603   003E36  6E1F               	movwf	??_reverseHalfSquare^0,c
  9604   003E38  0E98               	movlw	152
  9605   003E3A                     u3967:
  9606   003E3A  2EE8               	decfsz	wreg,f,c
  9607   003E3C  D7FE               	bra	u3967
  9608   003E3E  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9609   003E40  D7FC               	bra	u3967
  9610   003E42  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9611   003E44  D7FA               	bra	u3967
  9612   003E46  D000               	nop2	
  9613   003E48                     
  9614                           ;dc_motor.c: 222:     stop(mL,mR);
  9615   003E48  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9616   003E4C  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9617   003E50  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9618   003E54  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9619   003E58  EC4F  F01C         	call	_stop	;wreg free
  9620   003E5C                     
  9621                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9622   003E5C  0E09               	movlw	9
  9623   003E5E  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9624   003E60  0E1E               	movlw	30
  9625   003E62  6E1F               	movwf	??_reverseHalfSquare^0,c
  9626   003E64  0EE4               	movlw	228
  9627   003E66                     u3977:
  9628   003E66  2EE8               	decfsz	wreg,f,c
  9629   003E68  D7FE               	bra	u3977
  9630   003E6A  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9631   003E6C  D7FC               	bra	u3977
  9632   003E6E  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9633   003E70  D7FA               	bra	u3977
  9634   003E72  D000               	nop2	
  9635   003E74  0012               	return		;funcret
  9636   003E76                     __end_of_reverseHalfSquare:
  9637                           	callstack 0
  9638                           
  9639 ;; *************** function _stop *****************
  9640 ;; Defined at:
  9641 ;;		line 93 in file "dc_motor.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9644 ;;		 -> motorL(9), 
  9645 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9646 ;;		 -> motorR(9), 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9661 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9662 ;;Total ram usage:        5 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 3
  9665 ;; This function calls:
  9666 ;;		_setMotorPWM
  9667 ;; This function is called by:
  9668 ;;		_main
  9669 ;;		_Left45
  9670 ;;		_Right45
  9671 ;;		_reverseHalfSquare
  9672 ;;		_White
  9673 ;;		_maxTimeReturn
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text50
  9678   00389E                     __ptext50:
  9679                           	callstack 0
  9680   00389E                     _stop:
  9681                           	callstack 27
  9682   00389E                     
  9683                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  9684   00389E  887C               	bsf	124,4,c	;volatile
  9685                           
  9686                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  9687   0038A0  EF88  F01C         	goto	l2853
  9688   0038A4                     l2839:
  9689                           
  9690                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  9691   0038A4  C014  FFD9         	movff	stop@mL,fsr2l
  9692   0038A8  C015  FFDA         	movff	stop@mL+1,fsr2h
  9693   0038AC  50DF               	movf	indf2,w,c
  9694   0038AE  B4D8               	btfsc	status,2,c
  9695   0038B0  EF5C  F01C         	goto	u1961
  9696   0038B4  EF5E  F01C         	goto	u1960
  9697   0038B8                     u1961:
  9698   0038B8  EF63  F01C         	goto	l2843
  9699   0038BC                     u1960:
  9700   0038BC                     
  9701                           ;dc_motor.c: 100:             mL->power--;
  9702   0038BC  C014  FFD9         	movff	stop@mL,fsr2l
  9703   0038C0  C015  FFDA         	movff	stop@mL+1,fsr2h
  9704   0038C4  06DF               	decf	indf2,f,c
  9705   0038C6                     l2843:
  9706                           
  9707                           ;dc_motor.c: 102:         if ((mR->power)>0){
  9708   0038C6  C016  FFD9         	movff	stop@mR,fsr2l
  9709   0038CA  C017  FFDA         	movff	stop@mR+1,fsr2h
  9710   0038CE  50DF               	movf	indf2,w,c
  9711   0038D0  B4D8               	btfsc	status,2,c
  9712   0038D2  EF6D  F01C         	goto	u1971
  9713   0038D6  EF6F  F01C         	goto	u1970
  9714   0038DA                     u1971:
  9715   0038DA  EF74  F01C         	goto	l2847
  9716   0038DE                     u1970:
  9717   0038DE                     
  9718                           ;dc_motor.c: 103:             mR->power--;
  9719   0038DE  C016  FFD9         	movff	stop@mR,fsr2l
  9720   0038E2  C017  FFDA         	movff	stop@mR+1,fsr2h
  9721   0038E6  06DF               	decf	indf2,f,c
  9722   0038E8                     l2847:
  9723                           
  9724                           ;dc_motor.c: 105:         setMotorPWM(mL);
  9725   0038E8  C014  F00E         	movff	stop@mL,setMotorPWM@m
  9726   0038EC  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9727   0038F0  EC97  F019         	call	_setMotorPWM	;wreg free
  9728   0038F4                     
  9729                           ;dc_motor.c: 106:         setMotorPWM(mR);
  9730   0038F4  C016  F00E         	movff	stop@mR,setMotorPWM@m
  9731   0038F8  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9732   0038FC  EC97  F019         	call	_setMotorPWM	;wreg free
  9733   003900                     
  9734                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9735   003900  0E09               	movlw	9
  9736   003902  6E18               	movwf	??_stop^0,c
  9737   003904  0E4E               	movlw	78
  9738   003906                     u3987:
  9739   003906  2EE8               	decfsz	wreg,f,c
  9740   003908  D7FE               	bra	u3987
  9741   00390A  2E18               	decfsz	??_stop^0,f,c
  9742   00390C  D7FC               	bra	u3987
  9743   00390E  D000               	nop2	
  9744   003910                     l2853:
  9745                           
  9746                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  9747   003910  C014  FFD9         	movff	stop@mL,fsr2l
  9748   003914  C015  FFDA         	movff	stop@mL+1,fsr2h
  9749   003918  50DF               	movf	indf2,w,c
  9750   00391A  B4D8               	btfsc	status,2,c
  9751   00391C  EF92  F01C         	goto	u1981
  9752   003920  EF94  F01C         	goto	u1980
  9753   003924                     u1981:
  9754   003924  EFA0  F01C         	goto	l493
  9755   003928                     u1980:
  9756   003928  C016  FFD9         	movff	stop@mR,fsr2l
  9757   00392C  C017  FFDA         	movff	stop@mR+1,fsr2h
  9758   003930  50DF               	movf	indf2,w,c
  9759   003932  A4D8               	btfss	status,2,c
  9760   003934  EF9E  F01C         	goto	u1991
  9761   003938  EFA0  F01C         	goto	u1990
  9762   00393C                     u1991:
  9763   00393C  EF52  F01C         	goto	l2839
  9764   003940                     u1990:
  9765   003940                     l493:
  9766                           
  9767                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  9768   003940  987C               	bcf	124,4,c	;volatile
  9769   003942  0012               	return		;funcret
  9770   003944                     __end_of_stop:
  9771                           	callstack 0
  9772                           
  9773 ;; *************** function _fullSpeedReverse *****************
  9774 ;; Defined at:
  9775 ;;		line 163 in file "dc_motor.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9778 ;;		 -> motorL(9), 
  9779 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9780 ;;		 -> motorR(9), 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;  i               2   24[COMRAM] unsigned int 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9796 ;;Total ram usage:        7 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 3
  9799 ;; This function calls:
  9800 ;;		_setMotorPWM
  9801 ;; This function is called by:
  9802 ;;		_reverseHalfSquare
  9803 ;;		_Yellow_rev1_R90
  9804 ;;		_Pink_rev1_L90
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text51
  9809   003EF6                     __ptext51:
  9810                           	callstack 0
  9811   003EF6                     _fullSpeedReverse:
  9812                           	callstack 24
  9813   003EF6                     
  9814                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  9815   003EF6  EE20 F001          	lfsr	2,1
  9816   003EFA  5014               	movf	fullSpeedReverse@mL^0,w,c
  9817   003EFC  26D9               	addwf	fsr2l,f,c
  9818   003EFE  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9819   003F00  22DA               	addwfc	fsr2h,f,c
  9820   003F02  0E00               	movlw	0
  9821   003F04  6EDF               	movwf	indf2,c
  9822                           
  9823                           ;dc_motor.c: 166:  (mR->direction) = 0;
  9824   003F06  EE20 F001          	lfsr	2,1
  9825   003F0A  5016               	movf	fullSpeedReverse@mR^0,w,c
  9826   003F0C  26D9               	addwf	fsr2l,f,c
  9827   003F0E  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9828   003F10  22DA               	addwfc	fsr2h,f,c
  9829   003F12  0E00               	movlw	0
  9830   003F14  6EDF               	movwf	indf2,c
  9831   003F16                     
  9832                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  9833   003F16  0E00               	movlw	0
  9834   003F18  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9835   003F1A  0E00               	movlw	0
  9836   003F1C  6E19               	movwf	fullSpeedReverse@i^0,c
  9837   003F1E                     l2913:
  9838                           
  9839                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  9840   003F1E  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  9841   003F22  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  9842   003F26  2ADF               	incf	indf2,f,c
  9843                           
  9844                           ;dc_motor.c: 171:         (mR->power)++;
  9845   003F28  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  9846   003F2C  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  9847   003F30  2ADF               	incf	indf2,f,c
  9848   003F32                     
  9849                           ;dc_motor.c: 172:         setMotorPWM(mL);
  9850   003F32  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  9851   003F36  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  9852   003F3A  EC97  F019         	call	_setMotorPWM	;wreg free
  9853   003F3E                     
  9854                           ;dc_motor.c: 173:         setMotorPWM(mR);
  9855   003F3E  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  9856   003F42  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  9857   003F46  EC97  F019         	call	_setMotorPWM	;wreg free
  9858   003F4A                     
  9859                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9860   003F4A  0E09               	movlw	9
  9861   003F4C  6E18               	movwf	??_fullSpeedReverse^0,c
  9862   003F4E  0E4E               	movlw	78
  9863   003F50                     u3997:
  9864   003F50  2EE8               	decfsz	wreg,f,c
  9865   003F52  D7FE               	bra	u3997
  9866   003F54  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  9867   003F56  D7FC               	bra	u3997
  9868   003F58  D000               	nop2	
  9869   003F5A                     
  9870                           ;dc_motor.c: 175:     }
  9871   003F5A  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  9872   003F5C  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  9873   003F5E  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  9874   003F60  E109               	bnz	u2020
  9875   003F62  0E32               	movlw	50
  9876   003F64  5C19               	subwf	fullSpeedReverse@i^0,w,c
  9877   003F66  A0D8               	btfss	status,0,c
  9878   003F68  EFB8  F01F         	goto	u2021
  9879   003F6C  EFBA  F01F         	goto	u2020
  9880   003F70                     u2021:
  9881   003F70  EF8F  F01F         	goto	l2913
  9882   003F74                     u2020:
  9883   003F74  0012               	return		;funcret
  9884   003F76                     __end_of_fullSpeedReverse:
  9885                           	callstack 0
  9886                           
  9887 ;; *************** function _setMotorPWM *****************
  9888 ;; Defined at:
  9889 ;;		line 70 in file "dc_motor.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9892 ;;		 -> motorR(9), motorL(9), 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  negDuty         1   18[COMRAM] unsigned char 
  9895 ;;  posDuty         1   17[COMRAM] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;Total ram usage:        6 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 2
  9912 ;; This function calls:
  9913 ;;		___lwdiv
  9914 ;;		___wmul
  9915 ;; This function is called by:
  9916 ;;		_stop
  9917 ;;		_turnLeft
  9918 ;;		_turnRight
  9919 ;;		_fullSpeedAhead
  9920 ;;		_fullSpeedReverse
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           	psect	text52
  9925   00332E                     __ptext52:
  9926                           	callstack 0
  9927   00332E                     _setMotorPWM:
  9928                           	callstack 27
  9929   00332E                     
  9930                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  9931   00332E  EE20 F002          	lfsr	2,2
  9932   003332  500E               	movf	setMotorPWM@m^0,w,c
  9933   003334  26D9               	addwf	fsr2l,f,c
  9934   003336  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9935   003338  22DA               	addwfc	fsr2h,f,c
  9936   00333A  50DF               	movf	indf2,w,c
  9937   00333C  B4D8               	btfsc	status,2,c
  9938   00333E  EFA3  F019         	goto	u1941
  9939   003342  EFA5  F019         	goto	u1940
  9940   003346                     u1941:
  9941   003346  EFD9  F019         	goto	l2827
  9942   00334A                     u1940:
  9943   00334A                     
  9944                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9945   00334A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9946   00334E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9947   003352  50DF               	movf	indf2,w,c
  9948   003354  6E10               	movwf	??_setMotorPWM^0,c
  9949   003356  5010               	movf	??_setMotorPWM^0,w,c
  9950   003358  6E01               	movwf	___wmul@multiplier^0,c
  9951   00335A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9952   00335C  EE20 F003          	lfsr	2,3
  9953   003360  500E               	movf	setMotorPWM@m^0,w,c
  9954   003362  26D9               	addwf	fsr2l,f,c
  9955   003364  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9956   003366  22DA               	addwfc	fsr2h,f,c
  9957   003368  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9958   00336C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9959   003370  EC79  F022         	call	___wmul	;wreg free
  9960   003374  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9961   003378  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9962   00337C  0E00               	movlw	0
  9963   00337E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9964   003380  0E64               	movlw	100
  9965   003382  6E09               	movwf	___lwdiv@divisor^0,c
  9966   003384  EC37  F020         	call	___lwdiv	;wreg free
  9967   003388  EE20 F003          	lfsr	2,3
  9968   00338C  500E               	movf	setMotorPWM@m^0,w,c
  9969   00338E  26D9               	addwf	fsr2l,f,c
  9970   003390  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9971   003392  22DA               	addwfc	fsr2h,f,c
  9972   003394  50DF               	movf	indf2,w,c
  9973   003396  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9974   003398  5007               	movf	?___lwdiv^0,w,c
  9975   00339A  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9976   00339C  6E12               	movwf	setMotorPWM@posDuty^0,c
  9977   00339E                     
  9978                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9979   00339E  EE20 F003          	lfsr	2,3
  9980   0033A2  500E               	movf	setMotorPWM@m^0,w,c
  9981   0033A4  26D9               	addwf	fsr2l,f,c
  9982   0033A6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9983   0033A8  22DA               	addwfc	fsr2h,f,c
  9984   0033AA  50DF               	movf	indf2,w,c
  9985   0033AC  6E13               	movwf	setMotorPWM@negDuty^0,c
  9986                           
  9987                           ;dc_motor.c: 77:     }
  9988   0033AE  EFFC  F019         	goto	l2831
  9989   0033B2                     l2827:
  9990                           
  9991                           ;dc_motor.c: 79:         posDuty=0;
  9992   0033B2  0E00               	movlw	0
  9993   0033B4  6E12               	movwf	setMotorPWM@posDuty^0,c
  9994   0033B6                     
  9995                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9996   0033B6  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9997   0033BA  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9998   0033BE  50DF               	movf	indf2,w,c
  9999   0033C0  6E10               	movwf	??_setMotorPWM^0,c
 10000   0033C2  5010               	movf	??_setMotorPWM^0,w,c
 10001   0033C4  6E01               	movwf	___wmul@multiplier^0,c
 10002   0033C6  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10003   0033C8  EE20 F003          	lfsr	2,3
 10004   0033CC  500E               	movf	setMotorPWM@m^0,w,c
 10005   0033CE  26D9               	addwf	fsr2l,f,c
 10006   0033D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10007   0033D2  22DA               	addwfc	fsr2h,f,c
 10008   0033D4  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10009   0033D8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10010   0033DC  EC79  F022         	call	___wmul	;wreg free
 10011   0033E0  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10012   0033E4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10013   0033E8  0E00               	movlw	0
 10014   0033EA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10015   0033EC  0E64               	movlw	100
 10016   0033EE  6E09               	movwf	___lwdiv@divisor^0,c
 10017   0033F0  EC37  F020         	call	___lwdiv	;wreg free
 10018   0033F4  5007               	movf	?___lwdiv^0,w,c
 10019   0033F6  6E13               	movwf	setMotorPWM@negDuty^0,c
 10020   0033F8                     l2831:
 10021                           
 10022                           ;dc_motor.c: 83:     if (m->direction) {
 10023   0033F8  EE20 F001          	lfsr	2,1
 10024   0033FC  500E               	movf	setMotorPWM@m^0,w,c
 10025   0033FE  26D9               	addwf	fsr2l,f,c
 10026   003400  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10027   003402  22DA               	addwfc	fsr2h,f,c
 10028   003404  50DF               	movf	indf2,w,c
 10029   003406  B4D8               	btfsc	status,2,c
 10030   003408  EF08  F01A         	goto	u1951
 10031   00340C  EF0A  F01A         	goto	u1950
 10032   003410                     u1951:
 10033   003410  EF2C  F01A         	goto	l2835
 10034   003414                     u1950:
 10035   003414                     
 10036                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 10037   003414  EE20 F005          	lfsr	2,5
 10038   003418  500E               	movf	setMotorPWM@m^0,w,c
 10039   00341A  26D9               	addwf	fsr2l,f,c
 10040   00341C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10041   00341E  22DA               	addwfc	fsr2h,f,c
 10042   003420  CFDE F010          	movff	postinc2,??_setMotorPWM
 10043   003424  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10044   003428  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10045   00342C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10046   003430  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10047                           
 10048                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 10049   003434  EE20 F007          	lfsr	2,7
 10050   003438  500E               	movf	setMotorPWM@m^0,w,c
 10051   00343A  26D9               	addwf	fsr2l,f,c
 10052   00343C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10053   00343E  22DA               	addwfc	fsr2h,f,c
 10054   003440  CFDE F010          	movff	postinc2,??_setMotorPWM
 10055   003444  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10056   003448  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10057   00344C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10058   003450  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10059                           
 10060                           ;dc_motor.c: 86:     } else {
 10061   003454  EF4C  F01A         	goto	l484
 10062   003458                     l2835:
 10063                           
 10064                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 10065   003458  EE20 F005          	lfsr	2,5
 10066   00345C  500E               	movf	setMotorPWM@m^0,w,c
 10067   00345E  26D9               	addwf	fsr2l,f,c
 10068   003460  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10069   003462  22DA               	addwfc	fsr2h,f,c
 10070   003464  CFDE F010          	movff	postinc2,??_setMotorPWM
 10071   003468  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10072   00346C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10073   003470  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10074   003474  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10075                           
 10076                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 10077   003478  EE20 F007          	lfsr	2,7
 10078   00347C  500E               	movf	setMotorPWM@m^0,w,c
 10079   00347E  26D9               	addwf	fsr2l,f,c
 10080   003480  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10081   003482  22DA               	addwfc	fsr2h,f,c
 10082   003484  CFDE F010          	movff	postinc2,??_setMotorPWM
 10083   003488  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10084   00348C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10085   003490  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10086   003494  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10087   003498                     l484:
 10088   003498  0012               	return		;funcret
 10089   00349A                     __end_of_setMotorPWM:
 10090                           	callstack 0
 10091                           
 10092 ;; *************** function ___wmul *****************
 10093 ;; Defined at:
 10094 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  multiplier      2    0[COMRAM] unsigned int 
 10097 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;  product         2    4[COMRAM] unsigned int 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  2    0[COMRAM] unsigned int 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0, prodl, prodh
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10113 ;;Total ram usage:        6 bytes
 10114 ;; Hardware stack levels used: 1
 10115 ;; Hardware stack levels required when called: 1
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_setMotorPWM
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text53
 10124   0044F2                     __ptext53:
 10125                           	callstack 0
 10126   0044F2                     ___wmul:
 10127                           	callstack 27
 10128   0044F2  5001               	movf	___wmul@multiplier^0,w,c
 10129   0044F4  0203               	mulwf	___wmul@multiplicand^0,c
 10130   0044F6  CFF3 F005          	movff	prodl,___wmul@product
 10131   0044FA  CFF4 F006          	movff	prodh,___wmul@product+1
 10132   0044FE  5001               	movf	___wmul@multiplier^0,w,c
 10133   004500  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10134   004502  50F3               	movf	243,w,c
 10135   004504  2606               	addwf	(___wmul@product+1)^0,f,c
 10136   004506  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10137   004508  0203               	mulwf	___wmul@multiplicand^0,c
 10138   00450A  50F3               	movf	243,w,c
 10139   00450C  2606               	addwf	(___wmul@product+1)^0,f,c
 10140   00450E  C005  F001         	movff	___wmul@product,?___wmul
 10141   004512  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10142   004516  0012               	return		;funcret
 10143   004518                     __end_of___wmul:
 10144                           	callstack 0
 10145                           
 10146 ;; *************** function ___lwdiv *****************
 10147 ;; Defined at:
 10148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  dividend        2    6[COMRAM] unsigned int 
 10151 ;;  divisor         2    8[COMRAM] unsigned int 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  quotient        2   10[COMRAM] unsigned int 
 10154 ;;  counter         1   12[COMRAM] unsigned char 
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  2    6[COMRAM] unsigned int 
 10157 ;; Registers used:
 10158 ;;		wreg, status,2, status,0
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10168 ;;Total ram usage:        7 bytes
 10169 ;; Hardware stack levels used: 1
 10170 ;; Hardware stack levels required when called: 1
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		_setMotorPWM
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text54
 10179   00406E                     __ptext54:
 10180                           	callstack 0
 10181   00406E                     ___lwdiv:
 10182                           	callstack 27
 10183   00406E  0E00               	movlw	0
 10184   004070  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10185   004072  0E00               	movlw	0
 10186   004074  6E0B               	movwf	___lwdiv@quotient^0,c
 10187   004076  5009               	movf	___lwdiv@divisor^0,w,c
 10188   004078  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10189   00407A  B4D8               	btfsc	status,2,c
 10190   00407C  EF42  F020         	goto	u1911
 10191   004080  EF44  F020         	goto	u1910
 10192   004084                     u1911:
 10193   004084  EF6C  F020         	goto	l1196
 10194   004088                     u1910:
 10195   004088  0E01               	movlw	1
 10196   00408A  6E0D               	movwf	___lwdiv@counter^0,c
 10197   00408C  EF4C  F020         	goto	l2807
 10198   004090                     l2805:
 10199   004090  90D8               	bcf	status,0,c
 10200   004092  3609               	rlcf	___lwdiv@divisor^0,f,c
 10201   004094  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10202   004096  2A0D               	incf	___lwdiv@counter^0,f,c
 10203   004098                     l2807:
 10204   004098  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10205   00409A  EF51  F020         	goto	u1921
 10206   00409E  EF53  F020         	goto	u1920
 10207   0040A2                     u1921:
 10208   0040A2  EF48  F020         	goto	l2805
 10209   0040A6                     u1920:
 10210   0040A6                     l2809:
 10211   0040A6  90D8               	bcf	status,0,c
 10212   0040A8  360B               	rlcf	___lwdiv@quotient^0,f,c
 10213   0040AA  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10214   0040AC  5009               	movf	___lwdiv@divisor^0,w,c
 10215   0040AE  5C07               	subwf	___lwdiv@dividend^0,w,c
 10216   0040B0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10217   0040B2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10218   0040B4  A0D8               	btfss	status,0,c
 10219   0040B6  EF5F  F020         	goto	u1931
 10220   0040BA  EF61  F020         	goto	u1930
 10221   0040BE                     u1931:
 10222   0040BE  EF66  F020         	goto	l2817
 10223   0040C2                     u1930:
 10224   0040C2  5009               	movf	___lwdiv@divisor^0,w,c
 10225   0040C4  5E07               	subwf	___lwdiv@dividend^0,f,c
 10226   0040C6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10227   0040C8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10228   0040CA  800B               	bsf	___lwdiv@quotient^0,0,c
 10229   0040CC                     l2817:
 10230   0040CC  90D8               	bcf	status,0,c
 10231   0040CE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10232   0040D0  3209               	rrcf	___lwdiv@divisor^0,f,c
 10233   0040D2  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10234   0040D4  EF53  F020         	goto	l2809
 10235   0040D8                     l1196:
 10236   0040D8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10237   0040DC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10238   0040E0  0012               	return		;funcret
 10239   0040E2                     __end_of___lwdiv:
 10240                           	callstack 0
 10241                           
 10242 ;; *************** function _ClickLEDOn *****************
 10243 ;; Defined at:
 10244 ;;		line 93 in file "colorclick.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  power           1    wreg     unsigned char 
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;  power           1    0[COMRAM] unsigned char 
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  1    wreg      void 
 10251 ;; Registers used:
 10252 ;;		wreg, status,2
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10262 ;;Total ram usage:        1 bytes
 10263 ;; Hardware stack levels used: 1
 10264 ;; Hardware stack levels required when called: 1
 10265 ;; This function calls:
 10266 ;;		Nothing
 10267 ;; This function is called by:
 10268 ;;		_main
 10269 ;; This function uses a non-reentrant model
 10270 ;;
 10271                           
 10272                           	psect	text55
 10273   00443C                     __ptext55:
 10274                           	callstack 0
 10275   00443C                     _ClickLEDOn:
 10276                           	callstack 29
 10277                           
 10278                           ;incstack = 0
 10279                           ;ClickLEDOn@power stored from wreg
 10280   00443C  6E01               	movwf	ClickLEDOn@power^0,c
 10281   00443E                     
 10282                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10283   00443E  5001               	movf	ClickLEDOn@power^0,w,c
 10284   004440  B4D8               	btfsc	status,2,c
 10285   004442  EF25  F022         	goto	u3351
 10286   004446  EF27  F022         	goto	u3350
 10287   00444A                     u3351:
 10288   00444A  EF2C  F022         	goto	l3839
 10289   00444E                     u3350:
 10290   00444E                     
 10291                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10292   00444E  827F               	bsf	127,1,c	;volatile
 10293                           
 10294                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10295   004450  8879               	bsf	121,4,c	;volatile
 10296                           
 10297                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10298   004452  8E7E               	bsf	126,7,c	;volatile
 10299                           
 10300                           ;colorclick.c: 99:     }
 10301   004454  EF37  F022         	goto	l52
 10302   004458                     l3839:
 10303   004458  5001               	movf	ClickLEDOn@power^0,w,c
 10304   00445A  A4D8               	btfss	status,2,c
 10305   00445C  EF32  F022         	goto	u3361
 10306   004460  EF34  F022         	goto	u3360
 10307   004464                     u3361:
 10308   004464  EF37  F022         	goto	l52
 10309   004468                     u3360:
 10310   004468                     
 10311                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10312   004468  927F               	bcf	127,1,c	;volatile
 10313                           
 10314                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10315   00446A  9879               	bcf	121,4,c	;volatile
 10316                           
 10317                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10318   00446C  9E7E               	bcf	126,7,c	;volatile
 10319   00446E                     l52:
 10320   00446E  0012               	return		;funcret
 10321   004470                     __end_of_ClickLEDOn:
 10322                           	callstack 0
 10323                           
 10324 ;; *************** function _HighISR *****************
 10325 ;; Defined at:
 10326 ;;		line 25 in file "interrupts.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, status,2
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used: 1
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		Interrupt level 2
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           	psect	intcode
 10354   000008                     __pintcode:
 10355                           	callstack 0
 10356   000008                     _HighISR:
 10357                           	callstack 22
 10358                           
 10359                           ;incstack = 0
 10360   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10361   00000A                     
 10362                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 10363   00000A  010E               	movlb	14	; () banked
 10364   00000C  AB33               	btfss	51,5,b	;volatile
 10365   00000E  EF0B  F000         	goto	i2u377_41
 10366   000012  EF0D  F000         	goto	i2u377_40
 10367   000016                     i2u377_41:
 10368   000016  EF14  F000         	goto	i2l702
 10369   00001A                     i2u377_40:
 10370   00001A                     
 10371                           ; BSR set to: 14
 10372                           ;interrupts.c: 29:     maxTime = 1;
 10373   00001A  0E00               	movlw	0
 10374   00001C  0100               	movlb	0	; () banked
 10375   00001E  6F65               	movwf	(_maxTime+1)& (0+255),b	;volatile
 10376   000020  0E01               	movlw	1
 10377   000022  6F64               	movwf	_maxTime& (0+255),b	;volatile
 10378   000024                     
 10379                           ; BSR set to: 0
 10380                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 10381   000024  010E               	movlb	14	; () banked
 10382   000026  9B33               	bcf	51,5,b	;volatile
 10383   000028                     i2l702:
 10384                           
 10385                           ; BSR set to: 14
 10386   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10387   00002A  0011               	retfie		f
 10388   00002C                     __end_of_HighISR:
 10389                           	callstack 0
 10390                           
 10391                           	psect	rparam
 10392   000000                     
 10393                           	psect	temp
 10394   00005F                     btemp:
 10395                           	callstack 0
 10396   00005F                     	ds	1
 10397   000000                     int$flags	set	btemp
 10398   000000                     wtemp8	set	btemp+1
 10399   000000                     ttemp5	set	btemp+1
 10400   000000                     ttemp6	set	btemp+4
 10401   000000                     ttemp7	set	btemp+8
 10402                           
 10403                           	psect	idloc
 10404                           
 10405                           ;Config register IDLOC0 @ 0x200000
 10406                           ;	unspecified, using default values
 10407   200000                     	org	2097152
 10408   200000  0FFF               	dw	4095
 10409                           
 10410                           ;Config register IDLOC1 @ 0x200002
 10411                           ;	unspecified, using default values
 10412   200002                     	org	2097154
 10413   200002  0FFF               	dw	4095
 10414                           
 10415                           ;Config register IDLOC2 @ 0x200004
 10416                           ;	unspecified, using default values
 10417   200004                     	org	2097156
 10418   200004  0FFF               	dw	4095
 10419                           
 10420                           ;Config register IDLOC3 @ 0x200006
 10421                           ;	unspecified, using default values
 10422   200006                     	org	2097158
 10423   200006  0FFF               	dw	4095
 10424                           
 10425                           ;Config register IDLOC4 @ 0x200008
 10426                           ;	unspecified, using default values
 10427   200008                     	org	2097160
 10428   200008  0FFF               	dw	4095
 10429                           
 10430                           ;Config register IDLOC5 @ 0x20000A
 10431                           ;	unspecified, using default values
 10432   20000A                     	org	2097162
 10433   20000A  0FFF               	dw	4095
 10434                           
 10435                           ;Config register IDLOC6 @ 0x20000C
 10436                           ;	unspecified, using default values
 10437   20000C                     	org	2097164
 10438   20000C  0FFF               	dw	4095
 10439                           
 10440                           ;Config register IDLOC7 @ 0x20000E
 10441                           ;	unspecified, using default values
 10442   20000E                     	org	2097166
 10443   20000E  0FFF               	dw	4095
 10444                           
 10445                           	psect	config
 10446                           
 10447                           ;Config register CONFIG1L @ 0x300000
 10448                           ;	External Oscillator mode Selection bits
 10449                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10450                           ;	Power-up default value for COSC bits
 10451                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10452   300000                     	org	3145728
 10453   300000  AA                 	db	170
 10454                           
 10455                           ;Config register CONFIG1H @ 0x300001
 10456                           ;	unspecified, using default values
 10457                           ;	Clock Out Enable bit
 10458                           ;	CLKOUTEN = 0x1, unprogrammed default
 10459                           ;	Clock Switch Enable bit
 10460                           ;	CSWEN = 0x1, unprogrammed default
 10461                           ;	Fail-Safe Clock Monitor Enable bit
 10462                           ;	FCMEN = 0x1, unprogrammed default
 10463   300001                     	org	3145729
 10464   300001  FF                 	db	255
 10465                           
 10466                           ;Config register CONFIG2L @ 0x300002
 10467                           ;	unspecified, using default values
 10468                           ;	Master Clear Enable bit
 10469                           ;	MCLRE = 0x1, unprogrammed default
 10470                           ;	Power-up Timer Enable bit
 10471                           ;	PWRTE = 0x1, unprogrammed default
 10472                           ;	Low-power BOR enable bit
 10473                           ;	LPBOREN = 0x1, unprogrammed default
 10474                           ;	Brown-out Reset Enable bits
 10475                           ;	BOREN = 0x3, unprogrammed default
 10476   300002                     	org	3145730
 10477   300002  FF                 	db	255
 10478                           
 10479                           ;Config register CONFIG2H @ 0x300003
 10480                           ;	unspecified, using default values
 10481                           ;	Brown Out Reset Voltage selection bits
 10482                           ;	BORV = 0x3, unprogrammed default
 10483                           ;	ZCD Disable bit
 10484                           ;	ZCD = 0x1, unprogrammed default
 10485                           ;	PPSLOCK bit One-Way Set Enable bit
 10486                           ;	PPS1WAY = 0x1, unprogrammed default
 10487                           ;	Stack Full/Underflow Reset Enable bit
 10488                           ;	STVREN = 0x1, unprogrammed default
 10489                           ;	Debugger Enable bit
 10490                           ;	DEBUG = 0x1, unprogrammed default
 10491                           ;	Extended Instruction Set Enable bit
 10492                           ;	XINST = 0x1, unprogrammed default
 10493   300003                     	org	3145731
 10494   300003  FF                 	db	255
 10495                           
 10496                           ;Config register CONFIG3L @ 0x300004
 10497                           ;	WDT Period Select bits
 10498                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10499                           ;	WDT operating mode
 10500                           ;	WDTE = OFF, WDT Disabled
 10501   300004                     	org	3145732
 10502   300004  9F                 	db	159
 10503                           
 10504                           ;Config register CONFIG3H @ 0x300005
 10505                           ;	unspecified, using default values
 10506                           ;	WDT Window Select bits
 10507                           ;	WDTCWS = 0x7, unprogrammed default
 10508                           ;	WDT input clock selector
 10509                           ;	WDTCCS = 0x7, unprogrammed default
 10510   300005                     	org	3145733
 10511   300005  FF                 	db	255
 10512                           
 10513                           ;Config register CONFIG4L @ 0x300006
 10514                           ;	unspecified, using default values
 10515                           ;	Write Protection Block 0
 10516                           ;	WRT0 = 0x1, unprogrammed default
 10517                           ;	Write Protection Block 1
 10518                           ;	WRT1 = 0x1, unprogrammed default
 10519                           ;	Write Protection Block 2
 10520                           ;	WRT2 = 0x1, unprogrammed default
 10521                           ;	Write Protection Block 3
 10522                           ;	WRT3 = 0x1, unprogrammed default
 10523                           ;	Write Protection Block 3
 10524                           ;	WRT4 = 0x1, unprogrammed default
 10525                           ;	Write Protection Block 3
 10526                           ;	WRT5 = 0x1, unprogrammed default
 10527                           ;	Write Protection Block 3
 10528                           ;	WRT6 = 0x1, unprogrammed default
 10529                           ;	Write Protection Block 3
 10530                           ;	WRT7 = 0x1, unprogrammed default
 10531   300006                     	org	3145734
 10532   300006  FF                 	db	255
 10533                           
 10534                           ;Config register CONFIG4H @ 0x300007
 10535                           ;	unspecified, using default values
 10536                           ;	Configuration Register Write Protection bit
 10537                           ;	WRTC = 0x1, unprogrammed default
 10538                           ;	Boot Block Write Protection bit
 10539                           ;	WRTB = 0x1, unprogrammed default
 10540                           ;	Data EEPROM Write Protection bit
 10541                           ;	WRTD = 0x1, unprogrammed default
 10542                           ;	Scanner Enable bit
 10543                           ;	SCANE = 0x1, unprogrammed default
 10544                           ;	Low Voltage Programming Enable bit
 10545                           ;	LVP = 0x1, unprogrammed default
 10546   300007                     	org	3145735
 10547   300007  FF                 	db	255
 10548                           
 10549                           ;Config register CONFIG5L @ 0x300008
 10550                           ;	unspecified, using default values
 10551                           ;	UserNVM Program Memory Code Protection bit
 10552                           ;	CP = 0x1, unprogrammed default
 10553                           ;	DataNVM Memory Code Protection bit
 10554                           ;	CPD = 0x1, unprogrammed default
 10555   300008                     	org	3145736
 10556   300008  FF                 	db	255
 10557                           
 10558                           ;Config register CONFIG5H @ 0x300009
 10559                           ;	unspecified, using default values
 10560   300009                     	org	3145737
 10561   300009  FF                 	db	255
 10562                           
 10563                           ;Config register CONFIG6L @ 0x30000A
 10564                           ;	unspecified, using default values
 10565                           ;	Table Read Protection Block 0
 10566                           ;	EBTR0 = 0x1, unprogrammed default
 10567                           ;	Table Read Protection Block 1
 10568                           ;	EBTR1 = 0x1, unprogrammed default
 10569                           ;	Table Read Protection Block 2
 10570                           ;	EBTR2 = 0x1, unprogrammed default
 10571                           ;	Table Read Protection Block 3
 10572                           ;	EBTR3 = 0x1, unprogrammed default
 10573                           ;	Table Read Protection Block 4
 10574                           ;	EBTR4 = 0x1, unprogrammed default
 10575                           ;	Table Read Protection Block 5
 10576                           ;	EBTR5 = 0x1, unprogrammed default
 10577                           ;	Table Read Protection Block 6
 10578                           ;	EBTR6 = 0x1, unprogrammed default
 10579                           ;	Table Read Protection Block 7
 10580                           ;	EBTR7 = 0x1, unprogrammed default
 10581   30000A                     	org	3145738
 10582   30000A  FF                 	db	255
 10583                           
 10584                           ;Config register CONFIG6H @ 0x30000B
 10585                           ;	unspecified, using default values
 10586                           ;	Boot Block Table Read Protection bit
 10587                           ;	EBTRB = 0x1, unprogrammed default
 10588   30000B                     	org	3145739
 10589   30000B  FF                 	db	255
 10590                           tosu	equ	0xFFF
 10591                           tosh	equ	0xFFE
 10592                           tosl	equ	0xFFD
 10593                           stkptr	equ	0xFFC
 10594                           pclatu	equ	0xFFB
 10595                           pclath	equ	0xFFA
 10596                           pcl	equ	0xFF9
 10597                           tblptru	equ	0xFF8
 10598                           tblptrh	equ	0xFF7
 10599                           tblptrl	equ	0xFF6
 10600                           tablat	equ	0xFF5
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           indf0	equ	0xFEF
 10604                           postinc0	equ	0xFEE
 10605                           postdec0	equ	0xFED
 10606                           preinc0	equ	0xFEC
 10607                           plusw0	equ	0xFEB
 10608                           fsr0h	equ	0xFEA
 10609                           fsr0l	equ	0xFE9
 10610                           wreg	equ	0xFE8
 10611                           indf1	equ	0xFE7
 10612                           postinc1	equ	0xFE6
 10613                           postdec1	equ	0xFE5
 10614                           preinc1	equ	0xFE4
 10615                           plusw1	equ	0xFE3
 10616                           fsr1h	equ	0xFE2
 10617                           fsr1l	equ	0xFE1
 10618                           bsr	equ	0xFE0
 10619                           indf2	equ	0xFDF
 10620                           postinc2	equ	0xFDE
 10621                           postdec2	equ	0xFDD
 10622                           preinc2	equ	0xFDC
 10623                           plusw2	equ	0xFDB
 10624                           fsr2h	equ	0xFDA
 10625                           fsr2l	equ	0xFD9
 10626                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        11
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     44     153
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_11(CODE[43]), STR_10(CODE[43]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2836$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2836$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    White@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    Colour2Action@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    Hue2Colour@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    colour_read_all@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    colour_read_all@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S312DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S312DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_Colour2Action
    _memoryUpdateTime->___fladd
    _colour_read_all->___fldiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _Hue2Colour->___flge
    _Colour2Action->_White
    _White->___flge
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    _fullSpeedAhead->_setMotorPWM
    ___flge->___fladd
    ___fladd->_getTimerValue
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colour_read_all
    _colour_read_all->___fldiv
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  455153
                                             41 BANK0      3     3      0
                         _ClickLEDOn
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                    12     8      4    7494
                                             74 COMRAM    12     8      4
                            ___fladd
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     28    24      4    7739
                                             13 BANK0     28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   18677
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     863
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3781
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           6     2      4    4027
                                             86 COMRAM     6     2      4
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  406633
                                             90 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               20    10     10  221719
                                             86 COMRAM     4     4      0
                                              0 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fladd
                             ___flge
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4216
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1474
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2718
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    2615
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3142
                                             74 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3044
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   29535
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   26724
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   29535
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   26812
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   26812
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   26724
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    8748
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   18520
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4    9988
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9356
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8096
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    3981
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2767
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2133
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedReverse
       _reverseHalfSquare
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedReverse
         _reverseHalfSquare
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___xxtofl (ARG)
         _getTimerValue (ARG)
           ___flmul
           ___xxtofl
       ___flge
         ___fladd (ARG)
       _fullSpeedAhead
         _setMotorPWM
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
     ___flge
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___fladd
     ___fldiv
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllhh       52      0       0      42        0.0%
BITBIGSFRllhllh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRlllllh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllh      17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRlllllh      5      0       0      53        0.0%
BITBIGSFRhhlll       5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRlllllh      3      0       0      52        0.0%
BITBIGSFRllhlh       2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      51        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      62        0.0%
DATA                 0      0     147       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 19:43:48 2023

                    _color_read_Red 41EA                        ___fldiv@aexp 00CE  
                      ___fldiv@bexp 00CD                        ___fldiv@sign 00C6  
                   _color_read_Blue 42DA                                  l31 443A  
                                l40 4288                                  l34 457C  
                                l43 4328                                  l52 446E  
                                l37 4238                                  l46 42D8  
                   ??_getTimerValue 0037                 ___wmul@multiplicand 0003  
                    ?_rotate180left 0020                    _color_read_Clear 428A  
                  _color_read_Green 423A                   ??_Interrupts_init 0001  
                       Green_L90@mL 0021                         Green_L90@mR 0023  
                               l202 45B8                                 l115 10C4  
                               l123 1590                                 l211 43FA  
                               l205 45C2                                 l109 2DB2  
                               l310 2FC2                                 l144 1A92  
                               l208 4596                                 l163 3178  
                               l190 44C8                                 l504 3BB6  
                               l520 3DEE                                 l193 44CA  
                               l514 3F74                                 l523 41E8  
                               l531 3FF0                                 l347 455C  
                               l196 44F0                                 l517 3D66  
                               l541 4196                                 l509 3EF4  
                               l526 3E74                                 l630 449E  
                               l551 389C                                 l199 45CC  
                               l536 406C                                 l296 2E28  
                               l705 4516                                 l561 3A8A  
                               l633 3B20                                 l546 37F4  
                               l386 458A                                 l484 3498  
                               l556 39E6                                 l652 45D6  
                               l493 3940                                 l477 3CDC  
                               l494 3942                                 l566 1FC2  
                               l655 4142                                 l593 23BC  
                               l577 21CA                                 l649 453A  
                               l499 3C4C                                 l696 45A2  
                               l970 365C                                 l964 374C  
                               l975 36A2              memoryUpdateMovement@cf 0001  
                               wreg 000FE8               ?_memoryUpdateMovement 0001  
                      ___flmul@aexp 002B                        ___flmul@bexp 002C  
                      ___flmul@sign 0026                        ___flmul@temp 0031  
                      ___flmul@prod 002D                     __end_of_RGB2Hue 1592  
                      ___fltol@exp1 000A                                l1002 359E  
                              l1203 40E0                                l1300 2AA0  
                              l1301 2A8E                                l1233 1C82  
                              l3001 2472                                l1250 1D9C  
                              l1242 1F52                                l1234 1C70  
                              l1235 1C36                                l3011 24C2  
                              l1323 27E6                                l3003 2492  
                              l1260 1E5A                                l3021 2512  
                              l3013 24CC                                l3005 24A2  
                              l3101 318C                                l1326 2678  
                              l3031 2554                                l3023 251E  
                              l3015 24E2                                l1319 2482  
                              l3111 320A                                l3103 319A  
                              l1336 27A8                                l1328 26F0  
                              l1360 31D0                                l3201 37B4  
                              l1329 26DE                                l3041 25B6  
                              l3033 2564                                l3025 252C  
                              l3017 24EE                                l3009 24B6  
                              l3121 325E                                l3113 3212  
                              l3105 31E0                                l4001 3132  
                              l3211 3848                                l3203 37CC  
                              l1259 1E6C                                l3051 265E  
                              l3043 25D2                                l3035 257E  
                              l3027 2538                                l3019 2506  
                              l3131 32D4                                l3123 329A  
                              l3115 321E                                l1363 332C  
                              l3107 31F6                                l4003 314A  
                              l1275 43B8                                l4011 4540  
                              l1196 40D8                                l1292 29A6  
                              l3221 39AA                                l3213 385C  
                              l3205 37F6                                l3301 1B74  
                              l3061 269A                                l3053 2668  
                              l3045 25FC                                l3037 258E  
                              l3029 2548                                l3141 331C  
                              l3133 32D8                                l3125 32A6  
                              l3117 3250                                l4005 314A  
                              l4021 455A                                l4013 454A  
                              l4101 2E06                                l1374 32C4  
                              l3223 39E8                                l3207 3808  
                              l3215 3874                                l3311 1BA0  
                              l3303 1B86                                l3231 3E76  
                              l3071 270C                                l3063 26A8  
                              l3055 2676                                l3047 2632  
                              l3039 25AA                                l3135 32FC  
                              l3127 32B4                                l3119 3252  
                              l1367 3268                                l4023 457E  
                              l1287 2B82                                l4031 452A  
                              l3151 4592                                l4015 454C  
                              l4111 2E24                                l4103 2E0A  
                              l3225 39FA                                l3217 3944  
                              l3209 3830                                l3401 1DD6  
                              l3321 1BB4                                l3313 1BA4  
                              l3305 1B94                                l3241 3EB2  
                              l3233 3E96                                l3081 2776  
                              l3073 271A                                l3065 26D6  
                              l3057 2688                                l3049 2640  
                              l3137 330C                                l3129 32D2  
                              l4025 4598                                l1289 29E2  
                              l4033 452C                                l3145 45C4  
                              l3153 45BA                                l3161 43BC  
                              l4041 3C84                                l4017 4556  
                              l4009 453C                                l4121 2E62  
                              l4113 2E36                                l4105 2E12  
                              l1298 2A28                                l3227 3A4E  
                              l3219 3956                                l3411 1E06  
                              l3403 1DE0                                l3331 1BC8  
                              l3323 1BB8                                l3315 1BA8  
                              l3307 1B98                                l3243 3EBE  
                              l3091 27CC                                l3083 2790  
                              l3075 2744                                l3059 2696  
                              l3139 331A                                l3251 40E2  
                              l4035 4538                                l4027 4518  
                              l3147 45C8                                l3155 45BE  
                              l3171 43F8                                l3163 43C0  
                              l4051 3CC2                                l4043 3C88  
                              l4019 4558                                l4131 2EDA  
                              l4123 2E7A                                l4115 2E4E  
                              l4107 2E1A                                l3181 3FF2  
                              l3229 45CE                                l3421 1E2E  
                              l3413 1E0A                                l3405 1DEE  
                              l3341 1C02                                l3333 1BCC  
                              l3325 1BBC                                l3317 1BAC  
                              l3309 1B9C                                l3261 1AA0  
                              l3245 3ECA                                l3085 27AC  
                              l3093 27D2                                l3069 2700  
                              l3077 2748                                l3253 40E8  
                              l4029 4520                                l3149 458E  
                              l3165 43C8                                l3157 45B0  
                              l4053 3CC4                                l4045 3CAC  
                              l4037 3C4E                                l4061 3A8C  
                              l4141 2F34                                l4133 2EF4  
                              l4125 2E8E                                l4117 2E52  
                              l4109 2E22                                l3191 4182  
                              l3183 4004                                l3175 3F76  
                              l3431 1E88                                l3423 1E3C  
                              l3415 1E1A                                l3407 1DF0  
                              l3351 1C54                                l3343 1C1E  
                              l3335 1BD0                                l3327 1BC0  
                              l3319 1BB0                                l3271 1AE0  
                              l3263 1AAE                                l3247 3EDA  
                              l3239 3E9E                                l3095 27D6  
                              l3087 27BC                                l3079 2762  
                              l3255 40F6                                l3167 43D0  
                              l3159 45B4                                l3511 4320  
                              l3503 423A                                l4055 3CCE  
                              l4047 3CB6                                l4039 3C5E  
                              l4063 3AC4                                l4143 2F40  
                              l4127 2EC0                                l4135 2F08  
                              l4119 2E58                                l4071 2DB8  
                              l2801 4076                                l3185 4044  
                              l3177 3F88                                l3193 374E  
                              l3441 1EF2                                l3433 1E96  
                              l3425 1E52                                l3409 1DFE  
                              l3417 1E1C                                l3361 1CA0  
                              l3353 1C62                                l3345 1C2E  
                              l3329 1BC4                                l3337 1BD4  
                              l3281 1B12                                l3273 1AE2  
                              l3265 1AB0                                l3249 3EDE  
                              l3089 27CA                                l3601 237A  
                              l3521 1F54                                l3169 43F6  
                              l3505 4280                                l4057 3CD0  
                              l4049 3CB8                                l4065 3AF8  
                              l4153 2F92                                l4145 2F54  
                              l4137 2F1A                                l4129 2ED4  
                              l4081 2DCC                                l4073 2DBC  
                              l2811 40AC                                l2803 4088  
                              l3187 4144                                l3179 3FC8  
                              l3195 3760                                l3451 1F2C  
                              l3443 1F12                                l3435 1ED0  
                              l3371 1CE0                                l3419 1E2A  
                              l3355 1C64                                l3347 1C44  
                              l3339 1BD8                                l3291 1B3A  
                              l3283 1B14                                l3267 1AC0  
                              l3275 1AEA                                l3259 1A94  
                              l3099 317C                                l3603 238E  
                              l3531 1FA8                                l3523 1F5A  
                              l3611 27F6                                l3515 428A  
                              l4059 3CDA                                l4067 4470  
                              l4155 2FA4                                l4147 2F70  
                              l4139 2F2E                                l4091 2DE6  
                              l4083 2DCC                                l4075 2DC0  
                              l2813 40C2                                l2805 4090  
                              l2821 332E                                l3189 4156  
                              l2901 3B9C                                l3197 3788  
                              l3453 1F32                                l3445 1F16  
                              l3429 1E7C                                l3437 1ED2  
                              l3381 1D0A                                l3373 1CEC  
                              l3365 1CB4                                l3357 1C6E  
                              l3349 1C50                                l3293 1B4A  
                              l3285 1B1A                                l3277 1AFA  
                              l3269 1AD0                                l3461 35A0  
                              l3605 23A2                                l3541 2002  
                              l3533 1FB0                                l3525 1F82  
                              l3701 2A26                                l3621 2836  
                              l3613 2804                                l3509 42DA  
                              l3517 42D0                                l4157 2FA8  
                              l4149 2F7C                                l4093 2DEE  
                              l4085 2DD8                                l4077 2DC4  
                              l4069 2DB4                                l2815 40CA  
                              l2807 4098                                l2831 33F8  
                              l2823 334A                                l2903 3BA0  
                              l3199 37A0                                l3455 1F40  
                              l3447 1F24                                l3439 1EE2  
                              l3391 1D7C                                l3375 1CF0  
                              l3367 1CC4                                l3359 1C90  
                              l3383 1D10                                l3295 1B5A  
                              l3287 1B28                                l3279 1B00  
                              l3471 362A                                l3463 35CE  
                              l3607 23BA                                l3551 2094  
                              l3543 201A                                l3527 1F9A  
                              l3711 2A86                                l3703 2A38  
                              l3631 285C                                l3623 2838  
                              l3615 2806                                l4159 2FAE  
                              l4095 2DF6                                l4087 2DDE  
                              l4079 2DC8                                l2817 40CC  
                              l2809 40A6                                l2833 3414  
                              l2825 339E                                l2921 3F5A  
                              l2913 3F1E                                l2905 3EF6  
                              l2841 38BC                                l3457 1F42  
                              l3449 1F2A                                l3385 1D36  
                              l3393 1D8C                                l3377 1CFE  
                              l3369 1CD2                                l3297 1B5C  
                              l3289 1B2A                                l3473 363C  
                              l3465 35DE                                l3561 2136  
                              l3553 20BA                                l3545 203E  
                              l3537 1FC4                                l3529 1FA0  
                              l3721 2AF4                                l3705 2A46  
                              l3641 289C                                l3633 286A  
                              l3617 2816                                l3625 2840  
                              l3609 27E8                                l3801 3552  
                              l4097 2DFE                                l4089 2DE2  
                              l2819 40D2                                l2835 3458  
                              l2827 33B2                                l2923 3F5E  
                              l2915 3F32                                l2907 3F16  
                              l2851 3900                                l2843 38C6  
                              l2931 3D0C                                l3395 1DB2  
                              l3387 1D6A                                l3379 1D00  
                              l3299 1B64                                l3475 364A  
                              l3467 360C                                l3563 214E  
                              l3555 20D2                                l3547 2056  
                              l3571 21CA                                l3539 1FDC  
                              l3731 2B5E                                l3715 2AB0  
                              l3723 2AF8                                l3707 2A4A  
                              l3651 28DC                                l3643 289E  
                              l3635 286C                                l3627 2850  
                              l3619 2826                                l3803 355E  
                              l3491 44B4                                l3483 44A0  
                              l4099 2E02                                l2829 33B6  
                              l2917 3F3E                                l2845 38DE  
                              l2853 3910                                l2837 389E  
                              l2861 3BE4                                l2933 3D38  
                              l2925 3CDE                                l3397 1DC2  
                              l3389 1D6C                                l3477 369A  
                              l3469 361C                                l3573 21CC  
                              l3565 2174                                l3557 20F8  
                              l3549 207C                                l3733 2B62  
                              l3725 2B12                                l3717 2ABC  
                              l3709 2A58                                l3661 290C  
                              l3653 28E4                                l3637 287C  
                              l3645 28A6                                l3629 2856  
                              l3805 356E                                l3901 1542  
                              l3493 44B6                                l3485 44AA  
                              l2941 44DA                                l3821 4424  
                              l3813 43FC                                l2919 3F4A  
                              l2855 3928                                l2847 38E8  
                              l2839 38A4                                l2871 3C0C  
                              l2863 3BF0                                l2935 3D4C  
                              l2927 3CE0                                l2951 3DC0  
                              l2943 3D68                                l3479 36A0  
                              l3591 22FA                                l3583 2224  
                              l3575 21DE                                l3567 218C  
                              l3559 2110                                l3911 1654  
                              l3903 1592                                l3735 2B70  
                              l3727 2B28                                l3719 2ACA  
                              l3671 294A                                l3663 290C  
                              l3655 28E8                                l3647 28B6  
                              l3639 288C                                l3807 357E  
                              l3487 44B0                                l3495 4560  
                              l3831 4436                                l3823 442E  
                              l3815 4400                                l3841 4468  
                              l2793 44F2                                l2849 38F4  
                              l2961 3E04                                l2873 3C18  
                              l2857 3BB8                                l2937 3D64  
                              l2929 3CF4                                l2881 3B22  
                              l2953 3DD4                                l2945 3D6A  
                              l3593 230E                                l3585 2238  
                              l3577 21E2                                l3569 21B2  
                              l3921 172E                                l3913 1692  
                              l3905 159A                                l3737 2B76  
                              l3729 2B42                                l3681 2996  
                              l3673 295A                                l3649 28CC  
                              l3761 3720                                l3753 36A4  
                              l3809 358E                                l3489 44B2  
                              l3833 4438                                l3825 4430  
                              l3817 440A                                l3497 41EA  
                              l3835 443E                                l2795 450E  
                              l2963 3E1C                                l2875 3C24  
                              l2859 3BD8                                l2883 3B42  
                              l2955 3DEC                                l2947 3D7E  
                              l2971 23CA                                l3595 235A  
                              l3587 22AC                                l3579 21F6  
                              l3931 17D2                                l3923 1736  
                              l3915 169A                                l3907 15D8  
                              l3739 2B78                                l3691 29E0  
                              l3683 29A4                                l3675 296A  
                              l3667 2920                                l3659 28FC  
                              l3763 3744                                l3755 36D2  
                              l3747 4374                                l3771 34B0  
                              l2939 44CA                                l3827 4432  
                              l3819 441A                                l3499 4230  
                              l3851 2CD6                                l3843 2B84  
                              l3837 444E                                l2965 3E48  
                              l2877 3C32                                l2869 3BF8  
                              l2957 4198                                l2893 3B62  
                              l2885 3B4E                                l2949 3D96  
                              l2981 240A                                l2973 23D8  
                              l3597 236E                                l3941 1886  
                              l3933 17EA                                l3925 174E  
                              l3909 1616                                l3917 16B2  
                              l3693 29F2                                l3685 29B0  
                              l3677 2972                                l3669 293A  
                              l3765 374A                                l3757 36E2  
                              l3749 4384                                l3781 3500  
                              l3861 0EAE                                l3829 4434  
                              l3853 2CF2                                l3845 2C84  
                              l3839 4458                                l2799 406E  
                              l2967 3E5C                                l2959 3DF0  
                              l2879 3C36                                l2895 3B76  
                              l2887 3B5A                                l2991 243A  
                              l2983 2410                                l2975 23DA  
                              l3951 1960                                l3943 18C4  
                              l3935 1828                                l3927 178C  
                              l3919 16F0                                l3695 2A08  
                              l3687 29CE                                l3679 2982  
                              l3759 3710                                l3791 352A  
                              l3783 3504                                l3775 34C4  
                              l3871 0FB0                                l3863 0EF6  
                              l3855 2D2E                                l3847 2C9C  
                              l2897 3B82                                l2993 243C  
                              l2985 2420                                l2977 23EA  
                              l2969 23BE                                l3961 1A36  
                              l3953 1968                                l3945 1902  
                              l3937 1866                                l3929 17CA  
                              l3697 2A0E                                l3689 29D0  
                              l3793 3534                                l3785 3512  
                              l3777 34EE                                l3769 349A  
                              l3881 110C                                l3873 0FD8  
                              l3865 0F18                                l3857 2D70  
                              l3849 2CBA                                l2899 3B8E  
                              l2995 244C                                l2987 2426  
                              l2979 23FA                                l3963 1A3E  
                              l3947 1940                                l3955 1980  
                              l3939 186E                                l3971 1A8A  
                              l3699 2A18                                l3795 353E  
                              l3779 34F0                                l3891 12DA  
                              l3883 1154                                l3875 1020  
                              l3867 0F22                                l3859 0E66  
                              l2997 245C                                l2989 242C  
                              l3981 301A                                l3965 1A56  
                              l3957 19BE                                l3949 1948  
                              l3893 1398                                l3885 1178  
                              l3877 106C                                l3869 0F68  
                              l2999 246C                                l3991 30A2  
                              l3983 3032                                l3975 2FC6  
                              l3967 1A5E                                l3959 19FC  
                              l3895 1402                                l3887 1246  
                              l3879 109A                                l3993 30C2  
                              l3985 3052                                l3977 2FE4  
                              l3969 1A76                                l3897 14C0  
                              l3889 128E                                l3995 30DA  
                              l3987 306A                                l3979 2FFC  
                              l3899 1526                                l3997 30FA  
                              l3989 308A                                l3999 3112  
                              STR_1 0E2B                                STR_2 0E60  
                              STR_3 0E5B                                STR_4 0E37  
                              STR_5 0E41                                STR_6 0E2C  
                              STR_7 0E55                                STR_8 0E48  
                              STR_9 0E4F                                u2000 3C4C  
                              u2001 3C48                                u2010 3BB6  
                              u2011 3BB2                                u2020 3F74  
                              u2100 245C                                u2021 3F70  
                              u2101 2458                                u2110 2492  
                              u2030 44DA                                u2111 248E  
                              u2031 44D6                                u2200 271A  
                              u2120 24A2                                u3000 235A  
                              u2040 44F0                                u2201 2716  
                              u2121 249E                                u3001 2356  
                              u2041 44EC                                u2210 2762  
                              u2130 261C                                u2050 23D8  
                              u3010 238E                                u2211 275E  
                              u2051 23D4                                u3011 238A  
                              u2220 2790                                u2140 2676  
                              u2060 23EA                                u2300 32C4  
                              u3100 2982                                u3020 2804  
                              u2221 278C                                u2141 2672  
                              u2061 23E6                                u2301 32C0  
                              u3101 297E                                u3021 2800  
                              u2230 27CA                                u2150 2696  
                              u2070 23FA                                u2310 32D2  
                              u3110 29A4                                u3030 2816  
                              u2231 27C6                                u2151 2692  
                              u2135 2612                                u2071 23F6  
                              u2311 32CE                                u3111 29A0  
                              u3031 2812                                u2400 3808  
                              u2160 26A8                                u2080 243A  
                              u2320 330C                                u2240 318C  
                              u3200 2AB0                                u3120 29CE  
                              u3040 2826                        _BAUD4CONbits 000EE9  
                              u2401 3804                                u2161 26A4  
                              u2081 2436                                u2321 3308  
                              u2241 3188                                u3201 2AAC  
                              u3121 29CA                                u3041 2822  
                              u2410 3956                                u2170 26D6  
                              u2090 244C                                u2330 331A  
                              u2250 319A                                u3210 2ACA  
                              u3130 29F2                                u3050 286A  
                              u2411 3952                                u2171 26D2  
                              u2091 2448                                u2331 3316  
                              u2251 3196                                u3211 2AC6  
                              u3131 29EE                                u3051 2866  
                              u2420 39FA                                u2500 1B4A  
                              u2180 26EC                                u2260 31F6  
                              u3220 2B12                                u3140 2A08  
                              u3060 287C                                u3300 3512  
                              u2340 43E4                                u2421 39F6  
                              u2501 1B46                                u2181 26E8  
                              u2261 31F2                                u3221 2B0E  
                              u3141 2A04                                u3061 2878  
                              u3301 350E                                u2341 43DC  
                              u2510 1B86                                u2430 3EF4  
                              u2190 2700                                u2270 324C  
                              u3230 2B42                                u3150 2A26  
                              u3070 288C                                u3310 3526  
                              u2511 1B82                                u2431 3EF0  
                              u2191 26FC                                u2271 3248  
                              u3231 2B3E                                u3151 2A22  
                              u3071 2888                                u3311 3522  
                              u2360 3F88                                u2600 1CA0  
                              u2520 1B94                                u2440 1AAE  
                              u2280 3296                                u3240 2B70  
                              u3160 2A46                                u3080 28CC  
                              u3320 354E                                u3400 0FB0  
                              u2361 3F84                                u2601 1C9C  
                              u2521 1B90                                u2441 1AAA  
                              u2281 3292                                u3241 2B6C  
                              u3161 2A42                                u3081 28C8  
                              u3321 354A                                u3401 0FAC  
                              u2370 4004                                u2610 1CD2  
                              u2530 1C02                                u2450 1AC0  
                              u2290 32B4                                u3170 2A58  
                              u3090 290C                                u3250 36D2  
                              u3330 356E                                u3410 1020  
                              _T2PR 000FBC                                u2371 4000  
                              u2611 1CCE                                u2531 1BFE  
                              u2451 1ABC                                u2291 32B0  
                              u3171 2A54                                u3091 2908  
                              u3251 36CE                                u3331 356A  
                              u3411 101C                                u2380 4156  
                              u2700 1E1A                                u2620 1CE0  
                              u2540 1C1A                                u2460 1AD0  
                              u3500 1654                                u3180 2A86  
                              u3260 3710                                u3340 357E  
                              u3420 106C                                u2381 4152  
                              u2701 1E16                                u2621 1CDC  
                              u2541 1C14                                u2461 1ACC  
                              u3501 1650                                u3181 2A82  
                              u3261 370C                                u3341 357A  
                              u3421 1068                                u3350 444E  
                              u1910 4088                                u2390 3760  
                              u2710 1E2A                                u2630 1CFE  
                              u2550 1C1C                                u2470 1B12  
                              u3510 1692                                u3190 2A9C  
                              u3270 3744                                u3430 110C  
                              u2358 43E6                                u3351 444A  
                              u1911 4084                                u2391 375C  
                              u2711 1E26                                u2631 1CFA  
                              u2471 1B0E                                u3511 168E  
                              u3191 2A98                                u3271 3740  
                              u3431 1108                                u3360 4468  
                              u1920 40A6                                u2800 1F12  
                              u2720 1E3C                                u2640 1D36  
                              u2560 1C44                                u2480 1B28  
                              u3600 1940                                u3520 16F0  
                              u3280 34B0                                u3440 1154  
                              u3361 4464                                u1921 40A2  
                              u2801 1F0E                                u2721 1E38  
                              u2641 1D32                                u2561 1C40  
                              u2481 1B24                                u3601 193C  
                              u3521 16EC                                u3281 34AC  
                              u3441 1150                                u1930 40C2  
                              u2810 1F24                                u2730 1E52  
                              u2650 1D7C                                u2570 1C62  
                              u2490 1B3A                                u3610 19BE  
                              u3530 172E                                u3290 34E4  
                              u3450 128E                                u3370 0EAE  
                              u1931 40BE                                u2811 1F20  
                              u2731 1E4E                                u2651 1D78  
                              u2571 1C5E                                u2491 1B36  
                              u3611 19BA                                u3531 172A  
                              u3451 128A                                u3371 0EAA  
                              u1940 334A                                u2820 1F40  
                              u2740 1E68                                u2660 1DB2  
                              u2580 1C82                                u2900 203E  
                              u3700 3132                                u3620 19FC  
                              u3540 178C                                u3460 12DA  
                              u3380 0EF6                                u1941 3346  
                              u2821 1F3C                                u2741 1E64  
                              u2661 1DAE                                u2581 1C7E  
                              u2901 203A                                u3701 312E  
                              u3621 19F8                                u3541 1788  
                              u3461 12D6                                u3381 0EF2  
                              u1950 3414                                u2750 1E7C  
                              u2670 1DC2                                u2590 1C90  
                              u2830 35CE                                u2910 207C  
                              u3630 1A36                                u3550 17CA  
                              u3470 1542                                u3390 0F68  
                              u3710 2E36                                u1951 3410  
                              u2751 1E78                                u2671 1DBE  
                              u2591 1C8C                                u2831 35CA  
                              u2911 2078                                u3631 1A32  
                              u3551 17C6                                u3295 34DA  
                              u3471 153E                                u3391 0F64  
                              u3711 2E32                                u1960 38BC  
                              u2760 1E96                                u2680 1DEE  
                              u2840 360C                                u2920 20BA  
                              u3640 2FE4                                u3560 1828  
                              u3480 15D8                                u3720 2EC0  
                              u1961 38B8                                u2761 1E92  
                              u2681 1DEA                                u2841 3608  
                              u2921 20B6                                u3641 2FE0  
                              u3561 1824                                u3481 15D4  
                              u3721 2EBC                                u1970 38DE  
                              u2770 1ED0                                u2690 1DFE  
                              u2850 362A                                u2930 20F8  
                              u3650 301A                                u3570 1866  
                              u3490 1616                                u3730 2F1A  
                              u1971 38DA                                u2771 1ECC  
                              u2691 1DFA                                u2851 3626  
                              u2931 20F4                                u3651 3016  
                              u3571 1862                                u3491 1612  
                              u3731 2F16                                u1980 3928  
                              u2780 1EE2                                u2860 364A  
                              u2940 2136                                u3660 3052  
                              u3580 18C4                                u3740 2F92  
                              u1981 3924                                u2781 1EDE  
                              u2861 3646                                u2941 2132  
                              u3661 304E                                u3581 18C0  
                              u3741 2F8E                                u1990 3940  
                              u2790 1EF2                                u2870 369A  
                              u2950 2174                                u3670 308A  
                              u3590 1902                                u3750 2FA4  
                              u1991 393C                                u2791 1EEE  
                              u2871 3696                                u2951 2170  
                              u3671 3086                                u3591 18FE  
                              u3807 4410                                u3751 2FA0  
                              u2960 21B2                                u2880 1FBE  
                              u3680 30C2                                u3760 2FC2  
                              u2961 21AE                                u2881 1FBA  
                              u3817 1F8C                                u3681 30BE  
                              u3761 2FBE                                u2970 2220  
                              u2890 2002                                u3690 30FA  
                              u3907 3B90                                u2971 221C  
                              u2891 1FFE                                u3827 1FCE  
                              u3691 30F6                                u2980 22A8  
                              u3917 3CFE                                u3837 23AC  
                              u2981 22A4                                u2990 22F6  
                              u3927 3D2A                                u3847 3ED0  
                              u2991 22F2                                u3937 3D56  
                              u3857 3792                                u3947 3C26  
                              u3867 383A                                u3787 2E42  
                              u3957 3E0E                                u3877 3D88  
                              u3797 2EE6                                u3967 3E3A  
                              u3887 3DB4                                u3977 3E66  
                              u3897 3DDE                                u3987 3906  
                              u3997 3F50                 reverseHalfSquare@mL 001B  
               reverseHalfSquare@mR 001D                                _main 2DB4  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 005F                                _stop 389E  
                        _ClickLEDOn 443C            memoryUpdateTime@timerVal 0053  
                              prodh 000FF4                                prodl 000FF3  
                              start 002C                     ___fldiv@new_exp 00C7  
           __end_of_Yellow_rev1_R90 37F6       memoryUpdateTime@movementCount 004B  
            __end_of_color_read_Red 423A                     __end_of_HighISR 002C  
                      ___param_bank 000000                     __end_of_Red_R90 3FF2  
                        _Hue2Colour 1592                     __end_of_Right45 3DF0  
                  __end_of_LED_init 458C                       ___fltol@sign1 0009  
                   __end_of___fladd 1F54                               ?_main 0001  
                   __end_of___fldiv 2B84                               STR_10 0E01  
                   __end_of___flmul 27E8                     __end_of___flsub 43BA  
                   __end_of___fltol 35A0                      _LightBlue_L135 39E8  
                             ?_stop 0014                     __end_of___lwdiv 40E2  
                             i2l702 0028                               _TMR0H 000FD4  
                             _TMR0L 000FD3          __end_of_I2C_2_Master_Start 45CE  
                             _White 1F54          __end_of_I2C_2_Master_Write 4598  
                 fullSpeedReverse@i 0019                               tablat 000FF5  
                             plusw2 000FDB                               ttemp5 0060  
                             ttemp6 0063                               ttemp7 0067  
                             status 000FD8                               wtemp8 0060  
                  _memoryUpdateTime 3A8C             __end_of_color_read_Blue 432A  
             _I2C_2_Master_RepStart 45B0                     ?_color_read_Red 0005  
                   __initialization 432A                        __end_of_main 2FC6  
                      __end_of_stop 3944                     ??_rotate180left 0024  
            __end_of_LightBlue_L135 3A8C                              ??_main 00EB  
                            ??_stop 0018                       __activetblptr 000001  
            ??_memoryUpdateMovement 0007                           ??_RGB2Hue 00D1  
                     ??_Orange_R135 0025                              ?_White 00C2  
                      ?_setMotorPWM 000E                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                     _colour_read_all 2B84  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RC7PPS 000E69  
                            _RD5PPS 000E6F                              _RE4PPS 000E76  
                            _RD6PPS 000E70                              i2l4171 000A  
                            i2l4173 001A                              i2l4175 0024  
                            _RG6PPS 000E88                           ??_HighISR 0001  
          __end_of_color_click_init 443C                              _RX4PPS 000E15  
                            _TX4REG 000EE4                         ?_ClickLEDOn 0001  
                  __end_of___xxtofl 332E                           ??_Red_R90 0025  
                            _Left45 3CDE                           ??_Right45 001E  
                  _fullSpeedReverse 3EF6                    ?_Yellow_rev1_R90 0021  
                     ??_Timer0_init 0001                        _CCPTMRS0bits 000FAD  
                            White@i 00D0                              ___flge 35A0  
                            ___fleq 36A4                           ??___fladd 0043  
                       ?_Hue2Colour 0057                              ___wmul 44F2  
                         ??___fldiv 005B                       Orange_R135@mL 0021  
                         ??___flmul 0022                       Orange_R135@mR 0023  
                         ??___flsub 0053                           ??___fltol 0005  
                         ??___lwdiv 000B                          _TimerReset 45CE  
                            _colorf 008E                     ?_LightBlue_L135 0021  
                            clear_0 4350                              clear_1 435C  
                fullSpeedReverse@mL 0014                  fullSpeedReverse@mR 0016  
                            _motorL 00B9                              _motorR 00B0  
                            isa$std 000001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8   memoryUpdateMovement@movementCount 0003  
                            stop@mL 0014                              stop@mR 0016  
                 ??_initDCmotorsPWM 0003                    __end_of_turnLeft 3C4E  
                        ___flge@ff1 004B                          ___flge@ff2 004F  
                      ___xxtofl@arg 0016                        ___xxtofl@exp 0015  
                      ___xxtofl@val 000C                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005                 __end_of_Orange_R135 39E8  
                        __accesstop 0060             __end_of__initialization 4362  
          __end_of_color_read_Clear 42DA                     fullSpeedAhead@i 0019  
                 __end_of_Blue_T180 4198            __end_of_color_read_Green 428A  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                         ?_LED_init 0001                          ___fltol@f1 0001  
                  ?_color_read_Blue 0005                     _Interrupts_init 4598  
                    __pcstackCOMRAM 0001                       __end_of_White 23BE  
                      __pidataBANK0 45A4                   __end_of_Green_L90 406E  
                         RGB2Hue@cf 00CF                 __end_of_Timer0_init 453C  
                       _ForwardFlag 00F8             __end_of_colour_read_all 2DB4  
                           ??_White 0057                          __pbssBANK0 0060  
                        __pbssBANK1 0100                          ??_LED_init 0001  
                           ?_Left45 001A                   _color_writetoaddr 455E  
                      _T2CLKCONbits 000FBF               __end_of_Colour2Action 317A  
                           ?___flge 004B                             ?___fleq 0001  
                ?_color_writetoaddr 0003                             ?___wmul 0001  
                       ?_TimerReset 0001                 ??_color_writetoaddr 0004  
             __end_of_getTimerValue 4144            __end_of_memoryUpdateTime 3B22  
                           _RGB2Hue 0E66                           ?___xxtofl 000C  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                       _Orange_R135 3944                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5             __end_of_Interrupts_init 45A4  
            color_writetoaddr@value 0003                    ??_color_read_Red 0007  
                           _HighISR 0008           __end_of_color_writetoaddr 457E  
                           _Red_R90 3F76                  _I2C_2_Master_Start 45C4  
                        _initUSART4 453C                  _I2C_2_Master_Write 458C  
                           _Right45 3D68                             __Hparam 0000  
                           __Lparam 0000                   color_read_Red@tmp 000A  
                       _Timer0_init 4518                             White@mL 00C2  
                           White@mR 00C4                             ___fladd 1A94  
                           ___fldiv 27E8                             ___flmul 23BE  
                           ___flsub 4374                             ___fltol 349A  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 406E  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 432A                             __ramtop 0E00  
                         ?_turnLeft 0014                             __ptext0 2DB4  
                           __ptext1 3A8C                             __ptext2 4470  
                           __ptext3 453C                             __ptext4 3C4E  
                           __ptext5 2B84                             __ptext6 41EA  
                           __ptext7 423A                             __ptext8 428A  
                           __ptext9 42DA                             _maxTime 0064  
                         _T2CONbits 000FBD                    ?_colour_read_all 00CF  
                        ??___xxtofl 0010            __end_of_fullSpeedReverse 3F76  
                         _T2HLTbits 000FBE                  colour_read_all@rel 00D1  
                     Hue2Colour@rel 0059                ??_I2C_2_Master_Start 0002  
              ??_I2C_2_Master_Write 0002                end_of_initialization 4362  
    memoryUpdateMovement@colourcode 0007                       _Pink_rev1_L90 37F6  
                      ??_ClickLEDOn 0001                   ?_color_click_init 0001  
                    __45drightdelay 00F4                  ??_color_click_init 0005  
                  ??_LightBlue_L135 0025                   _reverseHalfSquare 3DF0  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Hue2Colour 005B                             postinc0 000FEE  
                           postinc2 000FDE  memoryUpdateMovement@movementMemory 0005  
                ?_reverseHalfSquare 001B               __end_of_rotate180left 41EA  
                   _initDCmotorsPWM 3C4E                          ??_turnLeft 0018  
                  White@timerMemory 00CA                           _PORTFbits 000F8E  
                setMotorPWM@negDuty 0013                   __end_of_turnRight 3BB8  
                       ___fladd@grs 004A                 ??_reverseHalfSquare 001F  
                __end_of_ClickLEDOn 4470                       ___xxtofl@sign 0014  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0012  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 00C9                         ___fldiv@rem 00C2  
                  fullSpeedAhead@mL 0014                    fullSpeedAhead@mR 0016  
          color_writetoaddr@address 0004                           Red_R90@mL 0021  
                         Red_R90@mR 0023             ??_I2C_2_Master_RepStart 0002  
                    _movementMemory 0066                  __end_of_Hue2Colour 1A94  
                    ?_Pink_rev1_L90 0021                    ?_Interrupts_init 0001  
                       ___flmul@grs 0027                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0005                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0005                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
                   Colour2Action@cf 005B           __end_of_reverseHalfSquare 3E76  
                ??_color_read_Clear 0007                  ??_color_read_Green 0007  
                         _Blue_T180 4144                      __end_of_Left45 3D68  
                      _RGB2Hue$3094 00D5                      __end_of___flge 36A4  
                    __end_of___fleq 374E                      _fullSpeedAhead 3E76  
                    __end_of___wmul 4518                           _Green_L90 3FF2  
                         Right45@mL 001A                           Right45@mR 001C  
              _colour_read_all$3093 00D7                          RGB2Hue@max 00D9  
                        RGB2Hue@min 00DB                 color_read_Clear@tmp 000A  
               start_initialization 432A                         __halfsquare 00F0  
                          ??_Left45 001E                 color_read_Green@tmp 000A  
                        ?_Blue_T180 0024             __end_of_initDCmotorsPWM 3CDE  
            __end_of_fullSpeedAhead 3EF6                            ??___flge 0053  
                          ??___fleq 0009                            ??___wmul 0005  
                      ??_TimerReset 0001                         __pdataBANK0 00EE  
                         ___fladd@a 003F                           ___fladd@b 003B  
                   ClickLEDOn@power 0001                          ?_Green_L90 0021  
                         ___fldiv@a 0057                           ___fldiv@b 0053  
                 ?_memoryUpdateTime 004B                            ?_RGB2Hue 00CF  
                         ___flmul@a 001E                           ___flmul@b 001A  
                         ___flsub@a 004F                           ___flsub@b 004B  
                     __pcstackBANK0 00C2                        ?_Orange_R135 0021  
                ??_memoryUpdateTime 004F                     ??_Pink_rev1_L90 0025  
                          ?_HighISR 0001                  __end_of_TimerReset 45D8  
                          ?_Red_R90 0021                            ?_Right45 001A  
                  ___lwdiv@dividend 0007                        ?_Timer0_init 0001  
                   ?_fullSpeedAhead 0014                           __pintcode 0008  
                          ?___fladd 003B                            ?___fldiv 0053  
                          ?___flmul 001A                            ?___flsub 004B  
                          ?___fltol 0001                            ?___lwdiv 0007  
              I2C_2_Master_Read@ack 0003                I2C_2_Master_Read@tmp 0004  
                   Pink_rev1_L90@mL 0021                     Pink_rev1_L90@mR 0023  
                       __smallconst 0E00                   _I2C_2_Master_Idle 44CA  
                 _I2C_2_Master_Init 44A0                   _I2C_2_Master_Read 43BA  
                     __45dleftdelay 00F6                   _I2C_2_Master_Stop 45BA  
                 ?_fullSpeedReverse 0014                   ??_Yellow_rev1_R90 0025  
                ?_I2C_2_Master_Idle 0001                     rotate180left@mL 0020  
                   rotate180left@mR 0022                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0010  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000B  
               White@movementMemory 00C8            initDCmotorsPWM@PWMperiod 0001  
                ??_fullSpeedReverse 0018                Hue2Colour@colourname 005B  
                 colour_read_all@cf 00CF                        Hue2Colour@cf 0057  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                            _LED_init 457E  
                          _PIE4bits 000E2D                         turnRight@mL 0014  
                       turnRight@mR 0016                            _PIR0bits 000E33  
                       ??_Blue_T180 0028                            _PIR4bits 000E37  
                          i2u377_40 001A                            i2u377_41 0016  
                  ?_initDCmotorsPWM 0001                            Left45@mL 001A  
                          Left45@mR 001C                colour_read_all@total 00E7  
                          _SSP2CON2 000EDA                            _SSP2STAT 000ED8  
         __end_of_I2C_2_Master_Idle 44F2           __end_of_I2C_2_Master_Init 44CA  
         __end_of_I2C_2_Master_Read 43FC                   ___wmul@multiplier 0001  
         __end_of_I2C_2_Master_Stop 45C4                       _movementCount 0062  
                       ??_Green_L90 0025                        setMotorPWM@m 000E  
       I2C_2_Master_Write@data_byte 0002                   ??_color_read_Blue 0007  
                         _turnRight 3B22                       _retracingDone 0060  
                          __1square 00F2                           copy_data0 433E  
     __end_of_I2C_2_Master_RepStart 45BA                  color_read_Blue@tmp 000A  
               __end_of_setMotorPWM 349A                        ??_initUSART4 0001  
                          __Hrparam 0000        __end_of_memoryUpdateMovement 44A0  
                          __Lrparam 0000                        __Lsmallconst 0E00  
                     _Colour2Action 2FC6                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                       _getTimerValue 40E2  
                       Blue_T180@mL 0024                         Blue_T180@mR 0026  
                          ___xxtofl 317A                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                     ___lwdiv@divisor 0009  
                __end_of_initUSART4 455E                     ___lwdiv@counter 000D  
                        ?_turnRight 0014                            __ptext10 45B0  
                          __ptext11 43BA                            __ptext20 0E66  
                          __ptext12 43FC                            __ptext21 349A  
                          __ptext13 455E                            __ptext30 40E2  
                          __ptext22 4374                            __ptext14 458C  
                          __ptext31 317A                            __ptext23 36A4  
                          __ptext15 45BA                            __ptext40 3944  
                          __ptext32 23BE                            __ptext24 27E8  
                          __ptext16 45C4                            __ptext41 39E8  
                          __ptext33 3E76                            __ptext25 457E  
                          __ptext17 44CA                            __ptext50 389E  
                          __ptext42 3FF2                            __ptext34 35A0  
                          __ptext26 4598                            __ptext18 44A0  
                          __ptext51 3EF6                            __ptext43 3D68  
                          __ptext35 1A94                            __ptext27 1592  
                          __ptext19 4518                            __ptext52 332E  
                          __ptext44 3B22                            __ptext36 374E  
                          __ptext28 2FC6                            __ptext53 44F2  
                          __ptext45 4144                            __ptext37 45CE  
                          __ptext29 1F54                            __ptext54 406E  
                          __ptext46 4198                            __ptext38 3F76  
                          __ptext55 443C                            __ptext47 3CDE  
                          __ptext39 37F6                            __ptext48 3BB8  
                          __ptext49 3DF0                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                            _colorrel 00A4  
                White@movementCount 00C6                          turnLeft@mL 0014  
                        turnLeft@mR 0016                    colour_read_all@B 00E3  
                  colour_read_all@C 00D3                    colour_read_all@G 00DF  
                  colour_read_all@R 00DB                      White@tempTimer 00CC  
                        turnRight@i 0018                    LightBlue_L135@mL 0021  
                  LightBlue_L135@mR 0023                      ?_Colour2Action 005B  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005F                   Yellow_rev1_R90@mL 0021  
                 Yellow_rev1_R90@mR 0023                            main@wall 00ED  
                          _turnLeft 3BB8                      ?_getTimerValue 0033  
                        _INTCONbits 000FF2                         _setMotorPWM 332E  
             _memoryUpdateTime$3097 004F                            intlevel2 0000  
                  ??_fullSpeedAhead 0018                           turnLeft@i 0018  
                 ??_colour_read_all 005F             getTimerValue@timerCount 0039  
                   _Yellow_rev1_R90 374E                    _color_click_init 43FC  
                     _rotate180left 4198                    __recogniseColour 00EE  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       _timerMemory 0100                _memoryUpdateMovement 4470  
                       ??_turnRight 0018                       ___fladd@signs 0047  
                        _TX4STAbits 000EE8               __end_of_Pink_rev1_L90 389E  
                      ___fladd@aexp 0048                        ___fladd@bexp 0049  
       memoryUpdateTime@timerMemory 004D                     ??_Colour2Action 005D  
