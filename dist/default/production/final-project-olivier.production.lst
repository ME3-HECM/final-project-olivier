

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 28 16:51:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 06/04/2022 GMT
    56                           ; 
    57                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   002532                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _DataFlag
    95   002532  01                 	db	1
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _SSP2ADD	set	3798
   105   000000                     _SSP2CON1bits	set	3801
   106   000000                     _RC4REG	set	3811
   107   000000                     _SP4BRGL	set	3813
   108   000000                     _TX4STAbits	set	3816
   109   000000                     _BAUD4CONbits	set	3817
   110   000000                     _TRISCbits	set	3971
   111   000000                     _SSP2CON2	set	3802
   112   000000                     _TRISDbits	set	3972
   113   000000                     _SSP2STAT	set	3800
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIR4bits	set	3639
   116   000000                     _RC0PPS	set	3682
   117   000000                     _RD5PPS	set	3695
   118   000000                     _RD6PPS	set	3696
   119                           
   120                           	psect	smallconst
   121   000E00                     __psmallconst:
   122                           	callstack 0
   123   000E00  00                 	db	0
   124   000E01                     STR_1:
   125                           
   126                           ; BSR set to: 14
   127   000E01  52                 	db	82	;'R'
   128   000E02  65                 	db	101	;'e'
   129   000E03  64                 	db	100	;'d'
   130   000E04  20                 	db	32
   131   000E05  25                 	db	37
   132   000E06  64                 	db	100	;'d'
   133   000E07  20                 	db	32
   134   000E08  47                 	db	71	;'G'
   135   000E09  72                 	db	114	;'r'
   136   000E0A  65                 	db	101	;'e'
   137   000E0B  65                 	db	101	;'e'
   138   000E0C  6E                 	db	110	;'n'
   139   000E0D  2C                 	db	44
   140   000E0E  25                 	db	37
   141   000E0F  64                 	db	100	;'d'
   142   000E10  20                 	db	32
   143   000E11  42                 	db	66	;'B'
   144   000E12  6C                 	db	108	;'l'
   145   000E13  75                 	db	117	;'u'
   146   000E14  65                 	db	101	;'e'
   147   000E15  2C                 	db	44
   148   000E16  25                 	db	37
   149   000E17  64                 	db	100	;'d'
   150   000E18  20                 	db	32
   151   000E19  43                 	db	67	;'C'
   152   000E1A  6C                 	db	108	;'l'
   153   000E1B  65                 	db	101	;'e'
   154   000E1C  61                 	db	97	;'a'
   155   000E1D  72                 	db	114	;'r'
   156   000E1E  20                 	db	32
   157   000E1F  25                 	db	37
   158   000E20  64                 	db	100	;'d'
   159   000E21  20                 	db	32
   160   000E22  0D                 	db	13
   161   000E23  00                 	db	0
   162   000E24  00                 	db	0	; dummy byte at the end
   163   000000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167   002396                     __pcinit:
   168                           	callstack 0
   169   002396                     start_initialization:
   170                           	callstack 0
   171   002396                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Initialize objects allocated to BANK0 (1 bytes)
   175                           ; load TBLPTR registers with __pidataBANK0
   176   002396  0E32               	movlw	low __pidataBANK0
   177   002398  6EF6               	movwf	tblptrl,c
   178   00239A  0E25               	movlw	high __pidataBANK0
   179   00239C  6EF7               	movwf	tblptrh,c
   180   00239E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   181   0023A0  6EF8               	movwf	tblptru,c
   182   0023A2  0009               	tblrd		*+	;fetch initializer
   183   0023A4  CFF5 F0E3          	movff	tablat,__pdataBANK0
   184                           
   185                           ; Clear objects allocated to BANK1 (60 bytes)
   186   0023A8  EE01  F000         	lfsr	0,__pbssBANK1
   187   0023AC  0E3C               	movlw	60
   188   0023AE                     clear_0:
   189   0023AE  6AEE               	clrf	postinc0,c
   190   0023B0  06E8               	decf	wreg,f,c
   191   0023B2  E1FD               	bnz	clear_0
   192                           
   193                           ; Clear objects allocated to BANK0 (76 bytes)
   194   0023B4  EE00  F060         	lfsr	0,__pbssBANK0
   195   0023B8  0E4C               	movlw	76
   196   0023BA                     clear_1:
   197   0023BA  6AEE               	clrf	postinc0,c
   198   0023BC  06E8               	decf	wreg,f,c
   199   0023BE  E1FD               	bnz	clear_1
   200                           
   201                           ; Clear objects allocated to COMRAM (1 bytes)
   202   0023C0  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   203   0023C2                     end_of_initialization:
   204                           	callstack 0
   205   0023C2                     __end_of__initialization:
   206                           	callstack 0
   207   0023C2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   208   0023C4  6EF8               	movwf	tblptru,c
   209   0023C6  0E0E               	movlw	high __Lsmallconst
   210   0023C8  6EF7               	movwf	tblptrh,c
   211   0023CA  0100               	movlb	0
   212   0023CC  EF2D  F010         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMRAM
   215   00005F                     __pbssCOMRAM:
   216                           	callstack 0
   217   00005F                     _RxBufWriteCnt:
   218                           	callstack 0
   219   00005F                     	ds	1
   220                           
   221                           	psect	bssBANK0
   222   000060                     __pbssBANK0:
   223                           	callstack 0
   224   000060                     _EUSART4RXbuf:
   225                           	callstack 0
   226   000060                     	ds	20
   227   000074                     _width:
   228                           	callstack 0
   229   000074                     	ds	2
   230   000076                     _prec:
   231                           	callstack 0
   232   000076                     	ds	2
   233   000078                     _flags:
   234                           	callstack 0
   235   000078                     	ds	1
   236   000079                     _TxBufReadCnt:
   237                           	callstack 0
   238   000079                     	ds	1
   239   00007A                     _TxBufWriteCnt:
   240                           	callstack 0
   241   00007A                     	ds	1
   242   00007B                     _RxBufReadCnt:
   243                           	callstack 0
   244   00007B                     	ds	1
   245   00007C                     _dbuf:
   246                           	callstack 0
   247   00007C                     	ds	32
   248   00009C                     _colorf:
   249                           	callstack 0
   250   00009C                     	ds	8
   251   0000A4                     _color:
   252                           	callstack 0
   253   0000A4                     	ds	8
   254                           
   255                           	psect	dataBANK0
   256   0000E3                     __pdataBANK0:
   257                           	callstack 0
   258   0000E3                     _DataFlag:
   259                           	callstack 0
   260   0000E3                     	ds	1
   261                           
   262                           	psect	bssBANK1
   263   000100                     __pbssBANK1:
   264                           	callstack 0
   265   000100                     _EUSART4TXbuf:
   266                           	callstack 0
   267   000100                     	ds	60
   268                           
   269                           	psect	cstackBANK0
   270   0000AC                     __pcstackBANK0:
   271                           	callstack 0
   272   0000AC                     ?_sprintf:
   273                           	callstack 0
   274   0000AC                     sprintf@s:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x0
   278   0000AC                     	ds	2
   279   0000AE                     sprintf@fmt:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x2
   283   0000AE                     	ds	10
   284   0000B8                     sprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xC
   288   0000B8                     	ds	2
   289   0000BA                     sprintf@f:
   290                           	callstack 0
   291                           
   292                           ; 11 bytes @ 0xE
   293   0000BA                     	ds	11
   294   0000C5                     main@data:
   295                           	callstack 0
   296                           
   297                           ; 30 bytes @ 0x19
   298   0000C5                     	ds	30
   299                           
   300                           	psect	cstackCOMRAM
   301   000001                     __pcstackCOMRAM:
   302                           	callstack 0
   303   000001                     ??_I2C_2_Master_Idle:
   304   000001                     ?___wmul:
   305                           	callstack 0
   306   000001                     ?___aodiv:
   307                           	callstack 0
   308   000001                     ?___aomod:
   309                           	callstack 0
   310   000001                     sendCharSerial4@charToSend:
   311                           	callstack 0
   312   000001                     ___wmul@multiplier:
   313                           	callstack 0
   314   000001                     fputc@c:
   315                           	callstack 0
   316   000001                     ___aodiv@dividend:
   317                           	callstack 0
   318   000001                     ___aomod@dividend:
   319                           	callstack 0
   320                           
   321                           ; 8 bytes @ 0x0
   322   000001                     	ds	1
   323   000002                     ??_I2C_2_Master_Read:
   324   000002                     I2C_2_Master_Write@data_byte:
   325                           	callstack 0
   326   000002                     sendStringSerial4@string:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x1
   330   000002                     	ds	1
   331   000003                     color_write_reg@value:
   332                           	callstack 0
   333   000003                     color_writetoaddr@value:
   334                           	callstack 0
   335   000003                     I2C_2_Master_Read@ack:
   336                           	callstack 0
   337   000003                     ___wmul@multiplicand:
   338                           	callstack 0
   339   000003                     fputc@fp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x2
   343   000003                     	ds	1
   344   000004                     color_write_reg@reg:
   345                           	callstack 0
   346   000004                     color_writetoaddr@address:
   347                           	callstack 0
   348   000004                     I2C_2_Master_Read@tmp:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x3
   352   000004                     	ds	1
   353   000005                     ??_fputc:
   354   000005                     ??_color_click_init:
   355   000005                     ?_color_read_Red:
   356                           	callstack 0
   357   000005                     ?_color_read_Green:
   358                           	callstack 0
   359   000005                     ?_color_read_Blue:
   360                           	callstack 0
   361   000005                     ?_color_read_Clear:
   362                           	callstack 0
   363   000005                     ___wmul@product:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x4
   367   000005                     	ds	2
   368   000007                     ??_color_read_Red:
   369   000007                     ??_color_read_Green:
   370   000007                     ??_color_read_Blue:
   371   000007                     ??_color_read_Clear:
   372   000007                     ?___xxtofl:
   373                           	callstack 0
   374   000007                     ___xxtofl@val:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x6
   378   000007                     	ds	2
   379   000009                     ___aodiv@divisor:
   380                           	callstack 0
   381   000009                     ___aomod@divisor:
   382                           	callstack 0
   383                           
   384                           ; 8 bytes @ 0x8
   385   000009                     	ds	1
   386   00000A                     color_read_Red@tmp:
   387                           	callstack 0
   388   00000A                     color_read_Green@tmp:
   389                           	callstack 0
   390   00000A                     color_read_Blue@tmp:
   391                           	callstack 0
   392   00000A                     color_read_Clear@tmp:
   393                           	callstack 0
   394   00000A                     fputs@s:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x9
   398   00000A                     	ds	1
   399   00000B                     ??___xxtofl:
   400                           
   401                           ; 1 bytes @ 0xA
   402   00000B                     	ds	1
   403   00000C                     fputs@fp:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xB
   407   00000C                     	ds	2
   408   00000E                     fputs@c:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xD
   412   00000E                     	ds	1
   413   00000F                     ___xxtofl@sign:
   414                           	callstack 0
   415   00000F                     fputs@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xE
   419   00000F                     	ds	1
   420   000010                     ___xxtofl@exp:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xF
   424   000010                     	ds	1
   425   000011                     ___aodiv@counter:
   426                           	callstack 0
   427   000011                     ___aomod@counter:
   428                           	callstack 0
   429   000011                     pad@fp:
   430                           	callstack 0
   431   000011                     ___xxtofl@arg:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x10
   435   000011                     	ds	1
   436   000012                     ___aodiv@sign:
   437                           	callstack 0
   438   000012                     ___aomod@sign:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x11
   442   000012                     	ds	1
   443   000013                     ?_abs:
   444                           	callstack 0
   445   000013                     pad@buf:
   446                           	callstack 0
   447   000013                     abs@a:
   448                           	callstack 0
   449   000013                     ___aodiv@quotient:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x12
   453   000013                     	ds	2
   454   000015                     ??_abs:
   455   000015                     ?___fldiv:
   456                           	callstack 0
   457   000015                     pad@p:
   458                           	callstack 0
   459   000015                     ___fldiv@b:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x14
   463   000015                     	ds	2
   464   000017                     ??_pad:
   465                           
   466                           ; 1 bytes @ 0x16
   467   000017                     	ds	1
   468   000018                     pad@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x17
   472   000018                     	ds	1
   473   000019                     ___fldiv@a:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x18
   477   000019                     	ds	1
   478   00001A                     pad@w:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x19
   482   00001A                     	ds	2
   483   00001C                     dtoa@fp:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1B
   487   00001C                     	ds	1
   488   00001D                     ??___fldiv:
   489                           
   490                           ; 1 bytes @ 0x1C
   491   00001D                     	ds	1
   492   00001E                     dtoa@d:
   493                           	callstack 0
   494                           
   495                           ; 8 bytes @ 0x1D
   496   00001E                     	ds	3
   497   000021                     ___fldiv@rem:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x20
   501   000021                     	ds	4
   502   000025                     ___fldiv@sign:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x24
   506   000025                     	ds	1
   507   000026                     ??_dtoa:
   508   000026                     ___fldiv@new_exp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x25
   512   000026                     	ds	2
   513   000028                     ___fldiv@grs:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x27
   517   000028                     	ds	4
   518   00002C                     ___fldiv@bexp:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x2B
   522   00002C                     	ds	1
   523   00002D                     ___fldiv@aexp:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x2C
   527   00002D                     	ds	1
   528   00002E                     ?___fltol:
   529                           	callstack 0
   530   00002E                     _dtoa$1092:
   531                           	callstack 0
   532   00002E                     ___fltol@f1:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x2D
   536   00002E                     	ds	2
   537   000030                     dtoa@p:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2F
   541   000030                     	ds	2
   542   000032                     ??___fltol:
   543   000032                     dtoa@w:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x31
   547   000032                     	ds	2
   548   000034                     dtoa@n:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x33
   552   000034                     	ds	2
   553   000036                     ___fltol@sign1:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x35
   557   000036                     	ds	1
   558   000037                     ___fltol@exp1:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x36
   562   000037                     	ds	1
   563   000038                     colour_read_all@c:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x37
   567   000038                     	ds	2
   568   00003A                     colour_read_all@cf:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x39
   572   00003A                     	ds	2
   573   00003C                     ??_colour_read_all:
   574   00003C                     dtoa@i:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x3B
   578   00003C                     	ds	2
   579   00003E                     dtoa@s:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x3D
   583   00003E                     	ds	1
   584   00003F                     vfpfcnvrt@fp:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x3E
   588   00003F                     	ds	2
   589   000041                     vfpfcnvrt@fmt:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x40
   593   000041                     	ds	2
   594   000043                     vfpfcnvrt@ap:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x42
   598   000043                     	ds	2
   599   000045                     ??_vfpfcnvrt:
   600                           
   601                           ; 1 bytes @ 0x44
   602   000045                     	ds	2
   603   000047                     vfpfcnvrt@convarg:
   604                           	callstack 0
   605                           
   606                           ; 8 bytes @ 0x46
   607   000047                     	ds	1
   608   000048                     colour_read_all@total:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x47
   612   000048                     	ds	2
   613   00004A                     colour_read_all@rel:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x49
   617   00004A                     	ds	5
   618   00004F                     vfpfcnvrt@cp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x4E
   622   00004F                     	ds	2
   623   000051                     ?_vfprintf:
   624                           	callstack 0
   625   000051                     vfprintf@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x50
   629   000051                     	ds	2
   630   000053                     vfprintf@fmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x52
   634   000053                     	ds	2
   635   000055                     vfprintf@ap:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x54
   639   000055                     	ds	2
   640   000057                     vfprintf@cfmt:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x56
   644   000057                     	ds	2
   645   000059                     Color2String@buf:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x58
   649   000059                     	ds	2
   650   00005B                     Color2String@colorf:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x5A
   654   00005B                     	ds	2
   655   00005D                     ??_main:
   656                           
   657                           ; 1 bytes @ 0x5C
   658   00005D                     	ds	2
   659                           
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 13 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  data           30   25[BANK0 ] unsigned char [30]
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   680 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   682 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   683 ;;Total ram usage:       32 bytes
   684 ;; Hardware stack levels required when called: 9
   685 ;; This function calls:
   686 ;;		_Color2String
   687 ;;		_I2C_2_Master_Init
   688 ;;		_color_click_init
   689 ;;		_colour_read_all
   690 ;;		_initUSART4
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text0
   697   00205A                     __ptext0:
   698                           	callstack 0
   699   00205A                     _main:
   700                           	callstack 22
   701   00205A                     
   702                           ;main.c: 14:     char data[30];;main.c: 15:     initUSART4();
   703   00205A  EC40  F012         	call	_initUSART4	;wreg free
   704   00205E                     
   705                           ;main.c: 16:     color_click_init();
   706   00205E  EC8A  F011         	call	_color_click_init	;wreg free
   707   002062                     
   708                           ;main.c: 17:     I2C_2_Master_Init();
   709   002062  EC04  F012         	call	_I2C_2_Master_Init	;wreg free
   710   002066                     l2217:
   711                           
   712                           ;main.c: 19:         colour_read_all(&color,&colorf);
   713   002066  0EA4               	movlw	low _color
   714   002068  6E38               	movwf	colour_read_all@c^0,c
   715   00206A  0E00               	movlw	high _color
   716   00206C  6E39               	movwf	(colour_read_all@c+1)^0,c
   717   00206E  0E9C               	movlw	low _colorf
   718   002070  6E3A               	movwf	colour_read_all@cf^0,c
   719   002072  0E00               	movlw	high _colorf
   720   002074  6E3B               	movwf	(colour_read_all@cf+1)^0,c
   721   002076  ECE0  F008         	call	_colour_read_all	;wreg free
   722   00207A                     
   723                           ;main.c: 21:         Color2String(data,&colorf);
   724   00207A  0EC5               	movlw	low main@data
   725   00207C  6E59               	movwf	Color2String@buf^0,c
   726   00207E  0E00               	movlw	high main@data
   727   002080  6E5A               	movwf	(Color2String@buf+1)^0,c
   728   002082  0E9C               	movlw	low _colorf
   729   002084  6E5B               	movwf	Color2String@colorf^0,c
   730   002086  0E00               	movlw	high _colorf
   731   002088  6E5C               	movwf	(Color2String@colorf+1)^0,c
   732   00208A  ECF5  F00F         	call	_Color2String	;wreg free
   733   00208E                     
   734                           ;main.c: 22:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   735   00208E  0E52               	movlw	82
   736   002090  6E5E               	movwf	(??_main+1)^0,c
   737   002092  0E2B               	movlw	43
   738   002094  6E5D               	movwf	??_main^0,c
   739   002096  0E00               	movlw	0
   740   002098                     u1647:
   741   002098  2EE8               	decfsz	wreg,f,c
   742   00209A  D7FE               	bra	u1647
   743   00209C  2E5D               	decfsz	??_main^0,f,c
   744   00209E  D7FC               	bra	u1647
   745   0020A0  2E5E               	decfsz	(??_main+1)^0,f,c
   746   0020A2  D7FA               	bra	u1647
   747   0020A4  D000               	nop2	
   748   0020A6  EF33  F010         	goto	l2217
   749   0020AA  EF00  F000         	goto	start
   750   0020AE                     __end_of_main:
   751                           	callstack 0
   752                           
   753 ;; *************** function _initUSART4 *****************
   754 ;; Defined at:
   755 ;;		line 6 in file "serial.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text1
   783   002480                     __ptext1:
   784                           	callstack 0
   785   002480                     _initUSART4:
   786                           	callstack 30
   787   002480                     
   788                           ;serial.c: 7:     TRISCbits.TRISC4=1;
   789   002480  8883               	bsf	131,4,c	;volatile
   790                           
   791                           ;serial.c: 8:     TRISCbits.TRISC1=1;
   792   002482  8283               	bsf	131,1,c	;volatile
   793   002484                     
   794                           ;serial.c: 9:     RC0PPS = 0x12;
   795   002484  0E12               	movlw	18
   796   002486  010E               	movlb	14	; () banked
   797   002488  6F62               	movwf	98,b	;volatile
   798                           
   799                           ;serial.c: 10:     RX4PPS = 0x11;
   800   00248A  0E11               	movlw	17
   801   00248C  6F15               	movwf	21,b	;volatile
   802   00248E                     
   803                           ; BSR set to: 14
   804                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   805   00248E  97E9               	bcf	233,3,b	;volatile
   806   002490                     
   807                           ; BSR set to: 14
   808                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   809   002490  95E8               	bcf	232,2,b	;volatile
   810                           
   811                           ;serial.c: 14:     SP4BRGL = 51;
   812   002492  0E33               	movlw	51
   813   002494  6FE5               	movwf	229,b	;volatile
   814                           
   815                           ;serial.c: 15:     SP4BRGH = 0;
   816   002496  0E00               	movlw	0
   817   002498  6FE6               	movwf	230,b	;volatile
   818   00249A                     
   819                           ; BSR set to: 14
   820                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   821   00249A  89E7               	bsf	231,4,b	;volatile
   822   00249C                     
   823                           ; BSR set to: 14
   824                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   825   00249C  8BE8               	bsf	232,5,b	;volatile
   826   00249E                     
   827                           ; BSR set to: 14
   828                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   829   00249E  8FE7               	bsf	231,7,b	;volatile
   830   0024A0                     
   831                           ; BSR set to: 14
   832   0024A0  0012               	return		;funcret
   833   0024A2                     __end_of_initUSART4:
   834                           	callstack 0
   835                           
   836 ;; *************** function _colour_read_all *****************
   837 ;; Defined at:
   838 ;;		line 112 in file "color.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  c               2   55[COMRAM] PTR struct RGBC
   841 ;;		 -> color(8), 
   842 ;;  cf              2   57[COMRAM] PTR struct RGBC_rel
   843 ;;		 -> colorf(8), 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  rel             4   73[COMRAM] float 
   846 ;;  total           2   71[COMRAM] int 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   859 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;Total ram usage:       22 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 3
   863 ;; This function calls:
   864 ;;		___fldiv
   865 ;;		___fltol
   866 ;;		___wmul
   867 ;;		___xxtofl
   868 ;;		_color_read_Blue
   869 ;;		_color_read_Clear
   870 ;;		_color_read_Green
   871 ;;		_color_read_Red
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text2
   878   0011C0                     __ptext2:
   879                           	callstack 0
   880   0011C0                     _colour_read_all:
   881                           	callstack 27
   882   0011C0                     
   883                           ;color.c: 114:     c->R = color_read_Red();
   884   0011C0  EC80  F010         	call	_color_read_Red	;wreg free
   885   0011C4  C038  FFD9         	movff	colour_read_all@c,fsr2l
   886   0011C8  C039  FFDA         	movff	colour_read_all@c+1,fsr2h
   887   0011CC  C005  FFDE         	movff	?_color_read_Red,postinc2
   888   0011D0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
   889                           
   890                           ;color.c: 115:     c->G = color_read_Green();
   891   0011D4  ECA8  F010         	call	_color_read_Green	;wreg free
   892   0011D8  EE20 F002          	lfsr	2,2
   893   0011DC  5038               	movf	colour_read_all@c^0,w,c
   894   0011DE  26D9               	addwf	fsr2l,f,c
   895   0011E0  5039               	movf	(colour_read_all@c+1)^0,w,c
   896   0011E2  22DA               	addwfc	fsr2h,f,c
   897   0011E4  C005  FFDE         	movff	?_color_read_Green,postinc2
   898   0011E8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
   899                           
   900                           ;color.c: 116:     c->B = color_read_Blue();
   901   0011EC  ECF8  F010         	call	_color_read_Blue	;wreg free
   902   0011F0  EE20 F004          	lfsr	2,4
   903   0011F4  5038               	movf	colour_read_all@c^0,w,c
   904   0011F6  26D9               	addwf	fsr2l,f,c
   905   0011F8  5039               	movf	(colour_read_all@c+1)^0,w,c
   906   0011FA  22DA               	addwfc	fsr2h,f,c
   907   0011FC  C005  FFDE         	movff	?_color_read_Blue,postinc2
   908   001200  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
   909                           
   910                           ;color.c: 117:     c->C = color_read_Clear();
   911   001204  ECD0  F010         	call	_color_read_Clear	;wreg free
   912   001208  EE20 F006          	lfsr	2,6
   913   00120C  5038               	movf	colour_read_all@c^0,w,c
   914   00120E  26D9               	addwf	fsr2l,f,c
   915   001210  5039               	movf	(colour_read_all@c+1)^0,w,c
   916   001212  22DA               	addwfc	fsr2h,f,c
   917   001214  C005  FFDE         	movff	?_color_read_Clear,postinc2
   918   001218  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
   919   00121C                     
   920                           ;color.c: 119:     int total=(c->R)+(c->G)+(c->B)+(c->C);
   921   00121C  EE20 F006          	lfsr	2,6
   922   001220  5038               	movf	colour_read_all@c^0,w,c
   923   001222  26D9               	addwf	fsr2l,f,c
   924   001224  5039               	movf	(colour_read_all@c+1)^0,w,c
   925   001226  22DA               	addwfc	fsr2h,f,c
   926   001228  CFDE F03C          	movff	postinc2,??_colour_read_all
   927   00122C  CFDD F03D          	movff	postdec2,??_colour_read_all+1
   928   001230  EE20 F004          	lfsr	2,4
   929   001234  5038               	movf	colour_read_all@c^0,w,c
   930   001236  26D9               	addwf	fsr2l,f,c
   931   001238  5039               	movf	(colour_read_all@c+1)^0,w,c
   932   00123A  22DA               	addwfc	fsr2h,f,c
   933   00123C  CFDE F03E          	movff	postinc2,??_colour_read_all+2
   934   001240  CFDD F03F          	movff	postdec2,??_colour_read_all+3
   935   001244  EE20 F002          	lfsr	2,2
   936   001248  5038               	movf	colour_read_all@c^0,w,c
   937   00124A  26D9               	addwf	fsr2l,f,c
   938   00124C  5039               	movf	(colour_read_all@c+1)^0,w,c
   939   00124E  22DA               	addwfc	fsr2h,f,c
   940   001250  CFDE F040          	movff	postinc2,??_colour_read_all+4
   941   001254  CFDD F041          	movff	postdec2,??_colour_read_all+5
   942   001258  C038  FFD9         	movff	colour_read_all@c,fsr2l
   943   00125C  C039  FFDA         	movff	colour_read_all@c+1,fsr2h
   944   001260  CFDE F042          	movff	postinc2,??_colour_read_all+6
   945   001264  CFDD F043          	movff	postdec2,??_colour_read_all+7
   946   001268  5040               	movf	(??_colour_read_all+4)^0,w,c
   947   00126A  2442               	addwf	(??_colour_read_all+6)^0,w,c
   948   00126C  6E44               	movwf	(??_colour_read_all+8)^0,c
   949   00126E  5041               	movf	(??_colour_read_all+5)^0,w,c
   950   001270  2043               	addwfc	(??_colour_read_all+7)^0,w,c
   951   001272  6E45               	movwf	(??_colour_read_all+9)^0,c
   952   001274  503E               	movf	(??_colour_read_all+2)^0,w,c
   953   001276  2444               	addwf	(??_colour_read_all+8)^0,w,c
   954   001278  6E46               	movwf	(??_colour_read_all+10)^0,c
   955   00127A  503F               	movf	(??_colour_read_all+3)^0,w,c
   956   00127C  2045               	addwfc	(??_colour_read_all+9)^0,w,c
   957   00127E  6E47               	movwf	(??_colour_read_all+11)^0,c
   958   001280  503C               	movf	??_colour_read_all^0,w,c
   959   001282  2446               	addwf	(??_colour_read_all+10)^0,w,c
   960   001284  6E48               	movwf	colour_read_all@total^0,c
   961   001286  503D               	movf	(??_colour_read_all+1)^0,w,c
   962   001288  2047               	addwfc	(??_colour_read_all+11)^0,w,c
   963   00128A  6E49               	movwf	(colour_read_all@total+1)^0,c
   964   00128C                     
   965                           ;color.c: 121:     float rel= ((c->R) * 10000);
   966   00128C  C038  FFD9         	movff	colour_read_all@c,fsr2l
   967   001290  C039  FFDA         	movff	colour_read_all@c+1,fsr2h
   968   001294  CFDE F001          	movff	postinc2,___wmul@multiplier
   969   001298  CFDD F002          	movff	postdec2,___wmul@multiplier+1
   970   00129C  0E27               	movlw	39
   971   00129E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   972   0012A0  0E10               	movlw	16
   973   0012A2  6E03               	movwf	___wmul@multiplicand^0,c
   974   0012A4  EC2D  F012         	call	___wmul	;wreg free
   975   0012A8  C001  F007         	movff	?___wmul,___xxtofl@val
   976   0012AC  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
   977   0012B0  0E00               	movlw	0
   978   0012B2  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
   979   0012B4  0EFF               	movlw	-1
   980   0012B6  6E09               	movwf	(___xxtofl@val+2)^0,c
   981   0012B8  6E0A               	movwf	(___xxtofl@val+3)^0,c
   982   0012BA  0E01               	movlw	1
   983   0012BC  ECD9  F00B         	call	___xxtofl
   984   0012C0  C007  F04A         	movff	?___xxtofl,colour_read_all@rel
   985   0012C4  C008  F04B         	movff	?___xxtofl+1,colour_read_all@rel+1
   986   0012C8  C009  F04C         	movff	?___xxtofl+2,colour_read_all@rel+2
   987   0012CC  C00A  F04D         	movff	?___xxtofl+3,colour_read_all@rel+3
   988   0012D0                     
   989                           ;color.c: 122:     (cf->Rf)=rel/total;
   990   0012D0  C048  F007         	movff	colour_read_all@total,___xxtofl@val
   991   0012D4  C049  F008         	movff	colour_read_all@total+1,___xxtofl@val+1
   992   0012D8  0E00               	movlw	0
   993   0012DA  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
   994   0012DC  0EFF               	movlw	-1
   995   0012DE  6E09               	movwf	(___xxtofl@val+2)^0,c
   996   0012E0  6E0A               	movwf	(___xxtofl@val+3)^0,c
   997   0012E2  0E01               	movlw	1
   998   0012E4  ECD9  F00B         	call	___xxtofl
   999   0012E8  C007  F019         	movff	?___xxtofl,___fldiv@a
  1000   0012EC  C008  F01A         	movff	?___xxtofl+1,___fldiv@a+1
  1001   0012F0  C009  F01B         	movff	?___xxtofl+2,___fldiv@a+2
  1002   0012F4  C00A  F01C         	movff	?___xxtofl+3,___fldiv@a+3
  1003   0012F8  C04A  F015         	movff	colour_read_all@rel,___fldiv@b
  1004   0012FC  C04B  F016         	movff	colour_read_all@rel+1,___fldiv@b+1
  1005   001300  C04C  F017         	movff	colour_read_all@rel+2,___fldiv@b+2
  1006   001304  C04D  F018         	movff	colour_read_all@rel+3,___fldiv@b+3
  1007   001308  EC13  F007         	call	___fldiv	;wreg free
  1008   00130C  C015  F02E         	movff	?___fldiv,___fltol@f1
  1009   001310  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  1010   001314  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  1011   001318  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  1012   00131C  ECD0  F00E         	call	___fltol	;wreg free
  1013   001320  C03A  FFD9         	movff	colour_read_all@cf,fsr2l
  1014   001324  C03B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1015   001328  C02E  FFDE         	movff	?___fltol,postinc2
  1016   00132C  C02F  FFDD         	movff	?___fltol+1,postdec2
  1017   001330                     
  1018                           ;color.c: 123:     rel= ((c->B) * 10000);
  1019   001330  EE20 F004          	lfsr	2,4
  1020   001334  5038               	movf	colour_read_all@c^0,w,c
  1021   001336  26D9               	addwf	fsr2l,f,c
  1022   001338  5039               	movf	(colour_read_all@c+1)^0,w,c
  1023   00133A  22DA               	addwfc	fsr2h,f,c
  1024   00133C  CFDE F001          	movff	postinc2,___wmul@multiplier
  1025   001340  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1026   001344  0E27               	movlw	39
  1027   001346  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1028   001348  0E10               	movlw	16
  1029   00134A  6E03               	movwf	___wmul@multiplicand^0,c
  1030   00134C  EC2D  F012         	call	___wmul	;wreg free
  1031   001350  C001  F007         	movff	?___wmul,___xxtofl@val
  1032   001354  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  1033   001358  0E00               	movlw	0
  1034   00135A  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1035   00135C  0EFF               	movlw	-1
  1036   00135E  6E09               	movwf	(___xxtofl@val+2)^0,c
  1037   001360  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1038   001362  0E01               	movlw	1
  1039   001364  ECD9  F00B         	call	___xxtofl
  1040   001368  C007  F04A         	movff	?___xxtofl,colour_read_all@rel
  1041   00136C  C008  F04B         	movff	?___xxtofl+1,colour_read_all@rel+1
  1042   001370  C009  F04C         	movff	?___xxtofl+2,colour_read_all@rel+2
  1043   001374  C00A  F04D         	movff	?___xxtofl+3,colour_read_all@rel+3
  1044   001378                     
  1045                           ;color.c: 124:     (cf->Bf)=rel/total;
  1046   001378  C048  F007         	movff	colour_read_all@total,___xxtofl@val
  1047   00137C  C049  F008         	movff	colour_read_all@total+1,___xxtofl@val+1
  1048   001380  0E00               	movlw	0
  1049   001382  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1050   001384  0EFF               	movlw	-1
  1051   001386  6E09               	movwf	(___xxtofl@val+2)^0,c
  1052   001388  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1053   00138A  0E01               	movlw	1
  1054   00138C  ECD9  F00B         	call	___xxtofl
  1055   001390  C007  F019         	movff	?___xxtofl,___fldiv@a
  1056   001394  C008  F01A         	movff	?___xxtofl+1,___fldiv@a+1
  1057   001398  C009  F01B         	movff	?___xxtofl+2,___fldiv@a+2
  1058   00139C  C00A  F01C         	movff	?___xxtofl+3,___fldiv@a+3
  1059   0013A0  C04A  F015         	movff	colour_read_all@rel,___fldiv@b
  1060   0013A4  C04B  F016         	movff	colour_read_all@rel+1,___fldiv@b+1
  1061   0013A8  C04C  F017         	movff	colour_read_all@rel+2,___fldiv@b+2
  1062   0013AC  C04D  F018         	movff	colour_read_all@rel+3,___fldiv@b+3
  1063   0013B0  EC13  F007         	call	___fldiv	;wreg free
  1064   0013B4  C015  F02E         	movff	?___fldiv,___fltol@f1
  1065   0013B8  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  1066   0013BC  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  1067   0013C0  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  1068   0013C4  ECD0  F00E         	call	___fltol	;wreg free
  1069   0013C8  EE20 F004          	lfsr	2,4
  1070   0013CC  503A               	movf	colour_read_all@cf^0,w,c
  1071   0013CE  26D9               	addwf	fsr2l,f,c
  1072   0013D0  503B               	movf	(colour_read_all@cf+1)^0,w,c
  1073   0013D2  22DA               	addwfc	fsr2h,f,c
  1074   0013D4  C02E  FFDE         	movff	?___fltol,postinc2
  1075   0013D8  C02F  FFDD         	movff	?___fltol+1,postdec2
  1076   0013DC                     
  1077                           ;color.c: 125:      rel= ((c->G) * 10000);
  1078   0013DC  EE20 F002          	lfsr	2,2
  1079   0013E0  5038               	movf	colour_read_all@c^0,w,c
  1080   0013E2  26D9               	addwf	fsr2l,f,c
  1081   0013E4  5039               	movf	(colour_read_all@c+1)^0,w,c
  1082   0013E6  22DA               	addwfc	fsr2h,f,c
  1083   0013E8  CFDE F001          	movff	postinc2,___wmul@multiplier
  1084   0013EC  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1085   0013F0  0E27               	movlw	39
  1086   0013F2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1087   0013F4  0E10               	movlw	16
  1088   0013F6  6E03               	movwf	___wmul@multiplicand^0,c
  1089   0013F8  EC2D  F012         	call	___wmul	;wreg free
  1090   0013FC  C001  F007         	movff	?___wmul,___xxtofl@val
  1091   001400  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  1092   001404  0E00               	movlw	0
  1093   001406  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1094   001408  0EFF               	movlw	-1
  1095   00140A  6E09               	movwf	(___xxtofl@val+2)^0,c
  1096   00140C  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1097   00140E  0E01               	movlw	1
  1098   001410  ECD9  F00B         	call	___xxtofl
  1099   001414  C007  F04A         	movff	?___xxtofl,colour_read_all@rel
  1100   001418  C008  F04B         	movff	?___xxtofl+1,colour_read_all@rel+1
  1101   00141C  C009  F04C         	movff	?___xxtofl+2,colour_read_all@rel+2
  1102   001420  C00A  F04D         	movff	?___xxtofl+3,colour_read_all@rel+3
  1103   001424                     
  1104                           ;color.c: 126:     (cf->Gf)=rel/total;
  1105   001424  C048  F007         	movff	colour_read_all@total,___xxtofl@val
  1106   001428  C049  F008         	movff	colour_read_all@total+1,___xxtofl@val+1
  1107   00142C  0E00               	movlw	0
  1108   00142E  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1109   001430  0EFF               	movlw	-1
  1110   001432  6E09               	movwf	(___xxtofl@val+2)^0,c
  1111   001434  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1112   001436  0E01               	movlw	1
  1113   001438  ECD9  F00B         	call	___xxtofl
  1114   00143C  C007  F019         	movff	?___xxtofl,___fldiv@a
  1115   001440  C008  F01A         	movff	?___xxtofl+1,___fldiv@a+1
  1116   001444  C009  F01B         	movff	?___xxtofl+2,___fldiv@a+2
  1117   001448  C00A  F01C         	movff	?___xxtofl+3,___fldiv@a+3
  1118   00144C  C04A  F015         	movff	colour_read_all@rel,___fldiv@b
  1119   001450  C04B  F016         	movff	colour_read_all@rel+1,___fldiv@b+1
  1120   001454  C04C  F017         	movff	colour_read_all@rel+2,___fldiv@b+2
  1121   001458  C04D  F018         	movff	colour_read_all@rel+3,___fldiv@b+3
  1122   00145C  EC13  F007         	call	___fldiv	;wreg free
  1123   001460  C015  F02E         	movff	?___fldiv,___fltol@f1
  1124   001464  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  1125   001468  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  1126   00146C  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  1127   001470  ECD0  F00E         	call	___fltol	;wreg free
  1128   001474  EE20 F002          	lfsr	2,2
  1129   001478  503A               	movf	colour_read_all@cf^0,w,c
  1130   00147A  26D9               	addwf	fsr2l,f,c
  1131   00147C  503B               	movf	(colour_read_all@cf+1)^0,w,c
  1132   00147E  22DA               	addwfc	fsr2h,f,c
  1133   001480  C02E  FFDE         	movff	?___fltol,postinc2
  1134   001484  C02F  FFDD         	movff	?___fltol+1,postdec2
  1135   001488                     
  1136                           ;color.c: 127:      rel= ((c->C) * 10000);
  1137   001488  EE20 F006          	lfsr	2,6
  1138   00148C  5038               	movf	colour_read_all@c^0,w,c
  1139   00148E  26D9               	addwf	fsr2l,f,c
  1140   001490  5039               	movf	(colour_read_all@c+1)^0,w,c
  1141   001492  22DA               	addwfc	fsr2h,f,c
  1142   001494  CFDE F001          	movff	postinc2,___wmul@multiplier
  1143   001498  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  1144   00149C  0E27               	movlw	39
  1145   00149E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1146   0014A0  0E10               	movlw	16
  1147   0014A2  6E03               	movwf	___wmul@multiplicand^0,c
  1148   0014A4  EC2D  F012         	call	___wmul	;wreg free
  1149   0014A8  C001  F007         	movff	?___wmul,___xxtofl@val
  1150   0014AC  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  1151   0014B0  0E00               	movlw	0
  1152   0014B2  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1153   0014B4  0EFF               	movlw	-1
  1154   0014B6  6E09               	movwf	(___xxtofl@val+2)^0,c
  1155   0014B8  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1156   0014BA  0E01               	movlw	1
  1157   0014BC  ECD9  F00B         	call	___xxtofl
  1158   0014C0  C007  F04A         	movff	?___xxtofl,colour_read_all@rel
  1159   0014C4  C008  F04B         	movff	?___xxtofl+1,colour_read_all@rel+1
  1160   0014C8  C009  F04C         	movff	?___xxtofl+2,colour_read_all@rel+2
  1161   0014CC  C00A  F04D         	movff	?___xxtofl+3,colour_read_all@rel+3
  1162   0014D0                     
  1163                           ;color.c: 128:     (cf->Cf)=rel/total;
  1164   0014D0  C048  F007         	movff	colour_read_all@total,___xxtofl@val
  1165   0014D4  C049  F008         	movff	colour_read_all@total+1,___xxtofl@val+1
  1166   0014D8  0E00               	movlw	0
  1167   0014DA  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  1168   0014DC  0EFF               	movlw	-1
  1169   0014DE  6E09               	movwf	(___xxtofl@val+2)^0,c
  1170   0014E0  6E0A               	movwf	(___xxtofl@val+3)^0,c
  1171   0014E2  0E01               	movlw	1
  1172   0014E4  ECD9  F00B         	call	___xxtofl
  1173   0014E8  C007  F019         	movff	?___xxtofl,___fldiv@a
  1174   0014EC  C008  F01A         	movff	?___xxtofl+1,___fldiv@a+1
  1175   0014F0  C009  F01B         	movff	?___xxtofl+2,___fldiv@a+2
  1176   0014F4  C00A  F01C         	movff	?___xxtofl+3,___fldiv@a+3
  1177   0014F8  C04A  F015         	movff	colour_read_all@rel,___fldiv@b
  1178   0014FC  C04B  F016         	movff	colour_read_all@rel+1,___fldiv@b+1
  1179   001500  C04C  F017         	movff	colour_read_all@rel+2,___fldiv@b+2
  1180   001504  C04D  F018         	movff	colour_read_all@rel+3,___fldiv@b+3
  1181   001508  EC13  F007         	call	___fldiv	;wreg free
  1182   00150C  C015  F02E         	movff	?___fldiv,___fltol@f1
  1183   001510  C016  F02F         	movff	?___fldiv+1,___fltol@f1+1
  1184   001514  C017  F030         	movff	?___fldiv+2,___fltol@f1+2
  1185   001518  C018  F031         	movff	?___fldiv+3,___fltol@f1+3
  1186   00151C  ECD0  F00E         	call	___fltol	;wreg free
  1187   001520  EE20 F006          	lfsr	2,6
  1188   001524  503A               	movf	colour_read_all@cf^0,w,c
  1189   001526  26D9               	addwf	fsr2l,f,c
  1190   001528  503B               	movf	(colour_read_all@cf+1)^0,w,c
  1191   00152A  22DA               	addwfc	fsr2h,f,c
  1192   00152C  C02E  FFDE         	movff	?___fltol,postinc2
  1193   001530  C02F  FFDD         	movff	?___fltol+1,postdec2
  1194   001534  0012               	return		;funcret
  1195   001536                     __end_of_colour_read_all:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _color_read_Red *****************
  1199 ;; Defined at:
  1200 ;;		line 56 in file "color.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  tmp             2    9[COMRAM] unsigned int 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2    4[COMRAM] unsigned int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;Total ram usage:        7 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 2
  1221 ;; This function calls:
  1222 ;;		_I2C_2_Master_Read
  1223 ;;		_I2C_2_Master_RepStart
  1224 ;;		_I2C_2_Master_Start
  1225 ;;		_I2C_2_Master_Stop
  1226 ;;		_I2C_2_Master_Write
  1227 ;; This function is called by:
  1228 ;;		_colour_read_all
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233   002100                     __ptext3:
  1234                           	callstack 0
  1235   002100                     _color_read_Red:
  1236                           	callstack 27
  1237   002100                     
  1238                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  1239   002100  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  1240                           
  1241                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  1242   002104  0E52               	movlw	82
  1243   002106  EC83  F012         	call	_I2C_2_Master_Write
  1244                           
  1245                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
  1246   00210A  0EB6               	movlw	182
  1247   00210C  EC83  F012         	call	_I2C_2_Master_Write
  1248                           
  1249                           ;color.c: 62:  I2C_2_Master_RepStart();
  1250   002110  EC89  F012         	call	_I2C_2_Master_RepStart	;wreg free
  1251                           
  1252                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  1253   002114  0E53               	movlw	83
  1254   002116  EC83  F012         	call	_I2C_2_Master_Write
  1255                           
  1256                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  1257   00211A  0E01               	movlw	1
  1258   00211C  EC69  F011         	call	_I2C_2_Master_Read
  1259   002120  6E07               	movwf	??_color_read_Red^0,c
  1260   002122  5007               	movf	??_color_read_Red^0,w,c
  1261   002124  6E0A               	movwf	color_read_Red@tmp^0,c
  1262   002126  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1263                           
  1264                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1265   002128  0E00               	movlw	0
  1266   00212A  EC69  F011         	call	_I2C_2_Master_Read
  1267   00212E  6E07               	movwf	??_color_read_Red^0,c
  1268   002130  5007               	movf	??_color_read_Red^0,w,c
  1269   002132  6E09               	movwf	(??_color_read_Red+2)^0,c
  1270   002134  6A08               	clrf	(??_color_read_Red+1)^0,c
  1271   002136  500A               	movf	color_read_Red@tmp^0,w,c
  1272   002138  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1273   00213A  6E0A               	movwf	color_read_Red@tmp^0,c
  1274   00213C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1275   00213E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1276   002140  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1277                           
  1278                           ;color.c: 66:  I2C_2_Master_Stop();
  1279   002142  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  1280   002146                     
  1281                           ;color.c: 67:  return tmp;
  1282   002146  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1283   00214A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1284   00214E  0012               	return		;funcret
  1285   002150                     __end_of_color_read_Red:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _color_read_Green *****************
  1289 ;; Defined at:
  1290 ;;		line 69 in file "color.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  tmp             2    9[COMRAM] unsigned int 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2    4[COMRAM] unsigned int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;Total ram usage:        7 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 2
  1311 ;; This function calls:
  1312 ;;		_I2C_2_Master_Read
  1313 ;;		_I2C_2_Master_RepStart
  1314 ;;		_I2C_2_Master_Start
  1315 ;;		_I2C_2_Master_Stop
  1316 ;;		_I2C_2_Master_Write
  1317 ;; This function is called by:
  1318 ;;		_colour_read_all
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text4
  1323   002150                     __ptext4:
  1324                           	callstack 0
  1325   002150                     _color_read_Green:
  1326                           	callstack 27
  1327   002150                     
  1328                           ;color.c: 71:     unsigned int tmp;;color.c: 72:     I2C_2_Master_Start();
  1329   002150  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  1330                           
  1331                           ;color.c: 73:     I2C_2_Master_Write(0x52 | 0x00);
  1332   002154  0E52               	movlw	82
  1333   002156  EC83  F012         	call	_I2C_2_Master_Write
  1334                           
  1335                           ;color.c: 74:     I2C_2_Master_Write(0xA0 | 0x18);
  1336   00215A  0EB8               	movlw	184
  1337   00215C  EC83  F012         	call	_I2C_2_Master_Write
  1338                           
  1339                           ;color.c: 75:     I2C_2_Master_RepStart();
  1340   002160  EC89  F012         	call	_I2C_2_Master_RepStart	;wreg free
  1341                           
  1342                           ;color.c: 76:     I2C_2_Master_Write(0x52 | 0x01);
  1343   002164  0E53               	movlw	83
  1344   002166  EC83  F012         	call	_I2C_2_Master_Write
  1345                           
  1346                           ;color.c: 77:     tmp=I2C_2_Master_Read(1);
  1347   00216A  0E01               	movlw	1
  1348   00216C  EC69  F011         	call	_I2C_2_Master_Read
  1349   002170  6E07               	movwf	??_color_read_Green^0,c
  1350   002172  5007               	movf	??_color_read_Green^0,w,c
  1351   002174  6E0A               	movwf	color_read_Green@tmp^0,c
  1352   002176  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1353                           
  1354                           ;color.c: 78:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1355   002178  0E00               	movlw	0
  1356   00217A  EC69  F011         	call	_I2C_2_Master_Read
  1357   00217E  6E07               	movwf	??_color_read_Green^0,c
  1358   002180  5007               	movf	??_color_read_Green^0,w,c
  1359   002182  6E09               	movwf	(??_color_read_Green+2)^0,c
  1360   002184  6A08               	clrf	(??_color_read_Green+1)^0,c
  1361   002186  500A               	movf	color_read_Green@tmp^0,w,c
  1362   002188  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1363   00218A  6E0A               	movwf	color_read_Green@tmp^0,c
  1364   00218C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1365   00218E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1366   002190  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1367                           
  1368                           ;color.c: 79:     I2C_2_Master_Stop();
  1369   002192  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  1370   002196                     
  1371                           ;color.c: 80:     return tmp;
  1372   002196  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1373   00219A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1374   00219E  0012               	return		;funcret
  1375   0021A0                     __end_of_color_read_Green:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _color_read_Clear *****************
  1379 ;; Defined at:
  1380 ;;		line 98 in file "color.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  tmp             2    9[COMRAM] unsigned int 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2    4[COMRAM] unsigned int 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;Total ram usage:        7 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		_I2C_2_Master_Read
  1403 ;;		_I2C_2_Master_RepStart
  1404 ;;		_I2C_2_Master_Start
  1405 ;;		_I2C_2_Master_Stop
  1406 ;;		_I2C_2_Master_Write
  1407 ;; This function is called by:
  1408 ;;		_colour_read_all
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text5
  1413   0021A0                     __ptext5:
  1414                           	callstack 0
  1415   0021A0                     _color_read_Clear:
  1416                           	callstack 27
  1417   0021A0                     
  1418                           ;color.c: 100:     unsigned int tmp;;color.c: 101:     I2C_2_Master_Start();
  1419   0021A0  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  1420                           
  1421                           ;color.c: 102:     I2C_2_Master_Write(0x52 | 0x00);
  1422   0021A4  0E52               	movlw	82
  1423   0021A6  EC83  F012         	call	_I2C_2_Master_Write
  1424                           
  1425                           ;color.c: 103:     I2C_2_Master_Write(0xA0 | 0x14);
  1426   0021AA  0EB4               	movlw	180
  1427   0021AC  EC83  F012         	call	_I2C_2_Master_Write
  1428                           
  1429                           ;color.c: 104:     I2C_2_Master_RepStart();
  1430   0021B0  EC89  F012         	call	_I2C_2_Master_RepStart	;wreg free
  1431                           
  1432                           ;color.c: 105:     I2C_2_Master_Write(0x52 | 0x01);
  1433   0021B4  0E53               	movlw	83
  1434   0021B6  EC83  F012         	call	_I2C_2_Master_Write
  1435                           
  1436                           ;color.c: 106:     tmp=I2C_2_Master_Read(1);
  1437   0021BA  0E01               	movlw	1
  1438   0021BC  EC69  F011         	call	_I2C_2_Master_Read
  1439   0021C0  6E07               	movwf	??_color_read_Clear^0,c
  1440   0021C2  5007               	movf	??_color_read_Clear^0,w,c
  1441   0021C4  6E0A               	movwf	color_read_Clear@tmp^0,c
  1442   0021C6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1443                           
  1444                           ;color.c: 107:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1445   0021C8  0E00               	movlw	0
  1446   0021CA  EC69  F011         	call	_I2C_2_Master_Read
  1447   0021CE  6E07               	movwf	??_color_read_Clear^0,c
  1448   0021D0  5007               	movf	??_color_read_Clear^0,w,c
  1449   0021D2  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1450   0021D4  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1451   0021D6  500A               	movf	color_read_Clear@tmp^0,w,c
  1452   0021D8  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1453   0021DA  6E0A               	movwf	color_read_Clear@tmp^0,c
  1454   0021DC  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1455   0021DE  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1456   0021E0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1457                           
  1458                           ;color.c: 108:     I2C_2_Master_Stop();
  1459   0021E2  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  1460   0021E6                     
  1461                           ;color.c: 109:     return tmp;
  1462   0021E6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1463   0021EA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1464   0021EE  0012               	return		;funcret
  1465   0021F0                     __end_of_color_read_Clear:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _color_read_Blue *****************
  1469 ;; Defined at:
  1470 ;;		line 83 in file "color.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  tmp             2    9[COMRAM] unsigned int 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    4[COMRAM] unsigned int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;Total ram usage:        7 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 2
  1491 ;; This function calls:
  1492 ;;		_I2C_2_Master_Read
  1493 ;;		_I2C_2_Master_RepStart
  1494 ;;		_I2C_2_Master_Start
  1495 ;;		_I2C_2_Master_Stop
  1496 ;;		_I2C_2_Master_Write
  1497 ;; This function is called by:
  1498 ;;		_colour_read_all
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text6
  1503   0021F0                     __ptext6:
  1504                           	callstack 0
  1505   0021F0                     _color_read_Blue:
  1506                           	callstack 27
  1507   0021F0                     
  1508                           ;color.c: 85:     unsigned int tmp;;color.c: 86:     I2C_2_Master_Start();
  1509   0021F0  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  1510                           
  1511                           ;color.c: 87:     I2C_2_Master_Write(0x52 | 0x00);
  1512   0021F4  0E52               	movlw	82
  1513   0021F6  EC83  F012         	call	_I2C_2_Master_Write
  1514                           
  1515                           ;color.c: 88:     I2C_2_Master_Write(0xA0 | 0x1A);
  1516   0021FA  0EBA               	movlw	186
  1517   0021FC  EC83  F012         	call	_I2C_2_Master_Write
  1518                           
  1519                           ;color.c: 89:     I2C_2_Master_RepStart();
  1520   002200  EC89  F012         	call	_I2C_2_Master_RepStart	;wreg free
  1521                           
  1522                           ;color.c: 90:     I2C_2_Master_Write(0x52 | 0x01);
  1523   002204  0E53               	movlw	83
  1524   002206  EC83  F012         	call	_I2C_2_Master_Write
  1525                           
  1526                           ;color.c: 91:     tmp=I2C_2_Master_Read(1);
  1527   00220A  0E01               	movlw	1
  1528   00220C  EC69  F011         	call	_I2C_2_Master_Read
  1529   002210  6E07               	movwf	??_color_read_Blue^0,c
  1530   002212  5007               	movf	??_color_read_Blue^0,w,c
  1531   002214  6E0A               	movwf	color_read_Blue@tmp^0,c
  1532   002216  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1533                           
  1534                           ;color.c: 92:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1535   002218  0E00               	movlw	0
  1536   00221A  EC69  F011         	call	_I2C_2_Master_Read
  1537   00221E  6E07               	movwf	??_color_read_Blue^0,c
  1538   002220  5007               	movf	??_color_read_Blue^0,w,c
  1539   002222  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1540   002224  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1541   002226  500A               	movf	color_read_Blue@tmp^0,w,c
  1542   002228  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1543   00222A  6E0A               	movwf	color_read_Blue@tmp^0,c
  1544   00222C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1545   00222E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1546   002230  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1547                           
  1548                           ;color.c: 93:     I2C_2_Master_Stop();
  1549   002232  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  1550   002236                     
  1551                           ;color.c: 94:     return tmp;
  1552   002236  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1553   00223A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1554   00223E  0012               	return		;funcret
  1555   002240                     __end_of_color_read_Blue:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _I2C_2_Master_RepStart *****************
  1559 ;; Defined at:
  1560 ;;		line 33 in file "i2c.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 1
  1581 ;; This function calls:
  1582 ;;		_I2C_2_Master_Idle
  1583 ;; This function is called by:
  1584 ;;		_color_read_Red
  1585 ;;		_color_read_Green
  1586 ;;		_color_read_Blue
  1587 ;;		_color_read_Clear
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text7
  1592   002512                     __ptext7:
  1593                           	callstack 0
  1594   002512                     _I2C_2_Master_RepStart:
  1595                           	callstack 27
  1596   002512                     
  1597                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1598   002512  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  1599   002516                     
  1600                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1601   002516  010E               	movlb	14	; () banked
  1602   002518  83DA               	bsf	218,1,b	;volatile
  1603   00251A                     
  1604                           ; BSR set to: 14
  1605   00251A  0012               	return		;funcret
  1606   00251C                     __end_of_I2C_2_Master_RepStart:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _I2C_2_Master_Read *****************
  1610 ;; Defined at:
  1611 ;;		line 51 in file "i2c.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  ack             1    wreg     unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  ack             1    2[COMRAM] unsigned char 
  1616 ;;  tmp             1    3[COMRAM] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      unsigned char 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 1
  1633 ;; This function calls:
  1634 ;;		_I2C_2_Master_Idle
  1635 ;; This function is called by:
  1636 ;;		_color_read_Red
  1637 ;;		_color_read_Green
  1638 ;;		_color_read_Blue
  1639 ;;		_color_read_Clear
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text8
  1644   0022D2                     __ptext8:
  1645                           	callstack 0
  1646   0022D2                     _I2C_2_Master_Read:
  1647                           	callstack 27
  1648                           
  1649                           ; BSR set to: 14
  1650                           ;incstack = 0
  1651                           ;I2C_2_Master_Read@ack stored from wreg
  1652   0022D2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1653   0022D4                     
  1654                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1655   0022D4  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  1656   0022D8                     
  1657                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1658   0022D8  010E               	movlb	14	; () banked
  1659   0022DA  87DA               	bsf	218,3,b	;volatile
  1660                           
  1661                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1662   0022DC  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  1663   0022E0                     
  1664                           ;i2c.c: 57:   tmp = SSP2BUF;
  1665   0022E0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1666                           
  1667                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1668   0022E4  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  1669   0022E8                     
  1670                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1671   0022E8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1672   0022EA  B4D8               	btfsc	status,2,c
  1673   0022EC  EF7A  F011         	goto	u1191
  1674   0022F0  EF7E  F011         	goto	u1190
  1675   0022F4                     u1191:
  1676   0022F4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1677   0022F6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1678   0022F8  EF7F  F011         	goto	u1208
  1679   0022FC                     u1190:
  1680   0022FC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1681   0022FE                     u1208:
  1682   0022FE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1683   002300  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1684   002302  010E               	movlb	14	; () banked
  1685   002304  51DA               	movf	218,w,b	;volatile
  1686   002306  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1687   002308  0BDF               	andlw	-33
  1688   00230A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1689   00230C  6FDA               	movwf	218,b	;volatile
  1690   00230E                     
  1691                           ; BSR set to: 14
  1692                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1693   00230E  89DA               	bsf	218,4,b	;volatile
  1694   002310                     
  1695                           ; BSR set to: 14
  1696                           ;i2c.c: 61:   return tmp;
  1697   002310  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1698   002312                     
  1699                           ; BSR set to: 14
  1700   002312  0012               	return		;funcret
  1701   002314                     __end_of_I2C_2_Master_Read:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function ___xxtofl *****************
  1705 ;; Defined at:
  1706 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  sign            1    wreg     unsigned char 
  1709 ;;  val             4    6[COMRAM] long 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  sign            1   14[COMRAM] unsigned char 
  1712 ;;  arg             4   16[COMRAM] unsigned long 
  1713 ;;  exp             1   15[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  4    6[COMRAM] unsigned char 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;Total ram usage:       14 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_colour_read_all
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text9
  1737   0017B2                     __ptext9:
  1738                           	callstack 0
  1739   0017B2                     ___xxtofl:
  1740                           	callstack 29
  1741                           
  1742                           ; BSR set to: 14
  1743                           ;incstack = 0
  1744                           ;___xxtofl@sign stored from wreg
  1745   0017B2  6E0F               	movwf	___xxtofl@sign^0,c
  1746   0017B4  500F               	movf	___xxtofl@sign^0,w,c
  1747   0017B6  B4D8               	btfsc	status,2,c
  1748   0017B8  EFE0  F00B         	goto	u1541
  1749   0017BC  EFE2  F00B         	goto	u1540
  1750   0017C0                     u1541:
  1751   0017C0  EF04  F00C         	goto	l868
  1752   0017C4                     u1540:
  1753   0017C4  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  1754   0017C6  EFE9  F00B         	goto	u1550
  1755   0017CA  EFE7  F00B         	goto	u1551
  1756   0017CE                     u1551:
  1757   0017CE  EF04  F00C         	goto	l868
  1758   0017D2                     u1550:
  1759   0017D2  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  1760   0017D6  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  1761   0017DA  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  1762   0017DE  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  1763   0017E2  1E0B               	comf	??___xxtofl^0,f,c
  1764   0017E4  1E0C               	comf	(??___xxtofl+1)^0,f,c
  1765   0017E6  1E0D               	comf	(??___xxtofl+2)^0,f,c
  1766   0017E8  1E0E               	comf	(??___xxtofl+3)^0,f,c
  1767   0017EA  2A0B               	incf	??___xxtofl^0,f,c
  1768   0017EC  0E00               	movlw	0
  1769   0017EE  220C               	addwfc	(??___xxtofl+1)^0,f,c
  1770   0017F0  220D               	addwfc	(??___xxtofl+2)^0,f,c
  1771   0017F2  220E               	addwfc	(??___xxtofl+3)^0,f,c
  1772   0017F4  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  1773   0017F8  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  1774   0017FC  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  1775   001800  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  1776   001804  EF0C  F00C         	goto	l2115
  1777   001808                     l868:
  1778   001808  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  1779   00180C  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1780   001810  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1781   001814  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1782   001818                     l2115:
  1783   001818  5007               	movf	___xxtofl@val^0,w,c
  1784   00181A  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  1785   00181C  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  1786   00181E  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  1787   001820  A4D8               	btfss	status,2,c
  1788   001822  EF15  F00C         	goto	u1561
  1789   001826  EF17  F00C         	goto	u1560
  1790   00182A                     u1561:
  1791   00182A  EF21  F00C         	goto	l2121
  1792   00182E                     u1560:
  1793   00182E  0E00               	movlw	0
  1794   001830  6E07               	movwf	?___xxtofl^0,c
  1795   001832  0E00               	movlw	0
  1796   001834  6E08               	movwf	(?___xxtofl+1)^0,c
  1797   001836  0E00               	movlw	0
  1798   001838  6E09               	movwf	(?___xxtofl+2)^0,c
  1799   00183A  0E00               	movlw	0
  1800   00183C  6E0A               	movwf	(?___xxtofl+3)^0,c
  1801   00183E  EFB2  F00C         	goto	l871
  1802   001842                     l2121:
  1803   001842  0E96               	movlw	150
  1804   001844  6E10               	movwf	___xxtofl@exp^0,c
  1805   001846  EF2B  F00C         	goto	l2125
  1806   00184A                     l2123:
  1807   00184A  2A10               	incf	___xxtofl@exp^0,f,c
  1808   00184C  90D8               	bcf	status,0,c
  1809   00184E  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  1810   001850  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  1811   001852  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  1812   001854  3211               	rrcf	___xxtofl@arg^0,f,c
  1813   001856                     l2125:
  1814   001856  0E00               	movlw	0
  1815   001858  1411               	andwf	___xxtofl@arg^0,w,c
  1816   00185A  6E0B               	movwf	??___xxtofl^0,c
  1817   00185C  0E00               	movlw	0
  1818   00185E  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  1819   001860  6E0C               	movwf	(??___xxtofl+1)^0,c
  1820   001862  0E00               	movlw	0
  1821   001864  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  1822   001866  6E0D               	movwf	(??___xxtofl+2)^0,c
  1823   001868  0EFE               	movlw	254
  1824   00186A  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  1825   00186C  6E0E               	movwf	(??___xxtofl+3)^0,c
  1826   00186E  500B               	movf	??___xxtofl^0,w,c
  1827   001870  100C               	iorwf	(??___xxtofl+1)^0,w,c
  1828   001872  100D               	iorwf	(??___xxtofl+2)^0,w,c
  1829   001874  100E               	iorwf	(??___xxtofl+3)^0,w,c
  1830   001876  A4D8               	btfss	status,2,c
  1831   001878  EF40  F00C         	goto	u1571
  1832   00187C  EF42  F00C         	goto	u1570
  1833   001880                     u1571:
  1834   001880  EF25  F00C         	goto	l2123
  1835   001884                     u1570:
  1836   001884  EF50  F00C         	goto	l875
  1837   001888                     l2127:
  1838   001888  2A10               	incf	___xxtofl@exp^0,f,c
  1839   00188A  0E01               	movlw	1
  1840   00188C  2611               	addwf	___xxtofl@arg^0,f,c
  1841   00188E  0E00               	movlw	0
  1842   001890  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  1843   001892  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  1844   001894  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  1845   001896  90D8               	bcf	status,0,c
  1846   001898  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  1847   00189A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  1848   00189C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  1849   00189E  3211               	rrcf	___xxtofl@arg^0,f,c
  1850   0018A0                     l875:
  1851   0018A0  0E00               	movlw	0
  1852   0018A2  1411               	andwf	___xxtofl@arg^0,w,c
  1853   0018A4  6E0B               	movwf	??___xxtofl^0,c
  1854   0018A6  0E00               	movlw	0
  1855   0018A8  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  1856   0018AA  6E0C               	movwf	(??___xxtofl+1)^0,c
  1857   0018AC  0E00               	movlw	0
  1858   0018AE  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  1859   0018B0  6E0D               	movwf	(??___xxtofl+2)^0,c
  1860   0018B2  0EFF               	movlw	255
  1861   0018B4  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  1862   0018B6  6E0E               	movwf	(??___xxtofl+3)^0,c
  1863   0018B8  500B               	movf	??___xxtofl^0,w,c
  1864   0018BA  100C               	iorwf	(??___xxtofl+1)^0,w,c
  1865   0018BC  100D               	iorwf	(??___xxtofl+2)^0,w,c
  1866   0018BE  100E               	iorwf	(??___xxtofl+3)^0,w,c
  1867   0018C0  A4D8               	btfss	status,2,c
  1868   0018C2  EF65  F00C         	goto	u1581
  1869   0018C6  EF67  F00C         	goto	u1580
  1870   0018CA                     u1581:
  1871   0018CA  EF44  F00C         	goto	l2127
  1872   0018CE                     u1580:
  1873   0018CE  EF6F  F00C         	goto	l2135
  1874   0018D2                     l2133:
  1875   0018D2  0610               	decf	___xxtofl@exp^0,f,c
  1876   0018D4  90D8               	bcf	status,0,c
  1877   0018D6  3611               	rlcf	___xxtofl@arg^0,f,c
  1878   0018D8  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  1879   0018DA  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  1880   0018DC  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  1881   0018DE                     l2135:
  1882   0018DE  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  1883   0018E0  EF74  F00C         	goto	u1591
  1884   0018E4  EF76  F00C         	goto	u1590
  1885   0018E8                     u1591:
  1886   0018E8  EF7E  F00C         	goto	l882
  1887   0018EC                     u1590:
  1888   0018EC  0E02               	movlw	2
  1889   0018EE  6010               	cpfslt	___xxtofl@exp^0,c
  1890   0018F0  EF7C  F00C         	goto	u1601
  1891   0018F4  EF7E  F00C         	goto	u1600
  1892   0018F8                     u1601:
  1893   0018F8  EF69  F00C         	goto	l2133
  1894   0018FC                     u1600:
  1895   0018FC                     l882:
  1896   0018FC  B010               	btfsc	___xxtofl@exp^0,0,c
  1897   0018FE  EF83  F00C         	goto	u1611
  1898   001902  EF85  F00C         	goto	u1610
  1899   001906                     u1611:
  1900   001906  EF86  F00C         	goto	l2141
  1901   00190A                     u1610:
  1902   00190A  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  1903   00190C                     l2141:
  1904   00190C  90D8               	bcf	status,0,c
  1905   00190E  3210               	rrcf	___xxtofl@exp^0,f,c
  1906   001910  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  1907   001914  6A0C               	clrf	(??___xxtofl+1)^0,c
  1908   001916  6A0D               	clrf	(??___xxtofl+2)^0,c
  1909   001918  6A0E               	clrf	(??___xxtofl+3)^0,c
  1910   00191A  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  1911   00191E  6A0D               	clrf	(??___xxtofl+2)^0,c
  1912   001920  6A0C               	clrf	(??___xxtofl+1)^0,c
  1913   001922  6A0B               	clrf	??___xxtofl^0,c
  1914   001924  500B               	movf	??___xxtofl^0,w,c
  1915   001926  1211               	iorwf	___xxtofl@arg^0,f,c
  1916   001928  500C               	movf	(??___xxtofl+1)^0,w,c
  1917   00192A  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  1918   00192C  500D               	movf	(??___xxtofl+2)^0,w,c
  1919   00192E  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  1920   001930  500E               	movf	(??___xxtofl+3)^0,w,c
  1921   001932  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  1922   001934  500F               	movf	___xxtofl@sign^0,w,c
  1923   001936  B4D8               	btfsc	status,2,c
  1924   001938  EFA0  F00C         	goto	u1621
  1925   00193C  EFA2  F00C         	goto	u1620
  1926   001940                     u1621:
  1927   001940  EFAA  F00C         	goto	l2151
  1928   001944                     u1620:
  1929   001944  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  1930   001946  EFA9  F00C         	goto	u1630
  1931   00194A  EFA7  F00C         	goto	u1631
  1932   00194E                     u1631:
  1933   00194E  EFAA  F00C         	goto	l2151
  1934   001952                     u1630:
  1935   001952  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  1936   001954                     l2151:
  1937   001954  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  1938   001958  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  1939   00195C  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  1940   001960  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  1941   001964                     l871:
  1942   001964  0012               	return		;funcret
  1943   001966                     __end_of___xxtofl:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function ___wmul *****************
  1947 ;; Defined at:
  1948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  multiplier      2    0[COMRAM] unsigned int 
  1951 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  product         2    4[COMRAM] unsigned int 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2    0[COMRAM] unsigned int 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, prodl, prodh
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;Total ram usage:        6 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_colour_read_all
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text10
  1977   00245A                     __ptext10:
  1978                           	callstack 0
  1979   00245A                     ___wmul:
  1980                           	callstack 29
  1981   00245A  5001               	movf	___wmul@multiplier^0,w,c
  1982   00245C  0203               	mulwf	___wmul@multiplicand^0,c
  1983   00245E  CFF3 F005          	movff	prodl,___wmul@product
  1984   002462  CFF4 F006          	movff	prodh,___wmul@product+1
  1985   002466  5001               	movf	___wmul@multiplier^0,w,c
  1986   002468  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1987   00246A  50F3               	movf	243,w,c
  1988   00246C  2606               	addwf	(___wmul@product+1)^0,f,c
  1989   00246E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1990   002470  0203               	mulwf	___wmul@multiplicand^0,c
  1991   002472  50F3               	movf	243,w,c
  1992   002474  2606               	addwf	(___wmul@product+1)^0,f,c
  1993   002476  C005  F001         	movff	___wmul@product,?___wmul
  1994   00247A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1995   00247E  0012               	return		;funcret
  1996   002480                     __end_of___wmul:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function ___fltol *****************
  2000 ;; Defined at:
  2001 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  f1              4   45[COMRAM] unsigned int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  exp1            1   54[COMRAM] unsigned char 
  2006 ;;  sign1           1   53[COMRAM] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  4   45[COMRAM] long 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;Total ram usage:       10 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_colour_read_all
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text11
  2030   001DA0                     __ptext11:
  2031                           	callstack 0
  2032   001DA0                     ___fltol:
  2033                           	callstack 29
  2034   001DA0  3430               	rlcf	(___fltol@f1+2)^0,w,c
  2035   001DA2  3431               	rlcf	(___fltol@f1+3)^0,w,c
  2036   001DA4  6E37               	movwf	___fltol@exp1^0,c
  2037   001DA6  5037               	movf	___fltol@exp1^0,w,c
  2038   001DA8  A4D8               	btfss	status,2,c
  2039   001DAA  EFD9  F00E         	goto	u1471
  2040   001DAE  EFDB  F00E         	goto	u1470
  2041   001DB2                     u1471:
  2042   001DB2  EFE5  F00E         	goto	l2071
  2043   001DB6                     u1470:
  2044   001DB6                     l2067:
  2045   001DB6  0E00               	movlw	0
  2046   001DB8  6E2E               	movwf	?___fltol^0,c
  2047   001DBA  0E00               	movlw	0
  2048   001DBC  6E2F               	movwf	(?___fltol+1)^0,c
  2049   001DBE  0E00               	movlw	0
  2050   001DC0  6E30               	movwf	(?___fltol+2)^0,c
  2051   001DC2  0E00               	movlw	0
  2052   001DC4  6E31               	movwf	(?___fltol+3)^0,c
  2053   001DC6  EF52  F00F         	goto	l510
  2054   001DCA                     l2071:
  2055   001DCA  C02E  F032         	movff	___fltol@f1,??___fltol
  2056   001DCE  C02F  F033         	movff	___fltol@f1+1,??___fltol+1
  2057   001DD2  C030  F034         	movff	___fltol@f1+2,??___fltol+2
  2058   001DD6  C031  F035         	movff	___fltol@f1+3,??___fltol+3
  2059   001DDA  0E20               	movlw	32
  2060   001DDC  EFF5  F00E         	goto	u1480
  2061   001DE0                     u1485:
  2062   001DE0  90D8               	bcf	status,0,c
  2063   001DE2  3235               	rrcf	(??___fltol+3)^0,f,c
  2064   001DE4  3234               	rrcf	(??___fltol+2)^0,f,c
  2065   001DE6  3233               	rrcf	(??___fltol+1)^0,f,c
  2066   001DE8  3232               	rrcf	??___fltol^0,f,c
  2067   001DEA                     u1480:
  2068   001DEA  2EE8               	decfsz	wreg,f,c
  2069   001DEC  EFF0  F00E         	goto	u1485
  2070   001DF0  5032               	movf	??___fltol^0,w,c
  2071   001DF2  6E36               	movwf	___fltol@sign1^0,c
  2072   001DF4  8E30               	bsf	(___fltol@f1+2)^0,7,c
  2073   001DF6  0EFF               	movlw	255
  2074   001DF8  162E               	andwf	___fltol@f1^0,f,c
  2075   001DFA  0EFF               	movlw	255
  2076   001DFC  162F               	andwf	(___fltol@f1+1)^0,f,c
  2077   001DFE  0EFF               	movlw	255
  2078   001E00  1630               	andwf	(___fltol@f1+2)^0,f,c
  2079   001E02  0E00               	movlw	0
  2080   001E04  1631               	andwf	(___fltol@f1+3)^0,f,c
  2081   001E06  0E96               	movlw	150
  2082   001E08  5E37               	subwf	___fltol@exp1^0,f,c
  2083   001E0A  BE37               	btfsc	___fltol@exp1^0,7,c
  2084   001E0C  EF0C  F00F         	goto	u1490
  2085   001E10  EF0A  F00F         	goto	u1491
  2086   001E14                     u1491:
  2087   001E14  EF22  F00F         	goto	l2091
  2088   001E18                     u1490:
  2089   001E18  5037               	movf	___fltol@exp1^0,w,c
  2090   001E1A  0A80               	xorlw	128
  2091   001E1C  0F97               	addlw	151
  2092   001E1E  B0D8               	btfsc	status,0,c
  2093   001E20  EF14  F00F         	goto	u1501
  2094   001E24  EF16  F00F         	goto	u1500
  2095   001E28                     u1501:
  2096   001E28  EF18  F00F         	goto	l2087
  2097   001E2C                     u1500:
  2098   001E2C  EFDB  F00E         	goto	l2067
  2099   001E30                     l2087:
  2100   001E30  90D8               	bcf	status,0,c
  2101   001E32  3231               	rrcf	(___fltol@f1+3)^0,f,c
  2102   001E34  3230               	rrcf	(___fltol@f1+2)^0,f,c
  2103   001E36  322F               	rrcf	(___fltol@f1+1)^0,f,c
  2104   001E38  322E               	rrcf	___fltol@f1^0,f,c
  2105   001E3A  3E37               	incfsz	___fltol@exp1^0,f,c
  2106   001E3C  EF18  F00F         	goto	l2087
  2107   001E40  EF3A  F00F         	goto	l2101
  2108   001E44                     l2091:
  2109   001E44  0E1F               	movlw	31
  2110   001E46  6437               	cpfsgt	___fltol@exp1^0,c
  2111   001E48  EF28  F00F         	goto	u1511
  2112   001E4C  EF2A  F00F         	goto	u1510
  2113   001E50                     u1511:
  2114   001E50  EF32  F00F         	goto	l2099
  2115   001E54                     u1510:
  2116   001E54  EFDB  F00E         	goto	l2067
  2117   001E58                     l2097:
  2118   001E58  90D8               	bcf	status,0,c
  2119   001E5A  362E               	rlcf	___fltol@f1^0,f,c
  2120   001E5C  362F               	rlcf	(___fltol@f1+1)^0,f,c
  2121   001E5E  3630               	rlcf	(___fltol@f1+2)^0,f,c
  2122   001E60  3631               	rlcf	(___fltol@f1+3)^0,f,c
  2123   001E62  0637               	decf	___fltol@exp1^0,f,c
  2124   001E64                     l2099:
  2125   001E64  5037               	movf	___fltol@exp1^0,w,c
  2126   001E66  A4D8               	btfss	status,2,c
  2127   001E68  EF38  F00F         	goto	u1521
  2128   001E6C  EF3A  F00F         	goto	u1520
  2129   001E70                     u1521:
  2130   001E70  EF2C  F00F         	goto	l2097
  2131   001E74                     u1520:
  2132   001E74                     l2101:
  2133   001E74  5036               	movf	___fltol@sign1^0,w,c
  2134   001E76  B4D8               	btfsc	status,2,c
  2135   001E78  EF40  F00F         	goto	u1531
  2136   001E7C  EF42  F00F         	goto	u1530
  2137   001E80                     u1531:
  2138   001E80  EF4A  F00F         	goto	l2105
  2139   001E84                     u1530:
  2140   001E84  1E31               	comf	(___fltol@f1+3)^0,f,c
  2141   001E86  1E30               	comf	(___fltol@f1+2)^0,f,c
  2142   001E88  1E2F               	comf	(___fltol@f1+1)^0,f,c
  2143   001E8A  6C2E               	negf	___fltol@f1^0,c
  2144   001E8C  0E00               	movlw	0
  2145   001E8E  222F               	addwfc	(___fltol@f1+1)^0,f,c
  2146   001E90  2230               	addwfc	(___fltol@f1+2)^0,f,c
  2147   001E92  2231               	addwfc	(___fltol@f1+3)^0,f,c
  2148   001E94                     l2105:
  2149   001E94  C02E  F02E         	movff	___fltol@f1,?___fltol
  2150   001E98  C02F  F02F         	movff	___fltol@f1+1,?___fltol+1
  2151   001E9C  C030  F030         	movff	___fltol@f1+2,?___fltol+2
  2152   001EA0  C031  F031         	movff	___fltol@f1+3,?___fltol+3
  2153   001EA4                     l510:
  2154   001EA4  0012               	return		;funcret
  2155   001EA6                     __end_of___fltol:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function ___fldiv *****************
  2159 ;; Defined at:
  2160 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  b               4   20[COMRAM] long 
  2163 ;;  a               4   24[COMRAM] long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  grs             4   39[COMRAM] unsigned long 
  2166 ;;  rem             4   32[COMRAM] unsigned long 
  2167 ;;  new_exp         2   37[COMRAM] short 
  2168 ;;  aexp            1   44[COMRAM] unsigned char 
  2169 ;;  bexp            1   43[COMRAM] unsigned char 
  2170 ;;  sign            1   36[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  4   20[COMRAM] unsigned char 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:       25 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_colour_read_all
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text12
  2194   000E26                     __ptext12:
  2195                           	callstack 0
  2196   000E26                     ___fldiv:
  2197                           	callstack 29
  2198   000E26  5018               	movf	(___fldiv@b+3)^0,w,c
  2199   000E28  0B80               	andlw	128
  2200   000E2A  6E25               	movwf	___fldiv@sign^0,c
  2201   000E2C  5018               	movf	(___fldiv@b+3)^0,w,c
  2202   000E2E  2418               	addwf	(___fldiv@b+3)^0,w,c
  2203   000E30  6E2C               	movwf	___fldiv@bexp^0,c
  2204   000E32  AE17               	btfss	(___fldiv@b+2)^0,7,c
  2205   000E34  EF1E  F007         	goto	u1241
  2206   000E38  EF20  F007         	goto	u1240
  2207   000E3C                     u1241:
  2208   000E3C  EF21  F007         	goto	l1933
  2209   000E40                     u1240:
  2210   000E40  802C               	bsf	___fldiv@bexp^0,0,c
  2211   000E42                     l1933:
  2212   000E42  502C               	movf	___fldiv@bexp^0,w,c
  2213   000E44  B4D8               	btfsc	status,2,c
  2214   000E46  EF27  F007         	goto	u1251
  2215   000E4A  EF29  F007         	goto	u1250
  2216   000E4E                     u1251:
  2217   000E4E  EF3E  F007         	goto	l1943
  2218   000E52                     u1250:
  2219   000E52  282C               	incf	___fldiv@bexp^0,w,c
  2220   000E54  A4D8               	btfss	status,2,c
  2221   000E56  EF2F  F007         	goto	u1261
  2222   000E5A  EF31  F007         	goto	u1260
  2223   000E5E                     u1261:
  2224   000E5E  EF39  F007         	goto	l1939
  2225   000E62                     u1260:
  2226   000E62  0E00               	movlw	0
  2227   000E64  6E15               	movwf	___fldiv@b^0,c
  2228   000E66  0E00               	movlw	0
  2229   000E68  6E16               	movwf	(___fldiv@b+1)^0,c
  2230   000E6A  0E00               	movlw	0
  2231   000E6C  6E17               	movwf	(___fldiv@b+2)^0,c
  2232   000E6E  0E00               	movlw	0
  2233   000E70  6E18               	movwf	(___fldiv@b+3)^0,c
  2234   000E72                     l1939:
  2235   000E72  8E17               	bsf	(___fldiv@b+2)^0,7,c
  2236   000E74  0E00               	movlw	0
  2237   000E76  6E18               	movwf	(___fldiv@b+3)^0,c
  2238   000E78  EF46  F007         	goto	l1945
  2239   000E7C                     l1943:
  2240   000E7C  0E00               	movlw	0
  2241   000E7E  6E15               	movwf	___fldiv@b^0,c
  2242   000E80  0E00               	movlw	0
  2243   000E82  6E16               	movwf	(___fldiv@b+1)^0,c
  2244   000E84  0E00               	movlw	0
  2245   000E86  6E17               	movwf	(___fldiv@b+2)^0,c
  2246   000E88  0E00               	movlw	0
  2247   000E8A  6E18               	movwf	(___fldiv@b+3)^0,c
  2248   000E8C                     l1945:
  2249   000E8C  501C               	movf	(___fldiv@a+3)^0,w,c
  2250   000E8E  0B80               	andlw	128
  2251   000E90  1A25               	xorwf	___fldiv@sign^0,f,c
  2252   000E92  501C               	movf	(___fldiv@a+3)^0,w,c
  2253   000E94  241C               	addwf	(___fldiv@a+3)^0,w,c
  2254   000E96  6E2D               	movwf	___fldiv@aexp^0,c
  2255   000E98  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  2256   000E9A  EF51  F007         	goto	u1271
  2257   000E9E  EF53  F007         	goto	u1270
  2258   000EA2                     u1271:
  2259   000EA2  EF54  F007         	goto	l1953
  2260   000EA6                     u1270:
  2261   000EA6  802D               	bsf	___fldiv@aexp^0,0,c
  2262   000EA8                     l1953:
  2263   000EA8  502D               	movf	___fldiv@aexp^0,w,c
  2264   000EAA  B4D8               	btfsc	status,2,c
  2265   000EAC  EF5A  F007         	goto	u1281
  2266   000EB0  EF5C  F007         	goto	u1280
  2267   000EB4                     u1281:
  2268   000EB4  EF71  F007         	goto	l1963
  2269   000EB8                     u1280:
  2270   000EB8  282D               	incf	___fldiv@aexp^0,w,c
  2271   000EBA  A4D8               	btfss	status,2,c
  2272   000EBC  EF62  F007         	goto	u1291
  2273   000EC0  EF64  F007         	goto	u1290
  2274   000EC4                     u1291:
  2275   000EC4  EF6C  F007         	goto	l1959
  2276   000EC8                     u1290:
  2277   000EC8  0E00               	movlw	0
  2278   000ECA  6E19               	movwf	___fldiv@a^0,c
  2279   000ECC  0E00               	movlw	0
  2280   000ECE  6E1A               	movwf	(___fldiv@a+1)^0,c
  2281   000ED0  0E00               	movlw	0
  2282   000ED2  6E1B               	movwf	(___fldiv@a+2)^0,c
  2283   000ED4  0E00               	movlw	0
  2284   000ED6  6E1C               	movwf	(___fldiv@a+3)^0,c
  2285   000ED8                     l1959:
  2286   000ED8  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  2287   000EDA  0E00               	movlw	0
  2288   000EDC  6E1C               	movwf	(___fldiv@a+3)^0,c
  2289   000EDE  EF79  F007         	goto	l1965
  2290   000EE2                     l1963:
  2291   000EE2  0E00               	movlw	0
  2292   000EE4  6E19               	movwf	___fldiv@a^0,c
  2293   000EE6  0E00               	movlw	0
  2294   000EE8  6E1A               	movwf	(___fldiv@a+1)^0,c
  2295   000EEA  0E00               	movlw	0
  2296   000EEC  6E1B               	movwf	(___fldiv@a+2)^0,c
  2297   000EEE  0E00               	movlw	0
  2298   000EF0  6E1C               	movwf	(___fldiv@a+3)^0,c
  2299   000EF2                     l1965:
  2300   000EF2  5019               	movf	___fldiv@a^0,w,c
  2301   000EF4  101A               	iorwf	(___fldiv@a+1)^0,w,c
  2302   000EF6  101B               	iorwf	(___fldiv@a+2)^0,w,c
  2303   000EF8  101C               	iorwf	(___fldiv@a+3)^0,w,c
  2304   000EFA  A4D8               	btfss	status,2,c
  2305   000EFC  EF82  F007         	goto	u1301
  2306   000F00  EF84  F007         	goto	u1300
  2307   000F04                     u1301:
  2308   000F04  EF9C  F007         	goto	l1977
  2309   000F08                     u1300:
  2310   000F08  0E00               	movlw	0
  2311   000F0A  6E15               	movwf	___fldiv@b^0,c
  2312   000F0C  0E00               	movlw	0
  2313   000F0E  6E16               	movwf	(___fldiv@b+1)^0,c
  2314   000F10  0E00               	movlw	0
  2315   000F12  6E17               	movwf	(___fldiv@b+2)^0,c
  2316   000F14  0E00               	movlw	0
  2317   000F16  6E18               	movwf	(___fldiv@b+3)^0,c
  2318   000F18  0E80               	movlw	128
  2319   000F1A  1217               	iorwf	(___fldiv@b+2)^0,f,c
  2320   000F1C  0E7F               	movlw	127
  2321   000F1E  1218               	iorwf	(___fldiv@b+3)^0,f,c
  2322   000F20                     l1971:
  2323   000F20  5025               	movf	___fldiv@sign^0,w,c
  2324   000F22  1218               	iorwf	(___fldiv@b+3)^0,f,c
  2325   000F24  C015  F015         	movff	___fldiv@b,?___fldiv
  2326   000F28  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  2327   000F2C  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  2328   000F30  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  2329   000F34  EFDF  F008         	goto	l795
  2330   000F38                     l1977:
  2331   000F38  502C               	movf	___fldiv@bexp^0,w,c
  2332   000F3A  A4D8               	btfss	status,2,c
  2333   000F3C  EFA2  F007         	goto	u1311
  2334   000F40  EFA4  F007         	goto	u1310
  2335   000F44                     u1311:
  2336   000F44  EFAE  F007         	goto	l1985
  2337   000F48                     u1310:
  2338   000F48  0E00               	movlw	0
  2339   000F4A  6E15               	movwf	?___fldiv^0,c
  2340   000F4C  0E00               	movlw	0
  2341   000F4E  6E16               	movwf	(?___fldiv+1)^0,c
  2342   000F50  0E00               	movlw	0
  2343   000F52  6E17               	movwf	(?___fldiv+2)^0,c
  2344   000F54  0E00               	movlw	0
  2345   000F56  6E18               	movwf	(?___fldiv+3)^0,c
  2346   000F58  EFDF  F008         	goto	l795
  2347   000F5C                     l1985:
  2348   000F5C  502D               	movf	___fldiv@aexp^0,w,c
  2349   000F5E  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  2350   000F62  6A1E               	clrf	(??___fldiv+1)^0,c
  2351   000F64  5E1D               	subwf	??___fldiv^0,f,c
  2352   000F66  0E00               	movlw	0
  2353   000F68  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  2354   000F6A  0E7F               	movlw	127
  2355   000F6C  241D               	addwf	??___fldiv^0,w,c
  2356   000F6E  6E26               	movwf	___fldiv@new_exp^0,c
  2357   000F70  0E00               	movlw	0
  2358   000F72  201E               	addwfc	(??___fldiv+1)^0,w,c
  2359   000F74  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2360   000F76  C015  F021         	movff	___fldiv@b,___fldiv@rem
  2361   000F7A  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  2362   000F7E  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  2363   000F82  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  2364   000F86  0E00               	movlw	0
  2365   000F88  6E15               	movwf	___fldiv@b^0,c
  2366   000F8A  0E00               	movlw	0
  2367   000F8C  6E16               	movwf	(___fldiv@b+1)^0,c
  2368   000F8E  0E00               	movlw	0
  2369   000F90  6E17               	movwf	(___fldiv@b+2)^0,c
  2370   000F92  0E00               	movlw	0
  2371   000F94  6E18               	movwf	(___fldiv@b+3)^0,c
  2372   000F96  0E00               	movlw	0
  2373   000F98  6E28               	movwf	___fldiv@grs^0,c
  2374   000F9A  0E00               	movlw	0
  2375   000F9C  6E29               	movwf	(___fldiv@grs+1)^0,c
  2376   000F9E  0E00               	movlw	0
  2377   000FA0  6E2A               	movwf	(___fldiv@grs+2)^0,c
  2378   000FA2  0E00               	movlw	0
  2379   000FA4  6E2B               	movwf	(___fldiv@grs+3)^0,c
  2380   000FA6  0E00               	movlw	0
  2381   000FA8  6E2D               	movwf	___fldiv@aexp^0,c
  2382   000FAA  EF0F  F008         	goto	l797
  2383   000FAE                     l1995:
  2384   000FAE  502D               	movf	___fldiv@aexp^0,w,c
  2385   000FB0  B4D8               	btfsc	status,2,c
  2386   000FB2  EFDD  F007         	goto	u1321
  2387   000FB6  EFDF  F007         	goto	u1320
  2388   000FBA                     u1321:
  2389   000FBA  EFF6  F007         	goto	l2003
  2390   000FBE                     u1320:
  2391   000FBE  90D8               	bcf	status,0,c
  2392   000FC0  3621               	rlcf	___fldiv@rem^0,f,c
  2393   000FC2  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  2394   000FC4  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  2395   000FC6  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  2396   000FC8  90D8               	bcf	status,0,c
  2397   000FCA  3615               	rlcf	___fldiv@b^0,f,c
  2398   000FCC  3616               	rlcf	(___fldiv@b+1)^0,f,c
  2399   000FCE  3617               	rlcf	(___fldiv@b+2)^0,f,c
  2400   000FD0  3618               	rlcf	(___fldiv@b+3)^0,f,c
  2401   000FD2  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2402   000FD4  EFEE  F007         	goto	u1331
  2403   000FD8  EFF0  F007         	goto	u1330
  2404   000FDC                     u1331:
  2405   000FDC  EFF1  F007         	goto	l800
  2406   000FE0                     u1330:
  2407   000FE0  8015               	bsf	___fldiv@b^0,0,c
  2408   000FE2                     l800:
  2409   000FE2  90D8               	bcf	status,0,c
  2410   000FE4  3628               	rlcf	___fldiv@grs^0,f,c
  2411   000FE6  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  2412   000FE8  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  2413   000FEA  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  2414   000FEC                     l2003:
  2415   000FEC  5019               	movf	___fldiv@a^0,w,c
  2416   000FEE  5C21               	subwf	___fldiv@rem^0,w,c
  2417   000FF0  501A               	movf	(___fldiv@a+1)^0,w,c
  2418   000FF2  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  2419   000FF4  501B               	movf	(___fldiv@a+2)^0,w,c
  2420   000FF6  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  2421   000FF8  501C               	movf	(___fldiv@a+3)^0,w,c
  2422   000FFA  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  2423   000FFC  A0D8               	btfss	status,0,c
  2424   000FFE  EF03  F008         	goto	u1341
  2425   001002  EF05  F008         	goto	u1340
  2426   001006                     u1341:
  2427   001006  EF0E  F008         	goto	l2009
  2428   00100A                     u1340:
  2429   00100A  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  2430   00100C  5019               	movf	___fldiv@a^0,w,c
  2431   00100E  5E21               	subwf	___fldiv@rem^0,f,c
  2432   001010  501A               	movf	(___fldiv@a+1)^0,w,c
  2433   001012  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  2434   001014  501B               	movf	(___fldiv@a+2)^0,w,c
  2435   001016  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  2436   001018  501C               	movf	(___fldiv@a+3)^0,w,c
  2437   00101A  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  2438   00101C                     l2009:
  2439   00101C  2A2D               	incf	___fldiv@aexp^0,f,c
  2440   00101E                     l797:
  2441   00101E  0E19               	movlw	25
  2442   001020  642D               	cpfsgt	___fldiv@aexp^0,c
  2443   001022  EF15  F008         	goto	u1351
  2444   001026  EF17  F008         	goto	u1350
  2445   00102A                     u1351:
  2446   00102A  EFD7  F007         	goto	l1995
  2447   00102E                     u1350:
  2448   00102E  5021               	movf	___fldiv@rem^0,w,c
  2449   001030  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  2450   001032  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  2451   001034  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  2452   001036  B4D8               	btfsc	status,2,c
  2453   001038  EF20  F008         	goto	u1361
  2454   00103C  EF22  F008         	goto	u1360
  2455   001040                     u1361:
  2456   001040  EF3A  F008         	goto	l2021
  2457   001044                     u1360:
  2458   001044  8028               	bsf	___fldiv@grs^0,0,c
  2459   001046  EF3A  F008         	goto	l2021
  2460   00104A                     l2015:
  2461   00104A  90D8               	bcf	status,0,c
  2462   00104C  3615               	rlcf	___fldiv@b^0,f,c
  2463   00104E  3616               	rlcf	(___fldiv@b+1)^0,f,c
  2464   001050  3617               	rlcf	(___fldiv@b+2)^0,f,c
  2465   001052  3618               	rlcf	(___fldiv@b+3)^0,f,c
  2466   001054  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2467   001056  EF2F  F008         	goto	u1371
  2468   00105A  EF31  F008         	goto	u1370
  2469   00105E                     u1371:
  2470   00105E  EF32  F008         	goto	l806
  2471   001062                     u1370:
  2472   001062  8015               	bsf	___fldiv@b^0,0,c
  2473   001064                     l806:
  2474   001064  90D8               	bcf	status,0,c
  2475   001066  3628               	rlcf	___fldiv@grs^0,f,c
  2476   001068  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  2477   00106A  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  2478   00106C  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  2479   00106E  0626               	decf	___fldiv@new_exp^0,f,c
  2480   001070  A0D8               	btfss	status,0,c
  2481   001072  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  2482   001074                     l2021:
  2483   001074  AE17               	btfss	(___fldiv@b+2)^0,7,c
  2484   001076  EF3F  F008         	goto	u1381
  2485   00107A  EF41  F008         	goto	u1380
  2486   00107E                     u1381:
  2487   00107E  EF25  F008         	goto	l2015
  2488   001082                     u1380:
  2489   001082  0E00               	movlw	0
  2490   001084  6E2D               	movwf	___fldiv@aexp^0,c
  2491   001086  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  2492   001088  EF48  F008         	goto	u1391
  2493   00108C  EF4A  F008         	goto	u1390
  2494   001090                     u1391:
  2495   001090  EF6E  F008         	goto	l808
  2496   001094                     u1390:
  2497   001094  0EFF               	movlw	255
  2498   001096  1428               	andwf	___fldiv@grs^0,w,c
  2499   001098  6E1D               	movwf	??___fldiv^0,c
  2500   00109A  0EFF               	movlw	255
  2501   00109C  1429               	andwf	(___fldiv@grs+1)^0,w,c
  2502   00109E  6E1E               	movwf	(??___fldiv+1)^0,c
  2503   0010A0  0EFF               	movlw	255
  2504   0010A2  142A               	andwf	(___fldiv@grs+2)^0,w,c
  2505   0010A4  6E1F               	movwf	(??___fldiv+2)^0,c
  2506   0010A6  0E7F               	movlw	127
  2507   0010A8  142B               	andwf	(___fldiv@grs+3)^0,w,c
  2508   0010AA  6E20               	movwf	(??___fldiv+3)^0,c
  2509   0010AC  501D               	movf	??___fldiv^0,w,c
  2510   0010AE  101E               	iorwf	(??___fldiv+1)^0,w,c
  2511   0010B0  101F               	iorwf	(??___fldiv+2)^0,w,c
  2512   0010B2  1020               	iorwf	(??___fldiv+3)^0,w,c
  2513   0010B4  B4D8               	btfsc	status,2,c
  2514   0010B6  EF5F  F008         	goto	u1401
  2515   0010BA  EF61  F008         	goto	u1400
  2516   0010BE                     u1401:
  2517   0010BE  EF65  F008         	goto	l809
  2518   0010C2                     u1400:
  2519   0010C2                     l2029:
  2520   0010C2  0E01               	movlw	1
  2521   0010C4  6E2D               	movwf	___fldiv@aexp^0,c
  2522   0010C6  EF6E  F008         	goto	l808
  2523   0010CA                     l809:
  2524   0010CA  A015               	btfss	___fldiv@b^0,0,c
  2525   0010CC  EF6A  F008         	goto	u1411
  2526   0010D0  EF6C  F008         	goto	u1410
  2527   0010D4                     u1411:
  2528   0010D4  EF6E  F008         	goto	l808
  2529   0010D8                     u1410:
  2530   0010D8  EF61  F008         	goto	l2029
  2531   0010DC                     l808:
  2532   0010DC  502D               	movf	___fldiv@aexp^0,w,c
  2533   0010DE  B4D8               	btfsc	status,2,c
  2534   0010E0  EF74  F008         	goto	u1421
  2535   0010E4  EF76  F008         	goto	u1420
  2536   0010E8                     u1421:
  2537   0010E8  EF9A  F008         	goto	l2041
  2538   0010EC                     u1420:
  2539   0010EC  0E01               	movlw	1
  2540   0010EE  2615               	addwf	___fldiv@b^0,f,c
  2541   0010F0  0E00               	movlw	0
  2542   0010F2  2216               	addwfc	(___fldiv@b+1)^0,f,c
  2543   0010F4  2217               	addwfc	(___fldiv@b+2)^0,f,c
  2544   0010F6  2218               	addwfc	(___fldiv@b+3)^0,f,c
  2545   0010F8  A018               	btfss	(___fldiv@b+3)^0,0,c
  2546   0010FA  EF81  F008         	goto	u1431
  2547   0010FE  EF83  F008         	goto	u1430
  2548   001102                     u1431:
  2549   001102  EF9A  F008         	goto	l2041
  2550   001106                     u1430:
  2551   001106  C015  F01D         	movff	___fldiv@b,??___fldiv
  2552   00110A  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  2553   00110E  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  2554   001112  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  2555   001116  3420               	rlcf	(??___fldiv+3)^0,w,c
  2556   001118  3220               	rrcf	(??___fldiv+3)^0,f,c
  2557   00111A  321F               	rrcf	(??___fldiv+2)^0,f,c
  2558   00111C  321E               	rrcf	(??___fldiv+1)^0,f,c
  2559   00111E  321D               	rrcf	??___fldiv^0,f,c
  2560   001120  C01D  F015         	movff	??___fldiv,___fldiv@b
  2561   001124  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  2562   001128  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  2563   00112C  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  2564   001130  4A26               	infsnz	___fldiv@new_exp^0,f,c
  2565   001132  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  2566   001134                     l2041:
  2567   001134  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2568   001136  EFA5  F008         	goto	u1441
  2569   00113A  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  2570   00113C  E108               	bnz	u1440
  2571   00113E  2826               	incf	___fldiv@new_exp^0,w,c
  2572   001140  A0D8               	btfss	status,0,c
  2573   001142  EFA5  F008         	goto	u1441
  2574   001146  EFA7  F008         	goto	u1440
  2575   00114A                     u1441:
  2576   00114A  EFB2  F008         	goto	l2045
  2577   00114E                     u1440:
  2578   00114E  0E00               	movlw	0
  2579   001150  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2580   001152  6826               	setf	___fldiv@new_exp^0,c
  2581   001154  0E00               	movlw	0
  2582   001156  6E15               	movwf	___fldiv@b^0,c
  2583   001158  0E00               	movlw	0
  2584   00115A  6E16               	movwf	(___fldiv@b+1)^0,c
  2585   00115C  0E00               	movlw	0
  2586   00115E  6E17               	movwf	(___fldiv@b+2)^0,c
  2587   001160  0E00               	movlw	0
  2588   001162  6E18               	movwf	(___fldiv@b+3)^0,c
  2589   001164                     l2045:
  2590   001164  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2591   001166  EFBF  F008         	goto	u1450
  2592   00116A  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  2593   00116C  E106               	bnz	u1451
  2594   00116E  0426               	decf	___fldiv@new_exp^0,w,c
  2595   001170  B0D8               	btfsc	status,0,c
  2596   001172  EFBD  F008         	goto	u1451
  2597   001176  EFBF  F008         	goto	u1450
  2598   00117A                     u1451:
  2599   00117A  EFCD  F008         	goto	l2049
  2600   00117E                     u1450:
  2601   00117E  0E00               	movlw	0
  2602   001180  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  2603   001182  0E00               	movlw	0
  2604   001184  6E26               	movwf	___fldiv@new_exp^0,c
  2605   001186  0E00               	movlw	0
  2606   001188  6E15               	movwf	___fldiv@b^0,c
  2607   00118A  0E00               	movlw	0
  2608   00118C  6E16               	movwf	(___fldiv@b+1)^0,c
  2609   00118E  0E00               	movlw	0
  2610   001190  6E17               	movwf	(___fldiv@b+2)^0,c
  2611   001192  0E00               	movlw	0
  2612   001194  6E18               	movwf	(___fldiv@b+3)^0,c
  2613   001196  0E00               	movlw	0
  2614   001198  6E25               	movwf	___fldiv@sign^0,c
  2615   00119A                     l2049:
  2616   00119A  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  2617   00119E  A02C               	btfss	___fldiv@bexp^0,0,c
  2618   0011A0  EFD4  F008         	goto	u1461
  2619   0011A4  EFD6  F008         	goto	u1460
  2620   0011A8                     u1461:
  2621   0011A8  EFD9  F008         	goto	l2055
  2622   0011AC                     u1460:
  2623   0011AC  8E17               	bsf	(___fldiv@b+2)^0,7,c
  2624   0011AE  EFDA  F008         	goto	l2057
  2625   0011B2                     l2055:
  2626   0011B2  9E17               	bcf	(___fldiv@b+2)^0,7,c
  2627   0011B4                     l2057:
  2628   0011B4  90D8               	bcf	status,0,c
  2629   0011B6  302C               	rrcf	___fldiv@bexp^0,w,c
  2630   0011B8  6E18               	movwf	(___fldiv@b+3)^0,c
  2631   0011BA  EF90  F007         	goto	l1971
  2632   0011BE                     l795:
  2633   0011BE  0012               	return		;funcret
  2634   0011C0                     __end_of___fldiv:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _color_click_init *****************
  2638 ;; Defined at:
  2639 ;;		line 6 in file "color.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;Total ram usage:        1 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 4
  2660 ;; This function calls:
  2661 ;;		_I2C_2_Master_Init
  2662 ;;		_color_turn_on_led
  2663 ;;		_color_write_reg
  2664 ;;		_color_writetoaddr
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text13
  2671   002314                     __ptext13:
  2672                           	callstack 0
  2673   002314                     _color_click_init:
  2674                           	callstack 26
  2675   002314                     
  2676                           ;color.c: 9:     I2C_2_Master_Init();
  2677   002314  EC04  F012         	call	_I2C_2_Master_Init	;wreg free
  2678   002318                     
  2679                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  2680   002318  0E01               	movlw	1
  2681   00231A  6E03               	movwf	color_writetoaddr@value^0,c
  2682   00231C  0E00               	movlw	0
  2683   00231E  EC51  F012         	call	_color_writetoaddr
  2684   002322                     
  2685                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2686   002322  0E3F               	movlw	63
  2687   002324  6E05               	movwf	??_color_click_init^0,c
  2688   002326  0E55               	movlw	85
  2689   002328                     u1657:
  2690   002328  2EE8               	decfsz	wreg,f,c
  2691   00232A  D7FE               	bra	u1657
  2692   00232C  2E05               	decfsz	??_color_click_init^0,f,c
  2693   00232E  D7FC               	bra	u1657
  2694   002330  F000               	nop	
  2695   002332                     
  2696                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  2697   002332  0E03               	movlw	3
  2698   002334  6E03               	movwf	color_writetoaddr@value^0,c
  2699   002336  0E00               	movlw	0
  2700   002338  EC51  F012         	call	_color_writetoaddr
  2701   00233C                     
  2702                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  2703   00233C  0ED5               	movlw	213
  2704   00233E  6E03               	movwf	color_writetoaddr@value^0,c
  2705   002340  0E01               	movlw	1
  2706   002342  EC51  F012         	call	_color_writetoaddr
  2707   002346                     
  2708                           ;color.c: 22:     color_write_reg(0x01, 0x00);
  2709   002346  0E00               	movlw	0
  2710   002348  6E03               	movwf	color_write_reg@value^0,c
  2711   00234A  0E01               	movlw	1
  2712   00234C  EC61  F012         	call	_color_write_reg
  2713   002350                     
  2714                           ;color.c: 23:     color_turn_on_led();
  2715   002350  EC7D  F012         	call	_color_turn_on_led	;wreg free
  2716   002354  0012               	return		;funcret
  2717   002356                     __end_of_color_click_init:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function _color_writetoaddr *****************
  2721 ;; Defined at:
  2722 ;;		line 48 in file "color.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  address         1    wreg     unsigned char 
  2725 ;;  value           1    2[COMRAM] unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  address         1    3[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;Total ram usage:        2 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 2
  2744 ;; This function calls:
  2745 ;;		_I2C_2_Master_Start
  2746 ;;		_I2C_2_Master_Stop
  2747 ;;		_I2C_2_Master_Write
  2748 ;; This function is called by:
  2749 ;;		_color_click_init
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text14
  2754   0024A2                     __ptext14:
  2755                           	callstack 0
  2756   0024A2                     _color_writetoaddr:
  2757                           	callstack 27
  2758                           
  2759                           ;incstack = 0
  2760                           ;color_writetoaddr@address stored from wreg
  2761   0024A2  6E04               	movwf	color_writetoaddr@address^0,c
  2762   0024A4                     
  2763                           ;color.c: 49:     I2C_2_Master_Start();
  2764   0024A4  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  2765                           
  2766                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  2767   0024A8  0E52               	movlw	82
  2768   0024AA  EC83  F012         	call	_I2C_2_Master_Write
  2769                           
  2770                           ;color.c: 51:     I2C_2_Master_Write(0x80 | address);
  2771   0024AE  5004               	movf	color_writetoaddr@address^0,w,c
  2772   0024B0  0980               	iorlw	128
  2773   0024B2  EC83  F012         	call	_I2C_2_Master_Write
  2774                           
  2775                           ;color.c: 52:     I2C_2_Master_Write(value);
  2776   0024B6  5003               	movf	color_writetoaddr@value^0,w,c
  2777   0024B8  EC83  F012         	call	_I2C_2_Master_Write
  2778                           
  2779                           ;color.c: 53:     I2C_2_Master_Stop();
  2780   0024BC  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  2781   0024C0  0012               	return		;funcret
  2782   0024C2                     __end_of_color_writetoaddr:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _color_turn_on_led *****************
  2786 ;; Defined at:
  2787 ;;		line 35 in file "color.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  val             1    0        unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 3
  2808 ;; This function calls:
  2809 ;;		_color_write_reg
  2810 ;; This function is called by:
  2811 ;;		_color_click_init
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text15
  2816   0024FA                     __ptext15:
  2817                           	callstack 0
  2818   0024FA                     _color_turn_on_led:
  2819                           	callstack 26
  2820   0024FA                     
  2821                           ;color.c: 38:     color_write_reg(0x00, val);
  2822   0024FA  0E03               	movlw	3
  2823   0024FC  6E03               	movwf	color_write_reg@value^0,c
  2824   0024FE  0E00               	movlw	0
  2825   002500  EC61  F012         	call	_color_write_reg
  2826   002504  0012               	return		;funcret
  2827   002506                     __end_of_color_turn_on_led:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _color_write_reg *****************
  2831 ;; Defined at:
  2832 ;;		line 26 in file "color.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  reg             1    wreg     unsigned char 
  2835 ;;  value           1    2[COMRAM] unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  reg             1    3[COMRAM] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;Total ram usage:        2 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 2
  2854 ;; This function calls:
  2855 ;;		_I2C_2_Master_Start
  2856 ;;		_I2C_2_Master_Stop
  2857 ;;		_I2C_2_Master_Write
  2858 ;; This function is called by:
  2859 ;;		_color_click_init
  2860 ;;		_color_turn_on_led
  2861 ;;		_color_turn_off_led
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text16
  2866   0024C2                     __ptext16:
  2867                           	callstack 0
  2868   0024C2                     _color_write_reg:
  2869                           	callstack 27
  2870                           
  2871                           ;incstack = 0
  2872                           ;color_write_reg@reg stored from wreg
  2873   0024C2  6E04               	movwf	color_write_reg@reg^0,c
  2874   0024C4                     
  2875                           ;color.c: 26: void color_write_reg(char reg, char value);color.c: 27: {;color.c: 28:    
      +                           I2C_2_Master_Start();
  2876   0024C4  EC93  F012         	call	_I2C_2_Master_Start	;wreg free
  2877                           
  2878                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  2879   0024C8  0E52               	movlw	82
  2880   0024CA  EC83  F012         	call	_I2C_2_Master_Write
  2881                           
  2882                           ;color.c: 30:     I2C_2_Master_Write(reg | 0x80);
  2883   0024CE  5004               	movf	color_write_reg@reg^0,w,c
  2884   0024D0  0980               	iorlw	128
  2885   0024D2  EC83  F012         	call	_I2C_2_Master_Write
  2886                           
  2887                           ;color.c: 31:     I2C_2_Master_Write(value);
  2888   0024D6  5003               	movf	color_write_reg@value^0,w,c
  2889   0024D8  EC83  F012         	call	_I2C_2_Master_Write
  2890                           
  2891                           ;color.c: 32:     I2C_2_Master_Stop();
  2892   0024DC  EC8E  F012         	call	_I2C_2_Master_Stop	;wreg free
  2893   0024E0  0012               	return		;funcret
  2894   0024E2                     __end_of_color_write_reg:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _I2C_2_Master_Write *****************
  2898 ;; Defined at:
  2899 ;;		line 45 in file "i2c.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  data_byte       1    wreg     unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  data_byte       1    1[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;Total ram usage:        1 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 1
  2920 ;; This function calls:
  2921 ;;		_I2C_2_Master_Idle
  2922 ;; This function is called by:
  2923 ;;		_color_write_reg
  2924 ;;		_color_writetoaddr
  2925 ;;		_color_read_Red
  2926 ;;		_color_read_Green
  2927 ;;		_color_read_Blue
  2928 ;;		_color_read_Clear
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text17
  2933   002506                     __ptext17:
  2934                           	callstack 0
  2935   002506                     _I2C_2_Master_Write:
  2936                           	callstack 27
  2937                           
  2938                           ;incstack = 0
  2939                           ;I2C_2_Master_Write@data_byte stored from wreg
  2940   002506  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2941   002508                     
  2942                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2943   002508  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  2944   00250C                     
  2945                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2946   00250C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2947   002510  0012               	return		;funcret
  2948   002512                     __end_of_I2C_2_Master_Write:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _I2C_2_Master_Stop *****************
  2952 ;; Defined at:
  2953 ;;		line 39 in file "i2c.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 1
  2974 ;; This function calls:
  2975 ;;		_I2C_2_Master_Idle
  2976 ;; This function is called by:
  2977 ;;		_color_write_reg
  2978 ;;		_color_writetoaddr
  2979 ;;		_color_read_Red
  2980 ;;		_color_read_Green
  2981 ;;		_color_read_Blue
  2982 ;;		_color_read_Clear
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text18
  2987   00251C                     __ptext18:
  2988                           	callstack 0
  2989   00251C                     _I2C_2_Master_Stop:
  2990                           	callstack 27
  2991   00251C                     
  2992                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2993   00251C  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  2994   002520                     
  2995                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2996   002520  010E               	movlb	14	; () banked
  2997   002522  85DA               	bsf	218,2,b	;volatile
  2998   002524                     
  2999                           ; BSR set to: 14
  3000   002524  0012               	return		;funcret
  3001   002526                     __end_of_I2C_2_Master_Stop:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _I2C_2_Master_Start *****************
  3005 ;; Defined at:
  3006 ;;		line 27 in file "i2c.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 1
  3027 ;; This function calls:
  3028 ;;		_I2C_2_Master_Idle
  3029 ;; This function is called by:
  3030 ;;		_color_write_reg
  3031 ;;		_color_writetoaddr
  3032 ;;		_color_read_Red
  3033 ;;		_color_read_Green
  3034 ;;		_color_read_Blue
  3035 ;;		_color_read_Clear
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text19
  3040   002526                     __ptext19:
  3041                           	callstack 0
  3042   002526                     _I2C_2_Master_Start:
  3043                           	callstack 27
  3044   002526                     
  3045                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3046   002526  EC19  F012         	call	_I2C_2_Master_Idle	;wreg free
  3047   00252A                     
  3048                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3049   00252A  010E               	movlb	14	; () banked
  3050   00252C  81DA               	bsf	218,0,b	;volatile
  3051   00252E                     
  3052                           ; BSR set to: 14
  3053   00252E  0012               	return		;funcret
  3054   002530                     __end_of_I2C_2_Master_Start:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _I2C_2_Master_Idle *****************
  3058 ;; Defined at:
  3059 ;;		line 22 in file "i2c.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;Total ram usage:        1 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_I2C_2_Master_Start
  3083 ;;		_I2C_2_Master_RepStart
  3084 ;;		_I2C_2_Master_Stop
  3085 ;;		_I2C_2_Master_Write
  3086 ;;		_I2C_2_Master_Read
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text20
  3091   002432                     __ptext20:
  3092                           	callstack 0
  3093   002432                     _I2C_2_Master_Idle:
  3094                           	callstack 27
  3095   002432                     l84:
  3096   002432  010E               	movlb	14	; () banked
  3097   002434  B5D8               	btfsc	216,2,b	;volatile
  3098   002436  EF1F  F012         	goto	u1041
  3099   00243A  EF21  F012         	goto	u1040
  3100   00243E                     u1041:
  3101   00243E  EF19  F012         	goto	l84
  3102   002442                     u1040:
  3103   002442                     
  3104                           ; BSR set to: 14
  3105   002442  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3106   002446  0E1F               	movlw	31
  3107   002448  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3108   00244A  A4D8               	btfss	status,2,c
  3109   00244C  EF2A  F012         	goto	u1051
  3110   002450  EF2C  F012         	goto	u1050
  3111   002454                     u1051:
  3112   002454  EF19  F012         	goto	l84
  3113   002458                     u1050:
  3114   002458                     
  3115                           ; BSR set to: 14
  3116   002458  0012               	return		;funcret
  3117   00245A                     __end_of_I2C_2_Master_Idle:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _I2C_2_Master_Init *****************
  3121 ;; Defined at:
  3122 ;;		line 4 in file "i2c.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_color_click_init
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text21
  3151   002408                     __ptext21:
  3152                           	callstack 0
  3153   002408                     _I2C_2_Master_Init:
  3154                           	callstack 29
  3155   002408                     
  3156                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3157   002408  010E               	movlb	14	; () banked
  3158   00240A  51D9               	movf	217,w,b	;volatile
  3159   00240C  0BF0               	andlw	-16
  3160   00240E  0908               	iorlw	8
  3161   002410  6FD9               	movwf	217,b	;volatile
  3162   002412                     
  3163                           ; BSR set to: 14
  3164                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3165   002412  8BD9               	bsf	217,5,b	;volatile
  3166                           
  3167                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3168   002414  0E9F               	movlw	159
  3169   002416  6FD6               	movwf	214,b	;volatile
  3170   002418                     
  3171                           ; BSR set to: 14
  3172                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3173   002418  8A84               	bsf	132,5,c	;volatile
  3174   00241A                     
  3175                           ; BSR set to: 14
  3176                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3177   00241A  8C84               	bsf	132,6,c	;volatile
  3178   00241C                     
  3179                           ; BSR set to: 14
  3180                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3181   00241C  9BA7               	bcf	167,5,b	;volatile
  3182   00241E                     
  3183                           ; BSR set to: 14
  3184                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3185   00241E  9DA7               	bcf	167,6,b	;volatile
  3186                           
  3187                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3188   002420  0E1D               	movlw	29
  3189   002422  6F1D               	movwf	29,b	;volatile
  3190                           
  3191                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3192   002424  0E1E               	movlw	30
  3193   002426  6F1C               	movwf	28,b	;volatile
  3194                           
  3195                           ;i2c.c: 18:   RD5PPS=0x1C;
  3196   002428  0E1C               	movlw	28
  3197   00242A  6F6F               	movwf	111,b	;volatile
  3198                           
  3199                           ;i2c.c: 19:   RD6PPS=0x1B;
  3200   00242C  0E1B               	movlw	27
  3201   00242E  6F70               	movwf	112,b	;volatile
  3202   002430                     
  3203                           ; BSR set to: 14
  3204   002430  0012               	return		;funcret
  3205   002432                     __end_of_I2C_2_Master_Init:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _Color2String *****************
  3209 ;; Defined at:
  3210 ;;		line 38 in file "serial.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  buf             2   88[COMRAM] PTR unsigned char 
  3213 ;;		 -> main@data(30), 
  3214 ;;  colorf          2   90[COMRAM] PTR struct RGBC_rel
  3215 ;;		 -> colorf(8), 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;Total ram usage:        4 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 8
  3234 ;; This function calls:
  3235 ;;		_sendStringSerial4
  3236 ;;		_sprintf
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text22
  3243   001FEA                     __ptext22:
  3244                           	callstack 0
  3245   001FEA                     _Color2String:
  3246                           	callstack 22
  3247   001FEA                     
  3248                           ;serial.c: 40:     sprintf(buf,"Red %d Green,%d Blue,%d Clear %d \r",colorf->Rf,
  3249   001FEA  C059  F0AC         	movff	Color2String@buf,sprintf@s
  3250   001FEE  C05A  F0AD         	movff	Color2String@buf+1,sprintf@s+1
  3251   001FF2  0E01               	movlw	low STR_1
  3252   001FF4  0100               	movlb	0	; () banked
  3253   001FF6  6FAE               	movwf	sprintf@fmt& (0+255),b
  3254   001FF8  0E0E               	movlw	high STR_1
  3255   001FFA  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  3256   001FFC  C05B  FFD9         	movff	Color2String@colorf,fsr2l
  3257   002000  C05C  FFDA         	movff	Color2String@colorf+1,fsr2h
  3258   002004  CFDE F0B0          	movff	postinc2,?_sprintf+4
  3259   002008  CFDD F0B1          	movff	postdec2,?_sprintf+5
  3260   00200C  EE20 F002          	lfsr	2,2
  3261   002010  505B               	movf	Color2String@colorf^0,w,c
  3262   002012  26D9               	addwf	fsr2l,f,c
  3263   002014  505C               	movf	(Color2String@colorf+1)^0,w,c
  3264   002016  22DA               	addwfc	fsr2h,f,c
  3265   002018  CFDE F0B2          	movff	postinc2,?_sprintf+6
  3266   00201C  CFDD F0B3          	movff	postdec2,?_sprintf+7
  3267   002020  EE20 F004          	lfsr	2,4
  3268   002024  505B               	movf	Color2String@colorf^0,w,c
  3269   002026  26D9               	addwf	fsr2l,f,c
  3270   002028  505C               	movf	(Color2String@colorf+1)^0,w,c
  3271   00202A  22DA               	addwfc	fsr2h,f,c
  3272   00202C  CFDE F0B4          	movff	postinc2,?_sprintf+8
  3273   002030  CFDD F0B5          	movff	postdec2,?_sprintf+9
  3274   002034  EE20 F006          	lfsr	2,6
  3275   002038  505B               	movf	Color2String@colorf^0,w,c
  3276   00203A  26D9               	addwf	fsr2l,f,c
  3277   00203C  505C               	movf	(Color2String@colorf+1)^0,w,c
  3278   00203E  22DA               	addwfc	fsr2h,f,c
  3279   002040  CFDE F0B6          	movff	postinc2,?_sprintf+10
  3280   002044  CFDD F0B7          	movff	postdec2,?_sprintf+11
  3281   002048  EC57  F010         	call	_sprintf	;wreg free
  3282   00204C                     
  3283                           ;serial.c: 42:     sendStringSerial4(buf);
  3284   00204C  C059  F002         	movff	Color2String@buf,sendStringSerial4@string
  3285   002050  C05A  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  3286   002054  ECE8  F011         	call	_sendStringSerial4	;wreg free
  3287   002058  0012               	return		;funcret
  3288   00205A                     __end_of_Color2String:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _sprintf *****************
  3292 ;; Defined at:
  3293 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3296 ;;		 -> main@data(30), 
  3297 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3298 ;;		 -> STR_1(35), 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  f              11   14[BANK0 ] struct _IO_FILE
  3301 ;;  ap              2   12[BANK0 ] PTR void [1]
  3302 ;;		 -> ?_sprintf(2), 
  3303 ;;  ret             2    0        int 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2    0[BANK0 ] int 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3313 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;Total ram usage:       25 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 7
  3320 ;; This function calls:
  3321 ;;		_vfprintf
  3322 ;; This function is called by:
  3323 ;;		_Color2String
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text23
  3328   0020AE                     __ptext23:
  3329                           	callstack 0
  3330   0020AE                     _sprintf:
  3331                           	callstack 22
  3332   0020AE  0EB0               	movlw	low (?_sprintf+4)
  3333   0020B0  0100               	movlb	0	; () banked
  3334   0020B2  6FB8               	movwf	sprintf@ap& (0+255),b
  3335   0020B4  0E00               	movlw	high (?_sprintf+4)
  3336   0020B6  6FB9               	movwf	(sprintf@ap+1)& (0+255),b
  3337   0020B8  C0AC  F0BA         	movff	sprintf@s,sprintf@f
  3338   0020BC  C0AD  F0BB         	movff	sprintf@s+1,sprintf@f+1
  3339   0020C0                     
  3340                           ; BSR set to: 0
  3341   0020C0  0E00               	movlw	0
  3342   0020C2  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  3343   0020C4  0E00               	movlw	0
  3344   0020C6  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  3345   0020C8                     
  3346                           ; BSR set to: 0
  3347   0020C8  0E00               	movlw	0
  3348   0020CA  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  3349   0020CC  0E00               	movlw	0
  3350   0020CE  6FC3               	movwf	(sprintf@f+9)& (0+255),b
  3351   0020D0                     
  3352                           ; BSR set to: 0
  3353   0020D0  0EBA               	movlw	low sprintf@f
  3354   0020D2  6E51               	movwf	vfprintf@fp^0,c
  3355   0020D4  0E00               	movlw	high sprintf@f
  3356   0020D6  6E52               	movwf	(vfprintf@fp+1)^0,c
  3357   0020D8  C0AE  F053         	movff	sprintf@fmt,vfprintf@fmt
  3358   0020DC  C0AF  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3359   0020E0  0EB8               	movlw	low sprintf@ap
  3360   0020E2  6E55               	movwf	vfprintf@ap^0,c
  3361   0020E4  0E00               	movlw	high sprintf@ap
  3362   0020E6  6E56               	movwf	(vfprintf@ap+1)^0,c
  3363   0020E8  EC20  F011         	call	_vfprintf	;wreg free
  3364   0020EC  0100               	movlb	0	; () banked
  3365   0020EE  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  3366   0020F0  25AC               	addwf	sprintf@s& (0+255),w,b
  3367   0020F2  6ED9               	movwf	fsr2l,c
  3368   0020F4  51BE               	movf	(sprintf@f+4)& (0+255),w,b
  3369   0020F6  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  3370   0020F8  6EDA               	movwf	fsr2h,c
  3371   0020FA  0E00               	movlw	0
  3372   0020FC  6EDF               	movwf	indf2,c
  3373   0020FE                     
  3374                           ; BSR set to: 0
  3375   0020FE  0012               	return		;funcret
  3376   002100                     __end_of_sprintf:
  3377                           	callstack 0
  3378                           
  3379 ;; *************** function _vfprintf *****************
  3380 ;; Defined at:
  3381 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  3384 ;;		 -> sprintf@f(11), 
  3385 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  3386 ;;		 -> STR_1(35), 
  3387 ;;  ap              2   84[COMRAM] PTR PTR void 
  3388 ;;		 -> sprintf@ap(2), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  3391 ;;		 -> STR_1(35), 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  2   80[COMRAM] int 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3401 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;Total ram usage:        8 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 6
  3408 ;; This function calls:
  3409 ;;		_vfpfcnvrt
  3410 ;; This function is called by:
  3411 ;;		_sprintf
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text24
  3416   002240                     __ptext24:
  3417                           	callstack 0
  3418   002240                     _vfprintf:
  3419                           	callstack 22
  3420   002240                     
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3422   002240  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  3423   002244  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3426   002248  EF34  F011         	goto	l1851
  3427   00224C                     l1849:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3430   00224C  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  3431   002250  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3432   002254  0E57               	movlw	low vfprintf@cfmt
  3433   002256  6E41               	movwf	vfpfcnvrt@fmt^0,c
  3434   002258  0E00               	movlw	high vfprintf@cfmt
  3435   00225A  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3436   00225C  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  3437   002260  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3438   002264  EC29  F00E         	call	_vfpfcnvrt	;wreg free
  3439   002268                     l1851:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3442   002268  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  3443   00226C  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3444   002270                     	if	0	;tblptru may be non-zero
  3445   002270                     	endif
  3446   002270                     	if	0	;tblptru may be non-zero
  3447   002270                     	endif
  3448   002270  0008               	tblrd		*
  3449   002272  50F5               	movf	tablat,w,c
  3450   002274  0900               	iorlw	0
  3451   002276  A4D8               	btfss	status,2,c
  3452   002278  EF40  F011         	goto	u1221
  3453   00227C  EF42  F011         	goto	u1220
  3454   002280                     u1221:
  3455   002280  EF26  F011         	goto	l1849
  3456   002284                     u1220:
  3457   002284                     
  3458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3459   002284  0E00               	movlw	0
  3460   002286  6E52               	movwf	(?_vfprintf+1)^0,c
  3461   002288  0E00               	movlw	0
  3462   00228A  6E51               	movwf	?_vfprintf^0,c
  3463   00228C  0012               	return		;funcret
  3464   00228E                     __end_of_vfprintf:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _vfpfcnvrt *****************
  3468 ;; Defined at:
  3469 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  3472 ;;		 -> sprintf@f(11), 
  3473 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  3474 ;;		 -> vfprintf@cfmt(2), 
  3475 ;;  ap              2   66[COMRAM] PTR PTR void 
  3476 ;;		 -> sprintf@ap(2), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  convarg         8   70[COMRAM] struct .
  3479 ;;  cp              2   78[COMRAM] PTR unsigned char 
  3480 ;;		 -> STR_1(35), 
  3481 ;;  i               2    0        int 
  3482 ;;  done            2    0        int 
  3483 ;;  c               1    0        unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3493 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;Total ram usage:       18 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_dtoa
  3502 ;;		_fputc
  3503 ;; This function is called by:
  3504 ;;		_vfprintf
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text25
  3509   001C52                     __ptext25:
  3510                           	callstack 0
  3511   001C52                     _vfpfcnvrt:
  3512                           	callstack 22
  3513   001C52                     
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3515   001C52  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3516   001C56  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3517   001C5A  CFDE FFF6          	movff	postinc2,tblptrl
  3518   001C5E  CFDD FFF7          	movff	postdec2,tblptrh
  3519   001C62                     	if	0	;tblptru may be non-zero
  3520   001C62                     	endif
  3521   001C62                     	if	0	;tblptru may be non-zero
  3522   001C62                     	endif
  3523   001C62  0008               	tblrd		*
  3524   001C64  50F5               	movf	tablat,w,c
  3525   001C66  0A25               	xorlw	37
  3526   001C68  A4D8               	btfss	status,2,c
  3527   001C6A  EF39  F00E         	goto	u1161
  3528   001C6E  EF3B  F00E         	goto	u1160
  3529   001C72                     u1161:
  3530   001C72  EFBB  F00E         	goto	l1817
  3531   001C76                     u1160:
  3532   001C76                     
  3533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3534   001C76  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3535   001C7A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3536   001C7E  2ADE               	incf	postinc2,f,c
  3537   001C80  0E00               	movlw	0
  3538   001C82  22DD               	addwfc	postdec2,f,c
  3539   001C84                     
  3540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3541   001C84  0E00               	movlw	0
  3542   001C86  0100               	movlb	0	; () banked
  3543   001C88  6F75               	movwf	(_width+1)& (0+255),b
  3544   001C8A  0E00               	movlw	0
  3545   001C8C  6F74               	movwf	_width& (0+255),b
  3546   001C8E  C074  F078         	movff	_width,_flags
  3547   001C92                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3550   001C92  6976               	setf	_prec& (0+255),b
  3551   001C94  6977               	setf	(_prec+1)& (0+255),b
  3552   001C96                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3555   001C96  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3556   001C9A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3557   001C9E  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  3558   001CA2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  3559   001CA6                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3562   001CA6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3563   001CAA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3564   001CAE                     	if	0	;tblptru may be non-zero
  3565   001CAE                     	endif
  3566   001CAE                     	if	0	;tblptru may be non-zero
  3567   001CAE                     	endif
  3568   001CAE  0008               	tblrd		*
  3569   001CB0  50F5               	movf	tablat,w,c
  3570   001CB2  0A64               	xorlw	100
  3571   001CB4  B4D8               	btfsc	status,2,c
  3572   001CB6  EF5F  F00E         	goto	u1171
  3573   001CBA  EF61  F00E         	goto	u1170
  3574   001CBE                     u1171:
  3575   001CBE  EF6F  F00E         	goto	l1807
  3576   001CC2                     u1170:
  3577   001CC2                     
  3578                           ; BSR set to: 0
  3579   001CC2  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3580   001CC6  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3581   001CCA                     	if	0	;tblptru may be non-zero
  3582   001CCA                     	endif
  3583   001CCA                     	if	0	;tblptru may be non-zero
  3584   001CCA                     	endif
  3585   001CCA  0008               	tblrd		*
  3586   001CCC  50F5               	movf	tablat,w,c
  3587   001CCE  0A69               	xorlw	105
  3588   001CD0  A4D8               	btfss	status,2,c
  3589   001CD2  EF6D  F00E         	goto	u1181
  3590   001CD6  EF6F  F00E         	goto	u1180
  3591   001CDA                     u1181:
  3592   001CDA  EFB2  F00E         	goto	l1813
  3593   001CDE                     u1180:
  3594   001CDE                     l1807:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3598   001CDE  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3599   001CE2  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3600   001CE6  CFDF F045          	movff	indf2,??_vfpfcnvrt
  3601   001CEA  0E02               	movlw	2
  3602   001CEC  26DE               	addwf	postinc2,f,c
  3603   001CEE  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  3604   001CF2  0E00               	movlw	0
  3605   001CF4  22DD               	addwfc	postdec2,f,c
  3606   001CF6  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3607   001CFA  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3608   001CFE  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  3609   001D02  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  3610   001D06  0E00               	movlw	0
  3611   001D08  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3612   001D0A  0EFF               	movlw	-1
  3613   001D0C  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  3614   001D0E  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  3615   001D10  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  3616   001D12  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  3617   001D14  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  3618   001D16  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3621   001D18  0E01               	movlw	1
  3622   001D1A  244F               	addwf	vfpfcnvrt@cp^0,w,c
  3623   001D1C  6E45               	movwf	??_vfpfcnvrt^0,c
  3624   001D1E  0E00               	movlw	0
  3625   001D20  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3626   001D22  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  3627   001D24  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3628   001D28  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3629   001D2C  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  3630   001D30  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3631   001D34                     
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3634   001D34  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3635   001D38  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3636   001D3C  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3637   001D40  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3638   001D44  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3639   001D48  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3640   001D4C  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3641   001D50  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3642   001D54  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3643   001D58  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3644   001D5C  EC9B  F00A         	call	_dtoa	;wreg free
  3645   001D60  EFCF  F00E         	goto	l943
  3646   001D64                     l1813:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3649   001D64  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3650   001D68  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3651   001D6C  2ADE               	incf	postinc2,f,c
  3652   001D6E  0E00               	movlw	0
  3653   001D70  22DD               	addwfc	postdec2,f,c
  3654   001D72  EFCF  F00E         	goto	l943
  3655   001D76                     l1817:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3658   001D76  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3659   001D7A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3660   001D7E  CFDE FFF6          	movff	postinc2,tblptrl
  3661   001D82  CFDD FFF7          	movff	postdec2,tblptrh
  3662   001D86                     	if	0	;tblptru may be non-zero
  3663   001D86                     	endif
  3664   001D86                     	if	0	;tblptru may be non-zero
  3665   001D86                     	endif
  3666   001D86  0008               	tblrd		*
  3667   001D88  50F5               	movf	tablat,w,c
  3668   001D8A  6E01               	movwf	fputc@c^0,c
  3669   001D8C  6A02               	clrf	(fputc@c+1)^0,c
  3670   001D8E  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3671   001D92  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3672   001D96  EC53  F00F         	call	_fputc	;wreg free
  3673   001D9A  EFB2  F00E         	goto	l1813
  3674   001D9E                     l943:
  3675   001D9E  0012               	return		;funcret
  3676   001DA0                     __end_of_vfpfcnvrt:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _dtoa *****************
  3680 ;; Defined at:
  3681 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3684 ;;		 -> sprintf@f(11), 
  3685 ;;  d               8   29[COMRAM] long long 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  n               8   51[COMRAM] long long 
  3688 ;;  i               2   59[COMRAM] int 
  3689 ;;  w               2   49[COMRAM] int 
  3690 ;;  p               2   47[COMRAM] int 
  3691 ;;  s               1   61[COMRAM] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3701 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3704 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3705 ;;Total ram usage:       35 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 4
  3708 ;; This function calls:
  3709 ;;		___aodiv
  3710 ;;		___aomod
  3711 ;;		_abs
  3712 ;;		_pad
  3713 ;; This function is called by:
  3714 ;;		_vfpfcnvrt
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text26
  3719   001536                     __ptext26:
  3720                           	callstack 0
  3721   001536                     _dtoa:
  3722                           	callstack 22
  3723   001536                     
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3725   001536  C01E  F034         	movff	dtoa@d,dtoa@n
  3726   00153A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  3727   00153E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  3728   001542  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  3729   001546  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  3730   00154A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  3731   00154E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  3732   001552  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  3733   001556                     
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3735   001556  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  3736   001558  EFB0  F00A         	goto	u1061
  3737   00155C  EFB3  F00A         	goto	u1060
  3738   001560                     u1061:
  3739   001560  0E01               	movlw	1
  3740   001562  EFB4  F00A         	goto	u1070
  3741   001566                     u1060:
  3742   001566  0E00               	movlw	0
  3743   001568                     u1070:
  3744   001568  6E3E               	movwf	dtoa@s^0,c
  3745   00156A                     
  3746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3747   00156A  503E               	movf	dtoa@s^0,w,c
  3748   00156C  B4D8               	btfsc	status,2,c
  3749   00156E  EFBB  F00A         	goto	u1081
  3750   001572  EFBD  F00A         	goto	u1080
  3751   001576                     u1081:
  3752   001576  EFCD  F00A         	goto	l1737
  3753   00157A                     u1080:
  3754   00157A                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3756   00157A  1E3B               	comf	(dtoa@n+7)^0,f,c
  3757   00157C  1E3A               	comf	(dtoa@n+6)^0,f,c
  3758   00157E  1E39               	comf	(dtoa@n+5)^0,f,c
  3759   001580  1E38               	comf	(dtoa@n+4)^0,f,c
  3760   001582  1E37               	comf	(dtoa@n+3)^0,f,c
  3761   001584  1E36               	comf	(dtoa@n+2)^0,f,c
  3762   001586  1E35               	comf	(dtoa@n+1)^0,f,c
  3763   001588  6C34               	negf	dtoa@n^0,c
  3764   00158A  0E00               	movlw	0
  3765   00158C  2235               	addwfc	(dtoa@n+1)^0,f,c
  3766   00158E  2236               	addwfc	(dtoa@n+2)^0,f,c
  3767   001590  2237               	addwfc	(dtoa@n+3)^0,f,c
  3768   001592  2238               	addwfc	(dtoa@n+4)^0,f,c
  3769   001594  2239               	addwfc	(dtoa@n+5)^0,f,c
  3770   001596  223A               	addwfc	(dtoa@n+6)^0,f,c
  3771   001598  223B               	addwfc	(dtoa@n+7)^0,f,c
  3772   00159A                     l1737:
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3775   00159A  0100               	movlb	0	; () banked
  3776   00159C  BF77               	btfsc	(_prec+1)& (0+255),7,b
  3777   00159E  EFDB  F00A         	goto	u1090
  3778   0015A2  5177               	movf	(_prec+1)& (0+255),w,b
  3779   0015A4  E106               	bnz	u1091
  3780   0015A6  0576               	decf	_prec& (0+255),w,b
  3781   0015A8  B0D8               	btfsc	status,0,c
  3782   0015AA  EFD9  F00A         	goto	u1091
  3783   0015AE  EFDB  F00A         	goto	u1090
  3784   0015B2                     u1091:
  3785   0015B2  EFE1  F00A         	goto	l922
  3786   0015B6                     u1090:
  3787   0015B6                     
  3788                           ; BSR set to: 0
  3789   0015B6  0E00               	movlw	0
  3790   0015B8  6E31               	movwf	(dtoa@p+1)^0,c
  3791   0015BA  0E01               	movlw	1
  3792   0015BC  6E30               	movwf	dtoa@p^0,c
  3793   0015BE  EFE5  F00A         	goto	l924
  3794   0015C2                     l922:
  3795                           
  3796                           ; BSR set to: 0
  3797   0015C2  C076  F030         	movff	_prec,dtoa@p
  3798   0015C6  C077  F031         	movff	_prec+1,dtoa@p+1
  3799   0015CA                     l924:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3803   0015CA  C074  F032         	movff	_width,dtoa@w
  3804   0015CE  C075  F033         	movff	_width+1,dtoa@w+1
  3805   0015D2                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3808   0015D2  503E               	movf	dtoa@s^0,w,c
  3809   0015D4  B4D8               	btfsc	status,2,c
  3810   0015D6  EFEF  F00A         	goto	u1101
  3811   0015DA  EFF1  F00A         	goto	u1100
  3812   0015DE                     u1101:
  3813   0015DE  EF08  F00B         	goto	l925
  3814   0015E2                     u1100:
  3815   0015E2                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3818   0015E2  0632               	decf	dtoa@w^0,f,c
  3819   0015E4  A0D8               	btfss	status,0,c
  3820   0015E6  0633               	decf	(dtoa@w+1)^0,f,c
  3821   0015E8                     
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3824   0015E8  503E               	movf	dtoa@s^0,w,c
  3825   0015EA  A4D8               	btfss	status,2,c
  3826   0015EC  EFFA  F00A         	goto	u1111
  3827   0015F0  EFFC  F00A         	goto	u1110
  3828   0015F4                     u1111:
  3829   0015F4  EF02  F00B         	goto	l1749
  3830   0015F8                     u1110:
  3831   0015F8                     
  3832                           ; BSR set to: 0
  3833   0015F8  0E00               	movlw	0
  3834   0015FA  6E2F               	movwf	(_dtoa$1092+1)^0,c
  3835   0015FC  0E2B               	movlw	43
  3836   0015FE  6E2E               	movwf	_dtoa$1092^0,c
  3837   001600  EF06  F00B         	goto	l1751
  3838   001604                     l1749:
  3839                           
  3840                           ; BSR set to: 0
  3841   001604  0E00               	movlw	0
  3842   001606  6E2F               	movwf	(_dtoa$1092+1)^0,c
  3843   001608  0E2D               	movlw	45
  3844   00160A  6E2E               	movwf	_dtoa$1092^0,c
  3845   00160C                     l1751:
  3846                           
  3847                           ; BSR set to: 0
  3848   00160C  C02E  F03E         	movff	_dtoa$1092,dtoa@s
  3849   001610                     l925:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3853   001610  0E00               	movlw	0
  3854   001612  6E3D               	movwf	(dtoa@i+1)^0,c
  3855   001614  0E1F               	movlw	31
  3856   001616  6E3C               	movwf	dtoa@i^0,c
  3857   001618                     
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3860   001618  0E00               	movlw	0
  3861   00161A  6F9B               	movwf	(_dbuf+31)& (0+255),b
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3864   00161C  EF8C  F00B         	goto	l1765
  3865   001620                     l1755:
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3868   001620  063C               	decf	dtoa@i^0,f,c
  3869   001622  A0D8               	btfss	status,0,c
  3870   001624  063D               	decf	(dtoa@i+1)^0,f,c
  3871   001626                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3873   001626  0E7C               	movlw	low _dbuf
  3874   001628  243C               	addwf	dtoa@i^0,w,c
  3875   00162A  6ED9               	movwf	fsr2l,c
  3876   00162C  0E00               	movlw	high _dbuf
  3877   00162E  203D               	addwfc	(dtoa@i+1)^0,w,c
  3878   001630  6EDA               	movwf	fsr2h,c
  3879   001632  C034  F001         	movff	dtoa@n,___aomod@dividend
  3880   001636  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3881   00163A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3882   00163E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3883   001642  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3884   001646  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3885   00164A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3886   00164E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3887   001652  0E0A               	movlw	10
  3888   001654  6E09               	movwf	___aomod@divisor^0,c
  3889   001656  0E00               	movlw	0
  3890   001658  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3891   00165A  0E00               	movlw	0
  3892   00165C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3893   00165E  0E00               	movlw	0
  3894   001660  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3895   001662  0E00               	movlw	0
  3896   001664  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3897   001666  0E00               	movlw	0
  3898   001668  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3899   00166A  0E00               	movlw	0
  3900   00166C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3901   00166E  0E00               	movlw	0
  3902   001670  6E10               	movwf	(___aomod@divisor+7)^0,c
  3903   001672  EC77  F00D         	call	___aomod	;wreg free
  3904   001676  C001  F026         	movff	?___aomod,??_dtoa
  3905   00167A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3906   00167E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3907   001682  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3908   001686  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3909   00168A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3910   00168E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3911   001692  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3912   001696  C026  F013         	movff	??_dtoa,abs@a
  3913   00169A  C027  F014         	movff	??_dtoa+1,abs@a+1
  3914   00169E  ECAB  F011         	call	_abs	;wreg free
  3915   0016A2  5013               	movf	?_abs^0,w,c
  3916   0016A4  0F30               	addlw	48
  3917   0016A6  6EDF               	movwf	indf2,c
  3918   0016A8                     
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3920   0016A8  0630               	decf	dtoa@p^0,f,c
  3921   0016AA  A0D8               	btfss	status,0,c
  3922   0016AC  0631               	decf	(dtoa@p+1)^0,f,c
  3923   0016AE                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3925   0016AE  0632               	decf	dtoa@w^0,f,c
  3926   0016B0  A0D8               	btfss	status,0,c
  3927   0016B2  0633               	decf	(dtoa@w+1)^0,f,c
  3928   0016B4                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3930   0016B4  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3931   0016B8  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3932   0016BC  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3933   0016C0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3934   0016C4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3935   0016C8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3936   0016CC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3937   0016D0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3938   0016D4  0E0A               	movlw	10
  3939   0016D6  6E09               	movwf	___aodiv@divisor^0,c
  3940   0016D8  0E00               	movlw	0
  3941   0016DA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3942   0016DC  0E00               	movlw	0
  3943   0016DE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3944   0016E0  0E00               	movlw	0
  3945   0016E2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3946   0016E4  0E00               	movlw	0
  3947   0016E6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3948   0016E8  0E00               	movlw	0
  3949   0016EA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3950   0016EC  0E00               	movlw	0
  3951   0016EE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3952   0016F0  0E00               	movlw	0
  3953   0016F2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3954   0016F4  ECB3  F00C         	call	___aodiv	;wreg free
  3955   0016F8  C001  F034         	movff	?___aodiv,dtoa@n
  3956   0016FC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3957   001700  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3958   001704  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3959   001708  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3960   00170C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3961   001710  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3962   001714  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3963   001718                     l1765:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3966   001718  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3967   00171A  EF97  F00B         	goto	u1121
  3968   00171E  503D               	movf	(dtoa@i+1)^0,w,c
  3969   001720  E108               	bnz	u1120
  3970   001722  043C               	decf	dtoa@i^0,w,c
  3971   001724  A0D8               	btfss	status,0,c
  3972   001726  EF97  F00B         	goto	u1121
  3973   00172A  EF99  F00B         	goto	u1120
  3974   00172E                     u1121:
  3975   00172E  EFB5  F00B         	goto	l1771
  3976   001732                     u1120:
  3977   001732  5034               	movf	dtoa@n^0,w,c
  3978   001734  1035               	iorwf	(dtoa@n+1)^0,w,c
  3979   001736  1036               	iorwf	(dtoa@n+2)^0,w,c
  3980   001738  1037               	iorwf	(dtoa@n+3)^0,w,c
  3981   00173A  1038               	iorwf	(dtoa@n+4)^0,w,c
  3982   00173C  1039               	iorwf	(dtoa@n+5)^0,w,c
  3983   00173E  103A               	iorwf	(dtoa@n+6)^0,w,c
  3984   001740  103B               	iorwf	(dtoa@n+7)^0,w,c
  3985   001742  A4D8               	btfss	status,2,c
  3986   001744  EFA6  F00B         	goto	u1131
  3987   001748  EFA8  F00B         	goto	u1130
  3988   00174C                     u1131:
  3989   00174C  EF10  F00B         	goto	l1755
  3990   001750                     u1130:
  3991   001750  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3992   001752  EFB5  F00B         	goto	u1140
  3993   001756  5031               	movf	(dtoa@p+1)^0,w,c
  3994   001758  E106               	bnz	u1141
  3995   00175A  0430               	decf	dtoa@p^0,w,c
  3996   00175C  B0D8               	btfsc	status,0,c
  3997   00175E  EFB3  F00B         	goto	u1141
  3998   001762  EFB5  F00B         	goto	u1140
  3999   001766                     u1141:
  4000   001766  EF10  F00B         	goto	l1755
  4001   00176A                     u1140:
  4002   00176A                     l1771:
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4005   00176A  503E               	movf	dtoa@s^0,w,c
  4006   00176C  B4D8               	btfsc	status,2,c
  4007   00176E  EFBB  F00B         	goto	u1151
  4008   001772  EFBD  F00B         	goto	u1150
  4009   001776                     u1151:
  4010   001776  EFC8  F00B         	goto	l1777
  4011   00177A                     u1150:
  4012   00177A                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4014   00177A  063C               	decf	dtoa@i^0,f,c
  4015   00177C  A0D8               	btfss	status,0,c
  4016   00177E  063D               	decf	(dtoa@i+1)^0,f,c
  4017   001780                     
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4019   001780  0E7C               	movlw	low _dbuf
  4020   001782  243C               	addwf	dtoa@i^0,w,c
  4021   001784  6ED9               	movwf	fsr2l,c
  4022   001786  0E00               	movlw	high _dbuf
  4023   001788  203D               	addwfc	(dtoa@i+1)^0,w,c
  4024   00178A  6EDA               	movwf	fsr2h,c
  4025   00178C  C03E  FFDF         	movff	dtoa@s,indf2
  4026   001790                     l1777:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4029   001790  C01C  F011         	movff	dtoa@fp,pad@fp
  4030   001794  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4031   001798  0E7C               	movlw	low _dbuf
  4032   00179A  243C               	addwf	dtoa@i^0,w,c
  4033   00179C  6E13               	movwf	pad@buf^0,c
  4034   00179E  0E00               	movlw	high _dbuf
  4035   0017A0  203D               	addwfc	(dtoa@i+1)^0,w,c
  4036   0017A2  6E14               	movwf	(pad@buf+1)^0,c
  4037   0017A4  C032  F015         	movff	dtoa@w,pad@p
  4038   0017A8  C033  F016         	movff	dtoa@w+1,pad@p+1
  4039   0017AC  ECB8  F00F         	call	_pad	;wreg free
  4040   0017B0  0012               	return		;funcret
  4041   0017B2                     __end_of_dtoa:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _pad *****************
  4045 ;; Defined at:
  4046 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4049 ;;		 -> sprintf@f(11), 
  4050 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4051 ;;		 -> dbuf(32), 
  4052 ;;  p               2   20[COMRAM] int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  w               2   25[COMRAM] int 
  4055 ;;  i               2   23[COMRAM] int 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;Total ram usage:       11 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 3
  4072 ;; This function calls:
  4073 ;;		_fputc
  4074 ;;		_fputs
  4075 ;; This function is called by:
  4076 ;;		_dtoa
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text27
  4081   001F70                     __ptext27:
  4082                           	callstack 0
  4083   001F70                     _pad:
  4084                           	callstack 22
  4085   001F70                     
  4086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  4087   001F70  BE16               	btfsc	(pad@p+1)^0,7,c
  4088   001F72  EFBD  F00F         	goto	u1011
  4089   001F76  EFBF  F00F         	goto	u1010
  4090   001F7A                     u1011:
  4091   001F7A  EFC5  F00F         	goto	l1711
  4092   001F7E                     u1010:
  4093   001F7E  C015  F01A         	movff	pad@p,pad@w
  4094   001F82  C016  F01B         	movff	pad@p+1,pad@w+1
  4095   001F86  EFC9  F00F         	goto	l913
  4096   001F8A                     l1711:
  4097   001F8A  0E00               	movlw	0
  4098   001F8C  6E1B               	movwf	(pad@w+1)^0,c
  4099   001F8E  0E00               	movlw	0
  4100   001F90  6E1A               	movwf	pad@w^0,c
  4101   001F92                     l913:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4104   001F92  0E00               	movlw	0
  4105   001F94  6E19               	movwf	(pad@i+1)^0,c
  4106   001F96  0E00               	movlw	0
  4107   001F98  6E18               	movwf	pad@i^0,c
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4110   001F9A  EFDB  F00F         	goto	l1717
  4111   001F9E                     l1713:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4114   001F9E  0E00               	movlw	0
  4115   001FA0  6E02               	movwf	(fputc@c+1)^0,c
  4116   001FA2  0E20               	movlw	32
  4117   001FA4  6E01               	movwf	fputc@c^0,c
  4118   001FA6  C011  F003         	movff	pad@fp,fputc@fp
  4119   001FAA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4120   001FAE  EC53  F00F         	call	_fputc	;wreg free
  4121   001FB2                     
  4122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4123   001FB2  4A18               	infsnz	pad@i^0,f,c
  4124   001FB4  2A19               	incf	(pad@i+1)^0,f,c
  4125   001FB6                     l1717:
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4128   001FB6  501A               	movf	pad@w^0,w,c
  4129   001FB8  5C18               	subwf	pad@i^0,w,c
  4130   001FBA  5019               	movf	(pad@i+1)^0,w,c
  4131   001FBC  0A80               	xorlw	128
  4132   001FBE  6E17               	movwf	??_pad^0,c
  4133   001FC0  501B               	movf	(pad@w+1)^0,w,c
  4134   001FC2  0A80               	xorlw	128
  4135   001FC4  5817               	subwfb	??_pad^0,w,c
  4136   001FC6  A0D8               	btfss	status,0,c
  4137   001FC8  EFE8  F00F         	goto	u1021
  4138   001FCC  EFEA  F00F         	goto	u1020
  4139   001FD0                     u1021:
  4140   001FD0  EFCF  F00F         	goto	l1713
  4141   001FD4                     u1020:
  4142   001FD4                     
  4143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4144   001FD4  C013  F00A         	movff	pad@buf,fputs@s
  4145   001FD8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4146   001FDC  C011  F00C         	movff	pad@fp,fputs@fp
  4147   001FE0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4148   001FE4  EC47  F011         	call	_fputs	;wreg free
  4149   001FE8  0012               	return		;funcret
  4150   001FEA                     __end_of_pad:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _fputs *****************
  4154 ;; Defined at:
  4155 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4158 ;;		 -> dbuf(32), 
  4159 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4160 ;;		 -> sprintf@f(11), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  i               2   14[COMRAM] int 
  4163 ;;  c               1   13[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    9[COMRAM] int 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;Total ram usage:        7 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 2
  4180 ;; This function calls:
  4181 ;;		_fputc
  4182 ;; This function is called by:
  4183 ;;		_pad
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text28
  4188   00228E                     __ptext28:
  4189                           	callstack 0
  4190   00228E                     _fputs:
  4191                           	callstack 22
  4192   00228E  0E00               	movlw	0
  4193   002290  6E10               	movwf	(fputs@i+1)^0,c
  4194   002292  0E00               	movlw	0
  4195   002294  6E0F               	movwf	fputs@i^0,c
  4196   002296  EF58  F011         	goto	l1625
  4197   00229A                     l1621:
  4198   00229A  C00E  F001         	movff	fputs@c,fputc@c
  4199   00229E  6A02               	clrf	(fputc@c+1)^0,c
  4200   0022A0  C00C  F003         	movff	fputs@fp,fputc@fp
  4201   0022A4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4202   0022A8  EC53  F00F         	call	_fputc	;wreg free
  4203   0022AC  4A0F               	infsnz	fputs@i^0,f,c
  4204   0022AE  2A10               	incf	(fputs@i+1)^0,f,c
  4205   0022B0                     l1625:
  4206   0022B0  500F               	movf	fputs@i^0,w,c
  4207   0022B2  240A               	addwf	fputs@s^0,w,c
  4208   0022B4  6ED9               	movwf	fsr2l,c
  4209   0022B6  5010               	movf	(fputs@i+1)^0,w,c
  4210   0022B8  200B               	addwfc	(fputs@s+1)^0,w,c
  4211   0022BA  6EDA               	movwf	fsr2h,c
  4212   0022BC  50DF               	movf	indf2,w,c
  4213   0022BE  6E0E               	movwf	fputs@c^0,c
  4214   0022C0  500E               	movf	fputs@c^0,w,c
  4215   0022C2  A4D8               	btfss	status,2,c
  4216   0022C4  EF66  F011         	goto	u871
  4217   0022C8  EF68  F011         	goto	u870
  4218   0022CC                     u871:
  4219   0022CC  EF4D  F011         	goto	l1621
  4220   0022D0                     u870:
  4221   0022D0  0012               	return		;funcret
  4222   0022D2                     __end_of_fputs:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _fputc *****************
  4226 ;; Defined at:
  4227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  c               2    0[COMRAM] int 
  4230 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4231 ;;		 -> sprintf@f(11), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  2    0[COMRAM] int 
  4236 ;; Registers used:
  4237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;Total ram usage:        9 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; Hardware stack levels required when called: 1
  4250 ;; This function calls:
  4251 ;;		_putch
  4252 ;; This function is called by:
  4253 ;;		_pad
  4254 ;;		_vfpfcnvrt
  4255 ;;		_fputs
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text29
  4260   001EA6                     __ptext29:
  4261                           	callstack 0
  4262   001EA6                     _fputc:
  4263                           	callstack 25
  4264   001EA6  5003               	movf	fputc@fp^0,w,c
  4265   001EA8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4266   001EAA  B4D8               	btfsc	status,2,c
  4267   001EAC  EF5A  F00F         	goto	u831
  4268   001EB0  EF5C  F00F         	goto	u830
  4269   001EB4                     u831:
  4270   001EB4  EF65  F00F         	goto	l1609
  4271   001EB8                     u830:
  4272   001EB8  5003               	movf	fputc@fp^0,w,c
  4273   001EBA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4274   001EBC  A4D8               	btfss	status,2,c
  4275   001EBE  EF63  F00F         	goto	u841
  4276   001EC2  EF65  F00F         	goto	u840
  4277   001EC6                     u841:
  4278   001EC6  EF6A  F00F         	goto	l1611
  4279   001ECA                     u840:
  4280   001ECA                     l1609:
  4281   001ECA  5001               	movf	fputc@c^0,w,c
  4282   001ECC  EC98  F012         	call	_putch
  4283   001ED0  EFB7  F00F         	goto	l968
  4284   001ED4                     l1611:
  4285   001ED4  EE20 F009          	lfsr	2,9
  4286   001ED8  5003               	movf	fputc@fp^0,w,c
  4287   001EDA  26D9               	addwf	fsr2l,f,c
  4288   001EDC  5004               	movf	(fputc@fp+1)^0,w,c
  4289   001EDE  22DA               	addwfc	fsr2h,f,c
  4290   001EE0  50DE               	movf	postinc2,w,c
  4291   001EE2  10DE               	iorwf	postinc2,w,c
  4292   001EE4  B4D8               	btfsc	status,2,c
  4293   001EE6  EF77  F00F         	goto	u851
  4294   001EEA  EF79  F00F         	goto	u850
  4295   001EEE                     u851:
  4296   001EEE  EF94  F00F         	goto	l1615
  4297   001EF2                     u850:
  4298   001EF2  EE20 F009          	lfsr	2,9
  4299   001EF6  5003               	movf	fputc@fp^0,w,c
  4300   001EF8  26D9               	addwf	fsr2l,f,c
  4301   001EFA  5004               	movf	(fputc@fp+1)^0,w,c
  4302   001EFC  22DA               	addwfc	fsr2h,f,c
  4303   001EFE  EE10 F003          	lfsr	1,3
  4304   001F02  5003               	movf	fputc@fp^0,w,c
  4305   001F04  26E1               	addwf	fsr1l,f,c
  4306   001F06  5004               	movf	(fputc@fp+1)^0,w,c
  4307   001F08  22E2               	addwfc	fsr1h,f,c
  4308   001F0A  50DE               	movf	postinc2,w,c
  4309   001F0C  5CE6               	subwf	postinc1,w,c
  4310   001F0E  50E6               	movf	postinc1,w,c
  4311   001F10  0A80               	xorlw	128
  4312   001F12  6E09               	movwf	(??_fputc+4)^0,c
  4313   001F14  50DE               	movf	postinc2,w,c
  4314   001F16  0A80               	xorlw	128
  4315   001F18  5809               	subwfb	(??_fputc+4)^0,w,c
  4316   001F1A  B0D8               	btfsc	status,0,c
  4317   001F1C  EF92  F00F         	goto	u861
  4318   001F20  EF94  F00F         	goto	u860
  4319   001F24                     u861:
  4320   001F24  EFB7  F00F         	goto	l968
  4321   001F28                     u860:
  4322   001F28                     l1615:
  4323   001F28  EE20 F003          	lfsr	2,3
  4324   001F2C  5003               	movf	fputc@fp^0,w,c
  4325   001F2E  26D9               	addwf	fsr2l,f,c
  4326   001F30  5004               	movf	(fputc@fp+1)^0,w,c
  4327   001F32  22DA               	addwfc	fsr2h,f,c
  4328   001F34  CFDE F005          	movff	postinc2,??_fputc
  4329   001F38  CFDD F006          	movff	postdec2,??_fputc+1
  4330   001F3C  C003  FFD9         	movff	fputc@fp,fsr2l
  4331   001F40  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4332   001F44  CFDE F007          	movff	postinc2,??_fputc+2
  4333   001F48  CFDD F008          	movff	postdec2,??_fputc+3
  4334   001F4C  5005               	movf	??_fputc^0,w,c
  4335   001F4E  2407               	addwf	(??_fputc+2)^0,w,c
  4336   001F50  6ED9               	movwf	fsr2l,c
  4337   001F52  5006               	movf	(??_fputc+1)^0,w,c
  4338   001F54  2008               	addwfc	(??_fputc+3)^0,w,c
  4339   001F56  6EDA               	movwf	fsr2h,c
  4340   001F58  C001  FFDF         	movff	fputc@c,indf2
  4341   001F5C  EE20 F003          	lfsr	2,3
  4342   001F60  5003               	movf	fputc@fp^0,w,c
  4343   001F62  26D9               	addwf	fsr2l,f,c
  4344   001F64  5004               	movf	(fputc@fp+1)^0,w,c
  4345   001F66  22DA               	addwfc	fsr2h,f,c
  4346   001F68  2ADE               	incf	postinc2,f,c
  4347   001F6A  0E00               	movlw	0
  4348   001F6C  22DD               	addwfc	postdec2,f,c
  4349   001F6E                     l968:
  4350   001F6E  0012               	return		;funcret
  4351   001F70                     __end_of_fputc:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _putch *****************
  4355 ;; Defined at:
  4356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  c               1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  c               1    0[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_fputc
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text30
  4384   002530                     __ptext30:
  4385                           	callstack 0
  4386   002530                     _putch:
  4387                           	callstack 25
  4388   002530  0012               	return		;funcret
  4389   002532                     __end_of_putch:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _abs *****************
  4393 ;; Defined at:
  4394 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  a               2   18[COMRAM] int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  2   18[COMRAM] int 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;Total ram usage:        4 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_dtoa
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text31
  4422   002356                     __ptext31:
  4423                           	callstack 0
  4424   002356                     _abs:
  4425                           	callstack 25
  4426   002356  BE14               	btfsc	(abs@a+1)^0,7,c
  4427   002358  EFB8  F011         	goto	u1030
  4428   00235C  5014               	movf	(abs@a+1)^0,w,c
  4429   00235E  E106               	bnz	u1031
  4430   002360  0413               	decf	abs@a^0,w,c
  4431   002362  B0D8               	btfsc	status,0,c
  4432   002364  EFB6  F011         	goto	u1031
  4433   002368  EFB8  F011         	goto	u1030
  4434   00236C                     u1031:
  4435   00236C  EFC6  F011         	goto	l953
  4436   002370                     u1030:
  4437   002370  C013  F015         	movff	abs@a,??_abs
  4438   002374  C014  F016         	movff	abs@a+1,??_abs+1
  4439   002378  1E15               	comf	??_abs^0,f,c
  4440   00237A  1E16               	comf	(??_abs+1)^0,f,c
  4441   00237C  4A15               	infsnz	??_abs^0,f,c
  4442   00237E  2A16               	incf	(??_abs+1)^0,f,c
  4443   002380  C015  F013         	movff	??_abs,?_abs
  4444   002384  C016  F014         	movff	??_abs+1,?_abs+1
  4445   002388  EFCA  F011         	goto	l956
  4446   00238C                     l953:
  4447   00238C  C013  F013         	movff	abs@a,?_abs
  4448   002390  C014  F014         	movff	abs@a+1,?_abs+1
  4449   002394                     l956:
  4450   002394  0012               	return		;funcret
  4451   002396                     __end_of_abs:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function ___aomod *****************
  4455 ;; Defined at:
  4456 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  dividend        8    0[COMRAM] long long 
  4459 ;;  divisor         8    8[COMRAM] long long 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  sign            1   17[COMRAM] unsigned char 
  4462 ;;  counter         1   16[COMRAM] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  8    0[COMRAM] long long 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4472 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;Total ram usage:       18 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_dtoa
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text32
  4486   001AEE                     __ptext32:
  4487                           	callstack 0
  4488   001AEE                     ___aomod:
  4489                           	callstack 25
  4490   001AEE  0E00               	movlw	0
  4491   001AF0  6E12               	movwf	___aomod@sign^0,c
  4492   001AF2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4493   001AF4  EF80  F00D         	goto	u950
  4494   001AF8  EF7E  F00D         	goto	u951
  4495   001AFC                     u951:
  4496   001AFC  EF92  F00D         	goto	l1679
  4497   001B00                     u950:
  4498   001B00  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4499   001B02  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4500   001B04  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4501   001B06  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4502   001B08  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4503   001B0A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4504   001B0C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4505   001B0E  6C01               	negf	___aomod@dividend^0,c
  4506   001B10  0E00               	movlw	0
  4507   001B12  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4508   001B14  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4509   001B16  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4510   001B18  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4511   001B1A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4512   001B1C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4513   001B1E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4514   001B20  0E01               	movlw	1
  4515   001B22  6E12               	movwf	___aomod@sign^0,c
  4516   001B24                     l1679:
  4517   001B24  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4518   001B26  EF99  F00D         	goto	u960
  4519   001B2A  EF97  F00D         	goto	u961
  4520   001B2E                     u961:
  4521   001B2E  EFA9  F00D         	goto	l1683
  4522   001B32                     u960:
  4523   001B32  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4524   001B34  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4525   001B36  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4526   001B38  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4527   001B3A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4528   001B3C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4529   001B3E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4530   001B40  6C09               	negf	___aomod@divisor^0,c
  4531   001B42  0E00               	movlw	0
  4532   001B44  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4533   001B46  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4534   001B48  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4535   001B4A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4536   001B4C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4537   001B4E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4538   001B50  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4539   001B52                     l1683:
  4540   001B52  5009               	movf	___aomod@divisor^0,w,c
  4541   001B54  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4542   001B56  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4543   001B58  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4544   001B5A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4545   001B5C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4546   001B5E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4547   001B60  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4548   001B62  B4D8               	btfsc	status,2,c
  4549   001B64  EFB6  F00D         	goto	u971
  4550   001B68  EFB8  F00D         	goto	u970
  4551   001B6C                     u971:
  4552   001B6C  EF00  F00E         	goto	l1699
  4553   001B70                     u970:
  4554   001B70  0E01               	movlw	1
  4555   001B72  6E11               	movwf	___aomod@counter^0,c
  4556   001B74  EFC6  F00D         	goto	l1689
  4557   001B78                     l1687:
  4558   001B78  90D8               	bcf	status,0,c
  4559   001B7A  3609               	rlcf	___aomod@divisor^0,f,c
  4560   001B7C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4561   001B7E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4562   001B80  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4563   001B82  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4564   001B84  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4565   001B86  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4566   001B88  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4567   001B8A  2A11               	incf	___aomod@counter^0,f,c
  4568   001B8C                     l1689:
  4569   001B8C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4570   001B8E  EFCB  F00D         	goto	u981
  4571   001B92  EFCD  F00D         	goto	u980
  4572   001B96                     u981:
  4573   001B96  EFBC  F00D         	goto	l1687
  4574   001B9A                     u980:
  4575   001B9A                     l1691:
  4576   001B9A  5009               	movf	___aomod@divisor^0,w,c
  4577   001B9C  5C01               	subwf	___aomod@dividend^0,w,c
  4578   001B9E  500A               	movf	(___aomod@divisor+1)^0,w,c
  4579   001BA0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4580   001BA2  500B               	movf	(___aomod@divisor+2)^0,w,c
  4581   001BA4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4582   001BA6  500C               	movf	(___aomod@divisor+3)^0,w,c
  4583   001BA8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4584   001BAA  500D               	movf	(___aomod@divisor+4)^0,w,c
  4585   001BAC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4586   001BAE  500E               	movf	(___aomod@divisor+5)^0,w,c
  4587   001BB0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4588   001BB2  500F               	movf	(___aomod@divisor+6)^0,w,c
  4589   001BB4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4590   001BB6  5010               	movf	(___aomod@divisor+7)^0,w,c
  4591   001BB8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4592   001BBA  A0D8               	btfss	status,0,c
  4593   001BBC  EFE2  F00D         	goto	u991
  4594   001BC0  EFE4  F00D         	goto	u990
  4595   001BC4                     u991:
  4596   001BC4  EFF4  F00D         	goto	l1695
  4597   001BC8                     u990:
  4598   001BC8  5009               	movf	___aomod@divisor^0,w,c
  4599   001BCA  5E01               	subwf	___aomod@dividend^0,f,c
  4600   001BCC  500A               	movf	(___aomod@divisor+1)^0,w,c
  4601   001BCE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4602   001BD0  500B               	movf	(___aomod@divisor+2)^0,w,c
  4603   001BD2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4604   001BD4  500C               	movf	(___aomod@divisor+3)^0,w,c
  4605   001BD6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4606   001BD8  500D               	movf	(___aomod@divisor+4)^0,w,c
  4607   001BDA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4608   001BDC  500E               	movf	(___aomod@divisor+5)^0,w,c
  4609   001BDE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4610   001BE0  500F               	movf	(___aomod@divisor+6)^0,w,c
  4611   001BE2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4612   001BE4  5010               	movf	(___aomod@divisor+7)^0,w,c
  4613   001BE6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4614   001BE8                     l1695:
  4615   001BE8  90D8               	bcf	status,0,c
  4616   001BEA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4617   001BEC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4618   001BEE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4619   001BF0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4620   001BF2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4621   001BF4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4622   001BF6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4623   001BF8  3209               	rrcf	___aomod@divisor^0,f,c
  4624   001BFA  2E11               	decfsz	___aomod@counter^0,f,c
  4625   001BFC  EFCD  F00D         	goto	l1691
  4626   001C00                     l1699:
  4627   001C00  5012               	movf	___aomod@sign^0,w,c
  4628   001C02  B4D8               	btfsc	status,2,c
  4629   001C04  EF06  F00E         	goto	u1001
  4630   001C08  EF08  F00E         	goto	u1000
  4631   001C0C                     u1001:
  4632   001C0C  EF18  F00E         	goto	l1703
  4633   001C10                     u1000:
  4634   001C10  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4635   001C12  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4636   001C14  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4637   001C16  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4638   001C18  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4639   001C1A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4640   001C1C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4641   001C1E  6C01               	negf	___aomod@dividend^0,c
  4642   001C20  0E00               	movlw	0
  4643   001C22  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4644   001C24  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4645   001C26  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4646   001C28  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4647   001C2A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4648   001C2C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4649   001C2E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4650   001C30                     l1703:
  4651   001C30  C001  F001         	movff	___aomod@dividend,?___aomod
  4652   001C34  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4653   001C38  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4654   001C3C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4655   001C40  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4656   001C44  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4657   001C48  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4658   001C4C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4659   001C50  0012               	return		;funcret
  4660   001C52                     __end_of___aomod:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function ___aodiv *****************
  4664 ;; Defined at:
  4665 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  dividend        8    0[COMRAM] long long 
  4668 ;;  divisor         8    8[COMRAM] long long 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  quotient        8   18[COMRAM] long long 
  4671 ;;  sign            1   17[COMRAM] unsigned char 
  4672 ;;  counter         1   16[COMRAM] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  8    0[COMRAM] long long 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4682 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;Total ram usage:       26 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_dtoa
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text33
  4696   001966                     __ptext33:
  4697                           	callstack 0
  4698   001966                     ___aodiv:
  4699                           	callstack 25
  4700   001966  0E00               	movlw	0
  4701   001968  6E12               	movwf	___aodiv@sign^0,c
  4702   00196A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4703   00196C  EFBC  F00C         	goto	u880
  4704   001970  EFBA  F00C         	goto	u881
  4705   001974                     u881:
  4706   001974  EFCE  F00C         	goto	l1635
  4707   001978                     u880:
  4708   001978  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4709   00197A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4710   00197C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4711   00197E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4712   001980  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4713   001982  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4714   001984  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4715   001986  6C09               	negf	___aodiv@divisor^0,c
  4716   001988  0E00               	movlw	0
  4717   00198A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4718   00198C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4719   00198E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4720   001990  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4721   001992  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4722   001994  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4723   001996  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4724   001998  0E01               	movlw	1
  4725   00199A  6E12               	movwf	___aodiv@sign^0,c
  4726   00199C                     l1635:
  4727   00199C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4728   00199E  EFD5  F00C         	goto	u890
  4729   0019A2  EFD3  F00C         	goto	u891
  4730   0019A6                     u891:
  4731   0019A6  EFE7  F00C         	goto	l1641
  4732   0019AA                     u890:
  4733   0019AA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4734   0019AC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4735   0019AE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4736   0019B0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4737   0019B2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4738   0019B4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4739   0019B6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4740   0019B8  6C01               	negf	___aodiv@dividend^0,c
  4741   0019BA  0E00               	movlw	0
  4742   0019BC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4743   0019BE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4744   0019C0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4745   0019C2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4746   0019C4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4747   0019C6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4748   0019C8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4749   0019CA  0E01               	movlw	1
  4750   0019CC  1A12               	xorwf	___aodiv@sign^0,f,c
  4751   0019CE                     l1641:
  4752   0019CE  EE20  F013         	lfsr	2,___aodiv@quotient
  4753   0019D2  0E07               	movlw	7
  4754   0019D4                     u901:
  4755   0019D4  6ADE               	clrf	postinc2,c
  4756   0019D6  06E8               	decf	wreg,f,c
  4757   0019D8  E2FD               	bc	u901
  4758   0019DA  5009               	movf	___aodiv@divisor^0,w,c
  4759   0019DC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4760   0019DE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4761   0019E0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4762   0019E2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4763   0019E4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4764   0019E6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4765   0019E8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4766   0019EA  B4D8               	btfsc	status,2,c
  4767   0019EC  EFFA  F00C         	goto	u911
  4768   0019F0  EFFC  F00C         	goto	u910
  4769   0019F4                     u911:
  4770   0019F4  EF4E  F00D         	goto	l1663
  4771   0019F8                     u910:
  4772   0019F8  0E01               	movlw	1
  4773   0019FA  6E11               	movwf	___aodiv@counter^0,c
  4774   0019FC  EF0A  F00D         	goto	l1649
  4775   001A00                     l1647:
  4776   001A00  90D8               	bcf	status,0,c
  4777   001A02  3609               	rlcf	___aodiv@divisor^0,f,c
  4778   001A04  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4779   001A06  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4780   001A08  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4781   001A0A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4782   001A0C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4783   001A0E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4784   001A10  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4785   001A12  2A11               	incf	___aodiv@counter^0,f,c
  4786   001A14                     l1649:
  4787   001A14  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4788   001A16  EF0F  F00D         	goto	u921
  4789   001A1A  EF11  F00D         	goto	u920
  4790   001A1E                     u921:
  4791   001A1E  EF00  F00D         	goto	l1647
  4792   001A22                     u920:
  4793   001A22                     l1651:
  4794   001A22  90D8               	bcf	status,0,c
  4795   001A24  3613               	rlcf	___aodiv@quotient^0,f,c
  4796   001A26  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4797   001A28  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4798   001A2A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4799   001A2C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4800   001A2E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4801   001A30  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4802   001A32  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4803   001A34  5009               	movf	___aodiv@divisor^0,w,c
  4804   001A36  5C01               	subwf	___aodiv@dividend^0,w,c
  4805   001A38  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4806   001A3A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4807   001A3C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4808   001A3E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4809   001A40  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4810   001A42  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4811   001A44  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4812   001A46  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4813   001A48  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4814   001A4A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4815   001A4C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4816   001A4E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4817   001A50  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4818   001A52  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4819   001A54  A0D8               	btfss	status,0,c
  4820   001A56  EF2F  F00D         	goto	u931
  4821   001A5A  EF31  F00D         	goto	u930
  4822   001A5E                     u931:
  4823   001A5E  EF42  F00D         	goto	l1659
  4824   001A62                     u930:
  4825   001A62  5009               	movf	___aodiv@divisor^0,w,c
  4826   001A64  5E01               	subwf	___aodiv@dividend^0,f,c
  4827   001A66  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4828   001A68  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4829   001A6A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4830   001A6C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4831   001A6E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4832   001A70  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4833   001A72  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4834   001A74  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4835   001A76  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4836   001A78  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4837   001A7A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4838   001A7C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4839   001A7E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4840   001A80  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4841   001A82  8013               	bsf	___aodiv@quotient^0,0,c
  4842   001A84                     l1659:
  4843   001A84  90D8               	bcf	status,0,c
  4844   001A86  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4845   001A88  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4846   001A8A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4847   001A8C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4848   001A8E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4849   001A90  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4850   001A92  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4851   001A94  3209               	rrcf	___aodiv@divisor^0,f,c
  4852   001A96  2E11               	decfsz	___aodiv@counter^0,f,c
  4853   001A98  EF11  F00D         	goto	l1651
  4854   001A9C                     l1663:
  4855   001A9C  5012               	movf	___aodiv@sign^0,w,c
  4856   001A9E  B4D8               	btfsc	status,2,c
  4857   001AA0  EF54  F00D         	goto	u941
  4858   001AA4  EF56  F00D         	goto	u940
  4859   001AA8                     u941:
  4860   001AA8  EF66  F00D         	goto	l1667
  4861   001AAC                     u940:
  4862   001AAC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4863   001AAE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4864   001AB0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4865   001AB2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4866   001AB4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4867   001AB6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4868   001AB8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4869   001ABA  6C13               	negf	___aodiv@quotient^0,c
  4870   001ABC  0E00               	movlw	0
  4871   001ABE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4872   001AC0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4873   001AC2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4874   001AC4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4875   001AC6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4876   001AC8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4877   001ACA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4878   001ACC                     l1667:
  4879   001ACC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4880   001AD0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4881   001AD4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4882   001AD8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4883   001ADC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4884   001AE0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4885   001AE4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4886   001AE8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4887   001AEC  0012               	return		;funcret
  4888   001AEE                     __end_of___aodiv:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _sendStringSerial4 *****************
  4892 ;; Defined at:
  4893 ;;		line 46 in file "serial.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  string          2    1[COMRAM] PTR unsigned char 
  4896 ;;		 -> main@data(30), 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 1
  4915 ;; This function calls:
  4916 ;;		_sendCharSerial4
  4917 ;; This function is called by:
  4918 ;;		_Color2String
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text34
  4923   0023D0                     __ptext34:
  4924                           	callstack 0
  4925   0023D0                     _sendStringSerial4:
  4926                           	callstack 28
  4927   0023D0                     
  4928                           ;serial.c: 49:     while(*string != 0){
  4929   0023D0  EFF7  F011         	goto	l1919
  4930   0023D4                     l1913:
  4931                           
  4932                           ;serial.c: 51:   sendCharSerial4(*string++);
  4933   0023D4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4934   0023D8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4935   0023DC  50DF               	movf	indf2,w,c
  4936   0023DE  EC71  F012         	call	_sendCharSerial4
  4937   0023E2  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4938   0023E4  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4939   0023E6                     
  4940                           ;serial.c: 52:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  4941   0023E6  0E6A               	movlw	106
  4942   0023E8                     u1667:
  4943   0023E8  2EE8               	decfsz	wreg,f,c
  4944   0023EA  D7FE               	bra	u1667
  4945   0023EC  D000               	nop2	
  4946   0023EE                     l1919:
  4947                           
  4948                           ;serial.c: 49:     while(*string != 0){
  4949   0023EE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4950   0023F2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4951   0023F6  50DF               	movf	indf2,w,c
  4952   0023F8  A4D8               	btfss	status,2,c
  4953   0023FA  EF01  F012         	goto	u1231
  4954   0023FE  EF03  F012         	goto	u1230
  4955   002402                     u1231:
  4956   002402  EFEA  F011         	goto	l1913
  4957   002406                     u1230:
  4958   002406  0012               	return		;funcret
  4959   002408                     __end_of_sendStringSerial4:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _sendCharSerial4 *****************
  4963 ;; Defined at:
  4964 ;;		line 33 in file "serial.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  charToSend      1    wreg     unsigned char 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  charToSend      1    0[COMRAM] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;Total ram usage:        1 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_sendStringSerial4
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text35
  4992   0024E2                     __ptext35:
  4993                           	callstack 0
  4994   0024E2                     _sendCharSerial4:
  4995                           	callstack 28
  4996                           
  4997                           ;incstack = 0
  4998                           ;sendCharSerial4@charToSend stored from wreg
  4999   0024E2  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5000   0024E4                     l198:
  5001   0024E4  010E               	movlb	14	; () banked
  5002   0024E6  A537               	btfss	55,2,b	;volatile
  5003   0024E8  EF78  F012         	goto	u1211
  5004   0024EC  EF7A  F012         	goto	u1210
  5005   0024F0                     u1211:
  5006   0024F0  EF72  F012         	goto	l198
  5007   0024F4                     u1210:
  5008   0024F4                     
  5009                           ; BSR set to: 14
  5010                           ;serial.c: 35:     TX4REG = charToSend;
  5011   0024F4  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5012   0024F8                     
  5013                           ; BSR set to: 14
  5014   0024F8  0012               	return		;funcret
  5015   0024FA                     __end_of_sendCharSerial4:
  5016                           	callstack 0
  5017                           
  5018                           	psect	rparam
  5019   000000                     
  5020                           	psect	idloc
  5021                           
  5022                           ;Config register IDLOC0 @ 0x200000
  5023                           ;	unspecified, using default values
  5024   200000                     	org	2097152
  5025   200000  0FFF               	dw	4095
  5026                           
  5027                           ;Config register IDLOC1 @ 0x200002
  5028                           ;	unspecified, using default values
  5029   200002                     	org	2097154
  5030   200002  0FFF               	dw	4095
  5031                           
  5032                           ;Config register IDLOC2 @ 0x200004
  5033                           ;	unspecified, using default values
  5034   200004                     	org	2097156
  5035   200004  0FFF               	dw	4095
  5036                           
  5037                           ;Config register IDLOC3 @ 0x200006
  5038                           ;	unspecified, using default values
  5039   200006                     	org	2097158
  5040   200006  0FFF               	dw	4095
  5041                           
  5042                           ;Config register IDLOC4 @ 0x200008
  5043                           ;	unspecified, using default values
  5044   200008                     	org	2097160
  5045   200008  0FFF               	dw	4095
  5046                           
  5047                           ;Config register IDLOC5 @ 0x20000A
  5048                           ;	unspecified, using default values
  5049   20000A                     	org	2097162
  5050   20000A  0FFF               	dw	4095
  5051                           
  5052                           ;Config register IDLOC6 @ 0x20000C
  5053                           ;	unspecified, using default values
  5054   20000C                     	org	2097164
  5055   20000C  0FFF               	dw	4095
  5056                           
  5057                           ;Config register IDLOC7 @ 0x20000E
  5058                           ;	unspecified, using default values
  5059   20000E                     	org	2097166
  5060   20000E  0FFF               	dw	4095
  5061                           
  5062                           	psect	config
  5063                           
  5064                           ;Config register CONFIG1L @ 0x300000
  5065                           ;	External Oscillator mode Selection bits
  5066                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5067                           ;	Power-up default value for COSC bits
  5068                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5069   300000                     	org	3145728
  5070   300000  AA                 	db	170
  5071                           
  5072                           ;Config register CONFIG1H @ 0x300001
  5073                           ;	unspecified, using default values
  5074                           ;	Clock Out Enable bit
  5075                           ;	CLKOUTEN = 0x1, unprogrammed default
  5076                           ;	Clock Switch Enable bit
  5077                           ;	CSWEN = 0x1, unprogrammed default
  5078                           ;	Fail-Safe Clock Monitor Enable bit
  5079                           ;	FCMEN = 0x1, unprogrammed default
  5080   300001                     	org	3145729
  5081   300001  FF                 	db	255
  5082                           
  5083                           ;Config register CONFIG2L @ 0x300002
  5084                           ;	unspecified, using default values
  5085                           ;	Master Clear Enable bit
  5086                           ;	MCLRE = 0x1, unprogrammed default
  5087                           ;	Power-up Timer Enable bit
  5088                           ;	PWRTE = 0x1, unprogrammed default
  5089                           ;	Low-power BOR enable bit
  5090                           ;	LPBOREN = 0x1, unprogrammed default
  5091                           ;	Brown-out Reset Enable bits
  5092                           ;	BOREN = 0x3, unprogrammed default
  5093   300002                     	org	3145730
  5094   300002  FF                 	db	255
  5095                           
  5096                           ;Config register CONFIG2H @ 0x300003
  5097                           ;	unspecified, using default values
  5098                           ;	Brown Out Reset Voltage selection bits
  5099                           ;	BORV = 0x3, unprogrammed default
  5100                           ;	ZCD Disable bit
  5101                           ;	ZCD = 0x1, unprogrammed default
  5102                           ;	PPSLOCK bit One-Way Set Enable bit
  5103                           ;	PPS1WAY = 0x1, unprogrammed default
  5104                           ;	Stack Full/Underflow Reset Enable bit
  5105                           ;	STVREN = 0x1, unprogrammed default
  5106                           ;	Debugger Enable bit
  5107                           ;	DEBUG = 0x1, unprogrammed default
  5108                           ;	Extended Instruction Set Enable bit
  5109                           ;	XINST = 0x1, unprogrammed default
  5110   300003                     	org	3145731
  5111   300003  FF                 	db	255
  5112                           
  5113                           ;Config register CONFIG3L @ 0x300004
  5114                           ;	WDT Period Select bits
  5115                           ;	WDTCPS = 0x1F, unprogrammed default
  5116                           ;	WDT operating mode
  5117                           ;	WDTE = OFF, WDT Disabled
  5118   300004                     	org	3145732
  5119   300004  9F                 	db	159
  5120                           
  5121                           ;Config register CONFIG3H @ 0x300005
  5122                           ;	unspecified, using default values
  5123                           ;	WDT Window Select bits
  5124                           ;	WDTCWS = 0x7, unprogrammed default
  5125                           ;	WDT input clock selector
  5126                           ;	WDTCCS = 0x7, unprogrammed default
  5127   300005                     	org	3145733
  5128   300005  FF                 	db	255
  5129                           
  5130                           ;Config register CONFIG4L @ 0x300006
  5131                           ;	unspecified, using default values
  5132                           ;	Write Protection Block 0
  5133                           ;	WRT0 = 0x1, unprogrammed default
  5134                           ;	Write Protection Block 1
  5135                           ;	WRT1 = 0x1, unprogrammed default
  5136                           ;	Write Protection Block 2
  5137                           ;	WRT2 = 0x1, unprogrammed default
  5138                           ;	Write Protection Block 3
  5139                           ;	WRT3 = 0x1, unprogrammed default
  5140                           ;	Write Protection Block 3
  5141                           ;	WRT4 = 0x1, unprogrammed default
  5142                           ;	Write Protection Block 3
  5143                           ;	WRT5 = 0x1, unprogrammed default
  5144                           ;	Write Protection Block 3
  5145                           ;	WRT6 = 0x1, unprogrammed default
  5146                           ;	Write Protection Block 3
  5147                           ;	WRT7 = 0x1, unprogrammed default
  5148   300006                     	org	3145734
  5149   300006  FF                 	db	255
  5150                           
  5151                           ;Config register CONFIG4H @ 0x300007
  5152                           ;	unspecified, using default values
  5153                           ;	Configuration Register Write Protection bit
  5154                           ;	WRTC = 0x1, unprogrammed default
  5155                           ;	Boot Block Write Protection bit
  5156                           ;	WRTB = 0x1, unprogrammed default
  5157                           ;	Data EEPROM Write Protection bit
  5158                           ;	WRTD = 0x1, unprogrammed default
  5159                           ;	Scanner Enable bit
  5160                           ;	SCANE = 0x1, unprogrammed default
  5161                           ;	Low Voltage Programming Enable bit
  5162                           ;	LVP = 0x1, unprogrammed default
  5163   300007                     	org	3145735
  5164   300007  FF                 	db	255
  5165                           
  5166                           ;Config register CONFIG5L @ 0x300008
  5167                           ;	unspecified, using default values
  5168                           ;	UserNVM Program Memory Code Protection bit
  5169                           ;	CP = 0x1, unprogrammed default
  5170                           ;	DataNVM Memory Code Protection bit
  5171                           ;	CPD = 0x1, unprogrammed default
  5172   300008                     	org	3145736
  5173   300008  FF                 	db	255
  5174                           
  5175                           ;Config register CONFIG5H @ 0x300009
  5176                           ;	unspecified, using default values
  5177   300009                     	org	3145737
  5178   300009  FF                 	db	255
  5179                           
  5180                           ;Config register CONFIG6L @ 0x30000A
  5181                           ;	unspecified, using default values
  5182                           ;	Table Read Protection Block 0
  5183                           ;	EBTR0 = 0x1, unprogrammed default
  5184                           ;	Table Read Protection Block 1
  5185                           ;	EBTR1 = 0x1, unprogrammed default
  5186                           ;	Table Read Protection Block 2
  5187                           ;	EBTR2 = 0x1, unprogrammed default
  5188                           ;	Table Read Protection Block 3
  5189                           ;	EBTR3 = 0x1, unprogrammed default
  5190                           ;	Table Read Protection Block 4
  5191                           ;	EBTR4 = 0x1, unprogrammed default
  5192                           ;	Table Read Protection Block 5
  5193                           ;	EBTR5 = 0x1, unprogrammed default
  5194                           ;	Table Read Protection Block 6
  5195                           ;	EBTR6 = 0x1, unprogrammed default
  5196                           ;	Table Read Protection Block 7
  5197                           ;	EBTR7 = 0x1, unprogrammed default
  5198   30000A                     	org	3145738
  5199   30000A  FF                 	db	255
  5200                           
  5201                           ;Config register CONFIG6H @ 0x30000B
  5202                           ;	unspecified, using default values
  5203                           ;	Boot Block Table Read Protection bit
  5204                           ;	EBTRB = 0x1, unprogrammed default
  5205   30000B                     	org	3145739
  5206   30000B  FF                 	db	255
  5207                           tosu	equ	0xFFF
  5208                           tosh	equ	0xFFE
  5209                           tosl	equ	0xFFD
  5210                           stkptr	equ	0xFFC
  5211                           pclatu	equ	0xFFB
  5212                           pclath	equ	0xFFA
  5213                           pcl	equ	0xFF9
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           prodh	equ	0xFF4
  5219                           prodl	equ	0xFF3
  5220                           indf0	equ	0xFEF
  5221                           postinc0	equ	0xFEE
  5222                           postdec0	equ	0xFED
  5223                           preinc0	equ	0xFEC
  5224                           plusw0	equ	0xFEB
  5225                           fsr0h	equ	0xFEA
  5226                           fsr0l	equ	0xFE9
  5227                           wreg	equ	0xFE8
  5228                           indf1	equ	0xFE7
  5229                           postinc1	equ	0xFE6
  5230                           postdec1	equ	0xFE5
  5231                           preinc1	equ	0xFE4
  5232                           plusw1	equ	0xFE3
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           bsr	equ	0xFE0
  5236                           indf2	equ	0xFDF
  5237                           postinc2	equ	0xFDE
  5238                           postdec2	equ	0xFDD
  5239                           preinc2	equ	0xFDC
  5240                           plusw2	equ	0xFDB
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        1
    BSS         137
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     55     132
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1064$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_1(CODE[35]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1011$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1011$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    Color2String@colorf	PTR struct RGBC_rel size(2) Largest target is 8
		 -> colorf(BANK0[8]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 8
		 -> colorf(BANK0[8]), 

    colour_read_all@c	PTR struct RGBC size(2) Largest target is 8
		 -> color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_Color2String
    _colour_read_all->___fltol
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->___wmul
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_write_reg
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_turn_on_led->_color_write_reg
    _color_write_reg->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _main in BANK0

    _Color2String->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   11828
                                             92 COMRAM     2     2      0
                                             25 BANK0     30    30      0
                       _Color2String
                  _I2C_2_Master_Init
                   _color_click_init
                    _colour_read_all
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     22    18      4    4898
                                             55 COMRAM    22    18      4
                            ___fldiv
                            ___fltol
                             ___wmul
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     822
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     551
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             45 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1855
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     905
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_turn_on_led
                    _color_write_reg
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_turn_on_led                                    1     1      0     317
                    _color_write_reg
 ---------------------------------------------------------------------------------
 (2) _color_write_reg                                      2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         4     0      4    5997
                                             88 COMRAM     4     0      4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color2String
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_turn_on_led
       _color_write_reg
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
     _color_write_reg
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___fldiv
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      84       5       82.5%
BITBIGSFRhlh        99      0       0      33        0.0%
BITBIGSFRhh         7B      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRlllhh      36      0       0      37        0.0%
BITBIGSFRllh        2D      0       0      36        0.0%
BITBIGSFRlllhll     2A      0       0      39        0.0%
BITBIGSFRlllll      26      0       0      42        0.0%
BITBIGSFRlllhll     19      0       0      40        0.0%
BITBIGSFRlllhlh      C      0       0      38        0.0%
BITBIGSFRhllll       8      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      41        0.0%
BITBIGSFRlh          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      43        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 28 16:51:47 2023

               _color_read_Red 2100                   ___fldiv@aexp 002D                   ___fldiv@bexp 002C  
                 ___fldiv@sign 0025                _color_read_Blue 21F0                             l30 24E0  
                           l33 2504                             l42 214E                             l27 2354  
                           l51 21EE                             l45 219E                             l54 1534  
                           l39 24C0                             l48 223E                             l81 2430  
                           l90 252E                             l84 2432                             l93 251A  
                           l87 2458                             l96 2524                             l99 2510  
          ___wmul@multiplicand 0003               _color_read_Clear 21A0               _color_read_Green 2150  
                          l102 2312                            l201 24F8                            l210 2406  
                          l204 2058                            l213 247E                            l340 1C50  
                          l510 1EA4                            l327 1AEC                            l189 24A0  
                          l198 24E4                            l800 0FE2                            l806 1064  
                          l808 10DC                            l913 1F92                            l809 10CA  
                          l922 15C2                            l924 15CA                            l917 1FE8  
                          l925 1610                            l943 1D9E                            l871 1964  
                          l936 17B0                            l953 238C                            l882 18FC  
                          l891 20FE                            l795 11BE                            l875 18A0  
                          l956 2394                            l868 1808                            l949 228C  
                          l797 101E                            l968 1F6E                            l976 22D0  
                          l979 2530                            u901 19D4                            u910 19F8  
                          u830 1EB8                            u911 19F4                            u831 1EB4  
                          u920 1A22                            u840 1ECA                            u921 1A1E  
                          u841 1EC6                            u930 1A62                            u850 1EF2  
                          u931 1A5E                            u851 1EEE                            u940 1AAC  
                          u860 1F28                            u941 1AA8                            u861 1F24  
                          u950 1B00                            u870 22D0                            u951 1AFC  
                          u871 22CC                            u880 1978                            u960 1B32  
                          u881 1974                            u961 1B2E                            u890 19AA  
                          u970 1B70                            u891 19A6                            u971 1B6C  
                          u980 1B9A                            u981 1B96                            u990 1BC8  
                          u991 1BC4                            _abs 2356                            _pad 1F70  
                          wreg 000FE8                   ___fltol@exp1 0037                           l2001 0FE0  
                         l2011 102E                           l2003 0FEC                           ?_abs 0013  
                         l2013 1044                           l2021 1074                           l2005 100A  
                         l2101 1E74                           l2023 1082                           l2015 104A  
                         l2007 100C                           l2103 1E84                           l2111 17C4  
                         l2033 10EC                           l2041 1134                           l2025 1086  
                         l2017 1054                           l2009 101C                           l2105 1E94  
                         l2121 1842                           l2113 17D2                           l2201 249E  
                         l2203 1FEA                           l2051 119E                           l2043 114E  
                         l2035 10F8                           l2027 1094                           l2019 1062  
                         l2131 1896                           l2123 184A                           l2115 1818  
                         l2211 205A                           l2205 204C                           l2053 11AC  
                         l2045 1164                           l2037 1106                           l2029 10C2  
                         l2141 190C                           l2133 18D2                           l2125 1856  
                         l2117 182E                           l2109 17B4                           l2221 208E  
                         l2213 205E                           l2055 11B2                           l2047 117E  
                         l2039 1130                           l2071 1DCA                           l2151 1954  
                         l2143 1910                           l2135 18DE                           l2127 1888  
                         l2215 2062                           l2161 2332                           l2057 11B4  
                         l2049 119A                           l2081 1E18                           l2073 1DF4  
                         l2065 1DA0                           l2145 1934                           l2137 18EC  
                         l2129 188A                           l2217 2066                           l1611 1ED4  
                         l2163 233C                           l2155 2314                           l2091 1E44  
                         l2075 1DF6                           l2067 1DB6                           l2147 1944  
                         l2139 190A                           l2171 121C                           l2219 207A  
                         l1701 1C10                           l1613 1EF2                           l1605 1EA6  
                         l1621 229A                           l2165 2346                           l2157 2318  
                         l2077 1E06                           l2149 1952                           l2181 13DC  
                         l2173 128C                           l1631 1978                           l1703 1C30  
                         l1615 1F28                           l1607 1EB8                           l1623 22AC  
                         l1711 1F8A                           l2167 2350                           l2159 2322  
                         l2087 1E30                           l2079 1E0A                           l2183 1424  
                         l2175 12D0                           l2191 2484                           l1641 19CE  
                         l1633 1998                           l1721 2356                           l1609 1ECA  
                         l1625 22B0                           l1713 1F9E                           l1801 1C96  
                         l2097 1E58                           l2089 1E3A                           l2185 1488  
                         l2177 1330                           l2169 11C0                           l2193 248E  
                         l1651 1A22                           l1643 19DA                           l1635 199C  
                         l1627 1966                           l1723 2370                           l1619 228E  
                         l1715 1FB2                           l1707 1F70                           l1731 1556  
                         l1803 1CA6                           l2099 1E64                           l2187 14D0  
                         l2179 1378                           l2195 2490                           l1661 1A96  
                         l1653 1A34                           l1645 19F8                           l1637 19AA  
                         l1629 196A                           l1717 1FB6                           l1709 1F7E  
                         l1741 15D2                           l1733 156A                           l1813 1D64  
                         l1805 1CC2                           l1901 20C0                           l1725 2432  
                         l2197 249A                           l2189 2480                           l1911 23D0  
                         l1655 1A62                           l1647 1A00                           l1663 1A9C  
                         l1639 19CA                           l1671 1AEE                           l1719 1FD4  
                         l1751 160C                           l1743 15E2                           l1735 157A  
                         l1807 1CDE                           l1903 20C8                           l1727 2442  
                         l1823 24C4                           l1831 22D8                           l2199 249C  
                         l1913 23D4                           l1665 1AAC                           l1657 1A82  
                         l1649 1A14                           l1681 1B32                           l1673 1AF2  
                         l1761 16AE                           l1753 1618                           l1745 15E8  
                         l1737 159A                           l1729 1536                           l1809 1D34  
                         l1817 1D76                           l1905 20D0                           l1921 245A  
                         l1833 22E0                           l1825 2512                           l1843 24E4  
                         l1915 23E2                           l1667 1ACC                           l1659 1A84  
                         l1691 1B9A                           l1683 1B52                           l1675 1B00  
                         l1771 176A                           l1763 16B4                           l1755 1620  
                         l1747 15F8                           l1739 15B6                           l1851 2268  
                         l1907 20EC                           l1931 0E40                           l1923 2476  
                         l1835 22E8                           l1827 2516                           l1845 24F4  
                         l1917 23E6                           l1693 1BC8                           l1685 1B70  
                         l1677 1B20                           l1773 177A                           l1757 1626  
                         l1765 1718                           l1749 1604                           l1853 2284  
                         l1861 2418                           l1781 2526                           l1941 0E74  
                         l1933 0E42                           l1837 230E                           l1829 22D4  
                         l1919 23EE                           l1695 1BE8                           l1687 1B78  
                         l1679 1B24                           l1775 1780                           l1767 1732  
                         l1759 16A8                           l1847 2240                           l1863 241A  
                         l1783 252A                           l1791 2520                           l1871 24FA  
                         l1951 0EA6                           l1935 0E52                           l1943 0E7C  
                         l1927 0E26                           l1839 2310                           l1697 1BFA  
                         l1689 1B8C                           l1777 1790                           l1769 1750  
                         l1793 1C52                           l1849 224C                           l1865 241C  
                         l1857 2408                           l1785 2508                           l1873 24FA  
                         l1961 0EDA                           l1953 0EA8                           l1945 0E8C  
                         l1937 0E62                           l1929 0E32                           l1881 2150  
                         l1699 1C00                           l1795 1C76                           l1867 241E  
                         l1859 2412                           l1787 250C                           l1971 0F20  
                         l1955 0EB8                           l1963 0EE2                           l1947 0E92  
                         l1939 0E72                           l1883 2196                           l1875 2100  
                         l1797 1C84                           l1789 251C                           l1869 24A4  
                         l1981 0F48                           l1973 0F24                           l1965 0EF2  
                         l1957 0EC8                           l1949 0E98                           l1893 21A0  
                         l1877 2146                           ?_pad 0011                           l1799 1C92  
                         l1991 0F96                           l1967 0F08                           l1959 0ED8  
                         l1887 21F0                           l1895 21E6                           l1993 0FA6  
                         l1985 0F5C                           l1969 0F18                           l1977 0F38  
                         l1889 2236                           l1899 20AE                           l1995 0FAE  
                         l1987 0F76                           l1979 0F48                           l1997 0FBE  
                         l1989 0F86                           l1999 0FD2                           STR_1 0E01  
                         u1000 1C10                           u1001 1C0C                           u1010 1F7E  
                         u1011 1F7A                           u1020 1FD4                           u1100 15E2  
                         u1021 1FD0                           u1101 15DE                           u1030 2370  
                         u1110 15F8                           u1031 236C                           u1111 15F4  
                         u1120 1732                           u1040 2442                           u1121 172E  
                         u1041 243E                           u1210 24F4                           u1130 1750  
                         u1050 2458                           u1211 24F0                           u1131 174C  
                         u1051 2454                           u1140 176A                           u1060 1566  
                         u1220 2284                           u1300 0F08                           u1141 1766  
                         u1061 1560                           u1221 2280                           u1301 0F04  
                         u1230 2406                           u1150 177A                           u1070 1568  
                         u1310 0F48                           u1231 2402                           u1151 1776  
                         u1311 0F44                           u1080 157A                           u1160 1C76  
                         u1400 10C2                           u1320 0FBE                           u1240 0E40  
                         u1208 22FE                           u1081 1576                           u1161 1C72  
                         u1401 10BE                           u1321 0FBA                           u1241 0E3C  
                         u1090 15B6                           u1170 1CC2                           u1410 10D8  
                         u1330 0FE0                           u1250 0E52                           u1091 15B2  
                         u1171 1CBE                           u1411 10D4                           u1331 0FDC  
                         u1251 0E4E                           u1180 1CDE                           u1420 10EC  
                         u1340 100A                           u1260 0E62                           u1500 1E2C  
                         u1181 1CDA                           u1421 10E8                           u1341 1006  
                         u1261 0E5E                           u1501 1E28                           u1430 1106  
                         u1350 102E                           u1270 0EA6                           u1510 1E54  
                         u1190 22FC                           u1431 1102                           u1351 102A  
                         u1271 0EA2                           u1511 1E50                           u1191 22F4  
                         u1440 114E                           u1360 1044                           u1280 0EB8  
                         u1520 1E74                           u1600 18FC                   _BAUD4CONbits 000EE9  
                         u1441 114A                           u1361 1040                           u1281 0EB4  
                         u1521 1E70                           u1601 18F8                           u1450 117E  
                         u1370 1062                           u1290 0EC8                           u1530 1E84  
                         u1610 190A                           u1451 117A                           u1371 105E  
                         u1291 0EC4                           u1531 1E80                           u1611 1906  
                         u1460 11AC                           u1380 1082                           u1620 1944  
                         u1540 17C4                           u1461 11A8                           u1381 107E  
                         u1621 1940                           u1541 17C0                           u1390 1094  
                         u1470 1DB6                           u1630 1952                           u1550 17D2  
                         u1391 1090                           u1471 1DB2                           u1631 194E  
                         u1551 17CE                           u1480 1DEA                           u1560 182E  
                         u1561 182A                           u1490 1E18                           u1570 1884  
                         u1491 1E14                           u1571 1880                           u1580 18CE  
                         u1485 1DE0                           u1581 18CA                           u1590 18EC  
                         u1591 18E8                           u1647 2098                           u1657 2328  
                         u1667 23E8                           abs@a 0013                           _dbuf 007C  
                         _main 205A                           _dtoa 1536                           _prec 0076  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           prodh 000FF4  
                         prodl 000FF3                           start 0000                ___fldiv@new_exp 0026  
       __end_of_color_read_Red 2150                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                _color_write_reg 24C2                  ___fltol@sign1 0036  
              __end_of___aodiv 1AEE                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 1C52                __end_of___fldiv 11C0                __end_of___fltol 1EA6  
                 vfpfcnvrt@fmt 0041        __end_of_sendCharSerial4 24FA     __end_of_I2C_2_Master_Start 2530  
   __end_of_I2C_2_Master_Write 2512                          _flags 0078                          _color 00A4  
                        _fputc 1EA6                          _fputs 228E                          pad@fp 0011  
                        _width 0074                          _putch 2530                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                          tablat 000FF5  
                        status 000FD8                __end_of_sprintf 2100           __end_of_Color2String 205A  
      __end_of_color_read_Blue 2240          _I2C_2_Master_RepStart 2512                ?_color_read_Red 0005  
              __initialization 2396                   __end_of_main 20AE                   __end_of_dtoa 17B2  
                       ??_main 005D                         ??_dtoa 0026                  __activetblptr 000001  
                       ?_fputc 0001                         ?_fputs 000A                _colour_read_all 11C0  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70       __end_of_color_click_init 2356  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 1966  
      __end_of_color_write_reg 24E2                   vfprintf@cfmt 0057                      ??___aodiv 0011  
                    ??___aomod 0011                         ___wmul 245A                      ??___fldiv 001D  
                    ??___fltol 0032                         _colorf 009C                         clear_0 23AE  
                       clear_1 23BA                         isa$std 000001                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 228E  
                    ??_sprintf 0059                   ___xxtofl@arg 0011                   ___xxtofl@exp 0010  
                 ___xxtofl@val 0007                     __accesstop 0060        __end_of__initialization 23C2  
     __end_of_color_read_Clear 21F0       __end_of_color_read_Green 21A0         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 002E               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 2532                  __end_of_fputc 1F70  
                __end_of_fputs 22D2                  __end_of_putch 2532        __end_of_colour_read_all 1536  
                      ??_fputc 0005                        ??_fputs 000E                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_turn_on_led 24FA  
           ?_color_turn_on_led 0001              _color_writetoaddr 24A2               ?_color_write_reg 0003  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_turn_on_led 0005  
          ??_color_writetoaddr 0004                   _Color2String 1FEA                      ?___xxtofl 0007  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5      __end_of_color_turn_on_led 2506         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 24C2             _I2C_2_Master_Start 2526  
                   _initUSART4 2480             _I2C_2_Master_Write 2506                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___aodiv 1966                        ___aomod 1AEE                        ___fldiv 0E26  
                      ___fltol 1DA0            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                        __pcinit 2396  
                      __ramtop 0E00                        __ptext0 205A                        __ptext1 2480  
                      __ptext2 11C0                        __ptext3 2100                        __ptext4 2150  
                      __ptext5 21A0                        __ptext6 21F0                        __ptext7 2512  
                      __ptext8 22D2                        __ptext9 17B2               ?_colour_read_all 0038  
                   ??___xxtofl 000B             colour_read_all@rel 004A                  _RxBufWriteCnt 005F  
                      _sprintf 20AE           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 23C2                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001             ??_color_click_init 0005              __end_of_vfpfcnvrt 1DA0  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
                ___xxtofl@sign 000F                      _TRISCbits 000F83                      _TRISDbits 000F84  
                  ___fldiv@grs 0028                    ___fldiv@rem 0021       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002              ?_color_read_Clear 0005                   _EUSART4RXbuf 0060  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0005                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 2480            color_read_Clear@tmp 000A            start_initialization 2396  
                  __end_of_abs 2396                    __end_of_pad 1FEA                  _TxBufWriteCnt 007A  
          color_read_Green@tmp 000A                    vfprintf@fmt 0053                       ??___wmul 0005  
                  __pdataBANK0 00E3                      ___fldiv@a 0019                      ___fldiv@b 0015  
                  __pbssCOMRAM 005F                  __pcstackBANK0 00AC               ___aodiv@dividend 0001  
                    _dtoa$1092 002E                       ?___aodiv 0001                       ?___aomod 0001  
                     ?___fldiv 0015               ___aodiv@quotient 0013                       ?___fltol 002E  
         color_write_reg@value 0003           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 2432              _I2C_2_Master_Init 2408  
            _I2C_2_Master_Read 22D2              _I2C_2_Master_Stop 251C                   _RxBufReadCnt 007B  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 00AC              colour_read_all@cf 003A  
            _sendStringSerial4 23D0            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005            ??_I2C_2_Master_Stop 0002  
           ?_sendStringSerial4 0002                       _PIR4bits 000E37              ??_sendCharSerial4 0001  
         colour_read_all@total 0048                       _SSP2CON2 000EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 1C52      __end_of_I2C_2_Master_Idle 245A  
    __end_of_I2C_2_Master_Init 2432      __end_of_I2C_2_Master_Read 2314              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 2526                       _DataFlag 00E3    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0079      __end_of_sendStringSerial4 2408  
__end_of_I2C_2_Master_RepStart 251C             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 0055                       __Lrparam 0000  
                   vfprintf@fp 0051                   __Lsmallconst 0E00                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELDbits 000EA7  
                   sprintf@fmt 00AE                       ___xxtofl 17B2             __end_of_initUSART4 24A2  
            ??_color_write_reg 0004                       __ptext10 245A                       __ptext11 1DA0  
                     __ptext20 2432                       __ptext12 0E26                       __ptext21 2408  
                     __ptext13 2314                       __ptext30 2530                       __ptext22 1FEA  
                     __ptext14 24A2                       __ptext31 2356                       __ptext23 20AE  
                     __ptext15 24FA                       __ptext32 1AEE                       __ptext24 2240  
                     __ptext16 24C2                       __ptext33 1966                       __ptext25 1C52  
                     __ptext17 2506                       __ptext34 23D0                       __ptext26 1536  
                     __ptext18 251C                       __ptext35 24E2                       __ptext27 1F70  
                     __ptext19 2526                       __ptext28 228E                       __ptext29 1EA6  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA             Color2String@colorf 005B  
              Color2String@buf 0059               colour_read_all@c 0038                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 2240                       main@data 00C5  
             ___aomod@dividend 0001                  ?_Color2String 0059                      sprintf@ap 00B8  
           color_write_reg@reg 0004              ??_colour_read_all 003C                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 2314  
               ??_Color2String 005D                       sprintf@f 00BA                       sprintf@s 00AC  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 24E2                   ___aomod@sign 0012  
