

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 19:58:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataCOMRAM
   119   0044D8                     __pidataCOMRAM:
   120                           	callstack 0
   121                           
   122                           ;initializer for _ForwardFlag
   123   0044D8  01                 	db	1
   124                           
   125                           	psect	idataBANK0
   126   0044C6                     __pidataBANK0:
   127                           	callstack 0
   128                           
   129                           ;initializer for __halfsquare
   130   0044C6  015E               	dw	350
   131                           
   132                           ;initializer for __1square
   133   0044C8  02BC               	dw	700
   134                           
   135                           ;initializer for __45drightdelay
   136   0044CA  0096               	dw	150
   137                           
   138                           ;initializer for __45dleftdelay
   139   0044CC  0096               	dw	150
   140                           
   141                           	psect	idataBANK1
   142   0044CE                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for stoa@F1144
   146   0044CE  28                 	db	40
   147   0044CF  6E                 	db	110
   148   0044D0  75                 	db	117
   149   0044D1  6C                 	db	108
   150   0044D2  6C                 	db	108
   151   0044D3  29                 	db	41
   152   0044D4  00                 	db	0
   153   000000                     _LATEbits	set	3965
   154   000000                     _TRISEbits	set	3973
   155   000000                     _LATHbits	set	3968
   156   000000                     _TX4REG	set	3812
   157   000000                     _RC4STAbits	set	3815
   158   000000                     _SP4BRGH	set	3814
   159   000000                     _TRISAbits	set	3969
   160   000000                     _TRISGbits	set	3975
   161   000000                     _SSP2CON2bits	set	3802
   162   000000                     _RX4PPS	set	3605
   163   000000                     _SSP2CLKPPS	set	3612
   164   000000                     _SSP2DATPPS	set	3613
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATGbits	set	3967
   170   000000                     _TRISHbits	set	3976
   171   000000                     _PORTFbits	set	3982
   172   000000                     _CCPR2H	set	4006
   173   000000                     _CCPR1H	set	4010
   174   000000                     _LATCbits	set	3963
   175   000000                     _LATDbits	set	3964
   176   000000                     _LATFbits	set	3966
   177   000000                     _TRISCbits	set	3971
   178   000000                     _TRISDbits	set	3972
   179   000000                     _TRISFbits	set	3974
   180   000000                     _RC4REG	set	3811
   181   000000                     _SP4BRGL	set	3813
   182   000000                     _TX4STAbits	set	3816
   183   000000                     _BAUD4CONbits	set	3817
   184   000000                     _SSP2CON2	set	3802
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _SSP2STAT	set	3800
   188   000000                     _ANSELFbits	set	3764
   189   000000                     _SSP2BUF	set	3797
   190   000000                     _PIR4bits	set	3639
   191   000000                     _RC0PPS	set	3682
   192   000000                     _RD5PPS	set	3695
   193   000000                     _RE2PPS	set	3700
   194   000000                     _RD6PPS	set	3696
   195   000000                     _CCP1CONbits	set	4011
   196   000000                     _CCPTMRS0bits	set	4013
   197   000000                     _T2PR	set	4028
   198   000000                     _T2CONbits	set	4029
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _RC7PPS	set	3689
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _TMR0L	set	4051
   206   000000                     _TMR0H	set	4052
   207   000000                     _T0CON0bits	set	4053
   208   000000                     _T0CON1bits	set	4054
   209   000000                     _T2CLKCONbits	set	4031
   210   000000                     _T2HLTbits	set	4030
   211                           
   212                           	psect	smallconst
   213   000E00                     __psmallconst:
   214                           	callstack 0
   215   000E00  00                 	db	0
   216   000E01                     STR_10:
   217   000E01  43                 	db	67	;'C'
   218   000E02  6F                 	db	111	;'o'
   219   000E03  6C                 	db	108	;'l'
   220   000E04  6F                 	db	111	;'o'
   221   000E05  75                 	db	117	;'u'
   222   000E06  72                 	db	114	;'r'
   223   000E07  20                 	db	32
   224   000E08  69                 	db	105	;'i'
   225   000E09  73                 	db	115	;'s'
   226   000E0A  20                 	db	32
   227   000E0B  25                 	db	37
   228   000E0C  73                 	db	115	;'s'
   229   000E0D  20                 	db	32
   230   000E0E  20                 	db	32
   231   000E0F  0D                 	db	13
   232   000E10  00                 	db	0
   233   000E11                     STR_8:
   234   000E11  4C                 	db	76	;'L'
   235   000E12  69                 	db	105	;'i'
   236   000E13  67                 	db	103	;'g'
   237   000E14  68                 	db	104	;'h'
   238   000E15  74                 	db	116	;'t'
   239   000E16  20                 	db	32
   240   000E17  42                 	db	66	;'B'
   241   000E18  6C                 	db	108	;'l'
   242   000E19  75                 	db	117	;'u'
   243   000E1A  65                 	db	101	;'e'
   244   000E1B  00                 	db	0
   245   000E1C                     STR_4:
   246   000E1C  44                 	db	68	;'D'
   247   000E1D  61                 	db	97	;'a'
   248   000E1E  72                 	db	114	;'r'
   249   000E1F  6B                 	db	107	;'k'
   250   000E20  20                 	db	32
   251   000E21  42                 	db	66	;'B'
   252   000E22  6C                 	db	108	;'l'
   253   000E23  75                 	db	117	;'u'
   254   000E24  65                 	db	101	;'e'
   255   000E25  00                 	db	0
   256   000E26                     STR_9:
   257   000E26  45                 	db	69	;'E'
   258   000E27  67                 	db	103	;'g'
   259   000E28  67                 	db	103	;'g'
   260   000E29  73                 	db	115	;'s'
   261   000E2A  68                 	db	104	;'h'
   262   000E2B  65                 	db	101	;'e'
   263   000E2C  6C                 	db	108	;'l'
   264   000E2D  6C                 	db	108	;'l'
   265   000E2E  00                 	db	0
   266   000E2F                     STR_7:
   267   000E2F  4F                 	db	79	;'O'
   268   000E30  72                 	db	114	;'r'
   269   000E31  61                 	db	97	;'a'
   270   000E32  6E                 	db	110	;'n'
   271   000E33  67                 	db	103	;'g'
   272   000E34  65                 	db	101	;'e'
   273   000E35  00                 	db	0
   274   000E36                     STR_5:
   275   000E36  59                 	db	89	;'Y'
   276   000E37  65                 	db	101	;'e'
   277   000E38  6C                 	db	108	;'l'
   278   000E39  6C                 	db	108	;'l'
   279   000E3A  6F                 	db	111	;'o'
   280   000E3B  77                 	db	119	;'w'
   281   000E3C  00                 	db	0
   282   000E3D                     STR_3:
   283   000E3D  47                 	db	71	;'G'
   284   000E3E  72                 	db	114	;'r'
   285   000E3F  65                 	db	101	;'e'
   286   000E40  65                 	db	101	;'e'
   287   000E41  6E                 	db	110	;'n'
   288   000E42  00                 	db	0
   289   000E43                     STR_6:
   290   000E43  50                 	db	80	;'P'
   291   000E44  69                 	db	105	;'i'
   292   000E45  6E                 	db	110	;'n'
   293   000E46  6B                 	db	107	;'k'
   294   000E47  00                 	db	0
   295   000E48                     STR_11:
   296   000E48  6C                 	db	108	;'l'
   297   000E49  6C                 	db	108	;'l'
   298   000E4A  73                 	db	115	;'s'
   299   000E4B  00                 	db	0
   300   000E4C                     STR_2:
   301   000E4C  52                 	db	82	;'R'
   302   000E4D  65                 	db	101	;'e'
   303   000E4E  64                 	db	100	;'d'
   304   000E4F  00                 	db	0
   305   000E50  00                 	db	0	; dummy byte at the end
   306   000000                     
   307                           ; #config settings
   308                           
   309                           	psect	cinit
   310   003E84                     __pcinit:
   311                           	callstack 0
   312   003E84                     start_initialization:
   313                           	callstack 0
   314   003E84                     __initialization:
   315                           	callstack 0
   316                           
   317                           ; Initialize objects allocated to BANK1 (7 bytes)
   318                           ; load TBLPTR registers with __pidataBANK1
   319   003E84  0ECE               	movlw	low __pidataBANK1
   320   003E86  6EF6               	movwf	tblptrl,c
   321   003E88  0E44               	movlw	high __pidataBANK1
   322   003E8A  6EF7               	movwf	tblptrh,c
   323   003E8C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   324   003E8E  6EF8               	movwf	tblptru,c
   325   003E90  EE01  F086         	lfsr	0,__pdataBANK1
   326   003E94  EE10 F007          	lfsr	1,7
   327   003E98                     copy_data0:
   328   003E98  0009               	tblrd		*+
   329   003E9A  CFF5 FFEE          	movff	tablat,postinc0
   330   003E9E  50E5               	movf	postdec1,w,c
   331   003EA0  50E1               	movf	fsr1l,w,c
   332   003EA2  E1FA               	bnz	copy_data0
   333                           
   334                           ; Initialize objects allocated to BANK0 (8 bytes)
   335                           ; load TBLPTR registers with __pidataBANK0
   336   003EA4  0EC6               	movlw	low __pidataBANK0
   337   003EA6  6EF6               	movwf	tblptrl,c
   338   003EA8  0E44               	movlw	high __pidataBANK0
   339   003EAA  6EF7               	movwf	tblptrh,c
   340   003EAC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   341   003EAE  6EF8               	movwf	tblptru,c
   342   003EB0  EE00  F0F3         	lfsr	0,__pdataBANK0
   343   003EB4  EE10 F008          	lfsr	1,8
   344   003EB8                     copy_data1:
   345   003EB8  0009               	tblrd		*+
   346   003EBA  CFF5 FFEE          	movff	tablat,postinc0
   347   003EBE  50E5               	movf	postdec1,w,c
   348   003EC0  50E1               	movf	fsr1l,w,c
   349   003EC2  E1FA               	bnz	copy_data1
   350                           
   351                           ; Initialize objects allocated to COMRAM (1 bytes)
   352                           ; load TBLPTR registers with __pidataCOMRAM
   353   003EC4  0ED8               	movlw	low __pidataCOMRAM
   354   003EC6  6EF6               	movwf	tblptrl,c
   355   003EC8  0E44               	movlw	high __pidataCOMRAM
   356   003ECA  6EF7               	movwf	tblptrh,c
   357   003ECC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   358   003ECE  6EF8               	movwf	tblptru,c
   359   003ED0  0009               	tblrd		*+	;fetch initializer
   360   003ED2  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   361                           
   362                           ; Clear objects allocated to BANK1 (134 bytes)
   363   003ED6  EE01  F000         	lfsr	0,__pbssBANK1
   364   003EDA  0E86               	movlw	134
   365   003EDC                     clear_0:
   366   003EDC  6AEE               	clrf	postinc0,c
   367   003EDE  06E8               	decf	wreg,f,c
   368   003EE0  E1FD               	bnz	clear_0
   369                           
   370                           ; Clear objects allocated to BANK0 (25 bytes)
   371   003EE2  EE00  F0DA         	lfsr	0,__pbssBANK0
   372   003EE6  0E19               	movlw	25
   373   003EE8                     clear_1:
   374   003EE8  6AEE               	clrf	postinc0,c
   375   003EEA  06E8               	decf	wreg,f,c
   376   003EEC  E1FD               	bnz	clear_1
   377   003EEE                     end_of_initialization:
   378                           	callstack 0
   379   003EEE                     __end_of__initialization:
   380                           	callstack 0
   381   003EEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   382   003EF0  6EF8               	movwf	tblptru,c
   383   003EF2  0100               	movlb	0
   384   003EF4  EF64  F013         	goto	_main	;jump to C main() function
   385                           
   386                           	psect	dataCOMRAM
   387   00005F                     __pdataCOMRAM:
   388                           	callstack 0
   389   00005F                     _ForwardFlag:
   390                           	callstack 0
   391   00005F                     	ds	1
   392                           
   393                           	psect	bssBANK0
   394   0000DA                     __pbssBANK0:
   395                           	callstack 0
   396   0000DA                     _width:
   397                           	callstack 0
   398   0000DA                     	ds	2
   399   0000DC                     _prec:
   400                           	callstack 0
   401   0000DC                     	ds	2
   402   0000DE                     _maxTime:
   403                           	callstack 0
   404   0000DE                     	ds	2
   405   0000E0                     _flags:
   406                           	callstack 0
   407   0000E0                     	ds	1
   408   0000E1                     _motorR:
   409                           	callstack 0
   410   0000E1                     	ds	9
   411   0000EA                     _motorL:
   412                           	callstack 0
   413   0000EA                     	ds	9
   414                           
   415                           	psect	dataBANK0
   416   0000F3                     __pdataBANK0:
   417                           	callstack 0
   418   0000F3                     __halfsquare:
   419                           	callstack 0
   420   0000F3                     	ds	2
   421   0000F5                     __1square:
   422                           	callstack 0
   423   0000F5                     	ds	2
   424   0000F7                     __45drightdelay:
   425                           	callstack 0
   426   0000F7                     	ds	2
   427   0000F9                     __45dleftdelay:
   428                           	callstack 0
   429   0000F9                     	ds	2
   430                           
   431                           	psect	bssBANK1
   432   000100                     __pbssBANK1:
   433                           	callstack 0
   434   000100                     _timerMemory:
   435                           	callstack 0
   436   000100                     	ds	40
   437   000128                     _movementMemory:
   438                           	callstack 0
   439   000128                     	ds	40
   440   000150                     	ds	32
   441   000170                     _colorf:
   442                           	callstack 0
   443   000170                     	ds	22
   444                           
   445                           	psect	dataBANK1
   446   000186                     __pdataBANK1:
   447                           	callstack 0
   448   000186                     stoa@F1144:
   449                           	callstack 0
   450   000186                     	ds	7
   451                           
   452                           	psect	cstackBANK0
   453   000060                     __pcstackBANK0:
   454                           	callstack 0
   455   000060                     ___flmul@sign:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x0
   459   000060                     	ds	1
   460   000061                     ___flmul@grs:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x1
   464   000061                     	ds	4
   465   000065                     ___flmul@aexp:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x5
   469   000065                     	ds	1
   470   000066                     ___flmul@bexp:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x6
   474   000066                     	ds	1
   475   000067                     ___flmul@prod:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x7
   479   000067                     	ds	4
   480   00006B                     ___flmul@temp:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xB
   484   00006B                     	ds	2
   485   00006D                     _RGB2Hue$2982:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0xD
   489   00006D                     	ds	4
   490   000071                     RGB2Hue@max:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x11
   494   000071                     	ds	2
   495   000073                     RGB2Hue@min:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x13
   499   000073                     	ds	2
   500   000075                     main@data:
   501                           	callstack 0
   502                           
   503                           ; 100 bytes @ 0x15
   504   000075                     	ds	100
   505   0000D9                     main@wall:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x79
   509   0000D9                     	ds	1
   510                           
   511                           	psect	cstackCOMRAM
   512   000001                     __pcstackCOMRAM:
   513                           	callstack 0
   514   000001                     ??_I2C_2_Master_Idle:
   515   000001                     ?_strlen:
   516                           	callstack 0
   517   000001                     ?_strncmp:
   518                           	callstack 0
   519   000001                     ?___wmul:
   520                           	callstack 0
   521   000001                     ?___fltol:
   522                           	callstack 0
   523   000001                     ClickLEDOn@power:
   524                           	callstack 0
   525   000001                     sendCharSerial4@charToSend:
   526                           	callstack 0
   527   000001                     initDCmotorsPWM@PWMperiod:
   528                           	callstack 0
   529   000001                     ___wmul@multiplier:
   530                           	callstack 0
   531   000001                     fputc@c:
   532                           	callstack 0
   533   000001                     strlen@s:
   534                           	callstack 0
   535   000001                     strncmp@_l:
   536                           	callstack 0
   537   000001                     ___fleq@ff1:
   538                           	callstack 0
   539   000001                     ___flge@ff1:
   540                           	callstack 0
   541   000001                     ___fltol@f1:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x0
   545   000001                     	ds	1
   546   000002                     ??_I2C_2_Master_Read:
   547   000002                     I2C_2_Master_Write@data_byte:
   548                           	callstack 0
   549   000002                     sendStringSerial4@string:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x1
   553   000002                     	ds	1
   554   000003                     color_writetoaddr@value:
   555                           	callstack 0
   556   000003                     I2C_2_Master_Read@ack:
   557                           	callstack 0
   558   000003                     ___wmul@multiplicand:
   559                           	callstack 0
   560   000003                     fputc@fp:
   561                           	callstack 0
   562   000003                     strlen@a:
   563                           	callstack 0
   564   000003                     strncmp@_r:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x2
   568   000003                     	ds	1
   569   000004                     color_writetoaddr@address:
   570                           	callstack 0
   571   000004                     I2C_2_Master_Read@tmp:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x3
   575   000004                     	ds	1
   576   000005                     ??_fputc:
   577   000005                     ??_color_click_init:
   578   000005                     ??___fltol:
   579   000005                     ?_color_read_Red:
   580                           	callstack 0
   581   000005                     ?_color_read_Green:
   582                           	callstack 0
   583   000005                     ?_color_read_Blue:
   584                           	callstack 0
   585   000005                     ?_color_read_Clear:
   586                           	callstack 0
   587   000005                     ___wmul@product:
   588                           	callstack 0
   589   000005                     strncmp@n:
   590                           	callstack 0
   591   000005                     ___fleq@ff2:
   592                           	callstack 0
   593   000005                     ___flge@ff2:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x4
   597   000005                     	ds	2
   598   000007                     ??_strncmp:
   599   000007                     ??_color_read_Red:
   600   000007                     ??_color_read_Green:
   601   000007                     ??_color_read_Blue:
   602   000007                     ??_color_read_Clear:
   603   000007                     ?___lwdiv:
   604                           	callstack 0
   605   000007                     ___lwdiv@dividend:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x6
   609   000007                     	ds	1
   610   000008                     strncmp@l:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x7
   614   000008                     	ds	1
   615   000009                     ??___fleq:
   616   000009                     ??___flge:
   617   000009                     ___fltol@sign1:
   618                           	callstack 0
   619   000009                     ___lwdiv@divisor:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     ___fltol@exp1:
   625                           	callstack 0
   626   00000A                     color_read_Red@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Green@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Blue@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Clear@tmp:
   633                           	callstack 0
   634   00000A                     stoa@fp:
   635                           	callstack 0
   636   00000A                     strncmp@r:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x9
   640   00000A                     	ds	1
   641   00000B                     ___lwdiv@quotient:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0xA
   645   00000B                     	ds	1
   646   00000C                     ?___xxtofl:
   647                           	callstack 0
   648   00000C                     stoa@s:
   649                           	callstack 0
   650   00000C                     ___xxtofl@val:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0xB
   654   00000C                     	ds	1
   655   00000D                     ?_Hue2Colour:
   656                           	callstack 0
   657   00000D                     ___lwdiv@counter:
   658                           	callstack 0
   659   00000D                     Hue2Colour@cf:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0xC
   663   00000D                     	ds	1
   664   00000E                     ??_stoa:
   665   00000E                     setMotorPWM@m:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0xD
   669   00000E                     	ds	1
   670   00000F                     Hue2Colour@colourname:
   671                           	callstack 0
   672   00000F                     stoa@nuls:
   673                           	callstack 0
   674                           
   675                           ; 7 bytes @ 0xE
   676   00000F                     	ds	1
   677   000010                     ??_setMotorPWM:
   678   000010                     ??___xxtofl:
   679                           
   680                           ; 1 bytes @ 0xF
   681   000010                     	ds	2
   682   000012                     setMotorPWM@posDuty:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x11
   686   000012                     	ds	1
   687   000013                     setMotorPWM@negDuty:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x12
   691   000013                     	ds	1
   692   000014                     ___xxtofl@sign:
   693                           	callstack 0
   694   000014                     stop@mL:
   695                           	callstack 0
   696   000014                     turnLeft@mL:
   697                           	callstack 0
   698   000014                     turnRight@mL:
   699                           	callstack 0
   700   000014                     fullSpeedAhead@mL:
   701                           	callstack 0
   702   000014                     fullSpeedReverse@mL:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x13
   706   000014                     	ds	1
   707   000015                     ___xxtofl@exp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x14
   711   000015                     	ds	1
   712   000016                     stop@mR:
   713                           	callstack 0
   714   000016                     turnLeft@mR:
   715                           	callstack 0
   716   000016                     turnRight@mR:
   717                           	callstack 0
   718   000016                     fullSpeedAhead@mR:
   719                           	callstack 0
   720   000016                     fullSpeedReverse@mR:
   721                           	callstack 0
   722   000016                     stoa@w:
   723                           	callstack 0
   724   000016                     ___xxtofl@arg:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x15
   728   000016                     	ds	2
   729   000018                     ??_fullSpeedAhead:
   730   000018                     ??_stop:
   731   000018                     ??_fullSpeedReverse:
   732   000018                     turnLeft@i:
   733                           	callstack 0
   734   000018                     turnRight@i:
   735                           	callstack 0
   736   000018                     stoa@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x17
   740   000018                     	ds	1
   741   000019                     fullSpeedAhead@i:
   742                           	callstack 0
   743   000019                     fullSpeedReverse@i:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x18
   747   000019                     	ds	1
   748   00001A                     ?___fladd:
   749                           	callstack 0
   750   00001A                     colour_read_all@cf:
   751                           	callstack 0
   752   00001A                     Left45@mL:
   753                           	callstack 0
   754   00001A                     Right45@mL:
   755                           	callstack 0
   756   00001A                     stoa@cp:
   757                           	callstack 0
   758   00001A                     ___fladd@b:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x19
   762   00001A                     	ds	1
   763   00001B                     reverseHalfSquare@mL:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x1A
   767   00001B                     	ds	1
   768   00001C                     Left45@mR:
   769                           	callstack 0
   770   00001C                     Right45@mR:
   771                           	callstack 0
   772   00001C                     stoa@l:
   773                           	callstack 0
   774   00001C                     colour_read_all@R:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x1B
   778   00001C                     	ds	1
   779   00001D                     reverseHalfSquare@mR:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x1C
   783   00001D                     	ds	1
   784   00001E                     ??_Left45:
   785   00001E                     ??_Right45:
   786   00001E                     stoa@p:
   787                           	callstack 0
   788   00001E                     ___fladd@a:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x1D
   792   00001E                     	ds	1
   793   00001F                     ??_reverseHalfSquare:
   794                           
   795                           ; 1 bytes @ 0x1E
   796   00001F                     	ds	1
   797   000020                     rotate180left@mL:
   798                           	callstack 0
   799   000020                     vfpfcnvrt@fp:
   800                           	callstack 0
   801   000020                     colour_read_all@G:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x1F
   805   000020                     	ds	1
   806   000021                     Red_R90@mL:
   807                           	callstack 0
   808   000021                     Green_L90@mL:
   809                           	callstack 0
   810   000021                     Yellow_rev1_R90@mL:
   811                           	callstack 0
   812   000021                     Pink_rev1_L90@mL:
   813                           	callstack 0
   814   000021                     Orange_R135@mL:
   815                           	callstack 0
   816   000021                     LightBlue_L135@mL:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x20
   820   000021                     	ds	1
   821   000022                     ??___fladd:
   822   000022                     rotate180left@mR:
   823                           	callstack 0
   824   000022                     vfpfcnvrt@fmt:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x21
   828   000022                     	ds	1
   829   000023                     Red_R90@mR:
   830                           	callstack 0
   831   000023                     Green_L90@mR:
   832                           	callstack 0
   833   000023                     Yellow_rev1_R90@mR:
   834                           	callstack 0
   835   000023                     Pink_rev1_L90@mR:
   836                           	callstack 0
   837   000023                     Orange_R135@mR:
   838                           	callstack 0
   839   000023                     LightBlue_L135@mR:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x22
   843   000023                     	ds	1
   844   000024                     Blue_T180@mL:
   845                           	callstack 0
   846   000024                     vfpfcnvrt@ap:
   847                           	callstack 0
   848   000024                     colour_read_all@B:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x23
   852   000024                     	ds	1
   853   000025                     ??_Yellow_rev1_R90:
   854   000025                     ??_Pink_rev1_L90:
   855   000025                     
   856                           ; 1 bytes @ 0x24
   857   000025                     	ds	1
   858   000026                     ??_vfpfcnvrt:
   859   000026                     ___fladd@signs:
   860                           	callstack 0
   861   000026                     Blue_T180@mR:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x25
   865   000026                     	ds	1
   866   000027                     ___fladd@aexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x26
   870   000027                     	ds	1
   871   000028                     ___fladd@bexp:
   872                           	callstack 0
   873   000028                     Colour2Action@cf:
   874                           	callstack 0
   875   000028                     _vfpfcnvrt$2693:
   876                           	callstack 0
   877   000028                     colour_read_all@C:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x27
   881   000028                     	ds	1
   882   000029                     ___fladd@grs:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x28
   886   000029                     	ds	1
   887   00002A                     ?_vfprintf:
   888                           	callstack 0
   889   00002A                     ?___flsub:
   890                           	callstack 0
   891   00002A                     vfprintf@fp:
   892                           	callstack 0
   893   00002A                     ___flsub@b:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x29
   897   00002A                     	ds	2
   898   00002C                     vfprintf@fmt:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x2B
   902   00002C                     	ds	2
   903   00002E                     vfprintf@ap:
   904                           	callstack 0
   905   00002E                     ___flsub@a:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x2D
   909   00002E                     	ds	2
   910   000030                     vfprintf@cfmt:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x2F
   914   000030                     	ds	2
   915   000032                     ?_sprintf:
   916                           	callstack 0
   917   000032                     ?___fldiv:
   918                           	callstack 0
   919   000032                     sprintf@s:
   920                           	callstack 0
   921   000032                     ___fldiv@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x31
   925   000032                     	ds	2
   926   000034                     sprintf@fmt:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x33
   930   000034                     	ds	2
   931   000036                     ___fldiv@a:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x35
   935   000036                     	ds	2
   936   000038                     sprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x37
   940   000038                     	ds	2
   941   00003A                     ??___fldiv:
   942   00003A                     sprintf@f:
   943                           	callstack 0
   944                           
   945                           ; 11 bytes @ 0x39
   946   00003A                     	ds	4
   947   00003E                     ___fldiv@rem:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x3D
   951   00003E                     	ds	4
   952   000042                     ___fldiv@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x41
   956   000042                     	ds	1
   957   000043                     ___fldiv@new_exp:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x42
   961   000043                     	ds	2
   962   000045                     Color2String@buf:
   963                           	callstack 0
   964   000045                     ___fldiv@grs:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x44
   968   000045                     	ds	2
   969   000047                     Color2String@cf:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x46
   973   000047                     	ds	2
   974   000049                     ___fldiv@bexp:
   975                           	callstack 0
   976   000049                     Color2String@colourname:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x48
   980   000049                     	ds	1
   981   00004A                     ___fldiv@aexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x49
   985   00004A                     	ds	1
   986   00004B                     ?___flmul:
   987                           	callstack 0
   988   00004B                     ___flmul@b:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x4A
   992   00004B                     	ds	4
   993   00004F                     ___flmul@a:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x4E
   997   00004F                     	ds	4
   998   000053                     ??___flmul:
   999                           
  1000                           ; 1 bytes @ 0x52
  1001   000053                     	ds	4
  1002   000057                     RGB2Hue@cf:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x56
  1006   000057                     	ds	2
  1007   000059                     ??_RGB2Hue:
  1008                           
  1009                           ; 1 bytes @ 0x58
  1010   000059                     	ds	4
  1011   00005D                     ??_main:
  1012                           
  1013                           ; 1 bytes @ 0x5C
  1014   00005D                     	ds	2
  1015                           
  1016 ;;
  1017 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1018 ;;
  1019 ;; *************** function _main *****************
  1020 ;; Defined at:
  1021 ;;		line 17 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  data          100   21[BANK0 ] unsigned char [100]
  1026 ;;  PWMcycle        2    0        unsigned int 
  1027 ;;  movementCoun    2    0        unsigned int 
  1028 ;;  wall            1  121[BANK0 ] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Totals:         2     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;Total ram usage:      103 bytes
  1043 ;; Hardware stack levels required when called: 7
  1044 ;; This function calls:
  1045 ;;		_ClickLEDOn
  1046 ;;		_Color2String
  1047 ;;		_Colour2Action
  1048 ;;		_Hue2Colour
  1049 ;;		_I2C_2_Master_Init
  1050 ;;		_LED_init
  1051 ;;		_RGB2Hue
  1052 ;;		___flge
  1053 ;;		_color_click_init
  1054 ;;		_colour_read_all
  1055 ;;		_fullSpeedAhead
  1056 ;;		_initDCmotorsPWM
  1057 ;;		_initUSART4
  1058 ;;		_stop
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065   0026C8                     __ptext0:
  1066                           	callstack 0
  1067   0026C8                     _main:
  1068                           	callstack 24
  1069   0026C8                     
  1070                           ;main.c: 18:     char data[100];;main.c: 19:     initUSART4();
  1071   0026C8  EC15  F022         	call	_initUSART4	;wreg free
  1072   0026CC                     
  1073                           ;main.c: 20:     color_click_init();
  1074   0026CC  EC64  F021         	call	_color_click_init	;wreg free
  1075   0026D0                     
  1076                           ;main.c: 21:     I2C_2_Master_Init();
  1077   0026D0  ECD9  F021         	call	_I2C_2_Master_Init	;wreg free
  1078   0026D4                     
  1079                           ;main.c: 22:     LED_init();
  1080   0026D4  EC42  F022         	call	_LED_init	;wreg free
  1081   0026D8                     
  1082                           ;main.c: 24:     initDCmotorsPWM(PWMcycle);
  1083   0026D8  0E00               	movlw	0
  1084   0026DA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1085   0026DC  0E63               	movlw	99
  1086   0026DE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1087   0026E0  EC31  F01D         	call	_initDCmotorsPWM	;wreg free
  1088   0026E4                     
  1089                           ;main.c: 26:     motorL.power=0;
  1090   0026E4  0E00               	movlw	0
  1091   0026E6  0100               	movlb	0	; () banked
  1092   0026E8  6FEA               	movwf	_motorL& (0+255),b
  1093   0026EA                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 27:     motorL.direction=1;
  1096   0026EA  0E01               	movlw	1
  1097   0026EC  6FEB               	movwf	(_motorL+1)& (0+255),b
  1098   0026EE                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 28:     motorL.brakemode=1;
  1101   0026EE  0E01               	movlw	1
  1102   0026F0  6FEC               	movwf	(_motorL+2)& (0+255),b
  1103   0026F2                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 29:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1106   0026F2  0EAA               	movlw	170
  1107   0026F4  6FEF               	movwf	(_motorL+5)& (0+255),b
  1108   0026F6  0E0F               	movlw	15
  1109   0026F8  6FF0               	movwf	(_motorL+6)& (0+255),b
  1110   0026FA                     
  1111                           ; BSR set to: 0
  1112                           ;main.c: 30:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1113   0026FA  0EA6               	movlw	166
  1114   0026FC  6FF1               	movwf	(_motorL+7)& (0+255),b
  1115   0026FE  0E0F               	movlw	15
  1116   002700  6FF2               	movwf	(_motorL+8)& (0+255),b
  1117   002702                     
  1118                           ; BSR set to: 0
  1119                           ;main.c: 31:     motorL.PWMperiod=PWMcycle;
  1120   002702  0E00               	movlw	0
  1121   002704  6FEE               	movwf	(_motorL+4)& (0+255),b
  1122   002706  0E63               	movlw	99
  1123   002708  6FED               	movwf	(_motorL+3)& (0+255),b
  1124   00270A                     
  1125                           ; BSR set to: 0
  1126                           ;main.c: 33:     motorR.power=0;
  1127   00270A  0E00               	movlw	0
  1128   00270C  6FE1               	movwf	_motorR& (0+255),b
  1129   00270E                     
  1130                           ; BSR set to: 0
  1131                           ;main.c: 34:     motorR.direction=1;
  1132   00270E  0E01               	movlw	1
  1133   002710  6FE2               	movwf	(_motorR+1)& (0+255),b
  1134   002712                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 35:     motorR.brakemode=1;
  1137   002712  0E01               	movlw	1
  1138   002714  6FE3               	movwf	(_motorR+2)& (0+255),b
  1139   002716                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 36:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1142   002716  0E25               	movlw	37
  1143   002718  6FE6               	movwf	(_motorR+5)& (0+255),b
  1144   00271A  0E0F               	movlw	15
  1145   00271C  6FE7               	movwf	(_motorR+6)& (0+255),b
  1146   00271E                     
  1147                           ; BSR set to: 0
  1148                           ;main.c: 37:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1149   00271E  0E21               	movlw	33
  1150   002720  6FE8               	movwf	(_motorR+7)& (0+255),b
  1151   002722  0E0F               	movlw	15
  1152   002724  6FE9               	movwf	(_motorR+8)& (0+255),b
  1153   002726                     
  1154                           ; BSR set to: 0
  1155                           ;main.c: 38:     motorR.PWMperiod=PWMcycle;
  1156   002726  0E00               	movlw	0
  1157   002728  6FE5               	movwf	(_motorR+4)& (0+255),b
  1158   00272A  0E63               	movlw	99
  1159   00272C  6FE4               	movwf	(_motorR+3)& (0+255),b
  1160   00272E                     
  1161                           ; BSR set to: 0
  1162                           ;main.c: 40:     TRISFbits.TRISF2=1;
  1163   00272E  8486               	bsf	134,2,c	;volatile
  1164   002730                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 41:     ANSELFbits.ANSELF2=0;
  1167   002730  010E               	movlb	14	; () banked
  1168   002732  95B4               	bcf	180,2,b	;volatile
  1169   002734                     
  1170                           ; BSR set to: 14
  1171                           ;main.c: 42:     char wall=0;
  1172   002734  0E00               	movlw	0
  1173   002736  0100               	movlb	0	; () banked
  1174   002738  6FD9               	movwf	main@wall& (0+255),b
  1175   00273A                     
  1176                           ; BSR set to: 0
  1177                           ;main.c: 43:     ClickLEDOn(0);
  1178   00273A  0E00               	movlw	0
  1179   00273C  ECBF  F021         	call	_ClickLEDOn
  1180   002740                     l264:
  1181   002740  B48E               	btfsc	142,2,c	;volatile
  1182   002742  EFA5  F013         	goto	u3951
  1183   002746  EFA7  F013         	goto	u3950
  1184   00274A                     u3951:
  1185   00274A  EFA0  F013         	goto	l264
  1186   00274E                     u3950:
  1187   00274E                     
  1188                           ;main.c: 46:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1189   00274E  0E52               	movlw	82
  1190   002750  6E5E               	movwf	(??_main+1)^0,c
  1191   002752  0E2B               	movlw	43
  1192   002754  6E5D               	movwf	??_main^0,c
  1193   002756  0E00               	movlw	0
  1194   002758                     u4067:
  1195   002758  2EE8               	decfsz	wreg,f,c
  1196   00275A  D7FE               	bra	u4067
  1197   00275C  2E5D               	decfsz	??_main^0,f,c
  1198   00275E  D7FC               	bra	u4067
  1199   002760  2E5E               	decfsz	(??_main+1)^0,f,c
  1200   002762  D7FA               	bra	u4067
  1201   002764  D000               	nop2	
  1202   002766                     l4228:
  1203                           
  1204                           ;main.c: 48:         fullSpeedAhead(&motorL,&motorR);
  1205   002766  0EEA               	movlw	low _motorL
  1206   002768  6E14               	movwf	fullSpeedAhead@mL^0,c
  1207   00276A  0E00               	movlw	high _motorL
  1208   00276C  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1209   00276E  0EE1               	movlw	low _motorR
  1210   002770  6E16               	movwf	fullSpeedAhead@mR^0,c
  1211   002772  0E00               	movlw	high _motorR
  1212   002774  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1213   002776  EC44  F01E         	call	_fullSpeedAhead	;wreg free
  1214   00277A                     
  1215                           ;main.c: 50:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1216   00277A  0E52               	movlw	82
  1217   00277C  6E5E               	movwf	(??_main+1)^0,c
  1218   00277E  0E2B               	movlw	43
  1219   002780  6E5D               	movwf	??_main^0,c
  1220   002782  0E00               	movlw	0
  1221   002784                     u4077:
  1222   002784  2EE8               	decfsz	wreg,f,c
  1223   002786  D7FE               	bra	u4077
  1224   002788  2E5D               	decfsz	??_main^0,f,c
  1225   00278A  D7FC               	bra	u4077
  1226   00278C  2E5E               	decfsz	(??_main+1)^0,f,c
  1227   00278E  D7FA               	bra	u4077
  1228   002790  D000               	nop2	
  1229                           
  1230                           ;main.c: 51:         while (!wall){
  1231   002792  EF10  F014         	goto	l4246
  1232   002796                     l4232:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 53:             colour_read_all(&colorf);
  1236   002796  0E70               	movlw	low _colorf
  1237   002798  6E1A               	movwf	colour_read_all@cf^0,c
  1238   00279A  0E01               	movlw	high _colorf
  1239   00279C  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1240   00279E  ECFB  F017         	call	_colour_read_all	;wreg free
  1241   0027A2                     
  1242                           ;main.c: 54:             Color2String(data,&colorf);
  1243   0027A2  0E75               	movlw	low main@data
  1244   0027A4  6E45               	movwf	Color2String@buf^0,c
  1245   0027A6  0E00               	movlw	high main@data
  1246   0027A8  6E46               	movwf	(Color2String@buf+1)^0,c
  1247   0027AA  0E70               	movlw	low _colorf
  1248   0027AC  6E47               	movwf	Color2String@cf^0,c
  1249   0027AE  0E01               	movlw	high _colorf
  1250   0027B0  6E48               	movwf	(Color2String@cf+1)^0,c
  1251   0027B2  EC84  F021         	call	_Color2String	;wreg free
  1252   0027B6                     
  1253                           ;main.c: 58:              if (colorf.Cf<100)
  1254   0027B6  C17C  F001         	movff	_colorf+12,___flge@ff1
  1255   0027BA  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1256   0027BE  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1257   0027C2  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1258   0027C6  0E00               	movlw	0
  1259   0027C8  6E05               	movwf	___flge@ff2^0,c
  1260   0027CA  0E00               	movlw	0
  1261   0027CC  6E06               	movwf	(___flge@ff2+1)^0,c
  1262   0027CE  0EC8               	movlw	200
  1263   0027D0  6E07               	movwf	(___flge@ff2+2)^0,c
  1264   0027D2  0E42               	movlw	66
  1265   0027D4  6E08               	movwf	(___flge@ff2+3)^0,c
  1266   0027D6  EC01  F019         	call	___flge	;wreg free
  1267   0027DA  B0D8               	btfsc	status,0,c
  1268   0027DC  EFF2  F013         	goto	u3961
  1269   0027E0  EFF4  F013         	goto	u3960
  1270   0027E4                     u3961:
  1271   0027E4  EF10  F014         	goto	l4246
  1272   0027E8                     u3960:
  1273   0027E8                     
  1274                           ;main.c: 59:              {;main.c: 61:                  wall=1;
  1275   0027E8  0E01               	movlw	1
  1276   0027EA  0100               	movlb	0	; () banked
  1277   0027EC  6FD9               	movwf	main@wall& (0+255),b
  1278   0027EE                     
  1279                           ; BSR set to: 0
  1280                           ;main.c: 62:                  ClickLEDOn(1);
  1281   0027EE  0E01               	movlw	1
  1282   0027F0  ECBF  F021         	call	_ClickLEDOn
  1283   0027F4                     
  1284                           ;main.c: 63:                  _delay((unsigned long)((500)*(64000000/4000.0)));
  1285   0027F4  0E29               	movlw	41
  1286   0027F6  6E5E               	movwf	(??_main+1)^0,c
  1287   0027F8  0E96               	movlw	150
  1288   0027FA  6E5D               	movwf	??_main^0,c
  1289   0027FC  0E7F               	movlw	127
  1290   0027FE                     u4087:
  1291   0027FE  2EE8               	decfsz	wreg,f,c
  1292   002800  D7FE               	bra	u4087
  1293   002802  2E5D               	decfsz	??_main^0,f,c
  1294   002804  D7FC               	bra	u4087
  1295   002806  2E5E               	decfsz	(??_main+1)^0,f,c
  1296   002808  D7FA               	bra	u4087
  1297   00280A  F000               	nop	
  1298   00280C                     
  1299                           ;main.c: 64:                  stop(&motorL,&motorR);
  1300   00280C  0EEA               	movlw	low _motorL
  1301   00280E  6E14               	movwf	stop@mL^0,c
  1302   002810  0E00               	movlw	high _motorL
  1303   002812  6E15               	movwf	(stop@mL+1)^0,c
  1304   002814  0EE1               	movlw	low _motorR
  1305   002816  6E16               	movwf	stop@mR^0,c
  1306   002818  0E00               	movlw	high _motorR
  1307   00281A  6E17               	movwf	(stop@mR+1)^0,c
  1308   00281C  EC48  F01C         	call	_stop	;wreg free
  1309   002820                     l4246:
  1310                           
  1311                           ;main.c: 51:         while (!wall){
  1312   002820  0100               	movlb	0	; () banked
  1313   002822  51D9               	movf	main@wall& (0+255),w,b
  1314   002824  B4D8               	btfsc	status,2,c
  1315   002826  EF17  F014         	goto	u3971
  1316   00282A  EF19  F014         	goto	u3970
  1317   00282E                     u3971:
  1318   00282E  EFCB  F013         	goto	l4232
  1319   002832                     u3970:
  1320   002832                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 67:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1323   002832  0EA3               	movlw	163
  1324   002834  6E5E               	movwf	(??_main+1)^0,c
  1325   002836  0E57               	movlw	87
  1326   002838  6E5D               	movwf	??_main^0,c
  1327   00283A  0E02               	movlw	2
  1328   00283C                     u4097:
  1329   00283C  2EE8               	decfsz	wreg,f,c
  1330   00283E  D7FE               	bra	u4097
  1331   002840  2E5D               	decfsz	??_main^0,f,c
  1332   002842  D7FC               	bra	u4097
  1333   002844  2E5E               	decfsz	(??_main+1)^0,f,c
  1334   002846  D7FA               	bra	u4097
  1335   002848  D000               	nop2	
  1336   00284A                     
  1337                           ;main.c: 68:         colour_read_all(&colorf);
  1338   00284A  0E70               	movlw	low _colorf
  1339   00284C  6E1A               	movwf	colour_read_all@cf^0,c
  1340   00284E  0E01               	movlw	high _colorf
  1341   002850  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1342   002852  ECFB  F017         	call	_colour_read_all	;wreg free
  1343   002856                     
  1344                           ;main.c: 69:         RGB2Hue(&colorf);
  1345   002856  0E70               	movlw	low _colorf
  1346   002858  6E57               	movwf	RGB2Hue@cf^0,c
  1347   00285A  0E01               	movlw	high _colorf
  1348   00285C  6E58               	movwf	(RGB2Hue@cf+1)^0,c
  1349   00285E  EC29  F007         	call	_RGB2Hue	;wreg free
  1350   002862                     
  1351                           ;main.c: 70:         Hue2Colour(&colorf);
  1352   002862  0E70               	movlw	low _colorf
  1353   002864  6E0D               	movwf	Hue2Colour@cf^0,c
  1354   002866  0E01               	movlw	high _colorf
  1355   002868  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1356   00286A  ECAA  F00A         	call	_Hue2Colour	;wreg free
  1357   00286E                     
  1358                           ;main.c: 71:         Colour2Action(&colorf);
  1359   00286E  0E70               	movlw	low _colorf
  1360   002870  6E28               	movwf	Colour2Action@cf^0,c
  1361   002872  0E01               	movlw	high _colorf
  1362   002874  6E29               	movwf	(Colour2Action@cf+1)^0,c
  1363   002876  EC37  F015         	call	_Colour2Action	;wreg free
  1364   00287A                     
  1365                           ;main.c: 73:         Color2String(data,&colorf);
  1366   00287A  0E75               	movlw	low main@data
  1367   00287C  6E45               	movwf	Color2String@buf^0,c
  1368   00287E  0E00               	movlw	high main@data
  1369   002880  6E46               	movwf	(Color2String@buf+1)^0,c
  1370   002882  0E70               	movlw	low _colorf
  1371   002884  6E47               	movwf	Color2String@cf^0,c
  1372   002886  0E01               	movlw	high _colorf
  1373   002888  6E48               	movwf	(Color2String@cf+1)^0,c
  1374   00288A  EC84  F021         	call	_Color2String	;wreg free
  1375   00288E                     
  1376                           ;main.c: 74:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1377   00288E  0E52               	movlw	82
  1378   002890  6E5E               	movwf	(??_main+1)^0,c
  1379   002892  0E2B               	movlw	43
  1380   002894  6E5D               	movwf	??_main^0,c
  1381   002896  0E00               	movlw	0
  1382   002898                     u4107:
  1383   002898  2EE8               	decfsz	wreg,f,c
  1384   00289A  D7FE               	bra	u4107
  1385   00289C  2E5D               	decfsz	??_main^0,f,c
  1386   00289E  D7FC               	bra	u4107
  1387   0028A0  2E5E               	decfsz	(??_main+1)^0,f,c
  1388   0028A2  D7FA               	bra	u4107
  1389   0028A4  D000               	nop2	
  1390   0028A6                     
  1391                           ;main.c: 75:         wall=0;
  1392   0028A6  0E00               	movlw	0
  1393   0028A8  0100               	movlb	0	; () banked
  1394   0028AA  6FD9               	movwf	main@wall& (0+255),b
  1395   0028AC                     
  1396                           ; BSR set to: 0
  1397                           ;main.c: 76:         ClickLEDOn(0);
  1398   0028AC  0E00               	movlw	0
  1399   0028AE  ECBF  F021         	call	_ClickLEDOn
  1400   0028B2  EFB3  F013         	goto	l4228
  1401   0028B6  EF00  F000         	goto	start
  1402   0028BA                     __end_of_main:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _initUSART4 *****************
  1406 ;; Defined at:
  1407 ;;		line 7 in file "serial.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text1
  1435   00442A                     __ptext1:
  1436                           	callstack 0
  1437   00442A                     _initUSART4:
  1438                           	callstack 30
  1439   00442A                     
  1440                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1441   00442A  8883               	bsf	131,4,c	;volatile
  1442                           
  1443                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1444   00442C  8283               	bsf	131,1,c	;volatile
  1445   00442E                     
  1446                           ;serial.c: 10:     RC0PPS = 0x12;
  1447   00442E  0E12               	movlw	18
  1448   004430  010E               	movlb	14	; () banked
  1449   004432  6F62               	movwf	98,b	;volatile
  1450                           
  1451                           ;serial.c: 11:     RX4PPS = 0x11;
  1452   004434  0E11               	movlw	17
  1453   004436  6F15               	movwf	21,b	;volatile
  1454   004438                     
  1455                           ; BSR set to: 14
  1456                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1457   004438  97E9               	bcf	233,3,b	;volatile
  1458   00443A                     
  1459                           ; BSR set to: 14
  1460                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1461   00443A  95E8               	bcf	232,2,b	;volatile
  1462                           
  1463                           ;serial.c: 15:     SP4BRGL = 51;
  1464   00443C  0E33               	movlw	51
  1465   00443E  6FE5               	movwf	229,b	;volatile
  1466                           
  1467                           ;serial.c: 16:     SP4BRGH = 0;
  1468   004440  0E00               	movlw	0
  1469   004442  6FE6               	movwf	230,b	;volatile
  1470   004444                     
  1471                           ; BSR set to: 14
  1472                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1473   004444  89E7               	bsf	231,4,b	;volatile
  1474   004446                     
  1475                           ; BSR set to: 14
  1476                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1477   004446  8BE8               	bsf	232,5,b	;volatile
  1478   004448                     
  1479                           ; BSR set to: 14
  1480                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1481   004448  8FE7               	bsf	231,7,b	;volatile
  1482   00444A                     
  1483                           ; BSR set to: 14
  1484   00444A  0012               	return		;funcret
  1485   00444C                     __end_of_initUSART4:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _initDCmotorsPWM *****************
  1489 ;; Defined at:
  1490 ;;		line 11 in file "dc_motor.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;Total ram usage:        2 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text2
  1518   003A62                     __ptext2:
  1519                           	callstack 0
  1520   003A62                     _initDCmotorsPWM:
  1521                           	callstack 30
  1522   003A62                     
  1523                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1524   003A62  9485               	bcf	133,2,c	;volatile
  1525                           
  1526                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1527   003A64  9E83               	bcf	131,7,c	;volatile
  1528                           
  1529                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1530   003A66  9885               	bcf	133,4,c	;volatile
  1531                           
  1532                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1533   003A68  9C87               	bcf	135,6,c	;volatile
  1534                           
  1535                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1536   003A6A  947D               	bcf	125,2,c	;volatile
  1537                           
  1538                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1539   003A6C  9E7B               	bcf	123,7,c	;volatile
  1540                           
  1541                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1542   003A6E  987D               	bcf	125,4,c	;volatile
  1543                           
  1544                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1545   003A70  9C7F               	bcf	127,6,c	;volatile
  1546   003A72                     
  1547                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1548   003A72  0E05               	movlw	5
  1549   003A74  010E               	movlb	14	; () banked
  1550   003A76  6F74               	movwf	116,b	;volatile
  1551                           
  1552                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1553   003A78  0E06               	movlw	6
  1554   003A7A  6F76               	movwf	118,b	;volatile
  1555                           
  1556                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1557   003A7C  0E07               	movlw	7
  1558   003A7E  6F69               	movwf	105,b	;volatile
  1559                           
  1560                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1561   003A80  0E08               	movlw	8
  1562   003A82  6F88               	movwf	136,b	;volatile
  1563                           
  1564                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1565   003A84  50BD               	movf	189,w,c	;volatile
  1566   003A86  0B8F               	andlw	-113
  1567   003A88  0940               	iorlw	64
  1568   003A8A  6EBD               	movwf	189,c	;volatile
  1569                           
  1570                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1571   003A8C  0EE0               	movlw	-32
  1572   003A8E  16BE               	andwf	190,f,c	;volatile
  1573                           
  1574                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1575   003A90  50BF               	movf	191,w,c	;volatile
  1576   003A92  0BF0               	andlw	-16
  1577   003A94  0901               	iorlw	1
  1578   003A96  6EBF               	movwf	191,c	;volatile
  1579   003A98                     
  1580                           ; BSR set to: 14
  1581                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1582   003A98  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1583   003A9C                     
  1584                           ; BSR set to: 14
  1585                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1586   003A9C  8EBD               	bsf	189,7,c	;volatile
  1587                           
  1588                           ;dc_motor.c: 40:     CCPR1H=0;
  1589   003A9E  0E00               	movlw	0
  1590   003AA0  6EAA               	movwf	170,c	;volatile
  1591                           
  1592                           ;dc_motor.c: 41:     CCPR2H=0;
  1593   003AA2  0E00               	movlw	0
  1594   003AA4  6EA6               	movwf	166,c	;volatile
  1595                           
  1596                           ;dc_motor.c: 42:     CCPR3H=0;
  1597   003AA6  0E00               	movlw	0
  1598   003AA8  010F               	movlb	15	; () banked
  1599   003AAA  6F25               	movwf	37,b	;volatile
  1600                           
  1601                           ;dc_motor.c: 43:     CCPR4H=0;
  1602   003AAC  0E00               	movlw	0
  1603   003AAE  6F21               	movwf	33,b	;volatile
  1604                           
  1605                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1606   003AB0  0EFC               	movlw	-4
  1607   003AB2  16AD               	andwf	173,f,c	;volatile
  1608                           
  1609                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1610   003AB4  0EF3               	movlw	-13
  1611   003AB6  16AD               	andwf	173,f,c	;volatile
  1612                           
  1613                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1614   003AB8  0ECF               	movlw	-49
  1615   003ABA  16AD               	andwf	173,f,c	;volatile
  1616                           
  1617                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1618   003ABC  0E3F               	movlw	-193
  1619   003ABE  16AD               	andwf	173,f,c	;volatile
  1620   003AC0                     
  1621                           ; BSR set to: 15
  1622                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1623   003AC0  88AB               	bsf	171,4,c	;volatile
  1624                           
  1625                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1626   003AC2  50AB               	movf	171,w,c	;volatile
  1627   003AC4  0BF0               	andlw	-16
  1628   003AC6  090C               	iorlw	12
  1629   003AC8  6EAB               	movwf	171,c	;volatile
  1630   003ACA                     
  1631                           ; BSR set to: 15
  1632                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1633   003ACA  8EAB               	bsf	171,7,c	;volatile
  1634   003ACC                     
  1635                           ; BSR set to: 15
  1636                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1637   003ACC  88A7               	bsf	167,4,c	;volatile
  1638                           
  1639                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1640   003ACE  50A7               	movf	167,w,c	;volatile
  1641   003AD0  0BF0               	andlw	-16
  1642   003AD2  090C               	iorlw	12
  1643   003AD4  6EA7               	movwf	167,c	;volatile
  1644   003AD6                     
  1645                           ; BSR set to: 15
  1646                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1647   003AD6  8EA7               	bsf	167,7,c	;volatile
  1648   003AD8                     
  1649                           ; BSR set to: 15
  1650                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1651   003AD8  8926               	bsf	38,4,b	;volatile
  1652                           
  1653                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1654   003ADA  5126               	movf	38,w,b	;volatile
  1655   003ADC  0BF0               	andlw	-16
  1656   003ADE  090C               	iorlw	12
  1657   003AE0  6F26               	movwf	38,b	;volatile
  1658   003AE2                     
  1659                           ; BSR set to: 15
  1660                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1661   003AE2  8F26               	bsf	38,7,b	;volatile
  1662   003AE4                     
  1663                           ; BSR set to: 15
  1664                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1665   003AE4  8922               	bsf	34,4,b	;volatile
  1666                           
  1667                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1668   003AE6  5122               	movf	34,w,b	;volatile
  1669   003AE8  0BF0               	andlw	-16
  1670   003AEA  090C               	iorlw	12
  1671   003AEC  6F22               	movwf	34,b	;volatile
  1672   003AEE                     
  1673                           ; BSR set to: 15
  1674                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1675   003AEE  8F22               	bsf	34,7,b	;volatile
  1676   003AF0                     
  1677                           ; BSR set to: 15
  1678   003AF0  0012               	return		;funcret
  1679   003AF2                     __end_of_initDCmotorsPWM:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _colour_read_all *****************
  1683 ;; Defined at:
  1684 ;;		line 8 in file "colorfunctions.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1687 ;;		 -> colorf(22), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  C               4   39[COMRAM] float 
  1690 ;;  B               4   35[COMRAM] float 
  1691 ;;  G               4   31[COMRAM] float 
  1692 ;;  R               4   27[COMRAM] float 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;Total ram usage:       18 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 3
  1709 ;; This function calls:
  1710 ;;		___xxtofl
  1711 ;;		_color_read_Blue
  1712 ;;		_color_read_Clear
  1713 ;;		_color_read_Green
  1714 ;;		_color_read_Red
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text3
  1721   002FF6                     __ptext3:
  1722                           	callstack 0
  1723   002FF6                     _colour_read_all:
  1724                           	callstack 27
  1725   002FF6                     
  1726                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1727   002FF6  EC0A  F020         	call	_color_read_Red	;wreg free
  1728   002FFA  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1729   002FFE  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1730   003002  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1731   003004  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1732   003006  0E00               	movlw	0
  1733   003008  EC5D  F014         	call	___xxtofl
  1734   00300C  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1735   003010  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1736   003014  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1737   003018  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1738                           
  1739                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1740   00301C  EC32  F020         	call	_color_read_Green	;wreg free
  1741   003020  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1742   003024  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1743   003028  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1744   00302A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1745   00302C  0E00               	movlw	0
  1746   00302E  EC5D  F014         	call	___xxtofl
  1747   003032  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1748   003036  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1749   00303A  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1750   00303E  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1751                           
  1752                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1753   003042  EC82  F020         	call	_color_read_Blue	;wreg free
  1754   003046  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1755   00304A  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1756   00304E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1757   003050  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1758   003052  0E00               	movlw	0
  1759   003054  EC5D  F014         	call	___xxtofl
  1760   003058  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1761   00305C  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1762   003060  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1763   003064  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1764                           
  1765                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1766   003068  EC5A  F020         	call	_color_read_Clear	;wreg free
  1767   00306C  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1768   003070  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1769   003074  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1770   003076  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1771   003078  0E00               	movlw	0
  1772   00307A  EC5D  F014         	call	___xxtofl
  1773   00307E  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1774   003082  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1775   003086  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1776   00308A  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1777   00308E                     
  1778                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1779   00308E  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1780   003092  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1781   003096  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1782   00309A  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1783   00309E  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1784   0030A2  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1785   0030A6                     
  1786                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1787   0030A6  EE20 F008          	lfsr	2,8
  1788   0030AA  501A               	movf	colour_read_all@cf^0,w,c
  1789   0030AC  26D9               	addwf	fsr2l,f,c
  1790   0030AE  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1791   0030B0  22DA               	addwfc	fsr2h,f,c
  1792   0030B2  C024  FFDE         	movff	colour_read_all@B,postinc2
  1793   0030B6  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1794   0030BA  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1795   0030BE  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1796   0030C2                     
  1797                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1798   0030C2  EE20 F004          	lfsr	2,4
  1799   0030C6  501A               	movf	colour_read_all@cf^0,w,c
  1800   0030C8  26D9               	addwf	fsr2l,f,c
  1801   0030CA  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1802   0030CC  22DA               	addwfc	fsr2h,f,c
  1803   0030CE  C020  FFDE         	movff	colour_read_all@G,postinc2
  1804   0030D2  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1805   0030D6  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1806   0030DA  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1807   0030DE                     
  1808                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1809   0030DE  EE20 F00C          	lfsr	2,12
  1810   0030E2  501A               	movf	colour_read_all@cf^0,w,c
  1811   0030E4  26D9               	addwf	fsr2l,f,c
  1812   0030E6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1813   0030E8  22DA               	addwfc	fsr2h,f,c
  1814   0030EA  C028  FFDE         	movff	colour_read_all@C,postinc2
  1815   0030EE  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  1816   0030F2  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  1817   0030F6  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  1818   0030FA  0012               	return		;funcret
  1819   0030FC                     __end_of_colour_read_all:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _color_read_Red *****************
  1823 ;; Defined at:
  1824 ;;		line 38 in file "colorclick.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  tmp             2    9[COMRAM] unsigned int 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    4[COMRAM] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;Total ram usage:        7 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 2
  1845 ;; This function calls:
  1846 ;;		_I2C_2_Master_Read
  1847 ;;		_I2C_2_Master_RepStart
  1848 ;;		_I2C_2_Master_Start
  1849 ;;		_I2C_2_Master_Stop
  1850 ;;		_I2C_2_Master_Write
  1851 ;; This function is called by:
  1852 ;;		_colour_read_all
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text4
  1857   004014                     __ptext4:
  1858                           	callstack 0
  1859   004014                     _color_read_Red:
  1860                           	callstack 27
  1861   004014                     
  1862                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  1863   004014  EC59  F022         	call	_I2C_2_Master_Start	;wreg free
  1864                           
  1865                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  1866   004018  0E52               	movlw	82
  1867   00401A  EC49  F022         	call	_I2C_2_Master_Write
  1868                           
  1869                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  1870   00401E  0EB6               	movlw	182
  1871   004020  EC49  F022         	call	_I2C_2_Master_Write
  1872                           
  1873                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  1874   004024  EC4F  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1875                           
  1876                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  1877   004028  0E53               	movlw	83
  1878   00402A  EC49  F022         	call	_I2C_2_Master_Write
  1879                           
  1880                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  1881   00402E  0E01               	movlw	1
  1882   004030  EC43  F021         	call	_I2C_2_Master_Read
  1883   004034  6E07               	movwf	??_color_read_Red^0,c
  1884   004036  5007               	movf	??_color_read_Red^0,w,c
  1885   004038  6E0A               	movwf	color_read_Red@tmp^0,c
  1886   00403A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1887                           
  1888                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1889   00403C  0E00               	movlw	0
  1890   00403E  EC43  F021         	call	_I2C_2_Master_Read
  1891   004042  6E07               	movwf	??_color_read_Red^0,c
  1892   004044  5007               	movf	??_color_read_Red^0,w,c
  1893   004046  6E09               	movwf	(??_color_read_Red+2)^0,c
  1894   004048  6A08               	clrf	(??_color_read_Red+1)^0,c
  1895   00404A  500A               	movf	color_read_Red@tmp^0,w,c
  1896   00404C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1897   00404E  6E0A               	movwf	color_read_Red@tmp^0,c
  1898   004050  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1899   004052  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1900   004054  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1901                           
  1902                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  1903   004056  EC54  F022         	call	_I2C_2_Master_Stop	;wreg free
  1904   00405A                     
  1905                           ;colorclick.c: 49:  return tmp;
  1906   00405A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1907   00405E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1908   004062  0012               	return		;funcret
  1909   004064                     __end_of_color_read_Red:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _color_read_Green *****************
  1913 ;; Defined at:
  1914 ;;		line 51 in file "colorclick.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  tmp             2    9[COMRAM] unsigned int 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2    4[COMRAM] unsigned int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        7 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 2
  1935 ;; This function calls:
  1936 ;;		_I2C_2_Master_Read
  1937 ;;		_I2C_2_Master_RepStart
  1938 ;;		_I2C_2_Master_Start
  1939 ;;		_I2C_2_Master_Stop
  1940 ;;		_I2C_2_Master_Write
  1941 ;; This function is called by:
  1942 ;;		_colour_read_all
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text5
  1947   004064                     __ptext5:
  1948                           	callstack 0
  1949   004064                     _color_read_Green:
  1950                           	callstack 27
  1951   004064                     
  1952                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  1953   004064  EC59  F022         	call	_I2C_2_Master_Start	;wreg free
  1954                           
  1955                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  1956   004068  0E52               	movlw	82
  1957   00406A  EC49  F022         	call	_I2C_2_Master_Write
  1958                           
  1959                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  1960   00406E  0EB8               	movlw	184
  1961   004070  EC49  F022         	call	_I2C_2_Master_Write
  1962                           
  1963                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  1964   004074  EC4F  F022         	call	_I2C_2_Master_RepStart	;wreg free
  1965                           
  1966                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  1967   004078  0E53               	movlw	83
  1968   00407A  EC49  F022         	call	_I2C_2_Master_Write
  1969                           
  1970                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  1971   00407E  0E01               	movlw	1
  1972   004080  EC43  F021         	call	_I2C_2_Master_Read
  1973   004084  6E07               	movwf	??_color_read_Green^0,c
  1974   004086  5007               	movf	??_color_read_Green^0,w,c
  1975   004088  6E0A               	movwf	color_read_Green@tmp^0,c
  1976   00408A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1977                           
  1978                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1979   00408C  0E00               	movlw	0
  1980   00408E  EC43  F021         	call	_I2C_2_Master_Read
  1981   004092  6E07               	movwf	??_color_read_Green^0,c
  1982   004094  5007               	movf	??_color_read_Green^0,w,c
  1983   004096  6E09               	movwf	(??_color_read_Green+2)^0,c
  1984   004098  6A08               	clrf	(??_color_read_Green+1)^0,c
  1985   00409A  500A               	movf	color_read_Green@tmp^0,w,c
  1986   00409C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1987   00409E  6E0A               	movwf	color_read_Green@tmp^0,c
  1988   0040A0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1989   0040A2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1990   0040A4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1991                           
  1992                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  1993   0040A6  EC54  F022         	call	_I2C_2_Master_Stop	;wreg free
  1994   0040AA                     
  1995                           ;colorclick.c: 62:     return tmp;
  1996   0040AA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1997   0040AE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1998   0040B2  0012               	return		;funcret
  1999   0040B4                     __end_of_color_read_Green:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _color_read_Clear *****************
  2003 ;; Defined at:
  2004 ;;		line 80 in file "colorclick.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  tmp             2    9[COMRAM] unsigned int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2    4[COMRAM] unsigned int 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;Total ram usage:        7 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 2
  2025 ;; This function calls:
  2026 ;;		_I2C_2_Master_Read
  2027 ;;		_I2C_2_Master_RepStart
  2028 ;;		_I2C_2_Master_Start
  2029 ;;		_I2C_2_Master_Stop
  2030 ;;		_I2C_2_Master_Write
  2031 ;; This function is called by:
  2032 ;;		_colour_read_all
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text6
  2037   0040B4                     __ptext6:
  2038                           	callstack 0
  2039   0040B4                     _color_read_Clear:
  2040                           	callstack 27
  2041   0040B4                     
  2042                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2043   0040B4  EC59  F022         	call	_I2C_2_Master_Start	;wreg free
  2044                           
  2045                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2046   0040B8  0E52               	movlw	82
  2047   0040BA  EC49  F022         	call	_I2C_2_Master_Write
  2048                           
  2049                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2050   0040BE  0EB4               	movlw	180
  2051   0040C0  EC49  F022         	call	_I2C_2_Master_Write
  2052                           
  2053                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2054   0040C4  EC4F  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2055                           
  2056                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2057   0040C8  0E53               	movlw	83
  2058   0040CA  EC49  F022         	call	_I2C_2_Master_Write
  2059                           
  2060                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2061   0040CE  0E01               	movlw	1
  2062   0040D0  EC43  F021         	call	_I2C_2_Master_Read
  2063   0040D4  6E07               	movwf	??_color_read_Clear^0,c
  2064   0040D6  5007               	movf	??_color_read_Clear^0,w,c
  2065   0040D8  6E0A               	movwf	color_read_Clear@tmp^0,c
  2066   0040DA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2067                           
  2068                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2069   0040DC  0E00               	movlw	0
  2070   0040DE  EC43  F021         	call	_I2C_2_Master_Read
  2071   0040E2  6E07               	movwf	??_color_read_Clear^0,c
  2072   0040E4  5007               	movf	??_color_read_Clear^0,w,c
  2073   0040E6  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2074   0040E8  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2075   0040EA  500A               	movf	color_read_Clear@tmp^0,w,c
  2076   0040EC  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2077   0040EE  6E0A               	movwf	color_read_Clear@tmp^0,c
  2078   0040F0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2079   0040F2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2080   0040F4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2081                           
  2082                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2083   0040F6  EC54  F022         	call	_I2C_2_Master_Stop	;wreg free
  2084   0040FA                     
  2085                           ;colorclick.c: 91:     return tmp;
  2086   0040FA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2087   0040FE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2088   004102  0012               	return		;funcret
  2089   004104                     __end_of_color_read_Clear:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _color_read_Blue *****************
  2093 ;; Defined at:
  2094 ;;		line 65 in file "colorclick.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  tmp             2    9[COMRAM] unsigned int 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    4[COMRAM] unsigned int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;Total ram usage:        7 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 2
  2115 ;; This function calls:
  2116 ;;		_I2C_2_Master_Read
  2117 ;;		_I2C_2_Master_RepStart
  2118 ;;		_I2C_2_Master_Start
  2119 ;;		_I2C_2_Master_Stop
  2120 ;;		_I2C_2_Master_Write
  2121 ;; This function is called by:
  2122 ;;		_colour_read_all
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text7
  2127   004104                     __ptext7:
  2128                           	callstack 0
  2129   004104                     _color_read_Blue:
  2130                           	callstack 27
  2131   004104                     
  2132                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2133   004104  EC59  F022         	call	_I2C_2_Master_Start	;wreg free
  2134                           
  2135                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2136   004108  0E52               	movlw	82
  2137   00410A  EC49  F022         	call	_I2C_2_Master_Write
  2138                           
  2139                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2140   00410E  0EBA               	movlw	186
  2141   004110  EC49  F022         	call	_I2C_2_Master_Write
  2142                           
  2143                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2144   004114  EC4F  F022         	call	_I2C_2_Master_RepStart	;wreg free
  2145                           
  2146                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2147   004118  0E53               	movlw	83
  2148   00411A  EC49  F022         	call	_I2C_2_Master_Write
  2149                           
  2150                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2151   00411E  0E01               	movlw	1
  2152   004120  EC43  F021         	call	_I2C_2_Master_Read
  2153   004124  6E07               	movwf	??_color_read_Blue^0,c
  2154   004126  5007               	movf	??_color_read_Blue^0,w,c
  2155   004128  6E0A               	movwf	color_read_Blue@tmp^0,c
  2156   00412A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2157                           
  2158                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2159   00412C  0E00               	movlw	0
  2160   00412E  EC43  F021         	call	_I2C_2_Master_Read
  2161   004132  6E07               	movwf	??_color_read_Blue^0,c
  2162   004134  5007               	movf	??_color_read_Blue^0,w,c
  2163   004136  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2164   004138  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2165   00413A  500A               	movf	color_read_Blue@tmp^0,w,c
  2166   00413C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2167   00413E  6E0A               	movwf	color_read_Blue@tmp^0,c
  2168   004140  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2169   004142  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2170   004144  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2171                           
  2172                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2173   004146  EC54  F022         	call	_I2C_2_Master_Stop	;wreg free
  2174   00414A                     
  2175                           ;colorclick.c: 76:     return tmp;
  2176   00414A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2177   00414E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2178   004152  0012               	return		;funcret
  2179   004154                     __end_of_color_read_Blue:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _I2C_2_Master_RepStart *****************
  2183 ;; Defined at:
  2184 ;;		line 33 in file "i2c.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 1
  2205 ;; This function calls:
  2206 ;;		_I2C_2_Master_Idle
  2207 ;; This function is called by:
  2208 ;;		_color_read_Red
  2209 ;;		_color_read_Green
  2210 ;;		_color_read_Blue
  2211 ;;		_color_read_Clear
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text8
  2216   00449E                     __ptext8:
  2217                           	callstack 0
  2218   00449E                     _I2C_2_Master_RepStart:
  2219                           	callstack 27
  2220   00449E                     
  2221                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2222   00449E  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2223   0044A2                     
  2224                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2225   0044A2  010E               	movlb	14	; () banked
  2226   0044A4  83DA               	bsf	218,1,b	;volatile
  2227   0044A6                     
  2228                           ; BSR set to: 14
  2229   0044A6  0012               	return		;funcret
  2230   0044A8                     __end_of_I2C_2_Master_RepStart:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _I2C_2_Master_Read *****************
  2234 ;; Defined at:
  2235 ;;		line 51 in file "i2c.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  ack             1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  ack             1    2[COMRAM] unsigned char 
  2240 ;;  tmp             1    3[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        3 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 1
  2257 ;; This function calls:
  2258 ;;		_I2C_2_Master_Idle
  2259 ;; This function is called by:
  2260 ;;		_color_read_Red
  2261 ;;		_color_read_Green
  2262 ;;		_color_read_Blue
  2263 ;;		_color_read_Clear
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text9
  2268   004286                     __ptext9:
  2269                           	callstack 0
  2270   004286                     _I2C_2_Master_Read:
  2271                           	callstack 27
  2272                           
  2273                           ; BSR set to: 14
  2274                           ;incstack = 0
  2275                           ;I2C_2_Master_Read@ack stored from wreg
  2276   004286  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2277   004288                     
  2278                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2279   004288  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2280   00428C                     
  2281                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2282   00428C  010E               	movlb	14	; () banked
  2283   00428E  87DA               	bsf	218,3,b	;volatile
  2284                           
  2285                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2286   004290  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2287   004294                     
  2288                           ;i2c.c: 57:   tmp = SSP2BUF;
  2289   004294  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2290                           
  2291                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2292   004298  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2293   00429C                     
  2294                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2295   00429C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2296   00429E  B4D8               	btfsc	status,2,c
  2297   0042A0  EF54  F021         	goto	u2401
  2298   0042A4  EF58  F021         	goto	u2400
  2299   0042A8                     u2401:
  2300   0042A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2301   0042AA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2302   0042AC  EF59  F021         	goto	u2418
  2303   0042B0                     u2400:
  2304   0042B0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2305   0042B2                     u2418:
  2306   0042B2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2307   0042B4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2308   0042B6  010E               	movlb	14	; () banked
  2309   0042B8  51DA               	movf	218,w,b	;volatile
  2310   0042BA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2311   0042BC  0BDF               	andlw	-33
  2312   0042BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2313   0042C0  6FDA               	movwf	218,b	;volatile
  2314   0042C2                     
  2315                           ; BSR set to: 14
  2316                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2317   0042C2  89DA               	bsf	218,4,b	;volatile
  2318   0042C4                     
  2319                           ; BSR set to: 14
  2320                           ;i2c.c: 61:   return tmp;
  2321   0042C4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2322   0042C6                     
  2323                           ; BSR set to: 14
  2324   0042C6  0012               	return		;funcret
  2325   0042C8                     __end_of_I2C_2_Master_Read:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _color_click_init *****************
  2329 ;; Defined at:
  2330 ;;		line 6 in file "colorclick.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 3
  2351 ;; This function calls:
  2352 ;;		_I2C_2_Master_Init
  2353 ;;		_color_writetoaddr
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text10
  2360   0042C8                     __ptext10:
  2361                           	callstack 0
  2362   0042C8                     _color_click_init:
  2363                           	callstack 27
  2364   0042C8                     
  2365                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2366   0042C8  ECD9  F021         	call	_I2C_2_Master_Init	;wreg free
  2367   0042CC                     
  2368                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2369   0042CC  0E01               	movlw	1
  2370   0042CE  6E03               	movwf	color_writetoaddr@value^0,c
  2371   0042D0  0E00               	movlw	0
  2372   0042D2  EC26  F022         	call	_color_writetoaddr
  2373   0042D6                     
  2374                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2375   0042D6  0E3F               	movlw	63
  2376   0042D8  6E05               	movwf	??_color_click_init^0,c
  2377   0042DA  0E55               	movlw	85
  2378   0042DC                     u4117:
  2379   0042DC  2EE8               	decfsz	wreg,f,c
  2380   0042DE  D7FE               	bra	u4117
  2381   0042E0  2E05               	decfsz	??_color_click_init^0,f,c
  2382   0042E2  D7FC               	bra	u4117
  2383   0042E4  F000               	nop	
  2384   0042E6                     
  2385                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2386   0042E6  0E03               	movlw	3
  2387   0042E8  6E03               	movwf	color_writetoaddr@value^0,c
  2388   0042EA  0E00               	movlw	0
  2389   0042EC  EC26  F022         	call	_color_writetoaddr
  2390   0042F0                     
  2391                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2392   0042F0  0ED6               	movlw	214
  2393   0042F2  6E03               	movwf	color_writetoaddr@value^0,c
  2394   0042F4  0E01               	movlw	1
  2395   0042F6  EC26  F022         	call	_color_writetoaddr
  2396   0042FA                     
  2397                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2398   0042FA  927F               	bcf	127,1,c	;volatile
  2399   0042FC                     
  2400                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2401   0042FC  9287               	bcf	135,1,c	;volatile
  2402   0042FE                     
  2403                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2404   0042FE  9879               	bcf	121,4,c	;volatile
  2405   004300                     
  2406                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2407   004300  9881               	bcf	129,4,c	;volatile
  2408   004302                     
  2409                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2410   004302  9E7E               	bcf	126,7,c	;volatile
  2411   004304                     
  2412                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2413   004304  9E86               	bcf	134,7,c	;volatile
  2414   004306  0012               	return		;funcret
  2415   004308                     __end_of_color_click_init:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _color_writetoaddr *****************
  2419 ;; Defined at:
  2420 ;;		line 30 in file "colorclick.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  address         1    wreg     unsigned char 
  2423 ;;  value           1    2[COMRAM] unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  address         1    3[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 2
  2442 ;; This function calls:
  2443 ;;		_I2C_2_Master_Start
  2444 ;;		_I2C_2_Master_Stop
  2445 ;;		_I2C_2_Master_Write
  2446 ;; This function is called by:
  2447 ;;		_color_click_init
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text11
  2452   00444C                     __ptext11:
  2453                           	callstack 0
  2454   00444C                     _color_writetoaddr:
  2455                           	callstack 27
  2456                           
  2457                           ;incstack = 0
  2458                           ;color_writetoaddr@address stored from wreg
  2459   00444C  6E04               	movwf	color_writetoaddr@address^0,c
  2460   00444E                     
  2461                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2462   00444E  EC59  F022         	call	_I2C_2_Master_Start	;wreg free
  2463                           
  2464                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2465   004452  0E52               	movlw	82
  2466   004454  EC49  F022         	call	_I2C_2_Master_Write
  2467                           
  2468                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2469   004458  5004               	movf	color_writetoaddr@address^0,w,c
  2470   00445A  0980               	iorlw	128
  2471   00445C  EC49  F022         	call	_I2C_2_Master_Write
  2472                           
  2473                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2474   004460  5003               	movf	color_writetoaddr@value^0,w,c
  2475   004462  EC49  F022         	call	_I2C_2_Master_Write
  2476                           
  2477                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2478   004466  EC54  F022         	call	_I2C_2_Master_Stop	;wreg free
  2479   00446A  0012               	return		;funcret
  2480   00446C                     __end_of_color_writetoaddr:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _I2C_2_Master_Write *****************
  2484 ;; Defined at:
  2485 ;;		line 45 in file "i2c.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  data_byte       1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  data_byte       1    1[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;Total ram usage:        1 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 1
  2506 ;; This function calls:
  2507 ;;		_I2C_2_Master_Idle
  2508 ;; This function is called by:
  2509 ;;		_color_writetoaddr
  2510 ;;		_color_read_Red
  2511 ;;		_color_read_Green
  2512 ;;		_color_read_Blue
  2513 ;;		_color_read_Clear
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text12
  2518   004492                     __ptext12:
  2519                           	callstack 0
  2520   004492                     _I2C_2_Master_Write:
  2521                           	callstack 27
  2522                           
  2523                           ;incstack = 0
  2524                           ;I2C_2_Master_Write@data_byte stored from wreg
  2525   004492  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2526   004494                     
  2527                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2528   004494  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2529   004498                     
  2530                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2531   004498  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2532   00449C  0012               	return		;funcret
  2533   00449E                     __end_of_I2C_2_Master_Write:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _I2C_2_Master_Stop *****************
  2537 ;; Defined at:
  2538 ;;		line 39 in file "i2c.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 1
  2559 ;; This function calls:
  2560 ;;		_I2C_2_Master_Idle
  2561 ;; This function is called by:
  2562 ;;		_color_writetoaddr
  2563 ;;		_color_read_Red
  2564 ;;		_color_read_Green
  2565 ;;		_color_read_Blue
  2566 ;;		_color_read_Clear
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text13
  2571   0044A8                     __ptext13:
  2572                           	callstack 0
  2573   0044A8                     _I2C_2_Master_Stop:
  2574                           	callstack 27
  2575   0044A8                     
  2576                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2577   0044A8  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2578   0044AC                     
  2579                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2580   0044AC  010E               	movlb	14	; () banked
  2581   0044AE  85DA               	bsf	218,2,b	;volatile
  2582   0044B0                     
  2583                           ; BSR set to: 14
  2584   0044B0  0012               	return		;funcret
  2585   0044B2                     __end_of_I2C_2_Master_Stop:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _I2C_2_Master_Start *****************
  2589 ;; Defined at:
  2590 ;;		line 27 in file "i2c.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 1
  2611 ;; This function calls:
  2612 ;;		_I2C_2_Master_Idle
  2613 ;; This function is called by:
  2614 ;;		_color_writetoaddr
  2615 ;;		_color_read_Red
  2616 ;;		_color_read_Green
  2617 ;;		_color_read_Blue
  2618 ;;		_color_read_Clear
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text14
  2623   0044B2                     __ptext14:
  2624                           	callstack 0
  2625   0044B2                     _I2C_2_Master_Start:
  2626                           	callstack 27
  2627   0044B2                     
  2628                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2629   0044B2  ECEE  F021         	call	_I2C_2_Master_Idle	;wreg free
  2630   0044B6                     
  2631                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2632   0044B6  010E               	movlb	14	; () banked
  2633   0044B8  81DA               	bsf	218,0,b	;volatile
  2634   0044BA                     
  2635                           ; BSR set to: 14
  2636   0044BA  0012               	return		;funcret
  2637   0044BC                     __end_of_I2C_2_Master_Start:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _I2C_2_Master_Idle *****************
  2641 ;; Defined at:
  2642 ;;		line 22 in file "i2c.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_I2C_2_Master_Start
  2666 ;;		_I2C_2_Master_RepStart
  2667 ;;		_I2C_2_Master_Stop
  2668 ;;		_I2C_2_Master_Write
  2669 ;;		_I2C_2_Master_Read
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text15
  2674   0043DC                     __ptext15:
  2675                           	callstack 0
  2676   0043DC                     _I2C_2_Master_Idle:
  2677                           	callstack 27
  2678   0043DC                     l177:
  2679   0043DC  010E               	movlb	14	; () banked
  2680   0043DE  B5D8               	btfsc	216,2,b	;volatile
  2681   0043E0  EFF4  F021         	goto	u2321
  2682   0043E4  EFF6  F021         	goto	u2320
  2683   0043E8                     u2321:
  2684   0043E8  EFEE  F021         	goto	l177
  2685   0043EC                     u2320:
  2686   0043EC                     
  2687                           ; BSR set to: 14
  2688   0043EC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2689   0043F0  0E1F               	movlw	31
  2690   0043F2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2691   0043F4  A4D8               	btfss	status,2,c
  2692   0043F6  EFFF  F021         	goto	u2331
  2693   0043FA  EF01  F022         	goto	u2330
  2694   0043FE                     u2331:
  2695   0043FE  EFEE  F021         	goto	l177
  2696   004402                     u2330:
  2697   004402                     
  2698                           ; BSR set to: 14
  2699   004402  0012               	return		;funcret
  2700   004404                     __end_of_I2C_2_Master_Idle:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _I2C_2_Master_Init *****************
  2704 ;; Defined at:
  2705 ;;		line 4 in file "i2c.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_color_click_init
  2729 ;;		_main
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text16
  2734   0043B2                     __ptext16:
  2735                           	callstack 0
  2736   0043B2                     _I2C_2_Master_Init:
  2737                           	callstack 29
  2738   0043B2                     
  2739                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2740   0043B2  010E               	movlb	14	; () banked
  2741   0043B4  51D9               	movf	217,w,b	;volatile
  2742   0043B6  0BF0               	andlw	-16
  2743   0043B8  0908               	iorlw	8
  2744   0043BA  6FD9               	movwf	217,b	;volatile
  2745   0043BC                     
  2746                           ; BSR set to: 14
  2747                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2748   0043BC  8BD9               	bsf	217,5,b	;volatile
  2749                           
  2750                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2751   0043BE  0E9F               	movlw	159
  2752   0043C0  6FD6               	movwf	214,b	;volatile
  2753   0043C2                     
  2754                           ; BSR set to: 14
  2755                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2756   0043C2  8A84               	bsf	132,5,c	;volatile
  2757   0043C4                     
  2758                           ; BSR set to: 14
  2759                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2760   0043C4  8C84               	bsf	132,6,c	;volatile
  2761   0043C6                     
  2762                           ; BSR set to: 14
  2763                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2764   0043C6  9BA7               	bcf	167,5,b	;volatile
  2765   0043C8                     
  2766                           ; BSR set to: 14
  2767                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2768   0043C8  9DA7               	bcf	167,6,b	;volatile
  2769                           
  2770                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2771   0043CA  0E1D               	movlw	29
  2772   0043CC  6F1D               	movwf	29,b	;volatile
  2773                           
  2774                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2775   0043CE  0E1E               	movlw	30
  2776   0043D0  6F1C               	movwf	28,b	;volatile
  2777                           
  2778                           ;i2c.c: 18:   RD5PPS=0x1C;
  2779   0043D2  0E1C               	movlw	28
  2780   0043D4  6F6F               	movwf	111,b	;volatile
  2781                           
  2782                           ;i2c.c: 19:   RD6PPS=0x1B;
  2783   0043D6  0E1B               	movlw	27
  2784   0043D8  6F70               	movwf	112,b	;volatile
  2785   0043DA                     
  2786                           ; BSR set to: 14
  2787   0043DA  0012               	return		;funcret
  2788   0043DC                     __end_of_I2C_2_Master_Init:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _RGB2Hue *****************
  2792 ;; Defined at:
  2793 ;;		line 23 in file "colorfunctions.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  cf              2   86[COMRAM] PTR struct RGBC_rel
  2796 ;;		 -> colorf(22), 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  min             2   19[BANK0 ] int 
  2799 ;;  max             2   17[BANK0 ] int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:       14 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		___fladd
  2818 ;;		___fldiv
  2819 ;;		___fleq
  2820 ;;		___flge
  2821 ;;		___flmul
  2822 ;;		___flsub
  2823 ;;		___fltol
  2824 ;;		___xxtofl
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text17
  2831   000E52                     __ptext17:
  2832                           	callstack 0
  2833   000E52                     _RGB2Hue:
  2834                           	callstack 28
  2835   000E52                     
  2836                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2837   000E52  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2838   000E56  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2839   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  2840   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2841   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2842   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2843   000E6A  EE20 F004          	lfsr	2,4
  2844   000E6E  5057               	movf	RGB2Hue@cf^0,w,c
  2845   000E70  26D9               	addwf	fsr2l,f,c
  2846   000E72  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2847   000E74  22DA               	addwfc	fsr2h,f,c
  2848   000E76  CFDE F005          	movff	postinc2,___fleq@ff2
  2849   000E7A  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2850   000E7E  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2851   000E82  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2852   000E86  ECA0  F01B         	call	___fleq	;wreg free
  2853   000E8A  A0D8               	btfss	status,0,c
  2854   000E8C  EF4A  F007         	goto	u3771
  2855   000E90  EF4C  F007         	goto	u3770
  2856   000E94                     u3771:
  2857   000E94  EF7F  F007         	goto	l4066
  2858   000E98                     u3770:
  2859   000E98  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2860   000E9C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2861   000EA0  CFDE F001          	movff	postinc2,___fleq@ff1
  2862   000EA4  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2863   000EA8  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2864   000EAC  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2865   000EB0  EE20 F008          	lfsr	2,8
  2866   000EB4  5057               	movf	RGB2Hue@cf^0,w,c
  2867   000EB6  26D9               	addwf	fsr2l,f,c
  2868   000EB8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2869   000EBA  22DA               	addwfc	fsr2h,f,c
  2870   000EBC  CFDE F005          	movff	postinc2,___fleq@ff2
  2871   000EC0  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2872   000EC4  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2873   000EC8  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2874   000ECC  ECA0  F01B         	call	___fleq	;wreg free
  2875   000ED0  A0D8               	btfss	status,0,c
  2876   000ED2  EF6D  F007         	goto	u3781
  2877   000ED6  EF6F  F007         	goto	u3780
  2878   000EDA                     u3781:
  2879   000EDA  EF7F  F007         	goto	l4066
  2880   000EDE                     u3780:
  2881   000EDE                     
  2882                           ;colorfunctions.c: 25:         cf->h=0;
  2883   000EDE  EE20 F010          	lfsr	2,16
  2884   000EE2  5057               	movf	RGB2Hue@cf^0,w,c
  2885   000EE4  26D9               	addwf	fsr2l,f,c
  2886   000EE6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2887   000EE8  22DA               	addwfc	fsr2h,f,c
  2888   000EEA  0E00               	movlw	0
  2889   000EEC  6EDE               	movwf	postinc2,c
  2890   000EEE  0E00               	movlw	0
  2891   000EF0  6EDE               	movwf	postinc2,c
  2892   000EF2  0E00               	movlw	0
  2893   000EF4  6EDE               	movwf	postinc2,c
  2894   000EF6  0E00               	movlw	0
  2895   000EF8  6EDD               	movwf	postdec2,c
  2896                           
  2897                           ;colorfunctions.c: 26:     } else{
  2898   000EFA  EFA9  F00A         	goto	l113
  2899   000EFE                     l4066:
  2900                           
  2901                           ;colorfunctions.c: 28:         signed int min=0;
  2902   000EFE  0E00               	movlw	0
  2903   000F00  0100               	movlb	0	; () banked
  2904   000F02  6F74               	movwf	(RGB2Hue@min+1)& (0+255),b
  2905   000F04  0E00               	movlw	0
  2906   000F06  6F73               	movwf	RGB2Hue@min& (0+255),b
  2907   000F08                     
  2908                           ; BSR set to: 0
  2909                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2910   000F08  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2911   000F0C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2912   000F10  CFDE F001          	movff	postinc2,___flge@ff1
  2913   000F14  CFDE F002          	movff	postinc2,___flge@ff1+1
  2914   000F18  CFDE F003          	movff	postinc2,___flge@ff1+2
  2915   000F1C  CFDE F004          	movff	postinc2,___flge@ff1+3
  2916   000F20  EE20 F004          	lfsr	2,4
  2917   000F24  5057               	movf	RGB2Hue@cf^0,w,c
  2918   000F26  26D9               	addwf	fsr2l,f,c
  2919   000F28  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2920   000F2A  22DA               	addwfc	fsr2h,f,c
  2921   000F2C  CFDE F005          	movff	postinc2,___flge@ff2
  2922   000F30  CFDE F006          	movff	postinc2,___flge@ff2+1
  2923   000F34  CFDE F007          	movff	postinc2,___flge@ff2+2
  2924   000F38  CFDE F008          	movff	postinc2,___flge@ff2+3
  2925   000F3C  EC01  F019         	call	___flge	;wreg free
  2926   000F40  B0D8               	btfsc	status,0,c
  2927   000F42  EFA5  F007         	goto	u3791
  2928   000F46  EFA7  F007         	goto	u3790
  2929   000F4A                     u3791:
  2930   000F4A  EFDE  F007         	goto	l4074
  2931   000F4E                     u3790:
  2932   000F4E  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2933   000F52  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2934   000F56  CFDE F001          	movff	postinc2,___flge@ff1
  2935   000F5A  CFDE F002          	movff	postinc2,___flge@ff1+1
  2936   000F5E  CFDE F003          	movff	postinc2,___flge@ff1+2
  2937   000F62  CFDE F004          	movff	postinc2,___flge@ff1+3
  2938   000F66  EE20 F008          	lfsr	2,8
  2939   000F6A  5057               	movf	RGB2Hue@cf^0,w,c
  2940   000F6C  26D9               	addwf	fsr2l,f,c
  2941   000F6E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2942   000F70  22DA               	addwfc	fsr2h,f,c
  2943   000F72  CFDE F005          	movff	postinc2,___flge@ff2
  2944   000F76  CFDE F006          	movff	postinc2,___flge@ff2+1
  2945   000F7A  CFDE F007          	movff	postinc2,___flge@ff2+2
  2946   000F7E  CFDE F008          	movff	postinc2,___flge@ff2+3
  2947   000F82  EC01  F019         	call	___flge	;wreg free
  2948   000F86  B0D8               	btfsc	status,0,c
  2949   000F88  EFC8  F007         	goto	u3801
  2950   000F8C  EFCA  F007         	goto	u3800
  2951   000F90                     u3801:
  2952   000F90  EFDE  F007         	goto	l4074
  2953   000F94                     u3800:
  2954   000F94                     
  2955                           ;colorfunctions.c: 31:             min=cf->Rf;
  2956   000F94  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2957   000F98  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2958   000F9C  CFDE F001          	movff	postinc2,___fltol@f1
  2959   000FA0  CFDE F002          	movff	postinc2,___fltol@f1+1
  2960   000FA4  CFDE F003          	movff	postinc2,___fltol@f1+2
  2961   000FA8  CFDE F004          	movff	postinc2,___fltol@f1+3
  2962   000FAC  EC7E  F018         	call	___fltol	;wreg free
  2963   000FB0  C001  F073         	movff	?___fltol,RGB2Hue@min
  2964   000FB4  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  2965                           
  2966                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  2967   000FB8  EF50  F008         	goto	l105
  2968   000FBC                     l4074:
  2969   000FBC  EE20 F004          	lfsr	2,4
  2970   000FC0  5057               	movf	RGB2Hue@cf^0,w,c
  2971   000FC2  26D9               	addwf	fsr2l,f,c
  2972   000FC4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2973   000FC6  22DA               	addwfc	fsr2h,f,c
  2974   000FC8  CFDE F001          	movff	postinc2,___flge@ff1
  2975   000FCC  CFDE F002          	movff	postinc2,___flge@ff1+1
  2976   000FD0  CFDE F003          	movff	postinc2,___flge@ff1+2
  2977   000FD4  CFDE F004          	movff	postinc2,___flge@ff1+3
  2978   000FD8  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  2979   000FDC  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2980   000FE0  CFDE F005          	movff	postinc2,___flge@ff2
  2981   000FE4  CFDE F006          	movff	postinc2,___flge@ff2+1
  2982   000FE8  CFDE F007          	movff	postinc2,___flge@ff2+2
  2983   000FEC  CFDE F008          	movff	postinc2,___flge@ff2+3
  2984   000FF0  EC01  F019         	call	___flge	;wreg free
  2985   000FF4  B0D8               	btfsc	status,0,c
  2986   000FF6  EFFF  F007         	goto	u3811
  2987   000FFA  EF01  F008         	goto	u3810
  2988   000FFE                     u3811:
  2989   000FFE  EF3C  F008         	goto	l4080
  2990   001002                     u3810:
  2991   001002  EE20 F004          	lfsr	2,4
  2992   001006  5057               	movf	RGB2Hue@cf^0,w,c
  2993   001008  26D9               	addwf	fsr2l,f,c
  2994   00100A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  2995   00100C  22DA               	addwfc	fsr2h,f,c
  2996   00100E  CFDE F001          	movff	postinc2,___flge@ff1
  2997   001012  CFDE F002          	movff	postinc2,___flge@ff1+1
  2998   001016  CFDE F003          	movff	postinc2,___flge@ff1+2
  2999   00101A  CFDE F004          	movff	postinc2,___flge@ff1+3
  3000   00101E  EE20 F008          	lfsr	2,8
  3001   001022  5057               	movf	RGB2Hue@cf^0,w,c
  3002   001024  26D9               	addwf	fsr2l,f,c
  3003   001026  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3004   001028  22DA               	addwfc	fsr2h,f,c
  3005   00102A  CFDE F005          	movff	postinc2,___flge@ff2
  3006   00102E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3007   001032  CFDE F007          	movff	postinc2,___flge@ff2+2
  3008   001036  CFDE F008          	movff	postinc2,___flge@ff2+3
  3009   00103A  EC01  F019         	call	___flge	;wreg free
  3010   00103E  B0D8               	btfsc	status,0,c
  3011   001040  EF24  F008         	goto	u3821
  3012   001044  EF26  F008         	goto	u3820
  3013   001048                     u3821:
  3014   001048  EF3C  F008         	goto	l4080
  3015   00104C                     u3820:
  3016   00104C                     
  3017                           ;colorfunctions.c: 33:             min=cf->Gf;
  3018   00104C  EE20 F004          	lfsr	2,4
  3019   001050  5057               	movf	RGB2Hue@cf^0,w,c
  3020   001052  26D9               	addwf	fsr2l,f,c
  3021   001054  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3022   001056  22DA               	addwfc	fsr2h,f,c
  3023   001058  CFDE F001          	movff	postinc2,___fltol@f1
  3024   00105C  CFDE F002          	movff	postinc2,___fltol@f1+1
  3025   001060  CFDE F003          	movff	postinc2,___fltol@f1+2
  3026   001064  CFDE F004          	movff	postinc2,___fltol@f1+3
  3027   001068  EC7E  F018         	call	___fltol	;wreg free
  3028   00106C  C001  F073         	movff	?___fltol,RGB2Hue@min
  3029   001070  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3030                           
  3031                           ;colorfunctions.c: 34:         } else{
  3032   001074  EF50  F008         	goto	l105
  3033   001078                     l4080:
  3034                           
  3035                           ;colorfunctions.c: 35:             min=cf->Bf;
  3036   001078  EE20 F008          	lfsr	2,8
  3037   00107C  5057               	movf	RGB2Hue@cf^0,w,c
  3038   00107E  26D9               	addwf	fsr2l,f,c
  3039   001080  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3040   001082  22DA               	addwfc	fsr2h,f,c
  3041   001084  CFDE F001          	movff	postinc2,___fltol@f1
  3042   001088  CFDE F002          	movff	postinc2,___fltol@f1+1
  3043   00108C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3044   001090  CFDE F004          	movff	postinc2,___fltol@f1+3
  3045   001094  EC7E  F018         	call	___fltol	;wreg free
  3046   001098  C001  F073         	movff	?___fltol,RGB2Hue@min
  3047   00109C  C002  F074         	movff	?___fltol+1,RGB2Hue@min+1
  3048   0010A0                     l105:
  3049                           
  3050                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3051   0010A0  EE20 F004          	lfsr	2,4
  3052   0010A4  5057               	movf	RGB2Hue@cf^0,w,c
  3053   0010A6  26D9               	addwf	fsr2l,f,c
  3054   0010A8  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3055   0010AA  22DA               	addwfc	fsr2h,f,c
  3056   0010AC  CFDE F001          	movff	postinc2,___flge@ff1
  3057   0010B0  CFDE F002          	movff	postinc2,___flge@ff1+1
  3058   0010B4  CFDE F003          	movff	postinc2,___flge@ff1+2
  3059   0010B8  CFDE F004          	movff	postinc2,___flge@ff1+3
  3060   0010BC  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3061   0010C0  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3062   0010C4  CFDE F005          	movff	postinc2,___flge@ff2
  3063   0010C8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3064   0010CC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3065   0010D0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3066   0010D4  EC01  F019         	call	___flge	;wreg free
  3067   0010D8  B0D8               	btfsc	status,0,c
  3068   0010DA  EF71  F008         	goto	u3831
  3069   0010DE  EF73  F008         	goto	u3830
  3070   0010E2                     u3831:
  3071   0010E2  EF0D  F009         	goto	l4088
  3072   0010E6                     u3830:
  3073   0010E6  EE20 F008          	lfsr	2,8
  3074   0010EA  5057               	movf	RGB2Hue@cf^0,w,c
  3075   0010EC  26D9               	addwf	fsr2l,f,c
  3076   0010EE  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3077   0010F0  22DA               	addwfc	fsr2h,f,c
  3078   0010F2  CFDE F001          	movff	postinc2,___flge@ff1
  3079   0010F6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3080   0010FA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3081   0010FE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3082   001102  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3083   001106  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3084   00110A  CFDE F005          	movff	postinc2,___flge@ff2
  3085   00110E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3086   001112  CFDE F007          	movff	postinc2,___flge@ff2+2
  3087   001116  CFDE F008          	movff	postinc2,___flge@ff2+3
  3088   00111A  EC01  F019         	call	___flge	;wreg free
  3089   00111E  B0D8               	btfsc	status,0,c
  3090   001120  EF94  F008         	goto	u3841
  3091   001124  EF96  F008         	goto	u3840
  3092   001128                     u3841:
  3093   001128  EF0D  F009         	goto	l4088
  3094   00112C                     u3840:
  3095   00112C                     
  3096                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3097   00112C  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3098   001130  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3099   001134  CFDE F001          	movff	postinc2,___fltol@f1
  3100   001138  CFDE F002          	movff	postinc2,___fltol@f1+1
  3101   00113C  CFDE F003          	movff	postinc2,___fltol@f1+2
  3102   001140  CFDE F004          	movff	postinc2,___fltol@f1+3
  3103   001144  EC7E  F018         	call	___fltol	;wreg free
  3104   001148  C001  F071         	movff	?___fltol,RGB2Hue@max
  3105   00114C  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3106   001150                     
  3107                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3108   001150  0100               	movlb	0	; () banked
  3109   001152  5173               	movf	RGB2Hue@min& (0+255),w,b
  3110   001154  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3111   001156  6E59               	movwf	??_RGB2Hue^0,c
  3112   001158  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3113   00115A  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3114   00115C  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3115   00115E  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3116   001162  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3117   001166  0E00               	movlw	0
  3118   001168  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3119   00116A  0EFF               	movlw	-1
  3120   00116C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3121   00116E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3122   001170  0E01               	movlw	1
  3123   001172  EC5D  F014         	call	___xxtofl
  3124   001176  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3125   00117A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3126   00117E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3127   001182  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3128   001186  EE20 F008          	lfsr	2,8
  3129   00118A  5057               	movf	RGB2Hue@cf^0,w,c
  3130   00118C  26D9               	addwf	fsr2l,f,c
  3131   00118E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3132   001190  22DA               	addwfc	fsr2h,f,c
  3133   001192  CFDE F02E          	movff	postinc2,___flsub@a
  3134   001196  CFDE F02F          	movff	postinc2,___flsub@a+1
  3135   00119A  CFDE F030          	movff	postinc2,___flsub@a+2
  3136   00119E  CFDE F031          	movff	postinc2,___flsub@a+3
  3137   0011A2  EE20 F004          	lfsr	2,4
  3138   0011A6  5057               	movf	RGB2Hue@cf^0,w,c
  3139   0011A8  26D9               	addwf	fsr2l,f,c
  3140   0011AA  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3141   0011AC  22DA               	addwfc	fsr2h,f,c
  3142   0011AE  CFDE F02A          	movff	postinc2,___flsub@b
  3143   0011B2  CFDE F02B          	movff	postinc2,___flsub@b+1
  3144   0011B6  CFDE F02C          	movff	postinc2,___flsub@b+2
  3145   0011BA  CFDE F02D          	movff	postinc2,___flsub@b+3
  3146   0011BE  EC20  F021         	call	___flsub	;wreg free
  3147   0011C2  C02A  F032         	movff	?___flsub,___fldiv@b
  3148   0011C6  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3149   0011CA  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3150   0011CE  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3151   0011D2  EC97  F011         	call	___fldiv	;wreg free
  3152   0011D6  C032  F04B         	movff	?___fldiv,___flmul@b
  3153   0011DA  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3154   0011DE  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3155   0011E2  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3156   0011E6  0E00               	movlw	0
  3157   0011E8  6E4F               	movwf	___flmul@a^0,c
  3158   0011EA  0E00               	movlw	0
  3159   0011EC  6E50               	movwf	(___flmul@a+1)^0,c
  3160   0011EE  0E70               	movlw	112
  3161   0011F0  6E51               	movwf	(___flmul@a+2)^0,c
  3162   0011F2  0E42               	movlw	66
  3163   0011F4  6E52               	movwf	(___flmul@a+3)^0,c
  3164   0011F6  EC81  F00F         	call	___flmul	;wreg free
  3165   0011FA  EE20 F010          	lfsr	2,16
  3166   0011FE  5057               	movf	RGB2Hue@cf^0,w,c
  3167   001200  26D9               	addwf	fsr2l,f,c
  3168   001202  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3169   001204  22DA               	addwfc	fsr2h,f,c
  3170   001206  C04B  FFDE         	movff	?___flmul,postinc2
  3171   00120A  C04C  FFDE         	movff	?___flmul+1,postinc2
  3172   00120E  C04D  FFDE         	movff	?___flmul+2,postinc2
  3173   001212  C04E  FFDE         	movff	?___flmul+3,postinc2
  3174                           
  3175                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3176   001216  EF75  F00A         	goto	l4100
  3177   00121A                     l4088:
  3178   00121A  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3179   00121E  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3180   001222  CFDE F001          	movff	postinc2,___flge@ff1
  3181   001226  CFDE F002          	movff	postinc2,___flge@ff1+1
  3182   00122A  CFDE F003          	movff	postinc2,___flge@ff1+2
  3183   00122E  CFDE F004          	movff	postinc2,___flge@ff1+3
  3184   001232  EE20 F004          	lfsr	2,4
  3185   001236  5057               	movf	RGB2Hue@cf^0,w,c
  3186   001238  26D9               	addwf	fsr2l,f,c
  3187   00123A  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3188   00123C  22DA               	addwfc	fsr2h,f,c
  3189   00123E  CFDE F005          	movff	postinc2,___flge@ff2
  3190   001242  CFDE F006          	movff	postinc2,___flge@ff2+1
  3191   001246  CFDE F007          	movff	postinc2,___flge@ff2+2
  3192   00124A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3193   00124E  EC01  F019         	call	___flge	;wreg free
  3194   001252  B0D8               	btfsc	status,0,c
  3195   001254  EF2E  F009         	goto	u3851
  3196   001258  EF30  F009         	goto	u3850
  3197   00125C                     u3851:
  3198   00125C  EFE6  F009         	goto	l4096
  3199   001260                     u3850:
  3200   001260  EE20 F008          	lfsr	2,8
  3201   001264  5057               	movf	RGB2Hue@cf^0,w,c
  3202   001266  26D9               	addwf	fsr2l,f,c
  3203   001268  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3204   00126A  22DA               	addwfc	fsr2h,f,c
  3205   00126C  CFDE F001          	movff	postinc2,___flge@ff1
  3206   001270  CFDE F002          	movff	postinc2,___flge@ff1+1
  3207   001274  CFDE F003          	movff	postinc2,___flge@ff1+2
  3208   001278  CFDE F004          	movff	postinc2,___flge@ff1+3
  3209   00127C  EE20 F004          	lfsr	2,4
  3210   001280  5057               	movf	RGB2Hue@cf^0,w,c
  3211   001282  26D9               	addwf	fsr2l,f,c
  3212   001284  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3213   001286  22DA               	addwfc	fsr2h,f,c
  3214   001288  CFDE F005          	movff	postinc2,___flge@ff2
  3215   00128C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3216   001290  CFDE F007          	movff	postinc2,___flge@ff2+2
  3217   001294  CFDE F008          	movff	postinc2,___flge@ff2+3
  3218   001298  EC01  F019         	call	___flge	;wreg free
  3219   00129C  B0D8               	btfsc	status,0,c
  3220   00129E  EF53  F009         	goto	u3861
  3221   0012A2  EF55  F009         	goto	u3860
  3222   0012A6                     u3861:
  3223   0012A6  EFE6  F009         	goto	l4096
  3224   0012AA                     u3860:
  3225   0012AA                     
  3226                           ;colorfunctions.c: 44:             max=cf->Gf;
  3227   0012AA  EE20 F004          	lfsr	2,4
  3228   0012AE  5057               	movf	RGB2Hue@cf^0,w,c
  3229   0012B0  26D9               	addwf	fsr2l,f,c
  3230   0012B2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3231   0012B4  22DA               	addwfc	fsr2h,f,c
  3232   0012B6  CFDE F001          	movff	postinc2,___fltol@f1
  3233   0012BA  CFDE F002          	movff	postinc2,___fltol@f1+1
  3234   0012BE  CFDE F003          	movff	postinc2,___fltol@f1+2
  3235   0012C2  CFDE F004          	movff	postinc2,___fltol@f1+3
  3236   0012C6  EC7E  F018         	call	___fltol	;wreg free
  3237   0012CA  C001  F071         	movff	?___fltol,RGB2Hue@max
  3238   0012CE  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3239                           
  3240                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3241   0012D2  0100               	movlb	0	; () banked
  3242   0012D4  5173               	movf	RGB2Hue@min& (0+255),w,b
  3243   0012D6  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3244   0012D8  6E59               	movwf	??_RGB2Hue^0,c
  3245   0012DA  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3246   0012DC  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3247   0012DE  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3248   0012E0  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3249   0012E4  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3250   0012E8  0E00               	movlw	0
  3251   0012EA  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3252   0012EC  0EFF               	movlw	-1
  3253   0012EE  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3254   0012F0  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3255   0012F2  0E01               	movlw	1
  3256   0012F4  EC5D  F014         	call	___xxtofl
  3257   0012F8  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3258   0012FC  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3259   001300  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3260   001304  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3261   001308  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3262   00130C  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3263   001310  CFDE F02E          	movff	postinc2,___flsub@a
  3264   001314  CFDE F02F          	movff	postinc2,___flsub@a+1
  3265   001318  CFDE F030          	movff	postinc2,___flsub@a+2
  3266   00131C  CFDE F031          	movff	postinc2,___flsub@a+3
  3267   001320  EE20 F008          	lfsr	2,8
  3268   001324  5057               	movf	RGB2Hue@cf^0,w,c
  3269   001326  26D9               	addwf	fsr2l,f,c
  3270   001328  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3271   00132A  22DA               	addwfc	fsr2h,f,c
  3272   00132C  CFDE F02A          	movff	postinc2,___flsub@b
  3273   001330  CFDE F02B          	movff	postinc2,___flsub@b+1
  3274   001334  CFDE F02C          	movff	postinc2,___flsub@b+2
  3275   001338  CFDE F02D          	movff	postinc2,___flsub@b+3
  3276   00133C  EC20  F021         	call	___flsub	;wreg free
  3277   001340  C02A  F032         	movff	?___flsub,___fldiv@b
  3278   001344  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3279   001348  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3280   00134C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3281   001350  EC97  F011         	call	___fldiv	;wreg free
  3282   001354  C032  F06D         	movff	?___fldiv,_RGB2Hue$2982
  3283   001358  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$2982+1
  3284   00135C  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$2982+2
  3285   001360  C035  F070         	movff	?___fldiv+3,_RGB2Hue$2982+3
  3286   001364                     
  3287                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3288   001364  0E00               	movlw	0
  3289   001366  6E1E               	movwf	___fladd@a^0,c
  3290   001368  0E00               	movlw	0
  3291   00136A  6E1F               	movwf	(___fladd@a+1)^0,c
  3292   00136C  0E00               	movlw	0
  3293   00136E  6E20               	movwf	(___fladd@a+2)^0,c
  3294   001370  0E40               	movlw	64
  3295   001372  6E21               	movwf	(___fladd@a+3)^0,c
  3296   001374  C06D  F01A         	movff	_RGB2Hue$2982,___fladd@b
  3297   001378  C06E  F01B         	movff	_RGB2Hue$2982+1,___fladd@b+1
  3298   00137C  C06F  F01C         	movff	_RGB2Hue$2982+2,___fladd@b+2
  3299   001380  C070  F01D         	movff	_RGB2Hue$2982+3,___fladd@b+3
  3300   001384  EC21  F00D         	call	___fladd	;wreg free
  3301   001388  C01A  F04B         	movff	?___fladd,___flmul@b
  3302   00138C  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3303   001390  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3304   001394  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3305   001398  0E00               	movlw	0
  3306   00139A  6E4F               	movwf	___flmul@a^0,c
  3307   00139C  0E00               	movlw	0
  3308   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  3309   0013A0  0E70               	movlw	112
  3310   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  3311   0013A4  0E42               	movlw	66
  3312   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  3313   0013A8  EC81  F00F         	call	___flmul	;wreg free
  3314   0013AC  EE20 F010          	lfsr	2,16
  3315   0013B0  5057               	movf	RGB2Hue@cf^0,w,c
  3316   0013B2  26D9               	addwf	fsr2l,f,c
  3317   0013B4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3318   0013B6  22DA               	addwfc	fsr2h,f,c
  3319   0013B8  C04B  FFDE         	movff	?___flmul,postinc2
  3320   0013BC  C04C  FFDE         	movff	?___flmul+1,postinc2
  3321   0013C0  C04D  FFDE         	movff	?___flmul+2,postinc2
  3322   0013C4  C04E  FFDE         	movff	?___flmul+3,postinc2
  3323                           
  3324                           ;colorfunctions.c: 46:         }else{
  3325   0013C8  EF75  F00A         	goto	l4100
  3326   0013CC                     l4096:
  3327                           
  3328                           ;colorfunctions.c: 47:             max=cf->Bf;
  3329   0013CC  EE20 F008          	lfsr	2,8
  3330   0013D0  5057               	movf	RGB2Hue@cf^0,w,c
  3331   0013D2  26D9               	addwf	fsr2l,f,c
  3332   0013D4  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3333   0013D6  22DA               	addwfc	fsr2h,f,c
  3334   0013D8  CFDE F001          	movff	postinc2,___fltol@f1
  3335   0013DC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3336   0013E0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3337   0013E4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3338   0013E8  EC7E  F018         	call	___fltol	;wreg free
  3339   0013EC  C001  F071         	movff	?___fltol,RGB2Hue@max
  3340   0013F0  C002  F072         	movff	?___fltol+1,RGB2Hue@max+1
  3341                           
  3342                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3343   0013F4  0100               	movlb	0	; () banked
  3344   0013F6  5173               	movf	RGB2Hue@min& (0+255),w,b
  3345   0013F8  5D71               	subwf	RGB2Hue@max& (0+255),w,b
  3346   0013FA  6E59               	movwf	??_RGB2Hue^0,c
  3347   0013FC  5174               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3348   0013FE  5972               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3349   001400  6E5A               	movwf	(??_RGB2Hue+1)^0,c
  3350   001402  C059  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3351   001406  C05A  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3352   00140A  0E00               	movlw	0
  3353   00140C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3354   00140E  0EFF               	movlw	-1
  3355   001410  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3356   001412  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3357   001414  0E01               	movlw	1
  3358   001416  EC5D  F014         	call	___xxtofl
  3359   00141A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3360   00141E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3361   001422  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3362   001426  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3363   00142A  EE20 F004          	lfsr	2,4
  3364   00142E  5057               	movf	RGB2Hue@cf^0,w,c
  3365   001430  26D9               	addwf	fsr2l,f,c
  3366   001432  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3367   001434  22DA               	addwfc	fsr2h,f,c
  3368   001436  CFDE F02E          	movff	postinc2,___flsub@a
  3369   00143A  CFDE F02F          	movff	postinc2,___flsub@a+1
  3370   00143E  CFDE F030          	movff	postinc2,___flsub@a+2
  3371   001442  CFDE F031          	movff	postinc2,___flsub@a+3
  3372   001446  C057  FFD9         	movff	RGB2Hue@cf,fsr2l
  3373   00144A  C058  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3374   00144E  CFDE F02A          	movff	postinc2,___flsub@b
  3375   001452  CFDE F02B          	movff	postinc2,___flsub@b+1
  3376   001456  CFDE F02C          	movff	postinc2,___flsub@b+2
  3377   00145A  CFDE F02D          	movff	postinc2,___flsub@b+3
  3378   00145E  EC20  F021         	call	___flsub	;wreg free
  3379   001462  C02A  F032         	movff	?___flsub,___fldiv@b
  3380   001466  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3381   00146A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3382   00146E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3383   001472  EC97  F011         	call	___fldiv	;wreg free
  3384   001476  C032  F06D         	movff	?___fldiv,_RGB2Hue$2982
  3385   00147A  C033  F06E         	movff	?___fldiv+1,_RGB2Hue$2982+1
  3386   00147E  C034  F06F         	movff	?___fldiv+2,_RGB2Hue$2982+2
  3387   001482  C035  F070         	movff	?___fldiv+3,_RGB2Hue$2982+3
  3388   001486                     
  3389                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3390   001486  0E00               	movlw	0
  3391   001488  6E1E               	movwf	___fladd@a^0,c
  3392   00148A  0E00               	movlw	0
  3393   00148C  6E1F               	movwf	(___fladd@a+1)^0,c
  3394   00148E  0E80               	movlw	128
  3395   001490  6E20               	movwf	(___fladd@a+2)^0,c
  3396   001492  0E40               	movlw	64
  3397   001494  6E21               	movwf	(___fladd@a+3)^0,c
  3398   001496  C06D  F01A         	movff	_RGB2Hue$2982,___fladd@b
  3399   00149A  C06E  F01B         	movff	_RGB2Hue$2982+1,___fladd@b+1
  3400   00149E  C06F  F01C         	movff	_RGB2Hue$2982+2,___fladd@b+2
  3401   0014A2  C070  F01D         	movff	_RGB2Hue$2982+3,___fladd@b+3
  3402   0014A6  EC21  F00D         	call	___fladd	;wreg free
  3403   0014AA  C01A  F04B         	movff	?___fladd,___flmul@b
  3404   0014AE  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3405   0014B2  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3406   0014B6  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3407   0014BA  0E00               	movlw	0
  3408   0014BC  6E4F               	movwf	___flmul@a^0,c
  3409   0014BE  0E00               	movlw	0
  3410   0014C0  6E50               	movwf	(___flmul@a+1)^0,c
  3411   0014C2  0E70               	movlw	112
  3412   0014C4  6E51               	movwf	(___flmul@a+2)^0,c
  3413   0014C6  0E42               	movlw	66
  3414   0014C8  6E52               	movwf	(___flmul@a+3)^0,c
  3415   0014CA  EC81  F00F         	call	___flmul	;wreg free
  3416   0014CE  EE20 F010          	lfsr	2,16
  3417   0014D2  5057               	movf	RGB2Hue@cf^0,w,c
  3418   0014D4  26D9               	addwf	fsr2l,f,c
  3419   0014D6  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3420   0014D8  22DA               	addwfc	fsr2h,f,c
  3421   0014DA  C04B  FFDE         	movff	?___flmul,postinc2
  3422   0014DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3423   0014E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3424   0014E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3425   0014EA                     l4100:
  3426                           
  3427                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3428   0014EA  EE20 F010          	lfsr	2,16
  3429   0014EE  5057               	movf	RGB2Hue@cf^0,w,c
  3430   0014F0  26D9               	addwf	fsr2l,f,c
  3431   0014F2  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3432   0014F4  22DA               	addwfc	fsr2h,f,c
  3433   0014F6  0E03               	movlw	3
  3434   0014F8  BEDB               	btfsc	plusw2,7,c
  3435   0014FA  EF83  F00A         	goto	u3870
  3436   0014FE  EF81  F00A         	goto	u3871
  3437   001502                     u3871:
  3438   001502  EFA9  F00A         	goto	l113
  3439   001506                     u3870:
  3440   001506                     
  3441                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3442   001506  EE20 F010          	lfsr	2,16
  3443   00150A  5057               	movf	RGB2Hue@cf^0,w,c
  3444   00150C  26D9               	addwf	fsr2l,f,c
  3445   00150E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3446   001510  22DA               	addwfc	fsr2h,f,c
  3447   001512  CFDE F01A          	movff	postinc2,___fladd@b
  3448   001516  CFDE F01B          	movff	postinc2,___fladd@b+1
  3449   00151A  CFDE F01C          	movff	postinc2,___fladd@b+2
  3450   00151E  CFDE F01D          	movff	postinc2,___fladd@b+3
  3451   001522  0E00               	movlw	0
  3452   001524  6E1E               	movwf	___fladd@a^0,c
  3453   001526  0E00               	movlw	0
  3454   001528  6E1F               	movwf	(___fladd@a+1)^0,c
  3455   00152A  0EB4               	movlw	180
  3456   00152C  6E20               	movwf	(___fladd@a+2)^0,c
  3457   00152E  0E43               	movlw	67
  3458   001530  6E21               	movwf	(___fladd@a+3)^0,c
  3459   001532  EC21  F00D         	call	___fladd	;wreg free
  3460   001536  EE20 F010          	lfsr	2,16
  3461   00153A  5057               	movf	RGB2Hue@cf^0,w,c
  3462   00153C  26D9               	addwf	fsr2l,f,c
  3463   00153E  5058               	movf	(RGB2Hue@cf+1)^0,w,c
  3464   001540  22DA               	addwfc	fsr2h,f,c
  3465   001542  C01A  FFDE         	movff	?___fladd,postinc2
  3466   001546  C01B  FFDE         	movff	?___fladd+1,postinc2
  3467   00154A  C01C  FFDE         	movff	?___fladd+2,postinc2
  3468   00154E  C01D  FFDE         	movff	?___fladd+3,postinc2
  3469   001552                     l113:
  3470   001552  0012               	return		;funcret
  3471   001554                     __end_of_RGB2Hue:
  3472                           	callstack 0
  3473                           
  3474 ;; *************** function ___xxtofl *****************
  3475 ;; Defined at:
  3476 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  sign            1    wreg     unsigned char 
  3479 ;;  val             4   11[COMRAM] long 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  sign            1   19[COMRAM] unsigned char 
  3482 ;;  arg             4   21[COMRAM] unsigned long 
  3483 ;;  exp             1   20[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  4   11[COMRAM] unsigned char 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;Total ram usage:       14 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_colour_read_all
  3503 ;;		_RGB2Hue
  3504 ;;		_Left45
  3505 ;;		_Right45
  3506 ;;		_reverseHalfSquare
  3507 ;;		_Yellow_rev1_R90
  3508 ;;		_Pink_rev1_L90
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text18
  3513   0028BA                     __ptext18:
  3514                           	callstack 0
  3515   0028BA                     ___xxtofl:
  3516                           	callstack 29
  3517                           
  3518                           ;incstack = 0
  3519                           ;___xxtofl@sign stored from wreg
  3520   0028BA  6E14               	movwf	___xxtofl@sign^0,c
  3521   0028BC  5014               	movf	___xxtofl@sign^0,w,c
  3522   0028BE  B4D8               	btfsc	status,2,c
  3523   0028C0  EF64  F014         	goto	u3651
  3524   0028C4  EF66  F014         	goto	u3650
  3525   0028C8                     u3651:
  3526   0028C8  EF88  F014         	goto	l1238
  3527   0028CC                     u3650:
  3528   0028CC  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3529   0028CE  EF6D  F014         	goto	u3660
  3530   0028D2  EF6B  F014         	goto	u3661
  3531   0028D6                     u3661:
  3532   0028D6  EF88  F014         	goto	l1238
  3533   0028DA                     u3660:
  3534   0028DA  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  3535   0028DE  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  3536   0028E2  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  3537   0028E6  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  3538   0028EA  1E10               	comf	??___xxtofl^0,f,c
  3539   0028EC  1E11               	comf	(??___xxtofl+1)^0,f,c
  3540   0028EE  1E12               	comf	(??___xxtofl+2)^0,f,c
  3541   0028F0  1E13               	comf	(??___xxtofl+3)^0,f,c
  3542   0028F2  2A10               	incf	??___xxtofl^0,f,c
  3543   0028F4  0E00               	movlw	0
  3544   0028F6  2211               	addwfc	(??___xxtofl+1)^0,f,c
  3545   0028F8  2212               	addwfc	(??___xxtofl+2)^0,f,c
  3546   0028FA  2213               	addwfc	(??___xxtofl+3)^0,f,c
  3547   0028FC  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  3548   002900  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  3549   002904  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  3550   002908  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  3551   00290C  EF90  F014         	goto	l3980
  3552   002910                     l1238:
  3553   002910  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  3554   002914  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3555   002918  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3556   00291C  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3557   002920                     l3980:
  3558   002920  500C               	movf	___xxtofl@val^0,w,c
  3559   002922  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  3560   002924  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  3561   002926  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  3562   002928  A4D8               	btfss	status,2,c
  3563   00292A  EF99  F014         	goto	u3671
  3564   00292E  EF9B  F014         	goto	u3670
  3565   002932                     u3671:
  3566   002932  EFA5  F014         	goto	l3986
  3567   002936                     u3670:
  3568   002936  0E00               	movlw	0
  3569   002938  6E0C               	movwf	?___xxtofl^0,c
  3570   00293A  0E00               	movlw	0
  3571   00293C  6E0D               	movwf	(?___xxtofl+1)^0,c
  3572   00293E  0E00               	movlw	0
  3573   002940  6E0E               	movwf	(?___xxtofl+2)^0,c
  3574   002942  0E00               	movlw	0
  3575   002944  6E0F               	movwf	(?___xxtofl+3)^0,c
  3576   002946  EF36  F015         	goto	l1241
  3577   00294A                     l3986:
  3578   00294A  0E96               	movlw	150
  3579   00294C  6E15               	movwf	___xxtofl@exp^0,c
  3580   00294E  EFAF  F014         	goto	l3990
  3581   002952                     l3988:
  3582   002952  2A15               	incf	___xxtofl@exp^0,f,c
  3583   002954  90D8               	bcf	status,0,c
  3584   002956  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3585   002958  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3586   00295A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3587   00295C  3216               	rrcf	___xxtofl@arg^0,f,c
  3588   00295E                     l3990:
  3589   00295E  0E00               	movlw	0
  3590   002960  1416               	andwf	___xxtofl@arg^0,w,c
  3591   002962  6E10               	movwf	??___xxtofl^0,c
  3592   002964  0E00               	movlw	0
  3593   002966  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3594   002968  6E11               	movwf	(??___xxtofl+1)^0,c
  3595   00296A  0E00               	movlw	0
  3596   00296C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3597   00296E  6E12               	movwf	(??___xxtofl+2)^0,c
  3598   002970  0EFE               	movlw	254
  3599   002972  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3600   002974  6E13               	movwf	(??___xxtofl+3)^0,c
  3601   002976  5010               	movf	??___xxtofl^0,w,c
  3602   002978  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3603   00297A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3604   00297C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3605   00297E  A4D8               	btfss	status,2,c
  3606   002980  EFC4  F014         	goto	u3681
  3607   002984  EFC6  F014         	goto	u3680
  3608   002988                     u3681:
  3609   002988  EFA9  F014         	goto	l3988
  3610   00298C                     u3680:
  3611   00298C  EFD4  F014         	goto	l1245
  3612   002990                     l3992:
  3613   002990  2A15               	incf	___xxtofl@exp^0,f,c
  3614   002992  0E01               	movlw	1
  3615   002994  2616               	addwf	___xxtofl@arg^0,f,c
  3616   002996  0E00               	movlw	0
  3617   002998  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  3618   00299A  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  3619   00299C  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  3620   00299E  90D8               	bcf	status,0,c
  3621   0029A0  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  3622   0029A2  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  3623   0029A4  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  3624   0029A6  3216               	rrcf	___xxtofl@arg^0,f,c
  3625   0029A8                     l1245:
  3626   0029A8  0E00               	movlw	0
  3627   0029AA  1416               	andwf	___xxtofl@arg^0,w,c
  3628   0029AC  6E10               	movwf	??___xxtofl^0,c
  3629   0029AE  0E00               	movlw	0
  3630   0029B0  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  3631   0029B2  6E11               	movwf	(??___xxtofl+1)^0,c
  3632   0029B4  0E00               	movlw	0
  3633   0029B6  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  3634   0029B8  6E12               	movwf	(??___xxtofl+2)^0,c
  3635   0029BA  0EFF               	movlw	255
  3636   0029BC  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  3637   0029BE  6E13               	movwf	(??___xxtofl+3)^0,c
  3638   0029C0  5010               	movf	??___xxtofl^0,w,c
  3639   0029C2  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3640   0029C4  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3641   0029C6  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3642   0029C8  A4D8               	btfss	status,2,c
  3643   0029CA  EFE9  F014         	goto	u3691
  3644   0029CE  EFEB  F014         	goto	u3690
  3645   0029D2                     u3691:
  3646   0029D2  EFC8  F014         	goto	l3992
  3647   0029D6                     u3690:
  3648   0029D6  EFF3  F014         	goto	l4000
  3649   0029DA                     l3998:
  3650   0029DA  0615               	decf	___xxtofl@exp^0,f,c
  3651   0029DC  90D8               	bcf	status,0,c
  3652   0029DE  3616               	rlcf	___xxtofl@arg^0,f,c
  3653   0029E0  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3654   0029E2  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3655   0029E4  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3656   0029E6                     l4000:
  3657   0029E6  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3658   0029E8  EFF8  F014         	goto	u3701
  3659   0029EC  EFFA  F014         	goto	u3700
  3660   0029F0                     u3701:
  3661   0029F0  EF02  F015         	goto	l1252
  3662   0029F4                     u3700:
  3663   0029F4  0E02               	movlw	2
  3664   0029F6  6015               	cpfslt	___xxtofl@exp^0,c
  3665   0029F8  EF00  F015         	goto	u3711
  3666   0029FC  EF02  F015         	goto	u3710
  3667   002A00                     u3711:
  3668   002A00  EFED  F014         	goto	l3998
  3669   002A04                     u3710:
  3670   002A04                     l1252:
  3671   002A04  B015               	btfsc	___xxtofl@exp^0,0,c
  3672   002A06  EF07  F015         	goto	u3721
  3673   002A0A  EF09  F015         	goto	u3720
  3674   002A0E                     u3721:
  3675   002A0E  EF0A  F015         	goto	l4006
  3676   002A12                     u3720:
  3677   002A12  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3678   002A14                     l4006:
  3679   002A14  90D8               	bcf	status,0,c
  3680   002A16  3215               	rrcf	___xxtofl@exp^0,f,c
  3681   002A18  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3682   002A1C  6A11               	clrf	(??___xxtofl+1)^0,c
  3683   002A1E  6A12               	clrf	(??___xxtofl+2)^0,c
  3684   002A20  6A13               	clrf	(??___xxtofl+3)^0,c
  3685   002A22  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3686   002A26  6A12               	clrf	(??___xxtofl+2)^0,c
  3687   002A28  6A11               	clrf	(??___xxtofl+1)^0,c
  3688   002A2A  6A10               	clrf	??___xxtofl^0,c
  3689   002A2C  5010               	movf	??___xxtofl^0,w,c
  3690   002A2E  1216               	iorwf	___xxtofl@arg^0,f,c
  3691   002A30  5011               	movf	(??___xxtofl+1)^0,w,c
  3692   002A32  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3693   002A34  5012               	movf	(??___xxtofl+2)^0,w,c
  3694   002A36  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3695   002A38  5013               	movf	(??___xxtofl+3)^0,w,c
  3696   002A3A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3697   002A3C  5014               	movf	___xxtofl@sign^0,w,c
  3698   002A3E  B4D8               	btfsc	status,2,c
  3699   002A40  EF24  F015         	goto	u3731
  3700   002A44  EF26  F015         	goto	u3730
  3701   002A48                     u3731:
  3702   002A48  EF2E  F015         	goto	l4016
  3703   002A4C                     u3730:
  3704   002A4C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3705   002A4E  EF2D  F015         	goto	u3740
  3706   002A52  EF2B  F015         	goto	u3741
  3707   002A56                     u3741:
  3708   002A56  EF2E  F015         	goto	l4016
  3709   002A5A                     u3740:
  3710   002A5A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3711   002A5C                     l4016:
  3712   002A5C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3713   002A60  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3714   002A64  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3715   002A68  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3716   002A6C                     l1241:
  3717   002A6C  0012               	return		;funcret
  3718   002A6E                     __end_of___xxtofl:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function ___fltol *****************
  3722 ;; Defined at:
  3723 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  f1              4    0[COMRAM] unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  exp1            1    9[COMRAM] unsigned char 
  3728 ;;  sign1           1    8[COMRAM] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  4    0[COMRAM] long 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;Total ram usage:       10 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_RGB2Hue
  3748 ;;		_Left45
  3749 ;;		_Right45
  3750 ;;		_reverseHalfSquare
  3751 ;;		_Yellow_rev1_R90
  3752 ;;		_Pink_rev1_L90
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text19
  3757   0030FC                     __ptext19:
  3758                           	callstack 0
  3759   0030FC                     ___fltol:
  3760                           	callstack 29
  3761   0030FC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3762   0030FE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3763   003100  6E0A               	movwf	___fltol@exp1^0,c
  3764   003102  500A               	movf	___fltol@exp1^0,w,c
  3765   003104  A4D8               	btfss	status,2,c
  3766   003106  EF87  F018         	goto	u3581
  3767   00310A  EF89  F018         	goto	u3580
  3768   00310E                     u3581:
  3769   00310E  EF93  F018         	goto	l3936
  3770   003112                     u3580:
  3771   003112                     l3932:
  3772   003112  0E00               	movlw	0
  3773   003114  6E01               	movwf	?___fltol^0,c
  3774   003116  0E00               	movlw	0
  3775   003118  6E02               	movwf	(?___fltol+1)^0,c
  3776   00311A  0E00               	movlw	0
  3777   00311C  6E03               	movwf	(?___fltol+2)^0,c
  3778   00311E  0E00               	movlw	0
  3779   003120  6E04               	movwf	(?___fltol+3)^0,c
  3780   003122  EF00  F019         	goto	l880
  3781   003126                     l3936:
  3782   003126  C001  F005         	movff	___fltol@f1,??___fltol
  3783   00312A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3784   00312E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3785   003132  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3786   003136  0E20               	movlw	32
  3787   003138  EFA3  F018         	goto	u3590
  3788   00313C                     u3595:
  3789   00313C  90D8               	bcf	status,0,c
  3790   00313E  3208               	rrcf	(??___fltol+3)^0,f,c
  3791   003140  3207               	rrcf	(??___fltol+2)^0,f,c
  3792   003142  3206               	rrcf	(??___fltol+1)^0,f,c
  3793   003144  3205               	rrcf	??___fltol^0,f,c
  3794   003146                     u3590:
  3795   003146  2EE8               	decfsz	wreg,f,c
  3796   003148  EF9E  F018         	goto	u3595
  3797   00314C  5005               	movf	??___fltol^0,w,c
  3798   00314E  6E09               	movwf	___fltol@sign1^0,c
  3799   003150  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3800   003152  0EFF               	movlw	255
  3801   003154  1601               	andwf	___fltol@f1^0,f,c
  3802   003156  0EFF               	movlw	255
  3803   003158  1602               	andwf	(___fltol@f1+1)^0,f,c
  3804   00315A  0EFF               	movlw	255
  3805   00315C  1603               	andwf	(___fltol@f1+2)^0,f,c
  3806   00315E  0E00               	movlw	0
  3807   003160  1604               	andwf	(___fltol@f1+3)^0,f,c
  3808   003162  0E96               	movlw	150
  3809   003164  5E0A               	subwf	___fltol@exp1^0,f,c
  3810   003166  BE0A               	btfsc	___fltol@exp1^0,7,c
  3811   003168  EFBA  F018         	goto	u3600
  3812   00316C  EFB8  F018         	goto	u3601
  3813   003170                     u3601:
  3814   003170  EFD0  F018         	goto	l3956
  3815   003174                     u3600:
  3816   003174  500A               	movf	___fltol@exp1^0,w,c
  3817   003176  0A80               	xorlw	128
  3818   003178  0F97               	addlw	151
  3819   00317A  B0D8               	btfsc	status,0,c
  3820   00317C  EFC2  F018         	goto	u3611
  3821   003180  EFC4  F018         	goto	u3610
  3822   003184                     u3611:
  3823   003184  EFC6  F018         	goto	l3952
  3824   003188                     u3610:
  3825   003188  EF89  F018         	goto	l3932
  3826   00318C                     l3952:
  3827   00318C  90D8               	bcf	status,0,c
  3828   00318E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3829   003190  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3830   003192  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3831   003194  3201               	rrcf	___fltol@f1^0,f,c
  3832   003196  3E0A               	incfsz	___fltol@exp1^0,f,c
  3833   003198  EFC6  F018         	goto	l3952
  3834   00319C  EFE8  F018         	goto	l3966
  3835   0031A0                     l3956:
  3836   0031A0  0E1F               	movlw	31
  3837   0031A2  640A               	cpfsgt	___fltol@exp1^0,c
  3838   0031A4  EFD6  F018         	goto	u3621
  3839   0031A8  EFD8  F018         	goto	u3620
  3840   0031AC                     u3621:
  3841   0031AC  EFE0  F018         	goto	l3964
  3842   0031B0                     u3620:
  3843   0031B0  EF89  F018         	goto	l3932
  3844   0031B4                     l3962:
  3845   0031B4  90D8               	bcf	status,0,c
  3846   0031B6  3601               	rlcf	___fltol@f1^0,f,c
  3847   0031B8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3848   0031BA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3849   0031BC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3850   0031BE  060A               	decf	___fltol@exp1^0,f,c
  3851   0031C0                     l3964:
  3852   0031C0  500A               	movf	___fltol@exp1^0,w,c
  3853   0031C2  A4D8               	btfss	status,2,c
  3854   0031C4  EFE6  F018         	goto	u3631
  3855   0031C8  EFE8  F018         	goto	u3630
  3856   0031CC                     u3631:
  3857   0031CC  EFDA  F018         	goto	l3962
  3858   0031D0                     u3630:
  3859   0031D0                     l3966:
  3860   0031D0  5009               	movf	___fltol@sign1^0,w,c
  3861   0031D2  B4D8               	btfsc	status,2,c
  3862   0031D4  EFEE  F018         	goto	u3641
  3863   0031D8  EFF0  F018         	goto	u3640
  3864   0031DC                     u3641:
  3865   0031DC  EFF8  F018         	goto	l3970
  3866   0031E0                     u3640:
  3867   0031E0  1E04               	comf	(___fltol@f1+3)^0,f,c
  3868   0031E2  1E03               	comf	(___fltol@f1+2)^0,f,c
  3869   0031E4  1E02               	comf	(___fltol@f1+1)^0,f,c
  3870   0031E6  6C01               	negf	___fltol@f1^0,c
  3871   0031E8  0E00               	movlw	0
  3872   0031EA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3873   0031EC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3874   0031EE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3875   0031F0                     l3970:
  3876   0031F0  C001  F001         	movff	___fltol@f1,?___fltol
  3877   0031F4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3878   0031F8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3879   0031FC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3880   003200                     l880:
  3881   003200  0012               	return		;funcret
  3882   003202                     __end_of___fltol:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function ___flsub *****************
  3886 ;; Defined at:
  3887 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  b               4   41[COMRAM] long 
  3890 ;;  a               4   45[COMRAM] long 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  4   41[COMRAM] long 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3902 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;Total ram usage:        8 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 1
  3909 ;; This function calls:
  3910 ;;		___fladd
  3911 ;; This function is called by:
  3912 ;;		_RGB2Hue
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text20
  3917   004240                     __ptext20:
  3918                           	callstack 0
  3919   004240                     ___flsub:
  3920                           	callstack 28
  3921   004240  0E00               	movlw	0
  3922   004242  1A2E               	xorwf	___flsub@a^0,f,c
  3923   004244  0E00               	movlw	0
  3924   004246  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  3925   004248  0E00               	movlw	0
  3926   00424A  1A30               	xorwf	(___flsub@a+2)^0,f,c
  3927   00424C  0E80               	movlw	128
  3928   00424E  1A31               	xorwf	(___flsub@a+3)^0,f,c
  3929   004250  C02A  F01A         	movff	___flsub@b,___fladd@b
  3930   004254  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  3931   004258  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  3932   00425C  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  3933   004260  C02E  F01E         	movff	___flsub@a,___fladd@a
  3934   004264  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  3935   004268  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  3936   00426C  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  3937   004270  EC21  F00D         	call	___fladd	;wreg free
  3938   004274  C01A  F02A         	movff	?___fladd,?___flsub
  3939   004278  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  3940   00427C  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  3941   004280  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  3942   004284  0012               	return		;funcret
  3943   004286                     __end_of___flsub:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function ___fladd *****************
  3947 ;; Defined at:
  3948 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  b               4   25[COMRAM] long 
  3951 ;;  a               4   29[COMRAM] long 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  grs             1   40[COMRAM] unsigned char 
  3954 ;;  bexp            1   39[COMRAM] unsigned char 
  3955 ;;  aexp            1   38[COMRAM] unsigned char 
  3956 ;;  signs           1   37[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  4   25[COMRAM] unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;Total ram usage:       16 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_RGB2Hue
  3976 ;;		___flsub
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text21
  3981   001A42                     __ptext21:
  3982                           	callstack 0
  3983   001A42                     ___fladd:
  3984                           	callstack 28
  3985   001A42  501D               	movf	(___fladd@b+3)^0,w,c
  3986   001A44  0B80               	andlw	128
  3987   001A46  6E26               	movwf	___fladd@signs^0,c
  3988   001A48  501D               	movf	(___fladd@b+3)^0,w,c
  3989   001A4A  241D               	addwf	(___fladd@b+3)^0,w,c
  3990   001A4C  6E28               	movwf	___fladd@bexp^0,c
  3991   001A4E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  3992   001A50  EF2C  F00D         	goto	u2441
  3993   001A54  EF2E  F00D         	goto	u2440
  3994   001A58                     u2441:
  3995   001A58  EF2F  F00D         	goto	l3204
  3996   001A5C                     u2440:
  3997   001A5C  8028               	bsf	___fladd@bexp^0,0,c
  3998   001A5E                     l3204:
  3999   001A5E  5028               	movf	___fladd@bexp^0,w,c
  4000   001A60  B4D8               	btfsc	status,2,c
  4001   001A62  EF35  F00D         	goto	u2451
  4002   001A66  EF37  F00D         	goto	u2450
  4003   001A6A                     u2451:
  4004   001A6A  EF4C  F00D         	goto	l3214
  4005   001A6E                     u2450:
  4006   001A6E  2828               	incf	___fladd@bexp^0,w,c
  4007   001A70  A4D8               	btfss	status,2,c
  4008   001A72  EF3D  F00D         	goto	u2461
  4009   001A76  EF3F  F00D         	goto	u2460
  4010   001A7A                     u2461:
  4011   001A7A  EF47  F00D         	goto	l3210
  4012   001A7E                     u2460:
  4013   001A7E  0E00               	movlw	0
  4014   001A80  6E1A               	movwf	___fladd@b^0,c
  4015   001A82  0E00               	movlw	0
  4016   001A84  6E1B               	movwf	(___fladd@b+1)^0,c
  4017   001A86  0E00               	movlw	0
  4018   001A88  6E1C               	movwf	(___fladd@b+2)^0,c
  4019   001A8A  0E00               	movlw	0
  4020   001A8C  6E1D               	movwf	(___fladd@b+3)^0,c
  4021   001A8E                     l3210:
  4022   001A8E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4023   001A90  0E00               	movlw	0
  4024   001A92  6E1D               	movwf	(___fladd@b+3)^0,c
  4025   001A94  EF54  F00D         	goto	l3216
  4026   001A98                     l3214:
  4027   001A98  0E00               	movlw	0
  4028   001A9A  6E1A               	movwf	___fladd@b^0,c
  4029   001A9C  0E00               	movlw	0
  4030   001A9E  6E1B               	movwf	(___fladd@b+1)^0,c
  4031   001AA0  0E00               	movlw	0
  4032   001AA2  6E1C               	movwf	(___fladd@b+2)^0,c
  4033   001AA4  0E00               	movlw	0
  4034   001AA6  6E1D               	movwf	(___fladd@b+3)^0,c
  4035   001AA8                     l3216:
  4036   001AA8  5021               	movf	(___fladd@a+3)^0,w,c
  4037   001AAA  0B80               	andlw	128
  4038   001AAC  6E27               	movwf	___fladd@aexp^0,c
  4039   001AAE  5026               	movf	___fladd@signs^0,w,c
  4040   001AB0  1827               	xorwf	___fladd@aexp^0,w,c
  4041   001AB2  B4D8               	btfsc	status,2,c
  4042   001AB4  EF5E  F00D         	goto	u2471
  4043   001AB8  EF60  F00D         	goto	u2470
  4044   001ABC                     u2471:
  4045   001ABC  EF61  F00D         	goto	l3222
  4046   001AC0                     u2470:
  4047   001AC0  8C26               	bsf	___fladd@signs^0,6,c
  4048   001AC2                     l3222:
  4049   001AC2  5021               	movf	(___fladd@a+3)^0,w,c
  4050   001AC4  2421               	addwf	(___fladd@a+3)^0,w,c
  4051   001AC6  6E27               	movwf	___fladd@aexp^0,c
  4052   001AC8  AE20               	btfss	(___fladd@a+2)^0,7,c
  4053   001ACA  EF69  F00D         	goto	u2481
  4054   001ACE  EF6B  F00D         	goto	u2480
  4055   001AD2                     u2481:
  4056   001AD2  EF6C  F00D         	goto	l3228
  4057   001AD6                     u2480:
  4058   001AD6  8027               	bsf	___fladd@aexp^0,0,c
  4059   001AD8                     l3228:
  4060   001AD8  5027               	movf	___fladd@aexp^0,w,c
  4061   001ADA  B4D8               	btfsc	status,2,c
  4062   001ADC  EF72  F00D         	goto	u2491
  4063   001AE0  EF74  F00D         	goto	u2490
  4064   001AE4                     u2491:
  4065   001AE4  EF89  F00D         	goto	l3238
  4066   001AE8                     u2490:
  4067   001AE8  2827               	incf	___fladd@aexp^0,w,c
  4068   001AEA  A4D8               	btfss	status,2,c
  4069   001AEC  EF7A  F00D         	goto	u2501
  4070   001AF0  EF7C  F00D         	goto	u2500
  4071   001AF4                     u2501:
  4072   001AF4  EF84  F00D         	goto	l3234
  4073   001AF8                     u2500:
  4074   001AF8  0E00               	movlw	0
  4075   001AFA  6E1E               	movwf	___fladd@a^0,c
  4076   001AFC  0E00               	movlw	0
  4077   001AFE  6E1F               	movwf	(___fladd@a+1)^0,c
  4078   001B00  0E00               	movlw	0
  4079   001B02  6E20               	movwf	(___fladd@a+2)^0,c
  4080   001B04  0E00               	movlw	0
  4081   001B06  6E21               	movwf	(___fladd@a+3)^0,c
  4082   001B08                     l3234:
  4083   001B08  8E20               	bsf	(___fladd@a+2)^0,7,c
  4084   001B0A  0E00               	movlw	0
  4085   001B0C  6E21               	movwf	(___fladd@a+3)^0,c
  4086   001B0E  EF91  F00D         	goto	l3240
  4087   001B12                     l3238:
  4088   001B12  0E00               	movlw	0
  4089   001B14  6E1E               	movwf	___fladd@a^0,c
  4090   001B16  0E00               	movlw	0
  4091   001B18  6E1F               	movwf	(___fladd@a+1)^0,c
  4092   001B1A  0E00               	movlw	0
  4093   001B1C  6E20               	movwf	(___fladd@a+2)^0,c
  4094   001B1E  0E00               	movlw	0
  4095   001B20  6E21               	movwf	(___fladd@a+3)^0,c
  4096   001B22                     l3240:
  4097   001B22  5028               	movf	___fladd@bexp^0,w,c
  4098   001B24  5C27               	subwf	___fladd@aexp^0,w,c
  4099   001B26  B0D8               	btfsc	status,0,c
  4100   001B28  EF98  F00D         	goto	u2511
  4101   001B2C  EF9A  F00D         	goto	u2510
  4102   001B30                     u2511:
  4103   001B30  EFC1  F00D         	goto	l3276
  4104   001B34                     u2510:
  4105   001B34  AC26               	btfss	___fladd@signs^0,6,c
  4106   001B36  EF9F  F00D         	goto	u2521
  4107   001B3A  EFA1  F00D         	goto	u2520
  4108   001B3E                     u2521:
  4109   001B3E  EFA3  F00D         	goto	l3246
  4110   001B42                     u2520:
  4111   001B42  0E80               	movlw	128
  4112   001B44  1A26               	xorwf	___fladd@signs^0,f,c
  4113   001B46                     l3246:
  4114   001B46  C028  F029         	movff	___fladd@bexp,___fladd@grs
  4115   001B4A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4116   001B4E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  4117   001B52  C01A  F029         	movff	___fladd@b,___fladd@grs
  4118   001B56  C01E  F01A         	movff	___fladd@a,___fladd@b
  4119   001B5A  C029  F01E         	movff	___fladd@grs,___fladd@a
  4120   001B5E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  4121   001B62  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  4122   001B66  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  4123   001B6A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  4124   001B6E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  4125   001B72  C029  F020         	movff	___fladd@grs,___fladd@a+2
  4126   001B76  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  4127   001B7A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  4128   001B7E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  4129   001B82                     l3276:
  4130   001B82  0E00               	movlw	0
  4131   001B84  6E29               	movwf	___fladd@grs^0,c
  4132   001B86  5028               	movf	___fladd@bexp^0,w,c
  4133   001B88  C027  F022         	movff	___fladd@aexp,??___fladd
  4134   001B8C  6A23               	clrf	(??___fladd+1)^0,c
  4135   001B8E  5E22               	subwf	??___fladd^0,f,c
  4136   001B90  0E00               	movlw	0
  4137   001B92  5A23               	subwfb	(??___fladd+1)^0,f,c
  4138   001B94  BE23               	btfsc	(??___fladd+1)^0,7,c
  4139   001B96  EFD6  F00D         	goto	u2531
  4140   001B9A  5023               	movf	(??___fladd+1)^0,w,c
  4141   001B9C  E109               	bnz	u2530
  4142   001B9E  0E1A               	movlw	26
  4143   001BA0  5C22               	subwf	??___fladd^0,w,c
  4144   001BA2  A0D8               	btfss	status,0,c
  4145   001BA4  EFD6  F00D         	goto	u2531
  4146   001BA8  EFD8  F00D         	goto	u2530
  4147   001BAC                     u2531:
  4148   001BAC  EF0F  F00E         	goto	l1112
  4149   001BB0                     u2530:
  4150   001BB0  501A               	movf	___fladd@b^0,w,c
  4151   001BB2  101B               	iorwf	(___fladd@b+1)^0,w,c
  4152   001BB4  101C               	iorwf	(___fladd@b+2)^0,w,c
  4153   001BB6  101D               	iorwf	(___fladd@b+3)^0,w,c
  4154   001BB8  A4D8               	btfss	status,2,c
  4155   001BBA  EFE1  F00D         	goto	u2541
  4156   001BBE  EFE4  F00D         	goto	u2540
  4157   001BC2                     u2541:
  4158   001BC2  0E01               	movlw	1
  4159   001BC4  EFE5  F00D         	goto	u2550
  4160   001BC8                     u2540:
  4161   001BC8  0E00               	movlw	0
  4162   001BCA                     u2550:
  4163   001BCA  6E29               	movwf	___fladd@grs^0,c
  4164   001BCC  0E00               	movlw	0
  4165   001BCE  6E1A               	movwf	___fladd@b^0,c
  4166   001BD0  0E00               	movlw	0
  4167   001BD2  6E1B               	movwf	(___fladd@b+1)^0,c
  4168   001BD4  0E00               	movlw	0
  4169   001BD6  6E1C               	movwf	(___fladd@b+2)^0,c
  4170   001BD8  0E00               	movlw	0
  4171   001BDA  6E1D               	movwf	(___fladd@b+3)^0,c
  4172   001BDC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4173   001BE0  EF18  F00E         	goto	l1111
  4174   001BE4                     l1113:
  4175   001BE4  A029               	btfss	___fladd@grs^0,0,c
  4176   001BE6  EFF7  F00D         	goto	u2561
  4177   001BEA  EFF9  F00D         	goto	u2560
  4178   001BEE                     u2561:
  4179   001BEE  EFFF  F00D         	goto	l3288
  4180   001BF2                     u2560:
  4181   001BF2  90D8               	bcf	status,0,c
  4182   001BF4  3029               	rrcf	___fladd@grs^0,w,c
  4183   001BF6  0901               	iorlw	1
  4184   001BF8  6E29               	movwf	___fladd@grs^0,c
  4185   001BFA  EF01  F00E         	goto	l3290
  4186   001BFE                     l3288:
  4187   001BFE  90D8               	bcf	status,0,c
  4188   001C00  3229               	rrcf	___fladd@grs^0,f,c
  4189   001C02                     l3290:
  4190   001C02  A01A               	btfss	___fladd@b^0,0,c
  4191   001C04  EF06  F00E         	goto	u2571
  4192   001C08  EF08  F00E         	goto	u2570
  4193   001C0C                     u2571:
  4194   001C0C  EF09  F00E         	goto	l3294
  4195   001C10                     u2570:
  4196   001C10  8E29               	bsf	___fladd@grs^0,7,c
  4197   001C12                     l3294:
  4198   001C12  341D               	rlcf	(___fladd@b+3)^0,w,c
  4199   001C14  321D               	rrcf	(___fladd@b+3)^0,f,c
  4200   001C16  321C               	rrcf	(___fladd@b+2)^0,f,c
  4201   001C18  321B               	rrcf	(___fladd@b+1)^0,f,c
  4202   001C1A  321A               	rrcf	___fladd@b^0,f,c
  4203   001C1C  2A28               	incf	___fladd@bexp^0,f,c
  4204   001C1E                     l1112:
  4205   001C1E  5027               	movf	___fladd@aexp^0,w,c
  4206   001C20  5C28               	subwf	___fladd@bexp^0,w,c
  4207   001C22  A0D8               	btfss	status,0,c
  4208   001C24  EF16  F00E         	goto	u2581
  4209   001C28  EF18  F00E         	goto	u2580
  4210   001C2C                     u2581:
  4211   001C2C  EFF2  F00D         	goto	l1113
  4212   001C30                     u2580:
  4213   001C30                     l1111:
  4214   001C30  BC26               	btfsc	___fladd@signs^0,6,c
  4215   001C32  EF1D  F00E         	goto	u2591
  4216   001C36  EF1F  F00E         	goto	u2590
  4217   001C3A                     u2591:
  4218   001C3A  EF5F  F00E         	goto	l3322
  4219   001C3E                     u2590:
  4220   001C3E  5028               	movf	___fladd@bexp^0,w,c
  4221   001C40  A4D8               	btfss	status,2,c
  4222   001C42  EF25  F00E         	goto	u2601
  4223   001C46  EF27  F00E         	goto	u2600
  4224   001C4A                     u2601:
  4225   001C4A  EF31  F00E         	goto	l3304
  4226   001C4E                     u2600:
  4227   001C4E  0E00               	movlw	0
  4228   001C50  6E1A               	movwf	?___fladd^0,c
  4229   001C52  0E00               	movlw	0
  4230   001C54  6E1B               	movwf	(?___fladd+1)^0,c
  4231   001C56  0E00               	movlw	0
  4232   001C58  6E1C               	movwf	(?___fladd+2)^0,c
  4233   001C5A  0E00               	movlw	0
  4234   001C5C  6E1D               	movwf	(?___fladd+3)^0,c
  4235   001C5E  EF80  F00F         	goto	l1120
  4236   001C62                     l3304:
  4237   001C62  501E               	movf	___fladd@a^0,w,c
  4238   001C64  261A               	addwf	___fladd@b^0,f,c
  4239   001C66  501F               	movf	(___fladd@a+1)^0,w,c
  4240   001C68  221B               	addwfc	(___fladd@b+1)^0,f,c
  4241   001C6A  5020               	movf	(___fladd@a+2)^0,w,c
  4242   001C6C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4243   001C6E  5021               	movf	(___fladd@a+3)^0,w,c
  4244   001C70  221D               	addwfc	(___fladd@b+3)^0,f,c
  4245   001C72  A01D               	btfss	(___fladd@b+3)^0,0,c
  4246   001C74  EF3E  F00E         	goto	u2611
  4247   001C78  EF40  F00E         	goto	u2610
  4248   001C7C                     u2611:
  4249   001C7C  EFEC  F00E         	goto	l3358
  4250   001C80                     u2610:
  4251   001C80  A029               	btfss	___fladd@grs^0,0,c
  4252   001C82  EF45  F00E         	goto	u2621
  4253   001C86  EF47  F00E         	goto	u2620
  4254   001C8A                     u2621:
  4255   001C8A  EF4D  F00E         	goto	l3312
  4256   001C8E                     u2620:
  4257   001C8E  90D8               	bcf	status,0,c
  4258   001C90  3029               	rrcf	___fladd@grs^0,w,c
  4259   001C92  0901               	iorlw	1
  4260   001C94  6E29               	movwf	___fladd@grs^0,c
  4261   001C96  EF4F  F00E         	goto	l3314
  4262   001C9A                     l3312:
  4263   001C9A  90D8               	bcf	status,0,c
  4264   001C9C  3229               	rrcf	___fladd@grs^0,f,c
  4265   001C9E                     l3314:
  4266   001C9E  A01A               	btfss	___fladd@b^0,0,c
  4267   001CA0  EF54  F00E         	goto	u2631
  4268   001CA4  EF56  F00E         	goto	u2630
  4269   001CA8                     u2631:
  4270   001CA8  EF57  F00E         	goto	l3318
  4271   001CAC                     u2630:
  4272   001CAC  8E29               	bsf	___fladd@grs^0,7,c
  4273   001CAE                     l3318:
  4274   001CAE  341D               	rlcf	(___fladd@b+3)^0,w,c
  4275   001CB0  321D               	rrcf	(___fladd@b+3)^0,f,c
  4276   001CB2  321C               	rrcf	(___fladd@b+2)^0,f,c
  4277   001CB4  321B               	rrcf	(___fladd@b+1)^0,f,c
  4278   001CB6  321A               	rrcf	___fladd@b^0,f,c
  4279   001CB8  2A28               	incf	___fladd@bexp^0,f,c
  4280   001CBA  EFEC  F00E         	goto	l3358
  4281   001CBE                     l3322:
  4282   001CBE  501E               	movf	___fladd@a^0,w,c
  4283   001CC0  5C1A               	subwf	___fladd@b^0,w,c
  4284   001CC2  501F               	movf	(___fladd@a+1)^0,w,c
  4285   001CC4  581B               	subwfb	(___fladd@b+1)^0,w,c
  4286   001CC6  5020               	movf	(___fladd@a+2)^0,w,c
  4287   001CC8  581C               	subwfb	(___fladd@b+2)^0,w,c
  4288   001CCA  501D               	movf	(___fladd@b+3)^0,w,c
  4289   001CCC  0A80               	xorlw	128
  4290   001CCE  6E22               	movwf	??___fladd^0,c
  4291   001CD0  5021               	movf	(___fladd@a+3)^0,w,c
  4292   001CD2  0A80               	xorlw	128
  4293   001CD4  5822               	subwfb	??___fladd^0,w,c
  4294   001CD6  B0D8               	btfsc	status,0,c
  4295   001CD8  EF70  F00E         	goto	u2641
  4296   001CDC  EF72  F00E         	goto	u2640
  4297   001CE0                     u2641:
  4298   001CE0  EF9D  F00E         	goto	l3332
  4299   001CE4                     u2640:
  4300   001CE4  501A               	movf	___fladd@b^0,w,c
  4301   001CE6  5C1E               	subwf	___fladd@a^0,w,c
  4302   001CE8  6E22               	movwf	??___fladd^0,c
  4303   001CEA  501B               	movf	(___fladd@b+1)^0,w,c
  4304   001CEC  581F               	subwfb	(___fladd@a+1)^0,w,c
  4305   001CEE  6E23               	movwf	(??___fladd+1)^0,c
  4306   001CF0  501C               	movf	(___fladd@b+2)^0,w,c
  4307   001CF2  5820               	subwfb	(___fladd@a+2)^0,w,c
  4308   001CF4  6E24               	movwf	(??___fladd+2)^0,c
  4309   001CF6  501D               	movf	(___fladd@b+3)^0,w,c
  4310   001CF8  5821               	subwfb	(___fladd@a+3)^0,w,c
  4311   001CFA  6E25               	movwf	(??___fladd+3)^0,c
  4312   001CFC  0EFF               	movlw	255
  4313   001CFE  2422               	addwf	??___fladd^0,w,c
  4314   001D00  6E1A               	movwf	___fladd@b^0,c
  4315   001D02  0EFF               	movlw	255
  4316   001D04  2023               	addwfc	(??___fladd+1)^0,w,c
  4317   001D06  6E1B               	movwf	(___fladd@b+1)^0,c
  4318   001D08  0EFF               	movlw	255
  4319   001D0A  2024               	addwfc	(??___fladd+2)^0,w,c
  4320   001D0C  6E1C               	movwf	(___fladd@b+2)^0,c
  4321   001D0E  0EFF               	movlw	255
  4322   001D10  2025               	addwfc	(??___fladd+3)^0,w,c
  4323   001D12  6E1D               	movwf	(___fladd@b+3)^0,c
  4324   001D14  0E80               	movlw	128
  4325   001D16  1A26               	xorwf	___fladd@signs^0,f,c
  4326   001D18  6C29               	negf	___fladd@grs^0,c
  4327   001D1A  5029               	movf	___fladd@grs^0,w,c
  4328   001D1C  A4D8               	btfss	status,2,c
  4329   001D1E  EF93  F00E         	goto	u2651
  4330   001D22  EF95  F00E         	goto	u2650
  4331   001D26                     u2651:
  4332   001D26  EFA5  F00E         	goto	l1128
  4333   001D2A                     u2650:
  4334   001D2A  0E01               	movlw	1
  4335   001D2C  261A               	addwf	___fladd@b^0,f,c
  4336   001D2E  0E00               	movlw	0
  4337   001D30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4338   001D32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4339   001D34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4340   001D36  EFA5  F00E         	goto	l1128
  4341   001D3A                     l3332:
  4342   001D3A  501E               	movf	___fladd@a^0,w,c
  4343   001D3C  5E1A               	subwf	___fladd@b^0,f,c
  4344   001D3E  501F               	movf	(___fladd@a+1)^0,w,c
  4345   001D40  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4346   001D42  5020               	movf	(___fladd@a+2)^0,w,c
  4347   001D44  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4348   001D46  5021               	movf	(___fladd@a+3)^0,w,c
  4349   001D48  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4350   001D4A                     l1128:
  4351   001D4A  501A               	movf	___fladd@b^0,w,c
  4352   001D4C  101B               	iorwf	(___fladd@b+1)^0,w,c
  4353   001D4E  101C               	iorwf	(___fladd@b+2)^0,w,c
  4354   001D50  101D               	iorwf	(___fladd@b+3)^0,w,c
  4355   001D52  A4D8               	btfss	status,2,c
  4356   001D54  EFAE  F00E         	goto	u2661
  4357   001D58  EFB0  F00E         	goto	u2660
  4358   001D5C                     u2661:
  4359   001D5C  EFE5  F00E         	goto	l3356
  4360   001D60                     u2660:
  4361   001D60  5029               	movf	___fladd@grs^0,w,c
  4362   001D62  A4D8               	btfss	status,2,c
  4363   001D64  EFB6  F00E         	goto	u2671
  4364   001D68  EFB8  F00E         	goto	u2670
  4365   001D6C                     u2671:
  4366   001D6C  EFE5  F00E         	goto	l3356
  4367   001D70                     u2670:
  4368   001D70  0E00               	movlw	0
  4369   001D72  6E1A               	movwf	?___fladd^0,c
  4370   001D74  0E00               	movlw	0
  4371   001D76  6E1B               	movwf	(?___fladd+1)^0,c
  4372   001D78  0E00               	movlw	0
  4373   001D7A  6E1C               	movwf	(?___fladd+2)^0,c
  4374   001D7C  0E00               	movlw	0
  4375   001D7E  6E1D               	movwf	(?___fladd+3)^0,c
  4376   001D80  EF80  F00F         	goto	l1120
  4377   001D84                     l3340:
  4378   001D84  90D8               	bcf	status,0,c
  4379   001D86  361A               	rlcf	___fladd@b^0,f,c
  4380   001D88  361B               	rlcf	(___fladd@b+1)^0,f,c
  4381   001D8A  361C               	rlcf	(___fladd@b+2)^0,f,c
  4382   001D8C  361D               	rlcf	(___fladd@b+3)^0,f,c
  4383   001D8E  AE29               	btfss	___fladd@grs^0,7,c
  4384   001D90  EFCC  F00E         	goto	u2681
  4385   001D94  EFCE  F00E         	goto	u2680
  4386   001D98                     u2681:
  4387   001D98  EFCF  F00E         	goto	l3346
  4388   001D9C                     u2680:
  4389   001D9C  801A               	bsf	___fladd@b^0,0,c
  4390   001D9E                     l3346:
  4391   001D9E  A029               	btfss	___fladd@grs^0,0,c
  4392   001DA0  EFD4  F00E         	goto	u2691
  4393   001DA4  EFD6  F00E         	goto	u2690
  4394   001DA8                     u2691:
  4395   001DA8  EFDA  F00E         	goto	l3350
  4396   001DAC                     u2690:
  4397   001DAC  80D8               	bsf	status,0,c
  4398   001DAE  3629               	rlcf	___fladd@grs^0,f,c
  4399   001DB0  EFDC  F00E         	goto	l3352
  4400   001DB4                     l3350:
  4401   001DB4  90D8               	bcf	status,0,c
  4402   001DB6  3629               	rlcf	___fladd@grs^0,f,c
  4403   001DB8                     l3352:
  4404   001DB8  5028               	movf	___fladd@bexp^0,w,c
  4405   001DBA  B4D8               	btfsc	status,2,c
  4406   001DBC  EFE2  F00E         	goto	u2701
  4407   001DC0  EFE4  F00E         	goto	u2700
  4408   001DC4                     u2701:
  4409   001DC4  EFE5  F00E         	goto	l3356
  4410   001DC8                     u2700:
  4411   001DC8  0628               	decf	___fladd@bexp^0,f,c
  4412   001DCA                     l3356:
  4413   001DCA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4414   001DCC  EFEA  F00E         	goto	u2711
  4415   001DD0  EFEC  F00E         	goto	u2710
  4416   001DD4                     u2711:
  4417   001DD4  EFC2  F00E         	goto	l3340
  4418   001DD8                     u2710:
  4419   001DD8                     l3358:
  4420   001DD8  0E00               	movlw	0
  4421   001DDA  6E27               	movwf	___fladd@aexp^0,c
  4422   001DDC  AE29               	btfss	___fladd@grs^0,7,c
  4423   001DDE  EFF3  F00E         	goto	u2721
  4424   001DE2  EFF5  F00E         	goto	u2720
  4425   001DE6                     u2721:
  4426   001DE6  EF0D  F00F         	goto	l1137
  4427   001DEA                     u2720:
  4428   001DEA  C029  F022         	movff	___fladd@grs,??___fladd
  4429   001DEE  0E7F               	movlw	127
  4430   001DF0  1622               	andwf	??___fladd^0,f,c
  4431   001DF2  B4D8               	btfsc	status,2,c
  4432   001DF4  EFFE  F00E         	goto	u2731
  4433   001DF8  EF00  F00F         	goto	u2730
  4434   001DFC                     u2731:
  4435   001DFC  EF04  F00F         	goto	l1138
  4436   001E00                     u2730:
  4437   001E00                     l3364:
  4438   001E00  0E01               	movlw	1
  4439   001E02  6E27               	movwf	___fladd@aexp^0,c
  4440   001E04  EF0D  F00F         	goto	l1137
  4441   001E08                     l1138:
  4442   001E08  A01A               	btfss	___fladd@b^0,0,c
  4443   001E0A  EF09  F00F         	goto	u2741
  4444   001E0E  EF0B  F00F         	goto	u2740
  4445   001E12                     u2741:
  4446   001E12  EF0D  F00F         	goto	l1137
  4447   001E16                     u2740:
  4448   001E16  EF00  F00F         	goto	l3364
  4449   001E1A                     l1137:
  4450   001E1A  5027               	movf	___fladd@aexp^0,w,c
  4451   001E1C  B4D8               	btfsc	status,2,c
  4452   001E1E  EF13  F00F         	goto	u2751
  4453   001E22  EF15  F00F         	goto	u2750
  4454   001E26                     u2751:
  4455   001E26  EF40  F00F         	goto	l3376
  4456   001E2A                     u2750:
  4457   001E2A  0E01               	movlw	1
  4458   001E2C  261A               	addwf	___fladd@b^0,f,c
  4459   001E2E  0E00               	movlw	0
  4460   001E30  221B               	addwfc	(___fladd@b+1)^0,f,c
  4461   001E32  221C               	addwfc	(___fladd@b+2)^0,f,c
  4462   001E34  221D               	addwfc	(___fladd@b+3)^0,f,c
  4463   001E36  A01D               	btfss	(___fladd@b+3)^0,0,c
  4464   001E38  EF20  F00F         	goto	u2761
  4465   001E3C  EF22  F00F         	goto	u2760
  4466   001E40                     u2761:
  4467   001E40  EF40  F00F         	goto	l3376
  4468   001E44                     u2760:
  4469   001E44  C01A  F022         	movff	___fladd@b,??___fladd
  4470   001E48  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4471   001E4C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4472   001E50  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4473   001E54  3425               	rlcf	(??___fladd+3)^0,w,c
  4474   001E56  3225               	rrcf	(??___fladd+3)^0,f,c
  4475   001E58  3224               	rrcf	(??___fladd+2)^0,f,c
  4476   001E5A  3223               	rrcf	(??___fladd+1)^0,f,c
  4477   001E5C  3222               	rrcf	??___fladd^0,f,c
  4478   001E5E  C022  F01A         	movff	??___fladd,___fladd@b
  4479   001E62  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4480   001E66  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4481   001E6A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4482   001E6E  2828               	incf	___fladd@bexp^0,w,c
  4483   001E70  B4D8               	btfsc	status,2,c
  4484   001E72  EF3D  F00F         	goto	u2771
  4485   001E76  EF3F  F00F         	goto	u2770
  4486   001E7A                     u2771:
  4487   001E7A  EF40  F00F         	goto	l3376
  4488   001E7E                     u2770:
  4489   001E7E  2A28               	incf	___fladd@bexp^0,f,c
  4490   001E80                     l3376:
  4491   001E80  2828               	incf	___fladd@bexp^0,w,c
  4492   001E82  B4D8               	btfsc	status,2,c
  4493   001E84  EF46  F00F         	goto	u2781
  4494   001E88  EF48  F00F         	goto	u2780
  4495   001E8C                     u2781:
  4496   001E8C  EF50  F00F         	goto	l3380
  4497   001E90                     u2780:
  4498   001E90  5028               	movf	___fladd@bexp^0,w,c
  4499   001E92  A4D8               	btfss	status,2,c
  4500   001E94  EF4E  F00F         	goto	u2791
  4501   001E98  EF50  F00F         	goto	u2790
  4502   001E9C                     u2791:
  4503   001E9C  EF62  F00F         	goto	l3384
  4504   001EA0                     u2790:
  4505   001EA0                     l3380:
  4506   001EA0  0E00               	movlw	0
  4507   001EA2  6E1A               	movwf	___fladd@b^0,c
  4508   001EA4  0E00               	movlw	0
  4509   001EA6  6E1B               	movwf	(___fladd@b+1)^0,c
  4510   001EA8  0E00               	movlw	0
  4511   001EAA  6E1C               	movwf	(___fladd@b+2)^0,c
  4512   001EAC  0E00               	movlw	0
  4513   001EAE  6E1D               	movwf	(___fladd@b+3)^0,c
  4514   001EB0  5028               	movf	___fladd@bexp^0,w,c
  4515   001EB2  A4D8               	btfss	status,2,c
  4516   001EB4  EF5E  F00F         	goto	u2801
  4517   001EB8  EF60  F00F         	goto	u2800
  4518   001EBC                     u2801:
  4519   001EBC  EF62  F00F         	goto	l3384
  4520   001EC0                     u2800:
  4521   001EC0  0E00               	movlw	0
  4522   001EC2  6E26               	movwf	___fladd@signs^0,c
  4523   001EC4                     l3384:
  4524   001EC4  A028               	btfss	___fladd@bexp^0,0,c
  4525   001EC6  EF67  F00F         	goto	u2811
  4526   001ECA  EF69  F00F         	goto	u2810
  4527   001ECE                     u2811:
  4528   001ECE  EF6C  F00F         	goto	l3388
  4529   001ED2                     u2810:
  4530   001ED2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4531   001ED4  EF6D  F00F         	goto	l3390
  4532   001ED8                     l3388:
  4533   001ED8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4534   001EDA                     l3390:
  4535   001EDA  90D8               	bcf	status,0,c
  4536   001EDC  3028               	rrcf	___fladd@bexp^0,w,c
  4537   001EDE  6E1D               	movwf	(___fladd@b+3)^0,c
  4538   001EE0  AE26               	btfss	___fladd@signs^0,7,c
  4539   001EE2  EF75  F00F         	goto	u2821
  4540   001EE6  EF77  F00F         	goto	u2820
  4541   001EEA                     u2821:
  4542   001EEA  EF78  F00F         	goto	l3396
  4543   001EEE                     u2820:
  4544   001EEE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4545   001EF0                     l3396:
  4546   001EF0  C01A  F01A         	movff	___fladd@b,?___fladd
  4547   001EF4  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4548   001EF8  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4549   001EFC  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4550   001F00                     l1120:
  4551   001F00  0012               	return		;funcret
  4552   001F02                     __end_of___fladd:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function ___flmul *****************
  4556 ;; Defined at:
  4557 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  b               4   74[COMRAM] unsigned char 
  4560 ;;  a               4   78[COMRAM] unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  prod            4    7[BANK0 ] struct .
  4563 ;;  grs             4    1[BANK0 ] unsigned long 
  4564 ;;  temp            2   11[BANK0 ] struct .
  4565 ;;  bexp            1    6[BANK0 ] unsigned char 
  4566 ;;  aexp            1    5[BANK0 ] unsigned char 
  4567 ;;  sign            1    0[BANK0 ] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  4   74[COMRAM] unsigned char 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, prodl, prodh
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4577 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;Total ram usage:       25 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_RGB2Hue
  4587 ;;		_Left45
  4588 ;;		_Right45
  4589 ;;		_reverseHalfSquare
  4590 ;;		_Yellow_rev1_R90
  4591 ;;		_Pink_rev1_L90
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text22
  4596   001F02                     __ptext22:
  4597                           	callstack 0
  4598   001F02                     ___flmul:
  4599                           	callstack 29
  4600   001F02  504E               	movf	(___flmul@b+3)^0,w,c
  4601   001F04  0B80               	andlw	128
  4602   001F06  0100               	movlb	0	; () banked
  4603   001F08  6F60               	movwf	___flmul@sign& (0+255),b
  4604   001F0A  504E               	movf	(___flmul@b+3)^0,w,c
  4605   001F0C  244E               	addwf	(___flmul@b+3)^0,w,c
  4606   001F0E  6F66               	movwf	___flmul@bexp& (0+255),b
  4607   001F10                     
  4608                           ; BSR set to: 0
  4609   001F10  AE4D               	btfss	(___flmul@b+2)^0,7,c
  4610   001F12  EF8D  F00F         	goto	u3361
  4611   001F16  EF8F  F00F         	goto	u3360
  4612   001F1A                     u3361:
  4613   001F1A  EF90  F00F         	goto	l3784
  4614   001F1E                     u3360:
  4615   001F1E                     
  4616                           ; BSR set to: 0
  4617   001F1E  8166               	bsf	___flmul@bexp& (0+255),0,b
  4618   001F20                     l3784:
  4619                           
  4620                           ; BSR set to: 0
  4621   001F20  5166               	movf	___flmul@bexp& (0+255),w,b
  4622   001F22  B4D8               	btfsc	status,2,c
  4623   001F24  EF96  F00F         	goto	u3371
  4624   001F28  EF98  F00F         	goto	u3370
  4625   001F2C                     u3371:
  4626   001F2C  EFAB  F00F         	goto	l3792
  4627   001F30                     u3370:
  4628   001F30                     
  4629                           ; BSR set to: 0
  4630   001F30  2966               	incf	___flmul@bexp& (0+255),w,b
  4631   001F32  A4D8               	btfss	status,2,c
  4632   001F34  EF9E  F00F         	goto	u3381
  4633   001F38  EFA0  F00F         	goto	u3380
  4634   001F3C                     u3381:
  4635   001F3C  EFA8  F00F         	goto	l3790
  4636   001F40                     u3380:
  4637   001F40                     
  4638                           ; BSR set to: 0
  4639   001F40  0E00               	movlw	0
  4640   001F42  6E4B               	movwf	___flmul@b^0,c
  4641   001F44  0E00               	movlw	0
  4642   001F46  6E4C               	movwf	(___flmul@b+1)^0,c
  4643   001F48  0E00               	movlw	0
  4644   001F4A  6E4D               	movwf	(___flmul@b+2)^0,c
  4645   001F4C  0E00               	movlw	0
  4646   001F4E  6E4E               	movwf	(___flmul@b+3)^0,c
  4647   001F50                     l3790:
  4648                           
  4649                           ; BSR set to: 0
  4650   001F50  8E4D               	bsf	(___flmul@b+2)^0,7,c
  4651   001F52  EFB3  F00F         	goto	l3794
  4652   001F56                     l3792:
  4653                           
  4654                           ; BSR set to: 0
  4655   001F56  0E00               	movlw	0
  4656   001F58  6E4B               	movwf	___flmul@b^0,c
  4657   001F5A  0E00               	movlw	0
  4658   001F5C  6E4C               	movwf	(___flmul@b+1)^0,c
  4659   001F5E  0E00               	movlw	0
  4660   001F60  6E4D               	movwf	(___flmul@b+2)^0,c
  4661   001F62  0E00               	movlw	0
  4662   001F64  6E4E               	movwf	(___flmul@b+3)^0,c
  4663   001F66                     l3794:
  4664                           
  4665                           ; BSR set to: 0
  4666   001F66  5052               	movf	(___flmul@a+3)^0,w,c
  4667   001F68  0B80               	andlw	128
  4668   001F6A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  4669   001F6C                     
  4670                           ; BSR set to: 0
  4671   001F6C  5052               	movf	(___flmul@a+3)^0,w,c
  4672   001F6E  2452               	addwf	(___flmul@a+3)^0,w,c
  4673   001F70  6F65               	movwf	___flmul@aexp& (0+255),b
  4674   001F72                     
  4675                           ; BSR set to: 0
  4676   001F72  AE51               	btfss	(___flmul@a+2)^0,7,c
  4677   001F74  EFBE  F00F         	goto	u3391
  4678   001F78  EFC0  F00F         	goto	u3390
  4679   001F7C                     u3391:
  4680   001F7C  EFC1  F00F         	goto	l3802
  4681   001F80                     u3390:
  4682   001F80                     
  4683                           ; BSR set to: 0
  4684   001F80  8165               	bsf	___flmul@aexp& (0+255),0,b
  4685   001F82                     l3802:
  4686                           
  4687                           ; BSR set to: 0
  4688   001F82  5165               	movf	___flmul@aexp& (0+255),w,b
  4689   001F84  B4D8               	btfsc	status,2,c
  4690   001F86  EFC7  F00F         	goto	u3401
  4691   001F8A  EFC9  F00F         	goto	u3400
  4692   001F8E                     u3401:
  4693   001F8E  EFDC  F00F         	goto	l3810
  4694   001F92                     u3400:
  4695   001F92                     
  4696                           ; BSR set to: 0
  4697   001F92  2965               	incf	___flmul@aexp& (0+255),w,b
  4698   001F94  A4D8               	btfss	status,2,c
  4699   001F96  EFCF  F00F         	goto	u3411
  4700   001F9A  EFD1  F00F         	goto	u3410
  4701   001F9E                     u3411:
  4702   001F9E  EFD9  F00F         	goto	l3808
  4703   001FA2                     u3410:
  4704   001FA2                     
  4705                           ; BSR set to: 0
  4706   001FA2  0E00               	movlw	0
  4707   001FA4  6E4F               	movwf	___flmul@a^0,c
  4708   001FA6  0E00               	movlw	0
  4709   001FA8  6E50               	movwf	(___flmul@a+1)^0,c
  4710   001FAA  0E00               	movlw	0
  4711   001FAC  6E51               	movwf	(___flmul@a+2)^0,c
  4712   001FAE  0E00               	movlw	0
  4713   001FB0  6E52               	movwf	(___flmul@a+3)^0,c
  4714   001FB2                     l3808:
  4715                           
  4716                           ; BSR set to: 0
  4717   001FB2  8E51               	bsf	(___flmul@a+2)^0,7,c
  4718   001FB4  EFE4  F00F         	goto	l1197
  4719   001FB8                     l3810:
  4720                           
  4721                           ; BSR set to: 0
  4722   001FB8  0E00               	movlw	0
  4723   001FBA  6E4F               	movwf	___flmul@a^0,c
  4724   001FBC  0E00               	movlw	0
  4725   001FBE  6E50               	movwf	(___flmul@a+1)^0,c
  4726   001FC0  0E00               	movlw	0
  4727   001FC2  6E51               	movwf	(___flmul@a+2)^0,c
  4728   001FC4  0E00               	movlw	0
  4729   001FC6  6E52               	movwf	(___flmul@a+3)^0,c
  4730   001FC8                     l1197:
  4731                           
  4732                           ; BSR set to: 0
  4733   001FC8  5165               	movf	___flmul@aexp& (0+255),w,b
  4734   001FCA  B4D8               	btfsc	status,2,c
  4735   001FCC  EFEA  F00F         	goto	u3421
  4736   001FD0  EFEC  F00F         	goto	u3420
  4737   001FD4                     u3421:
  4738   001FD4  EFF4  F00F         	goto	l3814
  4739   001FD8                     u3420:
  4740   001FD8                     
  4741                           ; BSR set to: 0
  4742   001FD8  5166               	movf	___flmul@bexp& (0+255),w,b
  4743   001FDA  A4D8               	btfss	status,2,c
  4744   001FDC  EFF2  F00F         	goto	u3431
  4745   001FE0  EFF4  F00F         	goto	u3430
  4746   001FE4                     u3431:
  4747   001FE4  EFFE  F00F         	goto	l3818
  4748   001FE8                     u3430:
  4749   001FE8                     l3814:
  4750                           
  4751                           ; BSR set to: 0
  4752   001FE8  0E00               	movlw	0
  4753   001FEA  6E4B               	movwf	?___flmul^0,c
  4754   001FEC  0E00               	movlw	0
  4755   001FEE  6E4C               	movwf	(?___flmul+1)^0,c
  4756   001FF0  0E00               	movlw	0
  4757   001FF2  6E4D               	movwf	(?___flmul+2)^0,c
  4758   001FF4  0E00               	movlw	0
  4759   001FF6  6E4E               	movwf	(?___flmul+3)^0,c
  4760   001FF8  EF96  F011         	goto	l1201
  4761   001FFC                     l3818:
  4762                           
  4763                           ; BSR set to: 0
  4764   001FFC  5051               	movf	(___flmul@a+2)^0,w,c
  4765   001FFE  024B               	mulwf	___flmul@b^0,c
  4766   002000  CFF3 F06B          	movff	prodl,___flmul@temp
  4767   002004  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4768   002008                     
  4769                           ; BSR set to: 0
  4770   002008  516B               	movf	___flmul@temp& (0+255),w,b
  4771   00200A  6F61               	movwf	___flmul@grs& (0+255),b
  4772   00200C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  4773   00200E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  4774   002010  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  4775   002012                     
  4776                           ; BSR set to: 0
  4777   002012  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4778   002014  6F67               	movwf	___flmul@prod& (0+255),b
  4779   002016  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  4780   002018  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  4781   00201A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  4782   00201C  5050               	movf	(___flmul@a+1)^0,w,c
  4783   00201E  024C               	mulwf	(___flmul@b+1)^0,c
  4784   002020  CFF3 F06B          	movff	prodl,___flmul@temp
  4785   002024  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4786   002028                     
  4787                           ; BSR set to: 0
  4788   002028  516B               	movf	___flmul@temp& (0+255),w,b
  4789   00202A  2761               	addwf	___flmul@grs& (0+255),f,b
  4790   00202C  0E00               	movlw	0
  4791   00202E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4792   002030  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4793   002032  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4794   002034                     
  4795                           ; BSR set to: 0
  4796   002034  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4797   002036  2767               	addwf	___flmul@prod& (0+255),f,b
  4798   002038  0E00               	movlw	0
  4799   00203A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4800   00203C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4801   00203E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4802   002040  504F               	movf	___flmul@a^0,w,c
  4803   002042  024D               	mulwf	(___flmul@b+2)^0,c
  4804   002044  CFF3 F06B          	movff	prodl,___flmul@temp
  4805   002048  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4806   00204C                     
  4807                           ; BSR set to: 0
  4808   00204C  516B               	movf	___flmul@temp& (0+255),w,b
  4809   00204E  2761               	addwf	___flmul@grs& (0+255),f,b
  4810   002050  0E00               	movlw	0
  4811   002052  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4812   002054  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4813   002056  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4814   002058                     
  4815                           ; BSR set to: 0
  4816   002058  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4817   00205A  2767               	addwf	___flmul@prod& (0+255),f,b
  4818   00205C  0E00               	movlw	0
  4819   00205E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4820   002060  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4821   002062  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4822   002064                     
  4823                           ; BSR set to: 0
  4824   002064  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4825   002068  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4826   00206C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4827   002070  6B61               	clrf	___flmul@grs& (0+255),b
  4828   002072                     
  4829                           ; BSR set to: 0
  4830   002072  504F               	movf	___flmul@a^0,w,c
  4831   002074  024C               	mulwf	(___flmul@b+1)^0,c
  4832   002076  CFF3 F06B          	movff	prodl,___flmul@temp
  4833   00207A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4834   00207E                     
  4835                           ; BSR set to: 0
  4836   00207E  516B               	movf	___flmul@temp& (0+255),w,b
  4837   002080  2761               	addwf	___flmul@grs& (0+255),f,b
  4838   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4839   002084  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4840   002086  0E00               	movlw	0
  4841   002088  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4842   00208A  0E00               	movlw	0
  4843   00208C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4844   00208E                     
  4845                           ; BSR set to: 0
  4846   00208E  5050               	movf	(___flmul@a+1)^0,w,c
  4847   002090  024B               	mulwf	___flmul@b^0,c
  4848   002092  CFF3 F06B          	movff	prodl,___flmul@temp
  4849   002096  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4850   00209A                     
  4851                           ; BSR set to: 0
  4852   00209A  516B               	movf	___flmul@temp& (0+255),w,b
  4853   00209C  2761               	addwf	___flmul@grs& (0+255),f,b
  4854   00209E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4855   0020A0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4856   0020A2  0E00               	movlw	0
  4857   0020A4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4858   0020A6  0E00               	movlw	0
  4859   0020A8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4860   0020AA                     
  4861                           ; BSR set to: 0
  4862   0020AA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4863   0020AE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4864   0020B2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4865   0020B6  6B61               	clrf	___flmul@grs& (0+255),b
  4866   0020B8  504F               	movf	___flmul@a^0,w,c
  4867   0020BA  024B               	mulwf	___flmul@b^0,c
  4868   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  4869   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4870   0020C4                     
  4871                           ; BSR set to: 0
  4872   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  4873   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  4874   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4875   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4876   0020CC  0E00               	movlw	0
  4877   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4878   0020D0  0E00               	movlw	0
  4879   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4880   0020D4                     
  4881                           ; BSR set to: 0
  4882   0020D4  5051               	movf	(___flmul@a+2)^0,w,c
  4883   0020D6  024C               	mulwf	(___flmul@b+1)^0,c
  4884   0020D8  CFF3 F06B          	movff	prodl,___flmul@temp
  4885   0020DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4886   0020E0  516B               	movf	___flmul@temp& (0+255),w,b
  4887   0020E2  2767               	addwf	___flmul@prod& (0+255),f,b
  4888   0020E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4889   0020E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4890   0020E8  0E00               	movlw	0
  4891   0020EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4892   0020EC  0E00               	movlw	0
  4893   0020EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4894   0020F0                     
  4895                           ; BSR set to: 0
  4896   0020F0  5050               	movf	(___flmul@a+1)^0,w,c
  4897   0020F2  024D               	mulwf	(___flmul@b+2)^0,c
  4898   0020F4  CFF3 F06B          	movff	prodl,___flmul@temp
  4899   0020F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4900   0020FC                     
  4901                           ; BSR set to: 0
  4902   0020FC  516B               	movf	___flmul@temp& (0+255),w,b
  4903   0020FE  2767               	addwf	___flmul@prod& (0+255),f,b
  4904   002100  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4905   002102  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4906   002104  0E00               	movlw	0
  4907   002106  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4908   002108  0E00               	movlw	0
  4909   00210A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4910   00210C  5051               	movf	(___flmul@a+2)^0,w,c
  4911   00210E  024D               	mulwf	(___flmul@b+2)^0,c
  4912   002110  CFF3 F06B          	movff	prodl,___flmul@temp
  4913   002114  CFF4 F06C          	movff	prodh,___flmul@temp+1
  4914   002118                     
  4915                           ; BSR set to: 0
  4916   002118  516B               	movf	___flmul@temp& (0+255),w,b
  4917   00211A  6E53               	movwf	??___flmul^0,c
  4918   00211C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  4919   00211E  6E54               	movwf	(??___flmul+1)^0,c
  4920   002120  6A55               	clrf	(??___flmul+2)^0,c
  4921   002122  6A56               	clrf	(??___flmul+3)^0,c
  4922   002124  C055  F056         	movff	??___flmul+2,??___flmul+3
  4923   002128  C054  F055         	movff	??___flmul+1,??___flmul+2
  4924   00212C  C053  F054         	movff	??___flmul,??___flmul+1
  4925   002130  6A53               	clrf	??___flmul^0,c
  4926   002132  5053               	movf	??___flmul^0,w,c
  4927   002134  2767               	addwf	___flmul@prod& (0+255),f,b
  4928   002136  5054               	movf	(??___flmul+1)^0,w,c
  4929   002138  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4930   00213A  5055               	movf	(??___flmul+2)^0,w,c
  4931   00213C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4932   00213E  5056               	movf	(??___flmul+3)^0,w,c
  4933   002140  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4934   002142                     
  4935                           ; BSR set to: 0
  4936   002142  C061  F053         	movff	___flmul@grs,??___flmul
  4937   002146  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  4938   00214A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  4939   00214E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  4940   002152  0E19               	movlw	25
  4941   002154  EFB1  F010         	goto	u3440
  4942   002158                     u3445:
  4943   002158  90D8               	bcf	status,0,c
  4944   00215A  3256               	rrcf	(??___flmul+3)^0,f,c
  4945   00215C  3255               	rrcf	(??___flmul+2)^0,f,c
  4946   00215E  3254               	rrcf	(??___flmul+1)^0,f,c
  4947   002160  3253               	rrcf	??___flmul^0,f,c
  4948   002162                     u3440:
  4949   002162  2EE8               	decfsz	wreg,f,c
  4950   002164  EFAC  F010         	goto	u3445
  4951   002168  5053               	movf	??___flmul^0,w,c
  4952   00216A  2767               	addwf	___flmul@prod& (0+255),f,b
  4953   00216C  5054               	movf	(??___flmul+1)^0,w,c
  4954   00216E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4955   002170  5055               	movf	(??___flmul+2)^0,w,c
  4956   002172  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4957   002174  5056               	movf	(??___flmul+3)^0,w,c
  4958   002176  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4959   002178                     
  4960                           ; BSR set to: 0
  4961   002178  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  4962   00217C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  4963   002180  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  4964   002184  6B61               	clrf	___flmul@grs& (0+255),b
  4965   002186                     
  4966                           ; BSR set to: 0
  4967   002186  5165               	movf	___flmul@aexp& (0+255),w,b
  4968   002188  C066  F053         	movff	___flmul@bexp,??___flmul
  4969   00218C  6A54               	clrf	(??___flmul+1)^0,c
  4970   00218E  2653               	addwf	??___flmul^0,f,c
  4971   002190  0E00               	movlw	0
  4972   002192  2254               	addwfc	(??___flmul+1)^0,f,c
  4973   002194  0E82               	movlw	130
  4974   002196  2453               	addwf	??___flmul^0,w,c
  4975   002198  6F6B               	movwf	___flmul@temp& (0+255),b
  4976   00219A  0EFF               	movlw	255
  4977   00219C  2054               	addwfc	(??___flmul+1)^0,w,c
  4978   00219E  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  4979   0021A0  EFE7  F010         	goto	l3866
  4980   0021A4                     l3860:
  4981                           
  4982                           ; BSR set to: 0
  4983   0021A4  90D8               	bcf	status,0,c
  4984   0021A6  3767               	rlcf	___flmul@prod& (0+255),f,b
  4985   0021A8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  4986   0021AA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  4987   0021AC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  4988   0021AE                     
  4989                           ; BSR set to: 0
  4990   0021AE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  4991   0021B0  EFDC  F010         	goto	u3451
  4992   0021B4  EFDE  F010         	goto	u3450
  4993   0021B8                     u3451:
  4994   0021B8  EFDF  F010         	goto	l1204
  4995   0021BC                     u3450:
  4996   0021BC                     
  4997                           ; BSR set to: 0
  4998   0021BC  8167               	bsf	___flmul@prod& (0+255),0,b
  4999   0021BE                     l1204:
  5000                           
  5001                           ; BSR set to: 0
  5002   0021BE  90D8               	bcf	status,0,c
  5003   0021C0  3761               	rlcf	___flmul@grs& (0+255),f,b
  5004   0021C2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5005   0021C4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5006   0021C6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5007   0021C8  076B               	decf	___flmul@temp& (0+255),f,b
  5008   0021CA  A0D8               	btfss	status,0,c
  5009   0021CC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  5010   0021CE                     l3866:
  5011                           
  5012                           ; BSR set to: 0
  5013   0021CE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  5014   0021D0  EFEC  F010         	goto	u3461
  5015   0021D4  EFEE  F010         	goto	u3460
  5016   0021D8                     u3461:
  5017   0021D8  EFD2  F010         	goto	l3860
  5018   0021DC                     u3460:
  5019   0021DC                     
  5020                           ; BSR set to: 0
  5021   0021DC  0E00               	movlw	0
  5022   0021DE  6F65               	movwf	___flmul@aexp& (0+255),b
  5023   0021E0                     
  5024                           ; BSR set to: 0
  5025   0021E0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  5026   0021E2  EFF5  F010         	goto	u3471
  5027   0021E6  EFF7  F010         	goto	u3470
  5028   0021EA                     u3471:
  5029   0021EA  EF1B  F011         	goto	l1206
  5030   0021EE                     u3470:
  5031   0021EE                     
  5032                           ; BSR set to: 0
  5033   0021EE  0EFF               	movlw	255
  5034   0021F0  1561               	andwf	___flmul@grs& (0+255),w,b
  5035   0021F2  6E53               	movwf	??___flmul^0,c
  5036   0021F4  0EFF               	movlw	255
  5037   0021F6  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  5038   0021F8  6E54               	movwf	(??___flmul+1)^0,c
  5039   0021FA  0EFF               	movlw	255
  5040   0021FC  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  5041   0021FE  6E55               	movwf	(??___flmul+2)^0,c
  5042   002200  0E7F               	movlw	127
  5043   002202  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  5044   002204  6E56               	movwf	(??___flmul+3)^0,c
  5045   002206  5053               	movf	??___flmul^0,w,c
  5046   002208  1054               	iorwf	(??___flmul+1)^0,w,c
  5047   00220A  1055               	iorwf	(??___flmul+2)^0,w,c
  5048   00220C  1056               	iorwf	(??___flmul+3)^0,w,c
  5049   00220E  B4D8               	btfsc	status,2,c
  5050   002210  EF0C  F011         	goto	u3481
  5051   002214  EF0E  F011         	goto	u3480
  5052   002218                     u3481:
  5053   002218  EF12  F011         	goto	l1207
  5054   00221C                     u3480:
  5055   00221C                     l3874:
  5056                           
  5057                           ; BSR set to: 0
  5058   00221C  0E01               	movlw	1
  5059   00221E  6F65               	movwf	___flmul@aexp& (0+255),b
  5060   002220  EF1B  F011         	goto	l1206
  5061   002224                     l1207:
  5062                           
  5063                           ; BSR set to: 0
  5064   002224  A167               	btfss	___flmul@prod& (0+255),0,b
  5065   002226  EF17  F011         	goto	u3491
  5066   00222A  EF19  F011         	goto	u3490
  5067   00222E                     u3491:
  5068   00222E  EF1B  F011         	goto	l1206
  5069   002232                     u3490:
  5070   002232  EF0E  F011         	goto	l3874
  5071   002236                     l1206:
  5072                           
  5073                           ; BSR set to: 0
  5074   002236  5165               	movf	___flmul@aexp& (0+255),w,b
  5075   002238  B4D8               	btfsc	status,2,c
  5076   00223A  EF21  F011         	goto	u3501
  5077   00223E  EF23  F011         	goto	u3500
  5078   002242                     u3501:
  5079   002242  EF47  F011         	goto	l3886
  5080   002246                     u3500:
  5081   002246                     
  5082                           ; BSR set to: 0
  5083   002246  0E01               	movlw	1
  5084   002248  2767               	addwf	___flmul@prod& (0+255),f,b
  5085   00224A  0E00               	movlw	0
  5086   00224C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5087   00224E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5088   002250  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5089   002252                     
  5090                           ; BSR set to: 0
  5091   002252  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5092   002254  EF2E  F011         	goto	u3511
  5093   002258  EF30  F011         	goto	u3510
  5094   00225C                     u3511:
  5095   00225C  EF47  F011         	goto	l3886
  5096   002260                     u3510:
  5097   002260                     
  5098                           ; BSR set to: 0
  5099   002260  C067  F053         	movff	___flmul@prod,??___flmul
  5100   002264  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  5101   002268  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  5102   00226C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  5103   002270  3456               	rlcf	(??___flmul+3)^0,w,c
  5104   002272  3256               	rrcf	(??___flmul+3)^0,f,c
  5105   002274  3255               	rrcf	(??___flmul+2)^0,f,c
  5106   002276  3254               	rrcf	(??___flmul+1)^0,f,c
  5107   002278  3253               	rrcf	??___flmul^0,f,c
  5108   00227A  C053  F067         	movff	??___flmul,___flmul@prod
  5109   00227E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  5110   002282  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  5111   002286  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  5112   00228A                     
  5113                           ; BSR set to: 0
  5114   00228A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  5115   00228C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  5116   00228E                     l3886:
  5117                           
  5118                           ; BSR set to: 0
  5119   00228E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5120   002290  EF52  F011         	goto	u3521
  5121   002294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5122   002296  E108               	bnz	u3520
  5123   002298  296B               	incf	___flmul@temp& (0+255),w,b
  5124   00229A  A0D8               	btfss	status,0,c
  5125   00229C  EF52  F011         	goto	u3521
  5126   0022A0  EF54  F011         	goto	u3520
  5127   0022A4                     u3521:
  5128   0022A4  EF5E  F011         	goto	l3890
  5129   0022A8                     u3520:
  5130   0022A8                     
  5131                           ; BSR set to: 0
  5132   0022A8  0E00               	movlw	0
  5133   0022AA  6F67               	movwf	___flmul@prod& (0+255),b
  5134   0022AC  0E00               	movlw	0
  5135   0022AE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5136   0022B0  0E80               	movlw	128
  5137   0022B2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5138   0022B4  0E7F               	movlw	127
  5139   0022B6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5140   0022B8  EF8C  F011         	goto	l3902
  5141   0022BC                     l3890:
  5142                           
  5143                           ; BSR set to: 0
  5144   0022BC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5145   0022BE  EF6B  F011         	goto	u3530
  5146   0022C2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  5147   0022C4  E106               	bnz	u3531
  5148   0022C6  056B               	decf	___flmul@temp& (0+255),w,b
  5149   0022C8  B0D8               	btfsc	status,0,c
  5150   0022CA  EF69  F011         	goto	u3531
  5151   0022CE  EF6B  F011         	goto	u3530
  5152   0022D2                     u3531:
  5153   0022D2  EF77  F011         	goto	l1214
  5154   0022D6                     u3530:
  5155   0022D6                     
  5156                           ; BSR set to: 0
  5157   0022D6  0E00               	movlw	0
  5158   0022D8  6F67               	movwf	___flmul@prod& (0+255),b
  5159   0022DA  0E00               	movlw	0
  5160   0022DC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  5161   0022DE  0E00               	movlw	0
  5162   0022E0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  5163   0022E2  0E00               	movlw	0
  5164   0022E4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5165   0022E6  0E00               	movlw	0
  5166   0022E8  6F60               	movwf	___flmul@sign& (0+255),b
  5167   0022EA  EF8C  F011         	goto	l3902
  5168   0022EE                     l1214:
  5169                           
  5170                           ; BSR set to: 0
  5171   0022EE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  5172   0022F2                     
  5173                           ; BSR set to: 0
  5174   0022F2  0EFF               	movlw	255
  5175   0022F4  1767               	andwf	___flmul@prod& (0+255),f,b
  5176   0022F6  0EFF               	movlw	255
  5177   0022F8  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  5178   0022FA  0E7F               	movlw	127
  5179   0022FC  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  5180   0022FE  0E00               	movlw	0
  5181   002300  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5182   002302                     
  5183                           ; BSR set to: 0
  5184   002302  A166               	btfss	___flmul@bexp& (0+255),0,b
  5185   002304  EF86  F011         	goto	u3541
  5186   002308  EF88  F011         	goto	u3540
  5187   00230C                     u3541:
  5188   00230C  EF89  F011         	goto	l3900
  5189   002310                     u3540:
  5190   002310                     
  5191                           ; BSR set to: 0
  5192   002310  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  5193   002312                     l3900:
  5194                           
  5195                           ; BSR set to: 0
  5196   002312  90D8               	bcf	status,0,c
  5197   002314  3166               	rrcf	___flmul@bexp& (0+255),w,b
  5198   002316  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  5199   002318                     l3902:
  5200                           
  5201                           ; BSR set to: 0
  5202   002318  5160               	movf	___flmul@sign& (0+255),w,b
  5203   00231A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5204   00231C                     
  5205                           ; BSR set to: 0
  5206   00231C  C067  F04B         	movff	___flmul@prod,?___flmul
  5207   002320  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  5208   002324  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  5209   002328  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  5210   00232C                     l1201:
  5211                           
  5212                           ; BSR set to: 0
  5213   00232C  0012               	return		;funcret
  5214   00232E                     __end_of___flmul:
  5215                           	callstack 0
  5216                           
  5217 ;; *************** function ___fleq *****************
  5218 ;; Defined at:
  5219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  ff1             4    0[COMRAM] unsigned char 
  5222 ;;  ff2             4    4[COMRAM] unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;Total ram usage:       12 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_RGB2Hue
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text23
  5248   003740                     __ptext23:
  5249                           	callstack 0
  5250   003740                     ___fleq:
  5251                           	callstack 29
  5252   003740  0E00               	movlw	0
  5253   003742  1401               	andwf	___fleq@ff1^0,w,c
  5254   003744  6E09               	movwf	??___fleq^0,c
  5255   003746  0E00               	movlw	0
  5256   003748  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5257   00374A  6E0A               	movwf	(??___fleq+1)^0,c
  5258   00374C  0E80               	movlw	128
  5259   00374E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5260   003750  6E0B               	movwf	(??___fleq+2)^0,c
  5261   003752  0E7F               	movlw	127
  5262   003754  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5263   003756  6E0C               	movwf	(??___fleq+3)^0,c
  5264   003758  5009               	movf	??___fleq^0,w,c
  5265   00375A  100A               	iorwf	(??___fleq+1)^0,w,c
  5266   00375C  100B               	iorwf	(??___fleq+2)^0,w,c
  5267   00375E  100C               	iorwf	(??___fleq+3)^0,w,c
  5268   003760  A4D8               	btfss	status,2,c
  5269   003762  EFB5  F01B         	goto	u3551
  5270   003766  EFB7  F01B         	goto	u3550
  5271   00376A                     u3551:
  5272   00376A  EFBF  F01B         	goto	l3918
  5273   00376E                     u3550:
  5274   00376E  0E00               	movlw	0
  5275   003770  6E01               	movwf	___fleq@ff1^0,c
  5276   003772  0E00               	movlw	0
  5277   003774  6E02               	movwf	(___fleq@ff1+1)^0,c
  5278   003776  0E00               	movlw	0
  5279   003778  6E03               	movwf	(___fleq@ff1+2)^0,c
  5280   00377A  0E00               	movlw	0
  5281   00377C  6E04               	movwf	(___fleq@ff1+3)^0,c
  5282   00377E                     l3918:
  5283   00377E  0E00               	movlw	0
  5284   003780  1405               	andwf	___fleq@ff2^0,w,c
  5285   003782  6E09               	movwf	??___fleq^0,c
  5286   003784  0E00               	movlw	0
  5287   003786  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5288   003788  6E0A               	movwf	(??___fleq+1)^0,c
  5289   00378A  0E80               	movlw	128
  5290   00378C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5291   00378E  6E0B               	movwf	(??___fleq+2)^0,c
  5292   003790  0E7F               	movlw	127
  5293   003792  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5294   003794  6E0C               	movwf	(??___fleq+3)^0,c
  5295   003796  5009               	movf	??___fleq^0,w,c
  5296   003798  100A               	iorwf	(??___fleq+1)^0,w,c
  5297   00379A  100B               	iorwf	(??___fleq+2)^0,w,c
  5298   00379C  100C               	iorwf	(??___fleq+3)^0,w,c
  5299   00379E  A4D8               	btfss	status,2,c
  5300   0037A0  EFD4  F01B         	goto	u3561
  5301   0037A4  EFD6  F01B         	goto	u3560
  5302   0037A8                     u3561:
  5303   0037A8  EFDE  F01B         	goto	l3922
  5304   0037AC                     u3560:
  5305   0037AC  0E00               	movlw	0
  5306   0037AE  6E05               	movwf	___fleq@ff2^0,c
  5307   0037B0  0E00               	movlw	0
  5308   0037B2  6E06               	movwf	(___fleq@ff2+1)^0,c
  5309   0037B4  0E00               	movlw	0
  5310   0037B6  6E07               	movwf	(___fleq@ff2+2)^0,c
  5311   0037B8  0E00               	movlw	0
  5312   0037BA  6E08               	movwf	(___fleq@ff2+3)^0,c
  5313   0037BC                     l3922:
  5314   0037BC  5005               	movf	___fleq@ff2^0,w,c
  5315   0037BE  1801               	xorwf	___fleq@ff1^0,w,c
  5316   0037C0  E10F               	bnz	u3570
  5317   0037C2  5006               	movf	(___fleq@ff2+1)^0,w,c
  5318   0037C4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5319   0037C6  E10C               	bnz	u3570
  5320   0037C8  5007               	movf	(___fleq@ff2+2)^0,w,c
  5321   0037CA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5322   0037CC  E109               	bnz	u3570
  5323   0037CE  5008               	movf	(___fleq@ff2+3)^0,w,c
  5324   0037D0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5325   0037D2  B4D8               	btfsc	status,2,c
  5326   0037D4  EFEE  F01B         	goto	u3571
  5327   0037D8  EFF0  F01B         	goto	u3570
  5328   0037DC                     u3571:
  5329   0037DC  EFF3  F01B         	goto	l3926
  5330   0037E0                     u3570:
  5331   0037E0  90D8               	bcf	status,0,c
  5332   0037E2  EFF4  F01B         	goto	l842
  5333   0037E6                     l3926:
  5334   0037E6  80D8               	bsf	status,0,c
  5335   0037E8                     l842:
  5336   0037E8  0012               	return		;funcret
  5337   0037EA                     __end_of___fleq:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function ___fldiv *****************
  5341 ;; Defined at:
  5342 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  b               4   49[COMRAM] unsigned char 
  5345 ;;  a               4   53[COMRAM] unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  grs             4   68[COMRAM] unsigned long 
  5348 ;;  rem             4   61[COMRAM] unsigned long 
  5349 ;;  new_exp         2   66[COMRAM] short 
  5350 ;;  aexp            1   73[COMRAM] unsigned char 
  5351 ;;  bexp            1   72[COMRAM] unsigned char 
  5352 ;;  sign            1   65[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  4   49[COMRAM] unsigned char 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;Total ram usage:       25 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_RGB2Hue
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text24
  5376   00232E                     __ptext24:
  5377                           	callstack 0
  5378   00232E                     ___fldiv:
  5379                           	callstack 29
  5380   00232E  5035               	movf	(___fldiv@b+3)^0,w,c
  5381   002330  0B80               	andlw	128
  5382   002332  6E42               	movwf	___fldiv@sign^0,c
  5383   002334  5035               	movf	(___fldiv@b+3)^0,w,c
  5384   002336  2435               	addwf	(___fldiv@b+3)^0,w,c
  5385   002338  6E49               	movwf	___fldiv@bexp^0,c
  5386   00233A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5387   00233C  EFA2  F011         	goto	u3131
  5388   002340  EFA4  F011         	goto	u3130
  5389   002344                     u3131:
  5390   002344  EFA5  F011         	goto	l3646
  5391   002348                     u3130:
  5392   002348  8049               	bsf	___fldiv@bexp^0,0,c
  5393   00234A                     l3646:
  5394   00234A  5049               	movf	___fldiv@bexp^0,w,c
  5395   00234C  B4D8               	btfsc	status,2,c
  5396   00234E  EFAB  F011         	goto	u3141
  5397   002352  EFAD  F011         	goto	u3140
  5398   002356                     u3141:
  5399   002356  EFC2  F011         	goto	l3656
  5400   00235A                     u3140:
  5401   00235A  2849               	incf	___fldiv@bexp^0,w,c
  5402   00235C  A4D8               	btfss	status,2,c
  5403   00235E  EFB3  F011         	goto	u3151
  5404   002362  EFB5  F011         	goto	u3150
  5405   002366                     u3151:
  5406   002366  EFBD  F011         	goto	l3652
  5407   00236A                     u3150:
  5408   00236A  0E00               	movlw	0
  5409   00236C  6E32               	movwf	___fldiv@b^0,c
  5410   00236E  0E00               	movlw	0
  5411   002370  6E33               	movwf	(___fldiv@b+1)^0,c
  5412   002372  0E00               	movlw	0
  5413   002374  6E34               	movwf	(___fldiv@b+2)^0,c
  5414   002376  0E00               	movlw	0
  5415   002378  6E35               	movwf	(___fldiv@b+3)^0,c
  5416   00237A                     l3652:
  5417   00237A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5418   00237C  0E00               	movlw	0
  5419   00237E  6E35               	movwf	(___fldiv@b+3)^0,c
  5420   002380  EFCA  F011         	goto	l3658
  5421   002384                     l3656:
  5422   002384  0E00               	movlw	0
  5423   002386  6E32               	movwf	___fldiv@b^0,c
  5424   002388  0E00               	movlw	0
  5425   00238A  6E33               	movwf	(___fldiv@b+1)^0,c
  5426   00238C  0E00               	movlw	0
  5427   00238E  6E34               	movwf	(___fldiv@b+2)^0,c
  5428   002390  0E00               	movlw	0
  5429   002392  6E35               	movwf	(___fldiv@b+3)^0,c
  5430   002394                     l3658:
  5431   002394  5039               	movf	(___fldiv@a+3)^0,w,c
  5432   002396  0B80               	andlw	128
  5433   002398  1A42               	xorwf	___fldiv@sign^0,f,c
  5434   00239A  5039               	movf	(___fldiv@a+3)^0,w,c
  5435   00239C  2439               	addwf	(___fldiv@a+3)^0,w,c
  5436   00239E  6E4A               	movwf	___fldiv@aexp^0,c
  5437   0023A0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  5438   0023A2  EFD5  F011         	goto	u3161
  5439   0023A6  EFD7  F011         	goto	u3160
  5440   0023AA                     u3161:
  5441   0023AA  EFD8  F011         	goto	l3666
  5442   0023AE                     u3160:
  5443   0023AE  804A               	bsf	___fldiv@aexp^0,0,c
  5444   0023B0                     l3666:
  5445   0023B0  504A               	movf	___fldiv@aexp^0,w,c
  5446   0023B2  B4D8               	btfsc	status,2,c
  5447   0023B4  EFDE  F011         	goto	u3171
  5448   0023B8  EFE0  F011         	goto	u3170
  5449   0023BC                     u3171:
  5450   0023BC  EFF5  F011         	goto	l3676
  5451   0023C0                     u3170:
  5452   0023C0  284A               	incf	___fldiv@aexp^0,w,c
  5453   0023C2  A4D8               	btfss	status,2,c
  5454   0023C4  EFE6  F011         	goto	u3181
  5455   0023C8  EFE8  F011         	goto	u3180
  5456   0023CC                     u3181:
  5457   0023CC  EFF0  F011         	goto	l3672
  5458   0023D0                     u3180:
  5459   0023D0  0E00               	movlw	0
  5460   0023D2  6E36               	movwf	___fldiv@a^0,c
  5461   0023D4  0E00               	movlw	0
  5462   0023D6  6E37               	movwf	(___fldiv@a+1)^0,c
  5463   0023D8  0E00               	movlw	0
  5464   0023DA  6E38               	movwf	(___fldiv@a+2)^0,c
  5465   0023DC  0E00               	movlw	0
  5466   0023DE  6E39               	movwf	(___fldiv@a+3)^0,c
  5467   0023E0                     l3672:
  5468   0023E0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  5469   0023E2  0E00               	movlw	0
  5470   0023E4  6E39               	movwf	(___fldiv@a+3)^0,c
  5471   0023E6  EFFD  F011         	goto	l3678
  5472   0023EA                     l3676:
  5473   0023EA  0E00               	movlw	0
  5474   0023EC  6E36               	movwf	___fldiv@a^0,c
  5475   0023EE  0E00               	movlw	0
  5476   0023F0  6E37               	movwf	(___fldiv@a+1)^0,c
  5477   0023F2  0E00               	movlw	0
  5478   0023F4  6E38               	movwf	(___fldiv@a+2)^0,c
  5479   0023F6  0E00               	movlw	0
  5480   0023F8  6E39               	movwf	(___fldiv@a+3)^0,c
  5481   0023FA                     l3678:
  5482   0023FA  5036               	movf	___fldiv@a^0,w,c
  5483   0023FC  1037               	iorwf	(___fldiv@a+1)^0,w,c
  5484   0023FE  1038               	iorwf	(___fldiv@a+2)^0,w,c
  5485   002400  1039               	iorwf	(___fldiv@a+3)^0,w,c
  5486   002402  A4D8               	btfss	status,2,c
  5487   002404  EF06  F012         	goto	u3191
  5488   002408  EF08  F012         	goto	u3190
  5489   00240C                     u3191:
  5490   00240C  EF20  F012         	goto	l3690
  5491   002410                     u3190:
  5492   002410  0E00               	movlw	0
  5493   002412  6E32               	movwf	___fldiv@b^0,c
  5494   002414  0E00               	movlw	0
  5495   002416  6E33               	movwf	(___fldiv@b+1)^0,c
  5496   002418  0E00               	movlw	0
  5497   00241A  6E34               	movwf	(___fldiv@b+2)^0,c
  5498   00241C  0E00               	movlw	0
  5499   00241E  6E35               	movwf	(___fldiv@b+3)^0,c
  5500   002420  0E80               	movlw	128
  5501   002422  1234               	iorwf	(___fldiv@b+2)^0,f,c
  5502   002424  0E7F               	movlw	127
  5503   002426  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5504   002428                     l3684:
  5505   002428  5042               	movf	___fldiv@sign^0,w,c
  5506   00242A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  5507   00242C  C032  F032         	movff	___fldiv@b,?___fldiv
  5508   002430  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  5509   002434  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  5510   002438  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  5511   00243C  EF63  F013         	goto	l1165
  5512   002440                     l3690:
  5513   002440  5049               	movf	___fldiv@bexp^0,w,c
  5514   002442  A4D8               	btfss	status,2,c
  5515   002444  EF26  F012         	goto	u3201
  5516   002448  EF28  F012         	goto	u3200
  5517   00244C                     u3201:
  5518   00244C  EF32  F012         	goto	l3698
  5519   002450                     u3200:
  5520   002450  0E00               	movlw	0
  5521   002452  6E32               	movwf	?___fldiv^0,c
  5522   002454  0E00               	movlw	0
  5523   002456  6E33               	movwf	(?___fldiv+1)^0,c
  5524   002458  0E00               	movlw	0
  5525   00245A  6E34               	movwf	(?___fldiv+2)^0,c
  5526   00245C  0E00               	movlw	0
  5527   00245E  6E35               	movwf	(?___fldiv+3)^0,c
  5528   002460  EF63  F013         	goto	l1165
  5529   002464                     l3698:
  5530   002464  504A               	movf	___fldiv@aexp^0,w,c
  5531   002466  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  5532   00246A  6A3B               	clrf	(??___fldiv+1)^0,c
  5533   00246C  5E3A               	subwf	??___fldiv^0,f,c
  5534   00246E  0E00               	movlw	0
  5535   002470  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  5536   002472  0E7F               	movlw	127
  5537   002474  243A               	addwf	??___fldiv^0,w,c
  5538   002476  6E43               	movwf	___fldiv@new_exp^0,c
  5539   002478  0E00               	movlw	0
  5540   00247A  203B               	addwfc	(??___fldiv+1)^0,w,c
  5541   00247C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5542   00247E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  5543   002482  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  5544   002486  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  5545   00248A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  5546   00248E  0E00               	movlw	0
  5547   002490  6E32               	movwf	___fldiv@b^0,c
  5548   002492  0E00               	movlw	0
  5549   002494  6E33               	movwf	(___fldiv@b+1)^0,c
  5550   002496  0E00               	movlw	0
  5551   002498  6E34               	movwf	(___fldiv@b+2)^0,c
  5552   00249A  0E00               	movlw	0
  5553   00249C  6E35               	movwf	(___fldiv@b+3)^0,c
  5554   00249E  0E00               	movlw	0
  5555   0024A0  6E45               	movwf	___fldiv@grs^0,c
  5556   0024A2  0E00               	movlw	0
  5557   0024A4  6E46               	movwf	(___fldiv@grs+1)^0,c
  5558   0024A6  0E00               	movlw	0
  5559   0024A8  6E47               	movwf	(___fldiv@grs+2)^0,c
  5560   0024AA  0E00               	movlw	0
  5561   0024AC  6E48               	movwf	(___fldiv@grs+3)^0,c
  5562   0024AE  0E00               	movlw	0
  5563   0024B0  6E4A               	movwf	___fldiv@aexp^0,c
  5564   0024B2  EF93  F012         	goto	l1167
  5565   0024B6                     l3708:
  5566   0024B6  504A               	movf	___fldiv@aexp^0,w,c
  5567   0024B8  B4D8               	btfsc	status,2,c
  5568   0024BA  EF61  F012         	goto	u3211
  5569   0024BE  EF63  F012         	goto	u3210
  5570   0024C2                     u3211:
  5571   0024C2  EF7A  F012         	goto	l3716
  5572   0024C6                     u3210:
  5573   0024C6  90D8               	bcf	status,0,c
  5574   0024C8  363E               	rlcf	___fldiv@rem^0,f,c
  5575   0024CA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  5576   0024CC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  5577   0024CE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  5578   0024D0  90D8               	bcf	status,0,c
  5579   0024D2  3632               	rlcf	___fldiv@b^0,f,c
  5580   0024D4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5581   0024D6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5582   0024D8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5583   0024DA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5584   0024DC  EF72  F012         	goto	u3221
  5585   0024E0  EF74  F012         	goto	u3220
  5586   0024E4                     u3221:
  5587   0024E4  EF75  F012         	goto	l1170
  5588   0024E8                     u3220:
  5589   0024E8  8032               	bsf	___fldiv@b^0,0,c
  5590   0024EA                     l1170:
  5591   0024EA  90D8               	bcf	status,0,c
  5592   0024EC  3645               	rlcf	___fldiv@grs^0,f,c
  5593   0024EE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5594   0024F0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5595   0024F2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5596   0024F4                     l3716:
  5597   0024F4  5036               	movf	___fldiv@a^0,w,c
  5598   0024F6  5C3E               	subwf	___fldiv@rem^0,w,c
  5599   0024F8  5037               	movf	(___fldiv@a+1)^0,w,c
  5600   0024FA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  5601   0024FC  5038               	movf	(___fldiv@a+2)^0,w,c
  5602   0024FE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  5603   002500  5039               	movf	(___fldiv@a+3)^0,w,c
  5604   002502  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  5605   002504  A0D8               	btfss	status,0,c
  5606   002506  EF87  F012         	goto	u3231
  5607   00250A  EF89  F012         	goto	u3230
  5608   00250E                     u3231:
  5609   00250E  EF92  F012         	goto	l3722
  5610   002512                     u3230:
  5611   002512  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  5612   002514  5036               	movf	___fldiv@a^0,w,c
  5613   002516  5E3E               	subwf	___fldiv@rem^0,f,c
  5614   002518  5037               	movf	(___fldiv@a+1)^0,w,c
  5615   00251A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  5616   00251C  5038               	movf	(___fldiv@a+2)^0,w,c
  5617   00251E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  5618   002520  5039               	movf	(___fldiv@a+3)^0,w,c
  5619   002522  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  5620   002524                     l3722:
  5621   002524  2A4A               	incf	___fldiv@aexp^0,f,c
  5622   002526                     l1167:
  5623   002526  0E19               	movlw	25
  5624   002528  644A               	cpfsgt	___fldiv@aexp^0,c
  5625   00252A  EF99  F012         	goto	u3241
  5626   00252E  EF9B  F012         	goto	u3240
  5627   002532                     u3241:
  5628   002532  EF5B  F012         	goto	l3708
  5629   002536                     u3240:
  5630   002536  503E               	movf	___fldiv@rem^0,w,c
  5631   002538  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  5632   00253A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  5633   00253C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  5634   00253E  B4D8               	btfsc	status,2,c
  5635   002540  EFA4  F012         	goto	u3251
  5636   002544  EFA6  F012         	goto	u3250
  5637   002548                     u3251:
  5638   002548  EFBE  F012         	goto	l3734
  5639   00254C                     u3250:
  5640   00254C  8045               	bsf	___fldiv@grs^0,0,c
  5641   00254E  EFBE  F012         	goto	l3734
  5642   002552                     l3728:
  5643   002552  90D8               	bcf	status,0,c
  5644   002554  3632               	rlcf	___fldiv@b^0,f,c
  5645   002556  3633               	rlcf	(___fldiv@b+1)^0,f,c
  5646   002558  3634               	rlcf	(___fldiv@b+2)^0,f,c
  5647   00255A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  5648   00255C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5649   00255E  EFB3  F012         	goto	u3261
  5650   002562  EFB5  F012         	goto	u3260
  5651   002566                     u3261:
  5652   002566  EFB6  F012         	goto	l1176
  5653   00256A                     u3260:
  5654   00256A  8032               	bsf	___fldiv@b^0,0,c
  5655   00256C                     l1176:
  5656   00256C  90D8               	bcf	status,0,c
  5657   00256E  3645               	rlcf	___fldiv@grs^0,f,c
  5658   002570  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  5659   002572  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  5660   002574  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  5661   002576  0643               	decf	___fldiv@new_exp^0,f,c
  5662   002578  A0D8               	btfss	status,0,c
  5663   00257A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  5664   00257C                     l3734:
  5665   00257C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  5666   00257E  EFC3  F012         	goto	u3271
  5667   002582  EFC5  F012         	goto	u3270
  5668   002586                     u3271:
  5669   002586  EFA9  F012         	goto	l3728
  5670   00258A                     u3270:
  5671   00258A  0E00               	movlw	0
  5672   00258C  6E4A               	movwf	___fldiv@aexp^0,c
  5673   00258E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  5674   002590  EFCC  F012         	goto	u3281
  5675   002594  EFCE  F012         	goto	u3280
  5676   002598                     u3281:
  5677   002598  EFF2  F012         	goto	l1178
  5678   00259C                     u3280:
  5679   00259C  0EFF               	movlw	255
  5680   00259E  1445               	andwf	___fldiv@grs^0,w,c
  5681   0025A0  6E3A               	movwf	??___fldiv^0,c
  5682   0025A2  0EFF               	movlw	255
  5683   0025A4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  5684   0025A6  6E3B               	movwf	(??___fldiv+1)^0,c
  5685   0025A8  0EFF               	movlw	255
  5686   0025AA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  5687   0025AC  6E3C               	movwf	(??___fldiv+2)^0,c
  5688   0025AE  0E7F               	movlw	127
  5689   0025B0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  5690   0025B2  6E3D               	movwf	(??___fldiv+3)^0,c
  5691   0025B4  503A               	movf	??___fldiv^0,w,c
  5692   0025B6  103B               	iorwf	(??___fldiv+1)^0,w,c
  5693   0025B8  103C               	iorwf	(??___fldiv+2)^0,w,c
  5694   0025BA  103D               	iorwf	(??___fldiv+3)^0,w,c
  5695   0025BC  B4D8               	btfsc	status,2,c
  5696   0025BE  EFE3  F012         	goto	u3291
  5697   0025C2  EFE5  F012         	goto	u3290
  5698   0025C6                     u3291:
  5699   0025C6  EFE9  F012         	goto	l1179
  5700   0025CA                     u3290:
  5701   0025CA                     l3742:
  5702   0025CA  0E01               	movlw	1
  5703   0025CC  6E4A               	movwf	___fldiv@aexp^0,c
  5704   0025CE  EFF2  F012         	goto	l1178
  5705   0025D2                     l1179:
  5706   0025D2  A032               	btfss	___fldiv@b^0,0,c
  5707   0025D4  EFEE  F012         	goto	u3301
  5708   0025D8  EFF0  F012         	goto	u3300
  5709   0025DC                     u3301:
  5710   0025DC  EFF2  F012         	goto	l1178
  5711   0025E0                     u3300:
  5712   0025E0  EFE5  F012         	goto	l3742
  5713   0025E4                     l1178:
  5714   0025E4  504A               	movf	___fldiv@aexp^0,w,c
  5715   0025E6  B4D8               	btfsc	status,2,c
  5716   0025E8  EFF8  F012         	goto	u3311
  5717   0025EC  EFFA  F012         	goto	u3310
  5718   0025F0                     u3311:
  5719   0025F0  EF1E  F013         	goto	l3754
  5720   0025F4                     u3310:
  5721   0025F4  0E01               	movlw	1
  5722   0025F6  2632               	addwf	___fldiv@b^0,f,c
  5723   0025F8  0E00               	movlw	0
  5724   0025FA  2233               	addwfc	(___fldiv@b+1)^0,f,c
  5725   0025FC  2234               	addwfc	(___fldiv@b+2)^0,f,c
  5726   0025FE  2235               	addwfc	(___fldiv@b+3)^0,f,c
  5727   002600  A035               	btfss	(___fldiv@b+3)^0,0,c
  5728   002602  EF05  F013         	goto	u3321
  5729   002606  EF07  F013         	goto	u3320
  5730   00260A                     u3321:
  5731   00260A  EF1E  F013         	goto	l3754
  5732   00260E                     u3320:
  5733   00260E  C032  F03A         	movff	___fldiv@b,??___fldiv
  5734   002612  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  5735   002616  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  5736   00261A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  5737   00261E  343D               	rlcf	(??___fldiv+3)^0,w,c
  5738   002620  323D               	rrcf	(??___fldiv+3)^0,f,c
  5739   002622  323C               	rrcf	(??___fldiv+2)^0,f,c
  5740   002624  323B               	rrcf	(??___fldiv+1)^0,f,c
  5741   002626  323A               	rrcf	??___fldiv^0,f,c
  5742   002628  C03A  F032         	movff	??___fldiv,___fldiv@b
  5743   00262C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  5744   002630  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  5745   002634  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  5746   002638  4A43               	infsnz	___fldiv@new_exp^0,f,c
  5747   00263A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  5748   00263C                     l3754:
  5749   00263C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5750   00263E  EF29  F013         	goto	u3331
  5751   002642  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5752   002644  E108               	bnz	u3330
  5753   002646  2843               	incf	___fldiv@new_exp^0,w,c
  5754   002648  A0D8               	btfss	status,0,c
  5755   00264A  EF29  F013         	goto	u3331
  5756   00264E  EF2B  F013         	goto	u3330
  5757   002652                     u3331:
  5758   002652  EF36  F013         	goto	l3758
  5759   002656                     u3330:
  5760   002656  0E00               	movlw	0
  5761   002658  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5762   00265A  6843               	setf	___fldiv@new_exp^0,c
  5763   00265C  0E00               	movlw	0
  5764   00265E  6E32               	movwf	___fldiv@b^0,c
  5765   002660  0E00               	movlw	0
  5766   002662  6E33               	movwf	(___fldiv@b+1)^0,c
  5767   002664  0E00               	movlw	0
  5768   002666  6E34               	movwf	(___fldiv@b+2)^0,c
  5769   002668  0E00               	movlw	0
  5770   00266A  6E35               	movwf	(___fldiv@b+3)^0,c
  5771   00266C                     l3758:
  5772   00266C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5773   00266E  EF43  F013         	goto	u3340
  5774   002672  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  5775   002674  E106               	bnz	u3341
  5776   002676  0443               	decf	___fldiv@new_exp^0,w,c
  5777   002678  B0D8               	btfsc	status,0,c
  5778   00267A  EF41  F013         	goto	u3341
  5779   00267E  EF43  F013         	goto	u3340
  5780   002682                     u3341:
  5781   002682  EF51  F013         	goto	l3762
  5782   002686                     u3340:
  5783   002686  0E00               	movlw	0
  5784   002688  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  5785   00268A  0E00               	movlw	0
  5786   00268C  6E43               	movwf	___fldiv@new_exp^0,c
  5787   00268E  0E00               	movlw	0
  5788   002690  6E32               	movwf	___fldiv@b^0,c
  5789   002692  0E00               	movlw	0
  5790   002694  6E33               	movwf	(___fldiv@b+1)^0,c
  5791   002696  0E00               	movlw	0
  5792   002698  6E34               	movwf	(___fldiv@b+2)^0,c
  5793   00269A  0E00               	movlw	0
  5794   00269C  6E35               	movwf	(___fldiv@b+3)^0,c
  5795   00269E  0E00               	movlw	0
  5796   0026A0  6E42               	movwf	___fldiv@sign^0,c
  5797   0026A2                     l3762:
  5798   0026A2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  5799   0026A6  A049               	btfss	___fldiv@bexp^0,0,c
  5800   0026A8  EF58  F013         	goto	u3351
  5801   0026AC  EF5A  F013         	goto	u3350
  5802   0026B0                     u3351:
  5803   0026B0  EF5D  F013         	goto	l3768
  5804   0026B4                     u3350:
  5805   0026B4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  5806   0026B6  EF5E  F013         	goto	l3770
  5807   0026BA                     l3768:
  5808   0026BA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  5809   0026BC                     l3770:
  5810   0026BC  90D8               	bcf	status,0,c
  5811   0026BE  3049               	rrcf	___fldiv@bexp^0,w,c
  5812   0026C0  6E35               	movwf	(___fldiv@b+3)^0,c
  5813   0026C2  EF14  F012         	goto	l3684
  5814   0026C6                     l1165:
  5815   0026C6  0012               	return		;funcret
  5816   0026C8                     __end_of___fldiv:
  5817                           	callstack 0
  5818                           
  5819 ;; *************** function _LED_init *****************
  5820 ;; Defined at:
  5821 ;;		line 4 in file "LED.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;		None
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      void 
  5828 ;; Registers used:
  5829 ;;		None
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;Total ram usage:        0 bytes
  5840 ;; Hardware stack levels used: 1
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text25
  5849   004484                     __ptext25:
  5850                           	callstack 0
  5851   004484                     _LED_init:
  5852                           	callstack 30
  5853   004484                     
  5854                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5855   004484  9884               	bcf	132,4,c	;volatile
  5856                           
  5857                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5858   004486  9088               	bcf	136,0,c	;volatile
  5859                           
  5860                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5861   004488  9086               	bcf	134,0,c	;volatile
  5862                           
  5863                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5864   00448A  987C               	bcf	124,4,c	;volatile
  5865                           
  5866                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5867   00448C  9080               	bcf	128,0,c	;volatile
  5868                           
  5869                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5870   00448E  907E               	bcf	126,0,c	;volatile
  5871   004490  0012               	return		;funcret
  5872   004492                     __end_of_LED_init:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _Colour2Action *****************
  5876 ;; Defined at:
  5877 ;;		line 105 in file "colorfunctions.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  cf              2   39[COMRAM] PTR struct RGBC_rel
  5880 ;;		 -> colorf(22), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;Total ram usage:        4 bytes
  5897 ;; Hardware stack levels used: 1
  5898 ;; Hardware stack levels required when called: 6
  5899 ;; This function calls:
  5900 ;;		_Blue_T180
  5901 ;;		_Green_L90
  5902 ;;		_LightBlue_L135
  5903 ;;		_Orange_R135
  5904 ;;		_Pink_rev1_L90
  5905 ;;		_Red_R90
  5906 ;;		_Yellow_rev1_R90
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text26
  5913   002A6E                     __ptext26:
  5914                           	callstack 0
  5915   002A6E                     _Colour2Action:
  5916                           	callstack 24
  5917   002A6E                     
  5918                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  5919   002A6E  EE20 F014          	lfsr	2,20
  5920   002A72  5028               	movf	Colour2Action@cf^0,w,c
  5921   002A74  26D9               	addwf	fsr2l,f,c
  5922   002A76  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5923   002A78  22DA               	addwfc	fsr2h,f,c
  5924   002A7A  50DE               	movf	postinc2,w,c
  5925   002A7C  10DE               	iorwf	postinc2,w,c
  5926   002A7E  A4D8               	btfss	status,2,c
  5927   002A80  EF44  F015         	goto	u3881
  5928   002A84  EF46  F015         	goto	u3880
  5929   002A88                     u3881:
  5930   002A88  EF52  F015         	goto	l4108
  5931   002A8C                     u3880:
  5932   002A8C                     
  5933                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  5934   002A8C  0EEA               	movlw	low _motorL
  5935   002A8E  6E21               	movwf	Red_R90@mL^0,c
  5936   002A90  0E00               	movlw	high _motorL
  5937   002A92  6E22               	movwf	(Red_R90@mL+1)^0,c
  5938   002A94  0EE1               	movlw	low _motorR
  5939   002A96  6E23               	movwf	Red_R90@mR^0,c
  5940   002A98  0E00               	movlw	high _motorR
  5941   002A9A  6E24               	movwf	(Red_R90@mR+1)^0,c
  5942   002A9C  ECC4  F01E         	call	_Red_R90	;wreg free
  5943                           
  5944                           ;colorfunctions.c: 110:     }
  5945   002AA0  EFF9  F015         	goto	l147
  5946   002AA4                     l4108:
  5947   002AA4  EE20 F014          	lfsr	2,20
  5948   002AA8  5028               	movf	Colour2Action@cf^0,w,c
  5949   002AAA  26D9               	addwf	fsr2l,f,c
  5950   002AAC  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5951   002AAE  22DA               	addwfc	fsr2h,f,c
  5952   002AB0  04DE               	decf	postinc2,w,c
  5953   002AB2  10DE               	iorwf	postinc2,w,c
  5954   002AB4  A4D8               	btfss	status,2,c
  5955   002AB6  EF5F  F015         	goto	u3891
  5956   002ABA  EF61  F015         	goto	u3890
  5957   002ABE                     u3891:
  5958   002ABE  EF6D  F015         	goto	l4112
  5959   002AC2                     u3890:
  5960   002AC2                     
  5961                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  5962   002AC2  0EEA               	movlw	low _motorL
  5963   002AC4  6E21               	movwf	Green_L90@mL^0,c
  5964   002AC6  0E00               	movlw	high _motorL
  5965   002AC8  6E22               	movwf	(Green_L90@mL+1)^0,c
  5966   002ACA  0EE1               	movlw	low _motorR
  5967   002ACC  6E23               	movwf	Green_L90@mR^0,c
  5968   002ACE  0E00               	movlw	high _motorR
  5969   002AD0  6E24               	movwf	(Green_L90@mR+1)^0,c
  5970   002AD2  EC03  F01F         	call	_Green_L90	;wreg free
  5971                           
  5972                           ;colorfunctions.c: 114:     }
  5973   002AD6  EFF9  F015         	goto	l147
  5974   002ADA                     l4112:
  5975   002ADA  EE20 F014          	lfsr	2,20
  5976   002ADE  5028               	movf	Colour2Action@cf^0,w,c
  5977   002AE0  26D9               	addwf	fsr2l,f,c
  5978   002AE2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  5979   002AE4  22DA               	addwfc	fsr2h,f,c
  5980   002AE6  0E02               	movlw	2
  5981   002AE8  18DE               	xorwf	postinc2,w,c
  5982   002AEA  10DE               	iorwf	postinc2,w,c
  5983   002AEC  A4D8               	btfss	status,2,c
  5984   002AEE  EF7B  F015         	goto	u3901
  5985   002AF2  EF7D  F015         	goto	u3900
  5986   002AF6                     u3901:
  5987   002AF6  EF89  F015         	goto	l4116
  5988   002AFA                     u3900:
  5989   002AFA                     
  5990                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  5991   002AFA  0EEA               	movlw	low _motorL
  5992   002AFC  6E24               	movwf	Blue_T180@mL^0,c
  5993   002AFE  0E00               	movlw	high _motorL
  5994   002B00  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5995   002B02  0EE1               	movlw	low _motorR
  5996   002B04  6E26               	movwf	Blue_T180@mR^0,c
  5997   002B06  0E00               	movlw	high _motorR
  5998   002B08  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5999   002B0A  ECB6  F01F         	call	_Blue_T180	;wreg free
  6000                           
  6001                           ;colorfunctions.c: 118:     }
  6002   002B0E  EFF9  F015         	goto	l147
  6003   002B12                     l4116:
  6004   002B12  EE20 F014          	lfsr	2,20
  6005   002B16  5028               	movf	Colour2Action@cf^0,w,c
  6006   002B18  26D9               	addwf	fsr2l,f,c
  6007   002B1A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6008   002B1C  22DA               	addwfc	fsr2h,f,c
  6009   002B1E  0E03               	movlw	3
  6010   002B20  18DE               	xorwf	postinc2,w,c
  6011   002B22  10DE               	iorwf	postinc2,w,c
  6012   002B24  A4D8               	btfss	status,2,c
  6013   002B26  EF97  F015         	goto	u3911
  6014   002B2A  EF99  F015         	goto	u3910
  6015   002B2E                     u3911:
  6016   002B2E  EFA5  F015         	goto	l4120
  6017   002B32                     u3910:
  6018   002B32                     
  6019                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  6020   002B32  0EEA               	movlw	low _motorL
  6021   002B34  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  6022   002B36  0E00               	movlw	high _motorL
  6023   002B38  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  6024   002B3A  0EE1               	movlw	low _motorR
  6025   002B3C  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  6026   002B3E  0E00               	movlw	high _motorR
  6027   002B40  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  6028   002B42  EC83  F019         	call	_Yellow_rev1_R90	;wreg free
  6029                           
  6030                           ;colorfunctions.c: 122:     }
  6031   002B46  EFF9  F015         	goto	l147
  6032   002B4A                     l4120:
  6033   002B4A  EE20 F014          	lfsr	2,20
  6034   002B4E  5028               	movf	Colour2Action@cf^0,w,c
  6035   002B50  26D9               	addwf	fsr2l,f,c
  6036   002B52  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6037   002B54  22DA               	addwfc	fsr2h,f,c
  6038   002B56  0E04               	movlw	4
  6039   002B58  18DE               	xorwf	postinc2,w,c
  6040   002B5A  10DE               	iorwf	postinc2,w,c
  6041   002B5C  A4D8               	btfss	status,2,c
  6042   002B5E  EFB3  F015         	goto	u3921
  6043   002B62  EFB5  F015         	goto	u3920
  6044   002B66                     u3921:
  6045   002B66  EFC1  F015         	goto	l4124
  6046   002B6A                     u3920:
  6047   002B6A                     
  6048                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  6049   002B6A  0EEA               	movlw	low _motorL
  6050   002B6C  6E21               	movwf	Pink_rev1_L90@mL^0,c
  6051   002B6E  0E00               	movlw	high _motorL
  6052   002B70  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  6053   002B72  0EE1               	movlw	low _motorR
  6054   002B74  6E23               	movwf	Pink_rev1_L90@mR^0,c
  6055   002B76  0E00               	movlw	high _motorR
  6056   002B78  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  6057   002B7A  ECFA  F019         	call	_Pink_rev1_L90	;wreg free
  6058                           
  6059                           ;colorfunctions.c: 126:     }
  6060   002B7E  EFF9  F015         	goto	l147
  6061   002B82                     l4124:
  6062   002B82  EE20 F014          	lfsr	2,20
  6063   002B86  5028               	movf	Colour2Action@cf^0,w,c
  6064   002B88  26D9               	addwf	fsr2l,f,c
  6065   002B8A  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6066   002B8C  22DA               	addwfc	fsr2h,f,c
  6067   002B8E  0E05               	movlw	5
  6068   002B90  18DE               	xorwf	postinc2,w,c
  6069   002B92  10DE               	iorwf	postinc2,w,c
  6070   002B94  A4D8               	btfss	status,2,c
  6071   002B96  EFCF  F015         	goto	u3931
  6072   002B9A  EFD1  F015         	goto	u3930
  6073   002B9E                     u3931:
  6074   002B9E  EFDD  F015         	goto	l4128
  6075   002BA2                     u3930:
  6076   002BA2                     
  6077                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  6078   002BA2  0EEA               	movlw	low _motorL
  6079   002BA4  6E21               	movwf	Orange_R135@mL^0,c
  6080   002BA6  0E00               	movlw	high _motorL
  6081   002BA8  6E22               	movwf	(Orange_R135@mL+1)^0,c
  6082   002BAA  0EE1               	movlw	low _motorR
  6083   002BAC  6E23               	movwf	Orange_R135@mR^0,c
  6084   002BAE  0E00               	movlw	high _motorR
  6085   002BB0  6E24               	movwf	(Orange_R135@mR+1)^0,c
  6086   002BB2  EC43  F01B         	call	_Orange_R135	;wreg free
  6087                           
  6088                           ;colorfunctions.c: 130:     }
  6089   002BB6  EFF9  F015         	goto	l147
  6090   002BBA                     l4128:
  6091   002BBA  EE20 F014          	lfsr	2,20
  6092   002BBE  5028               	movf	Colour2Action@cf^0,w,c
  6093   002BC0  26D9               	addwf	fsr2l,f,c
  6094   002BC2  5029               	movf	(Colour2Action@cf+1)^0,w,c
  6095   002BC4  22DA               	addwfc	fsr2h,f,c
  6096   002BC6  0E06               	movlw	6
  6097   002BC8  18DE               	xorwf	postinc2,w,c
  6098   002BCA  10DE               	iorwf	postinc2,w,c
  6099   002BCC  A4D8               	btfss	status,2,c
  6100   002BCE  EFEB  F015         	goto	u3941
  6101   002BD2  EFED  F015         	goto	u3940
  6102   002BD6                     u3941:
  6103   002BD6  EFF9  F015         	goto	l140
  6104   002BDA                     u3940:
  6105   002BDA                     
  6106                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  6107   002BDA  0EEA               	movlw	low _motorL
  6108   002BDC  6E21               	movwf	LightBlue_L135@mL^0,c
  6109   002BDE  0E00               	movlw	high _motorL
  6110   002BE0  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  6111   002BE2  0EE1               	movlw	low _motorR
  6112   002BE4  6E23               	movwf	LightBlue_L135@mR^0,c
  6113   002BE6  0E00               	movlw	high _motorR
  6114   002BE8  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  6115   002BEA  ECF5  F01B         	call	_LightBlue_L135	;wreg free
  6116   002BEE  EFF9  F015         	goto	l147
  6117   002BF2                     l140:
  6118   002BF2                     l147:
  6119   002BF2  0012               	return		;funcret
  6120   002BF4                     __end_of_Colour2Action:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _Yellow_rev1_R90 *****************
  6124 ;; Defined at:
  6125 ;;		line 269 in file "dc_motor.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6128 ;;		 -> motorL(9), 
  6129 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6130 ;;		 -> motorR(9), 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;Total ram usage:        6 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 4
  6149 ;; This function calls:
  6150 ;;		_Left45
  6151 ;;		_Right45
  6152 ;;		_TimerReset
  6153 ;;		_fullSpeedAhead
  6154 ;;		_fullSpeedReverse
  6155 ;;		_reverseHalfSquare
  6156 ;;		_stop
  6157 ;; This function is called by:
  6158 ;;		_Colour2Action
  6159 ;;		_White
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text27
  6164   003306                     __ptext27:
  6165                           	callstack 0
  6166   003306                     _Yellow_rev1_R90:
  6167                           	callstack 25
  6168   003306                     
  6169                           ;dc_motor.c: 269: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 270: {;dc_motor.c: 271:     if (ForwardFlag){
  6170   003306  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6171   003308  B4D8               	btfsc	status,2,c
  6172   00330A  EF89  F019         	goto	u3081
  6173   00330E  EF8B  F019         	goto	u3080
  6174   003312                     u3081:
  6175   003312  EFCD  F019         	goto	l3578
  6176   003316                     u3080:
  6177   003316                     
  6178                           ;dc_motor.c: 272:         reverseHalfSquare(mL,mR);
  6179   003316  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  6180   00331A  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  6181   00331E  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  6182   003322  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  6183   003326  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6184                           
  6185                           ;dc_motor.c: 274:         fullSpeedReverse(mL,mR);
  6186   00332A  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  6187   00332E  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  6188   003332  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  6189   003336  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  6190   00333A  EC84  F01E         	call	_fullSpeedReverse	;wreg free
  6191   00333E                     
  6192                           ;dc_motor.c: 275:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6193   00333E  0E39               	movlw	57
  6194   003340  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6195   003342  0ED2               	movlw	210
  6196   003344  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6197   003346  0E4C               	movlw	76
  6198   003348                     u4127:
  6199   003348  2EE8               	decfsz	wreg,f,c
  6200   00334A  D7FE               	bra	u4127
  6201   00334C  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6202   00334E  D7FC               	bra	u4127
  6203   003350  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6204   003352  D7FA               	bra	u4127
  6205   003354  D000               	nop2	
  6206   003356                     
  6207                           ;dc_motor.c: 277:         Right45(mL,mR);
  6208   003356  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6209   00335A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6210   00335E  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6211   003362  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6212   003366  EC79  F01D         	call	_Right45	;wreg free
  6213   00336A                     
  6214                           ;dc_motor.c: 278:         Right45(mL,mR);
  6215   00336A  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  6216   00336E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  6217   003372  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  6218   003376  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  6219   00337A  EC79  F01D         	call	_Right45	;wreg free
  6220   00337E                     
  6221                           ;dc_motor.c: 279:         TimerReset();
  6222   00337E  EC5E  F022         	call	_TimerReset	;wreg free
  6223   003382                     l3576:
  6224                           
  6225                           ;dc_motor.c: 280:         stop(mL,mR);
  6226   003382  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  6227   003386  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  6228   00338A  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  6229   00338E  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  6230   003392  EC48  F01C         	call	_stop	;wreg free
  6231                           
  6232                           ;dc_motor.c: 281:     }
  6233   003396  EFF9  F019         	goto	l497
  6234   00339A                     l3578:
  6235                           
  6236                           ;dc_motor.c: 284:         Left45(mL,mR);
  6237   00339A  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6238   00339E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6239   0033A2  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6240   0033A6  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6241   0033AA  ECBD  F01D         	call	_Left45	;wreg free
  6242                           
  6243                           ;dc_motor.c: 285:         Left45(mL,mR);
  6244   0033AE  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  6245   0033B2  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  6246   0033B6  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  6247   0033BA  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  6248   0033BE  ECBD  F01D         	call	_Left45	;wreg free
  6249                           
  6250                           ;dc_motor.c: 286:         fullSpeedAhead(mL,mR);
  6251   0033C2  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  6252   0033C6  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  6253   0033CA  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  6254   0033CE  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  6255   0033D2  EC44  F01E         	call	_fullSpeedAhead	;wreg free
  6256   0033D6                     
  6257                           ;dc_motor.c: 287:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6258   0033D6  0E39               	movlw	57
  6259   0033D8  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  6260   0033DA  0ED2               	movlw	210
  6261   0033DC  6E25               	movwf	??_Yellow_rev1_R90^0,c
  6262   0033DE  0E4C               	movlw	76
  6263   0033E0                     u4137:
  6264   0033E0  2EE8               	decfsz	wreg,f,c
  6265   0033E2  D7FE               	bra	u4137
  6266   0033E4  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  6267   0033E6  D7FC               	bra	u4137
  6268   0033E8  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  6269   0033EA  D7FA               	bra	u4137
  6270   0033EC  D000               	nop2	
  6271   0033EE  EFC1  F019         	goto	l3576
  6272   0033F2                     l497:
  6273   0033F2  0012               	return		;funcret
  6274   0033F4                     __end_of_Yellow_rev1_R90:
  6275                           	callstack 0
  6276                           
  6277 ;; *************** function _Red_R90 *****************
  6278 ;; Defined at:
  6279 ;;		line 226 in file "dc_motor.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6282 ;;		 -> motorL(9), 
  6283 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6284 ;;		 -> motorR(9), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;Total ram usage:        4 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; Hardware stack levels required when called: 4
  6303 ;; This function calls:
  6304 ;;		_Left45
  6305 ;;		_Right45
  6306 ;;		_TimerReset
  6307 ;;		_reverseHalfSquare
  6308 ;; This function is called by:
  6309 ;;		_Colour2Action
  6310 ;;		_White
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text28
  6315   003D88                     __ptext28:
  6316                           	callstack 0
  6317   003D88                     _Red_R90:
  6318                           	callstack 25
  6319   003D88                     
  6320                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  6321   003D88  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6322   003D8A  B4D8               	btfsc	status,2,c
  6323   003D8C  EFCA  F01E         	goto	u3051
  6324   003D90  EFCC  F01E         	goto	u3050
  6325   003D94                     u3051:
  6326   003D94  EFEE  F01E         	goto	l3546
  6327   003D98                     u3050:
  6328   003D98                     
  6329                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  6330   003D98  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  6331   003D9C  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  6332   003DA0  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  6333   003DA4  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  6334   003DA8  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6335                           
  6336                           ;dc_motor.c: 230:         Right45(mL,mR);
  6337   003DAC  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6338   003DB0  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6339   003DB4  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6340   003DB8  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6341   003DBC  EC79  F01D         	call	_Right45	;wreg free
  6342                           
  6343                           ;dc_motor.c: 231:         Right45(mL,mR);
  6344   003DC0  C021  F01A         	movff	Red_R90@mL,Right45@mL
  6345   003DC4  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  6346   003DC8  C023  F01C         	movff	Red_R90@mR,Right45@mR
  6347   003DCC  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  6348   003DD0  EC79  F01D         	call	_Right45	;wreg free
  6349   003DD4                     
  6350                           ;dc_motor.c: 232:         TimerReset();
  6351   003DD4  EC5E  F022         	call	_TimerReset	;wreg free
  6352                           
  6353                           ;dc_motor.c: 233:     }
  6354   003DD8  EF02  F01F         	goto	l482
  6355   003DDC                     l3546:
  6356                           
  6357                           ;dc_motor.c: 236:         Left45(mL,mR);
  6358   003DDC  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6359   003DE0  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6360   003DE4  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6361   003DE8  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6362   003DEC  ECBD  F01D         	call	_Left45	;wreg free
  6363                           
  6364                           ;dc_motor.c: 237:         Left45(mL,mR);
  6365   003DF0  C021  F01A         	movff	Red_R90@mL,Left45@mL
  6366   003DF4  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  6367   003DF8  C023  F01C         	movff	Red_R90@mR,Left45@mR
  6368   003DFC  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  6369   003E00  ECBD  F01D         	call	_Left45	;wreg free
  6370   003E04                     l482:
  6371   003E04  0012               	return		;funcret
  6372   003E06                     __end_of_Red_R90:
  6373                           	callstack 0
  6374                           
  6375 ;; *************** function _Pink_rev1_L90 *****************
  6376 ;; Defined at:
  6377 ;;		line 291 in file "dc_motor.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6380 ;;		 -> motorL(9), 
  6381 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6382 ;;		 -> motorR(9), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;Total ram usage:        6 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; Hardware stack levels required when called: 4
  6401 ;; This function calls:
  6402 ;;		_Left45
  6403 ;;		_Right45
  6404 ;;		_TimerReset
  6405 ;;		_fullSpeedAhead
  6406 ;;		_fullSpeedReverse
  6407 ;;		_reverseHalfSquare
  6408 ;;		_stop
  6409 ;; This function is called by:
  6410 ;;		_Colour2Action
  6411 ;;		_White
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text29
  6416   0033F4                     __ptext29:
  6417                           	callstack 0
  6418   0033F4                     _Pink_rev1_L90:
  6419                           	callstack 25
  6420   0033F4                     
  6421                           ;dc_motor.c: 291: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 292: {;dc_motor.c: 293:     if (ForwardFlag){
  6422   0033F4  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6423   0033F6  B4D8               	btfsc	status,2,c
  6424   0033F8  EF00  F01A         	goto	u3091
  6425   0033FC  EF02  F01A         	goto	u3090
  6426   003400                     u3091:
  6427   003400  EF3A  F01A         	goto	l3596
  6428   003404                     u3090:
  6429   003404                     
  6430                           ;dc_motor.c: 294:         reverseHalfSquare(mL,mR);
  6431   003404  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  6432   003408  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  6433   00340C  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  6434   003410  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  6435   003414  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6436                           
  6437                           ;dc_motor.c: 296:         fullSpeedReverse(mL,mR);
  6438   003418  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  6439   00341C  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  6440   003420  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  6441   003424  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  6442   003428  EC84  F01E         	call	_fullSpeedReverse	;wreg free
  6443   00342C                     
  6444                           ;dc_motor.c: 297:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6445   00342C  0E39               	movlw	57
  6446   00342E  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6447   003430  0ED2               	movlw	210
  6448   003432  6E25               	movwf	??_Pink_rev1_L90^0,c
  6449   003434  0E4C               	movlw	76
  6450   003436                     u4147:
  6451   003436  2EE8               	decfsz	wreg,f,c
  6452   003438  D7FE               	bra	u4147
  6453   00343A  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6454   00343C  D7FC               	bra	u4147
  6455   00343E  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6456   003440  D7FA               	bra	u4147
  6457   003442  D000               	nop2	
  6458   003444                     
  6459                           ;dc_motor.c: 298:         Left45(mL,mR);
  6460   003444  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6461   003448  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6462   00344C  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6463   003450  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6464   003454  ECBD  F01D         	call	_Left45	;wreg free
  6465   003458                     
  6466                           ;dc_motor.c: 299:         Left45(mL,mR);
  6467   003458  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  6468   00345C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  6469   003460  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  6470   003464  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  6471   003468  ECBD  F01D         	call	_Left45	;wreg free
  6472   00346C                     
  6473                           ;dc_motor.c: 300:         TimerReset();
  6474   00346C  EC5E  F022         	call	_TimerReset	;wreg free
  6475                           
  6476                           ;dc_motor.c: 301:     }
  6477   003470  EF6E  F01A         	goto	l502
  6478   003474                     l3596:
  6479                           
  6480                           ;dc_motor.c: 304:         Right45(mL,mR);
  6481   003474  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6482   003478  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6483   00347C  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6484   003480  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6485   003484  EC79  F01D         	call	_Right45	;wreg free
  6486                           
  6487                           ;dc_motor.c: 305:         Right45(mL,mR);
  6488   003488  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  6489   00348C  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  6490   003490  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  6491   003494  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  6492   003498  EC79  F01D         	call	_Right45	;wreg free
  6493                           
  6494                           ;dc_motor.c: 306:         fullSpeedAhead(mL,mR);
  6495   00349C  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  6496   0034A0  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  6497   0034A4  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  6498   0034A8  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  6499   0034AC  EC44  F01E         	call	_fullSpeedAhead	;wreg free
  6500   0034B0                     
  6501                           ;dc_motor.c: 307:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  6502   0034B0  0E39               	movlw	57
  6503   0034B2  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  6504   0034B4  0ED2               	movlw	210
  6505   0034B6  6E25               	movwf	??_Pink_rev1_L90^0,c
  6506   0034B8  0E4C               	movlw	76
  6507   0034BA                     u4157:
  6508   0034BA  2EE8               	decfsz	wreg,f,c
  6509   0034BC  D7FE               	bra	u4157
  6510   0034BE  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  6511   0034C0  D7FC               	bra	u4157
  6512   0034C2  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  6513   0034C4  D7FA               	bra	u4157
  6514   0034C6  D000               	nop2	
  6515   0034C8                     
  6516                           ;dc_motor.c: 308:         stop(mL,mR);
  6517   0034C8  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  6518   0034CC  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  6519   0034D0  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  6520   0034D4  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  6521   0034D8  EC48  F01C         	call	_stop	;wreg free
  6522   0034DC                     l502:
  6523   0034DC  0012               	return		;funcret
  6524   0034DE                     __end_of_Pink_rev1_L90:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _fullSpeedAhead *****************
  6528 ;; Defined at:
  6529 ;;		line 149 in file "dc_motor.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6532 ;;		 -> motorL(9), 
  6533 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6534 ;;		 -> motorR(9), 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  i               2   24[COMRAM] unsigned int 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;Total ram usage:        7 bytes
  6551 ;; Hardware stack levels used: 1
  6552 ;; Hardware stack levels required when called: 2
  6553 ;; This function calls:
  6554 ;;		_setMotorPWM
  6555 ;; This function is called by:
  6556 ;;		_main
  6557 ;;		_Yellow_rev1_R90
  6558 ;;		_Pink_rev1_L90
  6559 ;;		_White
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text30
  6564   003C88                     __ptext30:
  6565                           	callstack 0
  6566   003C88                     _fullSpeedAhead:
  6567                           	callstack 28
  6568   003C88                     
  6569                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  6570   003C88  EE20 F001          	lfsr	2,1
  6571   003C8C  5014               	movf	fullSpeedAhead@mL^0,w,c
  6572   003C8E  26D9               	addwf	fsr2l,f,c
  6573   003C90  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6574   003C92  22DA               	addwfc	fsr2h,f,c
  6575   003C94  0E01               	movlw	1
  6576   003C96  6EDF               	movwf	indf2,c
  6577                           
  6578                           ;dc_motor.c: 152:  (mR->direction) = 1;
  6579   003C98  EE20 F001          	lfsr	2,1
  6580   003C9C  5016               	movf	fullSpeedAhead@mR^0,w,c
  6581   003C9E  26D9               	addwf	fsr2l,f,c
  6582   003CA0  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6583   003CA2  22DA               	addwfc	fsr2h,f,c
  6584   003CA4  0E01               	movlw	1
  6585   003CA6  6EDF               	movwf	indf2,c
  6586   003CA8                     
  6587                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  6588   003CA8  0E00               	movlw	0
  6589   003CAA  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  6590   003CAC  0E00               	movlw	0
  6591   003CAE  6E19               	movwf	fullSpeedAhead@i^0,c
  6592   003CB0                     l3154:
  6593                           
  6594                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  6595   003CB0  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6596   003CB4  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6597   003CB8  2ADF               	incf	indf2,f,c
  6598                           
  6599                           ;dc_motor.c: 157:         (mR->power)++;
  6600   003CBA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6601   003CBE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6602   003CC2  2ADF               	incf	indf2,f,c
  6603   003CC4                     
  6604                           ;dc_motor.c: 158:         setMotorPWM(mL);
  6605   003CC4  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6606   003CC8  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6607   003CCC  ECFA  F015         	call	_setMotorPWM	;wreg free
  6608   003CD0                     
  6609                           ;dc_motor.c: 159:         setMotorPWM(mR);
  6610   003CD0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6611   003CD4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6612   003CD8  ECFA  F015         	call	_setMotorPWM	;wreg free
  6613   003CDC                     
  6614                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  6615   003CDC  0E09               	movlw	9
  6616   003CDE  6E18               	movwf	??_fullSpeedAhead^0,c
  6617   003CE0  0E4E               	movlw	78
  6618   003CE2                     u4167:
  6619   003CE2  2EE8               	decfsz	wreg,f,c
  6620   003CE4  D7FE               	bra	u4167
  6621   003CE6  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  6622   003CE8  D7FC               	bra	u4167
  6623   003CEA  D000               	nop2	
  6624   003CEC                     
  6625                           ;dc_motor.c: 161:     }
  6626   003CEC  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  6627   003CEE  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  6628   003CF0  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  6629   003CF2  E109               	bnz	u2420
  6630   003CF4  0E32               	movlw	50
  6631   003CF6  5C19               	subwf	fullSpeedAhead@i^0,w,c
  6632   003CF8  A0D8               	btfss	status,0,c
  6633   003CFA  EF81  F01E         	goto	u2421
  6634   003CFE  EF83  F01E         	goto	u2420
  6635   003D02                     u2421:
  6636   003D02  EF58  F01E         	goto	l3154
  6637   003D06                     u2420:
  6638   003D06  0012               	return		;funcret
  6639   003D08                     __end_of_fullSpeedAhead:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _Orange_R135 *****************
  6643 ;; Defined at:
  6644 ;;		line 311 in file "dc_motor.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6647 ;;		 -> motorL(9), 
  6648 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6649 ;;		 -> motorR(9), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;Total ram usage:        4 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 4
  6668 ;; This function calls:
  6669 ;;		_Left45
  6670 ;;		_Right45
  6671 ;;		_TimerReset
  6672 ;;		_reverseHalfSquare
  6673 ;;		_stop
  6674 ;; This function is called by:
  6675 ;;		_Colour2Action
  6676 ;;		_White
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text31
  6681   003686                     __ptext31:
  6682                           	callstack 0
  6683   003686                     _Orange_R135:
  6684                           	callstack 25
  6685   003686                     
  6686                           ;dc_motor.c: 311: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           312: {;dc_motor.c: 313:     if (ForwardFlag){
  6687   003686  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6688   003688  B4D8               	btfsc	status,2,c
  6689   00368A  EF49  F01B         	goto	u3101
  6690   00368E  EF4B  F01B         	goto	u3100
  6691   003692                     u3101:
  6692   003692  EF77  F01B         	goto	l3608
  6693   003696                     u3100:
  6694   003696                     
  6695                           ;dc_motor.c: 314:         reverseHalfSquare(mL,mR);
  6696   003696  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  6697   00369A  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  6698   00369E  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  6699   0036A2  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  6700   0036A6  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6701                           
  6702                           ;dc_motor.c: 316:         Right45(mL,mR);
  6703   0036AA  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6704   0036AE  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6705   0036B2  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6706   0036B6  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6707   0036BA  EC79  F01D         	call	_Right45	;wreg free
  6708                           
  6709                           ;dc_motor.c: 317:         Right45(mL,mR);
  6710   0036BE  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6711   0036C2  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6712   0036C6  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6713   0036CA  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6714   0036CE  EC79  F01D         	call	_Right45	;wreg free
  6715                           
  6716                           ;dc_motor.c: 318:         Right45(mL,mR);
  6717   0036D2  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  6718   0036D6  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  6719   0036DA  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  6720   0036DE  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  6721   0036E2  EC79  F01D         	call	_Right45	;wreg free
  6722   0036E6                     
  6723                           ;dc_motor.c: 319:         TimerReset();
  6724   0036E6  EC5E  F022         	call	_TimerReset	;wreg free
  6725                           
  6726                           ;dc_motor.c: 321:     }
  6727   0036EA  EF9F  F01B         	goto	l507
  6728   0036EE                     l3608:
  6729                           
  6730                           ;dc_motor.c: 324:         Left45(mL,mR);
  6731   0036EE  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6732   0036F2  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6733   0036F6  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6734   0036FA  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6735   0036FE  ECBD  F01D         	call	_Left45	;wreg free
  6736                           
  6737                           ;dc_motor.c: 325:         Left45(mL,mR);
  6738   003702  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6739   003706  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6740   00370A  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6741   00370E  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6742   003712  ECBD  F01D         	call	_Left45	;wreg free
  6743                           
  6744                           ;dc_motor.c: 326:         Left45(mL,mR);
  6745   003716  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  6746   00371A  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  6747   00371E  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  6748   003722  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  6749   003726  ECBD  F01D         	call	_Left45	;wreg free
  6750                           
  6751                           ;dc_motor.c: 327:         stop(mL,mR);
  6752   00372A  C021  F014         	movff	Orange_R135@mL,stop@mL
  6753   00372E  C022  F015         	movff	Orange_R135@mL+1,stop@mL+1
  6754   003732  C023  F016         	movff	Orange_R135@mR,stop@mR
  6755   003736  C024  F017         	movff	Orange_R135@mR+1,stop@mR+1
  6756   00373A  EC48  F01C         	call	_stop	;wreg free
  6757   00373E                     l507:
  6758   00373E  0012               	return		;funcret
  6759   003740                     __end_of_Orange_R135:
  6760                           	callstack 0
  6761                           
  6762 ;; *************** function _LightBlue_L135 *****************
  6763 ;; Defined at:
  6764 ;;		line 330 in file "dc_motor.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6767 ;;		 -> motorL(9), 
  6768 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6769 ;;		 -> motorR(9), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 4
  6788 ;; This function calls:
  6789 ;;		_Left45
  6790 ;;		_Right45
  6791 ;;		_TimerReset
  6792 ;;		_reverseHalfSquare
  6793 ;; This function is called by:
  6794 ;;		_Colour2Action
  6795 ;;		_White
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text32
  6800   0037EA                     __ptext32:
  6801                           	callstack 0
  6802   0037EA                     _LightBlue_L135:
  6803                           	callstack 25
  6804   0037EA                     
  6805                           ;dc_motor.c: 330: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 331: {;dc_motor.c: 333:      if (ForwardFlag){
  6806   0037EA  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6807   0037EC  B4D8               	btfsc	status,2,c
  6808   0037EE  EFFB  F01B         	goto	u3111
  6809   0037F2  EFFD  F01B         	goto	u3110
  6810   0037F6                     u3111:
  6811   0037F6  EF29  F01C         	goto	l3616
  6812   0037FA                     u3110:
  6813   0037FA                     
  6814                           ;dc_motor.c: 334:         reverseHalfSquare(mL,mR);
  6815   0037FA  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  6816   0037FE  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  6817   003802  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  6818   003806  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  6819   00380A  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6820                           
  6821                           ;dc_motor.c: 336:         Left45(mL,mR);
  6822   00380E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6823   003812  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6824   003816  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6825   00381A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6826   00381E  ECBD  F01D         	call	_Left45	;wreg free
  6827                           
  6828                           ;dc_motor.c: 337:         Left45(mL,mR);
  6829   003822  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6830   003826  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6831   00382A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6832   00382E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6833   003832  ECBD  F01D         	call	_Left45	;wreg free
  6834                           
  6835                           ;dc_motor.c: 338:         Left45(mL,mR);
  6836   003836  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  6837   00383A  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  6838   00383E  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  6839   003842  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  6840   003846  ECBD  F01D         	call	_Left45	;wreg free
  6841   00384A                     
  6842                           ;dc_motor.c: 339:         TimerReset();
  6843   00384A  EC5E  F022         	call	_TimerReset	;wreg free
  6844                           
  6845                           ;dc_motor.c: 340:     }
  6846   00384E  EF47  F01C         	goto	l512
  6847   003852                     l3616:
  6848                           
  6849                           ;dc_motor.c: 343:         Right45(mL,mR);
  6850   003852  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6851   003856  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6852   00385A  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6853   00385E  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6854   003862  EC79  F01D         	call	_Right45	;wreg free
  6855                           
  6856                           ;dc_motor.c: 344:         Right45(mL,mR);
  6857   003866  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6858   00386A  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6859   00386E  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6860   003872  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6861   003876  EC79  F01D         	call	_Right45	;wreg free
  6862                           
  6863                           ;dc_motor.c: 345:         Right45(mL,mR);
  6864   00387A  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  6865   00387E  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  6866   003882  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  6867   003886  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  6868   00388A  EC79  F01D         	call	_Right45	;wreg free
  6869   00388E                     l512:
  6870   00388E  0012               	return		;funcret
  6871   003890                     __end_of_LightBlue_L135:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function _Green_L90 *****************
  6875 ;; Defined at:
  6876 ;;		line 241 in file "dc_motor.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6879 ;;		 -> motorL(9), 
  6880 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6881 ;;		 -> motorR(9), 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6897 ;;Total ram usage:        4 bytes
  6898 ;; Hardware stack levels used: 1
  6899 ;; Hardware stack levels required when called: 4
  6900 ;; This function calls:
  6901 ;;		_Left45
  6902 ;;		_Right45
  6903 ;;		_TimerReset
  6904 ;;		_reverseHalfSquare
  6905 ;; This function is called by:
  6906 ;;		_Colour2Action
  6907 ;;		_White
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text33
  6912   003E06                     __ptext33:
  6913                           	callstack 0
  6914   003E06                     _Green_L90:
  6915                           	callstack 25
  6916   003E06                     
  6917                           ;dc_motor.c: 241: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          42: {;dc_motor.c: 243:     if (ForwardFlag){
  6918   003E06  505F               	movf	_ForwardFlag^0,w,c	;volatile
  6919   003E08  B4D8               	btfsc	status,2,c
  6920   003E0A  EF09  F01F         	goto	u3061
  6921   003E0E  EF0B  F01F         	goto	u3060
  6922   003E12                     u3061:
  6923   003E12  EF2D  F01F         	goto	l3554
  6924   003E16                     u3060:
  6925   003E16                     
  6926                           ;dc_motor.c: 244:         reverseHalfSquare(mL,mR);
  6927   003E16  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  6928   003E1A  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  6929   003E1E  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  6930   003E22  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  6931   003E26  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  6932                           
  6933                           ;dc_motor.c: 246:         Left45(mL,mR);
  6934   003E2A  C021  F01A         	movff	Green_L90@mL,Left45@mL
  6935   003E2E  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  6936   003E32  C023  F01C         	movff	Green_L90@mR,Left45@mR
  6937   003E36  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  6938   003E3A  ECBD  F01D         	call	_Left45	;wreg free
  6939                           
  6940                           ;dc_motor.c: 247:         Left45(mL,mR);
  6941   003E3E  C021  F01A         	movff	Green_L90@mL,Left45@mL
  6942   003E42  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  6943   003E46  C023  F01C         	movff	Green_L90@mR,Left45@mR
  6944   003E4A  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  6945   003E4E  ECBD  F01D         	call	_Left45	;wreg free
  6946   003E52                     
  6947                           ;dc_motor.c: 248:         TimerReset();
  6948   003E52  EC5E  F022         	call	_TimerReset	;wreg free
  6949                           
  6950                           ;dc_motor.c: 249:     }
  6951   003E56  EF41  F01F         	goto	l487
  6952   003E5A                     l3554:
  6953                           
  6954                           ;dc_motor.c: 252:         Right45(mL,mR);
  6955   003E5A  C021  F01A         	movff	Green_L90@mL,Right45@mL
  6956   003E5E  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  6957   003E62  C023  F01C         	movff	Green_L90@mR,Right45@mR
  6958   003E66  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  6959   003E6A  EC79  F01D         	call	_Right45	;wreg free
  6960                           
  6961                           ;dc_motor.c: 253:         Right45(mL,mR);
  6962   003E6E  C021  F01A         	movff	Green_L90@mL,Right45@mL
  6963   003E72  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  6964   003E76  C023  F01C         	movff	Green_L90@mR,Right45@mR
  6965   003E7A  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  6966   003E7E  EC79  F01D         	call	_Right45	;wreg free
  6967   003E82                     l487:
  6968   003E82  0012               	return		;funcret
  6969   003E84                     __end_of_Green_L90:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _Right45 *****************
  6973 ;; Defined at:
  6974 ;;		line 193 in file "dc_motor.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6977 ;;		 -> motorL(9), 
  6978 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6979 ;;		 -> motorR(9), 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;Total ram usage:        6 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 3
  6998 ;; This function calls:
  6999 ;;		_stop
  7000 ;;		_turnRight
  7001 ;; This function is called by:
  7002 ;;		_Red_R90
  7003 ;;		_Green_L90
  7004 ;;		_Yellow_rev1_R90
  7005 ;;		_Pink_rev1_L90
  7006 ;;		_Orange_R135
  7007 ;;		_LightBlue_L135
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text34
  7012   003AF2                     __ptext34:
  7013                           	callstack 0
  7014   003AF2                     _Right45:
  7015                           	callstack 25
  7016   003AF2                     
  7017                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7018   003AF2  8080               	bsf	128,0,c	;volatile
  7019   003AF4                     
  7020                           ;dc_motor.c: 197:     stop(mL,mR);
  7021   003AF4  C01A  F014         	movff	Right45@mL,stop@mL
  7022   003AF8  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7023   003AFC  C01C  F016         	movff	Right45@mR,stop@mR
  7024   003B00  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7025   003B04  EC48  F01C         	call	_stop	;wreg free
  7026   003B08                     
  7027                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7028   003B08  0E05               	movlw	5
  7029   003B0A  6E1F               	movwf	(??_Right45+1)^0,c
  7030   003B0C  0E0F               	movlw	15
  7031   003B0E  6E1E               	movwf	??_Right45^0,c
  7032   003B10  0EF1               	movlw	241
  7033   003B12                     u4177:
  7034   003B12  2EE8               	decfsz	wreg,f,c
  7035   003B14  D7FE               	bra	u4177
  7036   003B16  2E1E               	decfsz	??_Right45^0,f,c
  7037   003B18  D7FC               	bra	u4177
  7038   003B1A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7039   003B1C  D7FA               	bra	u4177
  7040   003B1E  F000               	nop	
  7041   003B20                     
  7042                           ;dc_motor.c: 199:     turnRight(mL,mR);
  7043   003B20  C01A  F014         	movff	Right45@mL,turnRight@mL
  7044   003B24  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  7045   003B28  C01C  F016         	movff	Right45@mR,turnRight@mR
  7046   003B2C  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  7047   003B30  EC9B  F01C         	call	_turnRight	;wreg free
  7048                           
  7049                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  7050   003B34  0E0D               	movlw	13
  7051   003B36  6E1F               	movwf	(??_Right45+1)^0,c
  7052   003B38  0E2D               	movlw	45
  7053   003B3A  6E1E               	movwf	??_Right45^0,c
  7054   003B3C  0ED8               	movlw	216
  7055   003B3E                     u4187:
  7056   003B3E  2EE8               	decfsz	wreg,f,c
  7057   003B40  D7FE               	bra	u4187
  7058   003B42  2E1E               	decfsz	??_Right45^0,f,c
  7059   003B44  D7FC               	bra	u4187
  7060   003B46  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7061   003B48  D7FA               	bra	u4187
  7062   003B4A                     
  7063                           ;dc_motor.c: 201:     stop(mL,mR);
  7064   003B4A  C01A  F014         	movff	Right45@mL,stop@mL
  7065   003B4E  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7066   003B52  C01C  F016         	movff	Right45@mR,stop@mR
  7067   003B56  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7068   003B5A  EC48  F01C         	call	_stop	;wreg free
  7069   003B5E                     
  7070                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7071   003B5E  0E05               	movlw	5
  7072   003B60  6E1F               	movwf	(??_Right45+1)^0,c
  7073   003B62  0E0F               	movlw	15
  7074   003B64  6E1E               	movwf	??_Right45^0,c
  7075   003B66  0EF1               	movlw	241
  7076   003B68                     u4197:
  7077   003B68  2EE8               	decfsz	wreg,f,c
  7078   003B6A  D7FE               	bra	u4197
  7079   003B6C  2E1E               	decfsz	??_Right45^0,f,c
  7080   003B6E  D7FC               	bra	u4197
  7081   003B70  2E1F               	decfsz	(??_Right45+1)^0,f,c
  7082   003B72  D7FA               	bra	u4197
  7083   003B74  F000               	nop	
  7084   003B76                     
  7085                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  7086   003B76  9080               	bcf	128,0,c	;volatile
  7087   003B78  0012               	return		;funcret
  7088   003B7A                     __end_of_Right45:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function _turnRight *****************
  7092 ;; Defined at:
  7093 ;;		line 132 in file "dc_motor.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7096 ;;		 -> motorL(9), 
  7097 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7098 ;;		 -> motorR(9), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  i               2   23[COMRAM] unsigned int 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;Total ram usage:        6 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 2
  7117 ;; This function calls:
  7118 ;;		_setMotorPWM
  7119 ;; This function is called by:
  7120 ;;		_Right45
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text35
  7125   003936                     __ptext35:
  7126                           	callstack 0
  7127   003936                     _turnRight:
  7128                           	callstack 25
  7129   003936                     
  7130                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  7131   003936  EE20 F001          	lfsr	2,1
  7132   00393A  5014               	movf	turnRight@mL^0,w,c
  7133   00393C  26D9               	addwf	fsr2l,f,c
  7134   00393E  5015               	movf	(turnRight@mL+1)^0,w,c
  7135   003940  22DA               	addwfc	fsr2h,f,c
  7136   003942  0E01               	movlw	1
  7137   003944  6EDF               	movwf	indf2,c
  7138                           
  7139                           ;dc_motor.c: 135:     (mR->direction) = 0;
  7140   003946  EE20 F001          	lfsr	2,1
  7141   00394A  5016               	movf	turnRight@mR^0,w,c
  7142   00394C  26D9               	addwf	fsr2l,f,c
  7143   00394E  5017               	movf	(turnRight@mR+1)^0,w,c
  7144   003950  22DA               	addwfc	fsr2h,f,c
  7145   003952  0E00               	movlw	0
  7146   003954  6EDF               	movwf	indf2,c
  7147   003956                     
  7148                           ;dc_motor.c: 136:     setMotorPWM(mL);
  7149   003956  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7150   00395A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7151   00395E  ECFA  F015         	call	_setMotorPWM	;wreg free
  7152   003962                     
  7153                           ;dc_motor.c: 137:     setMotorPWM(mR);
  7154   003962  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7155   003966  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7156   00396A  ECFA  F015         	call	_setMotorPWM	;wreg free
  7157   00396E                     
  7158                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  7159   00396E  0E00               	movlw	0
  7160   003970  6E19               	movwf	(turnRight@i+1)^0,c
  7161   003972  0E00               	movlw	0
  7162   003974  6E18               	movwf	turnRight@i^0,c
  7163   003976                     l3036:
  7164                           
  7165                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  7166   003976  C014  FFD9         	movff	turnRight@mL,fsr2l
  7167   00397A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7168   00397E  2ADF               	incf	indf2,f,c
  7169                           
  7170                           ;dc_motor.c: 141:         mR->power++;
  7171   003980  C016  FFD9         	movff	turnRight@mR,fsr2l
  7172   003984  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7173   003988  2ADF               	incf	indf2,f,c
  7174   00398A                     
  7175                           ;dc_motor.c: 142:         setMotorPWM(mL);
  7176   00398A  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7177   00398E  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7178   003992  ECFA  F015         	call	_setMotorPWM	;wreg free
  7179   003996                     
  7180                           ;dc_motor.c: 143:         setMotorPWM(mR);
  7181   003996  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7182   00399A  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7183   00399E  ECFA  F015         	call	_setMotorPWM	;wreg free
  7184   0039A2                     
  7185                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7186   0039A2  0EE4               	movlw	228
  7187   0039A4                     u4207:
  7188   0039A4  D000               	nop2	
  7189   0039A6  D000               	nop2	
  7190   0039A8  2EE8               	decfsz	wreg,f,c
  7191   0039AA  D7FC               	bra	u4207
  7192   0039AC  D000               	nop2	
  7193   0039AE  D000               	nop2	
  7194   0039B0                     
  7195                           ;dc_motor.c: 145:     }
  7196   0039B0  4A18               	infsnz	turnRight@i^0,f,c
  7197   0039B2  2A19               	incf	(turnRight@i+1)^0,f,c
  7198   0039B4  5019               	movf	(turnRight@i+1)^0,w,c
  7199   0039B6  E109               	bnz	u2340
  7200   0039B8  0E32               	movlw	50
  7201   0039BA  5C18               	subwf	turnRight@i^0,w,c
  7202   0039BC  A0D8               	btfss	status,0,c
  7203   0039BE  EFE3  F01C         	goto	u2341
  7204   0039C2  EFE5  F01C         	goto	u2340
  7205   0039C6                     u2341:
  7206   0039C6  EFBB  F01C         	goto	l3036
  7207   0039CA                     u2340:
  7208   0039CA  0012               	return		;funcret
  7209   0039CC                     __end_of_turnRight:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _Blue_T180 *****************
  7213 ;; Defined at:
  7214 ;;		line 257 in file "dc_motor.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  7217 ;;		 -> motorL(9), 
  7218 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7219 ;;		 -> motorR(9), 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;Total ram usage:        4 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; Hardware stack levels required when called: 5
  7238 ;; This function calls:
  7239 ;;		_TimerReset
  7240 ;;		_reverseHalfSquare
  7241 ;;		_rotate180left
  7242 ;; This function is called by:
  7243 ;;		_Colour2Action
  7244 ;;		_White
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text36
  7249   003F6C                     __ptext36:
  7250                           	callstack 0
  7251   003F6C                     _Blue_T180:
  7252                           	callstack 24
  7253   003F6C                     
  7254                           ;dc_motor.c: 257: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          58: {;dc_motor.c: 259:     if (ForwardFlag){
  7255   003F6C  505F               	movf	_ForwardFlag^0,w,c	;volatile
  7256   003F6E  B4D8               	btfsc	status,2,c
  7257   003F70  EFBC  F01F         	goto	u3071
  7258   003F74  EFBE  F01F         	goto	u3070
  7259   003F78                     u3071:
  7260   003F78  EFD6  F01F         	goto	l3562
  7261   003F7C                     u3070:
  7262   003F7C                     
  7263                           ;dc_motor.c: 260:     reverseHalfSquare(mL,mR);
  7264   003F7C  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  7265   003F80  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  7266   003F84  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  7267   003F88  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  7268   003F8C  EC01  F01E         	call	_reverseHalfSquare	;wreg free
  7269                           
  7270                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  7271   003F90  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7272   003F94  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7273   003F98  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7274   003F9C  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7275   003FA0  ECE1  F01F         	call	_rotate180left	;wreg free
  7276   003FA4                     
  7277                           ;dc_motor.c: 263:     TimerReset();
  7278   003FA4  EC5E  F022         	call	_TimerReset	;wreg free
  7279                           
  7280                           ;dc_motor.c: 264:     }else{
  7281   003FA8  EFE0  F01F         	goto	l492
  7282   003FAC                     l3562:
  7283                           
  7284                           ;dc_motor.c: 265:     rotate180left(mL,mR);
  7285   003FAC  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  7286   003FB0  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  7287   003FB4  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  7288   003FB8  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  7289   003FBC  ECE1  F01F         	call	_rotate180left	;wreg free
  7290   003FC0                     l492:
  7291   003FC0  0012               	return		;funcret
  7292   003FC2                     __end_of_Blue_T180:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _rotate180left *****************
  7296 ;; Defined at:
  7297 ;;		line 207 in file "dc_motor.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7300 ;;		 -> motorL(9), 
  7301 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7302 ;;		 -> motorR(9), 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;Total ram usage:        4 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 4
  7321 ;; This function calls:
  7322 ;;		_Left45
  7323 ;; This function is called by:
  7324 ;;		_Blue_T180
  7325 ;;		_White
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text37
  7330   003FC2                     __ptext37:
  7331                           	callstack 0
  7332   003FC2                     _rotate180left:
  7333                           	callstack 24
  7334   003FC2                     
  7335                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  7336   003FC2  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7337   003FC6  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7338   003FCA  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7339   003FCE  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7340   003FD2  ECBD  F01D         	call	_Left45	;wreg free
  7341                           
  7342                           ;dc_motor.c: 211:     Left45(mL,mR);
  7343   003FD6  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7344   003FDA  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7345   003FDE  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7346   003FE2  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7347   003FE6  ECBD  F01D         	call	_Left45	;wreg free
  7348                           
  7349                           ;dc_motor.c: 212:     Left45(mL,mR);
  7350   003FEA  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7351   003FEE  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7352   003FF2  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7353   003FF6  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7354   003FFA  ECBD  F01D         	call	_Left45	;wreg free
  7355                           
  7356                           ;dc_motor.c: 213:     Left45(mL,mR);
  7357   003FFE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  7358   004002  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  7359   004006  C022  F01C         	movff	rotate180left@mR,Left45@mR
  7360   00400A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  7361   00400E  ECBD  F01D         	call	_Left45	;wreg free
  7362   004012  0012               	return		;funcret
  7363   004014                     __end_of_rotate180left:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function _Left45 *****************
  7367 ;; Defined at:
  7368 ;;		line 179 in file "dc_motor.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7371 ;;		 -> motorL(9), 
  7372 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7373 ;;		 -> motorR(9), 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;Total ram usage:        6 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 3
  7392 ;; This function calls:
  7393 ;;		_stop
  7394 ;;		_turnLeft
  7395 ;; This function is called by:
  7396 ;;		_rotate180left
  7397 ;;		_Red_R90
  7398 ;;		_Green_L90
  7399 ;;		_Yellow_rev1_R90
  7400 ;;		_Pink_rev1_L90
  7401 ;;		_Orange_R135
  7402 ;;		_LightBlue_L135
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text38
  7407   003B7A                     __ptext38:
  7408                           	callstack 0
  7409   003B7A                     _Left45:
  7410                           	callstack 25
  7411   003B7A                     
  7412                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  7413   003B7A  807E               	bsf	126,0,c	;volatile
  7414   003B7C                     
  7415                           ;dc_motor.c: 183:     stop(mL,mR);
  7416   003B7C  C01A  F014         	movff	Left45@mL,stop@mL
  7417   003B80  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7418   003B84  C01C  F016         	movff	Left45@mR,stop@mR
  7419   003B88  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7420   003B8C  EC48  F01C         	call	_stop	;wreg free
  7421   003B90                     
  7422                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7423   003B90  0E05               	movlw	5
  7424   003B92  6E1F               	movwf	(??_Left45+1)^0,c
  7425   003B94  0E0F               	movlw	15
  7426   003B96  6E1E               	movwf	??_Left45^0,c
  7427   003B98  0EF1               	movlw	241
  7428   003B9A                     u4217:
  7429   003B9A  2EE8               	decfsz	wreg,f,c
  7430   003B9C  D7FE               	bra	u4217
  7431   003B9E  2E1E               	decfsz	??_Left45^0,f,c
  7432   003BA0  D7FC               	bra	u4217
  7433   003BA2  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7434   003BA4  D7FA               	bra	u4217
  7435   003BA6  F000               	nop	
  7436   003BA8                     
  7437                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  7438   003BA8  C01A  F014         	movff	Left45@mL,turnLeft@mL
  7439   003BAC  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  7440   003BB0  C01C  F016         	movff	Left45@mR,turnLeft@mR
  7441   003BB4  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  7442   003BB8  ECE6  F01C         	call	_turnLeft	;wreg free
  7443                           
  7444                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  7445   003BBC  0E0D               	movlw	13
  7446   003BBE  6E1F               	movwf	(??_Left45+1)^0,c
  7447   003BC0  0E2D               	movlw	45
  7448   003BC2  6E1E               	movwf	??_Left45^0,c
  7449   003BC4  0ED8               	movlw	216
  7450   003BC6                     u4227:
  7451   003BC6  2EE8               	decfsz	wreg,f,c
  7452   003BC8  D7FE               	bra	u4227
  7453   003BCA  2E1E               	decfsz	??_Left45^0,f,c
  7454   003BCC  D7FC               	bra	u4227
  7455   003BCE  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7456   003BD0  D7FA               	bra	u4227
  7457   003BD2                     
  7458                           ;dc_motor.c: 187:     stop(mL,mR);
  7459   003BD2  C01A  F014         	movff	Left45@mL,stop@mL
  7460   003BD6  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  7461   003BDA  C01C  F016         	movff	Left45@mR,stop@mR
  7462   003BDE  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  7463   003BE2  EC48  F01C         	call	_stop	;wreg free
  7464   003BE6                     
  7465                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7466   003BE6  0E05               	movlw	5
  7467   003BE8  6E1F               	movwf	(??_Left45+1)^0,c
  7468   003BEA  0E0F               	movlw	15
  7469   003BEC  6E1E               	movwf	??_Left45^0,c
  7470   003BEE  0EF1               	movlw	241
  7471   003BF0                     u4237:
  7472   003BF0  2EE8               	decfsz	wreg,f,c
  7473   003BF2  D7FE               	bra	u4237
  7474   003BF4  2E1E               	decfsz	??_Left45^0,f,c
  7475   003BF6  D7FC               	bra	u4237
  7476   003BF8  2E1F               	decfsz	(??_Left45+1)^0,f,c
  7477   003BFA  D7FA               	bra	u4237
  7478   003BFC  F000               	nop	
  7479   003BFE                     
  7480                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  7481   003BFE  907E               	bcf	126,0,c	;volatile
  7482   003C00  0012               	return		;funcret
  7483   003C02                     __end_of_Left45:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _turnLeft *****************
  7487 ;; Defined at:
  7488 ;;		line 113 in file "dc_motor.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7491 ;;		 -> motorL(9), 
  7492 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7493 ;;		 -> motorR(9), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  i               2   23[COMRAM] unsigned int 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;Total ram usage:        6 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; Hardware stack levels required when called: 2
  7512 ;; This function calls:
  7513 ;;		_setMotorPWM
  7514 ;; This function is called by:
  7515 ;;		_Left45
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text39
  7520   0039CC                     __ptext39:
  7521                           	callstack 0
  7522   0039CC                     _turnLeft:
  7523                           	callstack 25
  7524   0039CC                     
  7525                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  7526   0039CC  EE20 F001          	lfsr	2,1
  7527   0039D0  5014               	movf	turnLeft@mL^0,w,c
  7528   0039D2  26D9               	addwf	fsr2l,f,c
  7529   0039D4  5015               	movf	(turnLeft@mL+1)^0,w,c
  7530   0039D6  22DA               	addwfc	fsr2h,f,c
  7531   0039D8  0E00               	movlw	0
  7532   0039DA  6EDF               	movwf	indf2,c
  7533                           
  7534                           ;dc_motor.c: 117:     (mR->direction) = 1;
  7535   0039DC  EE20 F001          	lfsr	2,1
  7536   0039E0  5016               	movf	turnLeft@mR^0,w,c
  7537   0039E2  26D9               	addwf	fsr2l,f,c
  7538   0039E4  5017               	movf	(turnLeft@mR+1)^0,w,c
  7539   0039E6  22DA               	addwfc	fsr2h,f,c
  7540   0039E8  0E01               	movlw	1
  7541   0039EA  6EDF               	movwf	indf2,c
  7542   0039EC                     
  7543                           ;dc_motor.c: 118:     setMotorPWM(mL);
  7544   0039EC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7545   0039F0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7546   0039F4  ECFA  F015         	call	_setMotorPWM	;wreg free
  7547   0039F8                     
  7548                           ;dc_motor.c: 119:     setMotorPWM(mR);
  7549   0039F8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7550   0039FC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7551   003A00  ECFA  F015         	call	_setMotorPWM	;wreg free
  7552   003A04                     
  7553                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  7554   003A04  0E00               	movlw	0
  7555   003A06  6E19               	movwf	(turnLeft@i+1)^0,c
  7556   003A08  0E00               	movlw	0
  7557   003A0A  6E18               	movwf	turnLeft@i^0,c
  7558   003A0C                     l2956:
  7559                           
  7560                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  7561   003A0C  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7562   003A10  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7563   003A14  2ADF               	incf	indf2,f,c
  7564                           
  7565                           ;dc_motor.c: 123:         mR->power++;
  7566   003A16  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7567   003A1A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7568   003A1E  2ADF               	incf	indf2,f,c
  7569   003A20                     
  7570                           ;dc_motor.c: 124:         setMotorPWM(mL);
  7571   003A20  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7572   003A24  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7573   003A28  ECFA  F015         	call	_setMotorPWM	;wreg free
  7574   003A2C                     
  7575                           ;dc_motor.c: 125:         setMotorPWM(mR);
  7576   003A2C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7577   003A30  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7578   003A34  ECFA  F015         	call	_setMotorPWM	;wreg free
  7579   003A38                     
  7580                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  7581   003A38  0EE4               	movlw	228
  7582   003A3A                     u4247:
  7583   003A3A  D000               	nop2	
  7584   003A3C  D000               	nop2	
  7585   003A3E  2EE8               	decfsz	wreg,f,c
  7586   003A40  D7FC               	bra	u4247
  7587   003A42  D000               	nop2	
  7588   003A44  D000               	nop2	
  7589   003A46                     
  7590                           ;dc_motor.c: 127:     }
  7591   003A46  4A18               	infsnz	turnLeft@i^0,f,c
  7592   003A48  2A19               	incf	(turnLeft@i+1)^0,f,c
  7593   003A4A  5019               	movf	(turnLeft@i+1)^0,w,c
  7594   003A4C  E109               	bnz	u2190
  7595   003A4E  0E32               	movlw	50
  7596   003A50  5C18               	subwf	turnLeft@i^0,w,c
  7597   003A52  A0D8               	btfss	status,0,c
  7598   003A54  EF2E  F01D         	goto	u2191
  7599   003A58  EF30  F01D         	goto	u2190
  7600   003A5C                     u2191:
  7601   003A5C  EF06  F01D         	goto	l2956
  7602   003A60                     u2190:
  7603   003A60  0012               	return		;funcret
  7604   003A62                     __end_of_turnLeft:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _reverseHalfSquare *****************
  7608 ;; Defined at:
  7609 ;;		line 216 in file "dc_motor.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  7612 ;;		 -> motorL(9), 
  7613 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  7614 ;;		 -> motorR(9), 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:        6 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 3
  7633 ;; This function calls:
  7634 ;;		_fullSpeedReverse
  7635 ;;		_stop
  7636 ;; This function is called by:
  7637 ;;		_Red_R90
  7638 ;;		_Green_L90
  7639 ;;		_Blue_T180
  7640 ;;		_Yellow_rev1_R90
  7641 ;;		_Pink_rev1_L90
  7642 ;;		_Orange_R135
  7643 ;;		_LightBlue_L135
  7644 ;;		_White
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text40
  7649   003C02                     __ptext40:
  7650                           	callstack 0
  7651   003C02                     _reverseHalfSquare:
  7652                           	callstack 25
  7653   003C02                     
  7654                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  7655   003C02  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7656   003C06  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7657   003C0A  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7658   003C0E  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7659   003C12  EC48  F01C         	call	_stop	;wreg free
  7660   003C16                     
  7661                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7662   003C16  0E09               	movlw	9
  7663   003C18  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7664   003C1A  0E1E               	movlw	30
  7665   003C1C  6E1F               	movwf	??_reverseHalfSquare^0,c
  7666   003C1E  0EE4               	movlw	228
  7667   003C20                     u4257:
  7668   003C20  2EE8               	decfsz	wreg,f,c
  7669   003C22  D7FE               	bra	u4257
  7670   003C24  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7671   003C26  D7FC               	bra	u4257
  7672   003C28  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7673   003C2A  D7FA               	bra	u4257
  7674   003C2C  D000               	nop2	
  7675   003C2E                     
  7676                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  7677   003C2E  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  7678   003C32  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  7679   003C36  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  7680   003C3A  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  7681   003C3E  EC84  F01E         	call	_fullSpeedReverse	;wreg free
  7682                           
  7683                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  7684   003C42  0E1D               	movlw	29
  7685   003C44  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7686   003C46  0E69               	movlw	105
  7687   003C48  6E1F               	movwf	??_reverseHalfSquare^0,c
  7688   003C4A  0EA5               	movlw	165
  7689   003C4C                     u4267:
  7690   003C4C  2EE8               	decfsz	wreg,f,c
  7691   003C4E  D7FE               	bra	u4267
  7692   003C50  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7693   003C52  D7FC               	bra	u4267
  7694   003C54  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7695   003C56  D7FA               	bra	u4267
  7696   003C58  F000               	nop	
  7697   003C5A                     
  7698                           ;dc_motor.c: 222:     stop(mL,mR);
  7699   003C5A  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  7700   003C5E  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  7701   003C62  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  7702   003C66  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  7703   003C6A  EC48  F01C         	call	_stop	;wreg free
  7704   003C6E                     
  7705                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7706   003C6E  0E09               	movlw	9
  7707   003C70  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  7708   003C72  0E1E               	movlw	30
  7709   003C74  6E1F               	movwf	??_reverseHalfSquare^0,c
  7710   003C76  0EE4               	movlw	228
  7711   003C78                     u4277:
  7712   003C78  2EE8               	decfsz	wreg,f,c
  7713   003C7A  D7FE               	bra	u4277
  7714   003C7C  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  7715   003C7E  D7FC               	bra	u4277
  7716   003C80  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  7717   003C82  D7FA               	bra	u4277
  7718   003C84  D000               	nop2	
  7719   003C86  0012               	return		;funcret
  7720   003C88                     __end_of_reverseHalfSquare:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function _stop *****************
  7724 ;; Defined at:
  7725 ;;		line 93 in file "dc_motor.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7728 ;;		 -> motorL(9), 
  7729 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7730 ;;		 -> motorR(9), 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;Total ram usage:        5 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 2
  7749 ;; This function calls:
  7750 ;;		_setMotorPWM
  7751 ;; This function is called by:
  7752 ;;		_main
  7753 ;;		_Left45
  7754 ;;		_Right45
  7755 ;;		_reverseHalfSquare
  7756 ;;		_Yellow_rev1_R90
  7757 ;;		_Pink_rev1_L90
  7758 ;;		_Orange_R135
  7759 ;;		_White
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text41
  7764   003890                     __ptext41:
  7765                           	callstack 0
  7766   003890                     _stop:
  7767                           	callstack 28
  7768   003890                     
  7769                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  7770   003890  887C               	bsf	124,4,c	;volatile
  7771                           
  7772                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7773   003892  EF81  F01C         	goto	l2940
  7774   003896                     l2926:
  7775                           
  7776                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  7777   003896  C014  FFD9         	movff	stop@mL,fsr2l
  7778   00389A  C015  FFDA         	movff	stop@mL+1,fsr2h
  7779   00389E  50DF               	movf	indf2,w,c
  7780   0038A0  B4D8               	btfsc	status,2,c
  7781   0038A2  EF55  F01C         	goto	u2151
  7782   0038A6  EF57  F01C         	goto	u2150
  7783   0038AA                     u2151:
  7784   0038AA  EF5C  F01C         	goto	l2930
  7785   0038AE                     u2150:
  7786   0038AE                     
  7787                           ;dc_motor.c: 100:             mL->power--;
  7788   0038AE  C014  FFD9         	movff	stop@mL,fsr2l
  7789   0038B2  C015  FFDA         	movff	stop@mL+1,fsr2h
  7790   0038B6  06DF               	decf	indf2,f,c
  7791   0038B8                     l2930:
  7792                           
  7793                           ;dc_motor.c: 102:         if ((mR->power)>0){
  7794   0038B8  C016  FFD9         	movff	stop@mR,fsr2l
  7795   0038BC  C017  FFDA         	movff	stop@mR+1,fsr2h
  7796   0038C0  50DF               	movf	indf2,w,c
  7797   0038C2  B4D8               	btfsc	status,2,c
  7798   0038C4  EF66  F01C         	goto	u2161
  7799   0038C8  EF68  F01C         	goto	u2160
  7800   0038CC                     u2161:
  7801   0038CC  EF6D  F01C         	goto	l2934
  7802   0038D0                     u2160:
  7803   0038D0                     
  7804                           ;dc_motor.c: 103:             mR->power--;
  7805   0038D0  C016  FFD9         	movff	stop@mR,fsr2l
  7806   0038D4  C017  FFDA         	movff	stop@mR+1,fsr2h
  7807   0038D8  06DF               	decf	indf2,f,c
  7808   0038DA                     l2934:
  7809                           
  7810                           ;dc_motor.c: 105:         setMotorPWM(mL);
  7811   0038DA  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7812   0038DE  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7813   0038E2  ECFA  F015         	call	_setMotorPWM	;wreg free
  7814   0038E6                     
  7815                           ;dc_motor.c: 106:         setMotorPWM(mR);
  7816   0038E6  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7817   0038EA  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7818   0038EE  ECFA  F015         	call	_setMotorPWM	;wreg free
  7819   0038F2                     
  7820                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7821   0038F2  0E09               	movlw	9
  7822   0038F4  6E18               	movwf	??_stop^0,c
  7823   0038F6  0E4E               	movlw	78
  7824   0038F8                     u4287:
  7825   0038F8  2EE8               	decfsz	wreg,f,c
  7826   0038FA  D7FE               	bra	u4287
  7827   0038FC  2E18               	decfsz	??_stop^0,f,c
  7828   0038FE  D7FC               	bra	u4287
  7829   003900  D000               	nop2	
  7830   003902                     l2940:
  7831                           
  7832                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  7833   003902  C014  FFD9         	movff	stop@mL,fsr2l
  7834   003906  C015  FFDA         	movff	stop@mL+1,fsr2h
  7835   00390A  50DF               	movf	indf2,w,c
  7836   00390C  B4D8               	btfsc	status,2,c
  7837   00390E  EF8B  F01C         	goto	u2171
  7838   003912  EF8D  F01C         	goto	u2170
  7839   003916                     u2171:
  7840   003916  EF99  F01C         	goto	l444
  7841   00391A                     u2170:
  7842   00391A  C016  FFD9         	movff	stop@mR,fsr2l
  7843   00391E  C017  FFDA         	movff	stop@mR+1,fsr2h
  7844   003922  50DF               	movf	indf2,w,c
  7845   003924  A4D8               	btfss	status,2,c
  7846   003926  EF97  F01C         	goto	u2181
  7847   00392A  EF99  F01C         	goto	u2180
  7848   00392E                     u2181:
  7849   00392E  EF4B  F01C         	goto	l2926
  7850   003932                     u2180:
  7851   003932                     l444:
  7852                           
  7853                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  7854   003932  987C               	bcf	124,4,c	;volatile
  7855   003934  0012               	return		;funcret
  7856   003936                     __end_of_stop:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _fullSpeedReverse *****************
  7860 ;; Defined at:
  7861 ;;		line 163 in file "dc_motor.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7864 ;;		 -> motorL(9), 
  7865 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7866 ;;		 -> motorR(9), 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  i               2   24[COMRAM] unsigned int 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;Total ram usage:        7 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 2
  7885 ;; This function calls:
  7886 ;;		_setMotorPWM
  7887 ;; This function is called by:
  7888 ;;		_reverseHalfSquare
  7889 ;;		_Yellow_rev1_R90
  7890 ;;		_Pink_rev1_L90
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text42
  7895   003D08                     __ptext42:
  7896                           	callstack 0
  7897   003D08                     _fullSpeedReverse:
  7898                           	callstack 25
  7899   003D08                     
  7900                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  7901   003D08  EE20 F001          	lfsr	2,1
  7902   003D0C  5014               	movf	fullSpeedReverse@mL^0,w,c
  7903   003D0E  26D9               	addwf	fsr2l,f,c
  7904   003D10  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  7905   003D12  22DA               	addwfc	fsr2h,f,c
  7906   003D14  0E00               	movlw	0
  7907   003D16  6EDF               	movwf	indf2,c
  7908                           
  7909                           ;dc_motor.c: 166:  (mR->direction) = 0;
  7910   003D18  EE20 F001          	lfsr	2,1
  7911   003D1C  5016               	movf	fullSpeedReverse@mR^0,w,c
  7912   003D1E  26D9               	addwf	fsr2l,f,c
  7913   003D20  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  7914   003D22  22DA               	addwfc	fsr2h,f,c
  7915   003D24  0E00               	movlw	0
  7916   003D26  6EDF               	movwf	indf2,c
  7917   003D28                     
  7918                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  7919   003D28  0E00               	movlw	0
  7920   003D2A  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  7921   003D2C  0E00               	movlw	0
  7922   003D2E  6E19               	movwf	fullSpeedReverse@i^0,c
  7923   003D30                     l3056:
  7924                           
  7925                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  7926   003D30  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  7927   003D34  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  7928   003D38  2ADF               	incf	indf2,f,c
  7929                           
  7930                           ;dc_motor.c: 171:         (mR->power)++;
  7931   003D3A  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  7932   003D3E  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  7933   003D42  2ADF               	incf	indf2,f,c
  7934   003D44                     
  7935                           ;dc_motor.c: 172:         setMotorPWM(mL);
  7936   003D44  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  7937   003D48  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  7938   003D4C  ECFA  F015         	call	_setMotorPWM	;wreg free
  7939   003D50                     
  7940                           ;dc_motor.c: 173:         setMotorPWM(mR);
  7941   003D50  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  7942   003D54  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  7943   003D58  ECFA  F015         	call	_setMotorPWM	;wreg free
  7944   003D5C                     
  7945                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7946   003D5C  0E09               	movlw	9
  7947   003D5E  6E18               	movwf	??_fullSpeedReverse^0,c
  7948   003D60  0E4E               	movlw	78
  7949   003D62                     u4297:
  7950   003D62  2EE8               	decfsz	wreg,f,c
  7951   003D64  D7FE               	bra	u4297
  7952   003D66  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  7953   003D68  D7FC               	bra	u4297
  7954   003D6A  D000               	nop2	
  7955   003D6C                     
  7956                           ;dc_motor.c: 175:     }
  7957   003D6C  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  7958   003D6E  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  7959   003D70  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  7960   003D72  E109               	bnz	u2350
  7961   003D74  0E32               	movlw	50
  7962   003D76  5C19               	subwf	fullSpeedReverse@i^0,w,c
  7963   003D78  A0D8               	btfss	status,0,c
  7964   003D7A  EFC1  F01E         	goto	u2351
  7965   003D7E  EFC3  F01E         	goto	u2350
  7966   003D82                     u2351:
  7967   003D82  EF98  F01E         	goto	l3056
  7968   003D86                     u2350:
  7969   003D86  0012               	return		;funcret
  7970   003D88                     __end_of_fullSpeedReverse:
  7971                           	callstack 0
  7972                           
  7973 ;; *************** function _setMotorPWM *****************
  7974 ;; Defined at:
  7975 ;;		line 70 in file "dc_motor.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  m               2   13[COMRAM] PTR struct DC_motor
  7978 ;;		 -> motorR(9), motorL(9), 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  negDuty         1   18[COMRAM] unsigned char 
  7981 ;;  posDuty         1   17[COMRAM] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:        6 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 1
  7998 ;; This function calls:
  7999 ;;		___lwdiv
  8000 ;;		___wmul
  8001 ;; This function is called by:
  8002 ;;		_stop
  8003 ;;		_turnLeft
  8004 ;;		_turnRight
  8005 ;;		_fullSpeedAhead
  8006 ;;		_fullSpeedReverse
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text43
  8011   002BF4                     __ptext43:
  8012                           	callstack 0
  8013   002BF4                     _setMotorPWM:
  8014                           	callstack 28
  8015   002BF4                     
  8016                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8017   002BF4  EE20 F002          	lfsr	2,2
  8018   002BF8  500E               	movf	setMotorPWM@m^0,w,c
  8019   002BFA  26D9               	addwf	fsr2l,f,c
  8020   002BFC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8021   002BFE  22DA               	addwfc	fsr2h,f,c
  8022   002C00  50DF               	movf	indf2,w,c
  8023   002C02  B4D8               	btfsc	status,2,c
  8024   002C04  EF06  F016         	goto	u2071
  8025   002C08  EF08  F016         	goto	u2070
  8026   002C0C                     u2071:
  8027   002C0C  EF3C  F016         	goto	l2890
  8028   002C10                     u2070:
  8029   002C10                     
  8030                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  8031   002C10  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8032   002C14  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8033   002C18  50DF               	movf	indf2,w,c
  8034   002C1A  6E10               	movwf	??_setMotorPWM^0,c
  8035   002C1C  5010               	movf	??_setMotorPWM^0,w,c
  8036   002C1E  6E01               	movwf	___wmul@multiplier^0,c
  8037   002C20  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8038   002C22  EE20 F003          	lfsr	2,3
  8039   002C26  500E               	movf	setMotorPWM@m^0,w,c
  8040   002C28  26D9               	addwf	fsr2l,f,c
  8041   002C2A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8042   002C2C  22DA               	addwfc	fsr2h,f,c
  8043   002C2E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8044   002C32  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8045   002C36  EC02  F022         	call	___wmul	;wreg free
  8046   002C3A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8047   002C3E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8048   002C42  0E00               	movlw	0
  8049   002C44  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8050   002C46  0E64               	movlw	100
  8051   002C48  6E09               	movwf	___lwdiv@divisor^0,c
  8052   002C4A  EC7C  F01F         	call	___lwdiv	;wreg free
  8053   002C4E  EE20 F003          	lfsr	2,3
  8054   002C52  500E               	movf	setMotorPWM@m^0,w,c
  8055   002C54  26D9               	addwf	fsr2l,f,c
  8056   002C56  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8057   002C58  22DA               	addwfc	fsr2h,f,c
  8058   002C5A  50DF               	movf	indf2,w,c
  8059   002C5C  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8060   002C5E  5007               	movf	?___lwdiv^0,w,c
  8061   002C60  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8062   002C62  6E12               	movwf	setMotorPWM@posDuty^0,c
  8063   002C64                     
  8064                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  8065   002C64  EE20 F003          	lfsr	2,3
  8066   002C68  500E               	movf	setMotorPWM@m^0,w,c
  8067   002C6A  26D9               	addwf	fsr2l,f,c
  8068   002C6C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8069   002C6E  22DA               	addwfc	fsr2h,f,c
  8070   002C70  50DF               	movf	indf2,w,c
  8071   002C72  6E13               	movwf	setMotorPWM@negDuty^0,c
  8072                           
  8073                           ;dc_motor.c: 77:     }
  8074   002C74  EF5F  F016         	goto	l2894
  8075   002C78                     l2890:
  8076                           
  8077                           ;dc_motor.c: 79:         posDuty=0;
  8078   002C78  0E00               	movlw	0
  8079   002C7A  6E12               	movwf	setMotorPWM@posDuty^0,c
  8080   002C7C                     
  8081                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8082   002C7C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8083   002C80  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8084   002C84  50DF               	movf	indf2,w,c
  8085   002C86  6E10               	movwf	??_setMotorPWM^0,c
  8086   002C88  5010               	movf	??_setMotorPWM^0,w,c
  8087   002C8A  6E01               	movwf	___wmul@multiplier^0,c
  8088   002C8C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8089   002C8E  EE20 F003          	lfsr	2,3
  8090   002C92  500E               	movf	setMotorPWM@m^0,w,c
  8091   002C94  26D9               	addwf	fsr2l,f,c
  8092   002C96  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8093   002C98  22DA               	addwfc	fsr2h,f,c
  8094   002C9A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8095   002C9E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8096   002CA2  EC02  F022         	call	___wmul	;wreg free
  8097   002CA6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8098   002CAA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8099   002CAE  0E00               	movlw	0
  8100   002CB0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8101   002CB2  0E64               	movlw	100
  8102   002CB4  6E09               	movwf	___lwdiv@divisor^0,c
  8103   002CB6  EC7C  F01F         	call	___lwdiv	;wreg free
  8104   002CBA  5007               	movf	?___lwdiv^0,w,c
  8105   002CBC  6E13               	movwf	setMotorPWM@negDuty^0,c
  8106   002CBE                     l2894:
  8107                           
  8108                           ;dc_motor.c: 83:     if (m->direction) {
  8109   002CBE  EE20 F001          	lfsr	2,1
  8110   002CC2  500E               	movf	setMotorPWM@m^0,w,c
  8111   002CC4  26D9               	addwf	fsr2l,f,c
  8112   002CC6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8113   002CC8  22DA               	addwfc	fsr2h,f,c
  8114   002CCA  50DF               	movf	indf2,w,c
  8115   002CCC  B4D8               	btfsc	status,2,c
  8116   002CCE  EF6B  F016         	goto	u2081
  8117   002CD2  EF6D  F016         	goto	u2080
  8118   002CD6                     u2081:
  8119   002CD6  EF8F  F016         	goto	l2898
  8120   002CDA                     u2080:
  8121   002CDA                     
  8122                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  8123   002CDA  EE20 F005          	lfsr	2,5
  8124   002CDE  500E               	movf	setMotorPWM@m^0,w,c
  8125   002CE0  26D9               	addwf	fsr2l,f,c
  8126   002CE2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8127   002CE4  22DA               	addwfc	fsr2h,f,c
  8128   002CE6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8129   002CEA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8130   002CEE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8131   002CF2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8132   002CF6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8133                           
  8134                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  8135   002CFA  EE20 F007          	lfsr	2,7
  8136   002CFE  500E               	movf	setMotorPWM@m^0,w,c
  8137   002D00  26D9               	addwf	fsr2l,f,c
  8138   002D02  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8139   002D04  22DA               	addwfc	fsr2h,f,c
  8140   002D06  CFDE F010          	movff	postinc2,??_setMotorPWM
  8141   002D0A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8142   002D0E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8143   002D12  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8144   002D16  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8145                           
  8146                           ;dc_motor.c: 86:     } else {
  8147   002D1A  EFAF  F016         	goto	l435
  8148   002D1E                     l2898:
  8149                           
  8150                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  8151   002D1E  EE20 F005          	lfsr	2,5
  8152   002D22  500E               	movf	setMotorPWM@m^0,w,c
  8153   002D24  26D9               	addwf	fsr2l,f,c
  8154   002D26  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8155   002D28  22DA               	addwfc	fsr2h,f,c
  8156   002D2A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8157   002D2E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8158   002D32  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8159   002D36  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8160   002D3A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8161                           
  8162                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  8163   002D3E  EE20 F007          	lfsr	2,7
  8164   002D42  500E               	movf	setMotorPWM@m^0,w,c
  8165   002D44  26D9               	addwf	fsr2l,f,c
  8166   002D46  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8167   002D48  22DA               	addwfc	fsr2h,f,c
  8168   002D4A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8169   002D4E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8170   002D52  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8171   002D56  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8172   002D5A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8173   002D5E                     l435:
  8174   002D5E  0012               	return		;funcret
  8175   002D60                     __end_of_setMotorPWM:
  8176                           	callstack 0
  8177                           
  8178 ;; *************** function ___wmul *****************
  8179 ;; Defined at:
  8180 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  multiplier      2    0[COMRAM] unsigned int 
  8183 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  product         2    4[COMRAM] unsigned int 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  2    0[COMRAM] unsigned int 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0, prodl, prodh
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8199 ;;Total ram usage:        6 bytes
  8200 ;; Hardware stack levels used: 1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_setMotorPWM
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text44
  8209   004404                     __ptext44:
  8210                           	callstack 0
  8211   004404                     ___wmul:
  8212                           	callstack 28
  8213   004404  5001               	movf	___wmul@multiplier^0,w,c
  8214   004406  0203               	mulwf	___wmul@multiplicand^0,c
  8215   004408  CFF3 F005          	movff	prodl,___wmul@product
  8216   00440C  CFF4 F006          	movff	prodh,___wmul@product+1
  8217   004410  5001               	movf	___wmul@multiplier^0,w,c
  8218   004412  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8219   004414  50F3               	movf	243,w,c
  8220   004416  2606               	addwf	(___wmul@product+1)^0,f,c
  8221   004418  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8222   00441A  0203               	mulwf	___wmul@multiplicand^0,c
  8223   00441C  50F3               	movf	243,w,c
  8224   00441E  2606               	addwf	(___wmul@product+1)^0,f,c
  8225   004420  C005  F001         	movff	___wmul@product,?___wmul
  8226   004424  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8227   004428  0012               	return		;funcret
  8228   00442A                     __end_of___wmul:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function ___lwdiv *****************
  8232 ;; Defined at:
  8233 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  dividend        2    6[COMRAM] unsigned int 
  8236 ;;  divisor         2    8[COMRAM] unsigned int 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  quotient        2   10[COMRAM] unsigned int 
  8239 ;;  counter         1   12[COMRAM] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  2    6[COMRAM] unsigned int 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;Total ram usage:        7 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_setMotorPWM
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text45
  8263   003EF8                     __ptext45:
  8264                           	callstack 0
  8265   003EF8                     ___lwdiv:
  8266                           	callstack 28
  8267   003EF8  0E00               	movlw	0
  8268   003EFA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8269   003EFC  0E00               	movlw	0
  8270   003EFE  6E0B               	movwf	___lwdiv@quotient^0,c
  8271   003F00  5009               	movf	___lwdiv@divisor^0,w,c
  8272   003F02  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8273   003F04  B4D8               	btfsc	status,2,c
  8274   003F06  EF87  F01F         	goto	u2041
  8275   003F0A  EF89  F01F         	goto	u2040
  8276   003F0E                     u2041:
  8277   003F0E  EFB1  F01F         	goto	l1074
  8278   003F12                     u2040:
  8279   003F12  0E01               	movlw	1
  8280   003F14  6E0D               	movwf	___lwdiv@counter^0,c
  8281   003F16  EF91  F01F         	goto	l2870
  8282   003F1A                     l2868:
  8283   003F1A  90D8               	bcf	status,0,c
  8284   003F1C  3609               	rlcf	___lwdiv@divisor^0,f,c
  8285   003F1E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8286   003F20  2A0D               	incf	___lwdiv@counter^0,f,c
  8287   003F22                     l2870:
  8288   003F22  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8289   003F24  EF96  F01F         	goto	u2051
  8290   003F28  EF98  F01F         	goto	u2050
  8291   003F2C                     u2051:
  8292   003F2C  EF8D  F01F         	goto	l2868
  8293   003F30                     u2050:
  8294   003F30                     l2872:
  8295   003F30  90D8               	bcf	status,0,c
  8296   003F32  360B               	rlcf	___lwdiv@quotient^0,f,c
  8297   003F34  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8298   003F36  5009               	movf	___lwdiv@divisor^0,w,c
  8299   003F38  5C07               	subwf	___lwdiv@dividend^0,w,c
  8300   003F3A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8301   003F3C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8302   003F3E  A0D8               	btfss	status,0,c
  8303   003F40  EFA4  F01F         	goto	u2061
  8304   003F44  EFA6  F01F         	goto	u2060
  8305   003F48                     u2061:
  8306   003F48  EFAB  F01F         	goto	l2880
  8307   003F4C                     u2060:
  8308   003F4C  5009               	movf	___lwdiv@divisor^0,w,c
  8309   003F4E  5E07               	subwf	___lwdiv@dividend^0,f,c
  8310   003F50  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8311   003F52  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8312   003F54  800B               	bsf	___lwdiv@quotient^0,0,c
  8313   003F56                     l2880:
  8314   003F56  90D8               	bcf	status,0,c
  8315   003F58  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8316   003F5A  3209               	rrcf	___lwdiv@divisor^0,f,c
  8317   003F5C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8318   003F5E  EF98  F01F         	goto	l2872
  8319   003F62                     l1074:
  8320   003F62  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8321   003F66  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8322   003F6A  0012               	return		;funcret
  8323   003F6C                     __end_of___lwdiv:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _TimerReset *****************
  8327 ;; Defined at:
  8328 ;;		line 28 in file "timer.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;Total ram usage:        0 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_Red_R90
  8352 ;;		_Green_L90
  8353 ;;		_Blue_T180
  8354 ;;		_Yellow_rev1_R90
  8355 ;;		_Pink_rev1_L90
  8356 ;;		_Orange_R135
  8357 ;;		_LightBlue_L135
  8358 ;;		_White
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text46
  8363   0044BC                     __ptext46:
  8364                           	callstack 0
  8365   0044BC                     _TimerReset:
  8366                           	callstack 28
  8367   0044BC                     
  8368                           ;timer.c: 30:     TMR0L = 0;
  8369   0044BC  0E00               	movlw	0
  8370   0044BE  6ED3               	movwf	211,c	;volatile
  8371                           
  8372                           ;timer.c: 31:     TMR0H = 0;
  8373   0044C0  0E00               	movlw	0
  8374   0044C2  6ED4               	movwf	212,c	;volatile
  8375   0044C4  0012               	return		;funcret
  8376   0044C6                     __end_of_TimerReset:
  8377                           	callstack 0
  8378                           
  8379 ;; *************** function _Color2String *****************
  8380 ;; Defined at:
  8381 ;;		line 39 in file "serial.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  buf             2   68[COMRAM] PTR unsigned char 
  8384 ;;		 -> main@data(100), 
  8385 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  8386 ;;		 -> colorf(22), 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  8389 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  8390 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  8391 ;;		 -> STR_1(1), 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      void 
  8394 ;; Registers used:
  8395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;Total ram usage:        6 bytes
  8406 ;; Hardware stack levels used: 1
  8407 ;; Hardware stack levels required when called: 6
  8408 ;; This function calls:
  8409 ;;		_Hue2Colour
  8410 ;;		_sendStringSerial4
  8411 ;;		_sprintf
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text47
  8418   004308                     __ptext47:
  8419                           	callstack 0
  8420   004308                     _Color2String:
  8421                           	callstack 24
  8422   004308                     
  8423                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  8424   004308  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  8425   00430C  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  8426   004310  ECAA  F00A         	call	_Hue2Colour	;wreg free
  8427   004314  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  8428   004318  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  8429   00431C                     
  8430                           ;serial.c: 45:     sprintf(buf,"Colour is %s  \r",colourname);
  8431   00431C  C045  F032         	movff	Color2String@buf,sprintf@s
  8432   004320  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  8433   004324  0E01               	movlw	low STR_10
  8434   004326  6E34               	movwf	sprintf@fmt^0,c
  8435   004328  0E0E               	movlw	high STR_10
  8436   00432A  6E35               	movwf	(sprintf@fmt+1)^0,c
  8437   00432C  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  8438   004330  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  8439   004334  ECD2  F020         	call	_sprintf	;wreg free
  8440   004338                     
  8441                           ;serial.c: 46:     sendStringSerial4(buf);
  8442   004338  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  8443   00433C  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  8444   004340  ECA3  F021         	call	_sendStringSerial4	;wreg free
  8445   004344  0012               	return		;funcret
  8446   004346                     __end_of_Color2String:
  8447                           	callstack 0
  8448                           
  8449 ;; *************** function _sprintf *****************
  8450 ;; Defined at:
  8451 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  s               2   49[COMRAM] PTR unsigned char 
  8454 ;;		 -> main@data(100), 
  8455 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  8456 ;;		 -> STR_10(16), 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  f              11   57[COMRAM] struct _IO_FILE
  8459 ;;  ap              2   55[COMRAM] PTR void [1]
  8460 ;;		 -> ?_sprintf(2), 
  8461 ;;  ret             2    0        int 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  2   49[COMRAM] int 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8471 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8475 ;;Total ram usage:       19 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; Hardware stack levels required when called: 5
  8478 ;; This function calls:
  8479 ;;		_vfprintf
  8480 ;; This function is called by:
  8481 ;;		_Color2String
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text48
  8486   0041A4                     __ptext48:
  8487                           	callstack 0
  8488   0041A4                     _sprintf:
  8489                           	callstack 24
  8490   0041A4  0E36               	movlw	low (?_sprintf+4)
  8491   0041A6  6E38               	movwf	sprintf@ap^0,c
  8492   0041A8  0E00               	movlw	high (?_sprintf+4)
  8493   0041AA  6E39               	movwf	(sprintf@ap+1)^0,c
  8494   0041AC  C032  F03A         	movff	sprintf@s,sprintf@f
  8495   0041B0  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  8496   0041B4  0E00               	movlw	0
  8497   0041B6  6E3E               	movwf	(sprintf@f+4)^0,c
  8498   0041B8  0E00               	movlw	0
  8499   0041BA  6E3D               	movwf	(sprintf@f+3)^0,c
  8500   0041BC  0E00               	movlw	0
  8501   0041BE  6E44               	movwf	(sprintf@f+10)^0,c
  8502   0041C0  0E00               	movlw	0
  8503   0041C2  6E43               	movwf	(sprintf@f+9)^0,c
  8504   0041C4  0E3A               	movlw	low sprintf@f
  8505   0041C6  6E2A               	movwf	vfprintf@fp^0,c
  8506   0041C8  0E00               	movlw	high sprintf@f
  8507   0041CA  6E2B               	movwf	(vfprintf@fp+1)^0,c
  8508   0041CC  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  8509   0041D0  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8510   0041D4  0E38               	movlw	low sprintf@ap
  8511   0041D6  6E2E               	movwf	vfprintf@ap^0,c
  8512   0041D8  0E00               	movlw	high sprintf@ap
  8513   0041DA  6E2F               	movwf	(vfprintf@ap+1)^0,c
  8514   0041DC  ECF9  F020         	call	_vfprintf	;wreg free
  8515   0041E0  503D               	movf	(sprintf@f+3)^0,w,c
  8516   0041E2  2432               	addwf	sprintf@s^0,w,c
  8517   0041E4  6ED9               	movwf	fsr2l,c
  8518   0041E6  503E               	movf	(sprintf@f+4)^0,w,c
  8519   0041E8  2033               	addwfc	(sprintf@s+1)^0,w,c
  8520   0041EA  6EDA               	movwf	fsr2h,c
  8521   0041EC  0E00               	movlw	0
  8522   0041EE  6EDF               	movwf	indf2,c
  8523   0041F0  0012               	return		;funcret
  8524   0041F2                     __end_of_sprintf:
  8525                           	callstack 0
  8526                           
  8527 ;; *************** function _vfprintf *****************
  8528 ;; Defined at:
  8529 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  8532 ;;		 -> sprintf@f(11), 
  8533 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  8534 ;;		 -> STR_10(16), 
  8535 ;;  ap              2   45[COMRAM] PTR PTR void 
  8536 ;;		 -> sprintf@ap(2), 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  8539 ;;		 -> STR_10(16), 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  2   41[COMRAM] int 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8549 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8552 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8553 ;;Total ram usage:        8 bytes
  8554 ;; Hardware stack levels used: 1
  8555 ;; Hardware stack levels required when called: 4
  8556 ;; This function calls:
  8557 ;;		_vfpfcnvrt
  8558 ;; This function is called by:
  8559 ;;		_sprintf
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text49
  8564   0041F2                     __ptext49:
  8565                           	callstack 0
  8566   0041F2                     _vfprintf:
  8567                           	callstack 24
  8568   0041F2                     
  8569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  8570   0041F2  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  8571   0041F6  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8572                           
  8573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8574   0041FA  EF0D  F021         	goto	l3426
  8575   0041FE                     l3424:
  8576                           
  8577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8578   0041FE  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  8579   004202  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8580   004206  0E30               	movlw	low vfprintf@cfmt
  8581   004208  6E22               	movwf	vfpfcnvrt@fmt^0,c
  8582   00420A  0E00               	movlw	high vfprintf@cfmt
  8583   00420C  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  8584   00420E  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  8585   004212  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8586   004216  ECB0  F016         	call	_vfpfcnvrt	;wreg free
  8587   00421A                     l3426:
  8588                           
  8589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8590   00421A  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  8591   00421E  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8592   004222                     	if	0	;tblptru may be non-zero
  8593   004222                     	endif
  8594   004222                     	if	0	;tblptru may be non-zero
  8595   004222                     	endif
  8596   004222  0008               	tblrd		*
  8597   004224  50F5               	movf	tablat,w,c
  8598   004226  0900               	iorlw	0
  8599   004228  A4D8               	btfss	status,2,c
  8600   00422A  EF19  F021         	goto	u2881
  8601   00422E  EF1B  F021         	goto	u2880
  8602   004232                     u2881:
  8603   004232  EFFF  F020         	goto	l3424
  8604   004236                     u2880:
  8605   004236                     
  8606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  8607   004236  0E00               	movlw	0
  8608   004238  6E2B               	movwf	(?_vfprintf+1)^0,c
  8609   00423A  0E00               	movlw	0
  8610   00423C  6E2A               	movwf	?_vfprintf^0,c
  8611   00423E  0012               	return		;funcret
  8612   004240                     __end_of_vfprintf:
  8613                           	callstack 0
  8614                           
  8615 ;; *************** function _vfpfcnvrt *****************
  8616 ;; Defined at:
  8617 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8620 ;;		 -> sprintf@f(11), 
  8621 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  8622 ;;		 -> vfprintf@cfmt(2), 
  8623 ;;  ap              2   35[COMRAM] PTR PTR void 
  8624 ;;		 -> sprintf@ap(2), 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  convarg         8    0        struct .
  8627 ;;  cp              3    0        PTR unsigned char 
  8628 ;;  i               2    0        int 
  8629 ;;  done            2    0        int 
  8630 ;;  c               1    0        unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8640 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8643 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8644 ;;Total ram usage:       10 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 3
  8647 ;; This function calls:
  8648 ;;		_fputc
  8649 ;;		_stoa
  8650 ;;		_strncmp
  8651 ;; This function is called by:
  8652 ;;		_vfprintf
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text50
  8657   002D60                     __ptext50:
  8658                           	callstack 0
  8659   002D60                     _vfpfcnvrt:
  8660                           	callstack 24
  8661   002D60                     
  8662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  8663   002D60  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8664   002D64  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8665   002D68  CFDE FFF6          	movff	postinc2,tblptrl
  8666   002D6C  CFDD FFF7          	movff	postdec2,tblptrh
  8667   002D70                     	if	0	;tblptru may be non-zero
  8668   002D70                     	endif
  8669   002D70                     	if	0	;tblptru may be non-zero
  8670   002D70                     	endif
  8671   002D70  0008               	tblrd		*
  8672   002D72  50F5               	movf	tablat,w,c
  8673   002D74  0A25               	xorlw	37
  8674   002D76  A4D8               	btfss	status,2,c
  8675   002D78  EFC0  F016         	goto	u2361
  8676   002D7C  EFC2  F016         	goto	u2360
  8677   002D80                     u2361:
  8678   002D80  EF48  F017         	goto	l3110
  8679   002D84                     u2360:
  8680   002D84                     
  8681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  8682   002D84  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8683   002D88  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8684   002D8C  2ADE               	incf	postinc2,f,c
  8685   002D8E  0E00               	movlw	0
  8686   002D90  22DD               	addwfc	postdec2,f,c
  8687   002D92                     
  8688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  8689   002D92  0E00               	movlw	0
  8690   002D94  0100               	movlb	0	; () banked
  8691   002D96  6FDB               	movwf	(_width+1)& (0+255),b
  8692   002D98  0E00               	movlw	0
  8693   002D9A  6FDA               	movwf	_width& (0+255),b
  8694   002D9C  C0DA  F0E0         	movff	_width,_flags
  8695   002DA0                     
  8696                           ; BSR set to: 0
  8697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  8698   002DA0  69DC               	setf	_prec& (0+255),b
  8699   002DA2  69DD               	setf	(_prec+1)& (0+255),b
  8700   002DA4                     
  8701                           ; BSR set to: 0
  8702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  8703   002DA4  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8704   002DA8  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8705   002DAC  CFDE FFF6          	movff	postinc2,tblptrl
  8706   002DB0  CFDD FFF7          	movff	postdec2,tblptrh
  8707   002DB4                     	if	0	;tblptru may be non-zero
  8708   002DB4                     	endif
  8709   002DB4                     	if	0	;tblptru may be non-zero
  8710   002DB4                     	endif
  8711   002DB4  0008               	tblrd		*
  8712   002DB6  50F5               	movf	tablat,w,c
  8713   002DB8  0A73               	xorlw	115
  8714   002DBA  B4D8               	btfsc	status,2,c
  8715   002DBC  EFE2  F016         	goto	u2371
  8716   002DC0  EFE4  F016         	goto	u2370
  8717   002DC4                     u2371:
  8718   002DC4  EFFF  F016         	goto	l3094
  8719   002DC8                     u2370:
  8720   002DC8                     
  8721                           ; BSR set to: 0
  8722   002DC8  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8723   002DCC  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8724   002DD0  CFDE F001          	movff	postinc2,strncmp@_l
  8725   002DD4  CFDD F002          	movff	postdec2,strncmp@_l+1
  8726   002DD8  0E48               	movlw	low STR_11
  8727   002DDA  6E03               	movwf	strncmp@_r^0,c
  8728   002DDC  0E0E               	movlw	high STR_11
  8729   002DDE  6E04               	movwf	(strncmp@_r+1)^0,c
  8730   002DE0  0E00               	movlw	0
  8731   002DE2  6E06               	movwf	(strncmp@n+1)^0,c
  8732   002DE4  0E03               	movlw	3
  8733   002DE6  6E05               	movwf	strncmp@n^0,c
  8734   002DE8  EC6F  F01A         	call	_strncmp	;wreg free
  8735   002DEC  5001               	movf	?_strncmp^0,w,c
  8736   002DEE  1002               	iorwf	(?_strncmp+1)^0,w,c
  8737   002DF0  A4D8               	btfss	status,2,c
  8738   002DF2  EFFD  F016         	goto	u2381
  8739   002DF6  EFFF  F016         	goto	u2380
  8740   002DFA                     u2381:
  8741   002DFA  EF3F  F017         	goto	l3106
  8742   002DFE                     u2380:
  8743   002DFE                     l3094:
  8744                           
  8745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  8746   002DFE  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8747   002E02  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8748   002E06  CFDE FFF6          	movff	postinc2,tblptrl
  8749   002E0A  CFDD FFF7          	movff	postdec2,tblptrh
  8750   002E0E                     	if	0	;tblptru may be non-zero
  8751   002E0E                     	endif
  8752   002E0E                     	if	0	;tblptru may be non-zero
  8753   002E0E                     	endif
  8754   002E0E  0008               	tblrd		*
  8755   002E10  50F5               	movf	tablat,w,c
  8756   002E12  0A73               	xorlw	115
  8757   002E14  B4D8               	btfsc	status,2,c
  8758   002E16  EF0F  F017         	goto	u2391
  8759   002E1A  EF11  F017         	goto	u2390
  8760   002E1E                     u2391:
  8761   002E1E  EF17  F017         	goto	l3098
  8762   002E22                     u2390:
  8763   002E22  0E00               	movlw	0
  8764   002E24  6E29               	movwf	(_vfpfcnvrt$2693+1)^0,c
  8765   002E26  0E03               	movlw	3
  8766   002E28  6E28               	movwf	_vfpfcnvrt$2693^0,c
  8767   002E2A  EF1B  F017         	goto	l3100
  8768   002E2E                     l3098:
  8769   002E2E  0E00               	movlw	0
  8770   002E30  6E29               	movwf	(_vfpfcnvrt$2693+1)^0,c
  8771   002E32  0E01               	movlw	1
  8772   002E34  6E28               	movwf	_vfpfcnvrt$2693^0,c
  8773   002E36                     l3100:
  8774   002E36  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8775   002E3A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8776   002E3E  5028               	movf	_vfpfcnvrt$2693^0,w,c
  8777   002E40  26DE               	addwf	postinc2,f,c
  8778   002E42  5029               	movf	(_vfpfcnvrt$2693+1)^0,w,c
  8779   002E44  22DD               	addwfc	postdec2,f,c
  8780   002E46                     
  8781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  8782   002E46  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  8783   002E4A  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8784   002E4E  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8785   002E52  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8786   002E56  CFDF F026          	movff	indf2,??_vfpfcnvrt
  8787   002E5A  0E02               	movlw	2
  8788   002E5C  26DE               	addwf	postinc2,f,c
  8789   002E5E  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  8790   002E62  0E00               	movlw	0
  8791   002E64  22DD               	addwfc	postdec2,f,c
  8792   002E66  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8793   002E6A  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8794   002E6E  CFDE F00C          	movff	postinc2,stoa@s
  8795   002E72  CFDD F00D          	movff	postdec2,stoa@s+1
  8796   002E76  EC5D  F017         	call	_stoa	;wreg free
  8797   002E7A  EF5C  F017         	goto	l1318
  8798   002E7E                     l3106:
  8799                           
  8800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  8801   002E7E  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8802   002E82  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8803   002E86  2ADE               	incf	postinc2,f,c
  8804   002E88  0E00               	movlw	0
  8805   002E8A  22DD               	addwfc	postdec2,f,c
  8806   002E8C  EF5C  F017         	goto	l1318
  8807   002E90                     l3110:
  8808                           
  8809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  8810   002E90  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8811   002E94  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8812   002E98  CFDE FFF6          	movff	postinc2,tblptrl
  8813   002E9C  CFDD FFF7          	movff	postdec2,tblptrh
  8814   002EA0                     	if	0	;tblptru may be non-zero
  8815   002EA0                     	endif
  8816   002EA0                     	if	0	;tblptru may be non-zero
  8817   002EA0                     	endif
  8818   002EA0  0008               	tblrd		*
  8819   002EA2  50F5               	movf	tablat,w,c
  8820   002EA4  6E01               	movwf	fputc@c^0,c
  8821   002EA6  6A02               	clrf	(fputc@c+1)^0,c
  8822   002EA8  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8823   002EAC  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8824   002EB0  ECDE  F01A         	call	_fputc	;wreg free
  8825   002EB4  EF3F  F017         	goto	l3106
  8826   002EB8                     l1318:
  8827   002EB8  0012               	return		;funcret
  8828   002EBA                     __end_of_vfpfcnvrt:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _strncmp *****************
  8832 ;; Defined at:
  8833 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8836 ;;		 -> STR_10(16), 
  8837 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8838 ;;		 -> STR_13(4), 
  8839 ;;  n               2    4[COMRAM] unsigned int 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8842 ;;		 -> STR_13(4), 
  8843 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8844 ;;		 -> STR_10(16), 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  2    0[COMRAM] int 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8854 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;Total ram usage:       11 bytes
  8859 ;; Hardware stack levels used: 1
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_vfpfcnvrt
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text51
  8868   0034DE                     __ptext51:
  8869                           	callstack 0
  8870   0034DE                     _strncmp:
  8871                           	callstack 26
  8872   0034DE  C001  F008         	movff	strncmp@_l,strncmp@l
  8873   0034E2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8874   0034E6  C003  F00A         	movff	strncmp@_r,strncmp@r
  8875   0034EA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8876   0034EE  0605               	decf	strncmp@n^0,f,c
  8877   0034F0  A0D8               	btfss	status,0,c
  8878   0034F2  0606               	decf	(strncmp@n+1)^0,f,c
  8879   0034F4  2805               	incf	strncmp@n^0,w,c
  8880   0034F6  E106               	bnz	u2271
  8881   0034F8  2806               	incf	(strncmp@n+1)^0,w,c
  8882   0034FA  A4D8               	btfss	status,2,c
  8883   0034FC  EF82  F01A         	goto	u2271
  8884   003500  EF84  F01A         	goto	u2270
  8885   003504                     u2271:
  8886   003504  EF91  F01A         	goto	l3008
  8887   003508                     u2270:
  8888   003508  0E00               	movlw	0
  8889   00350A  6E02               	movwf	(?_strncmp+1)^0,c
  8890   00350C  0E00               	movlw	0
  8891   00350E  6E01               	movwf	?_strncmp^0,c
  8892   003510  EFDD  F01A         	goto	l1357
  8893   003514                     l3006:
  8894   003514  4A08               	infsnz	strncmp@l^0,f,c
  8895   003516  2A09               	incf	(strncmp@l+1)^0,f,c
  8896   003518  4A0A               	infsnz	strncmp@r^0,f,c
  8897   00351A  2A0B               	incf	(strncmp@r+1)^0,f,c
  8898   00351C  0605               	decf	strncmp@n^0,f,c
  8899   00351E  A0D8               	btfss	status,0,c
  8900   003520  0606               	decf	(strncmp@n+1)^0,f,c
  8901   003522                     l3008:
  8902   003522  C008  FFF6         	movff	strncmp@l,tblptrl
  8903   003526  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8904   00352A                     	if	0	;tblptru may be non-zero
  8905   00352A                     	endif
  8906   00352A                     	if	0	;tblptru may be non-zero
  8907   00352A                     	endif
  8908   00352A  0008               	tblrd		*
  8909   00352C  50F5               	movf	tablat,w,c
  8910   00352E  0900               	iorlw	0
  8911   003530  B4D8               	btfsc	status,2,c
  8912   003532  EF9D  F01A         	goto	u2281
  8913   003536  EF9F  F01A         	goto	u2280
  8914   00353A                     u2281:
  8915   00353A  EFCB  F01A         	goto	l3016
  8916   00353E                     u2280:
  8917   00353E  C00A  FFF6         	movff	strncmp@r,tblptrl
  8918   003542  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8919   003546                     	if	0	;tblptru may be non-zero
  8920   003546                     	endif
  8921   003546                     	if	0	;tblptru may be non-zero
  8922   003546                     	endif
  8923   003546  0008               	tblrd		*
  8924   003548  50F5               	movf	tablat,w,c
  8925   00354A  0900               	iorlw	0
  8926   00354C  B4D8               	btfsc	status,2,c
  8927   00354E  EFAB  F01A         	goto	u2291
  8928   003552  EFAD  F01A         	goto	u2290
  8929   003556                     u2291:
  8930   003556  EFCB  F01A         	goto	l3016
  8931   00355A                     u2290:
  8932   00355A  5005               	movf	strncmp@n^0,w,c
  8933   00355C  1006               	iorwf	(strncmp@n+1)^0,w,c
  8934   00355E  B4D8               	btfsc	status,2,c
  8935   003560  EFB4  F01A         	goto	u2301
  8936   003564  EFB6  F01A         	goto	u2300
  8937   003568                     u2301:
  8938   003568  EFCB  F01A         	goto	l3016
  8939   00356C                     u2300:
  8940   00356C  C008  FFF6         	movff	strncmp@l,tblptrl
  8941   003570  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8942   003574                     	if	0	;tblptru may be non-zero
  8943   003574                     	endif
  8944   003574                     	if	0	;tblptru may be non-zero
  8945   003574                     	endif
  8946   003574  0008               	tblrd		*
  8947   003576  CFF5 F007          	movff	tablat,??_strncmp
  8948   00357A  C00A  FFF6         	movff	strncmp@r,tblptrl
  8949   00357E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8950   003582                     	if	0	;tblptru may be non-zero
  8951   003582                     	endif
  8952   003582                     	if	0	;tblptru may be non-zero
  8953   003582                     	endif
  8954   003582  0008               	tblrd		*
  8955   003584  50F5               	movf	tablat,w,c
  8956   003586  1807               	xorwf	??_strncmp^0,w,c
  8957   003588  B4D8               	btfsc	status,2,c
  8958   00358A  EFC9  F01A         	goto	u2311
  8959   00358E  EFCB  F01A         	goto	u2310
  8960   003592                     u2311:
  8961   003592  EF8A  F01A         	goto	l3006
  8962   003596                     u2310:
  8963   003596                     l3016:
  8964   003596  C008  FFF6         	movff	strncmp@l,tblptrl
  8965   00359A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8966   00359E                     	if	0	;tblptru may be non-zero
  8967   00359E                     	endif
  8968   00359E                     	if	0	;tblptru may be non-zero
  8969   00359E                     	endif
  8970   00359E  0008               	tblrd		*
  8971   0035A0  CFF5 F007          	movff	tablat,??_strncmp
  8972   0035A4  C00A  FFF6         	movff	strncmp@r,tblptrl
  8973   0035A8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8974   0035AC                     	if	0	;tblptru may be non-zero
  8975   0035AC                     	endif
  8976   0035AC                     	if	0	;tblptru may be non-zero
  8977   0035AC                     	endif
  8978   0035AC  0008               	tblrd		*
  8979   0035AE  50F5               	movf	tablat,w,c
  8980   0035B0  5C07               	subwf	??_strncmp^0,w,c
  8981   0035B2  6E01               	movwf	?_strncmp^0,c
  8982   0035B4  6A02               	clrf	(?_strncmp+1)^0,c
  8983   0035B6  A0D8               	btfss	status,0,c
  8984   0035B8  0602               	decf	(?_strncmp+1)^0,f,c
  8985   0035BA                     l1357:
  8986   0035BA  0012               	return		;funcret
  8987   0035BC                     __end_of_strncmp:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function _stoa *****************
  8991 ;; Defined at:
  8992 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8995 ;;		 -> sprintf@f(11), 
  8996 ;;  s               2   11[COMRAM] PTR unsigned char 
  8997 ;;		 -> ?_sprintf(2), STR_9(9), STR_8(11), STR_7(7), 
  8998 ;;		 -> STR_6(5), STR_5(7), STR_4(10), STR_3(6), 
  8999 ;;		 -> STR_2(4), STR_1(1), 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9002 ;;  p               2   29[COMRAM] int 
  9003 ;;  l               2   27[COMRAM] int 
  9004 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9005 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9006 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9007 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9008 ;;  i               2   23[COMRAM] int 
  9009 ;;  w               2   21[COMRAM] int 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;Total ram usage:       22 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 2
  9026 ;; This function calls:
  9027 ;;		_fputc
  9028 ;;		_strlen
  9029 ;; This function is called by:
  9030 ;;		_vfpfcnvrt
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text52
  9035   002EBA                     __ptext52:
  9036                           	callstack 0
  9037   002EBA                     _stoa:
  9038                           	callstack 24
  9039   002EBA                     
  9040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9041   002EBA  EE21  F086         	lfsr	2,stoa@F1144
  9042   002EBE  EE10  F00F         	lfsr	1,stoa@nuls
  9043   002EC2  0E06               	movlw	6
  9044   002EC4                     u2201:
  9045   002EC4  CFDB FFE3          	movff	plusw2,plusw1
  9046   002EC8  06E8               	decf	wreg,f,c
  9047   002ECA  E2FC               	bc	u2201
  9048   002ECC                     
  9049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9050   002ECC  C00C  F01A         	movff	stoa@s,stoa@cp
  9051   002ED0  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9052   002ED4                     
  9053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9054   002ED4  501A               	movf	stoa@cp^0,w,c
  9055   002ED6  101B               	iorwf	(stoa@cp+1)^0,w,c
  9056   002ED8  A4D8               	btfss	status,2,c
  9057   002EDA  EF71  F017         	goto	u2211
  9058   002EDE  EF73  F017         	goto	u2210
  9059   002EE2                     u2211:
  9060   002EE2  EF77  F017         	goto	l2976
  9061   002EE6                     u2210:
  9062   002EE6                     
  9063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9064   002EE6  0E0F               	movlw	low stoa@nuls
  9065   002EE8  6E1A               	movwf	stoa@cp^0,c
  9066   002EEA  0E00               	movlw	high stoa@nuls
  9067   002EEC  6E1B               	movwf	(stoa@cp+1)^0,c
  9068   002EEE                     l2976:
  9069                           
  9070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9071   002EEE  C01A  F001         	movff	stoa@cp,strlen@s
  9072   002EF2  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9073   002EF6  ECAA  F020         	call	_strlen	;wreg free
  9074   002EFA  C001  F01C         	movff	?_strlen,stoa@l
  9075   002EFE  C002  F01D         	movff	?_strlen+1,stoa@l+1
  9076   002F02                     
  9077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  9078   002F02  C0DC  F01E         	movff	_prec,stoa@p
  9079   002F06  C0DD  F01F         	movff	_prec+1,stoa@p+1
  9080   002F0A                     
  9081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  9082   002F0A  BE1F               	btfsc	(stoa@p+1)^0,7,c
  9083   002F0C  EF8A  F017         	goto	u2221
  9084   002F10  EF8C  F017         	goto	u2220
  9085   002F14                     u2221:
  9086   002F14  EFA1  F017         	goto	l1298
  9087   002F18                     u2220:
  9088   002F18  501C               	movf	stoa@l^0,w,c
  9089   002F1A  5C1E               	subwf	stoa@p^0,w,c
  9090   002F1C  501F               	movf	(stoa@p+1)^0,w,c
  9091   002F1E  0A80               	xorlw	128
  9092   002F20  6E0E               	movwf	??_stoa^0,c
  9093   002F22  501D               	movf	(stoa@l+1)^0,w,c
  9094   002F24  0A80               	xorlw	128
  9095   002F26  580E               	subwfb	??_stoa^0,w,c
  9096   002F28  A0D8               	btfss	status,0,c
  9097   002F2A  EF99  F017         	goto	u2231
  9098   002F2E  EF9B  F017         	goto	u2230
  9099   002F32                     u2231:
  9100   002F32  EF9D  F017         	goto	l1296
  9101   002F36                     u2230:
  9102   002F36  EFA1  F017         	goto	l1298
  9103   002F3A                     l1296:
  9104   002F3A  C01E  F01C         	movff	stoa@p,stoa@l
  9105   002F3E  C01F  F01D         	movff	stoa@p+1,stoa@l+1
  9106   002F42                     l1298:
  9107                           
  9108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  9109   002F42  C01C  F01E         	movff	stoa@l,stoa@p
  9110   002F46  C01D  F01F         	movff	stoa@l+1,stoa@p+1
  9111                           
  9112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  9113   002F4A  C0DA  F016         	movff	_width,stoa@w
  9114   002F4E  C0DB  F017         	movff	_width+1,stoa@w+1
  9115                           
  9116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9117   002F52  EFB7  F017         	goto	l2988
  9118   002F56                     l2984:
  9119                           
  9120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  9121   002F56  0E00               	movlw	0
  9122   002F58  6E02               	movwf	(fputc@c+1)^0,c
  9123   002F5A  0E20               	movlw	32
  9124   002F5C  6E01               	movwf	fputc@c^0,c
  9125   002F5E  C00A  F003         	movff	stoa@fp,fputc@fp
  9126   002F62  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9127   002F66  ECDE  F01A         	call	_fputc	;wreg free
  9128   002F6A                     
  9129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  9130   002F6A  4A1C               	infsnz	stoa@l^0,f,c
  9131   002F6C  2A1D               	incf	(stoa@l+1)^0,f,c
  9132   002F6E                     l2988:
  9133                           
  9134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  9135   002F6E  5016               	movf	stoa@w^0,w,c
  9136   002F70  5C1C               	subwf	stoa@l^0,w,c
  9137   002F72  501D               	movf	(stoa@l+1)^0,w,c
  9138   002F74  0A80               	xorlw	128
  9139   002F76  6E0E               	movwf	??_stoa^0,c
  9140   002F78  5017               	movf	(stoa@w+1)^0,w,c
  9141   002F7A  0A80               	xorlw	128
  9142   002F7C  580E               	subwfb	??_stoa^0,w,c
  9143   002F7E  A0D8               	btfss	status,0,c
  9144   002F80  EFC4  F017         	goto	u2241
  9145   002F84  EFC6  F017         	goto	u2240
  9146   002F88                     u2241:
  9147   002F88  EFAB  F017         	goto	l2984
  9148   002F8C                     u2240:
  9149   002F8C                     
  9150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  9151   002F8C  0E00               	movlw	0
  9152   002F8E  6E19               	movwf	(stoa@i+1)^0,c
  9153   002F90  0E00               	movlw	0
  9154   002F92  6E18               	movwf	stoa@i^0,c
  9155                           
  9156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9157   002F94  EFEB  F017         	goto	l2998
  9158   002F98                     l2992:
  9159                           
  9160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  9161   002F98  C01A  FFF6         	movff	stoa@cp,tblptrl
  9162   002F9C  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9163   002FA0  0E00               	movlw	low (__smallconst shr (0+16))
  9164   002FA2  6EF8               	movwf	tblptru,c
  9165   002FA4  0E0D               	movlw	(high __ramtop+-1)
  9166   002FA6  64F7               	cpfsgt	tblptrh,c
  9167   002FA8  D003               	bra	u2257
  9168   002FAA  0008               	tblrd		*
  9169   002FAC  50F5               	movf	tablat,w,c
  9170   002FAE  D005               	bra	u2250
  9171   002FB0                     u2257:
  9172   002FB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  9173   002FB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  9174   002FB8  50EF               	movf	indf0,w,c
  9175   002FBA                     u2250:
  9176   002FBA  6E0E               	movwf	??_stoa^0,c
  9177   002FBC  500E               	movf	??_stoa^0,w,c
  9178   002FBE  6E01               	movwf	fputc@c^0,c
  9179   002FC0  6A02               	clrf	(fputc@c+1)^0,c
  9180   002FC2  C00A  F003         	movff	stoa@fp,fputc@fp
  9181   002FC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  9182   002FCA  ECDE  F01A         	call	_fputc	;wreg free
  9183   002FCE                     
  9184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  9185   002FCE  4A1A               	infsnz	stoa@cp^0,f,c
  9186   002FD0  2A1B               	incf	(stoa@cp+1)^0,f,c
  9187   002FD2                     
  9188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  9189   002FD2  4A18               	infsnz	stoa@i^0,f,c
  9190   002FD4  2A19               	incf	(stoa@i+1)^0,f,c
  9191   002FD6                     l2998:
  9192                           
  9193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  9194   002FD6  501E               	movf	stoa@p^0,w,c
  9195   002FD8  5C18               	subwf	stoa@i^0,w,c
  9196   002FDA  5019               	movf	(stoa@i+1)^0,w,c
  9197   002FDC  0A80               	xorlw	128
  9198   002FDE  6E0E               	movwf	??_stoa^0,c
  9199   002FE0  501F               	movf	(stoa@p+1)^0,w,c
  9200   002FE2  0A80               	xorlw	128
  9201   002FE4  580E               	subwfb	??_stoa^0,w,c
  9202   002FE6  A0D8               	btfss	status,0,c
  9203   002FE8  EFF8  F017         	goto	u2261
  9204   002FEC  EFFA  F017         	goto	u2260
  9205   002FF0                     u2261:
  9206   002FF0  EFCC  F017         	goto	l2992
  9207   002FF4                     u2260:
  9208   002FF4  0012               	return		;funcret
  9209   002FF6                     __end_of_stoa:
  9210                           	callstack 0
  9211                           
  9212 ;; *************** function _strlen *****************
  9213 ;; Defined at:
  9214 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9217 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9218 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9219 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9222 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9223 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9224 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2    0[COMRAM] unsigned int 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9238 ;;Total ram usage:        4 bytes
  9239 ;; Hardware stack levels used: 1
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_stoa
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text53
  9248   004154                     __ptext53:
  9249                           	callstack 0
  9250   004154                     _strlen:
  9251                           	callstack 25
  9252   004154  C001  F003         	movff	strlen@s,strlen@a
  9253   004158  C002  F004         	movff	strlen@s+1,strlen@a+1
  9254   00415C  EFB2  F020         	goto	l2918
  9255   004160                     l2916:
  9256   004160  4A01               	infsnz	strlen@s^0,f,c
  9257   004162  2A02               	incf	(strlen@s+1)^0,f,c
  9258   004164                     l2918:
  9259   004164  C001  FFF6         	movff	strlen@s,tblptrl
  9260   004168  C002  FFF7         	movff	strlen@s+1,tblptrh
  9261   00416C  0E00               	movlw	low (__smallconst shr (0+16))
  9262   00416E  6EF8               	movwf	tblptru,c
  9263   004170  0E0D               	movlw	(high __ramtop+-1)
  9264   004172  64F7               	cpfsgt	tblptrh,c
  9265   004174  D003               	bra	u2137
  9266   004176  0008               	tblrd		*
  9267   004178  50F5               	movf	tablat,w,c
  9268   00417A  D005               	bra	u2130
  9269   00417C                     u2137:
  9270   00417C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9271   004180  CFF7 FFEA          	movff	tblptrh,fsr0h
  9272   004184  50EF               	movf	indf0,w,c
  9273   004186                     u2130:
  9274   004186  0900               	iorlw	0
  9275   004188  A4D8               	btfss	status,2,c
  9276   00418A  EFC9  F020         	goto	u2141
  9277   00418E  EFCB  F020         	goto	u2140
  9278   004192                     u2141:
  9279   004192  EFB0  F020         	goto	l2916
  9280   004196                     u2140:
  9281   004196  5003               	movf	strlen@a^0,w,c
  9282   004198  5C01               	subwf	strlen@s^0,w,c
  9283   00419A  6E01               	movwf	?_strlen^0,c
  9284   00419C  5004               	movf	(strlen@a+1)^0,w,c
  9285   00419E  5802               	subwfb	(strlen@s+1)^0,w,c
  9286   0041A0  6E02               	movwf	(?_strlen+1)^0,c
  9287   0041A2  0012               	return		;funcret
  9288   0041A4                     __end_of_strlen:
  9289                           	callstack 0
  9290                           
  9291 ;; *************** function _fputc *****************
  9292 ;; Defined at:
  9293 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  c               2    0[COMRAM] int 
  9296 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9297 ;;		 -> sprintf@f(11), 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  2    0[COMRAM] int 
  9302 ;; Registers used:
  9303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9311 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;Total ram usage:        9 bytes
  9314 ;; Hardware stack levels used: 1
  9315 ;; Hardware stack levels required when called: 1
  9316 ;; This function calls:
  9317 ;;		_putch
  9318 ;; This function is called by:
  9319 ;;		_stoa
  9320 ;;		_vfpfcnvrt
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text54
  9325   0035BC                     __ptext54:
  9326                           	callstack 0
  9327   0035BC                     _fputc:
  9328                           	callstack 24
  9329   0035BC  5003               	movf	fputc@fp^0,w,c
  9330   0035BE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9331   0035C0  B4D8               	btfsc	status,2,c
  9332   0035C2  EFE5  F01A         	goto	u2091
  9333   0035C6  EFE7  F01A         	goto	u2090
  9334   0035CA                     u2091:
  9335   0035CA  EFF0  F01A         	goto	l2904
  9336   0035CE                     u2090:
  9337   0035CE  5003               	movf	fputc@fp^0,w,c
  9338   0035D0  1004               	iorwf	(fputc@fp+1)^0,w,c
  9339   0035D2  A4D8               	btfss	status,2,c
  9340   0035D4  EFEE  F01A         	goto	u2101
  9341   0035D8  EFF0  F01A         	goto	u2100
  9342   0035DC                     u2101:
  9343   0035DC  EFF5  F01A         	goto	l2906
  9344   0035E0                     u2100:
  9345   0035E0                     l2904:
  9346   0035E0  5001               	movf	fputc@c^0,w,c
  9347   0035E2  EC6B  F022         	call	_putch
  9348   0035E6  EF42  F01B         	goto	l1336
  9349   0035EA                     l2906:
  9350   0035EA  EE20 F009          	lfsr	2,9
  9351   0035EE  5003               	movf	fputc@fp^0,w,c
  9352   0035F0  26D9               	addwf	fsr2l,f,c
  9353   0035F2  5004               	movf	(fputc@fp+1)^0,w,c
  9354   0035F4  22DA               	addwfc	fsr2h,f,c
  9355   0035F6  50DE               	movf	postinc2,w,c
  9356   0035F8  10DE               	iorwf	postinc2,w,c
  9357   0035FA  B4D8               	btfsc	status,2,c
  9358   0035FC  EF02  F01B         	goto	u2111
  9359   003600  EF04  F01B         	goto	u2110
  9360   003604                     u2111:
  9361   003604  EF1F  F01B         	goto	l2910
  9362   003608                     u2110:
  9363   003608  EE20 F009          	lfsr	2,9
  9364   00360C  5003               	movf	fputc@fp^0,w,c
  9365   00360E  26D9               	addwf	fsr2l,f,c
  9366   003610  5004               	movf	(fputc@fp+1)^0,w,c
  9367   003612  22DA               	addwfc	fsr2h,f,c
  9368   003614  EE10 F003          	lfsr	1,3
  9369   003618  5003               	movf	fputc@fp^0,w,c
  9370   00361A  26E1               	addwf	fsr1l,f,c
  9371   00361C  5004               	movf	(fputc@fp+1)^0,w,c
  9372   00361E  22E2               	addwfc	fsr1h,f,c
  9373   003620  50DE               	movf	postinc2,w,c
  9374   003622  5CE6               	subwf	postinc1,w,c
  9375   003624  50E6               	movf	postinc1,w,c
  9376   003626  0A80               	xorlw	128
  9377   003628  6E09               	movwf	(??_fputc+4)^0,c
  9378   00362A  50DE               	movf	postinc2,w,c
  9379   00362C  0A80               	xorlw	128
  9380   00362E  5809               	subwfb	(??_fputc+4)^0,w,c
  9381   003630  B0D8               	btfsc	status,0,c
  9382   003632  EF1D  F01B         	goto	u2121
  9383   003636  EF1F  F01B         	goto	u2120
  9384   00363A                     u2121:
  9385   00363A  EF42  F01B         	goto	l1336
  9386   00363E                     u2120:
  9387   00363E                     l2910:
  9388   00363E  EE20 F003          	lfsr	2,3
  9389   003642  5003               	movf	fputc@fp^0,w,c
  9390   003644  26D9               	addwf	fsr2l,f,c
  9391   003646  5004               	movf	(fputc@fp+1)^0,w,c
  9392   003648  22DA               	addwfc	fsr2h,f,c
  9393   00364A  CFDE F005          	movff	postinc2,??_fputc
  9394   00364E  CFDD F006          	movff	postdec2,??_fputc+1
  9395   003652  C003  FFD9         	movff	fputc@fp,fsr2l
  9396   003656  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9397   00365A  CFDE F007          	movff	postinc2,??_fputc+2
  9398   00365E  CFDD F008          	movff	postdec2,??_fputc+3
  9399   003662  5005               	movf	??_fputc^0,w,c
  9400   003664  2407               	addwf	(??_fputc+2)^0,w,c
  9401   003666  6ED9               	movwf	fsr2l,c
  9402   003668  5006               	movf	(??_fputc+1)^0,w,c
  9403   00366A  2008               	addwfc	(??_fputc+3)^0,w,c
  9404   00366C  6EDA               	movwf	fsr2h,c
  9405   00366E  C001  FFDF         	movff	fputc@c,indf2
  9406   003672  EE20 F003          	lfsr	2,3
  9407   003676  5003               	movf	fputc@fp^0,w,c
  9408   003678  26D9               	addwf	fsr2l,f,c
  9409   00367A  5004               	movf	(fputc@fp+1)^0,w,c
  9410   00367C  22DA               	addwfc	fsr2h,f,c
  9411   00367E  2ADE               	incf	postinc2,f,c
  9412   003680  0E00               	movlw	0
  9413   003682  22DD               	addwfc	postdec2,f,c
  9414   003684                     l1336:
  9415   003684  0012               	return		;funcret
  9416   003686                     __end_of_fputc:
  9417                           	callstack 0
  9418                           
  9419 ;; *************** function _putch *****************
  9420 ;; Defined at:
  9421 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  c               1    wreg     unsigned char 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  c               1    0[COMRAM] unsigned char 
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		wreg
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_fputc
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text55
  9449   0044D6                     __ptext55:
  9450                           	callstack 0
  9451   0044D6                     _putch:
  9452                           	callstack 24
  9453   0044D6  0012               	return		;funcret
  9454   0044D8                     __end_of_putch:
  9455                           	callstack 0
  9456                           
  9457 ;; *************** function _sendStringSerial4 *****************
  9458 ;; Defined at:
  9459 ;;		line 49 in file "serial.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  string          2    1[COMRAM] PTR unsigned char 
  9462 ;;		 -> main@data(100), 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9478 ;;Total ram usage:        2 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 1
  9481 ;; This function calls:
  9482 ;;		_sendCharSerial4
  9483 ;; This function is called by:
  9484 ;;		_Color2String
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text56
  9489   004346                     __ptext56:
  9490                           	callstack 0
  9491   004346                     _sendStringSerial4:
  9492                           	callstack 28
  9493   004346                     
  9494                           ;serial.c: 52:     while(*string != 0){
  9495   004346  EFB2  F021         	goto	l3638
  9496   00434A                     l3632:
  9497                           
  9498                           ;serial.c: 54:   sendCharSerial4(*string++);
  9499   00434A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9500   00434E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9501   004352  50DF               	movf	indf2,w,c
  9502   004354  EC36  F022         	call	_sendCharSerial4
  9503   004358  4A02               	infsnz	sendStringSerial4@string^0,f,c
  9504   00435A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  9505   00435C                     
  9506                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  9507   00435C  0E6A               	movlw	106
  9508   00435E                     u4307:
  9509   00435E  2EE8               	decfsz	wreg,f,c
  9510   004360  D7FE               	bra	u4307
  9511   004362  D000               	nop2	
  9512   004364                     l3638:
  9513                           
  9514                           ;serial.c: 52:     while(*string != 0){
  9515   004364  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  9516   004368  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9517   00436C  50DF               	movf	indf2,w,c
  9518   00436E  A4D8               	btfss	status,2,c
  9519   004370  EFBC  F021         	goto	u3121
  9520   004374  EFBE  F021         	goto	u3120
  9521   004378                     u3121:
  9522   004378  EFA5  F021         	goto	l3632
  9523   00437C                     u3120:
  9524   00437C  0012               	return		;funcret
  9525   00437E                     __end_of_sendStringSerial4:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function _sendCharSerial4 *****************
  9529 ;; Defined at:
  9530 ;;		line 34 in file "serial.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  charToSend      1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  charToSend      1    0[COMRAM] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9548 ;;Total ram usage:        1 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_sendStringSerial4
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           	psect	text57
  9558   00446C                     __ptext57:
  9559                           	callstack 0
  9560   00446C                     _sendCharSerial4:
  9561                           	callstack 28
  9562                           
  9563                           ;incstack = 0
  9564                           ;sendCharSerial4@charToSend stored from wreg
  9565   00446C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  9566   00446E                     l318:
  9567   00446E  010E               	movlb	14	; () banked
  9568   004470  A537               	btfss	55,2,b	;volatile
  9569   004472  EF3D  F022         	goto	u2431
  9570   004476  EF3F  F022         	goto	u2430
  9571   00447A                     u2431:
  9572   00447A  EF37  F022         	goto	l318
  9573   00447E                     u2430:
  9574   00447E                     
  9575                           ; BSR set to: 14
  9576                           ;serial.c: 36:     TX4REG = charToSend;
  9577   00447E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9578   004482                     
  9579                           ; BSR set to: 14
  9580   004482  0012               	return		;funcret
  9581   004484                     __end_of_sendCharSerial4:
  9582                           	callstack 0
  9583                           
  9584 ;; *************** function _Hue2Colour *****************
  9585 ;; Defined at:
  9586 ;;		line 56 in file "colorfunctions.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
  9589 ;;		 -> colorf(22), 
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;  colourname      2   14[COMRAM] PTR unsigned char 
  9592 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  9593 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  9594 ;;		 -> STR_1(1), 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  2   12[COMRAM] PTR unsigned char 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;Total ram usage:        4 bytes
  9609 ;; Hardware stack levels used: 1
  9610 ;; Hardware stack levels required when called: 1
  9611 ;; This function calls:
  9612 ;;		___flge
  9613 ;; This function is called by:
  9614 ;;		_main
  9615 ;;		_Color2String
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text58
  9620   001554                     __ptext58:
  9621                           	callstack 0
  9622   001554                     _Hue2Colour:
  9623                           	callstack 29
  9624   001554                     
  9625                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
  9626   001554  0E10               	movlw	low (STR_10+15)
  9627   001556  6E0F               	movwf	Hue2Colour@colourname^0,c
  9628   001558  0E0E               	movlw	high (STR_10+15)
  9629   00155A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9630   00155C                     
  9631                           ;colorfunctions.c: 59:     if (((cf->h)>350)&&((cf->h)<360))
  9632   00155C  0E00               	movlw	0
  9633   00155E  6E01               	movwf	___flge@ff1^0,c
  9634   001560  0E00               	movlw	0
  9635   001562  6E02               	movwf	(___flge@ff1+1)^0,c
  9636   001564  0EAF               	movlw	175
  9637   001566  6E03               	movwf	(___flge@ff1+2)^0,c
  9638   001568  0E43               	movlw	67
  9639   00156A  6E04               	movwf	(___flge@ff1+3)^0,c
  9640   00156C  EE20 F010          	lfsr	2,16
  9641   001570  500D               	movf	Hue2Colour@cf^0,w,c
  9642   001572  26D9               	addwf	fsr2l,f,c
  9643   001574  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9644   001576  22DA               	addwfc	fsr2h,f,c
  9645   001578  CFDE F005          	movff	postinc2,___flge@ff2
  9646   00157C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9647   001580  CFDE F007          	movff	postinc2,___flge@ff2+2
  9648   001584  CFDE F008          	movff	postinc2,___flge@ff2+3
  9649   001588  EC01  F019         	call	___flge	;wreg free
  9650   00158C  B0D8               	btfsc	status,0,c
  9651   00158E  EFCB  F00A         	goto	u2891
  9652   001592  EFCD  F00A         	goto	u2890
  9653   001596                     u2891:
  9654   001596  EFFA  F00A         	goto	l3480
  9655   00159A                     u2890:
  9656   00159A  EE20 F010          	lfsr	2,16
  9657   00159E  500D               	movf	Hue2Colour@cf^0,w,c
  9658   0015A0  26D9               	addwf	fsr2l,f,c
  9659   0015A2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9660   0015A4  22DA               	addwfc	fsr2h,f,c
  9661   0015A6  CFDE F001          	movff	postinc2,___flge@ff1
  9662   0015AA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9663   0015AE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9664   0015B2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9665   0015B6  0E00               	movlw	0
  9666   0015B8  6E05               	movwf	___flge@ff2^0,c
  9667   0015BA  0E00               	movlw	0
  9668   0015BC  6E06               	movwf	(___flge@ff2+1)^0,c
  9669   0015BE  0EB4               	movlw	180
  9670   0015C0  6E07               	movwf	(___flge@ff2+2)^0,c
  9671   0015C2  0E43               	movlw	67
  9672   0015C4  6E08               	movwf	(___flge@ff2+3)^0,c
  9673   0015C6  EC01  F019         	call	___flge	;wreg free
  9674   0015CA  B0D8               	btfsc	status,0,c
  9675   0015CC  EFEA  F00A         	goto	u2901
  9676   0015D0  EFEC  F00A         	goto	u2900
  9677   0015D4                     u2901:
  9678   0015D4  EFFA  F00A         	goto	l3480
  9679   0015D8                     u2900:
  9680   0015D8                     
  9681                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
  9682   0015D8  0E4C               	movlw	low STR_2
  9683   0015DA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9684   0015DC  0E0E               	movlw	high STR_2
  9685   0015DE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9686   0015E0                     
  9687                           ;colorfunctions.c: 65:         cf->colourindex=0;
  9688   0015E0  EE20 F014          	lfsr	2,20
  9689   0015E4  500D               	movf	Hue2Colour@cf^0,w,c
  9690   0015E6  26D9               	addwf	fsr2l,f,c
  9691   0015E8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9692   0015EA  22DA               	addwfc	fsr2h,f,c
  9693   0015EC  0E00               	movlw	0
  9694   0015EE  6EDE               	movwf	postinc2,c
  9695   0015F0  0E00               	movlw	0
  9696   0015F2  6EDD               	movwf	postdec2,c
  9697   0015F4                     l3480:
  9698                           
  9699                           ;colorfunctions.c: 67:      if (((cf->h)>70)&&((cf->h)<79))
  9700   0015F4  0E00               	movlw	0
  9701   0015F6  6E01               	movwf	___flge@ff1^0,c
  9702   0015F8  0E00               	movlw	0
  9703   0015FA  6E02               	movwf	(___flge@ff1+1)^0,c
  9704   0015FC  0E8C               	movlw	140
  9705   0015FE  6E03               	movwf	(___flge@ff1+2)^0,c
  9706   001600  0E42               	movlw	66
  9707   001602  6E04               	movwf	(___flge@ff1+3)^0,c
  9708   001604  EE20 F010          	lfsr	2,16
  9709   001608  500D               	movf	Hue2Colour@cf^0,w,c
  9710   00160A  26D9               	addwf	fsr2l,f,c
  9711   00160C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9712   00160E  22DA               	addwfc	fsr2h,f,c
  9713   001610  CFDE F005          	movff	postinc2,___flge@ff2
  9714   001614  CFDE F006          	movff	postinc2,___flge@ff2+1
  9715   001618  CFDE F007          	movff	postinc2,___flge@ff2+2
  9716   00161C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9717   001620  EC01  F019         	call	___flge	;wreg free
  9718   001624  B0D8               	btfsc	status,0,c
  9719   001626  EF17  F00B         	goto	u2911
  9720   00162A  EF19  F00B         	goto	u2910
  9721   00162E                     u2911:
  9722   00162E  EF48  F00B         	goto	l3488
  9723   001632                     u2910:
  9724   001632  EE20 F010          	lfsr	2,16
  9725   001636  500D               	movf	Hue2Colour@cf^0,w,c
  9726   001638  26D9               	addwf	fsr2l,f,c
  9727   00163A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9728   00163C  22DA               	addwfc	fsr2h,f,c
  9729   00163E  CFDE F001          	movff	postinc2,___flge@ff1
  9730   001642  CFDE F002          	movff	postinc2,___flge@ff1+1
  9731   001646  CFDE F003          	movff	postinc2,___flge@ff1+2
  9732   00164A  CFDE F004          	movff	postinc2,___flge@ff1+3
  9733   00164E  0E00               	movlw	0
  9734   001650  6E05               	movwf	___flge@ff2^0,c
  9735   001652  0E00               	movlw	0
  9736   001654  6E06               	movwf	(___flge@ff2+1)^0,c
  9737   001656  0E9E               	movlw	158
  9738   001658  6E07               	movwf	(___flge@ff2+2)^0,c
  9739   00165A  0E42               	movlw	66
  9740   00165C  6E08               	movwf	(___flge@ff2+3)^0,c
  9741   00165E  EC01  F019         	call	___flge	;wreg free
  9742   001662  B0D8               	btfsc	status,0,c
  9743   001664  EF36  F00B         	goto	u2921
  9744   001668  EF38  F00B         	goto	u2920
  9745   00166C                     u2921:
  9746   00166C  EF48  F00B         	goto	l3488
  9747   001670                     u2920:
  9748   001670                     
  9749                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
  9750   001670  0E3D               	movlw	low STR_3
  9751   001672  6E0F               	movwf	Hue2Colour@colourname^0,c
  9752   001674  0E0E               	movlw	high STR_3
  9753   001676  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9754   001678                     
  9755                           ;colorfunctions.c: 70:         cf->colourindex=1;
  9756   001678  EE20 F014          	lfsr	2,20
  9757   00167C  500D               	movf	Hue2Colour@cf^0,w,c
  9758   00167E  26D9               	addwf	fsr2l,f,c
  9759   001680  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9760   001682  22DA               	addwfc	fsr2h,f,c
  9761   001684  0E01               	movlw	1
  9762   001686  6EDE               	movwf	postinc2,c
  9763   001688  0E00               	movlw	0
  9764   00168A  6EDD               	movwf	postdec2,c
  9765                           
  9766                           ;colorfunctions.c: 71:     }
  9767   00168C  EF1C  F00D         	goto	l3536
  9768   001690                     l3488:
  9769   001690  0E00               	movlw	0
  9770   001692  6E01               	movwf	___flge@ff1^0,c
  9771   001694  0E00               	movlw	0
  9772   001696  6E02               	movwf	(___flge@ff1+1)^0,c
  9773   001698  0E11               	movlw	17
  9774   00169A  6E03               	movwf	(___flge@ff1+2)^0,c
  9775   00169C  0E43               	movlw	67
  9776   00169E  6E04               	movwf	(___flge@ff1+3)^0,c
  9777   0016A0  EE20 F010          	lfsr	2,16
  9778   0016A4  500D               	movf	Hue2Colour@cf^0,w,c
  9779   0016A6  26D9               	addwf	fsr2l,f,c
  9780   0016A8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9781   0016AA  22DA               	addwfc	fsr2h,f,c
  9782   0016AC  CFDE F005          	movff	postinc2,___flge@ff2
  9783   0016B0  CFDE F006          	movff	postinc2,___flge@ff2+1
  9784   0016B4  CFDE F007          	movff	postinc2,___flge@ff2+2
  9785   0016B8  CFDE F008          	movff	postinc2,___flge@ff2+3
  9786   0016BC  EC01  F019         	call	___flge	;wreg free
  9787   0016C0  B0D8               	btfsc	status,0,c
  9788   0016C2  EF65  F00B         	goto	u2931
  9789   0016C6  EF67  F00B         	goto	u2930
  9790   0016CA                     u2931:
  9791   0016CA  EF96  F00B         	goto	l3496
  9792   0016CE                     u2930:
  9793   0016CE  EE20 F010          	lfsr	2,16
  9794   0016D2  500D               	movf	Hue2Colour@cf^0,w,c
  9795   0016D4  26D9               	addwf	fsr2l,f,c
  9796   0016D6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9797   0016D8  22DA               	addwfc	fsr2h,f,c
  9798   0016DA  CFDE F001          	movff	postinc2,___flge@ff1
  9799   0016DE  CFDE F002          	movff	postinc2,___flge@ff1+1
  9800   0016E2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9801   0016E6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9802   0016EA  0E00               	movlw	0
  9803   0016EC  6E05               	movwf	___flge@ff2^0,c
  9804   0016EE  0E00               	movlw	0
  9805   0016F0  6E06               	movwf	(___flge@ff2+1)^0,c
  9806   0016F2  0E34               	movlw	52
  9807   0016F4  6E07               	movwf	(___flge@ff2+2)^0,c
  9808   0016F6  0E43               	movlw	67
  9809   0016F8  6E08               	movwf	(___flge@ff2+3)^0,c
  9810   0016FA  EC01  F019         	call	___flge	;wreg free
  9811   0016FE  B0D8               	btfsc	status,0,c
  9812   001700  EF84  F00B         	goto	u2941
  9813   001704  EF86  F00B         	goto	u2940
  9814   001708                     u2941:
  9815   001708  EF96  F00B         	goto	l3496
  9816   00170C                     u2940:
  9817   00170C                     
  9818                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
  9819   00170C  0E1C               	movlw	low STR_4
  9820   00170E  6E0F               	movwf	Hue2Colour@colourname^0,c
  9821   001710  0E0E               	movlw	high STR_4
  9822   001712  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9823   001714                     
  9824                           ;colorfunctions.c: 75:         cf->colourindex=2;
  9825   001714  EE20 F014          	lfsr	2,20
  9826   001718  500D               	movf	Hue2Colour@cf^0,w,c
  9827   00171A  26D9               	addwf	fsr2l,f,c
  9828   00171C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9829   00171E  22DA               	addwfc	fsr2h,f,c
  9830   001720  0E02               	movlw	2
  9831   001722  6EDE               	movwf	postinc2,c
  9832   001724  0E00               	movlw	0
  9833   001726  6EDD               	movwf	postdec2,c
  9834                           
  9835                           ;colorfunctions.c: 76:     }
  9836   001728  EF1C  F00D         	goto	l3536
  9837   00172C                     l3496:
  9838   00172C  0E00               	movlw	0
  9839   00172E  6E01               	movwf	___flge@ff1^0,c
  9840   001730  0E00               	movlw	0
  9841   001732  6E02               	movwf	(___flge@ff1+1)^0,c
  9842   001734  0EA8               	movlw	168
  9843   001736  6E03               	movwf	(___flge@ff1+2)^0,c
  9844   001738  0E41               	movlw	65
  9845   00173A  6E04               	movwf	(___flge@ff1+3)^0,c
  9846   00173C  EE20 F010          	lfsr	2,16
  9847   001740  500D               	movf	Hue2Colour@cf^0,w,c
  9848   001742  26D9               	addwf	fsr2l,f,c
  9849   001744  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9850   001746  22DA               	addwfc	fsr2h,f,c
  9851   001748  CFDE F005          	movff	postinc2,___flge@ff2
  9852   00174C  CFDE F006          	movff	postinc2,___flge@ff2+1
  9853   001750  CFDE F007          	movff	postinc2,___flge@ff2+2
  9854   001754  CFDE F008          	movff	postinc2,___flge@ff2+3
  9855   001758  EC01  F019         	call	___flge	;wreg free
  9856   00175C  B0D8               	btfsc	status,0,c
  9857   00175E  EFB3  F00B         	goto	u2951
  9858   001762  EFB5  F00B         	goto	u2950
  9859   001766                     u2951:
  9860   001766  EFE4  F00B         	goto	l3504
  9861   00176A                     u2950:
  9862   00176A  EE20 F010          	lfsr	2,16
  9863   00176E  500D               	movf	Hue2Colour@cf^0,w,c
  9864   001770  26D9               	addwf	fsr2l,f,c
  9865   001772  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9866   001774  22DA               	addwfc	fsr2h,f,c
  9867   001776  CFDE F001          	movff	postinc2,___flge@ff1
  9868   00177A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9869   00177E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9870   001782  CFDE F004          	movff	postinc2,___flge@ff1+3
  9871   001786  0E00               	movlw	0
  9872   001788  6E05               	movwf	___flge@ff2^0,c
  9873   00178A  0E00               	movlw	0
  9874   00178C  6E06               	movwf	(___flge@ff2+1)^0,c
  9875   00178E  0EC8               	movlw	200
  9876   001790  6E07               	movwf	(___flge@ff2+2)^0,c
  9877   001792  0E41               	movlw	65
  9878   001794  6E08               	movwf	(___flge@ff2+3)^0,c
  9879   001796  EC01  F019         	call	___flge	;wreg free
  9880   00179A  B0D8               	btfsc	status,0,c
  9881   00179C  EFD2  F00B         	goto	u2961
  9882   0017A0  EFD4  F00B         	goto	u2960
  9883   0017A4                     u2961:
  9884   0017A4  EFE4  F00B         	goto	l3504
  9885   0017A8                     u2960:
  9886   0017A8                     
  9887                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
  9888   0017A8  0E36               	movlw	low STR_5
  9889   0017AA  6E0F               	movwf	Hue2Colour@colourname^0,c
  9890   0017AC  0E0E               	movlw	high STR_5
  9891   0017AE  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9892   0017B0                     
  9893                           ;colorfunctions.c: 80:         cf->colourindex=3;
  9894   0017B0  EE20 F014          	lfsr	2,20
  9895   0017B4  500D               	movf	Hue2Colour@cf^0,w,c
  9896   0017B6  26D9               	addwf	fsr2l,f,c
  9897   0017B8  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9898   0017BA  22DA               	addwfc	fsr2h,f,c
  9899   0017BC  0E03               	movlw	3
  9900   0017BE  6EDE               	movwf	postinc2,c
  9901   0017C0  0E00               	movlw	0
  9902   0017C2  6EDD               	movwf	postdec2,c
  9903                           
  9904                           ;colorfunctions.c: 81:     }
  9905   0017C4  EF1C  F00D         	goto	l3536
  9906   0017C8                     l3504:
  9907   0017C8  0E00               	movlw	0
  9908   0017CA  6E01               	movwf	___flge@ff1^0,c
  9909   0017CC  0E00               	movlw	0
  9910   0017CE  6E02               	movwf	(___flge@ff1+1)^0,c
  9911   0017D0  0E70               	movlw	112
  9912   0017D2  6E03               	movwf	(___flge@ff1+2)^0,c
  9913   0017D4  0E41               	movlw	65
  9914   0017D6  6E04               	movwf	(___flge@ff1+3)^0,c
  9915   0017D8  EE20 F010          	lfsr	2,16
  9916   0017DC  500D               	movf	Hue2Colour@cf^0,w,c
  9917   0017DE  26D9               	addwf	fsr2l,f,c
  9918   0017E0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9919   0017E2  22DA               	addwfc	fsr2h,f,c
  9920   0017E4  CFDE F005          	movff	postinc2,___flge@ff2
  9921   0017E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9922   0017EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9923   0017F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9924   0017F4  EC01  F019         	call	___flge	;wreg free
  9925   0017F8  B0D8               	btfsc	status,0,c
  9926   0017FA  EF01  F00C         	goto	u2971
  9927   0017FE  EF03  F00C         	goto	u2970
  9928   001802                     u2971:
  9929   001802  EF32  F00C         	goto	l3512
  9930   001806                     u2970:
  9931   001806  EE20 F010          	lfsr	2,16
  9932   00180A  500D               	movf	Hue2Colour@cf^0,w,c
  9933   00180C  26D9               	addwf	fsr2l,f,c
  9934   00180E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9935   001810  22DA               	addwfc	fsr2h,f,c
  9936   001812  CFDE F001          	movff	postinc2,___flge@ff1
  9937   001816  CFDE F002          	movff	postinc2,___flge@ff1+1
  9938   00181A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9939   00181E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9940   001822  0E00               	movlw	0
  9941   001824  6E05               	movwf	___flge@ff2^0,c
  9942   001826  0E00               	movlw	0
  9943   001828  6E06               	movwf	(___flge@ff2+1)^0,c
  9944   00182A  0E98               	movlw	152
  9945   00182C  6E07               	movwf	(___flge@ff2+2)^0,c
  9946   00182E  0E41               	movlw	65
  9947   001830  6E08               	movwf	(___flge@ff2+3)^0,c
  9948   001832  EC01  F019         	call	___flge	;wreg free
  9949   001836  B0D8               	btfsc	status,0,c
  9950   001838  EF20  F00C         	goto	u2981
  9951   00183C  EF22  F00C         	goto	u2980
  9952   001840                     u2981:
  9953   001840  EF32  F00C         	goto	l3512
  9954   001844                     u2980:
  9955   001844                     
  9956                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
  9957   001844  0E43               	movlw	low STR_6
  9958   001846  6E0F               	movwf	Hue2Colour@colourname^0,c
  9959   001848  0E0E               	movlw	high STR_6
  9960   00184A  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
  9961   00184C                     
  9962                           ;colorfunctions.c: 85:         cf->colourindex=4;
  9963   00184C  EE20 F014          	lfsr	2,20
  9964   001850  500D               	movf	Hue2Colour@cf^0,w,c
  9965   001852  26D9               	addwf	fsr2l,f,c
  9966   001854  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9967   001856  22DA               	addwfc	fsr2h,f,c
  9968   001858  0E04               	movlw	4
  9969   00185A  6EDE               	movwf	postinc2,c
  9970   00185C  0E00               	movlw	0
  9971   00185E  6EDD               	movwf	postdec2,c
  9972                           
  9973                           ;colorfunctions.c: 86:     }
  9974   001860  EF1C  F00D         	goto	l3536
  9975   001864                     l3512:
  9976   001864  0E00               	movlw	0
  9977   001866  6E01               	movwf	___flge@ff1^0,c
  9978   001868  0E00               	movlw	0
  9979   00186A  6E02               	movwf	(___flge@ff1+1)^0,c
  9980   00186C  0E40               	movlw	64
  9981   00186E  6E03               	movwf	(___flge@ff1+2)^0,c
  9982   001870  0E40               	movlw	64
  9983   001872  6E04               	movwf	(___flge@ff1+3)^0,c
  9984   001874  EE20 F010          	lfsr	2,16
  9985   001878  500D               	movf	Hue2Colour@cf^0,w,c
  9986   00187A  26D9               	addwf	fsr2l,f,c
  9987   00187C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
  9988   00187E  22DA               	addwfc	fsr2h,f,c
  9989   001880  CFDE F005          	movff	postinc2,___flge@ff2
  9990   001884  CFDE F006          	movff	postinc2,___flge@ff2+1
  9991   001888  CFDE F007          	movff	postinc2,___flge@ff2+2
  9992   00188C  CFDE F008          	movff	postinc2,___flge@ff2+3
  9993   001890  EC01  F019         	call	___flge	;wreg free
  9994   001894  B0D8               	btfsc	status,0,c
  9995   001896  EF4F  F00C         	goto	u2991
  9996   00189A  EF51  F00C         	goto	u2990
  9997   00189E                     u2991:
  9998   00189E  EF80  F00C         	goto	l3520
  9999   0018A2                     u2990:
 10000   0018A2  EE20 F010          	lfsr	2,16
 10001   0018A6  500D               	movf	Hue2Colour@cf^0,w,c
 10002   0018A8  26D9               	addwf	fsr2l,f,c
 10003   0018AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10004   0018AC  22DA               	addwfc	fsr2h,f,c
 10005   0018AE  CFDE F001          	movff	postinc2,___flge@ff1
 10006   0018B2  CFDE F002          	movff	postinc2,___flge@ff1+1
 10007   0018B6  CFDE F003          	movff	postinc2,___flge@ff1+2
 10008   0018BA  CFDE F004          	movff	postinc2,___flge@ff1+3
 10009   0018BE  0E00               	movlw	0
 10010   0018C0  6E05               	movwf	___flge@ff2^0,c
 10011   0018C2  0E00               	movlw	0
 10012   0018C4  6E06               	movwf	(___flge@ff2+1)^0,c
 10013   0018C6  0E30               	movlw	48
 10014   0018C8  6E07               	movwf	(___flge@ff2+2)^0,c
 10015   0018CA  0E41               	movlw	65
 10016   0018CC  6E08               	movwf	(___flge@ff2+3)^0,c
 10017   0018CE  EC01  F019         	call	___flge	;wreg free
 10018   0018D2  B0D8               	btfsc	status,0,c
 10019   0018D4  EF6E  F00C         	goto	u3001
 10020   0018D8  EF70  F00C         	goto	u3000
 10021   0018DC                     u3001:
 10022   0018DC  EF80  F00C         	goto	l3520
 10023   0018E0                     u3000:
 10024   0018E0                     
 10025                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10026   0018E0  0E2F               	movlw	low STR_7
 10027   0018E2  6E0F               	movwf	Hue2Colour@colourname^0,c
 10028   0018E4  0E0E               	movlw	high STR_7
 10029   0018E6  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10030   0018E8                     
 10031                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10032   0018E8  EE20 F014          	lfsr	2,20
 10033   0018EC  500D               	movf	Hue2Colour@cf^0,w,c
 10034   0018EE  26D9               	addwf	fsr2l,f,c
 10035   0018F0  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10036   0018F2  22DA               	addwfc	fsr2h,f,c
 10037   0018F4  0E05               	movlw	5
 10038   0018F6  6EDE               	movwf	postinc2,c
 10039   0018F8  0E00               	movlw	0
 10040   0018FA  6EDD               	movwf	postdec2,c
 10041                           
 10042                           ;colorfunctions.c: 91:     }
 10043   0018FC  EF1C  F00D         	goto	l3536
 10044   001900                     l3520:
 10045   001900  0E00               	movlw	0
 10046   001902  6E01               	movwf	___flge@ff1^0,c
 10047   001904  0E00               	movlw	0
 10048   001906  6E02               	movwf	(___flge@ff1+1)^0,c
 10049   001908  0EAA               	movlw	170
 10050   00190A  6E03               	movwf	(___flge@ff1+2)^0,c
 10051   00190C  0E42               	movlw	66
 10052   00190E  6E04               	movwf	(___flge@ff1+3)^0,c
 10053   001910  EE20 F010          	lfsr	2,16
 10054   001914  500D               	movf	Hue2Colour@cf^0,w,c
 10055   001916  26D9               	addwf	fsr2l,f,c
 10056   001918  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10057   00191A  22DA               	addwfc	fsr2h,f,c
 10058   00191C  CFDE F005          	movff	postinc2,___flge@ff2
 10059   001920  CFDE F006          	movff	postinc2,___flge@ff2+1
 10060   001924  CFDE F007          	movff	postinc2,___flge@ff2+2
 10061   001928  CFDE F008          	movff	postinc2,___flge@ff2+3
 10062   00192C  EC01  F019         	call	___flge	;wreg free
 10063   001930  B0D8               	btfsc	status,0,c
 10064   001932  EF9D  F00C         	goto	u3011
 10065   001936  EF9F  F00C         	goto	u3010
 10066   00193A                     u3011:
 10067   00193A  EFCE  F00C         	goto	l3528
 10068   00193E                     u3010:
 10069   00193E  EE20 F010          	lfsr	2,16
 10070   001942  500D               	movf	Hue2Colour@cf^0,w,c
 10071   001944  26D9               	addwf	fsr2l,f,c
 10072   001946  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10073   001948  22DA               	addwfc	fsr2h,f,c
 10074   00194A  CFDE F001          	movff	postinc2,___flge@ff1
 10075   00194E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10076   001952  CFDE F003          	movff	postinc2,___flge@ff1+2
 10077   001956  CFDE F004          	movff	postinc2,___flge@ff1+3
 10078   00195A  0E00               	movlw	0
 10079   00195C  6E05               	movwf	___flge@ff2^0,c
 10080   00195E  0E00               	movlw	0
 10081   001960  6E06               	movwf	(___flge@ff2+1)^0,c
 10082   001962  0ED2               	movlw	210
 10083   001964  6E07               	movwf	(___flge@ff2+2)^0,c
 10084   001966  0E42               	movlw	66
 10085   001968  6E08               	movwf	(___flge@ff2+3)^0,c
 10086   00196A  EC01  F019         	call	___flge	;wreg free
 10087   00196E  B0D8               	btfsc	status,0,c
 10088   001970  EFBC  F00C         	goto	u3021
 10089   001974  EFBE  F00C         	goto	u3020
 10090   001978                     u3021:
 10091   001978  EFCE  F00C         	goto	l3528
 10092   00197C                     u3020:
 10093   00197C                     
 10094                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 10095   00197C  0E11               	movlw	low STR_8
 10096   00197E  6E0F               	movwf	Hue2Colour@colourname^0,c
 10097   001980  0E0E               	movlw	high STR_8
 10098   001982  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10099   001984                     
 10100                           ;colorfunctions.c: 95:         cf->colourindex=6;
 10101   001984  EE20 F014          	lfsr	2,20
 10102   001988  500D               	movf	Hue2Colour@cf^0,w,c
 10103   00198A  26D9               	addwf	fsr2l,f,c
 10104   00198C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10105   00198E  22DA               	addwfc	fsr2h,f,c
 10106   001990  0E06               	movlw	6
 10107   001992  6EDE               	movwf	postinc2,c
 10108   001994  0E00               	movlw	0
 10109   001996  6EDD               	movwf	postdec2,c
 10110                           
 10111                           ;colorfunctions.c: 96:     }
 10112   001998  EF1C  F00D         	goto	l3536
 10113   00199C                     l3528:
 10114   00199C  0E00               	movlw	0
 10115   00199E  6E01               	movwf	___flge@ff1^0,c
 10116   0019A0  0E00               	movlw	0
 10117   0019A2  6E02               	movwf	(___flge@ff1+1)^0,c
 10118   0019A4  0EC8               	movlw	200
 10119   0019A6  6E03               	movwf	(___flge@ff1+2)^0,c
 10120   0019A8  0E41               	movlw	65
 10121   0019AA  6E04               	movwf	(___flge@ff1+3)^0,c
 10122   0019AC  EE20 F010          	lfsr	2,16
 10123   0019B0  500D               	movf	Hue2Colour@cf^0,w,c
 10124   0019B2  26D9               	addwf	fsr2l,f,c
 10125   0019B4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10126   0019B6  22DA               	addwfc	fsr2h,f,c
 10127   0019B8  CFDE F005          	movff	postinc2,___flge@ff2
 10128   0019BC  CFDE F006          	movff	postinc2,___flge@ff2+1
 10129   0019C0  CFDE F007          	movff	postinc2,___flge@ff2+2
 10130   0019C4  CFDE F008          	movff	postinc2,___flge@ff2+3
 10131   0019C8  EC01  F019         	call	___flge	;wreg free
 10132   0019CC  B0D8               	btfsc	status,0,c
 10133   0019CE  EFEB  F00C         	goto	u3031
 10134   0019D2  EFED  F00C         	goto	u3030
 10135   0019D6                     u3031:
 10136   0019D6  EF1C  F00D         	goto	l124
 10137   0019DA                     u3030:
 10138   0019DA  EE20 F010          	lfsr	2,16
 10139   0019DE  500D               	movf	Hue2Colour@cf^0,w,c
 10140   0019E0  26D9               	addwf	fsr2l,f,c
 10141   0019E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10142   0019E4  22DA               	addwfc	fsr2h,f,c
 10143   0019E6  CFDE F001          	movff	postinc2,___flge@ff1
 10144   0019EA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10145   0019EE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10146   0019F2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10147   0019F6  0E00               	movlw	0
 10148   0019F8  6E05               	movwf	___flge@ff2^0,c
 10149   0019FA  0E00               	movlw	0
 10150   0019FC  6E06               	movwf	(___flge@ff2+1)^0,c
 10151   0019FE  0E04               	movlw	4
 10152   001A00  6E07               	movwf	(___flge@ff2+2)^0,c
 10153   001A02  0E42               	movlw	66
 10154   001A04  6E08               	movwf	(___flge@ff2+3)^0,c
 10155   001A06  EC01  F019         	call	___flge	;wreg free
 10156   001A0A  B0D8               	btfsc	status,0,c
 10157   001A0C  EF0A  F00D         	goto	u3041
 10158   001A10  EF0C  F00D         	goto	u3040
 10159   001A14                     u3041:
 10160   001A14  EF1C  F00D         	goto	l124
 10161   001A18                     u3040:
 10162   001A18                     
 10163                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 10164   001A18  0E26               	movlw	low STR_9
 10165   001A1A  6E0F               	movwf	Hue2Colour@colourname^0,c
 10166   001A1C  0E0E               	movlw	high STR_9
 10167   001A1E  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10168   001A20                     
 10169                           ;colorfunctions.c: 100:         cf->colourindex=7;
 10170   001A20  EE20 F014          	lfsr	2,20
 10171   001A24  500D               	movf	Hue2Colour@cf^0,w,c
 10172   001A26  26D9               	addwf	fsr2l,f,c
 10173   001A28  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10174   001A2A  22DA               	addwfc	fsr2h,f,c
 10175   001A2C  0E07               	movlw	7
 10176   001A2E  6EDE               	movwf	postinc2,c
 10177   001A30  0E00               	movlw	0
 10178   001A32  6EDD               	movwf	postdec2,c
 10179   001A34  EF1C  F00D         	goto	l3536
 10180   001A38                     l124:
 10181   001A38                     l3536:
 10182                           
 10183                           ;colorfunctions.c: 102:     return colourname;
 10184   001A38  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 10185   001A3C  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 10186   001A40  0012               	return		;funcret
 10187   001A42                     __end_of_Hue2Colour:
 10188                           	callstack 0
 10189                           
 10190 ;; *************** function ___flge *****************
 10191 ;; Defined at:
 10192 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 10195 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;		None               void
 10200 ;; Registers used:
 10201 ;;		wreg, status,2, status,0
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10207 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10210 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;Total ram usage:       12 bytes
 10212 ;; Hardware stack levels used: 1
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_RGB2Hue
 10217 ;;		_Hue2Colour
 10218 ;;		_main
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text59
 10223   003202                     __ptext59:
 10224                           	callstack 0
 10225   003202                     ___flge:
 10226                           	callstack 30
 10227   003202  0E00               	movlw	0
 10228   003204  1401               	andwf	___flge@ff1^0,w,c
 10229   003206  6E09               	movwf	??___flge^0,c
 10230   003208  0E00               	movlw	0
 10231   00320A  1402               	andwf	(___flge@ff1+1)^0,w,c
 10232   00320C  6E0A               	movwf	(??___flge+1)^0,c
 10233   00320E  0E80               	movlw	128
 10234   003210  1403               	andwf	(___flge@ff1+2)^0,w,c
 10235   003212  6E0B               	movwf	(??___flge+2)^0,c
 10236   003214  0E7F               	movlw	127
 10237   003216  1404               	andwf	(___flge@ff1+3)^0,w,c
 10238   003218  6E0C               	movwf	(??___flge+3)^0,c
 10239   00321A  5009               	movf	??___flge^0,w,c
 10240   00321C  100A               	iorwf	(??___flge+1)^0,w,c
 10241   00321E  100B               	iorwf	(??___flge+2)^0,w,c
 10242   003220  100C               	iorwf	(??___flge+3)^0,w,c
 10243   003222  A4D8               	btfss	status,2,c
 10244   003224  EF16  F019         	goto	u2831
 10245   003228  EF18  F019         	goto	u2830
 10246   00322C                     u2831:
 10247   00322C  EF20  F019         	goto	l3404
 10248   003230                     u2830:
 10249   003230  0E00               	movlw	0
 10250   003232  6E01               	movwf	___flge@ff1^0,c
 10251   003234  0E00               	movlw	0
 10252   003236  6E02               	movwf	(___flge@ff1+1)^0,c
 10253   003238  0E00               	movlw	0
 10254   00323A  6E03               	movwf	(___flge@ff1+2)^0,c
 10255   00323C  0E00               	movlw	0
 10256   00323E  6E04               	movwf	(___flge@ff1+3)^0,c
 10257   003240                     l3404:
 10258   003240  0E00               	movlw	0
 10259   003242  1405               	andwf	___flge@ff2^0,w,c
 10260   003244  6E09               	movwf	??___flge^0,c
 10261   003246  0E00               	movlw	0
 10262   003248  1406               	andwf	(___flge@ff2+1)^0,w,c
 10263   00324A  6E0A               	movwf	(??___flge+1)^0,c
 10264   00324C  0E80               	movlw	128
 10265   00324E  1407               	andwf	(___flge@ff2+2)^0,w,c
 10266   003250  6E0B               	movwf	(??___flge+2)^0,c
 10267   003252  0E7F               	movlw	127
 10268   003254  1408               	andwf	(___flge@ff2+3)^0,w,c
 10269   003256  6E0C               	movwf	(??___flge+3)^0,c
 10270   003258  5009               	movf	??___flge^0,w,c
 10271   00325A  100A               	iorwf	(??___flge+1)^0,w,c
 10272   00325C  100B               	iorwf	(??___flge+2)^0,w,c
 10273   00325E  100C               	iorwf	(??___flge+3)^0,w,c
 10274   003260  A4D8               	btfss	status,2,c
 10275   003262  EF35  F019         	goto	u2841
 10276   003266  EF37  F019         	goto	u2840
 10277   00326A                     u2841:
 10278   00326A  EF3F  F019         	goto	l3408
 10279   00326E                     u2840:
 10280   00326E  0E00               	movlw	0
 10281   003270  6E05               	movwf	___flge@ff2^0,c
 10282   003272  0E00               	movlw	0
 10283   003274  6E06               	movwf	(___flge@ff2+1)^0,c
 10284   003276  0E00               	movlw	0
 10285   003278  6E07               	movwf	(___flge@ff2+2)^0,c
 10286   00327A  0E00               	movlw	0
 10287   00327C  6E08               	movwf	(___flge@ff2+3)^0,c
 10288   00327E                     l3408:
 10289   00327E  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10290   003280  EF44  F019         	goto	u2851
 10291   003284  EF46  F019         	goto	u2850
 10292   003288                     u2851:
 10293   003288  EF4F  F019         	goto	l3412
 10294   00328C                     u2850:
 10295   00328C  6C01               	negf	___flge@ff1^0,c
 10296   00328E  1E02               	comf	(___flge@ff1+1)^0,f,c
 10297   003290  B0D8               	btfsc	status,0,c
 10298   003292  2A02               	incf	(___flge@ff1+1)^0,f,c
 10299   003294  1E03               	comf	(___flge@ff1+2)^0,f,c
 10300   003296  B0D8               	btfsc	status,0,c
 10301   003298  2A03               	incf	(___flge@ff1+2)^0,f,c
 10302   00329A  0E80               	movlw	128
 10303   00329C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10304   00329E                     l3412:
 10305   00329E  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10306   0032A0  EF54  F019         	goto	u2861
 10307   0032A4  EF56  F019         	goto	u2860
 10308   0032A8                     u2861:
 10309   0032A8  EF5F  F019         	goto	l848
 10310   0032AC                     u2860:
 10311   0032AC  6C05               	negf	___flge@ff2^0,c
 10312   0032AE  1E06               	comf	(___flge@ff2+1)^0,f,c
 10313   0032B0  B0D8               	btfsc	status,0,c
 10314   0032B2  2A06               	incf	(___flge@ff2+1)^0,f,c
 10315   0032B4  1E07               	comf	(___flge@ff2+2)^0,f,c
 10316   0032B6  B0D8               	btfsc	status,0,c
 10317   0032B8  2A07               	incf	(___flge@ff2+2)^0,f,c
 10318   0032BA  0E80               	movlw	128
 10319   0032BC  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10320   0032BE                     l848:
 10321   0032BE  0E00               	movlw	0
 10322   0032C0  1A01               	xorwf	___flge@ff1^0,f,c
 10323   0032C2  0E00               	movlw	0
 10324   0032C4  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10325   0032C6  0E00               	movlw	0
 10326   0032C8  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10327   0032CA  0E80               	movlw	128
 10328   0032CC  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10329   0032CE  0E00               	movlw	0
 10330   0032D0  1A05               	xorwf	___flge@ff2^0,f,c
 10331   0032D2  0E00               	movlw	0
 10332   0032D4  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10333   0032D6  0E00               	movlw	0
 10334   0032D8  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10335   0032DA  0E80               	movlw	128
 10336   0032DC  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10337   0032DE  5005               	movf	___flge@ff2^0,w,c
 10338   0032E0  5C01               	subwf	___flge@ff1^0,w,c
 10339   0032E2  5006               	movf	(___flge@ff2+1)^0,w,c
 10340   0032E4  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10341   0032E6  5007               	movf	(___flge@ff2+2)^0,w,c
 10342   0032E8  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10343   0032EA  5008               	movf	(___flge@ff2+3)^0,w,c
 10344   0032EC  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10345   0032EE  B0D8               	btfsc	status,0,c
 10346   0032F0  EF7C  F019         	goto	u2871
 10347   0032F4  EF7E  F019         	goto	u2870
 10348   0032F8                     u2871:
 10349   0032F8  EF81  F019         	goto	l3418
 10350   0032FC                     u2870:
 10351   0032FC  90D8               	bcf	status,0,c
 10352   0032FE  EF82  F019         	goto	l853
 10353   003302                     l3418:
 10354   003302  80D8               	bsf	status,0,c
 10355   003304                     l853:
 10356   003304  0012               	return		;funcret
 10357   003306                     __end_of___flge:
 10358                           	callstack 0
 10359                           
 10360 ;; *************** function _ClickLEDOn *****************
 10361 ;; Defined at:
 10362 ;;		line 93 in file "colorclick.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  power           1    wreg     unsigned char 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;  power           1    0[COMRAM] unsigned char 
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1    wreg      void 
 10369 ;; Registers used:
 10370 ;;		wreg, status,2
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;Total ram usage:        1 bytes
 10381 ;; Hardware stack levels used: 1
 10382 ;; This function calls:
 10383 ;;		Nothing
 10384 ;; This function is called by:
 10385 ;;		_main
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text60
 10390   00437E                     __ptext60:
 10391                           	callstack 0
 10392   00437E                     _ClickLEDOn:
 10393                           	callstack 30
 10394                           
 10395                           ;incstack = 0
 10396                           ;ClickLEDOn@power stored from wreg
 10397   00437E  6E01               	movwf	ClickLEDOn@power^0,c
 10398   004380                     
 10399                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10400   004380  5001               	movf	ClickLEDOn@power^0,w,c
 10401   004382  B4D8               	btfsc	status,2,c
 10402   004384  EFC6  F021         	goto	u3751
 10403   004388  EFC8  F021         	goto	u3750
 10404   00438C                     u3751:
 10405   00438C  EFCD  F021         	goto	l4046
 10406   004390                     u3750:
 10407   004390                     
 10408                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10409   004390  827F               	bsf	127,1,c	;volatile
 10410                           
 10411                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10412   004392  8879               	bsf	121,4,c	;volatile
 10413                           
 10414                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10415   004394  8E7E               	bsf	126,7,c	;volatile
 10416                           
 10417                           ;colorclick.c: 99:     }
 10418   004396  EFD8  F021         	goto	l52
 10419   00439A                     l4046:
 10420   00439A  5001               	movf	ClickLEDOn@power^0,w,c
 10421   00439C  A4D8               	btfss	status,2,c
 10422   00439E  EFD3  F021         	goto	u3761
 10423   0043A2  EFD5  F021         	goto	u3760
 10424   0043A6                     u3761:
 10425   0043A6  EFD8  F021         	goto	l52
 10426   0043AA                     u3760:
 10427   0043AA                     
 10428                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10429   0043AA  927F               	bcf	127,1,c	;volatile
 10430                           
 10431                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10432   0043AC  9879               	bcf	121,4,c	;volatile
 10433                           
 10434                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10435   0043AE  9E7E               	bcf	126,7,c	;volatile
 10436   0043B0                     l52:
 10437   0043B0  0012               	return		;funcret
 10438   0043B2                     __end_of_ClickLEDOn:
 10439                           	callstack 0
 10440                           
 10441                           	psect	rparam
 10442   000000                     
 10443                           	psect	idloc
 10444                           
 10445                           ;Config register IDLOC0 @ 0x200000
 10446                           ;	unspecified, using default values
 10447   200000                     	org	2097152
 10448   200000  0FFF               	dw	4095
 10449                           
 10450                           ;Config register IDLOC1 @ 0x200002
 10451                           ;	unspecified, using default values
 10452   200002                     	org	2097154
 10453   200002  0FFF               	dw	4095
 10454                           
 10455                           ;Config register IDLOC2 @ 0x200004
 10456                           ;	unspecified, using default values
 10457   200004                     	org	2097156
 10458   200004  0FFF               	dw	4095
 10459                           
 10460                           ;Config register IDLOC3 @ 0x200006
 10461                           ;	unspecified, using default values
 10462   200006                     	org	2097158
 10463   200006  0FFF               	dw	4095
 10464                           
 10465                           ;Config register IDLOC4 @ 0x200008
 10466                           ;	unspecified, using default values
 10467   200008                     	org	2097160
 10468   200008  0FFF               	dw	4095
 10469                           
 10470                           ;Config register IDLOC5 @ 0x20000A
 10471                           ;	unspecified, using default values
 10472   20000A                     	org	2097162
 10473   20000A  0FFF               	dw	4095
 10474                           
 10475                           ;Config register IDLOC6 @ 0x20000C
 10476                           ;	unspecified, using default values
 10477   20000C                     	org	2097164
 10478   20000C  0FFF               	dw	4095
 10479                           
 10480                           ;Config register IDLOC7 @ 0x20000E
 10481                           ;	unspecified, using default values
 10482   20000E                     	org	2097166
 10483   20000E  0FFF               	dw	4095
 10484                           
 10485                           	psect	config
 10486                           
 10487                           ;Config register CONFIG1L @ 0x300000
 10488                           ;	External Oscillator mode Selection bits
 10489                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10490                           ;	Power-up default value for COSC bits
 10491                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10492   300000                     	org	3145728
 10493   300000  AA                 	db	170
 10494                           
 10495                           ;Config register CONFIG1H @ 0x300001
 10496                           ;	unspecified, using default values
 10497                           ;	Clock Out Enable bit
 10498                           ;	CLKOUTEN = 0x1, unprogrammed default
 10499                           ;	Clock Switch Enable bit
 10500                           ;	CSWEN = 0x1, unprogrammed default
 10501                           ;	Fail-Safe Clock Monitor Enable bit
 10502                           ;	FCMEN = 0x1, unprogrammed default
 10503   300001                     	org	3145729
 10504   300001  FF                 	db	255
 10505                           
 10506                           ;Config register CONFIG2L @ 0x300002
 10507                           ;	unspecified, using default values
 10508                           ;	Master Clear Enable bit
 10509                           ;	MCLRE = 0x1, unprogrammed default
 10510                           ;	Power-up Timer Enable bit
 10511                           ;	PWRTE = 0x1, unprogrammed default
 10512                           ;	Low-power BOR enable bit
 10513                           ;	LPBOREN = 0x1, unprogrammed default
 10514                           ;	Brown-out Reset Enable bits
 10515                           ;	BOREN = 0x3, unprogrammed default
 10516   300002                     	org	3145730
 10517   300002  FF                 	db	255
 10518                           
 10519                           ;Config register CONFIG2H @ 0x300003
 10520                           ;	unspecified, using default values
 10521                           ;	Brown Out Reset Voltage selection bits
 10522                           ;	BORV = 0x3, unprogrammed default
 10523                           ;	ZCD Disable bit
 10524                           ;	ZCD = 0x1, unprogrammed default
 10525                           ;	PPSLOCK bit One-Way Set Enable bit
 10526                           ;	PPS1WAY = 0x1, unprogrammed default
 10527                           ;	Stack Full/Underflow Reset Enable bit
 10528                           ;	STVREN = 0x1, unprogrammed default
 10529                           ;	Debugger Enable bit
 10530                           ;	DEBUG = 0x1, unprogrammed default
 10531                           ;	Extended Instruction Set Enable bit
 10532                           ;	XINST = 0x1, unprogrammed default
 10533   300003                     	org	3145731
 10534   300003  FF                 	db	255
 10535                           
 10536                           ;Config register CONFIG3L @ 0x300004
 10537                           ;	WDT Period Select bits
 10538                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10539                           ;	WDT operating mode
 10540                           ;	WDTE = OFF, WDT Disabled
 10541   300004                     	org	3145732
 10542   300004  9F                 	db	159
 10543                           
 10544                           ;Config register CONFIG3H @ 0x300005
 10545                           ;	unspecified, using default values
 10546                           ;	WDT Window Select bits
 10547                           ;	WDTCWS = 0x7, unprogrammed default
 10548                           ;	WDT input clock selector
 10549                           ;	WDTCCS = 0x7, unprogrammed default
 10550   300005                     	org	3145733
 10551   300005  FF                 	db	255
 10552                           
 10553                           ;Config register CONFIG4L @ 0x300006
 10554                           ;	unspecified, using default values
 10555                           ;	Write Protection Block 0
 10556                           ;	WRT0 = 0x1, unprogrammed default
 10557                           ;	Write Protection Block 1
 10558                           ;	WRT1 = 0x1, unprogrammed default
 10559                           ;	Write Protection Block 2
 10560                           ;	WRT2 = 0x1, unprogrammed default
 10561                           ;	Write Protection Block 3
 10562                           ;	WRT3 = 0x1, unprogrammed default
 10563                           ;	Write Protection Block 3
 10564                           ;	WRT4 = 0x1, unprogrammed default
 10565                           ;	Write Protection Block 3
 10566                           ;	WRT5 = 0x1, unprogrammed default
 10567                           ;	Write Protection Block 3
 10568                           ;	WRT6 = 0x1, unprogrammed default
 10569                           ;	Write Protection Block 3
 10570                           ;	WRT7 = 0x1, unprogrammed default
 10571   300006                     	org	3145734
 10572   300006  FF                 	db	255
 10573                           
 10574                           ;Config register CONFIG4H @ 0x300007
 10575                           ;	unspecified, using default values
 10576                           ;	Configuration Register Write Protection bit
 10577                           ;	WRTC = 0x1, unprogrammed default
 10578                           ;	Boot Block Write Protection bit
 10579                           ;	WRTB = 0x1, unprogrammed default
 10580                           ;	Data EEPROM Write Protection bit
 10581                           ;	WRTD = 0x1, unprogrammed default
 10582                           ;	Scanner Enable bit
 10583                           ;	SCANE = 0x1, unprogrammed default
 10584                           ;	Low Voltage Programming Enable bit
 10585                           ;	LVP = 0x1, unprogrammed default
 10586   300007                     	org	3145735
 10587   300007  FF                 	db	255
 10588                           
 10589                           ;Config register CONFIG5L @ 0x300008
 10590                           ;	unspecified, using default values
 10591                           ;	UserNVM Program Memory Code Protection bit
 10592                           ;	CP = 0x1, unprogrammed default
 10593                           ;	DataNVM Memory Code Protection bit
 10594                           ;	CPD = 0x1, unprogrammed default
 10595   300008                     	org	3145736
 10596   300008  FF                 	db	255
 10597                           
 10598                           ;Config register CONFIG5H @ 0x300009
 10599                           ;	unspecified, using default values
 10600   300009                     	org	3145737
 10601   300009  FF                 	db	255
 10602                           
 10603                           ;Config register CONFIG6L @ 0x30000A
 10604                           ;	unspecified, using default values
 10605                           ;	Table Read Protection Block 0
 10606                           ;	EBTR0 = 0x1, unprogrammed default
 10607                           ;	Table Read Protection Block 1
 10608                           ;	EBTR1 = 0x1, unprogrammed default
 10609                           ;	Table Read Protection Block 2
 10610                           ;	EBTR2 = 0x1, unprogrammed default
 10611                           ;	Table Read Protection Block 3
 10612                           ;	EBTR3 = 0x1, unprogrammed default
 10613                           ;	Table Read Protection Block 4
 10614                           ;	EBTR4 = 0x1, unprogrammed default
 10615                           ;	Table Read Protection Block 5
 10616                           ;	EBTR5 = 0x1, unprogrammed default
 10617                           ;	Table Read Protection Block 6
 10618                           ;	EBTR6 = 0x1, unprogrammed default
 10619                           ;	Table Read Protection Block 7
 10620                           ;	EBTR7 = 0x1, unprogrammed default
 10621   30000A                     	org	3145738
 10622   30000A  FF                 	db	255
 10623                           
 10624                           ;Config register CONFIG6H @ 0x30000B
 10625                           ;	unspecified, using default values
 10626                           ;	Boot Block Table Read Protection bit
 10627                           ;	EBTRB = 0x1, unprogrammed default
 10628   30000B                     	org	3145739
 10629   30000B  FF                 	db	255
 10630                           tosu	equ	0xFFF
 10631                           tosh	equ	0xFFE
 10632                           tosl	equ	0xFFD
 10633                           stkptr	equ	0xFFC
 10634                           pclatu	equ	0xFFB
 10635                           pclath	equ	0xFFA
 10636                           pcl	equ	0xFF9
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           indf0	equ	0xFEF
 10644                           postinc0	equ	0xFEE
 10645                           postdec0	equ	0xFED
 10646                           preinc0	equ	0xFEC
 10647                           plusw0	equ	0xFEB
 10648                           fsr0h	equ	0xFEA
 10649                           fsr0l	equ	0xFE9
 10650                           wreg	equ	0xFE8
 10651                           indf1	equ	0xFE7
 10652                           postinc1	equ	0xFE6
 10653                           postdec1	equ	0xFE5
 10654                           preinc1	equ	0xFE4
 10655                           plusw1	equ	0xFE3
 10656                           fsr1h	equ	0xFE2
 10657                           fsr1l	equ	0xFE1
 10658                           bsr	equ	0xFE0
 10659                           indf2	equ	0xFDF
 10660                           postinc2	equ	0xFDE
 10661                           postdec2	equ	0xFDD
 10662                           preinc2	equ	0xFDC
 10663                           plusw2	equ	0xFDB
 10664                           fsr2h	equ	0xFDA
 10665                           fsr2l	equ	0xFD9
 10666                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    122     155
    BANK1           256      0     141
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2639$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), 
		 -> STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2586$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2586$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S308DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S308DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_RGB2Hue
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _Colour2Action->_Blue_T180
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0  255225
                                             92 COMRAM     2     2      0
                                             21 BANK0    101   101      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                           _LED_init
                            _RGB2Hue
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2114
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16629
                                             86 COMRAM     6     4      2
                                             13 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1330
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     999
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2838
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  214275
                                             39 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   38611
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Red_R90                                              4     0      4   28188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Pink_rev1_L90                                        6     2      4   38567
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                         _TimerReset
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Orange_R135                                          4     0      4   32697
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (2) _LightBlue_L135                                       4     0      4   28276
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (2) _Green_L90                                            4     0      4   28188
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                         _TimerReset
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9236
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Blue_T180                                            4     0      4   19496
                                             35 COMRAM     4     0      4
                         _TimerReset
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10476
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9844
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8584
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4377
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8157
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _TimerReset
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _TimerReset
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
       _stop
     _Pink_rev1_L90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _TimerReset
       _reverseHalfSquare
     _Yellow_rev1_R90
       _Left45
       _Right45
       _TimerReset
       _fullSpeedAhead
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
   _Hue2Colour
   _I2C_2_Master_Init
   _LED_init
   _RGB2Hue
     ___fladd
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___xxtofl
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8D       7       55.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9B       5       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllhh       52      0       0      41        0.0%
BITBIGSFRllhllh     37      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      54        0.0%
BITBIGSFRhhhhh      29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      46        0.0%
BITBIGSFRlllllh     1E      0       0      48        0.0%
BITBIGSFRlllllh     19      0       0      55        0.0%
BITBIGSFRhhllh      17      0       0      37        0.0%
BITBIGSFRhhhhl      13      0       0      33        0.0%
BITBIGSFRlllllh     11      0       0      49        0.0%
BITBIGSFRhhhlh       E      0       0      34        0.0%
BITBIGSFRllllhl      C      0       0      47        0.0%
BITBIGSFRllhlll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      53        0.0%
BITBIGSFRlllllh      5      0       0      52        0.0%
BITBIGSFRhhlll       5      0       0      38        0.0%
BITBIGSFRlllllh      3      0       0      51        0.0%
BITBIGSFRllhlh       2      0       0      42        0.0%
BITBIGSFRhhlh        2      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      50        0.0%
BITBIGSFRhhhll       1      0       0      35        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BITBIGSFRhlhl        1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     187      58        0.0%
DATA                 0      0     187       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 19:58:01 2023

               _color_read_Red 4014                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 4104                             l31 4306  
                           l40 40B2                             l34 446A                             l43 4152  
                           l52 43B0                             l37 4062                             l46 4102  
                           l99 30FA            ___wmul@multiplicand 0003                 ?_rotate180left 0020  
             _color_read_Clear 40B4               _color_read_Green 4064                    Green_L90@mL 0021  
                  Green_L90@mR 0023                            l105 10A0                            l113 1552  
                          l130 1A40                            l124 1A38                            l140 2BF2  
                          l321 4482                            l330 437C                            l147 2BF2  
                          l324 4344                            l180 4402                            l309 444A  
                          l318 446E                            l502 34DC                            l174 43DA  
                          l183 44BA                            l512 388E                            l192 449C  
                          l264 2740                            l345 4490                            l177 43DC  
                          l450 3A60                            l186 44A6                            l435 2D5E  
                          l507 373E                            l195 42C6                            l444 3932  
                          l460 3D06                            l428 3AF0                            l445 3934  
                          l189 44B0                            l455 39CA                            l471 3B78  
                          l465 3D86                            l474 4012                            l482 3E04  
                          l468 3C00                            l492 3FC0                            l477 3C86  
                          l583 4428                            l487 3E82                            l577 44C4  
                          l497 33F2                            l842 37E8                            l853 3304  
                          l848 32BE                            l880 3200                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1554  
                 ___fltol@exp1 000A                           l1111 1C30                           l1120 1F00  
                         l1112 1C1E                           l1201 232C                           l1113 1BE4  
                         l1204 21BE                           l1214 22EE                           l1206 2236  
                         l1207 2224                           l3000 34DE                           l1128 1D4A  
                         l1081 3F6A                           l1137 1E1A                           l1153 4284  
                         l1241 2A6C                           l3010 353E                           l3002 3508  
                         l1074 3F62                           l1170 24EA                           l1138 1E08  
                         l1307 2FF4                           l3012 355A                           l3100 2E36  
                         l1324 423E                           l1252 2A04                           l3020 43DC  
                         l1261 41F0                           l1165 26C6                           l1245 29A8  
                         l3014 356C                           l3006 3514                           l1318 2EB8  
                         l3102 2E46                           l3110 2E90                           l3030 396E  
                         l1238 2910                           l3022 43EC                           l1167 2526  
                         l1336 3684                           l3016 3596                           l3008 3522  
                         l3040 3996                           l3024 3936                           l1176 256C  
                         l3200 1A4E                           l4000 29E6                           l3120 4494  
                         l1353 41A2                           l3106 2E7E                           l3050 3D28  
                         l3042 39A2                           l3026 3956                           l1178 25E4  
                         l3210 1A8E                           l3202 1A5C                           l4010 2A3C  
                         l4002 29F4                           l3122 4498                           l3130 44A2  
                         l1347 44D6                           l1179 25D2                           l3060 3D50  
                         l3044 39B0                           l3036 3976                           l3028 3962  
                         l3300 1C4E                           l3220 1AC0                           l3212 1A90  
                         l3204 1A5E                           l4012 2A4C                           l4004 2A12  
                         l4100 14EA                           l3116 44B2                           l3124 44A8  
                         l4020 42C8                           l3140 42C2                           l3132 4288  
                         l1357 35BA                           l1197 1FC8                           l3062 3D5C  
                         l3070 3B7C                           l3046 39B4                           l3038 398A  
                         l4110 2AC2                           l3310 1C8E                           l3230 1AE8  
                         l3222 1AC2                           l3206 1A6E                           l3214 1A98  
                         l4014 2A5A                           l4006 2A14                           l4102 1506  
                         l3118 44B6                           l3126 44AC                           l4030 42FA  
                         l4022 42CC                           l3142 42C4                           l3134 428C  
                         l3400 3202                           l1296 2F3A                           l3064 3D6C  
                         l3056 3D30                           l3048 3D08                           l3080 3BFE  
                         l3072 3B90                           l3160 3CDC                           l4120 2B4A  
                         l4112 2ADA                           l4104 2A6E                           l3320 1CB8  
                         l3312 1C9A                           l3304 1C62                           l3240 1B22  
                         l3232 1AF8                           l3224 1AC8                           l3216 1AA8  
                         l3208 1A7E                           l4016 2A5C                           l4008 2A18  
                         l4040 4304                           l4032 42FC                           l4024 42D6  
                         l3136 4294                           l3128 449E                           l4200 26FA  
                         l4042 4380                           l3410 328C                           l3402 3230  
                         l1298 2F42                           l3090 2DA4                           l3082 2D60  
                         l3066 3D70                           l3058 3D44                           l3074 3BA8  
                         l3170 3AF2                           l3162 3CEC                           l3154 3CB0  
                         l3146 3C88                           l4130 2BDA                           l4122 2B6A  
                         l4114 2AFA                           l4106 2A8C                           l3330 1D2A  
                         l3314 1C9E                           l3306 1C72                           l3322 1CBE  
                         l3250 1B4E                           l3242 1B34                           l3234 1B08  
                         l3226 1AD6                           l3218 1AAE                           l4034 42FE  
                         l4026 42E6                           l3138 429C                           l4050 2FF6  
                         l4210 2716                           l4202 2702                           l4044 4390  
                         l3412 329E                           l3404 3240                           l3500 17A8  
                         l3092 2DC8                           l3084 2D84                           l3076 3BD2  
                         l3068 3B7A                           l3180 3B5E                           l3172 3AF4  
                         l3164 3CF0                           l3156 3CC4                           l3148 3CA8  
                         l4124 2B82                           l4116 2B12                           l4108 2AA4  
                         l3340 1D84                           l3324 1CE4                           l3332 1D3A  
                         l3316 1CAC                           l3308 1C80                           l3260 1B62  
                         l3252 1B52                           l3244 1B42                           l3236 1B0A  
                         l3228 1AD8                           l4060 0E52                           l4036 4300  
                         l4028 42F0                           l4052 308E                           l4140 443A  
                         l4220 2734                           l4212 271E                           l4204 270A  
                         l4046 439A                           l3414 32AC                           l3406 326E  
                         l3510 184C                           l3502 17B0                           l3166 446E  
                         l3094 2DFE                           l3086 2D92                           l3422 41F2  
                         l3190 3C2E                           l3078 3BE6                           l3182 3B76  
                         l3174 3B08                           l3158 3CD0                           l4126 2BA2  
                         l4118 2B32                           l3350 1DB4                           l3342 1D8E  
                         l3334 1D60                           l3326 1D18                           l3318 1CAE  
                         l3270 1B76                           l3262 1B66                           l3254 1B56  
                         l3246 1B46                           l3238 1B12                           l4070 0F4E  
                         l4062 0E98                           l4038 4302                           l4054 30A6  
                         l4150 3A62                           l4142 4444                           l4134 442A  
                         l4230 277A                           l4222 273A                           l4214 2726  
                         l4206 270E                           l4048 43AA                           l3416 32FC  
                         l3408 327E                           l3520 1900                           l3512 1864  
                         l3504 17C8                           l3168 447E                           l3096 2E22  
                         l3088 2DA0                           l3424 41FE                           l3192 3C5A  
                         l3184 3FC2                           l3176 3B20                           l3600 34C8  
                         l4128 2BBA                           l3360 1DDC                           l3352 1DB8  
                         l3344 1D9C                           l3336 1D70                           l3328 1D1A  
                         l3280 1BB0                           l3272 1B7A                           l3264 1B6A  
                         l3256 1B5A                           l3248 1B4A                           l4080 1078  
                         l4072 0F94                           l4064 0EDE                           l3440 43C6  
                         l3432 43B2                           l4056 30C2                           l4160 3ACA  
                         l4152 3A72                           l4144 4446                           l4136 442E  
                         l4240 27EE                           l4232 2796                           l4224 2740  
                         l4216 272E                           l4208 2712                           l3418 3302  
                         l3530 19DA                           l3522 193E                           l3514 18A2  
                         l3506 1806                           l3098 2E2E                           l3426 421A  
                         l3194 3C6E                           l3186 3C02                           l3178 3B4A  
                         l3610 37EA                           l3602 3686                           l3370 1E36  
                         l3362 1DEA                           l3354 1DC8                           l3346 1D9E  
                         l3290 1C02                           l3282 1BCC                           l3274 1B7E  
                         l3266 1B6E                           l3258 1B5E                           l4090 1260  
                         l4082 10E6                           l4074 0FBC                           l4066 0EFE  
                         l3442 43C8                           l3434 43BC                           l4058 30DE  
                         l4170 3AE4                           l4162 3ACC                           l4154 3A98  
                         l4146 4448                           l4138 4438                           l4250 284A  
                         l4242 27F4                           l4234 27A2                           l4226 274E  
                         l4218 2730                           l3532 1A18                           l3524 197C  
                         l3516 18E0                           l3508 1844                           l2900 35BC  
                         l3428 4236                           l3620 41B4                           l3196 44BC  
                         l3188 3C16                           l3612 37FA                           l3604 3696  
                         l3540 3D88                           l4148 4484                           l3700 247E  
                         l3380 1EA0                           l3372 1E44                           l3364 1E00  
                         l3348 1DAC                           l3356 1DCA                           l3292 1C10  
                         l3284 1BDC                           l3268 1B72                           l3276 1B82  
                         l4092 12AA                           l4084 112C                           l4076 1002  
                         l4068 0F08                           l3436 43C2                           l3444 444E  
                         l3460 414A                           l3452 4064                           l4172 3AEE  
                         l4164 3AD6                           l4156 3A9C                           l4260 288E  
                         l4252 2856                           l4244 280C                           l4236 27B6  
                         l4228 2766                           l4180 26C8                           l3534 1A20  
                         l3526 1984                           l3518 18E8                           l3470 1554  
                         l3630 4346                           l2910 363E                           l2902 35CE  
                         l3622 41BC                           l4174 4308                           l3550 3E16  
                         l3614 384A                           l3606 36E6                           l3542 3D98  
                         l3710 24C6                           l3702 248E                           l3390 1EDA  
                         l3382 1EC0                           l3374 1E7E                           l3358 1DD8  
                         l3294 1C12                           l3286 1BF2                           l3278 1B86  
                         l3198 1A42                           l4094 1364                           l4086 1150  
                         l4078 104C                           l3438 43C4                           l3454 40AA  
                         l3446 4014                           l4166 3AD8                           l4158 3AC0  
                         l4262 28A6                           l4254 2862                           l4238 27E8  
                         l4246 2820                           l4190 26D8                           l4182 26CC  
                         l3528 199C                           l3536 1A38                           l3480 15F4  
                         l3472 155C                           l3632 434A                           l2904 35E0  
                         l2920 4196                           l3624 41C4                           l4176 431C  
                         l3560 3FA4                           l3552 3E52                           l3616 3852  
                         l3608 36EE                           l3544 3DD4                           l3720 2514  
                         l3712 24DA                           l3704 249E                           l3640 232E  
                         l3800 1F80                           l3392 1EE0                           l3384 1EC4  
                         l3368 1E2A                           l3376 1E80                           l3296 1C1C  
                         l3288 1BFE                           l4096 13CC                           l4088 121A  
                         l3464 40B4                           l3448 405A                           l4168 3AE2  
                         l4264 28AC                           l4256 286E                           l4248 2832  
                         l4192 26E4                           l4184 26D0                           l3490 16CE  
                         l3482 1632                           l3474 159A                           l3634 4358  
                         l2906 35EA                           l2914 4154                           l3626 41E0  
                         l3618 41A4                           l4178 4338                           l2930 38B8  
                         l3562 3FAC                           l3554 3E5A                           l3546 3DDC  
                         l3570 3356                           l3730 255C                           l3722 2524  
                         l3714 24E8                           l3706 24AE                           l3650 236A  
                         l3642 233A                           l3810 1FB8                           l3802 1F82  
                         l3394 1EEE                           l3386 1ED2                           l3378 1E90  
                         l3298 1C3E                           l4098 1486                           l3458 4104  
                         l3466 40FA                           l4258 287A                           l4194 26EA  
                         l4186 26D4                           l3492 170C                           l3484 1670  
                         l3476 15D8                           l3636 435C                           l2908 3608  
                         l2916 4160                           l2932 38D0                           l2940 3902  
                         l2924 3890                           l3556 3F6C                           l3548 3E06  
                         l3580 33D6                           l3572 336A                           l3564 3306  
                         l3740 259C                           l3732 256A                           l3724 2536  
                         l3716 24F4                           l3708 24B6                           l3660 239A  
                         l3652 237A                           l3644 2348                           l3900 2312  
                         l3820 2008                           l3812 1FD8                           l3804 1F92  
                         l3396 1EF0                           l3388 1ED8                           l4196 26EE  
                         l4188 26D8                           l3494 1714                           l3486 1678  
                         l3478 15E0                           l3638 4364                           l2918 4164  
                         l2870 3F22                           l2862 3EF8                           l2942 391A  
                         l2934 38DA                           l2926 3896                           l2950 3A04  
                         l3558 3F7C                           l3590 3444                           l3574 337E  
                         l3566 3316                           l3750 260E                           l3742 25CA  
                         l3726 254C                           l3734 257C                           l3718 2512  
                         l3670 23D0                           l3662 23A0                           l3654 237C  
                         l3646 234A                           l3902 2318                           l3830 2058  
                         l3822 2012                           l3814 1FE8                           l3806 1FA2  
                         l3910 4250                           l4198 26F2                           l3496 172C  
                         l3488 1690                           l2880 3F56                           l2872 3F30  
                         l2864 3F00                           l2856 4404                           l2936 38E6  
                         l2928 38AE                           l2960 3A2C                           l2944 39CC  
                         l3592 3458                           l3584 33F4                           l3576 3382  
                         l3568 333E                           l3760 2686                           l3752 2638  
                         l3736 258A                           l3728 2552                           l3680 2410  
                         l3672 23E0                           l3664 23AE                           l3648 235A  
                         l3656 2384                           l3920 37AC                           l3904 231C  
                         l3840 209A                           l3832 2064                           l3824 2028  
                         l3808 1FB2                           l3498 176A                           l2970 2ECC  
                         l2882 3F5C                           l2874 3F36                           l2866 3F12  
                         l2858 4420                           l2890 2C78                           l2938 38F2  
                         l2962 3A38                           l2946 39EC                           l3594 346C  
                         l3586 3404                           l3578 339A                           l3770 26BC  
                         l3762 26A2                           l3746 25F4                           l3754 263C  
                         l3738 258E                           l3682 2420                           l3690 2440  
                         l3674 23E2                           l3666 23B0                           l3658 2394  
                         l3922 37BC                           l3914 3740                           l3850 20FC  
                         l3842 20AA                           l3834 2072                           l3826 2034  
                         l3818 1FFC                           l3930 30FC                           l2980 2F0A  
                         l2972 2ED4                           l2876 3F4C                           l2868 3F1A  
                         l2892 2C7C                           l2884 2BF4                           l2964 3A46  
                         l2956 3A0C                           l2948 39F8                           l3588 342C  
                         l3596 3474                           l3764 26A6                           l3756 2656  
                         l3748 2600                           l3692 2450                           l3684 2428  
                         l3668 23C0                           l3676 23EA                           l3924 37E0  
                         l3916 376E                           l3860 21A4                           l3852 2118  
                         l3844 20C4                           l3836 207E                           l3828 204C  
                         l3780 1F10                           l3908 4240                           l3940 3152  
                         l3932 3112                           l2990 2F8C                           l2982 2F18  
                         l2974 2EE6                           l2878 3F54                           l2894 2CBE  
                         l2886 2C10                           l2966 3A4A                           l2958 3A20  
                         l3598 34B0                           l3766 26B4                           l3758 266C  
                         l3694 2450                           l3686 242C                           l3678 23FA  
                         l3926 37E6                           l3918 377E                           l3870 21E0  
                         l3862 21AE                           l3854 2142                           l3846 20D4  
                         l3838 208E                           l3790 1F50                           l3782 1F1E  
                         l3942 3162                           l2992 2F98                           l2984 2F56  
                         l2976 2EEE                           l2968 2EBA                           l2896 2CDA  
                         l2888 2C64                           l3768 26BA                           l3880 2252  
                         l3872 21EE                           l3864 21BC                           l3856 2178  
                         l3848 20F0                           l3792 1F56                           l3784 1F20  
                         l3952 318C                           l3944 3166                           l3936 3126  
                         l2994 2FCE                           l2986 2F6A                           l2978 2F02  
                         l2898 2D1E                           l3698 2464                           l3890 22BC  
                         l3882 2260                           l3874 221C                           l3866 21CE  
                         l3858 2186                           l3794 1F66                           l3786 1F30  
                         l3778 1F02                           l3970 31F0                           l3962 31B4  
                         l3954 3196                           l3946 3174                           l3938 3150  
                         l2996 2FD2                           l2988 2F6E                           l3892 22D6  
                         l3884 228A                           l3868 21DC                           l3796 1F6C  
                         l3788 1F40                           l3964 31C0                           l3956 31A0  
                         l3980 2920                           l2998 2FD6                           l3894 22F2  
                         l3878 2246                           l3886 228E                           l3798 1F72  
                         l3966 31D0                           l3990 295E                           l3982 2936  
                         l3974 28BC                           l3896 2302                           l3888 22A8  
                         l3968 31E0                           l3992 2990                           l3976 28CC  
                         l3898 2310                           l3994 2992                           l3986 294A  
                         l3978 28DA                           l3996 299E                           l3988 2952  
                         l3998 29DA                           STR_1 0E10                           STR_2 0E4C  
                         STR_3 0E3D                           STR_4 0E1C                           STR_5 0E36  
                         STR_6 0E43                           STR_7 0E2F                           STR_8 0E11  
                         STR_9 0E26                           u2100 35E0                           u2101 35DC  
                         u2110 3608                           u2111 3604                           u3000 18E0  
                         u2120 363E                           u2040 3F12                           u3001 18DC  
                         u2121 363A                           u2201 2EC4                           u2041 3F0E  
                         u3010 193E                           u2130 4186                           u2210 2EE6  
                         u2050 3F30                           u3011 193A                           u2211 2EE2  
                         u2051 3F2C                           u3020 197C                           u2140 4196  
                         u2220 2F18                           u2300 356C                           u2060 3F4C  
                         u3100 3696                           u3021 1978                           u2141 4192  
                         u2221 2F14                           u2301 3568                           u2061 3F48  
                         u3101 3692                           u3030 19DA                           u2230 2F36  
                         u2310 3596                           u2070 2C10                           u2150 38AE  
                         u3110 37FA                           u3031 19D6                           u2231 2F32  
                         u2311 3592                           u2071 2C0C                           u2151 38AA  
                         u3111 37F6                           u3040 1A18                           u3120 437C  
                         u2240 2F8C                           u2080 2CDA                           u2160 38D0  
                         u3200 2450                           u2320 43EC                           u2400 42B0  
                 _BAUD4CONbits 000EE9                           u3041 1A14                           u3121 4378  
                         u2137 417C                           u2241 2F88                           u2081 2CD6  
                         u2161 38CC                           u3201 244C                           u2321 43E8  
                         u2401 42A8                           u2090 35CE                           u2250 2FBA  
                         u2170 391A                           u3050 3D98                           u3210 24C6  
                         u3130 2348                           u2330 4402                           u2091 35CA  
                         u2171 3916                           u3051 3D94                           u3211 24C2  
                         u3131 2344                           u2331 43FE                           u2260 2FF4  
                         u2180 3932                           u2340 39CA                           u3060 3E16  
                         u2420 3D06                           u3300 25E0                           u3220 24E8  
                         u3140 235A                           u2500 1AF8                           u2261 2FF0  
                         u2181 392E                           u2341 39C6                           u3061 3E12  
                         u2421 3D02                           u3301 25DC                           u3221 24E4  
                         u3141 2356                           u2501 1AF4                           u2430 447E  
                         u2270 3508                           u2350 3D86                           u2190 3A60  
                         u3070 3F7C                           u3310 25F4                           u3230 2512  
                         u3150 236A                           u2510 1B34                           u2431 447A  
                         u2271 3504                           u2351 3D82                           u2191 3A5C  
                         u3071 3F78                           u3311 25F0                           u3231 250E  
                         u3151 2366                           u2511 1B30                           u2280 353E  
                         u2360 2D84                           u3080 3316                           u3320 260E  
                         u3240 2536                           u3160 23AE                           u3400 1F92  
                         u2600 1C4E                           u2520 1B42                           u2440 1A5C  
                         u2257 2FB0                           u2281 353A                           u2361 2D80  
                         u3081 3312                           u3321 260A                           u3241 2532  
                         u3161 23AA                           u3401 1F8E                           u2601 1C4A  
                         u2521 1B3E                           u2441 1A58                           u2290 355A  
                         u2370 2DC8                           u3090 3404                           u3330 2656  
                         u3250 254C                           u3170 23C0                           u3410 1FA2  
                         u2610 1C80                           u2530 1BB0                           u2450 1A6E  
                         u2418 42B2                           _T2PR 000FBC                           u2291 3556  
                         u2371 2DC4                           u3091 3400                           u3331 2652  
                         u3251 2548                           u3171 23BC                           u3411 1F9E  
                         u2611 1C7C                           u2531 1BAC                           u2451 1A6A  
                         u4107 2898                           u2380 2DFE                           u3340 2686  
                         u3260 256A                           u3180 23D0                           u3500 2246  
                         u3420 1FD8                           u2700 1DC8                           u2620 1C8E  
                         u2540 1BC8                           u2460 1A7E                           u2381 2DFA  
                         u3341 2682                           u3261 2566                           u3181 23CC  
                         u3501 2242                           u3421 1FD4                           u2701 1DC4  
                         u2621 1C8A                           u2541 1BC2                           u2461 1A7A  
                         u4117 42DC                           u2390 2E22                           u3350 26B4  
                         u3270 258A                           u3190 2410                           u3510 2260  
                         u3430 1FE8                           u2710 1DD8                           u2630 1CAC  
                         u2550 1BCA                           u2470 1AC0                           u2391 2E1E  
                         u4207 39A4                           u4127 3348                           u3351 26B0  
                         u3271 2586                           u3191 240C                           u3511 225C  
                         u3431 1FE4                           u2711 1DD4                           u2631 1CA8  
                         u2471 1ABC                           u3280 259C                           u3520 22A8  
                         u3440 2162                           u3360 1F1E                           u2800 1EC0  
                         u2720 1DEA                           u2640 1CE4                           u2560 1BF2  
                         u2480 1AD6                           u3600 3174                           u4217 3B9A  
                         u4137 33E0                           u3281 2598                           u3521 22A4  
                         u3361 1F1A                           u2801 1EBC                           u2721 1DE6  
                         u2641 1CE0                           u2561 1BEE                           u2481 1AD2  
                         u3601 3170                           u3290 25CA                           u3530 22D6  
                         u3450 21BC                           u3370 1F30                           u2810 1ED2  
                         u2730 1E00                           u2650 1D2A                           u2570 1C10  
                         u2490 1AE8                           u3610 3188                           u4307 435E  
                         u4227 3BC6                           u4147 3436                           u3291 25C6  
                         u3531 22D2                           u3451 21B8                           u3371 1F2C  
                         u2811 1ECE                           u2731 1DFC                           u2651 1D26  
                         u2571 1C0C                           u2491 1AE4                           u3611 3184  
                         u4067 2758                           u2900 15D8                           u3540 2310  
                         u3460 21DC                           u3380 1F40                           u2820 1EEE  
                         u2740 1E16                           u2660 1D60                           u2580 1C30  
                         u3620 31B0                           u3700 29F4                           u2901 15D4  
                         u4237 3BF0                           u4157 34BA                           u3541 230C  
                         u3461 21D8                           u3445 2158                           u3381 1F3C  
                         u2821 1EEA                           u2741 1E12                           u2661 1D5C  
                         u2581 1C2C                           u3621 31AC                           u3701 29F0  
                         u4077 2784                           u2830 3230                           u2910 1632  
                         u3550 376E                           u3470 21EE                           u3390 1F80  
                         u2750 1E2A                           u2670 1D70                           u2590 1C3E  
                         u3630 31D0                           u3710 2A04                           u2831 322C  
                         u2911 162E                           u4247 3A3A                           u4167 3CE2  
                         u3551 376A                           u3471 21EA                           u3391 1F7C  
                         u2751 1E26                           u2671 1D6C                           u2591 1C3A  
                         u3631 31CC                           u3711 2A00                           u4087 27FE  
                         u2840 326E                           u2920 1670                           u3560 37AC  
                         u3480 221C                           u2760 1E44                           u2680 1D9C  
                         u3640 31E0                           u3720 2A12                           u3800 0F94  
                         u2841 326A                           u2921 166C                           u4257 3C20  
                         u4177 3B12                           u3561 37A8                           u3481 2218  
                         u2761 1E40                           u2681 1D98                           u3641 31DC  
                         u3721 2A0E                           u3801 0F90                           u4097 283C  
                         u2850 328C                           u2930 16CE                           u3570 37E0  
                         u3490 2232                           u2770 1E7E                           u2690 1DAC  
                         u3730 2A4C                           u3650 28CC                           u3810 1002  
                         u2851 3288                           u2931 16CA                           u4267 3C4C  
                         u4187 3B3E                           u3571 37DC                           u3491 222E  
                         u2771 1E7A                           u2691 1DA8                           u3731 2A48  
                         u3651 28C8                           u3811 0FFE                           u2860 32AC  
                         u2940 170C                           u3900 2AFA                           u2780 1E90  
                         u3580 3112                           u3740 2A5A                           u3660 28DA  
                         u3820 104C                           u2861 32A8                           u2941 1708  
                         u4277 3C78                           u4197 3B68                           u3901 2AF6  
                         u2781 1E8C                           u3581 310E                           u3741 2A56  
                         u3661 28D6                           u3821 1048                           u3750 4390  
                         u2870 32FC                           u2950 176A                           u3910 2B32  
                         u2790 1EA0                           u3590 3146                           u3670 2936  
                         u3830 10E6                           u3751 438C                           u2871 32F8  
                         u2951 1766                           u4287 38F8                           u3911 2B2E  
                         u2791 1E9C                           u3671 2932                           u3831 10E2  
                         u3760 43AA                           u2960 17A8                           u2880 4236  
                         u3920 2B6A                           u3680 298C                           u3840 112C  
                         u3761 43A6                           u2961 17A4                           u2881 4232  
                         u4297 3D62                           u3921 2B66                           u3681 2988  
                         u3841 1128                           u2970 1806                           u2890 159A  
                         u3930 2BA2                           u3690 29D6                           u3850 1260  
                         u3770 0E98                           u2971 1802                           u2891 1596  
                         u3931 2B9E                           u3595 313C                           u3691 29D2  
                         u3851 125C                           u3771 0E94                           u2980 1844  
                         u3940 2BDA                           u3860 12AA                           u3780 0EDE  
                         u2981 1840                           u3941 2BD6                           u3861 12A6  
                         u3781 0EDA                           u2990 18A2                           u3870 1506  
                         u3790 0F4E                           u3950 274E                           u2991 189E  
                         u3871 1502                           u3791 0F4A                           u3951 274A  
                         u3880 2A8C                           u3960 27E8                           u3881 2A88  
                         u3961 27E4                           u3890 2AC2                           u3970 2832  
                         u3891 2ABE                           u3971 282E            reverseHalfSquare@mL 001B  
          reverseHalfSquare@mR 001D                           _dbuf 0150                           _main 26C8  
                         _prec 00DC                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           fsr2l 000FD9  
                         _stoa 2EBA                           _stop 3890                     _ClickLEDOn 437E  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
              ___fldiv@new_exp 0043        __end_of_Yellow_rev1_R90 33F4         __end_of_color_read_Red 4064  
                 ___param_bank 000000                __end_of_Red_R90 3E06                     _Hue2Colour 1554  
              __end_of_Right45 3B7A               __end_of_LED_init 4492                  ___fltol@sign1 0009  
              __end_of___fladd 1F02                          ?_main 0001                __end_of___fldiv 26C8  
                        STR_10 0E01                          STR_11 0E48                          STR_13 0E48  
              __end_of___flmul 232E                __end_of___flsub 4286                __end_of___fltol 3202  
                        ?_stoa 000A                 _LightBlue_L135 37EA                          ?_stop 0014  
              __end_of___lwdiv 3F6C                   vfpfcnvrt@fmt 0022                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 4484     __end_of_I2C_2_Master_Start 44BC  
   __end_of_I2C_2_Master_Write 449E                          _flags 00E0                          _fputc 35BC  
            fullSpeedReverse@i 0019                          _width 00DA                          _putch 44D6  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        stoa@i 0018                          stoa@l 001C                          stoa@p 001E  
                        stoa@s 000C                          stoa@w 0016                          status 000FD8  
              __end_of_sprintf 41F2                __end_of_strncmp 35BC           __end_of_Color2String 4346  
      __end_of_color_read_Blue 4154          _I2C_2_Master_RepStart 449E                ?_color_read_Red 0005  
              __initialization 3E84                   __end_of_main 28BA                   __end_of_stoa 2FF6  
                 __end_of_stop 3936                ??_rotate180left 0024         __end_of_LightBlue_L135 3890  
                       ??_main 005D                         ??_stoa 000E                         ??_stop 0018  
                __activetblptr 000002                      ??_RGB2Hue 0059                  ??_Orange_R135 0025  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
              _colour_read_all 2FF6                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88       __end_of_color_click_init 4308                         _RX4PPS 000E15  
                       _TX4REG 000EE4                    ?_ClickLEDOn 0001               __end_of___xxtofl 2A6E  
                    ??_Red_R90 0025                         _Left45 3B7A                      ??_Right45 001E  
             _fullSpeedReverse 3D08               ?_Yellow_rev1_R90 0021                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0030                         ___flge 3202                         ___fleq 3740  
                    ??___fladd 0022                    ?_Hue2Colour 000D                         ___wmul 4404  
                    ??___fldiv 003A                  Orange_R135@mL 0021                      ??___flmul 0053  
                Orange_R135@mR 0023                      ??___flsub 0032                      ??___fltol 0005  
                    ??___lwdiv 000B                     _TimerReset 44BC                         _colorf 0170  
              ?_LightBlue_L135 0021                         clear_0 3EDC                         clear_1 3EE8  
           fullSpeedReverse@mL 0014             fullSpeedReverse@mR 0016                         _motorL 00EA  
                       _motorR 00E1                         isa$std 000001                         _strlen 4154  
                       fputc@c 0001                   __pdataCOMRAM 005F                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         stoa@cp 001A                         stoa@fp 000A  
                       putch@c 0001               __end_of_vfprintf 4240                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0038  
                    ??_strncmp 0007               __end_of_turnLeft 3A62                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 0016                   ___xxtofl@exp 0015  
                 ___xxtofl@val 000C                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
          __end_of_Orange_R135 3740                     __accesstop 0060        __end_of__initialization 3EEE  
     __end_of_color_read_Clear 4104                fullSpeedAhead@i 0019              __end_of_Blue_T180 3FC2  
     __end_of_color_read_Green 40B4         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                    ?_LED_init 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 44C6                   __pidataBANK1 44CE  
                __end_of_fputc 3686              __end_of_Green_L90 3E84                  __end_of_putch 44D8  
                    RGB2Hue@cf 0057                    _ForwardFlag 005F        __end_of_colour_read_all 30FC  
                      ??_fputc 0005                        ??_putch 0001                     __pbssBANK0 00DA  
                   __pbssBANK1 0100                     ??_LED_init 0001                        ?_Left45 001A  
            _color_writetoaddr 444C                   _T2CLKCONbits 000FBF          __end_of_Colour2Action 2BF4  
                      ?___flge 0001                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001                    ?_TimerReset 0001            ??_color_writetoaddr 0004  
                      ?_strlen 0001                   _Color2String 4308                        _RGB2Hue 0E52  
                    ?___xxtofl 000C                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                  _Orange_R135 3686                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 446C  
                      _Red_R90 3D88             _I2C_2_Master_Start 44B2                     _initUSART4 442A  
           _I2C_2_Master_Write 4492                        _Right45 3AF2                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 1A42                        ___fldiv 232E                        ___flmul 1F02  
                      ___flsub 4240                        ___fltol 30FC            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 3EF8            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002A  
                 __psmallconst 0E00                        __pcinit 3E84                        __ramtop 0E00  
                    ?_turnLeft 0014                        __ptext0 26C8                        __ptext1 442A  
                      __ptext2 3A62                        __ptext3 2FF6                        __ptext4 4014  
                      __ptext5 4064                        __ptext6 40B4                        __ptext7 4104  
                      __ptext8 449E                        __ptext9 4286                        _maxTime 00DE  
                    _T2CONbits 000FBD               ?_colour_read_all 001A                     ??___xxtofl 0010  
               Color2String@cf 0047       __end_of_fullSpeedReverse 3D88                      _T2HLTbits 000FBE  
                      _sprintf 41A4           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
                      _strncmp 34DE           end_of_initialization 3EEE                        fputc@fp 0003  
                _Pink_rev1_L90 33F4                  __Lmediumconst 0000                   ??_ClickLEDOn 0001  
            ?_color_click_init 0001                 __45drightdelay 00F7             ??_color_click_init 0005  
             ??_LightBlue_L135 0025              __end_of_vfpfcnvrt 2EBA              _reverseHalfSquare 3C02  
                      postdec1 000FE5                        postdec2 000FDD                   ??_Hue2Colour 000F  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0030             ?_reverseHalfSquare 001B                        strlen@a 0003  
                      strlen@s 0001          __end_of_rotate180left 4014                _initDCmotorsPWM 3A62  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 39CC                    ___fladd@grs 0029            ??_reverseHalfSquare 001F  
           __end_of_ClickLEDOn 43B2                  ___xxtofl@sign 0014                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
                    Red_R90@mL 0021                      Red_R90@mR 0023        ??_I2C_2_Master_RepStart 0002  
               _movementMemory 0128             __end_of_Hue2Colour 1A42                 ?_Pink_rev1_L90 0021  
                  ___flmul@grs 0061                    _CCP1CONbits 000FAB              ?_color_read_Clear 0005  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
              Colour2Action@cf 0028      __end_of_reverseHalfSquare 3C88             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                      _Blue_T180 3F6C                 __end_of_Left45 3C02  
                 _RGB2Hue$2982 006D                 __end_of___flge 3306                 __end_of___fleq 37EA  
               _fullSpeedAhead 3C88                    vfpfcnvrt@ap 0024                    vfpfcnvrt@fp 0020  
               __end_of___wmul 442A                  __pidataCOMRAM 44D8                      _Green_L90 3E06  
                    Right45@mL 001A                      Right45@mR 001C                 __end_of_strlen 41A4  
                   RGB2Hue@max 0071                     RGB2Hue@min 0073            color_read_Clear@tmp 000A  
          start_initialization 3E84                    __halfsquare 00F3                       ??_Left45 001E  
          color_read_Green@tmp 000A                     ?_Blue_T180 0024        __end_of_initDCmotorsPWM 3AF2  
                  vfprintf@fmt 002C         __end_of_fullSpeedAhead 3D08                       ??___flge 0009  
                     ??___fleq 0009                       ??___wmul 0005                   ??_TimerReset 0001  
                  __pdataBANK0 00F3                    __pdataBANK1 0186                       ??_strlen 0003  
                    ___fladd@a 001E                      ___fladd@b 001A                ClickLEDOn@power 0001  
                   ?_Green_L90 0021                      ___fldiv@a 0036                      ___fldiv@b 0032  
                     ?_RGB2Hue 0057                      ___flmul@a 004F                      ___flmul@b 004B  
                    ___flsub@a 002E                      ___flsub@b 002A                  __pcstackBANK0 0060  
                 ?_Orange_R135 0021                ??_Pink_rev1_L90 0025             __end_of_TimerReset 44C6  
                     ?_Red_R90 0021         Color2String@colourname 0049                       ?_Right45 001A  
             ___lwdiv@dividend 0007                ?_fullSpeedAhead 0014                       ?___fladd 001A  
                     ?___fldiv 0032                       ?___flmul 004B                       ?___flsub 002A  
                     ?___fltol 0001                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                Pink_rev1_L90@mL 0021                Pink_rev1_L90@mR 0023  
                  __smallconst 0E00              _I2C_2_Master_Idle 43DC              _I2C_2_Master_Init 43B2  
            _I2C_2_Master_Read 4286                  __45dleftdelay 00F9              _I2C_2_Master_Stop 44A8  
            ?_fullSpeedReverse 0014              ??_Yellow_rev1_R90 0025             ?_I2C_2_Master_Idle 0001  
              rotate180left@mL 0020                rotate180left@mR 0022             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0032  
           ??_fullSpeedReverse 0018                       ?_strncmp 0001           Hue2Colour@colourname 000F  
            colour_read_all@cf 001A                   Hue2Colour@cf 000D              _sendStringSerial4 4346  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 000F7B                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                     _LED_init 4484             ?_sendStringSerial4 0002                    turnRight@mL 0014  
                  turnRight@mR 0016                    ??_Blue_T180 0028                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001                       Left45@mL 001A                       Left45@mR 001C  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 2D60      __end_of_I2C_2_Master_Idle 4404  
    __end_of_I2C_2_Master_Init 43DC      __end_of_I2C_2_Master_Read 42C8              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 44B2                    ??_Green_L90 0025                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                      _turnRight 3936  
                     __1square 00F5                      copy_data0 3E98                      copy_data1 3EB8  
    __end_of_sendStringSerial4 437E  __end_of_I2C_2_Master_RepStart 44A8             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 2D60                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 002E                       __Lrparam 0000                     vfprintf@fp 002A  
                _Colour2Action 2A6E                     ?_vfpfcnvrt 0020                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     sprintf@fmt 0034                    Blue_T180@mL 0024  
                  Blue_T180@mR 0026                       ___xxtofl 28BA                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                ___lwdiv@divisor 0009             __end_of_initUSART4 444C  
              ___lwdiv@counter 000D                     ?_turnRight 0014                       __ptext10 42C8  
                     __ptext11 444C                       __ptext20 4240                       __ptext12 4492  
                     __ptext21 1A42                       __ptext13 44A8                       __ptext30 3C88  
                     __ptext22 1F02                       __ptext14 44B2                       __ptext31 3686  
                     __ptext23 3740                       __ptext15 43DC                       __ptext40 3C02  
                     __ptext32 37EA                       __ptext24 232E                       __ptext16 43B2  
                     __ptext41 3890                       __ptext33 3E06                       __ptext25 4484  
                     __ptext17 0E52                       __ptext50 2D60                       __ptext42 3D08  
                     __ptext34 3AF2                       __ptext26 2A6E                       __ptext18 28BA  
                     __ptext51 34DE                       __ptext43 2BF4                       __ptext35 3936  
                     __ptext27 3306                       __ptext19 30FC                       __ptext60 437E  
                     __ptext52 2EBA                       __ptext44 4404                       __ptext36 3F6C  
                     __ptext28 3D88                       __ptext53 4154                       __ptext45 3EF8  
                     __ptext37 3FC2                       __ptext29 33F4                       __ptext54 35BC  
                     __ptext46 44BC                       __ptext38 3B7A                       __ptext55 44D6  
                     __ptext47 4308                       __ptext39 39CC                       __ptext56 4346  
                     __ptext48 41A4                       __ptext57 446C                       __ptext49 41F2  
                     __ptext58 1554                       __ptext59 3202                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
              Color2String@buf 0045               colour_read_all@B 0024               colour_read_all@C 0028  
             colour_read_all@G 0020               colour_read_all@R 001C                     turnRight@i 0018  
             LightBlue_L135@mL 0021               LightBlue_L135@mR 0023                      stoa@F1144 0186  
               ?_Colour2Action 0028                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 41F2                       main@data 0075              Yellow_rev1_R90@mL 0021  
            Yellow_rev1_R90@mR 0023                       main@wall 00D9                       _turnLeft 39CC  
                ?_Color2String 0045                 _vfpfcnvrt$2693 0028                    _setMotorPWM 2BF4  
                    sprintf@ap 0038               ??_fullSpeedAhead 0018                      turnLeft@i 0018  
                    strncmp@_l 0001                      strncmp@_r 0003              ??_colour_read_all 001C  
              _Yellow_rev1_R90 3306                    ??_vfpfcnvrt 0026                       stoa@nuls 000F  
             _color_click_init 42C8                  _rotate180left 3FC2                 ??_Color2String 0049  
                     sprintf@f 003A                       sprintf@s 0032                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                    _timerMemory 0100                       strncmp@l 0008  
                     strncmp@n 0005                       strncmp@r 000A                    ??_turnRight 0018  
                ___fladd@signs 0026                     _TX4STAbits 000EE8          __end_of_Pink_rev1_L90 34DE  
              _sendCharSerial4 446C                   ___fladd@aexp 0027                   ___fladd@bexp 0028  
              ??_Colour2Action 002A  
