

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 21:01:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 06/04/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataBANK0
   113   004618                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for __recogniseColour
   117   004618  0096               	dw	150
   118                           
   119                           ;initializer for __halfsquare
   120   00461A  012C               	dw	300
   121                           
   122                           ;initializer for __1square
   123   00461C  02BC               	dw	700
   124                           
   125                           ;initializer for __45drightdelay
   126   00461E  008C               	dw	140
   127                           
   128                           ;initializer for __45dleftdelay
   129   004620  0090               	dw	144
   130                           
   131                           ;initializer for _ForwardFlag
   132   004622  01                 	db	1
   133   000000                     _LATEbits	set	3965
   134   000000                     _TRISEbits	set	3973
   135   000000                     _LATHbits	set	3968
   136   000000                     _TX4REG	set	3812
   137   000000                     _RC4STAbits	set	3815
   138   000000                     _SP4BRGH	set	3814
   139   000000                     _TRISAbits	set	3969
   140   000000                     _TRISGbits	set	3975
   141   000000                     _SSP2CON2bits	set	3802
   142   000000                     _RX4PPS	set	3605
   143   000000                     _SSP2CLKPPS	set	3612
   144   000000                     _SSP2DATPPS	set	3613
   145   000000                     _ANSELDbits	set	3751
   146   000000                     _SSP2ADD	set	3798
   147   000000                     _SSP2CON1bits	set	3801
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATGbits	set	3967
   150   000000                     _TRISHbits	set	3976
   151   000000                     _PORTFbits	set	3982
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _LATCbits	set	3963
   155   000000                     _LATDbits	set	3964
   156   000000                     _LATFbits	set	3966
   157   000000                     _TRISCbits	set	3971
   158   000000                     _TRISDbits	set	3972
   159   000000                     _TRISFbits	set	3974
   160   000000                     _RC4REG	set	3811
   161   000000                     _SP4BRGL	set	3813
   162   000000                     _TX4STAbits	set	3816
   163   000000                     _BAUD4CONbits	set	3817
   164   000000                     _SSP2CON2	set	3802
   165   000000                     _CCPR4H	set	3873
   166   000000                     _CCPR3H	set	3877
   167   000000                     _SSP2STAT	set	3800
   168   000000                     _ANSELFbits	set	3764
   169   000000                     _SSP2BUF	set	3797
   170   000000                     _PIE0bits	set	3625
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RC0PPS	set	3682
   173   000000                     _RD5PPS	set	3695
   174   000000                     _RE2PPS	set	3700
   175   000000                     _RD6PPS	set	3696
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _T2PR	set	4028
   179   000000                     _T2CONbits	set	4029
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _RC7PPS	set	3689
   184   000000                     _RE4PPS	set	3702
   185   000000                     _RG6PPS	set	3720
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _T0CON0bits	set	4053
   189   000000                     _T0CON1bits	set	4054
   190   000000                     _T2CLKCONbits	set	4031
   191   000000                     _T2HLTbits	set	4030
   192   000000                     _INTCONbits	set	4082
   193   000000                     _PIE4bits	set	3629
   194   000000                     _PIR0bits	set	3635
   195                           
   196                           	psect	smallconst
   197   000E00                     __psmallconst:
   198                           	callstack 0
   199   000E00  00                 	db	0
   200   000E01                     STR_10:
   201                           
   202                           ; BSR set to: 14
   203   000E01  20                 	db	32
   204   000E02  52                 	db	82	;'R'
   205   000E03  65                 	db	101	;'e'
   206   000E04  64                 	db	100	;'d'
   207   000E05  20                 	db	32
   208   000E06  25                 	db	37
   209   000E07  66                 	db	102	;'f'
   210   000E08  20                 	db	32
   211   000E09  47                 	db	71	;'G'
   212   000E0A  72                 	db	114	;'r'
   213   000E0B  65                 	db	101	;'e'
   214   000E0C  65                 	db	101	;'e'
   215   000E0D  6E                 	db	110	;'n'
   216   000E0E  2C                 	db	44
   217   000E0F  25                 	db	37
   218   000E10  66                 	db	102	;'f'
   219   000E11  20                 	db	32
   220   000E12  42                 	db	66	;'B'
   221   000E13  6C                 	db	108	;'l'
   222   000E14  75                 	db	117	;'u'
   223   000E15  65                 	db	101	;'e'
   224   000E16  2C                 	db	44
   225   000E17  25                 	db	37
   226   000E18  66                 	db	102	;'f'
   227   000E19  20                 	db	32
   228   000E1A  63                 	db	99	;'c'
   229   000E1B  6C                 	db	108	;'l'
   230   000E1C  65                 	db	101	;'e'
   231   000E1D  61                 	db	97	;'a'
   232   000E1E  72                 	db	114	;'r'
   233   000E1F  20                 	db	32
   234   000E20  25                 	db	37
   235   000E21  66                 	db	102	;'f'
   236   000E22  20                 	db	32
   237   000E23  48                 	db	72	;'H'
   238   000E24  75                 	db	117	;'u'
   239   000E25  65                 	db	101	;'e'
   240   000E26  20                 	db	32
   241   000E27  25                 	db	37
   242   000E28  66                 	db	102	;'f'
   243   000E29  20                 	db	32
   244   000E2A  0D                 	db	13
   245   000E2B  00                 	db	0
   246   000E2C                     STR_6:
   247                           
   248                           ; BSR set to: 14
   249   000E2C  4C                 	db	76	;'L'
   250   000E2D  69                 	db	105	;'i'
   251   000E2E  67                 	db	103	;'g'
   252   000E2F  68                 	db	104	;'h'
   253   000E30  74                 	db	116	;'t'
   254   000E31  20                 	db	32
   255   000E32  42                 	db	66	;'B'
   256   000E33  6C                 	db	108	;'l'
   257   000E34  75                 	db	117	;'u'
   258   000E35  65                 	db	101	;'e'
   259   000E36  00                 	db	0
   260   000E37                     STR_4:
   261                           
   262                           ; BSR set to: 14
   263   000E37  44                 	db	68	;'D'
   264   000E38  61                 	db	97	;'a'
   265   000E39  72                 	db	114	;'r'
   266   000E3A  6B                 	db	107	;'k'
   267   000E3B  20                 	db	32
   268   000E3C  42                 	db	66	;'B'
   269   000E3D  6C                 	db	108	;'l'
   270   000E3E  75                 	db	117	;'u'
   271   000E3F  65                 	db	101	;'e'
   272   000E40  00                 	db	0
   273   000E41                     STR_5:
   274                           
   275                           ; BSR set to: 14
   276   000E41  4F                 	db	79	;'O'
   277   000E42  72                 	db	114	;'r'
   278   000E43  61                 	db	97	;'a'
   279   000E44  6E                 	db	110	;'n'
   280   000E45  67                 	db	103	;'g'
   281   000E46  65                 	db	101	;'e'
   282   000E47  00                 	db	0
   283   000E48                     STR_8:
   284                           
   285                           ; BSR set to: 14
   286   000E48  59                 	db	89	;'Y'
   287   000E49  65                 	db	101	;'e'
   288   000E4A  6C                 	db	108	;'l'
   289   000E4B  6C                 	db	108	;'l'
   290   000E4C  6F                 	db	111	;'o'
   291   000E4D  77                 	db	119	;'w'
   292   000E4E  00                 	db	0
   293   000E4F                     STR_9:
   294                           
   295                           ; BSR set to: 14
   296   000E4F  57                 	db	87	;'W'
   297   000E50  68                 	db	104	;'h'
   298   000E51  69                 	db	105	;'i'
   299   000E52  74                 	db	116	;'t'
   300   000E53  65                 	db	101	;'e'
   301   000E54  00                 	db	0
   302   000E55                     STR_7:
   303                           
   304                           ; BSR set to: 14
   305   000E55  47                 	db	71	;'G'
   306   000E56  72                 	db	114	;'r'
   307   000E57  65                 	db	101	;'e'
   308   000E58  65                 	db	101	;'e'
   309   000E59  6E                 	db	110	;'n'
   310   000E5A  00                 	db	0
   311   000E5B                     STR_3:
   312                           
   313                           ; BSR set to: 14
   314   000E5B  50                 	db	80	;'P'
   315   000E5C  69                 	db	105	;'i'
   316   000E5D  6E                 	db	110	;'n'
   317   000E5E  6B                 	db	107	;'k'
   318   000E5F  00                 	db	0
   319   000E60                     STR_2:
   320                           
   321                           ; BSR set to: 14
   322   000E60  52                 	db	82	;'R'
   323   000E61  65                 	db	101	;'e'
   324   000E62  64                 	db	100	;'d'
   325   000E63  00                 	db	0
   326   000E64  00                 	db	0	; dummy byte at the end
   327   000000                     
   328                           ; #config settings
   329                           
   330                           	psect	cinit
   331   00439E                     __pcinit:
   332                           	callstack 0
   333   00439E                     start_initialization:
   334                           	callstack 0
   335   00439E                     __initialization:
   336                           	callstack 0
   337                           
   338                           ; Initialize objects allocated to BANK0 (11 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340   00439E  0E18               	movlw	low __pidataBANK0
   341   0043A0  6EF6               	movwf	tblptrl,c
   342   0043A2  0E46               	movlw	high __pidataBANK0
   343   0043A4  6EF7               	movwf	tblptrh,c
   344   0043A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345   0043A8  6EF8               	movwf	tblptru,c
   346   0043AA  EE00  F0EE         	lfsr	0,__pdataBANK0
   347   0043AE  EE10 F00B          	lfsr	1,11
   348   0043B2                     copy_data0:
   349   0043B2  0009               	tblrd		*+
   350   0043B4  CFF5 FFEE          	movff	tablat,postinc0
   351   0043B8  50E5               	movf	postdec1,w,c
   352   0043BA  50E1               	movf	fsr1l,w,c
   353   0043BC  E1FA               	bnz	copy_data0
   354                           
   355                           ; Clear objects allocated to BANK1 (80 bytes)
   356   0043BE  EE01  F000         	lfsr	0,__pbssBANK1
   357   0043C2  0E50               	movlw	80
   358   0043C4                     clear_0:
   359   0043C4  6AEE               	clrf	postinc0,c
   360   0043C6  06E8               	decf	wreg,f,c
   361   0043C8  E1FD               	bnz	clear_0
   362                           
   363                           ; Clear objects allocated to BANK0 (98 bytes)
   364   0043CA  EE00  F060         	lfsr	0,__pbssBANK0
   365   0043CE  0E62               	movlw	98
   366   0043D0                     clear_1:
   367   0043D0  6AEE               	clrf	postinc0,c
   368   0043D2  06E8               	decf	wreg,f,c
   369   0043D4  E1FD               	bnz	clear_1
   370   0043D6                     end_of_initialization:
   371                           	callstack 0
   372   0043D6                     __end_of__initialization:
   373                           	callstack 0
   374   0043D6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375   0043D8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376   0043DA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   377   0043DC  6EF8               	movwf	tblptru,c
   378   0043DE  0E0E               	movlw	high __Lsmallconst
   379   0043E0  6EF7               	movwf	tblptrh,c
   380   0043E2  0100               	movlb	0
   381   0043E4  EFF8  F016         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssBANK0
   384   000060                     __pbssBANK0:
   385                           	callstack 0
   386   000060                     _retracingDone:
   387                           	callstack 0
   388   000060                     	ds	2
   389   000062                     _movementCount:
   390                           	callstack 0
   391   000062                     	ds	2
   392   000064                     _maxTime:
   393                           	callstack 0
   394   000064                     	ds	2
   395   000066                     _movementMemory:
   396                           	callstack 0
   397   000066                     	ds	40
   398   00008E                     _colorf:
   399                           	callstack 0
   400   00008E                     	ds	22
   401   0000A4                     _colorrel:
   402                           	callstack 0
   403   0000A4                     	ds	12
   404   0000B0                     _motorR:
   405                           	callstack 0
   406   0000B0                     	ds	9
   407   0000B9                     _motorL:
   408                           	callstack 0
   409   0000B9                     	ds	9
   410                           
   411                           	psect	dataBANK0
   412   0000EE                     __pdataBANK0:
   413                           	callstack 0
   414   0000EE                     __recogniseColour:
   415                           	callstack 0
   416   0000EE                     	ds	2
   417   0000F0                     __halfsquare:
   418                           	callstack 0
   419   0000F0                     	ds	2
   420   0000F2                     __1square:
   421                           	callstack 0
   422   0000F2                     	ds	2
   423   0000F4                     __45drightdelay:
   424                           	callstack 0
   425   0000F4                     	ds	2
   426   0000F6                     __45dleftdelay:
   427                           	callstack 0
   428   0000F6                     	ds	2
   429   0000F8                     _ForwardFlag:
   430                           	callstack 0
   431   0000F8                     	ds	1
   432                           
   433                           	psect	bssBANK1
   434   000100                     __pbssBANK1:
   435                           	callstack 0
   436   000100                     _timerMemory:
   437                           	callstack 0
   438   000100                     	ds	80
   439                           
   440                           	psect	cstackBANK0
   441   0000C2                     __pcstackBANK0:
   442                           	callstack 0
   443   0000C2                     White@mL:
   444                           	callstack 0
   445   0000C2                     ___fldiv@rem:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x0
   449   0000C2                     	ds	2
   450   0000C4                     White@mR:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454   0000C4                     	ds	2
   455   0000C6                     ___fldiv@sign:
   456                           	callstack 0
   457   0000C6                     White@movementCount:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x4
   461   0000C6                     	ds	1
   462   0000C7                     ___fldiv@new_exp:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466   0000C7                     	ds	1
   467   0000C8                     White@movementMemory:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x6
   471   0000C8                     	ds	1
   472   0000C9                     ___fldiv@grs:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x7
   476   0000C9                     	ds	1
   477   0000CA                     White@timerMemory:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x8
   481   0000CA                     	ds	2
   482   0000CC                     White@tempTimer:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0xA
   486   0000CC                     	ds	1
   487   0000CD                     ___fldiv@bexp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xB
   491   0000CD                     	ds	1
   492   0000CE                     ___fldiv@aexp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0xC
   496   0000CE                     	ds	1
   497   0000CF                     colour_read_all@cf:
   498                           	callstack 0
   499   0000CF                     RGB2Hue@cf:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xD
   503   0000CF                     	ds	1
   504   0000D0                     White@i:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508   0000D0                     	ds	1
   509   0000D1                     ??_RGB2Hue:
   510   0000D1                     colour_read_all@rel:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xF
   514   0000D1                     	ds	2
   515   0000D3                     colour_read_all@C:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x11
   519   0000D3                     	ds	2
   520   0000D5                     _RGB2Hue$3104:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x13
   524   0000D5                     	ds	2
   525   0000D7                     _colour_read_all$3103:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x15
   529   0000D7                     	ds	2
   530   0000D9                     RGB2Hue@max:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x17
   534   0000D9                     	ds	2
   535   0000DB                     RGB2Hue@min:
   536                           	callstack 0
   537   0000DB                     colour_read_all@R:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x19
   541   0000DB                     	ds	4
   542   0000DF                     colour_read_all@G:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x1D
   546   0000DF                     	ds	4
   547   0000E3                     colour_read_all@B:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x21
   551   0000E3                     	ds	4
   552   0000E7                     colour_read_all@total:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x25
   556   0000E7                     	ds	4
   557   0000EB                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x29
   560   0000EB                     	ds	2
   561   0000ED                     main@wall:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x2B
   565   0000ED                     	ds	1
   566                           
   567                           	psect	cstackCOMRAM
   568   000001                     __pcstackCOMRAM:
   569                           	callstack 0
   570   000001                     ??_I2C_2_Master_Idle:
   571   000001                     ?___wmul:
   572                           	callstack 0
   573   000001                     ?___fltol:
   574                           	callstack 0
   575   000001                     ClickLEDOn@power:
   576                           	callstack 0
   577   000001                     initDCmotorsPWM@PWMperiod:
   578                           	callstack 0
   579   000001                     memoryUpdateMovement@cf:
   580                           	callstack 0
   581   000001                     ___wmul@multiplier:
   582                           	callstack 0
   583   000001                     ___fleq@ff1:
   584                           	callstack 0
   585   000001                     ___fltol@f1:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x0
   589   000001                     	ds	1
   590   000002                     ??_I2C_2_Master_Read:
   591   000002                     I2C_2_Master_Write@data_byte:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x1
   595   000002                     	ds	1
   596   000003                     color_writetoaddr@value:
   597                           	callstack 0
   598   000003                     I2C_2_Master_Read@ack:
   599                           	callstack 0
   600   000003                     memoryUpdateMovement@movementCount:
   601                           	callstack 0
   602   000003                     ___wmul@multiplicand:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x2
   606   000003                     	ds	1
   607   000004                     color_writetoaddr@address:
   608                           	callstack 0
   609   000004                     I2C_2_Master_Read@tmp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x3
   613   000004                     	ds	1
   614   000005                     ??_color_click_init:
   615   000005                     ??___fltol:
   616   000005                     ?_color_read_Red:
   617                           	callstack 0
   618   000005                     ?_color_read_Green:
   619                           	callstack 0
   620   000005                     ?_color_read_Blue:
   621                           	callstack 0
   622   000005                     ?_color_read_Clear:
   623                           	callstack 0
   624   000005                     memoryUpdateMovement@movementMemory:
   625                           	callstack 0
   626   000005                     ___wmul@product:
   627                           	callstack 0
   628   000005                     ___fleq@ff2:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   000005                     	ds	2
   633   000007                     ??_color_read_Red:
   634   000007                     ??_color_read_Green:
   635   000007                     ??_color_read_Blue:
   636   000007                     ??_color_read_Clear:
   637   000007                     ?___lwdiv:
   638                           	callstack 0
   639   000007                     memoryUpdateMovement@colourcode:
   640                           	callstack 0
   641   000007                     ___lwdiv@dividend:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x6
   645   000007                     	ds	2
   646   000009                     ??___fleq:
   647   000009                     ___fltol@sign1:
   648                           	callstack 0
   649   000009                     ___lwdiv@divisor:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653   000009                     	ds	1
   654   00000A                     ___fltol@exp1:
   655                           	callstack 0
   656   00000A                     color_read_Red@tmp:
   657                           	callstack 0
   658   00000A                     color_read_Green@tmp:
   659                           	callstack 0
   660   00000A                     color_read_Blue@tmp:
   661                           	callstack 0
   662   00000A                     color_read_Clear@tmp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x9
   666   00000A                     	ds	1
   667   00000B                     ___lwdiv@quotient:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0xA
   671   00000B                     	ds	1
   672   00000C                     ?___xxtofl:
   673                           	callstack 0
   674   00000C                     ___xxtofl@val:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0xB
   678   00000C                     	ds	1
   679   00000D                     ___lwdiv@counter:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0xC
   683   00000D                     	ds	1
   684   00000E                     setMotorPWM@m:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0xD
   688   00000E                     	ds	2
   689   000010                     ??_setMotorPWM:
   690   000010                     ??___xxtofl:
   691                           
   692                           ; 1 bytes @ 0xF
   693   000010                     	ds	2
   694   000012                     setMotorPWM@posDuty:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x11
   698   000012                     	ds	1
   699   000013                     setMotorPWM@negDuty:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x12
   703   000013                     	ds	1
   704   000014                     ___xxtofl@sign:
   705                           	callstack 0
   706   000014                     stop@mL:
   707                           	callstack 0
   708   000014                     turnLeft@mL:
   709                           	callstack 0
   710   000014                     turnRight@mL:
   711                           	callstack 0
   712   000014                     fullSpeedAhead@mL:
   713                           	callstack 0
   714   000014                     fullSpeedReverse@mL:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x13
   718   000014                     	ds	1
   719   000015                     ___xxtofl@exp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x14
   723   000015                     	ds	1
   724   000016                     stop@mR:
   725                           	callstack 0
   726   000016                     turnLeft@mR:
   727                           	callstack 0
   728   000016                     turnRight@mR:
   729                           	callstack 0
   730   000016                     fullSpeedAhead@mR:
   731                           	callstack 0
   732   000016                     fullSpeedReverse@mR:
   733                           	callstack 0
   734   000016                     ___xxtofl@arg:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x15
   738   000016                     	ds	2
   739   000018                     ??_fullSpeedAhead:
   740   000018                     ??_stop:
   741   000018                     ??_fullSpeedReverse:
   742   000018                     turnLeft@i:
   743                           	callstack 0
   744   000018                     turnRight@i:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x17
   748   000018                     	ds	1
   749   000019                     fullSpeedAhead@i:
   750                           	callstack 0
   751   000019                     fullSpeedReverse@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x18
   755   000019                     	ds	1
   756   00001A                     ?___flmul:
   757                           	callstack 0
   758   00001A                     Left45@mL:
   759                           	callstack 0
   760   00001A                     Right45@mL:
   761                           	callstack 0
   762   00001A                     ___flmul@b:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x19
   766   00001A                     	ds	1
   767   00001B                     RAMback@mL:
   768                           	callstack 0
   769   00001B                     reverseHalfSquare@mL:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x1A
   773   00001B                     	ds	1
   774   00001C                     Left45@mR:
   775                           	callstack 0
   776   00001C                     Right45@mR:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1B
   780   00001C                     	ds	1
   781   00001D                     RAMback@mR:
   782                           	callstack 0
   783   00001D                     reverseHalfSquare@mR:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1C
   787   00001D                     	ds	1
   788   00001E                     ??_Left45:
   789   00001E                     ??_Right45:
   790   00001E                     ___flmul@a:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x1D
   794   00001E                     	ds	1
   795   00001F                     ??_RAMback:
   796   00001F                     ??_reverseHalfSquare:
   797                           
   798                           ; 1 bytes @ 0x1E
   799   00001F                     	ds	1
   800   000020                     rotate180left@mL:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x1F
   804   000020                     	ds	1
   805   000021                     Red_R90@mL:
   806                           	callstack 0
   807   000021                     Green_L90@mL:
   808                           	callstack 0
   809   000021                     Yellow_rev1_R90@mL:
   810                           	callstack 0
   811   000021                     Pink_rev1_L90@mL:
   812                           	callstack 0
   813   000021                     Orange_R135@mL:
   814                           	callstack 0
   815   000021                     LightBlue_L135@mL:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x20
   819   000021                     	ds	1
   820   000022                     ??___flmul:
   821   000022                     rotate180left@mR:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x21
   825   000022                     	ds	1
   826   000023                     Red_R90@mR:
   827                           	callstack 0
   828   000023                     Green_L90@mR:
   829                           	callstack 0
   830   000023                     Yellow_rev1_R90@mR:
   831                           	callstack 0
   832   000023                     Pink_rev1_L90@mR:
   833                           	callstack 0
   834   000023                     Orange_R135@mR:
   835                           	callstack 0
   836   000023                     LightBlue_L135@mR:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x22
   840   000023                     	ds	1
   841   000024                     Blue_T180@mL:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x23
   845   000024                     	ds	1
   846   000025                     ??_Yellow_rev1_R90:
   847   000025                     ??_Pink_rev1_L90:
   848   000025                     
   849                           ; 1 bytes @ 0x24
   850   000025                     	ds	1
   851   000026                     ___flmul@sign:
   852                           	callstack 0
   853   000026                     Blue_T180@mR:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x25
   857   000026                     	ds	1
   858   000027                     ___flmul@grs:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x26
   862   000027                     	ds	1
   863   000028                     
   864                           ; 1 bytes @ 0x27
   865   000028                     	ds	3
   866   00002B                     ___flmul@aexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x2A
   870   00002B                     	ds	1
   871   00002C                     ___flmul@bexp:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x2B
   875   00002C                     	ds	1
   876   00002D                     ___flmul@prod:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x2C
   880   00002D                     	ds	4
   881   000031                     ___flmul@temp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x30
   885   000031                     	ds	2
   886   000033                     ?_getTimerValue:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x32
   890   000033                     	ds	4
   891   000037                     ??_getTimerValue:
   892                           
   893                           ; 1 bytes @ 0x36
   894   000037                     	ds	2
   895   000039                     getTimerValue@timerCount:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x38
   899   000039                     	ds	2
   900   00003B                     ?___fladd:
   901                           	callstack 0
   902   00003B                     ___fladd@b:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3A
   906   00003B                     	ds	4
   907   00003F                     ___fladd@a:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x3E
   911   00003F                     	ds	4
   912   000043                     ??___fladd:
   913                           
   914                           ; 1 bytes @ 0x42
   915   000043                     	ds	4
   916   000047                     ___fladd@signs:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x46
   920   000047                     	ds	1
   921   000048                     ___fladd@aexp:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x47
   925   000048                     	ds	1
   926   000049                     ___fladd@bexp:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x48
   930   000049                     	ds	1
   931   00004A                     ___fladd@grs:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x49
   935   00004A                     	ds	1
   936   00004B                     ?___flsub:
   937                           	callstack 0
   938   00004B                     memoryUpdateTime@movementCount:
   939                           	callstack 0
   940   00004B                     ___flge@ff1:
   941                           	callstack 0
   942   00004B                     ___flsub@b:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x4A
   946   00004B                     	ds	2
   947   00004D                     memoryUpdateTime@timerMemory:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x4C
   951   00004D                     	ds	2
   952   00004F                     memoryUpdateTime@timerVal:
   953                           	callstack 0
   954   00004F                     ___flge@ff2:
   955                           	callstack 0
   956   00004F                     ___flsub@a:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x4E
   960   00004F                     	ds	4
   961   000053                     ??___flge:
   962   000053                     ?___fldiv:
   963                           	callstack 0
   964   000053                     ___fldiv@b:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x52
   968   000053                     	ds	4
   969   000057                     ??_White:
   970   000057                     ?_Hue2Colour:
   971                           	callstack 0
   972   000057                     Hue2Colour@cf:
   973                           	callstack 0
   974   000057                     ___fldiv@a:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x56
   978   000057                     	ds	2
   979   000059                     Hue2Colour@rel:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x58
   983   000059                     	ds	2
   984   00005B                     ??___fldiv:
   985   00005B                     Hue2Colour@colourname:
   986                           	callstack 0
   987   00005B                     Colour2Action@cf:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x5A
   991   00005B                     	ds	2
   992   00005D                     
   993                           ; 1 bytes @ 0x5C
   994   00005D                     	ds	2
   995   00005F                     
   996                           ; 1 bytes @ 0x5E
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 19 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  data          100    0        unsigned char [100]
  1007 ;;  buf            20    0        unsigned char [20]
  1008 ;;  PWMcycle        2    0        unsigned int 
  1009 ;;  wall            1   43[BANK0 ] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1022 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels required when called: 9
  1025 ;; This function calls:
  1026 ;;		_ClickLEDOn
  1027 ;;		_Colour2Action
  1028 ;;		_Hue2Colour
  1029 ;;		_I2C_2_Master_Init
  1030 ;;		_Interrupts_init
  1031 ;;		_LED_init
  1032 ;;		_RGB2Hue
  1033 ;;		_Timer0_init
  1034 ;;		_TimerReset
  1035 ;;		___flge
  1036 ;;		_color_click_init
  1037 ;;		_colour_read_all
  1038 ;;		_fullSpeedAhead
  1039 ;;		_initDCmotorsPWM
  1040 ;;		_initUSART4
  1041 ;;		_memoryUpdateMovement
  1042 ;;		_memoryUpdateTime
  1043 ;;		_stop
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text0
  1050   002DF0                     __ptext0:
  1051                           	callstack 0
  1052   002DF0                     _main:
  1053                           	callstack 22
  1054   002DF0                     
  1055                           ;main.c: 20:     char data[100];;main.c: 22:     initUSART4();
  1056   002DF0  ECD8  F022         	call	_initUSART4	;wreg free
  1057   002DF4                     
  1058                           ;main.c: 23:     color_click_init();
  1059   002DF4  EC38  F022         	call	_color_click_init	;wreg free
  1060   002DF8                     
  1061                           ;main.c: 24:     I2C_2_Master_Init();
  1062   002DF8  EC8A  F022         	call	_I2C_2_Master_Init	;wreg free
  1063   002DFC                     
  1064                           ;main.c: 25:     LED_init();
  1065   002DFC  ECF9  F022         	call	_LED_init	;wreg free
  1066   002E00                     
  1067                           ;main.c: 26:     Interrupts_init();
  1068   002E00  EC06  F023         	call	_Interrupts_init	;wreg free
  1069   002E04                     
  1070                           ;main.c: 27:     Timer0_init();
  1071   002E04  ECC6  F022         	call	_Timer0_init	;wreg free
  1072   002E08                     
  1073                           ;main.c: 29:     initDCmotorsPWM(PWMcycle);
  1074   002E08  0E00               	movlw	0
  1075   002E0A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1076   002E0C  0E63               	movlw	99
  1077   002E0E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1078   002E10  ECF9  F01D         	call	_initDCmotorsPWM	;wreg free
  1079   002E14                     
  1080                           ;main.c: 31:     motorL.power=0;
  1081   002E14  0E00               	movlw	0
  1082   002E16  0100               	movlb	0	; () banked
  1083   002E18  6FB9               	movwf	_motorL& (0+255),b
  1084   002E1A                     
  1085                           ; BSR set to: 0
  1086                           ;main.c: 32:     motorL.direction=1;
  1087   002E1A  0E01               	movlw	1
  1088   002E1C  6FBA               	movwf	(_motorL+1)& (0+255),b
  1089   002E1E                     
  1090                           ; BSR set to: 0
  1091                           ;main.c: 33:     motorL.brakemode=1;
  1092   002E1E  0E01               	movlw	1
  1093   002E20  6FBB               	movwf	(_motorL+2)& (0+255),b
  1094   002E22                     
  1095                           ; BSR set to: 0
  1096                           ;main.c: 34:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1097   002E22  0EAA               	movlw	170
  1098   002E24  6FBE               	movwf	(_motorL+5)& (0+255),b
  1099   002E26  0E0F               	movlw	15
  1100   002E28  6FBF               	movwf	(_motorL+6)& (0+255),b
  1101   002E2A                     
  1102                           ; BSR set to: 0
  1103                           ;main.c: 35:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1104   002E2A  0EA6               	movlw	166
  1105   002E2C  6FC0               	movwf	(_motorL+7)& (0+255),b
  1106   002E2E  0E0F               	movlw	15
  1107   002E30  6FC1               	movwf	(_motorL+8)& (0+255),b
  1108   002E32                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 36:     motorL.PWMperiod=PWMcycle;
  1111   002E32  0E00               	movlw	0
  1112   002E34  6FBD               	movwf	(_motorL+4)& (0+255),b
  1113   002E36  0E63               	movlw	99
  1114   002E38  6FBC               	movwf	(_motorL+3)& (0+255),b
  1115   002E3A                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 38:     motorR.power=0;
  1118   002E3A  0E00               	movlw	0
  1119   002E3C  6FB0               	movwf	_motorR& (0+255),b
  1120   002E3E                     
  1121                           ; BSR set to: 0
  1122                           ;main.c: 39:     motorR.direction=1;
  1123   002E3E  0E01               	movlw	1
  1124   002E40  6FB1               	movwf	(_motorR+1)& (0+255),b
  1125   002E42                     
  1126                           ; BSR set to: 0
  1127                           ;main.c: 40:     motorR.brakemode=1;
  1128   002E42  0E01               	movlw	1
  1129   002E44  6FB2               	movwf	(_motorR+2)& (0+255),b
  1130   002E46                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 41:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1133   002E46  0E25               	movlw	37
  1134   002E48  6FB5               	movwf	(_motorR+5)& (0+255),b
  1135   002E4A  0E0F               	movlw	15
  1136   002E4C  6FB6               	movwf	(_motorR+6)& (0+255),b
  1137   002E4E                     
  1138                           ; BSR set to: 0
  1139                           ;main.c: 42:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1140   002E4E  0E21               	movlw	33
  1141   002E50  6FB7               	movwf	(_motorR+7)& (0+255),b
  1142   002E52  0E0F               	movlw	15
  1143   002E54  6FB8               	movwf	(_motorR+8)& (0+255),b
  1144   002E56                     
  1145                           ; BSR set to: 0
  1146                           ;main.c: 43:     motorR.PWMperiod=PWMcycle;
  1147   002E56  0E00               	movlw	0
  1148   002E58  6FB4               	movwf	(_motorR+4)& (0+255),b
  1149   002E5A  0E63               	movlw	99
  1150   002E5C  6FB3               	movwf	(_motorR+3)& (0+255),b
  1151   002E5E                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 45:     TRISFbits.TRISF2=1;
  1154   002E5E  8486               	bsf	134,2,c	;volatile
  1155   002E60                     
  1156                           ; BSR set to: 0
  1157                           ;main.c: 46:     ANSELFbits.ANSELF2=0;
  1158   002E60  010E               	movlb	14	; () banked
  1159   002E62  95B4               	bcf	180,2,b	;volatile
  1160   002E64                     l296:
  1161                           
  1162                           ;main.c: 47:     while(PORTFbits.RF2){
  1163   002E64  B48E               	btfsc	142,2,c	;volatile
  1164   002E66  EF37  F017         	goto	u3711
  1165   002E6A  EF39  F017         	goto	u3710
  1166   002E6E                     u3711:
  1167   002E6E  EF32  F017         	goto	l296
  1168   002E72                     u3710:
  1169   002E72                     
  1170                           ;main.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1171   002E72  0E29               	movlw	41
  1172   002E74  0100               	movlb	0	; () banked
  1173   002E76  6FEC               	movwf	(??_main+1)& (0+255),b
  1174   002E78  0E96               	movlw	150
  1175   002E7A  6FEB               	movwf	??_main& (0+255),b
  1176   002E7C  0E7F               	movlw	127
  1177   002E7E                     u3787:
  1178   002E7E  2EE8               	decfsz	wreg,f,c
  1179   002E80  D7FE               	bra	u3787
  1180   002E82  2FEB               	decfsz	??_main& (0+255),f,b
  1181   002E84  D7FC               	bra	u3787
  1182   002E86  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1183   002E88  D7FA               	bra	u3787
  1184   002E8A                     
  1185                           ;main.c: 50:     TimerReset();
  1186   002E8A  EC21  F023         	call	_TimerReset	;wreg free
  1187   002E8E                     
  1188                           ;main.c: 51:     char wall=0;
  1189   002E8E  0E00               	movlw	0
  1190   002E90  0100               	movlb	0	; () banked
  1191   002E92  6FED               	movwf	main@wall& (0+255),b
  1192   002E94                     
  1193                           ; BSR set to: 0
  1194                           ;main.c: 53:     ClickLEDOn(1);
  1195   002E94  0E01               	movlw	1
  1196   002E96  EC58  F022         	call	_ClickLEDOn
  1197                           
  1198                           ;main.c: 55:     char buf[20];;main.c: 56:     while (!retracingDone){
  1199   002E9A  EFF4  F017         	goto	l4178
  1200   002E9E                     l4140:
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;main.c: 57:         fullSpeedAhead(&motorL,&motorR);
  1204   002E9E  0EB9               	movlw	low _motorL
  1205   002EA0  6E14               	movwf	fullSpeedAhead@mL^0,c
  1206   002EA2  0E00               	movlw	high _motorL
  1207   002EA4  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1208   002EA6  0EB0               	movlw	low _motorR
  1209   002EA8  6E16               	movwf	fullSpeedAhead@mR^0,c
  1210   002EAA  0E00               	movlw	high _motorR
  1211   002EAC  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1212   002EAE  EC0D  F01F         	call	_fullSpeedAhead	;wreg free
  1213                           
  1214                           ;main.c: 59:         while (!wall){
  1215   002EB2  EFA1  F017         	goto	l4154
  1216   002EB6                     l4142:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;main.c: 60:             colour_read_all(&colorf,&colorrel);
  1220   002EB6  0E8E               	movlw	low _colorf
  1221   002EB8  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1222   002EBA  0E00               	movlw	high _colorf
  1223   002EBC  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1224   002EBE  0EA4               	movlw	low _colorrel
  1225   002EC0  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1226   002EC2  0E00               	movlw	high _colorrel
  1227   002EC4  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1228   002EC6  ECE0  F015         	call	_colour_read_all	;wreg free
  1229   002ECA                     
  1230                           ;main.c: 63:             if (colorf.Cf>300)
  1231   002ECA  0E00               	movlw	0
  1232   002ECC  6E4B               	movwf	___flge@ff1^0,c
  1233   002ECE  0E00               	movlw	0
  1234   002ED0  6E4C               	movwf	(___flge@ff1+1)^0,c
  1235   002ED2  0E96               	movlw	150
  1236   002ED4  6E4D               	movwf	(___flge@ff1+2)^0,c
  1237   002ED6  0E43               	movlw	67
  1238   002ED8  6E4E               	movwf	(___flge@ff1+3)^0,c
  1239   002EDA  C09A  F04F         	movff	_colorf+12,___flge@ff2
  1240   002EDE  C09B  F050         	movff	_colorf+13,___flge@ff2+1
  1241   002EE2  C09C  F051         	movff	_colorf+14,___flge@ff2+2
  1242   002EE6  C09D  F052         	movff	_colorf+15,___flge@ff2+3
  1243   002EEA  ECED  F01A         	call	___flge	;wreg free
  1244   002EEE  B0D8               	btfsc	status,0,c
  1245   002EF0  EF7C  F017         	goto	u3721
  1246   002EF4  EF7E  F017         	goto	u3720
  1247   002EF8                     u3721:
  1248   002EF8  EFA1  F017         	goto	l4154
  1249   002EFC                     u3720:
  1250   002EFC                     
  1251                           ;main.c: 64:             {;main.c: 71:             memoryUpdateTime(movementCount,timerM
      +                          emory);
  1252   002EFC  C062  F04B         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1253   002F00  C063  F04C         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1254   002F04  0E00               	movlw	low _timerMemory
  1255   002F06  6E4D               	movwf	memoryUpdateTime@timerMemory^0,c
  1256   002F08  0E01               	movlw	high _timerMemory
  1257   002F0A  6E4E               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1258   002F0C  EC7A  F020         	call	_memoryUpdateTime	;wreg free
  1259   002F10                     
  1260                           ;main.c: 73:             wall=1;
  1261   002F10  0E01               	movlw	1
  1262   002F12  0100               	movlb	0	; () banked
  1263   002F14  6FED               	movwf	main@wall& (0+255),b
  1264   002F16                     
  1265                           ; BSR set to: 0
  1266                           ;main.c: 74:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1267   002F16  0E29               	movlw	41
  1268   002F18  0100               	movlb	0	; () banked
  1269   002F1A  6FEC               	movwf	(??_main+1)& (0+255),b
  1270   002F1C  0E96               	movlw	150
  1271   002F1E  6FEB               	movwf	??_main& (0+255),b
  1272   002F20  0E7F               	movlw	127
  1273   002F22                     u3797:
  1274   002F22  2EE8               	decfsz	wreg,f,c
  1275   002F24  D7FE               	bra	u3797
  1276   002F26  2FEB               	decfsz	??_main& (0+255),f,b
  1277   002F28  D7FC               	bra	u3797
  1278   002F2A  2FEC               	decfsz	(??_main+1)& (0+255),f,b
  1279   002F2C  D7FA               	bra	u3797
  1280   002F2E                     
  1281                           ;main.c: 75:             stop(&motorL,&motorR);
  1282   002F2E  0EB9               	movlw	low _motorL
  1283   002F30  6E14               	movwf	stop@mL^0,c
  1284   002F32  0E00               	movlw	high _motorL
  1285   002F34  6E15               	movwf	(stop@mL+1)^0,c
  1286   002F36  0EB0               	movlw	low _motorR
  1287   002F38  6E16               	movwf	stop@mR^0,c
  1288   002F3A  0E00               	movlw	high _motorR
  1289   002F3C  6E17               	movwf	(stop@mR+1)^0,c
  1290   002F3E  EC6C  F01C         	call	_stop	;wreg free
  1291   002F42                     l4154:
  1292                           
  1293                           ;main.c: 59:         while (!wall){
  1294   002F42  0100               	movlb	0	; () banked
  1295   002F44  51ED               	movf	main@wall& (0+255),w,b
  1296   002F46  B4D8               	btfsc	status,2,c
  1297   002F48  EFA8  F017         	goto	u3731
  1298   002F4C  EFAA  F017         	goto	u3730
  1299   002F50                     u3731:
  1300   002F50  EF5B  F017         	goto	l4142
  1301   002F54                     u3730:
  1302   002F54                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 78:         colour_read_all(&colorf,&colorrel);
  1305   002F54  0E8E               	movlw	low _colorf
  1306   002F56  6FCF               	movwf	colour_read_all@cf& (0+255),b
  1307   002F58  0E00               	movlw	high _colorf
  1308   002F5A  6FD0               	movwf	(colour_read_all@cf+1)& (0+255),b
  1309   002F5C  0EA4               	movlw	low _colorrel
  1310   002F5E  6FD1               	movwf	colour_read_all@rel& (0+255),b
  1311   002F60  0E00               	movlw	high _colorrel
  1312   002F62  6FD2               	movwf	(colour_read_all@rel+1)& (0+255),b
  1313   002F64  ECE0  F015         	call	_colour_read_all	;wreg free
  1314   002F68                     
  1315                           ;main.c: 79:         wall=0;
  1316   002F68  0E00               	movlw	0
  1317   002F6A  0100               	movlb	0	; () banked
  1318   002F6C  6FED               	movwf	main@wall& (0+255),b
  1319   002F6E                     
  1320                           ; BSR set to: 0
  1321                           ;main.c: 80:         RGB2Hue(&colorf);
  1322   002F6E  0E8E               	movlw	low _colorf
  1323   002F70  6FCF               	movwf	RGB2Hue@cf& (0+255),b
  1324   002F72  0E00               	movlw	high _colorf
  1325   002F74  6FD0               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1326   002F76  EC33  F007         	call	_RGB2Hue	;wreg free
  1327   002F7A                     
  1328                           ;main.c: 81:         Hue2Colour(&colorf,&colorrel);
  1329   002F7A  0E8E               	movlw	low _colorf
  1330   002F7C  6E57               	movwf	Hue2Colour@cf^0,c
  1331   002F7E  0E00               	movlw	high _colorf
  1332   002F80  6E58               	movwf	(Hue2Colour@cf+1)^0,c
  1333   002F82  0EA4               	movlw	low _colorrel
  1334   002F84  6E59               	movwf	Hue2Colour@rel^0,c
  1335   002F86  0E00               	movlw	high _colorrel
  1336   002F88  6E5A               	movwf	(Hue2Colour@rel+1)^0,c
  1337   002F8A  ECC9  F00A         	call	_Hue2Colour	;wreg free
  1338   002F8E                     
  1339                           ;main.c: 82:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1340   002F8E  0E8E               	movlw	low _colorf
  1341   002F90  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1342   002F92  0E00               	movlw	high _colorf
  1343   002F94  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1344   002F96  C062  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1345   002F9A  C063  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1346   002F9E  0E66               	movlw	low _movementMemory
  1347   002FA0  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1348   002FA2  0E00               	movlw	high _movementMemory
  1349   002FA4  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1350   002FA6  EC72  F022         	call	_memoryUpdateMovement	;wreg free
  1351   002FAA                     
  1352                           ;main.c: 83:         Colour2Action(&colorf);
  1353   002FAA  0E8E               	movlw	low _colorf
  1354   002FAC  6E5B               	movwf	Colour2Action@cf^0,c
  1355   002FAE  0E00               	movlw	high _colorf
  1356   002FB0  6E5C               	movwf	(Colour2Action@cf+1)^0,c
  1357   002FB2  EC00  F018         	call	_Colour2Action	;wreg free
  1358   002FB6                     
  1359                           ;main.c: 85:         if (colorf.colourindex == 7)
  1360   002FB6  0E07               	movlw	7
  1361   002FB8  0100               	movlb	0	; () banked
  1362   002FBA  19A2               	xorwf	(_colorf+20)& (0+255),w,b
  1363   002FBC  11A3               	iorwf	(_colorf+21)& (0+255),w,b
  1364   002FBE  A4D8               	btfss	status,2,c
  1365   002FC0  EFE4  F017         	goto	u3741
  1366   002FC4  EFE6  F017         	goto	u3740
  1367   002FC8                     u3741:
  1368   002FC8  EFEF  F017         	goto	l4174
  1369   002FCC                     u3740:
  1370   002FCC                     l4172:
  1371                           
  1372                           ; BSR set to: 0
  1373   002FCC  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1374   002FCE  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1375   002FD0  B4D8               	btfsc	status,2,c
  1376   002FD2  EFED  F017         	goto	u3751
  1377   002FD6  EFEF  F017         	goto	u3750
  1378   002FDA                     u3751:
  1379   002FDA  EFE6  F017         	goto	l4172
  1380   002FDE                     u3750:
  1381   002FDE                     l4174:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;main.c: 89:         TimerReset();
  1385   002FDE  EC21  F023         	call	_TimerReset	;wreg free
  1386   002FE2                     
  1387                           ;main.c: 90:         movementCount++;
  1388   002FE2  0100               	movlb	0	; () banked
  1389   002FE4  4B62               	infsnz	_movementCount& (0+255),f,b	;volatile
  1390   002FE6  2B63               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1391   002FE8                     l4178:
  1392                           
  1393                           ;main.c: 56:     while (!retracingDone){
  1394   002FE8  0100               	movlb	0	; () banked
  1395   002FEA  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  1396   002FEC  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1397   002FEE  B4D8               	btfsc	status,2,c
  1398   002FF0  EFFC  F017         	goto	u3761
  1399   002FF4  EFFE  F017         	goto	u3760
  1400   002FF8                     u3761:
  1401   002FF8  EF4F  F017         	goto	l4140
  1402   002FFC                     u3760:
  1403   002FFC                     
  1404                           ; BSR set to: 0
  1405   002FFC  EF16  F000         	goto	start
  1406   003000                     __end_of_main:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _memoryUpdateTime *****************
  1410 ;; Defined at:
  1411 ;;		line 16 in file "memory.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  movementCoun    2   74[COMRAM] volatile unsigned int 
  1414 ;;  timerMemory     2   76[COMRAM] PTR volatile float 
  1415 ;;		 -> timerMemory(80), 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  timerVal        4   78[COMRAM] float 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;Total ram usage:        8 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 3
  1434 ;; This function calls:
  1435 ;;		___fladd
  1436 ;;		_getTimerValue
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text1
  1443   0040F4                     __ptext1:
  1444                           	callstack 0
  1445   0040F4                     _memoryUpdateTime:
  1446                           	callstack 27
  1447   0040F4                     
  1448                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile float
      +                           *timerMemory);memory.c: 17: {;memory.c: 18:     float timerVal = getTimerValue()-_recog
      +                          niseColour;
  1449   0040F4  ECAB  F020         	call	_getTimerValue	;wreg free
  1450   0040F8  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1451   0040FC  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1452   004100  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1453   004104  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1454   004108  0E00               	movlw	0
  1455   00410A  6E3F               	movwf	___fladd@a^0,c
  1456   00410C  0E00               	movlw	0
  1457   00410E  6E40               	movwf	(___fladd@a+1)^0,c
  1458   004110  0E16               	movlw	22
  1459   004112  6E41               	movwf	(___fladd@a+2)^0,c
  1460   004114  0EC3               	movlw	195
  1461   004116  6E42               	movwf	(___fladd@a+3)^0,c
  1462   004118  EC4A  F00D         	call	___fladd	;wreg free
  1463   00411C  C03B  F04F         	movff	?___fladd,memoryUpdateTime@timerVal
  1464   004120  C03C  F050         	movff	?___fladd+1,memoryUpdateTime@timerVal+1
  1465   004124  C03D  F051         	movff	?___fladd+2,memoryUpdateTime@timerVal+2
  1466   004128  C03E  F052         	movff	?___fladd+3,memoryUpdateTime@timerVal+3
  1467   00412C                     
  1468                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1469   00412C  90D8               	bcf	status,0,c
  1470   00412E  344B               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1471   004130  6ED9               	movwf	fsr2l,c
  1472   004132  344C               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1473   004134  6EDA               	movwf	fsr2h,c
  1474   004136  90D8               	bcf	status,0,c
  1475   004138  36D9               	rlcf	fsr2l,f,c
  1476   00413A  36DA               	rlcf	fsr2h,f,c
  1477   00413C  504D               	movf	memoryUpdateTime@timerMemory^0,w,c
  1478   00413E  26D9               	addwf	fsr2l,f,c
  1479   004140  504E               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1480   004142  22DA               	addwfc	fsr2h,f,c
  1481   004144  C04F  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1482   004148  C050  FFDE         	movff	memoryUpdateTime@timerVal+1,postinc2
  1483   00414C  C051  FFDE         	movff	memoryUpdateTime@timerVal+2,postinc2
  1484   004150  C052  FFDE         	movff	memoryUpdateTime@timerVal+3,postinc2
  1485   004154  0012               	return		;funcret
  1486   004156                     __end_of_memoryUpdateTime:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _memoryUpdateMovement *****************
  1490 ;; Defined at:
  1491 ;;		line 10 in file "memory.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  cf              2    0[COMRAM] PTR struct RGBC
  1494 ;;		 -> colorf(22), 
  1495 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1496 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1497 ;;		 -> movementMemory(40), 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  colourcode      2    6[COMRAM] int 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1509 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;Total ram usage:        8 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text2
  1524   0044E4                     __ptext2:
  1525                           	callstack 0
  1526   0044E4                     _memoryUpdateMovement:
  1527                           	callstack 29
  1528   0044E4                     
  1529                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC *cf, volatile unsigned int movement
      +                          Count, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int colo
      +                          urcode = cf->colourindex;
  1530   0044E4  EE20 F014          	lfsr	2,20
  1531   0044E8  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1532   0044EA  26D9               	addwf	fsr2l,f,c
  1533   0044EC  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1534   0044EE  22DA               	addwfc	fsr2h,f,c
  1535   0044F0  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1536   0044F4  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1537                           
  1538                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1539   0044F8  90D8               	bcf	status,0,c
  1540   0044FA  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1541   0044FC  6ED9               	movwf	fsr2l,c
  1542   0044FE  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1543   004500  6EDA               	movwf	fsr2h,c
  1544   004502  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1545   004504  26D9               	addwf	fsr2l,f,c
  1546   004506  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1547   004508  22DA               	addwfc	fsr2h,f,c
  1548   00450A  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1549   00450E  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1550   004512  0012               	return		;funcret
  1551   004514                     __end_of_memoryUpdateMovement:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _initUSART4 *****************
  1555 ;; Defined at:
  1556 ;;		line 7 in file "serial.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text3
  1585   0045B0                     __ptext3:
  1586                           	callstack 0
  1587   0045B0                     _initUSART4:
  1588                           	callstack 29
  1589   0045B0                     
  1590                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1591   0045B0  8883               	bsf	131,4,c	;volatile
  1592                           
  1593                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1594   0045B2  8283               	bsf	131,1,c	;volatile
  1595   0045B4                     
  1596                           ;serial.c: 10:     RC0PPS = 0x12;
  1597   0045B4  0E12               	movlw	18
  1598   0045B6  010E               	movlb	14	; () banked
  1599   0045B8  6F62               	movwf	98,b	;volatile
  1600                           
  1601                           ;serial.c: 11:     RX4PPS = 0x11;
  1602   0045BA  0E11               	movlw	17
  1603   0045BC  6F15               	movwf	21,b	;volatile
  1604   0045BE                     
  1605                           ; BSR set to: 14
  1606                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1607   0045BE  97E9               	bcf	233,3,b	;volatile
  1608   0045C0                     
  1609                           ; BSR set to: 14
  1610                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1611   0045C0  95E8               	bcf	232,2,b	;volatile
  1612                           
  1613                           ;serial.c: 15:     SP4BRGL = 51;
  1614   0045C2  0E33               	movlw	51
  1615   0045C4  6FE5               	movwf	229,b	;volatile
  1616                           
  1617                           ;serial.c: 16:     SP4BRGH = 0;
  1618   0045C6  0E00               	movlw	0
  1619   0045C8  6FE6               	movwf	230,b	;volatile
  1620   0045CA                     
  1621                           ; BSR set to: 14
  1622                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1623   0045CA  89E7               	bsf	231,4,b	;volatile
  1624   0045CC                     
  1625                           ; BSR set to: 14
  1626                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1627   0045CC  8BE8               	bsf	232,5,b	;volatile
  1628   0045CE                     
  1629                           ; BSR set to: 14
  1630                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1631   0045CE  8FE7               	bsf	231,7,b	;volatile
  1632   0045D0                     
  1633                           ; BSR set to: 14
  1634   0045D0  0012               	return		;funcret
  1635   0045D2                     __end_of_initUSART4:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _initDCmotorsPWM *****************
  1639 ;; Defined at:
  1640 ;;		line 11 in file "dc_motor.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;Total ram usage:        2 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text4
  1669   003BF2                     __ptext4:
  1670                           	callstack 0
  1671   003BF2                     _initDCmotorsPWM:
  1672                           	callstack 29
  1673   003BF2                     
  1674                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1675   003BF2  9485               	bcf	133,2,c	;volatile
  1676                           
  1677                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1678   003BF4  9E83               	bcf	131,7,c	;volatile
  1679                           
  1680                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1681   003BF6  9885               	bcf	133,4,c	;volatile
  1682                           
  1683                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1684   003BF8  9C87               	bcf	135,6,c	;volatile
  1685                           
  1686                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1687   003BFA  947D               	bcf	125,2,c	;volatile
  1688                           
  1689                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1690   003BFC  9E7B               	bcf	123,7,c	;volatile
  1691                           
  1692                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1693   003BFE  987D               	bcf	125,4,c	;volatile
  1694                           
  1695                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1696   003C00  9C7F               	bcf	127,6,c	;volatile
  1697   003C02                     
  1698                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1699   003C02  0E05               	movlw	5
  1700   003C04  010E               	movlb	14	; () banked
  1701   003C06  6F74               	movwf	116,b	;volatile
  1702                           
  1703                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1704   003C08  0E06               	movlw	6
  1705   003C0A  6F76               	movwf	118,b	;volatile
  1706                           
  1707                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1708   003C0C  0E07               	movlw	7
  1709   003C0E  6F69               	movwf	105,b	;volatile
  1710                           
  1711                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1712   003C10  0E08               	movlw	8
  1713   003C12  6F88               	movwf	136,b	;volatile
  1714                           
  1715                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1716   003C14  50BD               	movf	189,w,c	;volatile
  1717   003C16  0B8F               	andlw	-113
  1718   003C18  0940               	iorlw	64
  1719   003C1A  6EBD               	movwf	189,c	;volatile
  1720                           
  1721                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1722   003C1C  0EE0               	movlw	-32
  1723   003C1E  16BE               	andwf	190,f,c	;volatile
  1724                           
  1725                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1726   003C20  50BF               	movf	191,w,c	;volatile
  1727   003C22  0BF0               	andlw	-16
  1728   003C24  0901               	iorlw	1
  1729   003C26  6EBF               	movwf	191,c	;volatile
  1730   003C28                     
  1731                           ; BSR set to: 14
  1732                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1733   003C28  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1734   003C2C                     
  1735                           ; BSR set to: 14
  1736                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1737   003C2C  8EBD               	bsf	189,7,c	;volatile
  1738                           
  1739                           ;dc_motor.c: 40:     CCPR1H=0;
  1740   003C2E  0E00               	movlw	0
  1741   003C30  6EAA               	movwf	170,c	;volatile
  1742                           
  1743                           ;dc_motor.c: 41:     CCPR2H=0;
  1744   003C32  0E00               	movlw	0
  1745   003C34  6EA6               	movwf	166,c	;volatile
  1746                           
  1747                           ;dc_motor.c: 42:     CCPR3H=0;
  1748   003C36  0E00               	movlw	0
  1749   003C38  010F               	movlb	15	; () banked
  1750   003C3A  6F25               	movwf	37,b	;volatile
  1751                           
  1752                           ;dc_motor.c: 43:     CCPR4H=0;
  1753   003C3C  0E00               	movlw	0
  1754   003C3E  6F21               	movwf	33,b	;volatile
  1755                           
  1756                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1757   003C40  0EFC               	movlw	-4
  1758   003C42  16AD               	andwf	173,f,c	;volatile
  1759                           
  1760                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1761   003C44  0EF3               	movlw	-13
  1762   003C46  16AD               	andwf	173,f,c	;volatile
  1763                           
  1764                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1765   003C48  0ECF               	movlw	-49
  1766   003C4A  16AD               	andwf	173,f,c	;volatile
  1767                           
  1768                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1769   003C4C  0E3F               	movlw	-193
  1770   003C4E  16AD               	andwf	173,f,c	;volatile
  1771   003C50                     
  1772                           ; BSR set to: 15
  1773                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1774   003C50  88AB               	bsf	171,4,c	;volatile
  1775                           
  1776                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1777   003C52  50AB               	movf	171,w,c	;volatile
  1778   003C54  0BF0               	andlw	-16
  1779   003C56  090C               	iorlw	12
  1780   003C58  6EAB               	movwf	171,c	;volatile
  1781   003C5A                     
  1782                           ; BSR set to: 15
  1783                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1784   003C5A  8EAB               	bsf	171,7,c	;volatile
  1785   003C5C                     
  1786                           ; BSR set to: 15
  1787                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1788   003C5C  88A7               	bsf	167,4,c	;volatile
  1789                           
  1790                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1791   003C5E  50A7               	movf	167,w,c	;volatile
  1792   003C60  0BF0               	andlw	-16
  1793   003C62  090C               	iorlw	12
  1794   003C64  6EA7               	movwf	167,c	;volatile
  1795   003C66                     
  1796                           ; BSR set to: 15
  1797                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1798   003C66  8EA7               	bsf	167,7,c	;volatile
  1799   003C68                     
  1800                           ; BSR set to: 15
  1801                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1802   003C68  8926               	bsf	38,4,b	;volatile
  1803                           
  1804                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1805   003C6A  5126               	movf	38,w,b	;volatile
  1806   003C6C  0BF0               	andlw	-16
  1807   003C6E  090C               	iorlw	12
  1808   003C70  6F26               	movwf	38,b	;volatile
  1809   003C72                     
  1810                           ; BSR set to: 15
  1811                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1812   003C72  8F26               	bsf	38,7,b	;volatile
  1813   003C74                     
  1814                           ; BSR set to: 15
  1815                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1816   003C74  8922               	bsf	34,4,b	;volatile
  1817                           
  1818                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1819   003C76  5122               	movf	34,w,b	;volatile
  1820   003C78  0BF0               	andlw	-16
  1821   003C7A  090C               	iorlw	12
  1822   003C7C  6F22               	movwf	34,b	;volatile
  1823   003C7E                     
  1824                           ; BSR set to: 15
  1825                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1826   003C7E  8F22               	bsf	34,7,b	;volatile
  1827   003C80                     
  1828                           ; BSR set to: 15
  1829   003C80  0012               	return		;funcret
  1830   003C82                     __end_of_initDCmotorsPWM:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _colour_read_all *****************
  1834 ;; Defined at:
  1835 ;;		line 8 in file "colorfunctions.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  1838 ;;		 -> colorf(22), 
  1839 ;;  rel             2   15[BANK0 ] PTR struct RGB_rel
  1840 ;;		 -> colorrel(12), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  total           4   37[BANK0 ] float 
  1843 ;;  B               4   33[BANK0 ] float 
  1844 ;;  G               4   29[BANK0 ] float 
  1845 ;;  R               4   25[BANK0 ] float 
  1846 ;;  C               4   17[BANK0 ] float 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;Total ram usage:       28 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 4
  1863 ;; This function calls:
  1864 ;;		___fladd
  1865 ;;		___fldiv
  1866 ;;		___xxtofl
  1867 ;;		_color_read_Blue
  1868 ;;		_color_read_Clear
  1869 ;;		_color_read_Green
  1870 ;;		_color_read_Red
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text5
  1877   002BC0                     __ptext5:
  1878                           	callstack 0
  1879   002BC0                     _colour_read_all:
  1880                           	callstack 26
  1881   002BC0                     
  1882                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1883   002BC0  EC2F  F021         	call	_color_read_Red	;wreg free
  1884   002BC4  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1885   002BC8  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1886   002BCC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1887   002BCE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1888   002BD0  0E00               	movlw	0
  1889   002BD2  ECDA  F018         	call	___xxtofl
  1890   002BD6  C00C  F0DB         	movff	?___xxtofl,colour_read_all@R
  1891   002BDA  C00D  F0DC         	movff	?___xxtofl+1,colour_read_all@R+1
  1892   002BDE  C00E  F0DD         	movff	?___xxtofl+2,colour_read_all@R+2
  1893   002BE2  C00F  F0DE         	movff	?___xxtofl+3,colour_read_all@R+3
  1894                           
  1895                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1896   002BE6  EC57  F021         	call	_color_read_Green	;wreg free
  1897   002BEA  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1898   002BEE  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1899   002BF2  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1900   002BF4  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1901   002BF6  0E00               	movlw	0
  1902   002BF8  ECDA  F018         	call	___xxtofl
  1903   002BFC  C00C  F0DF         	movff	?___xxtofl,colour_read_all@G
  1904   002C00  C00D  F0E0         	movff	?___xxtofl+1,colour_read_all@G+1
  1905   002C04  C00E  F0E1         	movff	?___xxtofl+2,colour_read_all@G+2
  1906   002C08  C00F  F0E2         	movff	?___xxtofl+3,colour_read_all@G+3
  1907                           
  1908                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1909   002C0C  ECA7  F021         	call	_color_read_Blue	;wreg free
  1910   002C10  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1911   002C14  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1912   002C18  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1913   002C1A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1914   002C1C  0E00               	movlw	0
  1915   002C1E  ECDA  F018         	call	___xxtofl
  1916   002C22  C00C  F0E3         	movff	?___xxtofl,colour_read_all@B
  1917   002C26  C00D  F0E4         	movff	?___xxtofl+1,colour_read_all@B+1
  1918   002C2A  C00E  F0E5         	movff	?___xxtofl+2,colour_read_all@B+2
  1919   002C2E  C00F  F0E6         	movff	?___xxtofl+3,colour_read_all@B+3
  1920                           
  1921                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1922   002C32  EC7F  F021         	call	_color_read_Clear	;wreg free
  1923   002C36  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1924   002C3A  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1925   002C3E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1926   002C40  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1927   002C42  0E00               	movlw	0
  1928   002C44  ECDA  F018         	call	___xxtofl
  1929   002C48  C00C  F0D3         	movff	?___xxtofl,colour_read_all@C
  1930   002C4C  C00D  F0D4         	movff	?___xxtofl+1,colour_read_all@C+1
  1931   002C50  C00E  F0D5         	movff	?___xxtofl+2,colour_read_all@C+2
  1932   002C54  C00F  F0D6         	movff	?___xxtofl+3,colour_read_all@C+3
  1933                           
  1934                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  1935   002C58  C0DF  F03F         	movff	colour_read_all@G,___fladd@a
  1936   002C5C  C0E0  F040         	movff	colour_read_all@G+1,___fladd@a+1
  1937   002C60  C0E1  F041         	movff	colour_read_all@G+2,___fladd@a+2
  1938   002C64  C0E2  F042         	movff	colour_read_all@G+3,___fladd@a+3
  1939   002C68  C0DB  F03B         	movff	colour_read_all@R,___fladd@b
  1940   002C6C  C0DC  F03C         	movff	colour_read_all@R+1,___fladd@b+1
  1941   002C70  C0DD  F03D         	movff	colour_read_all@R+2,___fladd@b+2
  1942   002C74  C0DE  F03E         	movff	colour_read_all@R+3,___fladd@b+3
  1943   002C78  EC4A  F00D         	call	___fladd	;wreg free
  1944   002C7C  C03B  F0D7         	movff	?___fladd,_colour_read_all$3103
  1945   002C80  C03C  F0D8         	movff	?___fladd+1,_colour_read_all$3103+1
  1946   002C84  C03D  F0D9         	movff	?___fladd+2,_colour_read_all$3103+2
  1947   002C88  C03E  F0DA         	movff	?___fladd+3,_colour_read_all$3103+3
  1948                           
  1949                           ;colorfunctions.c: 15:     float total=(R)+(G)+(B);
  1950   002C8C  C0D7  F03B         	movff	_colour_read_all$3103,___fladd@b
  1951   002C90  C0D8  F03C         	movff	_colour_read_all$3103+1,___fladd@b+1
  1952   002C94  C0D9  F03D         	movff	_colour_read_all$3103+2,___fladd@b+2
  1953   002C98  C0DA  F03E         	movff	_colour_read_all$3103+3,___fladd@b+3
  1954   002C9C  C0E3  F03F         	movff	colour_read_all@B,___fladd@a
  1955   002CA0  C0E4  F040         	movff	colour_read_all@B+1,___fladd@a+1
  1956   002CA4  C0E5  F041         	movff	colour_read_all@B+2,___fladd@a+2
  1957   002CA8  C0E6  F042         	movff	colour_read_all@B+3,___fladd@a+3
  1958   002CAC  EC4A  F00D         	call	___fladd	;wreg free
  1959   002CB0  C03B  F0E7         	movff	?___fladd,colour_read_all@total
  1960   002CB4  C03C  F0E8         	movff	?___fladd+1,colour_read_all@total+1
  1961   002CB8  C03D  F0E9         	movff	?___fladd+2,colour_read_all@total+2
  1962   002CBC  C03E  F0EA         	movff	?___fladd+3,colour_read_all@total+3
  1963   002CC0                     
  1964                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1965   002CC0  C0CF  FFD9         	movff	colour_read_all@cf,fsr2l
  1966   002CC4  C0D0  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1967   002CC8  C0DB  FFDE         	movff	colour_read_all@R,postinc2
  1968   002CCC  C0DC  FFDE         	movff	colour_read_all@R+1,postinc2
  1969   002CD0  C0DD  FFDE         	movff	colour_read_all@R+2,postinc2
  1970   002CD4  C0DE  FFDE         	movff	colour_read_all@R+3,postinc2
  1971   002CD8                     
  1972                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  1973   002CD8  0100               	movlb	0	; () banked
  1974   002CDA  EE20 F008          	lfsr	2,8
  1975   002CDE  51CF               	movf	colour_read_all@cf& (0+255),w,b
  1976   002CE0  26D9               	addwf	fsr2l,f,c
  1977   002CE2  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  1978   002CE4  22DA               	addwfc	fsr2h,f,c
  1979   002CE6  C0E3  FFDE         	movff	colour_read_all@B,postinc2
  1980   002CEA  C0E4  FFDE         	movff	colour_read_all@B+1,postinc2
  1981   002CEE  C0E5  FFDE         	movff	colour_read_all@B+2,postinc2
  1982   002CF2  C0E6  FFDE         	movff	colour_read_all@B+3,postinc2
  1983   002CF6                     
  1984                           ; BSR set to: 0
  1985                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  1986   002CF6  EE20 F004          	lfsr	2,4
  1987   002CFA  51CF               	movf	colour_read_all@cf& (0+255),w,b
  1988   002CFC  26D9               	addwf	fsr2l,f,c
  1989   002CFE  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  1990   002D00  22DA               	addwfc	fsr2h,f,c
  1991   002D02  C0DF  FFDE         	movff	colour_read_all@G,postinc2
  1992   002D06  C0E0  FFDE         	movff	colour_read_all@G+1,postinc2
  1993   002D0A  C0E1  FFDE         	movff	colour_read_all@G+2,postinc2
  1994   002D0E  C0E2  FFDE         	movff	colour_read_all@G+3,postinc2
  1995   002D12                     
  1996                           ; BSR set to: 0
  1997                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  1998   002D12  EE20 F00C          	lfsr	2,12
  1999   002D16  51CF               	movf	colour_read_all@cf& (0+255),w,b
  2000   002D18  26D9               	addwf	fsr2l,f,c
  2001   002D1A  51D0               	movf	(colour_read_all@cf+1)& (0+255),w,b
  2002   002D1C  22DA               	addwfc	fsr2h,f,c
  2003   002D1E  C0D3  FFDE         	movff	colour_read_all@C,postinc2
  2004   002D22  C0D4  FFDE         	movff	colour_read_all@C+1,postinc2
  2005   002D26  C0D5  FFDE         	movff	colour_read_all@C+2,postinc2
  2006   002D2A  C0D6  FFDE         	movff	colour_read_all@C+3,postinc2
  2007   002D2E                     
  2008                           ; BSR set to: 0
  2009                           ;colorfunctions.c: 21:     (rel->R)=R/total;
  2010   002D2E  C0DB  F053         	movff	colour_read_all@R,___fldiv@b
  2011   002D32  C0DC  F054         	movff	colour_read_all@R+1,___fldiv@b+1
  2012   002D36  C0DD  F055         	movff	colour_read_all@R+2,___fldiv@b+2
  2013   002D3A  C0DE  F056         	movff	colour_read_all@R+3,___fldiv@b+3
  2014   002D3E  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2015   002D42  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2016   002D46  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2017   002D4A  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2018   002D4E  EC12  F014         	call	___fldiv	;wreg free
  2019   002D52  C0D1  FFD9         	movff	colour_read_all@rel,fsr2l
  2020   002D56  C0D2  FFDA         	movff	colour_read_all@rel+1,fsr2h
  2021   002D5A  C053  FFDE         	movff	?___fldiv,postinc2
  2022   002D5E  C054  FFDE         	movff	?___fldiv+1,postinc2
  2023   002D62  C055  FFDE         	movff	?___fldiv+2,postinc2
  2024   002D66  C056  FFDE         	movff	?___fldiv+3,postinc2
  2025   002D6A                     
  2026                           ;colorfunctions.c: 22:     (rel->B)=B/total;
  2027   002D6A  C0E3  F053         	movff	colour_read_all@B,___fldiv@b
  2028   002D6E  C0E4  F054         	movff	colour_read_all@B+1,___fldiv@b+1
  2029   002D72  C0E5  F055         	movff	colour_read_all@B+2,___fldiv@b+2
  2030   002D76  C0E6  F056         	movff	colour_read_all@B+3,___fldiv@b+3
  2031   002D7A  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2032   002D7E  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2033   002D82  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2034   002D86  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2035   002D8A  EC12  F014         	call	___fldiv	;wreg free
  2036   002D8E  0100               	movlb	0	; () banked
  2037   002D90  EE20 F008          	lfsr	2,8
  2038   002D94  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2039   002D96  26D9               	addwf	fsr2l,f,c
  2040   002D98  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2041   002D9A  22DA               	addwfc	fsr2h,f,c
  2042   002D9C  C053  FFDE         	movff	?___fldiv,postinc2
  2043   002DA0  C054  FFDE         	movff	?___fldiv+1,postinc2
  2044   002DA4  C055  FFDE         	movff	?___fldiv+2,postinc2
  2045   002DA8  C056  FFDE         	movff	?___fldiv+3,postinc2
  2046   002DAC                     
  2047                           ; BSR set to: 0
  2048                           ;colorfunctions.c: 23:     (rel->G)=G/total;
  2049   002DAC  C0DF  F053         	movff	colour_read_all@G,___fldiv@b
  2050   002DB0  C0E0  F054         	movff	colour_read_all@G+1,___fldiv@b+1
  2051   002DB4  C0E1  F055         	movff	colour_read_all@G+2,___fldiv@b+2
  2052   002DB8  C0E2  F056         	movff	colour_read_all@G+3,___fldiv@b+3
  2053   002DBC  C0E7  F057         	movff	colour_read_all@total,___fldiv@a
  2054   002DC0  C0E8  F058         	movff	colour_read_all@total+1,___fldiv@a+1
  2055   002DC4  C0E9  F059         	movff	colour_read_all@total+2,___fldiv@a+2
  2056   002DC8  C0EA  F05A         	movff	colour_read_all@total+3,___fldiv@a+3
  2057   002DCC  EC12  F014         	call	___fldiv	;wreg free
  2058   002DD0  0100               	movlb	0	; () banked
  2059   002DD2  EE20 F004          	lfsr	2,4
  2060   002DD6  51D1               	movf	colour_read_all@rel& (0+255),w,b
  2061   002DD8  26D9               	addwf	fsr2l,f,c
  2062   002DDA  51D2               	movf	(colour_read_all@rel+1)& (0+255),w,b
  2063   002DDC  22DA               	addwfc	fsr2h,f,c
  2064   002DDE  C053  FFDE         	movff	?___fldiv,postinc2
  2065   002DE2  C054  FFDE         	movff	?___fldiv+1,postinc2
  2066   002DE6  C055  FFDE         	movff	?___fldiv+2,postinc2
  2067   002DEA  C056  FFDE         	movff	?___fldiv+3,postinc2
  2068   002DEE                     
  2069                           ; BSR set to: 0
  2070   002DEE  0012               	return		;funcret
  2071   002DF0                     __end_of_colour_read_all:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _color_read_Red *****************
  2075 ;; Defined at:
  2076 ;;		line 38 in file "colorclick.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  tmp             2    9[COMRAM] unsigned int 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  2    4[COMRAM] unsigned int 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;Total ram usage:        7 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 3
  2097 ;; This function calls:
  2098 ;;		_I2C_2_Master_Read
  2099 ;;		_I2C_2_Master_RepStart
  2100 ;;		_I2C_2_Master_Start
  2101 ;;		_I2C_2_Master_Stop
  2102 ;;		_I2C_2_Master_Write
  2103 ;; This function is called by:
  2104 ;;		_colour_read_all
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text6
  2109   00425E                     __ptext6:
  2110                           	callstack 0
  2111   00425E                     _color_read_Red:
  2112                           	callstack 26
  2113   00425E                     
  2114                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2115   00425E  EC1C  F023         	call	_I2C_2_Master_Start	;wreg free
  2116                           
  2117                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2118   004262  0E52               	movlw	82
  2119   004264  EC00  F023         	call	_I2C_2_Master_Write
  2120                           
  2121                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2122   004268  0EB6               	movlw	182
  2123   00426A  EC00  F023         	call	_I2C_2_Master_Write
  2124                           
  2125                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2126   00426E  EC12  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2127                           
  2128                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2129   004272  0E53               	movlw	83
  2130   004274  EC00  F023         	call	_I2C_2_Master_Write
  2131                           
  2132                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2133   004278  0E01               	movlw	1
  2134   00427A  EC17  F022         	call	_I2C_2_Master_Read
  2135   00427E  6E07               	movwf	??_color_read_Red^0,c
  2136   004280  5007               	movf	??_color_read_Red^0,w,c
  2137   004282  6E0A               	movwf	color_read_Red@tmp^0,c
  2138   004284  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2139                           
  2140                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2141   004286  0E00               	movlw	0
  2142   004288  EC17  F022         	call	_I2C_2_Master_Read
  2143   00428C  6E07               	movwf	??_color_read_Red^0,c
  2144   00428E  5007               	movf	??_color_read_Red^0,w,c
  2145   004290  6E09               	movwf	(??_color_read_Red+2)^0,c
  2146   004292  6A08               	clrf	(??_color_read_Red+1)^0,c
  2147   004294  500A               	movf	color_read_Red@tmp^0,w,c
  2148   004296  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2149   004298  6E0A               	movwf	color_read_Red@tmp^0,c
  2150   00429A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2151   00429C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2152   00429E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2153                           
  2154                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2155   0042A0  EC17  F023         	call	_I2C_2_Master_Stop	;wreg free
  2156   0042A4                     
  2157                           ;colorclick.c: 49:  return tmp;
  2158   0042A4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2159   0042A8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2160   0042AC  0012               	return		;funcret
  2161   0042AE                     __end_of_color_read_Red:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _color_read_Green *****************
  2165 ;; Defined at:
  2166 ;;		line 51 in file "colorclick.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  tmp             2    9[COMRAM] unsigned int 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  2    4[COMRAM] unsigned int 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:        7 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 3
  2187 ;; This function calls:
  2188 ;;		_I2C_2_Master_Read
  2189 ;;		_I2C_2_Master_RepStart
  2190 ;;		_I2C_2_Master_Start
  2191 ;;		_I2C_2_Master_Stop
  2192 ;;		_I2C_2_Master_Write
  2193 ;; This function is called by:
  2194 ;;		_colour_read_all
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text7
  2199   0042AE                     __ptext7:
  2200                           	callstack 0
  2201   0042AE                     _color_read_Green:
  2202                           	callstack 26
  2203   0042AE                     
  2204                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2205   0042AE  EC1C  F023         	call	_I2C_2_Master_Start	;wreg free
  2206                           
  2207                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2208   0042B2  0E52               	movlw	82
  2209   0042B4  EC00  F023         	call	_I2C_2_Master_Write
  2210                           
  2211                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2212   0042B8  0EB8               	movlw	184
  2213   0042BA  EC00  F023         	call	_I2C_2_Master_Write
  2214                           
  2215                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2216   0042BE  EC12  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2217                           
  2218                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2219   0042C2  0E53               	movlw	83
  2220   0042C4  EC00  F023         	call	_I2C_2_Master_Write
  2221                           
  2222                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2223   0042C8  0E01               	movlw	1
  2224   0042CA  EC17  F022         	call	_I2C_2_Master_Read
  2225   0042CE  6E07               	movwf	??_color_read_Green^0,c
  2226   0042D0  5007               	movf	??_color_read_Green^0,w,c
  2227   0042D2  6E0A               	movwf	color_read_Green@tmp^0,c
  2228   0042D4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2229                           
  2230                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2231   0042D6  0E00               	movlw	0
  2232   0042D8  EC17  F022         	call	_I2C_2_Master_Read
  2233   0042DC  6E07               	movwf	??_color_read_Green^0,c
  2234   0042DE  5007               	movf	??_color_read_Green^0,w,c
  2235   0042E0  6E09               	movwf	(??_color_read_Green+2)^0,c
  2236   0042E2  6A08               	clrf	(??_color_read_Green+1)^0,c
  2237   0042E4  500A               	movf	color_read_Green@tmp^0,w,c
  2238   0042E6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2239   0042E8  6E0A               	movwf	color_read_Green@tmp^0,c
  2240   0042EA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2241   0042EC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2242   0042EE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2243                           
  2244                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2245   0042F0  EC17  F023         	call	_I2C_2_Master_Stop	;wreg free
  2246   0042F4                     
  2247                           ;colorclick.c: 62:     return tmp;
  2248   0042F4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2249   0042F8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2250   0042FC  0012               	return		;funcret
  2251   0042FE                     __end_of_color_read_Green:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _color_read_Clear *****************
  2255 ;; Defined at:
  2256 ;;		line 80 in file "colorclick.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  tmp             2    9[COMRAM] unsigned int 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    4[COMRAM] unsigned int 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;Total ram usage:        7 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 3
  2277 ;; This function calls:
  2278 ;;		_I2C_2_Master_Read
  2279 ;;		_I2C_2_Master_RepStart
  2280 ;;		_I2C_2_Master_Start
  2281 ;;		_I2C_2_Master_Stop
  2282 ;;		_I2C_2_Master_Write
  2283 ;; This function is called by:
  2284 ;;		_colour_read_all
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text8
  2289   0042FE                     __ptext8:
  2290                           	callstack 0
  2291   0042FE                     _color_read_Clear:
  2292                           	callstack 26
  2293   0042FE                     
  2294                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2295   0042FE  EC1C  F023         	call	_I2C_2_Master_Start	;wreg free
  2296                           
  2297                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2298   004302  0E52               	movlw	82
  2299   004304  EC00  F023         	call	_I2C_2_Master_Write
  2300                           
  2301                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2302   004308  0EB4               	movlw	180
  2303   00430A  EC00  F023         	call	_I2C_2_Master_Write
  2304                           
  2305                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2306   00430E  EC12  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2307                           
  2308                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2309   004312  0E53               	movlw	83
  2310   004314  EC00  F023         	call	_I2C_2_Master_Write
  2311                           
  2312                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2313   004318  0E01               	movlw	1
  2314   00431A  EC17  F022         	call	_I2C_2_Master_Read
  2315   00431E  6E07               	movwf	??_color_read_Clear^0,c
  2316   004320  5007               	movf	??_color_read_Clear^0,w,c
  2317   004322  6E0A               	movwf	color_read_Clear@tmp^0,c
  2318   004324  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2319                           
  2320                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2321   004326  0E00               	movlw	0
  2322   004328  EC17  F022         	call	_I2C_2_Master_Read
  2323   00432C  6E07               	movwf	??_color_read_Clear^0,c
  2324   00432E  5007               	movf	??_color_read_Clear^0,w,c
  2325   004330  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2326   004332  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2327   004334  500A               	movf	color_read_Clear@tmp^0,w,c
  2328   004336  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2329   004338  6E0A               	movwf	color_read_Clear@tmp^0,c
  2330   00433A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2331   00433C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2332   00433E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2333                           
  2334                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2335   004340  EC17  F023         	call	_I2C_2_Master_Stop	;wreg free
  2336   004344                     
  2337                           ;colorclick.c: 91:     return tmp;
  2338   004344  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2339   004348  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2340   00434C  0012               	return		;funcret
  2341   00434E                     __end_of_color_read_Clear:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function _color_read_Blue *****************
  2345 ;; Defined at:
  2346 ;;		line 65 in file "colorclick.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  tmp             2    9[COMRAM] unsigned int 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  2    4[COMRAM] unsigned int 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;Total ram usage:        7 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 3
  2367 ;; This function calls:
  2368 ;;		_I2C_2_Master_Read
  2369 ;;		_I2C_2_Master_RepStart
  2370 ;;		_I2C_2_Master_Start
  2371 ;;		_I2C_2_Master_Stop
  2372 ;;		_I2C_2_Master_Write
  2373 ;; This function is called by:
  2374 ;;		_colour_read_all
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text9
  2379   00434E                     __ptext9:
  2380                           	callstack 0
  2381   00434E                     _color_read_Blue:
  2382                           	callstack 26
  2383   00434E                     
  2384                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2385   00434E  EC1C  F023         	call	_I2C_2_Master_Start	;wreg free
  2386                           
  2387                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2388   004352  0E52               	movlw	82
  2389   004354  EC00  F023         	call	_I2C_2_Master_Write
  2390                           
  2391                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2392   004358  0EBA               	movlw	186
  2393   00435A  EC00  F023         	call	_I2C_2_Master_Write
  2394                           
  2395                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2396   00435E  EC12  F023         	call	_I2C_2_Master_RepStart	;wreg free
  2397                           
  2398                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2399   004362  0E53               	movlw	83
  2400   004364  EC00  F023         	call	_I2C_2_Master_Write
  2401                           
  2402                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2403   004368  0E01               	movlw	1
  2404   00436A  EC17  F022         	call	_I2C_2_Master_Read
  2405   00436E  6E07               	movwf	??_color_read_Blue^0,c
  2406   004370  5007               	movf	??_color_read_Blue^0,w,c
  2407   004372  6E0A               	movwf	color_read_Blue@tmp^0,c
  2408   004374  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2409                           
  2410                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2411   004376  0E00               	movlw	0
  2412   004378  EC17  F022         	call	_I2C_2_Master_Read
  2413   00437C  6E07               	movwf	??_color_read_Blue^0,c
  2414   00437E  5007               	movf	??_color_read_Blue^0,w,c
  2415   004380  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2416   004382  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2417   004384  500A               	movf	color_read_Blue@tmp^0,w,c
  2418   004386  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2419   004388  6E0A               	movwf	color_read_Blue@tmp^0,c
  2420   00438A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2421   00438C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2422   00438E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2423                           
  2424                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2425   004390  EC17  F023         	call	_I2C_2_Master_Stop	;wreg free
  2426   004394                     
  2427                           ;colorclick.c: 76:     return tmp;
  2428   004394  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2429   004398  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2430   00439C  0012               	return		;funcret
  2431   00439E                     __end_of_color_read_Blue:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _I2C_2_Master_RepStart *****************
  2435 ;; Defined at:
  2436 ;;		line 33 in file "i2c.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 2
  2457 ;; This function calls:
  2458 ;;		_I2C_2_Master_Idle
  2459 ;; This function is called by:
  2460 ;;		_color_read_Red
  2461 ;;		_color_read_Green
  2462 ;;		_color_read_Blue
  2463 ;;		_color_read_Clear
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text10
  2468   004624                     __ptext10:
  2469                           	callstack 0
  2470   004624                     _I2C_2_Master_RepStart:
  2471                           	callstack 26
  2472   004624                     
  2473                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2474   004624  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2475   004628                     
  2476                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2477   004628  010E               	movlb	14	; () banked
  2478   00462A  83DA               	bsf	218,1,b	;volatile
  2479   00462C                     
  2480                           ; BSR set to: 14
  2481   00462C  0012               	return		;funcret
  2482   00462E                     __end_of_I2C_2_Master_RepStart:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _I2C_2_Master_Read *****************
  2486 ;; Defined at:
  2487 ;;		line 51 in file "i2c.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  ack             1    wreg     unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  ack             1    2[COMRAM] unsigned char 
  2492 ;;  tmp             1    3[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      unsigned char 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;Total ram usage:        3 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 2
  2509 ;; This function calls:
  2510 ;;		_I2C_2_Master_Idle
  2511 ;; This function is called by:
  2512 ;;		_color_read_Red
  2513 ;;		_color_read_Green
  2514 ;;		_color_read_Blue
  2515 ;;		_color_read_Clear
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text11
  2520   00442E                     __ptext11:
  2521                           	callstack 0
  2522   00442E                     _I2C_2_Master_Read:
  2523                           	callstack 26
  2524                           
  2525                           ; BSR set to: 14
  2526                           ;incstack = 0
  2527                           ;I2C_2_Master_Read@ack stored from wreg
  2528   00442E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2529   004430                     
  2530                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2531   004430  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2532   004434                     
  2533                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2534   004434  010E               	movlb	14	; () banked
  2535   004436  87DA               	bsf	218,3,b	;volatile
  2536                           
  2537                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2538   004438  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2539   00443C                     
  2540                           ;i2c.c: 57:   tmp = SSP2BUF;
  2541   00443C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2542                           
  2543                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2544   004440  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2545   004444                     
  2546                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2547   004444  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2548   004446  B4D8               	btfsc	status,2,c
  2549   004448  EF28  F022         	goto	u2341
  2550   00444C  EF2C  F022         	goto	u2340
  2551   004450                     u2341:
  2552   004450  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2553   004452  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2554   004454  EF2D  F022         	goto	u2358
  2555   004458                     u2340:
  2556   004458  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2557   00445A                     u2358:
  2558   00445A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2559   00445C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2560   00445E  010E               	movlb	14	; () banked
  2561   004460  51DA               	movf	218,w,b	;volatile
  2562   004462  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2563   004464  0BDF               	andlw	-33
  2564   004466  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2565   004468  6FDA               	movwf	218,b	;volatile
  2566   00446A                     
  2567                           ; BSR set to: 14
  2568                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2569   00446A  89DA               	bsf	218,4,b	;volatile
  2570   00446C                     
  2571                           ; BSR set to: 14
  2572                           ;i2c.c: 61:   return tmp;
  2573   00446C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2574   00446E                     
  2575                           ; BSR set to: 14
  2576   00446E  0012               	return		;funcret
  2577   004470                     __end_of_I2C_2_Master_Read:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _color_click_init *****************
  2581 ;; Defined at:
  2582 ;;		line 6 in file "colorclick.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;Total ram usage:        1 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 4
  2603 ;; This function calls:
  2604 ;;		_I2C_2_Master_Init
  2605 ;;		_color_writetoaddr
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text12
  2612   004470                     __ptext12:
  2613                           	callstack 0
  2614   004470                     _color_click_init:
  2615                           	callstack 26
  2616   004470                     
  2617                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2618   004470  EC8A  F022         	call	_I2C_2_Master_Init	;wreg free
  2619   004474                     
  2620                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2621   004474  0E01               	movlw	1
  2622   004476  6E03               	movwf	color_writetoaddr@value^0,c
  2623   004478  0E00               	movlw	0
  2624   00447A  ECE9  F022         	call	_color_writetoaddr
  2625   00447E                     
  2626                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2627   00447E  0E3F               	movlw	63
  2628   004480  6E05               	movwf	??_color_click_init^0,c
  2629   004482  0E55               	movlw	85
  2630   004484                     u3807:
  2631   004484  2EE8               	decfsz	wreg,f,c
  2632   004486  D7FE               	bra	u3807
  2633   004488  2E05               	decfsz	??_color_click_init^0,f,c
  2634   00448A  D7FC               	bra	u3807
  2635   00448C  F000               	nop	
  2636   00448E                     
  2637                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2638   00448E  0E03               	movlw	3
  2639   004490  6E03               	movwf	color_writetoaddr@value^0,c
  2640   004492  0E00               	movlw	0
  2641   004494  ECE9  F022         	call	_color_writetoaddr
  2642   004498                     
  2643                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2644   004498  0ED6               	movlw	214
  2645   00449A  6E03               	movwf	color_writetoaddr@value^0,c
  2646   00449C  0E01               	movlw	1
  2647   00449E  ECE9  F022         	call	_color_writetoaddr
  2648   0044A2                     
  2649                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2650   0044A2  927F               	bcf	127,1,c	;volatile
  2651   0044A4                     
  2652                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2653   0044A4  9287               	bcf	135,1,c	;volatile
  2654   0044A6                     
  2655                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2656   0044A6  9879               	bcf	121,4,c	;volatile
  2657   0044A8                     
  2658                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2659   0044A8  9881               	bcf	129,4,c	;volatile
  2660   0044AA                     
  2661                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2662   0044AA  9E7E               	bcf	126,7,c	;volatile
  2663   0044AC                     
  2664                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2665   0044AC  9E86               	bcf	134,7,c	;volatile
  2666   0044AE  0012               	return		;funcret
  2667   0044B0                     __end_of_color_click_init:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _color_writetoaddr *****************
  2671 ;; Defined at:
  2672 ;;		line 30 in file "colorclick.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  address         1    wreg     unsigned char 
  2675 ;;  value           1    2[COMRAM] unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  address         1    3[COMRAM] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2687 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 3
  2694 ;; This function calls:
  2695 ;;		_I2C_2_Master_Start
  2696 ;;		_I2C_2_Master_Stop
  2697 ;;		_I2C_2_Master_Write
  2698 ;; This function is called by:
  2699 ;;		_color_click_init
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text13
  2704   0045D2                     __ptext13:
  2705                           	callstack 0
  2706   0045D2                     _color_writetoaddr:
  2707                           	callstack 26
  2708                           
  2709                           ;incstack = 0
  2710                           ;color_writetoaddr@address stored from wreg
  2711   0045D2  6E04               	movwf	color_writetoaddr@address^0,c
  2712   0045D4                     
  2713                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2714   0045D4  EC1C  F023         	call	_I2C_2_Master_Start	;wreg free
  2715                           
  2716                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2717   0045D8  0E52               	movlw	82
  2718   0045DA  EC00  F023         	call	_I2C_2_Master_Write
  2719                           
  2720                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2721   0045DE  5004               	movf	color_writetoaddr@address^0,w,c
  2722   0045E0  0980               	iorlw	128
  2723   0045E2  EC00  F023         	call	_I2C_2_Master_Write
  2724                           
  2725                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2726   0045E6  5003               	movf	color_writetoaddr@value^0,w,c
  2727   0045E8  EC00  F023         	call	_I2C_2_Master_Write
  2728                           
  2729                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2730   0045EC  EC17  F023         	call	_I2C_2_Master_Stop	;wreg free
  2731   0045F0  0012               	return		;funcret
  2732   0045F2                     __end_of_color_writetoaddr:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _I2C_2_Master_Write *****************
  2736 ;; Defined at:
  2737 ;;		line 45 in file "i2c.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  data_byte       1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  data_byte       1    1[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 2
  2758 ;; This function calls:
  2759 ;;		_I2C_2_Master_Idle
  2760 ;; This function is called by:
  2761 ;;		_color_writetoaddr
  2762 ;;		_color_read_Red
  2763 ;;		_color_read_Green
  2764 ;;		_color_read_Blue
  2765 ;;		_color_read_Clear
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text14
  2770   004600                     __ptext14:
  2771                           	callstack 0
  2772   004600                     _I2C_2_Master_Write:
  2773                           	callstack 26
  2774                           
  2775                           ;incstack = 0
  2776                           ;I2C_2_Master_Write@data_byte stored from wreg
  2777   004600  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2778   004602                     
  2779                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2780   004602  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2781   004606                     
  2782                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2783   004606  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2784   00460A  0012               	return		;funcret
  2785   00460C                     __end_of_I2C_2_Master_Write:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _I2C_2_Master_Stop *****************
  2789 ;; Defined at:
  2790 ;;		line 39 in file "i2c.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 2
  2811 ;; This function calls:
  2812 ;;		_I2C_2_Master_Idle
  2813 ;; This function is called by:
  2814 ;;		_color_writetoaddr
  2815 ;;		_color_read_Red
  2816 ;;		_color_read_Green
  2817 ;;		_color_read_Blue
  2818 ;;		_color_read_Clear
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text15
  2823   00462E                     __ptext15:
  2824                           	callstack 0
  2825   00462E                     _I2C_2_Master_Stop:
  2826                           	callstack 26
  2827   00462E                     
  2828                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2829   00462E  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2830   004632                     
  2831                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2832   004632  010E               	movlb	14	; () banked
  2833   004634  85DA               	bsf	218,2,b	;volatile
  2834   004636                     
  2835                           ; BSR set to: 14
  2836   004636  0012               	return		;funcret
  2837   004638                     __end_of_I2C_2_Master_Stop:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _I2C_2_Master_Start *****************
  2841 ;; Defined at:
  2842 ;;		line 27 in file "i2c.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 2
  2863 ;; This function calls:
  2864 ;;		_I2C_2_Master_Idle
  2865 ;; This function is called by:
  2866 ;;		_color_writetoaddr
  2867 ;;		_color_read_Red
  2868 ;;		_color_read_Green
  2869 ;;		_color_read_Blue
  2870 ;;		_color_read_Clear
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text16
  2875   004638                     __ptext16:
  2876                           	callstack 0
  2877   004638                     _I2C_2_Master_Start:
  2878                           	callstack 26
  2879   004638                     
  2880                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2881   004638  EC9F  F022         	call	_I2C_2_Master_Idle	;wreg free
  2882   00463C                     
  2883                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2884   00463C  010E               	movlb	14	; () banked
  2885   00463E  81DA               	bsf	218,0,b	;volatile
  2886   004640                     
  2887                           ; BSR set to: 14
  2888   004640  0012               	return		;funcret
  2889   004642                     __end_of_I2C_2_Master_Start:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _I2C_2_Master_Idle *****************
  2893 ;; Defined at:
  2894 ;;		line 22 in file "i2c.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;Total ram usage:        1 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_I2C_2_Master_Start
  2919 ;;		_I2C_2_Master_RepStart
  2920 ;;		_I2C_2_Master_Stop
  2921 ;;		_I2C_2_Master_Write
  2922 ;;		_I2C_2_Master_Read
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text17
  2927   00453E                     __ptext17:
  2928                           	callstack 0
  2929   00453E                     _I2C_2_Master_Idle:
  2930                           	callstack 26
  2931   00453E                     l193:
  2932   00453E  010E               	movlb	14	; () banked
  2933   004540  B5D8               	btfsc	216,2,b	;volatile
  2934   004542  EFA5  F022         	goto	u2031
  2935   004546  EFA7  F022         	goto	u2030
  2936   00454A                     u2031:
  2937   00454A  EF9F  F022         	goto	l193
  2938   00454E                     u2030:
  2939   00454E                     
  2940                           ; BSR set to: 14
  2941   00454E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2942   004552  0E1F               	movlw	31
  2943   004554  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2944   004556  A4D8               	btfss	status,2,c
  2945   004558  EFB0  F022         	goto	u2041
  2946   00455C  EFB2  F022         	goto	u2040
  2947   004560                     u2041:
  2948   004560  EF9F  F022         	goto	l193
  2949   004564                     u2040:
  2950   004564                     
  2951                           ; BSR set to: 14
  2952   004564  0012               	return		;funcret
  2953   004566                     __end_of_I2C_2_Master_Idle:
  2954                           	callstack 0
  2955                           
  2956 ;; *************** function _I2C_2_Master_Init *****************
  2957 ;; Defined at:
  2958 ;;		line 4 in file "i2c.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_color_click_init
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text18
  2988   004514                     __ptext18:
  2989                           	callstack 0
  2990   004514                     _I2C_2_Master_Init:
  2991                           	callstack 28
  2992   004514                     
  2993                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2994   004514  010E               	movlb	14	; () banked
  2995   004516  51D9               	movf	217,w,b	;volatile
  2996   004518  0BF0               	andlw	-16
  2997   00451A  0908               	iorlw	8
  2998   00451C  6FD9               	movwf	217,b	;volatile
  2999   00451E                     
  3000                           ; BSR set to: 14
  3001                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3002   00451E  8BD9               	bsf	217,5,b	;volatile
  3003                           
  3004                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3005   004520  0E9F               	movlw	159
  3006   004522  6FD6               	movwf	214,b	;volatile
  3007   004524                     
  3008                           ; BSR set to: 14
  3009                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3010   004524  8A84               	bsf	132,5,c	;volatile
  3011   004526                     
  3012                           ; BSR set to: 14
  3013                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3014   004526  8C84               	bsf	132,6,c	;volatile
  3015   004528                     
  3016                           ; BSR set to: 14
  3017                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3018   004528  9BA7               	bcf	167,5,b	;volatile
  3019   00452A                     
  3020                           ; BSR set to: 14
  3021                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3022   00452A  9DA7               	bcf	167,6,b	;volatile
  3023                           
  3024                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3025   00452C  0E1D               	movlw	29
  3026   00452E  6F1D               	movwf	29,b	;volatile
  3027                           
  3028                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3029   004530  0E1E               	movlw	30
  3030   004532  6F1C               	movwf	28,b	;volatile
  3031                           
  3032                           ;i2c.c: 18:   RD5PPS=0x1C;
  3033   004534  0E1C               	movlw	28
  3034   004536  6F6F               	movwf	111,b	;volatile
  3035                           
  3036                           ;i2c.c: 19:   RD6PPS=0x1B;
  3037   004538  0E1B               	movlw	27
  3038   00453A  6F70               	movwf	112,b	;volatile
  3039   00453C                     
  3040                           ; BSR set to: 14
  3041   00453C  0012               	return		;funcret
  3042   00453E                     __end_of_I2C_2_Master_Init:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _Timer0_init *****************
  3046 ;; Defined at:
  3047 ;;		line 7 in file "timer.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text19
  3076   00458C                     __ptext19:
  3077                           	callstack 0
  3078   00458C                     _Timer0_init:
  3079                           	callstack 29
  3080   00458C                     
  3081                           ;timer.c: 9:     T0CON1bits.T0CS=0b010;
  3082   00458C  50D6               	movf	214,w,c	;volatile
  3083   00458E  0B1F               	andlw	-225
  3084   004590  0940               	iorlw	64
  3085   004592  6ED6               	movwf	214,c	;volatile
  3086   004594                     
  3087                           ;timer.c: 10:     T0CON1bits.T0ASYNC=1;
  3088   004594  88D6               	bsf	214,4,c	;volatile
  3089                           
  3090                           ;timer.c: 12:     T0CON1bits.T0CKPS=0b1101;
  3091   004596  50D6               	movf	214,w,c	;volatile
  3092   004598  0BF0               	andlw	-16
  3093   00459A  090D               	iorlw	13
  3094   00459C  6ED6               	movwf	214,c	;volatile
  3095   00459E                     
  3096                           ;timer.c: 13:     T0CON0bits.T016BIT=1;
  3097   00459E  88D5               	bsf	213,4,c	;volatile
  3098   0045A0                     
  3099                           ;timer.c: 14:  PIE0bits.TMR0IE = 1;
  3100   0045A0  010E               	movlb	14	; () banked
  3101   0045A2  8B29               	bsf	41,5,b	;volatile
  3102                           
  3103                           ;timer.c: 17:     TMR0H=0;
  3104   0045A4  0E00               	movlw	0
  3105   0045A6  6ED4               	movwf	212,c	;volatile
  3106                           
  3107                           ;timer.c: 18:     TMR0L=0;
  3108   0045A8  0E00               	movlw	0
  3109   0045AA  6ED3               	movwf	211,c	;volatile
  3110   0045AC                     
  3111                           ; BSR set to: 14
  3112                           ;timer.c: 20:     T0CON0bits.T0EN=1;
  3113   0045AC  8ED5               	bsf	213,7,c	;volatile
  3114   0045AE                     
  3115                           ; BSR set to: 14
  3116   0045AE  0012               	return		;funcret
  3117   0045B0                     __end_of_Timer0_init:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _RGB2Hue *****************
  3121 ;; Defined at:
  3122 ;;		line 26 in file "colorfunctions.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  cf              2   13[BANK0 ] PTR struct RGBC
  3125 ;;		 -> colorf(22), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  min             2   25[BANK0 ] int 
  3128 ;;  max             2   23[BANK0 ] int 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;Total ram usage:       14 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 3
  3145 ;; This function calls:
  3146 ;;		___fladd
  3147 ;;		___fldiv
  3148 ;;		___fleq
  3149 ;;		___flge
  3150 ;;		___flmul
  3151 ;;		___flsub
  3152 ;;		___fltol
  3153 ;;		___xxtofl
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text20
  3160   000E66                     __ptext20:
  3161                           	callstack 0
  3162   000E66                     _RGB2Hue:
  3163                           	callstack 27
  3164   000E66                     
  3165                           ;colorfunctions.c: 27:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3166   000E66  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3167   000E6A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3168   000E6E  CFDE F001          	movff	postinc2,___fleq@ff1
  3169   000E72  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3170   000E76  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3171   000E7A  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3172   000E7E  0100               	movlb	0	; () banked
  3173   000E80  EE20 F004          	lfsr	2,4
  3174   000E84  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3175   000E86  26D9               	addwf	fsr2l,f,c
  3176   000E88  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3177   000E8A  22DA               	addwfc	fsr2h,f,c
  3178   000E8C  CFDE F005          	movff	postinc2,___fleq@ff2
  3179   000E90  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3180   000E94  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3181   000E98  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3182   000E9C  EC6F  F01B         	call	___fleq	;wreg free
  3183   000EA0  A0D8               	btfss	status,0,c
  3184   000EA2  EF55  F007         	goto	u3371
  3185   000EA6  EF57  F007         	goto	u3370
  3186   000EAA                     u3371:
  3187   000EAA  EF8C  F007         	goto	l3886
  3188   000EAE                     u3370:
  3189   000EAE  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3190   000EB2  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3191   000EB6  CFDE F001          	movff	postinc2,___fleq@ff1
  3192   000EBA  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3193   000EBE  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3194   000EC2  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3195   000EC6  0100               	movlb	0	; () banked
  3196   000EC8  EE20 F008          	lfsr	2,8
  3197   000ECC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3198   000ECE  26D9               	addwf	fsr2l,f,c
  3199   000ED0  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3200   000ED2  22DA               	addwfc	fsr2h,f,c
  3201   000ED4  CFDE F005          	movff	postinc2,___fleq@ff2
  3202   000ED8  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3203   000EDC  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3204   000EE0  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3205   000EE4  EC6F  F01B         	call	___fleq	;wreg free
  3206   000EE8  A0D8               	btfss	status,0,c
  3207   000EEA  EF79  F007         	goto	u3381
  3208   000EEE  EF7B  F007         	goto	u3380
  3209   000EF2                     u3381:
  3210   000EF2  EF8C  F007         	goto	l3886
  3211   000EF6                     u3380:
  3212   000EF6                     
  3213                           ;colorfunctions.c: 28:         cf->h=0;
  3214   000EF6  0100               	movlb	0	; () banked
  3215   000EF8  EE20 F010          	lfsr	2,16
  3216   000EFC  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3217   000EFE  26D9               	addwf	fsr2l,f,c
  3218   000F00  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3219   000F02  22DA               	addwfc	fsr2h,f,c
  3220   000F04  0E00               	movlw	0
  3221   000F06  6EDE               	movwf	postinc2,c
  3222   000F08  0E00               	movlw	0
  3223   000F0A  6EDE               	movwf	postinc2,c
  3224   000F0C  0E00               	movlw	0
  3225   000F0E  6EDE               	movwf	postinc2,c
  3226   000F10  0E00               	movlw	0
  3227   000F12  6EDD               	movwf	postdec2,c
  3228                           
  3229                           ;colorfunctions.c: 29:     } else{
  3230   000F14  EFC8  F00A         	goto	l123
  3231   000F18                     l3886:
  3232                           
  3233                           ;colorfunctions.c: 31:         signed int min=0;
  3234   000F18  0E00               	movlw	0
  3235   000F1A  0100               	movlb	0	; () banked
  3236   000F1C  6FDC               	movwf	(RGB2Hue@min+1)& (0+255),b
  3237   000F1E  0E00               	movlw	0
  3238   000F20  6FDB               	movwf	RGB2Hue@min& (0+255),b
  3239   000F22                     
  3240                           ; BSR set to: 0
  3241                           ;colorfunctions.c: 33:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3242   000F22  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3243   000F26  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3244   000F2A  CFDE F04B          	movff	postinc2,___flge@ff1
  3245   000F2E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3246   000F32  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3247   000F36  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3248   000F3A  EE20 F004          	lfsr	2,4
  3249   000F3E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3250   000F40  26D9               	addwf	fsr2l,f,c
  3251   000F42  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3252   000F44  22DA               	addwfc	fsr2h,f,c
  3253   000F46  CFDE F04F          	movff	postinc2,___flge@ff2
  3254   000F4A  CFDE F050          	movff	postinc2,___flge@ff2+1
  3255   000F4E  CFDE F051          	movff	postinc2,___flge@ff2+2
  3256   000F52  CFDE F052          	movff	postinc2,___flge@ff2+3
  3257   000F56  ECED  F01A         	call	___flge	;wreg free
  3258   000F5A  B0D8               	btfsc	status,0,c
  3259   000F5C  EFB2  F007         	goto	u3391
  3260   000F60  EFB4  F007         	goto	u3390
  3261   000F64                     u3391:
  3262   000F64  EFEC  F007         	goto	l3894
  3263   000F68                     u3390:
  3264   000F68  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3265   000F6C  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3266   000F70  CFDE F04B          	movff	postinc2,___flge@ff1
  3267   000F74  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3268   000F78  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3269   000F7C  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3270   000F80  0100               	movlb	0	; () banked
  3271   000F82  EE20 F008          	lfsr	2,8
  3272   000F86  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3273   000F88  26D9               	addwf	fsr2l,f,c
  3274   000F8A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3275   000F8C  22DA               	addwfc	fsr2h,f,c
  3276   000F8E  CFDE F04F          	movff	postinc2,___flge@ff2
  3277   000F92  CFDE F050          	movff	postinc2,___flge@ff2+1
  3278   000F96  CFDE F051          	movff	postinc2,___flge@ff2+2
  3279   000F9A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3280   000F9E  ECED  F01A         	call	___flge	;wreg free
  3281   000FA2  B0D8               	btfsc	status,0,c
  3282   000FA4  EFD6  F007         	goto	u3401
  3283   000FA8  EFD8  F007         	goto	u3400
  3284   000FAC                     u3401:
  3285   000FAC  EFEC  F007         	goto	l3894
  3286   000FB0                     u3400:
  3287   000FB0                     
  3288                           ;colorfunctions.c: 34:             min=cf->Rf;
  3289   000FB0  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3290   000FB4  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3291   000FB8  CFDE F001          	movff	postinc2,___fltol@f1
  3292   000FBC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3293   000FC0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3294   000FC4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3295   000FC8  EC6A  F01A         	call	___fltol	;wreg free
  3296   000FCC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3297   000FD0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3298                           
  3299                           ;colorfunctions.c: 35:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3300   000FD4  EF62  F008         	goto	l115
  3301   000FD8                     l3894:
  3302   000FD8  0100               	movlb	0	; () banked
  3303   000FDA  EE20 F004          	lfsr	2,4
  3304   000FDE  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3305   000FE0  26D9               	addwf	fsr2l,f,c
  3306   000FE2  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3307   000FE4  22DA               	addwfc	fsr2h,f,c
  3308   000FE6  CFDE F04B          	movff	postinc2,___flge@ff1
  3309   000FEA  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3310   000FEE  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3311   000FF2  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3312   000FF6  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3313   000FFA  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3314   000FFE  CFDE F04F          	movff	postinc2,___flge@ff2
  3315   001002  CFDE F050          	movff	postinc2,___flge@ff2+1
  3316   001006  CFDE F051          	movff	postinc2,___flge@ff2+2
  3317   00100A  CFDE F052          	movff	postinc2,___flge@ff2+3
  3318   00100E  ECED  F01A         	call	___flge	;wreg free
  3319   001012  B0D8               	btfsc	status,0,c
  3320   001014  EF0E  F008         	goto	u3411
  3321   001018  EF10  F008         	goto	u3410
  3322   00101C                     u3411:
  3323   00101C  EF4D  F008         	goto	l3900
  3324   001020                     u3410:
  3325   001020  0100               	movlb	0	; () banked
  3326   001022  EE20 F004          	lfsr	2,4
  3327   001026  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3328   001028  26D9               	addwf	fsr2l,f,c
  3329   00102A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3330   00102C  22DA               	addwfc	fsr2h,f,c
  3331   00102E  CFDE F04B          	movff	postinc2,___flge@ff1
  3332   001032  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3333   001036  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3334   00103A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3335   00103E  EE20 F008          	lfsr	2,8
  3336   001042  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3337   001044  26D9               	addwf	fsr2l,f,c
  3338   001046  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3339   001048  22DA               	addwfc	fsr2h,f,c
  3340   00104A  CFDE F04F          	movff	postinc2,___flge@ff2
  3341   00104E  CFDE F050          	movff	postinc2,___flge@ff2+1
  3342   001052  CFDE F051          	movff	postinc2,___flge@ff2+2
  3343   001056  CFDE F052          	movff	postinc2,___flge@ff2+3
  3344   00105A  ECED  F01A         	call	___flge	;wreg free
  3345   00105E  B0D8               	btfsc	status,0,c
  3346   001060  EF34  F008         	goto	u3421
  3347   001064  EF36  F008         	goto	u3420
  3348   001068                     u3421:
  3349   001068  EF4D  F008         	goto	l3900
  3350   00106C                     u3420:
  3351   00106C                     
  3352                           ;colorfunctions.c: 36:             min=cf->Gf;
  3353   00106C  0100               	movlb	0	; () banked
  3354   00106E  EE20 F004          	lfsr	2,4
  3355   001072  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3356   001074  26D9               	addwf	fsr2l,f,c
  3357   001076  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3358   001078  22DA               	addwfc	fsr2h,f,c
  3359   00107A  CFDE F001          	movff	postinc2,___fltol@f1
  3360   00107E  CFDE F002          	movff	postinc2,___fltol@f1+1
  3361   001082  CFDE F003          	movff	postinc2,___fltol@f1+2
  3362   001086  CFDE F004          	movff	postinc2,___fltol@f1+3
  3363   00108A  EC6A  F01A         	call	___fltol	;wreg free
  3364   00108E  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3365   001092  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3366                           
  3367                           ;colorfunctions.c: 37:         } else{
  3368   001096  EF62  F008         	goto	l115
  3369   00109A                     l3900:
  3370                           
  3371                           ;colorfunctions.c: 38:             min=cf->Bf;
  3372   00109A  0100               	movlb	0	; () banked
  3373   00109C  EE20 F008          	lfsr	2,8
  3374   0010A0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3375   0010A2  26D9               	addwf	fsr2l,f,c
  3376   0010A4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3377   0010A6  22DA               	addwfc	fsr2h,f,c
  3378   0010A8  CFDE F001          	movff	postinc2,___fltol@f1
  3379   0010AC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3380   0010B0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3381   0010B4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3382   0010B8  EC6A  F01A         	call	___fltol	;wreg free
  3383   0010BC  C001  F0DB         	movff	?___fltol,RGB2Hue@min
  3384   0010C0  C002  F0DC         	movff	?___fltol+1,RGB2Hue@min+1
  3385   0010C4                     l115:
  3386                           
  3387                           ;colorfunctions.c: 41:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3388   0010C4  0100               	movlb	0	; () banked
  3389   0010C6  EE20 F004          	lfsr	2,4
  3390   0010CA  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3391   0010CC  26D9               	addwf	fsr2l,f,c
  3392   0010CE  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3393   0010D0  22DA               	addwfc	fsr2h,f,c
  3394   0010D2  CFDE F04B          	movff	postinc2,___flge@ff1
  3395   0010D6  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3396   0010DA  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3397   0010DE  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3398   0010E2  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3399   0010E6  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3400   0010EA  CFDE F04F          	movff	postinc2,___flge@ff2
  3401   0010EE  CFDE F050          	movff	postinc2,___flge@ff2+1
  3402   0010F2  CFDE F051          	movff	postinc2,___flge@ff2+2
  3403   0010F6  CFDE F052          	movff	postinc2,___flge@ff2+3
  3404   0010FA  ECED  F01A         	call	___flge	;wreg free
  3405   0010FE  B0D8               	btfsc	status,0,c
  3406   001100  EF84  F008         	goto	u3431
  3407   001104  EF86  F008         	goto	u3430
  3408   001108                     u3431:
  3409   001108  EF23  F009         	goto	l3908
  3410   00110C                     u3430:
  3411   00110C  0100               	movlb	0	; () banked
  3412   00110E  EE20 F008          	lfsr	2,8
  3413   001112  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3414   001114  26D9               	addwf	fsr2l,f,c
  3415   001116  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3416   001118  22DA               	addwfc	fsr2h,f,c
  3417   00111A  CFDE F04B          	movff	postinc2,___flge@ff1
  3418   00111E  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3419   001122  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3420   001126  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3421   00112A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3422   00112E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3423   001132  CFDE F04F          	movff	postinc2,___flge@ff2
  3424   001136  CFDE F050          	movff	postinc2,___flge@ff2+1
  3425   00113A  CFDE F051          	movff	postinc2,___flge@ff2+2
  3426   00113E  CFDE F052          	movff	postinc2,___flge@ff2+3
  3427   001142  ECED  F01A         	call	___flge	;wreg free
  3428   001146  B0D8               	btfsc	status,0,c
  3429   001148  EFA8  F008         	goto	u3441
  3430   00114C  EFAA  F008         	goto	u3440
  3431   001150                     u3441:
  3432   001150  EF23  F009         	goto	l3908
  3433   001154                     u3440:
  3434   001154                     
  3435                           ;colorfunctions.c: 42:             max=(cf->Rf);
  3436   001154  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3437   001158  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3438   00115C  CFDE F001          	movff	postinc2,___fltol@f1
  3439   001160  CFDE F002          	movff	postinc2,___fltol@f1+1
  3440   001164  CFDE F003          	movff	postinc2,___fltol@f1+2
  3441   001168  CFDE F004          	movff	postinc2,___fltol@f1+3
  3442   00116C  EC6A  F01A         	call	___fltol	;wreg free
  3443   001170  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3444   001174  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3445   001178                     
  3446                           ;colorfunctions.c: 45:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3447   001178  0100               	movlb	0	; () banked
  3448   00117A  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3449   00117C  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3450   00117E  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3451   001180  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3452   001182  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3453   001184  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3454   001186  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3455   00118A  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3456   00118E  0E00               	movlw	0
  3457   001190  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3458   001192  0EFF               	movlw	-1
  3459   001194  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3460   001196  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3461   001198  0E01               	movlw	1
  3462   00119A  ECDA  F018         	call	___xxtofl
  3463   00119E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3464   0011A2  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3465   0011A6  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3466   0011AA  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3467   0011AE  0100               	movlb	0	; () banked
  3468   0011B0  EE20 F008          	lfsr	2,8
  3469   0011B4  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3470   0011B6  26D9               	addwf	fsr2l,f,c
  3471   0011B8  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3472   0011BA  22DA               	addwfc	fsr2h,f,c
  3473   0011BC  CFDE F04F          	movff	postinc2,___flsub@a
  3474   0011C0  CFDE F050          	movff	postinc2,___flsub@a+1
  3475   0011C4  CFDE F051          	movff	postinc2,___flsub@a+2
  3476   0011C8  CFDE F052          	movff	postinc2,___flsub@a+3
  3477   0011CC  EE20 F004          	lfsr	2,4
  3478   0011D0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3479   0011D2  26D9               	addwf	fsr2l,f,c
  3480   0011D4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3481   0011D6  22DA               	addwfc	fsr2h,f,c
  3482   0011D8  CFDE F04B          	movff	postinc2,___flsub@b
  3483   0011DC  CFDE F04C          	movff	postinc2,___flsub@b+1
  3484   0011E0  CFDE F04D          	movff	postinc2,___flsub@b+2
  3485   0011E4  CFDE F04E          	movff	postinc2,___flsub@b+3
  3486   0011E8  ECF4  F021         	call	___flsub	;wreg free
  3487   0011EC  C04B  F053         	movff	?___flsub,___fldiv@b
  3488   0011F0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3489   0011F4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3490   0011F8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3491   0011FC  EC12  F014         	call	___fldiv	;wreg free
  3492   001200  C053  F01A         	movff	?___fldiv,___flmul@b
  3493   001204  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3494   001208  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3495   00120C  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3496   001210  0E00               	movlw	0
  3497   001212  6E1E               	movwf	___flmul@a^0,c
  3498   001214  0E00               	movlw	0
  3499   001216  6E1F               	movwf	(___flmul@a+1)^0,c
  3500   001218  0E70               	movlw	112
  3501   00121A  6E20               	movwf	(___flmul@a+2)^0,c
  3502   00121C  0E42               	movlw	66
  3503   00121E  6E21               	movwf	(___flmul@a+3)^0,c
  3504   001220  ECFD  F011         	call	___flmul	;wreg free
  3505   001224  0100               	movlb	0	; () banked
  3506   001226  EE20 F010          	lfsr	2,16
  3507   00122A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3508   00122C  26D9               	addwf	fsr2l,f,c
  3509   00122E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3510   001230  22DA               	addwfc	fsr2h,f,c
  3511   001232  C01A  FFDE         	movff	?___flmul,postinc2
  3512   001236  C01B  FFDE         	movff	?___flmul+1,postinc2
  3513   00123A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3514   00123E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3515                           
  3516                           ;colorfunctions.c: 46:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3517   001242  EF93  F00A         	goto	l3920
  3518   001246                     l3908:
  3519   001246  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3520   00124A  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3521   00124E  CFDE F04B          	movff	postinc2,___flge@ff1
  3522   001252  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3523   001256  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3524   00125A  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3525   00125E  0100               	movlb	0	; () banked
  3526   001260  EE20 F004          	lfsr	2,4
  3527   001264  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3528   001266  26D9               	addwf	fsr2l,f,c
  3529   001268  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3530   00126A  22DA               	addwfc	fsr2h,f,c
  3531   00126C  CFDE F04F          	movff	postinc2,___flge@ff2
  3532   001270  CFDE F050          	movff	postinc2,___flge@ff2+1
  3533   001274  CFDE F051          	movff	postinc2,___flge@ff2+2
  3534   001278  CFDE F052          	movff	postinc2,___flge@ff2+3
  3535   00127C  ECED  F01A         	call	___flge	;wreg free
  3536   001280  B0D8               	btfsc	status,0,c
  3537   001282  EF45  F009         	goto	u3451
  3538   001286  EF47  F009         	goto	u3450
  3539   00128A                     u3451:
  3540   00128A  EF01  F00A         	goto	l3916
  3541   00128E                     u3450:
  3542   00128E  0100               	movlb	0	; () banked
  3543   001290  EE20 F008          	lfsr	2,8
  3544   001294  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3545   001296  26D9               	addwf	fsr2l,f,c
  3546   001298  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3547   00129A  22DA               	addwfc	fsr2h,f,c
  3548   00129C  CFDE F04B          	movff	postinc2,___flge@ff1
  3549   0012A0  CFDE F04C          	movff	postinc2,___flge@ff1+1
  3550   0012A4  CFDE F04D          	movff	postinc2,___flge@ff1+2
  3551   0012A8  CFDE F04E          	movff	postinc2,___flge@ff1+3
  3552   0012AC  EE20 F004          	lfsr	2,4
  3553   0012B0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3554   0012B2  26D9               	addwf	fsr2l,f,c
  3555   0012B4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3556   0012B6  22DA               	addwfc	fsr2h,f,c
  3557   0012B8  CFDE F04F          	movff	postinc2,___flge@ff2
  3558   0012BC  CFDE F050          	movff	postinc2,___flge@ff2+1
  3559   0012C0  CFDE F051          	movff	postinc2,___flge@ff2+2
  3560   0012C4  CFDE F052          	movff	postinc2,___flge@ff2+3
  3561   0012C8  ECED  F01A         	call	___flge	;wreg free
  3562   0012CC  B0D8               	btfsc	status,0,c
  3563   0012CE  EF6B  F009         	goto	u3461
  3564   0012D2  EF6D  F009         	goto	u3460
  3565   0012D6                     u3461:
  3566   0012D6  EF01  F00A         	goto	l3916
  3567   0012DA                     u3460:
  3568   0012DA                     
  3569                           ;colorfunctions.c: 47:             max=cf->Gf;
  3570   0012DA  0100               	movlb	0	; () banked
  3571   0012DC  EE20 F004          	lfsr	2,4
  3572   0012E0  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3573   0012E2  26D9               	addwf	fsr2l,f,c
  3574   0012E4  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3575   0012E6  22DA               	addwfc	fsr2h,f,c
  3576   0012E8  CFDE F001          	movff	postinc2,___fltol@f1
  3577   0012EC  CFDE F002          	movff	postinc2,___fltol@f1+1
  3578   0012F0  CFDE F003          	movff	postinc2,___fltol@f1+2
  3579   0012F4  CFDE F004          	movff	postinc2,___fltol@f1+3
  3580   0012F8  EC6A  F01A         	call	___fltol	;wreg free
  3581   0012FC  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3582   001300  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3583                           
  3584                           ;colorfunctions.c: 48:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3585   001304  0100               	movlb	0	; () banked
  3586   001306  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3587   001308  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3588   00130A  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3589   00130C  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3590   00130E  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3591   001310  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3592   001312  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3593   001316  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3594   00131A  0E00               	movlw	0
  3595   00131C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3596   00131E  0EFF               	movlw	-1
  3597   001320  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3598   001322  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3599   001324  0E01               	movlw	1
  3600   001326  ECDA  F018         	call	___xxtofl
  3601   00132A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3602   00132E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3603   001332  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3604   001336  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3605   00133A  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3606   00133E  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3607   001342  CFDE F04F          	movff	postinc2,___flsub@a
  3608   001346  CFDE F050          	movff	postinc2,___flsub@a+1
  3609   00134A  CFDE F051          	movff	postinc2,___flsub@a+2
  3610   00134E  CFDE F052          	movff	postinc2,___flsub@a+3
  3611   001352  0100               	movlb	0	; () banked
  3612   001354  EE20 F008          	lfsr	2,8
  3613   001358  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3614   00135A  26D9               	addwf	fsr2l,f,c
  3615   00135C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3616   00135E  22DA               	addwfc	fsr2h,f,c
  3617   001360  CFDE F04B          	movff	postinc2,___flsub@b
  3618   001364  CFDE F04C          	movff	postinc2,___flsub@b+1
  3619   001368  CFDE F04D          	movff	postinc2,___flsub@b+2
  3620   00136C  CFDE F04E          	movff	postinc2,___flsub@b+3
  3621   001370  ECF4  F021         	call	___flsub	;wreg free
  3622   001374  C04B  F053         	movff	?___flsub,___fldiv@b
  3623   001378  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3624   00137C  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3625   001380  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3626   001384  EC12  F014         	call	___fldiv	;wreg free
  3627   001388  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3104
  3628   00138C  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3104+1
  3629   001390  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3104+2
  3630   001394  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3104+3
  3631   001398                     
  3632                           ;colorfunctions.c: 48:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3633   001398  0E00               	movlw	0
  3634   00139A  6E3F               	movwf	___fladd@a^0,c
  3635   00139C  0E00               	movlw	0
  3636   00139E  6E40               	movwf	(___fladd@a+1)^0,c
  3637   0013A0  0E00               	movlw	0
  3638   0013A2  6E41               	movwf	(___fladd@a+2)^0,c
  3639   0013A4  0E40               	movlw	64
  3640   0013A6  6E42               	movwf	(___fladd@a+3)^0,c
  3641   0013A8  C0D5  F03B         	movff	_RGB2Hue$3104,___fladd@b
  3642   0013AC  C0D6  F03C         	movff	_RGB2Hue$3104+1,___fladd@b+1
  3643   0013B0  C0D7  F03D         	movff	_RGB2Hue$3104+2,___fladd@b+2
  3644   0013B4  C0D8  F03E         	movff	_RGB2Hue$3104+3,___fladd@b+3
  3645   0013B8  EC4A  F00D         	call	___fladd	;wreg free
  3646   0013BC  C03B  F01A         	movff	?___fladd,___flmul@b
  3647   0013C0  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3648   0013C4  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3649   0013C8  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3650   0013CC  0E00               	movlw	0
  3651   0013CE  6E1E               	movwf	___flmul@a^0,c
  3652   0013D0  0E00               	movlw	0
  3653   0013D2  6E1F               	movwf	(___flmul@a+1)^0,c
  3654   0013D4  0E70               	movlw	112
  3655   0013D6  6E20               	movwf	(___flmul@a+2)^0,c
  3656   0013D8  0E42               	movlw	66
  3657   0013DA  6E21               	movwf	(___flmul@a+3)^0,c
  3658   0013DC  ECFD  F011         	call	___flmul	;wreg free
  3659   0013E0  0100               	movlb	0	; () banked
  3660   0013E2  EE20 F010          	lfsr	2,16
  3661   0013E6  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3662   0013E8  26D9               	addwf	fsr2l,f,c
  3663   0013EA  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3664   0013EC  22DA               	addwfc	fsr2h,f,c
  3665   0013EE  C01A  FFDE         	movff	?___flmul,postinc2
  3666   0013F2  C01B  FFDE         	movff	?___flmul+1,postinc2
  3667   0013F6  C01C  FFDE         	movff	?___flmul+2,postinc2
  3668   0013FA  C01D  FFDE         	movff	?___flmul+3,postinc2
  3669                           
  3670                           ;colorfunctions.c: 49:         }else{
  3671   0013FE  EF93  F00A         	goto	l3920
  3672   001402                     l3916:
  3673                           
  3674                           ;colorfunctions.c: 50:             max=cf->Bf;
  3675   001402  0100               	movlb	0	; () banked
  3676   001404  EE20 F008          	lfsr	2,8
  3677   001408  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3678   00140A  26D9               	addwf	fsr2l,f,c
  3679   00140C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3680   00140E  22DA               	addwfc	fsr2h,f,c
  3681   001410  CFDE F001          	movff	postinc2,___fltol@f1
  3682   001414  CFDE F002          	movff	postinc2,___fltol@f1+1
  3683   001418  CFDE F003          	movff	postinc2,___fltol@f1+2
  3684   00141C  CFDE F004          	movff	postinc2,___fltol@f1+3
  3685   001420  EC6A  F01A         	call	___fltol	;wreg free
  3686   001424  C001  F0D9         	movff	?___fltol,RGB2Hue@max
  3687   001428  C002  F0DA         	movff	?___fltol+1,RGB2Hue@max+1
  3688                           
  3689                           ;colorfunctions.c: 51:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3690   00142C  0100               	movlb	0	; () banked
  3691   00142E  51DB               	movf	RGB2Hue@min& (0+255),w,b
  3692   001430  5DD9               	subwf	RGB2Hue@max& (0+255),w,b
  3693   001432  6FD1               	movwf	??_RGB2Hue& (0+255),b
  3694   001434  51DC               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3695   001436  59DA               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3696   001438  6FD2               	movwf	(??_RGB2Hue+1)& (0+255),b
  3697   00143A  C0D1  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3698   00143E  C0D2  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3699   001442  0E00               	movlw	0
  3700   001444  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3701   001446  0EFF               	movlw	-1
  3702   001448  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3703   00144A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3704   00144C  0E01               	movlw	1
  3705   00144E  ECDA  F018         	call	___xxtofl
  3706   001452  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3707   001456  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3708   00145A  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3709   00145E  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3710   001462  0100               	movlb	0	; () banked
  3711   001464  EE20 F004          	lfsr	2,4
  3712   001468  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3713   00146A  26D9               	addwf	fsr2l,f,c
  3714   00146C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3715   00146E  22DA               	addwfc	fsr2h,f,c
  3716   001470  CFDE F04F          	movff	postinc2,___flsub@a
  3717   001474  CFDE F050          	movff	postinc2,___flsub@a+1
  3718   001478  CFDE F051          	movff	postinc2,___flsub@a+2
  3719   00147C  CFDE F052          	movff	postinc2,___flsub@a+3
  3720   001480  C0CF  FFD9         	movff	RGB2Hue@cf,fsr2l
  3721   001484  C0D0  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3722   001488  CFDE F04B          	movff	postinc2,___flsub@b
  3723   00148C  CFDE F04C          	movff	postinc2,___flsub@b+1
  3724   001490  CFDE F04D          	movff	postinc2,___flsub@b+2
  3725   001494  CFDE F04E          	movff	postinc2,___flsub@b+3
  3726   001498  ECF4  F021         	call	___flsub	;wreg free
  3727   00149C  C04B  F053         	movff	?___flsub,___fldiv@b
  3728   0014A0  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3729   0014A4  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3730   0014A8  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3731   0014AC  EC12  F014         	call	___fldiv	;wreg free
  3732   0014B0  C053  F0D5         	movff	?___fldiv,_RGB2Hue$3104
  3733   0014B4  C054  F0D6         	movff	?___fldiv+1,_RGB2Hue$3104+1
  3734   0014B8  C055  F0D7         	movff	?___fldiv+2,_RGB2Hue$3104+2
  3735   0014BC  C056  F0D8         	movff	?___fldiv+3,_RGB2Hue$3104+3
  3736   0014C0                     
  3737                           ;colorfunctions.c: 51:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3738   0014C0  0E00               	movlw	0
  3739   0014C2  6E3F               	movwf	___fladd@a^0,c
  3740   0014C4  0E00               	movlw	0
  3741   0014C6  6E40               	movwf	(___fladd@a+1)^0,c
  3742   0014C8  0E80               	movlw	128
  3743   0014CA  6E41               	movwf	(___fladd@a+2)^0,c
  3744   0014CC  0E40               	movlw	64
  3745   0014CE  6E42               	movwf	(___fladd@a+3)^0,c
  3746   0014D0  C0D5  F03B         	movff	_RGB2Hue$3104,___fladd@b
  3747   0014D4  C0D6  F03C         	movff	_RGB2Hue$3104+1,___fladd@b+1
  3748   0014D8  C0D7  F03D         	movff	_RGB2Hue$3104+2,___fladd@b+2
  3749   0014DC  C0D8  F03E         	movff	_RGB2Hue$3104+3,___fladd@b+3
  3750   0014E0  EC4A  F00D         	call	___fladd	;wreg free
  3751   0014E4  C03B  F01A         	movff	?___fladd,___flmul@b
  3752   0014E8  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3753   0014EC  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3754   0014F0  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3755   0014F4  0E00               	movlw	0
  3756   0014F6  6E1E               	movwf	___flmul@a^0,c
  3757   0014F8  0E00               	movlw	0
  3758   0014FA  6E1F               	movwf	(___flmul@a+1)^0,c
  3759   0014FC  0E70               	movlw	112
  3760   0014FE  6E20               	movwf	(___flmul@a+2)^0,c
  3761   001500  0E42               	movlw	66
  3762   001502  6E21               	movwf	(___flmul@a+3)^0,c
  3763   001504  ECFD  F011         	call	___flmul	;wreg free
  3764   001508  0100               	movlb	0	; () banked
  3765   00150A  EE20 F010          	lfsr	2,16
  3766   00150E  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3767   001510  26D9               	addwf	fsr2l,f,c
  3768   001512  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3769   001514  22DA               	addwfc	fsr2h,f,c
  3770   001516  C01A  FFDE         	movff	?___flmul,postinc2
  3771   00151A  C01B  FFDE         	movff	?___flmul+1,postinc2
  3772   00151E  C01C  FFDE         	movff	?___flmul+2,postinc2
  3773   001522  C01D  FFDE         	movff	?___flmul+3,postinc2
  3774   001526                     l3920:
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;colorfunctions.c: 53:         if (cf->h < 0){
  3778   001526  EE20 F010          	lfsr	2,16
  3779   00152A  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3780   00152C  26D9               	addwf	fsr2l,f,c
  3781   00152E  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3782   001530  22DA               	addwfc	fsr2h,f,c
  3783   001532  0E03               	movlw	3
  3784   001534  BEDB               	btfsc	plusw2,7,c
  3785   001536  EFA1  F00A         	goto	u3470
  3786   00153A  EF9F  F00A         	goto	u3471
  3787   00153E                     u3471:
  3788   00153E  EFC8  F00A         	goto	l123
  3789   001542                     u3470:
  3790   001542                     
  3791                           ; BSR set to: 0
  3792                           ;colorfunctions.c: 54:             cf->h= cf->h +360;
  3793   001542  EE20 F010          	lfsr	2,16
  3794   001546  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3795   001548  26D9               	addwf	fsr2l,f,c
  3796   00154A  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3797   00154C  22DA               	addwfc	fsr2h,f,c
  3798   00154E  CFDE F03B          	movff	postinc2,___fladd@b
  3799   001552  CFDE F03C          	movff	postinc2,___fladd@b+1
  3800   001556  CFDE F03D          	movff	postinc2,___fladd@b+2
  3801   00155A  CFDE F03E          	movff	postinc2,___fladd@b+3
  3802   00155E  0E00               	movlw	0
  3803   001560  6E3F               	movwf	___fladd@a^0,c
  3804   001562  0E00               	movlw	0
  3805   001564  6E40               	movwf	(___fladd@a+1)^0,c
  3806   001566  0EB4               	movlw	180
  3807   001568  6E41               	movwf	(___fladd@a+2)^0,c
  3808   00156A  0E43               	movlw	67
  3809   00156C  6E42               	movwf	(___fladd@a+3)^0,c
  3810   00156E  EC4A  F00D         	call	___fladd	;wreg free
  3811   001572  0100               	movlb	0	; () banked
  3812   001574  EE20 F010          	lfsr	2,16
  3813   001578  51CF               	movf	RGB2Hue@cf& (0+255),w,b
  3814   00157A  26D9               	addwf	fsr2l,f,c
  3815   00157C  51D0               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3816   00157E  22DA               	addwfc	fsr2h,f,c
  3817   001580  C03B  FFDE         	movff	?___fladd,postinc2
  3818   001584  C03C  FFDE         	movff	?___fladd+1,postinc2
  3819   001588  C03D  FFDE         	movff	?___fladd+2,postinc2
  3820   00158C  C03E  FFDE         	movff	?___fladd+3,postinc2
  3821   001590                     l123:
  3822                           
  3823                           ; BSR set to: 0
  3824   001590  0012               	return		;funcret
  3825   001592                     __end_of_RGB2Hue:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function ___fltol *****************
  3829 ;; Defined at:
  3830 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  f1              4    0[COMRAM] void 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  exp1            1    9[COMRAM] unsigned char 
  3835 ;;  sign1           1    8[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  4    0[COMRAM] long 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;Total ram usage:       10 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_RGB2Hue
  3856 ;;		_Left45
  3857 ;;		_Right45
  3858 ;;		_reverseHalfSquare
  3859 ;;		_Yellow_rev1_R90
  3860 ;;		_Pink_rev1_L90
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text21
  3865   0034D4                     __ptext21:
  3866                           	callstack 0
  3867   0034D4                     ___fltol:
  3868                           	callstack 28
  3869   0034D4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3870   0034D6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3871   0034D8  6E0A               	movwf	___fltol@exp1^0,c
  3872   0034DA  500A               	movf	___fltol@exp1^0,w,c
  3873   0034DC  A4D8               	btfss	status,2,c
  3874   0034DE  EF73  F01A         	goto	u3281
  3875   0034E2  EF75  F01A         	goto	u3280
  3876   0034E6                     u3281:
  3877   0034E6  EF7F  F01A         	goto	l3796
  3878   0034EA                     u3280:
  3879   0034EA                     l3792:
  3880   0034EA  0E00               	movlw	0
  3881   0034EC  6E01               	movwf	?___fltol^0,c
  3882   0034EE  0E00               	movlw	0
  3883   0034F0  6E02               	movwf	(?___fltol+1)^0,c
  3884   0034F2  0E00               	movlw	0
  3885   0034F4  6E03               	movwf	(?___fltol+2)^0,c
  3886   0034F6  0E00               	movlw	0
  3887   0034F8  6E04               	movwf	(?___fltol+3)^0,c
  3888   0034FA  EFEC  F01A         	goto	l1009
  3889   0034FE                     l3796:
  3890   0034FE  C001  F005         	movff	___fltol@f1,??___fltol
  3891   003502  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3892   003506  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3893   00350A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3894   00350E  0E20               	movlw	32
  3895   003510  EF8F  F01A         	goto	u3290
  3896   003514                     u3295:
  3897   003514  90D8               	bcf	status,0,c
  3898   003516  3208               	rrcf	(??___fltol+3)^0,f,c
  3899   003518  3207               	rrcf	(??___fltol+2)^0,f,c
  3900   00351A  3206               	rrcf	(??___fltol+1)^0,f,c
  3901   00351C  3205               	rrcf	??___fltol^0,f,c
  3902   00351E                     u3290:
  3903   00351E  2EE8               	decfsz	wreg,f,c
  3904   003520  EF8A  F01A         	goto	u3295
  3905   003524  5005               	movf	??___fltol^0,w,c
  3906   003526  6E09               	movwf	___fltol@sign1^0,c
  3907   003528  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3908   00352A  0EFF               	movlw	255
  3909   00352C  1601               	andwf	___fltol@f1^0,f,c
  3910   00352E  0EFF               	movlw	255
  3911   003530  1602               	andwf	(___fltol@f1+1)^0,f,c
  3912   003532  0EFF               	movlw	255
  3913   003534  1603               	andwf	(___fltol@f1+2)^0,f,c
  3914   003536  0E00               	movlw	0
  3915   003538  1604               	andwf	(___fltol@f1+3)^0,f,c
  3916   00353A  0E96               	movlw	150
  3917   00353C  5E0A               	subwf	___fltol@exp1^0,f,c
  3918   00353E  BE0A               	btfsc	___fltol@exp1^0,7,c
  3919   003540  EFA6  F01A         	goto	u3300
  3920   003544  EFA4  F01A         	goto	u3301
  3921   003548                     u3301:
  3922   003548  EFBC  F01A         	goto	l3816
  3923   00354C                     u3300:
  3924   00354C  500A               	movf	___fltol@exp1^0,w,c
  3925   00354E  0A80               	xorlw	128
  3926   003550  0F97               	addlw	151
  3927   003552  B0D8               	btfsc	status,0,c
  3928   003554  EFAE  F01A         	goto	u3311
  3929   003558  EFB0  F01A         	goto	u3310
  3930   00355C                     u3311:
  3931   00355C  EFB2  F01A         	goto	l3812
  3932   003560                     u3310:
  3933   003560  EF75  F01A         	goto	l3792
  3934   003564                     l3812:
  3935   003564  90D8               	bcf	status,0,c
  3936   003566  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3937   003568  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3938   00356A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3939   00356C  3201               	rrcf	___fltol@f1^0,f,c
  3940   00356E  3E0A               	incfsz	___fltol@exp1^0,f,c
  3941   003570  EFB2  F01A         	goto	l3812
  3942   003574  EFD4  F01A         	goto	l3826
  3943   003578                     l3816:
  3944   003578  0E1F               	movlw	31
  3945   00357A  640A               	cpfsgt	___fltol@exp1^0,c
  3946   00357C  EFC2  F01A         	goto	u3321
  3947   003580  EFC4  F01A         	goto	u3320
  3948   003584                     u3321:
  3949   003584  EFCC  F01A         	goto	l3824
  3950   003588                     u3320:
  3951   003588  EF75  F01A         	goto	l3792
  3952   00358C                     l3822:
  3953   00358C  90D8               	bcf	status,0,c
  3954   00358E  3601               	rlcf	___fltol@f1^0,f,c
  3955   003590  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3956   003592  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3957   003594  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3958   003596  060A               	decf	___fltol@exp1^0,f,c
  3959   003598                     l3824:
  3960   003598  500A               	movf	___fltol@exp1^0,w,c
  3961   00359A  A4D8               	btfss	status,2,c
  3962   00359C  EFD2  F01A         	goto	u3331
  3963   0035A0  EFD4  F01A         	goto	u3330
  3964   0035A4                     u3331:
  3965   0035A4  EFC6  F01A         	goto	l3822
  3966   0035A8                     u3330:
  3967   0035A8                     l3826:
  3968   0035A8  5009               	movf	___fltol@sign1^0,w,c
  3969   0035AA  B4D8               	btfsc	status,2,c
  3970   0035AC  EFDA  F01A         	goto	u3341
  3971   0035B0  EFDC  F01A         	goto	u3340
  3972   0035B4                     u3341:
  3973   0035B4  EFE4  F01A         	goto	l3830
  3974   0035B8                     u3340:
  3975   0035B8  1E04               	comf	(___fltol@f1+3)^0,f,c
  3976   0035BA  1E03               	comf	(___fltol@f1+2)^0,f,c
  3977   0035BC  1E02               	comf	(___fltol@f1+1)^0,f,c
  3978   0035BE  6C01               	negf	___fltol@f1^0,c
  3979   0035C0  0E00               	movlw	0
  3980   0035C2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3981   0035C4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3982   0035C6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3983   0035C8                     l3830:
  3984   0035C8  C001  F001         	movff	___fltol@f1,?___fltol
  3985   0035CC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3986   0035D0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3987   0035D4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3988   0035D8                     l1009:
  3989   0035D8  0012               	return		;funcret
  3990   0035DA                     __end_of___fltol:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function ___flsub *****************
  3994 ;; Defined at:
  3995 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  b               4   74[COMRAM] long 
  3998 ;;  a               4   78[COMRAM] long 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  4   74[COMRAM] long 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:        8 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 2
  4017 ;; This function calls:
  4018 ;;		___fladd
  4019 ;; This function is called by:
  4020 ;;		_RGB2Hue
  4021 ;;		_memoryUpdateTime
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text22
  4026   0043E8                     __ptext22:
  4027                           	callstack 0
  4028   0043E8                     ___flsub:
  4029                           	callstack 27
  4030   0043E8  0E00               	movlw	0
  4031   0043EA  1A4F               	xorwf	___flsub@a^0,f,c
  4032   0043EC  0E00               	movlw	0
  4033   0043EE  1A50               	xorwf	(___flsub@a+1)^0,f,c
  4034   0043F0  0E00               	movlw	0
  4035   0043F2  1A51               	xorwf	(___flsub@a+2)^0,f,c
  4036   0043F4  0E80               	movlw	128
  4037   0043F6  1A52               	xorwf	(___flsub@a+3)^0,f,c
  4038   0043F8  C04B  F03B         	movff	___flsub@b,___fladd@b
  4039   0043FC  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  4040   004400  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  4041   004404  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  4042   004408  C04F  F03F         	movff	___flsub@a,___fladd@a
  4043   00440C  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  4044   004410  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  4045   004414  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  4046   004418  EC4A  F00D         	call	___fladd	;wreg free
  4047   00441C  C03B  F04B         	movff	?___fladd,?___flsub
  4048   004420  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  4049   004424  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  4050   004428  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  4051   00442C  0012               	return		;funcret
  4052   00442E                     __end_of___flsub:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function ___fleq *****************
  4056 ;; Defined at:
  4057 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  ff1             4    0[COMRAM] long 
  4060 ;;  ff2             4    4[COMRAM] long 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;Total ram usage:       12 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_RGB2Hue
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text23
  4087   0036DE                     __ptext23:
  4088                           	callstack 0
  4089   0036DE                     ___fleq:
  4090                           	callstack 28
  4091   0036DE  0E00               	movlw	0
  4092   0036E0  1401               	andwf	___fleq@ff1^0,w,c
  4093   0036E2  6E09               	movwf	??___fleq^0,c
  4094   0036E4  0E00               	movlw	0
  4095   0036E6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4096   0036E8  6E0A               	movwf	(??___fleq+1)^0,c
  4097   0036EA  0E80               	movlw	128
  4098   0036EC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4099   0036EE  6E0B               	movwf	(??___fleq+2)^0,c
  4100   0036F0  0E7F               	movlw	127
  4101   0036F2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4102   0036F4  6E0C               	movwf	(??___fleq+3)^0,c
  4103   0036F6  5009               	movf	??___fleq^0,w,c
  4104   0036F8  100A               	iorwf	(??___fleq+1)^0,w,c
  4105   0036FA  100B               	iorwf	(??___fleq+2)^0,w,c
  4106   0036FC  100C               	iorwf	(??___fleq+3)^0,w,c
  4107   0036FE  A4D8               	btfss	status,2,c
  4108   003700  EF84  F01B         	goto	u3251
  4109   003704  EF86  F01B         	goto	u3250
  4110   003708                     u3251:
  4111   003708  EF8E  F01B         	goto	l3778
  4112   00370C                     u3250:
  4113   00370C  0E00               	movlw	0
  4114   00370E  6E01               	movwf	___fleq@ff1^0,c
  4115   003710  0E00               	movlw	0
  4116   003712  6E02               	movwf	(___fleq@ff1+1)^0,c
  4117   003714  0E00               	movlw	0
  4118   003716  6E03               	movwf	(___fleq@ff1+2)^0,c
  4119   003718  0E00               	movlw	0
  4120   00371A  6E04               	movwf	(___fleq@ff1+3)^0,c
  4121   00371C                     l3778:
  4122   00371C  0E00               	movlw	0
  4123   00371E  1405               	andwf	___fleq@ff2^0,w,c
  4124   003720  6E09               	movwf	??___fleq^0,c
  4125   003722  0E00               	movlw	0
  4126   003724  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4127   003726  6E0A               	movwf	(??___fleq+1)^0,c
  4128   003728  0E80               	movlw	128
  4129   00372A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4130   00372C  6E0B               	movwf	(??___fleq+2)^0,c
  4131   00372E  0E7F               	movlw	127
  4132   003730  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4133   003732  6E0C               	movwf	(??___fleq+3)^0,c
  4134   003734  5009               	movf	??___fleq^0,w,c
  4135   003736  100A               	iorwf	(??___fleq+1)^0,w,c
  4136   003738  100B               	iorwf	(??___fleq+2)^0,w,c
  4137   00373A  100C               	iorwf	(??___fleq+3)^0,w,c
  4138   00373C  A4D8               	btfss	status,2,c
  4139   00373E  EFA3  F01B         	goto	u3261
  4140   003742  EFA5  F01B         	goto	u3260
  4141   003746                     u3261:
  4142   003746  EFAD  F01B         	goto	l3782
  4143   00374A                     u3260:
  4144   00374A  0E00               	movlw	0
  4145   00374C  6E05               	movwf	___fleq@ff2^0,c
  4146   00374E  0E00               	movlw	0
  4147   003750  6E06               	movwf	(___fleq@ff2+1)^0,c
  4148   003752  0E00               	movlw	0
  4149   003754  6E07               	movwf	(___fleq@ff2+2)^0,c
  4150   003756  0E00               	movlw	0
  4151   003758  6E08               	movwf	(___fleq@ff2+3)^0,c
  4152   00375A                     l3782:
  4153   00375A  5005               	movf	___fleq@ff2^0,w,c
  4154   00375C  1801               	xorwf	___fleq@ff1^0,w,c
  4155   00375E  E10F               	bnz	u3270
  4156   003760  5006               	movf	(___fleq@ff2+1)^0,w,c
  4157   003762  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4158   003764  E10C               	bnz	u3270
  4159   003766  5007               	movf	(___fleq@ff2+2)^0,w,c
  4160   003768  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4161   00376A  E109               	bnz	u3270
  4162   00376C  5008               	movf	(___fleq@ff2+3)^0,w,c
  4163   00376E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4164   003770  B4D8               	btfsc	status,2,c
  4165   003772  EFBD  F01B         	goto	u3271
  4166   003776  EFBF  F01B         	goto	u3270
  4167   00377A                     u3271:
  4168   00377A  EFC2  F01B         	goto	l3786
  4169   00377E                     u3270:
  4170   00377E  90D8               	bcf	status,0,c
  4171   003780  EFC3  F01B         	goto	l971
  4172   003784                     l3786:
  4173   003784  80D8               	bsf	status,0,c
  4174   003786                     l971:
  4175   003786  0012               	return		;funcret
  4176   003788                     __end_of___fleq:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function ___fldiv *****************
  4180 ;; Defined at:
  4181 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  b               4   82[COMRAM] long 
  4184 ;;  a               4   86[COMRAM] long 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  grs             4    7[BANK0 ] unsigned long 
  4187 ;;  rem             4    0[BANK0 ] unsigned long 
  4188 ;;  new_exp         2    5[BANK0 ] short 
  4189 ;;  aexp            1   12[BANK0 ] unsigned char 
  4190 ;;  bexp            1   11[BANK0 ] unsigned char 
  4191 ;;  sign            1    4[BANK0 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  4   82[COMRAM] unsigned char 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;Total ram usage:       25 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_colour_read_all
  4212 ;;		_RGB2Hue
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text24
  4217   002824                     __ptext24:
  4218                           	callstack 0
  4219   002824                     ___fldiv:
  4220                           	callstack 28
  4221   002824  5056               	movf	(___fldiv@b+3)^0,w,c
  4222   002826  0B80               	andlw	128
  4223   002828  0100               	movlb	0	; () banked
  4224   00282A  6FC6               	movwf	___fldiv@sign& (0+255),b
  4225   00282C  5056               	movf	(___fldiv@b+3)^0,w,c
  4226   00282E  2456               	addwf	(___fldiv@b+3)^0,w,c
  4227   002830  6FCD               	movwf	___fldiv@bexp& (0+255),b
  4228   002832                     
  4229                           ; BSR set to: 0
  4230   002832  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4231   002834  EF1E  F014         	goto	u3021
  4232   002838  EF20  F014         	goto	u3020
  4233   00283C                     u3021:
  4234   00283C  EF21  F014         	goto	l3636
  4235   002840                     u3020:
  4236   002840                     
  4237                           ; BSR set to: 0
  4238   002840  81CD               	bsf	___fldiv@bexp& (0+255),0,b
  4239   002842                     l3636:
  4240                           
  4241                           ; BSR set to: 0
  4242   002842  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4243   002844  B4D8               	btfsc	status,2,c
  4244   002846  EF27  F014         	goto	u3031
  4245   00284A  EF29  F014         	goto	u3030
  4246   00284E                     u3031:
  4247   00284E  EF3E  F014         	goto	l3646
  4248   002852                     u3030:
  4249   002852                     
  4250                           ; BSR set to: 0
  4251   002852  29CD               	incf	___fldiv@bexp& (0+255),w,b
  4252   002854  A4D8               	btfss	status,2,c
  4253   002856  EF2F  F014         	goto	u3041
  4254   00285A  EF31  F014         	goto	u3040
  4255   00285E                     u3041:
  4256   00285E  EF39  F014         	goto	l3642
  4257   002862                     u3040:
  4258   002862                     
  4259                           ; BSR set to: 0
  4260   002862  0E00               	movlw	0
  4261   002864  6E53               	movwf	___fldiv@b^0,c
  4262   002866  0E00               	movlw	0
  4263   002868  6E54               	movwf	(___fldiv@b+1)^0,c
  4264   00286A  0E00               	movlw	0
  4265   00286C  6E55               	movwf	(___fldiv@b+2)^0,c
  4266   00286E  0E00               	movlw	0
  4267   002870  6E56               	movwf	(___fldiv@b+3)^0,c
  4268   002872                     l3642:
  4269                           
  4270                           ; BSR set to: 0
  4271   002872  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4272   002874                     
  4273                           ; BSR set to: 0
  4274   002874  0E00               	movlw	0
  4275   002876  6E56               	movwf	(___fldiv@b+3)^0,c
  4276   002878  EF46  F014         	goto	l3648
  4277   00287C                     l3646:
  4278                           
  4279                           ; BSR set to: 0
  4280   00287C  0E00               	movlw	0
  4281   00287E  6E53               	movwf	___fldiv@b^0,c
  4282   002880  0E00               	movlw	0
  4283   002882  6E54               	movwf	(___fldiv@b+1)^0,c
  4284   002884  0E00               	movlw	0
  4285   002886  6E55               	movwf	(___fldiv@b+2)^0,c
  4286   002888  0E00               	movlw	0
  4287   00288A  6E56               	movwf	(___fldiv@b+3)^0,c
  4288   00288C                     l3648:
  4289                           
  4290                           ; BSR set to: 0
  4291   00288C  505A               	movf	(___fldiv@a+3)^0,w,c
  4292   00288E  0B80               	andlw	128
  4293   002890  1BC6               	xorwf	___fldiv@sign& (0+255),f,b
  4294   002892                     
  4295                           ; BSR set to: 0
  4296   002892  505A               	movf	(___fldiv@a+3)^0,w,c
  4297   002894  245A               	addwf	(___fldiv@a+3)^0,w,c
  4298   002896  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4299   002898                     
  4300                           ; BSR set to: 0
  4301   002898  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4302   00289A  EF51  F014         	goto	u3051
  4303   00289E  EF53  F014         	goto	u3050
  4304   0028A2                     u3051:
  4305   0028A2  EF54  F014         	goto	l3656
  4306   0028A6                     u3050:
  4307   0028A6                     
  4308                           ; BSR set to: 0
  4309   0028A6  81CE               	bsf	___fldiv@aexp& (0+255),0,b
  4310   0028A8                     l3656:
  4311                           
  4312                           ; BSR set to: 0
  4313   0028A8  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4314   0028AA  B4D8               	btfsc	status,2,c
  4315   0028AC  EF5A  F014         	goto	u3061
  4316   0028B0  EF5C  F014         	goto	u3060
  4317   0028B4                     u3061:
  4318   0028B4  EF71  F014         	goto	l3666
  4319   0028B8                     u3060:
  4320   0028B8                     
  4321                           ; BSR set to: 0
  4322   0028B8  29CE               	incf	___fldiv@aexp& (0+255),w,b
  4323   0028BA  A4D8               	btfss	status,2,c
  4324   0028BC  EF62  F014         	goto	u3071
  4325   0028C0  EF64  F014         	goto	u3070
  4326   0028C4                     u3071:
  4327   0028C4  EF6C  F014         	goto	l3662
  4328   0028C8                     u3070:
  4329   0028C8                     
  4330                           ; BSR set to: 0
  4331   0028C8  0E00               	movlw	0
  4332   0028CA  6E57               	movwf	___fldiv@a^0,c
  4333   0028CC  0E00               	movlw	0
  4334   0028CE  6E58               	movwf	(___fldiv@a+1)^0,c
  4335   0028D0  0E00               	movlw	0
  4336   0028D2  6E59               	movwf	(___fldiv@a+2)^0,c
  4337   0028D4  0E00               	movlw	0
  4338   0028D6  6E5A               	movwf	(___fldiv@a+3)^0,c
  4339   0028D8                     l3662:
  4340                           
  4341                           ; BSR set to: 0
  4342   0028D8  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4343   0028DA                     
  4344                           ; BSR set to: 0
  4345   0028DA  0E00               	movlw	0
  4346   0028DC  6E5A               	movwf	(___fldiv@a+3)^0,c
  4347   0028DE  EF79  F014         	goto	l3668
  4348   0028E2                     l3666:
  4349                           
  4350                           ; BSR set to: 0
  4351   0028E2  0E00               	movlw	0
  4352   0028E4  6E57               	movwf	___fldiv@a^0,c
  4353   0028E6  0E00               	movlw	0
  4354   0028E8  6E58               	movwf	(___fldiv@a+1)^0,c
  4355   0028EA  0E00               	movlw	0
  4356   0028EC  6E59               	movwf	(___fldiv@a+2)^0,c
  4357   0028EE  0E00               	movlw	0
  4358   0028F0  6E5A               	movwf	(___fldiv@a+3)^0,c
  4359   0028F2                     l3668:
  4360                           
  4361                           ; BSR set to: 0
  4362   0028F2  5057               	movf	___fldiv@a^0,w,c
  4363   0028F4  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4364   0028F6  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4365   0028F8  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4366   0028FA  A4D8               	btfss	status,2,c
  4367   0028FC  EF82  F014         	goto	u3081
  4368   002900  EF84  F014         	goto	u3080
  4369   002904                     u3081:
  4370   002904  EF9C  F014         	goto	l3680
  4371   002908                     u3080:
  4372   002908                     
  4373                           ; BSR set to: 0
  4374   002908  0E00               	movlw	0
  4375   00290A  6E53               	movwf	___fldiv@b^0,c
  4376   00290C  0E00               	movlw	0
  4377   00290E  6E54               	movwf	(___fldiv@b+1)^0,c
  4378   002910  0E00               	movlw	0
  4379   002912  6E55               	movwf	(___fldiv@b+2)^0,c
  4380   002914  0E00               	movlw	0
  4381   002916  6E56               	movwf	(___fldiv@b+3)^0,c
  4382   002918                     
  4383                           ; BSR set to: 0
  4384   002918  0E80               	movlw	128
  4385   00291A  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4386   00291C  0E7F               	movlw	127
  4387   00291E  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4388   002920                     l3674:
  4389                           
  4390                           ; BSR set to: 0
  4391   002920  51C6               	movf	___fldiv@sign& (0+255),w,b
  4392   002922  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4393   002924                     
  4394                           ; BSR set to: 0
  4395   002924  C053  F053         	movff	___fldiv@b,?___fldiv
  4396   002928  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4397   00292C  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4398   002930  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4399   002934  EFDF  F015         	goto	l1294
  4400   002938                     l3680:
  4401                           
  4402                           ; BSR set to: 0
  4403   002938  51CD               	movf	___fldiv@bexp& (0+255),w,b
  4404   00293A  A4D8               	btfss	status,2,c
  4405   00293C  EFA2  F014         	goto	u3091
  4406   002940  EFA4  F014         	goto	u3090
  4407   002944                     u3091:
  4408   002944  EFAE  F014         	goto	l3688
  4409   002948                     u3090:
  4410   002948                     
  4411                           ; BSR set to: 0
  4412   002948  0E00               	movlw	0
  4413   00294A  6E53               	movwf	?___fldiv^0,c
  4414   00294C  0E00               	movlw	0
  4415   00294E  6E54               	movwf	(?___fldiv+1)^0,c
  4416   002950  0E00               	movlw	0
  4417   002952  6E55               	movwf	(?___fldiv+2)^0,c
  4418   002954  0E00               	movlw	0
  4419   002956  6E56               	movwf	(?___fldiv+3)^0,c
  4420   002958  EFDF  F015         	goto	l1294
  4421   00295C                     l3688:
  4422                           
  4423                           ; BSR set to: 0
  4424   00295C  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4425   00295E  C0CD  F05B         	movff	___fldiv@bexp,??___fldiv
  4426   002962  6A5C               	clrf	(??___fldiv+1)^0,c
  4427   002964  5E5B               	subwf	??___fldiv^0,f,c
  4428   002966  0E00               	movlw	0
  4429   002968  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4430   00296A  0E7F               	movlw	127
  4431   00296C  245B               	addwf	??___fldiv^0,w,c
  4432   00296E  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4433   002970  0E00               	movlw	0
  4434   002972  205C               	addwfc	(??___fldiv+1)^0,w,c
  4435   002974  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4436   002976                     
  4437                           ; BSR set to: 0
  4438   002976  C053  F0C2         	movff	___fldiv@b,___fldiv@rem
  4439   00297A  C054  F0C3         	movff	___fldiv@b+1,___fldiv@rem+1
  4440   00297E  C055  F0C4         	movff	___fldiv@b+2,___fldiv@rem+2
  4441   002982  C056  F0C5         	movff	___fldiv@b+3,___fldiv@rem+3
  4442   002986                     
  4443                           ; BSR set to: 0
  4444   002986  0E00               	movlw	0
  4445   002988  6E53               	movwf	___fldiv@b^0,c
  4446   00298A  0E00               	movlw	0
  4447   00298C  6E54               	movwf	(___fldiv@b+1)^0,c
  4448   00298E  0E00               	movlw	0
  4449   002990  6E55               	movwf	(___fldiv@b+2)^0,c
  4450   002992  0E00               	movlw	0
  4451   002994  6E56               	movwf	(___fldiv@b+3)^0,c
  4452   002996                     
  4453                           ; BSR set to: 0
  4454   002996  0E00               	movlw	0
  4455   002998  6FC9               	movwf	___fldiv@grs& (0+255),b
  4456   00299A  0E00               	movlw	0
  4457   00299C  6FCA               	movwf	(___fldiv@grs+1)& (0+255),b
  4458   00299E  0E00               	movlw	0
  4459   0029A0  6FCB               	movwf	(___fldiv@grs+2)& (0+255),b
  4460   0029A2  0E00               	movlw	0
  4461   0029A4  6FCC               	movwf	(___fldiv@grs+3)& (0+255),b
  4462   0029A6                     
  4463                           ; BSR set to: 0
  4464   0029A6  0E00               	movlw	0
  4465   0029A8  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4466   0029AA  EF0F  F015         	goto	l1296
  4467   0029AE                     l3698:
  4468                           
  4469                           ; BSR set to: 0
  4470   0029AE  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4471   0029B0  B4D8               	btfsc	status,2,c
  4472   0029B2  EFDD  F014         	goto	u3101
  4473   0029B6  EFDF  F014         	goto	u3100
  4474   0029BA                     u3101:
  4475   0029BA  EFF6  F014         	goto	l3706
  4476   0029BE                     u3100:
  4477   0029BE                     
  4478                           ; BSR set to: 0
  4479   0029BE  90D8               	bcf	status,0,c
  4480   0029C0  37C2               	rlcf	___fldiv@rem& (0+255),f,b
  4481   0029C2  37C3               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4482   0029C4  37C4               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4483   0029C6  37C5               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4484   0029C8  90D8               	bcf	status,0,c
  4485   0029CA  3653               	rlcf	___fldiv@b^0,f,c
  4486   0029CC  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4487   0029CE  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4488   0029D0  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4489   0029D2                     
  4490                           ; BSR set to: 0
  4491   0029D2  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4492   0029D4  EFEE  F014         	goto	u3111
  4493   0029D8  EFF0  F014         	goto	u3110
  4494   0029DC                     u3111:
  4495   0029DC  EFF1  F014         	goto	l1299
  4496   0029E0                     u3110:
  4497   0029E0                     
  4498                           ; BSR set to: 0
  4499   0029E0  8053               	bsf	___fldiv@b^0,0,c
  4500   0029E2                     l1299:
  4501                           
  4502                           ; BSR set to: 0
  4503   0029E2  90D8               	bcf	status,0,c
  4504   0029E4  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4505   0029E6  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4506   0029E8  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4507   0029EA  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4508   0029EC                     l3706:
  4509                           
  4510                           ; BSR set to: 0
  4511   0029EC  5057               	movf	___fldiv@a^0,w,c
  4512   0029EE  5DC2               	subwf	___fldiv@rem& (0+255),w,b
  4513   0029F0  5058               	movf	(___fldiv@a+1)^0,w,c
  4514   0029F2  59C3               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4515   0029F4  5059               	movf	(___fldiv@a+2)^0,w,c
  4516   0029F6  59C4               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4517   0029F8  505A               	movf	(___fldiv@a+3)^0,w,c
  4518   0029FA  59C5               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4519   0029FC  A0D8               	btfss	status,0,c
  4520   0029FE  EF03  F015         	goto	u3121
  4521   002A02  EF05  F015         	goto	u3120
  4522   002A06                     u3121:
  4523   002A06  EF0E  F015         	goto	l3712
  4524   002A0A                     u3120:
  4525   002A0A                     
  4526                           ; BSR set to: 0
  4527   002A0A  8DCC               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4528   002A0C                     
  4529                           ; BSR set to: 0
  4530   002A0C  5057               	movf	___fldiv@a^0,w,c
  4531   002A0E  5FC2               	subwf	___fldiv@rem& (0+255),f,b
  4532   002A10  5058               	movf	(___fldiv@a+1)^0,w,c
  4533   002A12  5BC3               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4534   002A14  5059               	movf	(___fldiv@a+2)^0,w,c
  4535   002A16  5BC4               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4536   002A18  505A               	movf	(___fldiv@a+3)^0,w,c
  4537   002A1A  5BC5               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4538   002A1C                     l3712:
  4539                           
  4540                           ; BSR set to: 0
  4541   002A1C  2BCE               	incf	___fldiv@aexp& (0+255),f,b
  4542   002A1E                     l1296:
  4543                           
  4544                           ; BSR set to: 0
  4545   002A1E  0E19               	movlw	25
  4546   002A20  65CE               	cpfsgt	___fldiv@aexp& (0+255),b
  4547   002A22  EF15  F015         	goto	u3131
  4548   002A26  EF17  F015         	goto	u3130
  4549   002A2A                     u3131:
  4550   002A2A  EFD7  F014         	goto	l3698
  4551   002A2E                     u3130:
  4552   002A2E                     
  4553                           ; BSR set to: 0
  4554   002A2E  51C2               	movf	___fldiv@rem& (0+255),w,b
  4555   002A30  11C3               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4556   002A32  11C4               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4557   002A34  11C5               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4558   002A36  B4D8               	btfsc	status,2,c
  4559   002A38  EF20  F015         	goto	u3141
  4560   002A3C  EF22  F015         	goto	u3140
  4561   002A40                     u3141:
  4562   002A40  EF3A  F015         	goto	l3724
  4563   002A44                     u3140:
  4564   002A44                     
  4565                           ; BSR set to: 0
  4566   002A44  81C9               	bsf	___fldiv@grs& (0+255),0,b
  4567   002A46  EF3A  F015         	goto	l3724
  4568   002A4A                     l3718:
  4569                           
  4570                           ; BSR set to: 0
  4571   002A4A  90D8               	bcf	status,0,c
  4572   002A4C  3653               	rlcf	___fldiv@b^0,f,c
  4573   002A4E  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4574   002A50  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4575   002A52  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4576   002A54                     
  4577                           ; BSR set to: 0
  4578   002A54  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4579   002A56  EF2F  F015         	goto	u3151
  4580   002A5A  EF31  F015         	goto	u3150
  4581   002A5E                     u3151:
  4582   002A5E  EF32  F015         	goto	l1305
  4583   002A62                     u3150:
  4584   002A62                     
  4585                           ; BSR set to: 0
  4586   002A62  8053               	bsf	___fldiv@b^0,0,c
  4587   002A64                     l1305:
  4588                           
  4589                           ; BSR set to: 0
  4590   002A64  90D8               	bcf	status,0,c
  4591   002A66  37C9               	rlcf	___fldiv@grs& (0+255),f,b
  4592   002A68  37CA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4593   002A6A  37CB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4594   002A6C  37CC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4595   002A6E  07C7               	decf	___fldiv@new_exp& (0+255),f,b
  4596   002A70  A0D8               	btfss	status,0,c
  4597   002A72  07C8               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4598   002A74                     l3724:
  4599                           
  4600                           ; BSR set to: 0
  4601   002A74  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4602   002A76  EF3F  F015         	goto	u3161
  4603   002A7A  EF41  F015         	goto	u3160
  4604   002A7E                     u3161:
  4605   002A7E  EF25  F015         	goto	l3718
  4606   002A82                     u3160:
  4607   002A82                     
  4608                           ; BSR set to: 0
  4609   002A82  0E00               	movlw	0
  4610   002A84  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4611   002A86                     
  4612                           ; BSR set to: 0
  4613   002A86  AFCC               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4614   002A88  EF48  F015         	goto	u3171
  4615   002A8C  EF4A  F015         	goto	u3170
  4616   002A90                     u3171:
  4617   002A90  EF6E  F015         	goto	l1307
  4618   002A94                     u3170:
  4619   002A94                     
  4620                           ; BSR set to: 0
  4621   002A94  0EFF               	movlw	255
  4622   002A96  15C9               	andwf	___fldiv@grs& (0+255),w,b
  4623   002A98  6E5B               	movwf	??___fldiv^0,c
  4624   002A9A  0EFF               	movlw	255
  4625   002A9C  15CA               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4626   002A9E  6E5C               	movwf	(??___fldiv+1)^0,c
  4627   002AA0  0EFF               	movlw	255
  4628   002AA2  15CB               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4629   002AA4  6E5D               	movwf	(??___fldiv+2)^0,c
  4630   002AA6  0E7F               	movlw	127
  4631   002AA8  15CC               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4632   002AAA  6E5E               	movwf	(??___fldiv+3)^0,c
  4633   002AAC  505B               	movf	??___fldiv^0,w,c
  4634   002AAE  105C               	iorwf	(??___fldiv+1)^0,w,c
  4635   002AB0  105D               	iorwf	(??___fldiv+2)^0,w,c
  4636   002AB2  105E               	iorwf	(??___fldiv+3)^0,w,c
  4637   002AB4  B4D8               	btfsc	status,2,c
  4638   002AB6  EF5F  F015         	goto	u3181
  4639   002ABA  EF61  F015         	goto	u3180
  4640   002ABE                     u3181:
  4641   002ABE  EF65  F015         	goto	l1308
  4642   002AC2                     u3180:
  4643   002AC2                     l3732:
  4644                           
  4645                           ; BSR set to: 0
  4646   002AC2  0E01               	movlw	1
  4647   002AC4  6FCE               	movwf	___fldiv@aexp& (0+255),b
  4648   002AC6  EF6E  F015         	goto	l1307
  4649   002ACA                     l1308:
  4650                           
  4651                           ; BSR set to: 0
  4652   002ACA  A053               	btfss	___fldiv@b^0,0,c
  4653   002ACC  EF6A  F015         	goto	u3191
  4654   002AD0  EF6C  F015         	goto	u3190
  4655   002AD4                     u3191:
  4656   002AD4  EF6E  F015         	goto	l1307
  4657   002AD8                     u3190:
  4658   002AD8  EF61  F015         	goto	l3732
  4659   002ADC                     l1307:
  4660                           
  4661                           ; BSR set to: 0
  4662   002ADC  51CE               	movf	___fldiv@aexp& (0+255),w,b
  4663   002ADE  B4D8               	btfsc	status,2,c
  4664   002AE0  EF74  F015         	goto	u3201
  4665   002AE4  EF76  F015         	goto	u3200
  4666   002AE8                     u3201:
  4667   002AE8  EF9A  F015         	goto	l3744
  4668   002AEC                     u3200:
  4669   002AEC                     
  4670                           ; BSR set to: 0
  4671   002AEC  0E01               	movlw	1
  4672   002AEE  2653               	addwf	___fldiv@b^0,f,c
  4673   002AF0  0E00               	movlw	0
  4674   002AF2  2254               	addwfc	(___fldiv@b+1)^0,f,c
  4675   002AF4  2255               	addwfc	(___fldiv@b+2)^0,f,c
  4676   002AF6  2256               	addwfc	(___fldiv@b+3)^0,f,c
  4677   002AF8                     
  4678                           ; BSR set to: 0
  4679   002AF8  A056               	btfss	(___fldiv@b+3)^0,0,c
  4680   002AFA  EF81  F015         	goto	u3211
  4681   002AFE  EF83  F015         	goto	u3210
  4682   002B02                     u3211:
  4683   002B02  EF9A  F015         	goto	l3744
  4684   002B06                     u3210:
  4685   002B06                     
  4686                           ; BSR set to: 0
  4687   002B06  C053  F05B         	movff	___fldiv@b,??___fldiv
  4688   002B0A  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  4689   002B0E  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  4690   002B12  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  4691   002B16  345E               	rlcf	(??___fldiv+3)^0,w,c
  4692   002B18  325E               	rrcf	(??___fldiv+3)^0,f,c
  4693   002B1A  325D               	rrcf	(??___fldiv+2)^0,f,c
  4694   002B1C  325C               	rrcf	(??___fldiv+1)^0,f,c
  4695   002B1E  325B               	rrcf	??___fldiv^0,f,c
  4696   002B20  C05B  F053         	movff	??___fldiv,___fldiv@b
  4697   002B24  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  4698   002B28  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  4699   002B2C  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  4700   002B30                     
  4701                           ; BSR set to: 0
  4702   002B30  4BC7               	infsnz	___fldiv@new_exp& (0+255),f,b
  4703   002B32  2BC8               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4704   002B34                     l3744:
  4705                           
  4706                           ; BSR set to: 0
  4707   002B34  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4708   002B36  EFA5  F015         	goto	u3221
  4709   002B3A  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4710   002B3C  E108               	bnz	u3220
  4711   002B3E  29C7               	incf	___fldiv@new_exp& (0+255),w,b
  4712   002B40  A0D8               	btfss	status,0,c
  4713   002B42  EFA5  F015         	goto	u3221
  4714   002B46  EFA7  F015         	goto	u3220
  4715   002B4A                     u3221:
  4716   002B4A  EFB2  F015         	goto	l3748
  4717   002B4E                     u3220:
  4718   002B4E                     
  4719                           ; BSR set to: 0
  4720   002B4E  0E00               	movlw	0
  4721   002B50  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4722   002B52  69C7               	setf	___fldiv@new_exp& (0+255),b
  4723   002B54  0E00               	movlw	0
  4724   002B56  6E53               	movwf	___fldiv@b^0,c
  4725   002B58  0E00               	movlw	0
  4726   002B5A  6E54               	movwf	(___fldiv@b+1)^0,c
  4727   002B5C  0E00               	movlw	0
  4728   002B5E  6E55               	movwf	(___fldiv@b+2)^0,c
  4729   002B60  0E00               	movlw	0
  4730   002B62  6E56               	movwf	(___fldiv@b+3)^0,c
  4731   002B64                     l3748:
  4732                           
  4733                           ; BSR set to: 0
  4734   002B64  BFC8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4735   002B66  EFBF  F015         	goto	u3230
  4736   002B6A  51C8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4737   002B6C  E106               	bnz	u3231
  4738   002B6E  05C7               	decf	___fldiv@new_exp& (0+255),w,b
  4739   002B70  B0D8               	btfsc	status,0,c
  4740   002B72  EFBD  F015         	goto	u3231
  4741   002B76  EFBF  F015         	goto	u3230
  4742   002B7A                     u3231:
  4743   002B7A  EFCD  F015         	goto	l3752
  4744   002B7E                     u3230:
  4745   002B7E                     
  4746                           ; BSR set to: 0
  4747   002B7E  0E00               	movlw	0
  4748   002B80  6FC8               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4749   002B82  0E00               	movlw	0
  4750   002B84  6FC7               	movwf	___fldiv@new_exp& (0+255),b
  4751   002B86  0E00               	movlw	0
  4752   002B88  6E53               	movwf	___fldiv@b^0,c
  4753   002B8A  0E00               	movlw	0
  4754   002B8C  6E54               	movwf	(___fldiv@b+1)^0,c
  4755   002B8E  0E00               	movlw	0
  4756   002B90  6E55               	movwf	(___fldiv@b+2)^0,c
  4757   002B92  0E00               	movlw	0
  4758   002B94  6E56               	movwf	(___fldiv@b+3)^0,c
  4759   002B96  0E00               	movlw	0
  4760   002B98  6FC6               	movwf	___fldiv@sign& (0+255),b
  4761   002B9A                     l3752:
  4762                           
  4763                           ; BSR set to: 0
  4764   002B9A  C0C7  F0CD         	movff	___fldiv@new_exp,___fldiv@bexp
  4765   002B9E                     
  4766                           ; BSR set to: 0
  4767   002B9E  A1CD               	btfss	___fldiv@bexp& (0+255),0,b
  4768   002BA0  EFD4  F015         	goto	u3241
  4769   002BA4  EFD6  F015         	goto	u3240
  4770   002BA8                     u3241:
  4771   002BA8  EFD9  F015         	goto	l3758
  4772   002BAC                     u3240:
  4773   002BAC                     
  4774                           ; BSR set to: 0
  4775   002BAC  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4776   002BAE  EFDA  F015         	goto	l3760
  4777   002BB2                     l3758:
  4778                           
  4779                           ; BSR set to: 0
  4780   002BB2  9E55               	bcf	(___fldiv@b+2)^0,7,c
  4781   002BB4                     l3760:
  4782                           
  4783                           ; BSR set to: 0
  4784   002BB4  90D8               	bcf	status,0,c
  4785   002BB6  31CD               	rrcf	___fldiv@bexp& (0+255),w,b
  4786   002BB8  6E56               	movwf	(___fldiv@b+3)^0,c
  4787   002BBA  EF90  F014         	goto	l3674
  4788   002BBE                     l1294:
  4789                           
  4790                           ; BSR set to: 0
  4791   002BBE  0012               	return		;funcret
  4792   002BC0                     __end_of___fldiv:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _LED_init *****************
  4796 ;; Defined at:
  4797 ;;		line 4 in file "LED.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		None
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text25
  4826   0045F2                     __ptext25:
  4827                           	callstack 0
  4828   0045F2                     _LED_init:
  4829                           	callstack 29
  4830   0045F2                     
  4831                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  4832   0045F2  9884               	bcf	132,4,c	;volatile
  4833                           
  4834                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  4835   0045F4  9088               	bcf	136,0,c	;volatile
  4836                           
  4837                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  4838   0045F6  9086               	bcf	134,0,c	;volatile
  4839                           
  4840                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  4841   0045F8  987C               	bcf	124,4,c	;volatile
  4842                           
  4843                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  4844   0045FA  9080               	bcf	128,0,c	;volatile
  4845                           
  4846                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  4847   0045FC  907E               	bcf	126,0,c	;volatile
  4848   0045FE  0012               	return		;funcret
  4849   004600                     __end_of_LED_init:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _Interrupts_init *****************
  4853 ;; Defined at:
  4854 ;;		line 5 in file "interrupts.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		None
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text26
  4883   00460C                     __ptext26:
  4884                           	callstack 0
  4885   00460C                     _Interrupts_init:
  4886                           	callstack 29
  4887   00460C                     
  4888                           ;interrupts.c: 8:     PIE4bits.RC4IE=1;
  4889   00460C  010E               	movlb	14	; () banked
  4890   00460E  872D               	bsf	45,3,b	;volatile
  4891                           
  4892                           ;interrupts.c: 10:     INTCONbits.IPEN=1;
  4893   004610  8AF2               	bsf	242,5,c	;volatile
  4894                           
  4895                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  4896   004612  8CF2               	bsf	242,6,c	;volatile
  4897                           
  4898                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  4899   004614  8EF2               	bsf	242,7,c	;volatile
  4900   004616                     
  4901                           ; BSR set to: 14
  4902   004616  0012               	return		;funcret
  4903   004618                     __end_of_Interrupts_init:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _Hue2Colour *****************
  4907 ;; Defined at:
  4908 ;;		line 59 in file "colorfunctions.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  cf              2   86[COMRAM] PTR struct RGBC
  4911 ;;		 -> colorf(22), 
  4912 ;;  rel             2   88[COMRAM] PTR struct RGB_rel
  4913 ;;		 -> colorrel(12), 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  colourname      2   90[COMRAM] PTR unsigned char 
  4916 ;;		 -> STR_9(6), STR_8(7), STR_7(6), STR_6(11), 
  4917 ;;		 -> STR_5(7), STR_4(10), STR_3(5), STR_2(4), 
  4918 ;;		 -> STR_1(1), 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  2   86[COMRAM] PTR unsigned char 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:        6 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 2
  4935 ;; This function calls:
  4936 ;;		___flge
  4937 ;; This function is called by:
  4938 ;;		_main
  4939 ;;		_Color2String
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text27
  4944   001592                     __ptext27:
  4945                           	callstack 0
  4946   001592                     _Hue2Colour:
  4947                           	callstack 28
  4948   001592                     
  4949                           ;colorfunctions.c: 59: char* Hue2Colour(struct RGBC *cf, struct RGB_rel *rel);colorfunct
      +                          ions.c: 60: {;colorfunctions.c: 61:     char* colourname = "";
  4950   001592  0E2B               	movlw	low (STR_10+42)
  4951   001594  6E5B               	movwf	Hue2Colour@colourname^0,c
  4952   001596  0E0E               	movlw	high (STR_10+42)
  4953   001598  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  4954   00159A                     
  4955                           ;colorfunctions.c: 62:     if ((((cf->h)>0)&&((cf->h)<3)|((cf->h)>352)&&((cf->h)<=360)))
  4956   00159A  0E00               	movlw	0
  4957   00159C  6E4B               	movwf	___flge@ff1^0,c
  4958   00159E  0E00               	movlw	0
  4959   0015A0  6E4C               	movwf	(___flge@ff1+1)^0,c
  4960   0015A2  0E00               	movlw	0
  4961   0015A4  6E4D               	movwf	(___flge@ff1+2)^0,c
  4962   0015A6  0E00               	movlw	0
  4963   0015A8  6E4E               	movwf	(___flge@ff1+3)^0,c
  4964   0015AA  EE20 F010          	lfsr	2,16
  4965   0015AE  5057               	movf	Hue2Colour@cf^0,w,c
  4966   0015B0  26D9               	addwf	fsr2l,f,c
  4967   0015B2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  4968   0015B4  22DA               	addwfc	fsr2h,f,c
  4969   0015B6  CFDE F04F          	movff	postinc2,___flge@ff2
  4970   0015BA  CFDE F050          	movff	postinc2,___flge@ff2+1
  4971   0015BE  CFDE F051          	movff	postinc2,___flge@ff2+2
  4972   0015C2  CFDE F052          	movff	postinc2,___flge@ff2+3
  4973   0015C6  ECED  F01A         	call	___flge	;wreg free
  4974   0015CA  B0D8               	btfsc	status,0,c
  4975   0015CC  EFEA  F00A         	goto	u3481
  4976   0015D0  EFEC  F00A         	goto	u3480
  4977   0015D4                     u3481:
  4978   0015D4  EF59  F00B         	goto	l3938
  4979   0015D8                     u3480:
  4980   0015D8  EE20 F010          	lfsr	2,16
  4981   0015DC  5057               	movf	Hue2Colour@cf^0,w,c
  4982   0015DE  26D9               	addwf	fsr2l,f,c
  4983   0015E0  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  4984   0015E2  22DA               	addwfc	fsr2h,f,c
  4985   0015E4  CFDE F04B          	movff	postinc2,___flge@ff1
  4986   0015E8  CFDE F04C          	movff	postinc2,___flge@ff1+1
  4987   0015EC  CFDE F04D          	movff	postinc2,___flge@ff1+2
  4988   0015F0  CFDE F04E          	movff	postinc2,___flge@ff1+3
  4989   0015F4  0E00               	movlw	0
  4990   0015F6  6E4F               	movwf	___flge@ff2^0,c
  4991   0015F8  0E00               	movlw	0
  4992   0015FA  6E50               	movwf	(___flge@ff2+1)^0,c
  4993   0015FC  0E40               	movlw	64
  4994   0015FE  6E51               	movwf	(___flge@ff2+2)^0,c
  4995   001600  0E40               	movlw	64
  4996   001602  6E52               	movwf	(___flge@ff2+3)^0,c
  4997   001604  ECED  F01A         	call	___flge	;wreg free
  4998   001608  A0D8               	btfss	status,0,c
  4999   00160A  EF09  F00B         	goto	u3491
  5000   00160E  EF0B  F00B         	goto	u3490
  5001   001612                     u3491:
  5002   001612  EF2A  F00B         	goto	l3932
  5003   001616                     u3490:
  5004   001616  0E00               	movlw	0
  5005   001618  6E4B               	movwf	___flge@ff1^0,c
  5006   00161A  0E00               	movlw	0
  5007   00161C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5008   00161E  0EB0               	movlw	176
  5009   001620  6E4D               	movwf	(___flge@ff1+2)^0,c
  5010   001622  0E43               	movlw	67
  5011   001624  6E4E               	movwf	(___flge@ff1+3)^0,c
  5012   001626  EE20 F010          	lfsr	2,16
  5013   00162A  5057               	movf	Hue2Colour@cf^0,w,c
  5014   00162C  26D9               	addwf	fsr2l,f,c
  5015   00162E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5016   001630  22DA               	addwfc	fsr2h,f,c
  5017   001632  CFDE F04F          	movff	postinc2,___flge@ff2
  5018   001636  CFDE F050          	movff	postinc2,___flge@ff2+1
  5019   00163A  CFDE F051          	movff	postinc2,___flge@ff2+2
  5020   00163E  CFDE F052          	movff	postinc2,___flge@ff2+3
  5021   001642  ECED  F01A         	call	___flge	;wreg free
  5022   001646  B0D8               	btfsc	status,0,c
  5023   001648  EF28  F00B         	goto	u3501
  5024   00164C  EF2A  F00B         	goto	u3500
  5025   001650                     u3501:
  5026   001650  EF59  F00B         	goto	l3938
  5027   001654                     u3500:
  5028   001654                     l3932:
  5029   001654  0E00               	movlw	0
  5030   001656  6E4B               	movwf	___flge@ff1^0,c
  5031   001658  0E00               	movlw	0
  5032   00165A  6E4C               	movwf	(___flge@ff1+1)^0,c
  5033   00165C  0EB4               	movlw	180
  5034   00165E  6E4D               	movwf	(___flge@ff1+2)^0,c
  5035   001660  0E43               	movlw	67
  5036   001662  6E4E               	movwf	(___flge@ff1+3)^0,c
  5037   001664  EE20 F010          	lfsr	2,16
  5038   001668  5057               	movf	Hue2Colour@cf^0,w,c
  5039   00166A  26D9               	addwf	fsr2l,f,c
  5040   00166C  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5041   00166E  22DA               	addwfc	fsr2h,f,c
  5042   001670  CFDE F04F          	movff	postinc2,___flge@ff2
  5043   001674  CFDE F050          	movff	postinc2,___flge@ff2+1
  5044   001678  CFDE F051          	movff	postinc2,___flge@ff2+2
  5045   00167C  CFDE F052          	movff	postinc2,___flge@ff2+3
  5046   001680  ECED  F01A         	call	___flge	;wreg free
  5047   001684  A0D8               	btfss	status,0,c
  5048   001686  EF47  F00B         	goto	u3511
  5049   00168A  EF49  F00B         	goto	u3510
  5050   00168E                     u3511:
  5051   00168E  EF59  F00B         	goto	l3938
  5052   001692                     u3510:
  5053   001692                     
  5054                           ;colorfunctions.c: 63:     {;colorfunctions.c: 65:         colourname = "Red";
  5055   001692  0E60               	movlw	low STR_2
  5056   001694  6E5B               	movwf	Hue2Colour@colourname^0,c
  5057   001696  0E0E               	movlw	high STR_2
  5058   001698  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5059   00169A                     
  5060                           ;colorfunctions.c: 68:         cf->colourindex=0;
  5061   00169A  EE20 F014          	lfsr	2,20
  5062   00169E  5057               	movf	Hue2Colour@cf^0,w,c
  5063   0016A0  26D9               	addwf	fsr2l,f,c
  5064   0016A2  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5065   0016A4  22DA               	addwfc	fsr2h,f,c
  5066   0016A6  0E00               	movlw	0
  5067   0016A8  6EDE               	movwf	postinc2,c
  5068   0016AA  0E00               	movlw	0
  5069   0016AC  6EDD               	movwf	postdec2,c
  5070                           
  5071                           ;colorfunctions.c: 69:     }
  5072   0016AE  EF45  F00D         	goto	l3992
  5073   0016B2                     l3938:
  5074   0016B2  0E00               	movlw	0
  5075   0016B4  6E4B               	movwf	___flge@ff1^0,c
  5076   0016B6  0E00               	movlw	0
  5077   0016B8  6E4C               	movwf	(___flge@ff1+1)^0,c
  5078   0016BA  0E60               	movlw	96
  5079   0016BC  6E4D               	movwf	(___flge@ff1+2)^0,c
  5080   0016BE  0E41               	movlw	65
  5081   0016C0  6E4E               	movwf	(___flge@ff1+3)^0,c
  5082   0016C2  EE20 F010          	lfsr	2,16
  5083   0016C6  5057               	movf	Hue2Colour@cf^0,w,c
  5084   0016C8  26D9               	addwf	fsr2l,f,c
  5085   0016CA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5086   0016CC  22DA               	addwfc	fsr2h,f,c
  5087   0016CE  CFDE F04F          	movff	postinc2,___flge@ff2
  5088   0016D2  CFDE F050          	movff	postinc2,___flge@ff2+1
  5089   0016D6  CFDE F051          	movff	postinc2,___flge@ff2+2
  5090   0016DA  CFDE F052          	movff	postinc2,___flge@ff2+3
  5091   0016DE  ECED  F01A         	call	___flge	;wreg free
  5092   0016E2  B0D8               	btfsc	status,0,c
  5093   0016E4  EF76  F00B         	goto	u3521
  5094   0016E8  EF78  F00B         	goto	u3520
  5095   0016EC                     u3521:
  5096   0016EC  EFA7  F00B         	goto	l3946
  5097   0016F0                     u3520:
  5098   0016F0  EE20 F010          	lfsr	2,16
  5099   0016F4  5057               	movf	Hue2Colour@cf^0,w,c
  5100   0016F6  26D9               	addwf	fsr2l,f,c
  5101   0016F8  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5102   0016FA  22DA               	addwfc	fsr2h,f,c
  5103   0016FC  CFDE F04B          	movff	postinc2,___flge@ff1
  5104   001700  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5105   001704  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5106   001708  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5107   00170C  0E00               	movlw	0
  5108   00170E  6E4F               	movwf	___flge@ff2^0,c
  5109   001710  0E00               	movlw	0
  5110   001712  6E50               	movwf	(___flge@ff2+1)^0,c
  5111   001714  0E90               	movlw	144
  5112   001716  6E51               	movwf	(___flge@ff2+2)^0,c
  5113   001718  0E41               	movlw	65
  5114   00171A  6E52               	movwf	(___flge@ff2+3)^0,c
  5115   00171C  ECED  F01A         	call	___flge	;wreg free
  5116   001720  B0D8               	btfsc	status,0,c
  5117   001722  EF95  F00B         	goto	u3531
  5118   001726  EF97  F00B         	goto	u3530
  5119   00172A                     u3531:
  5120   00172A  EFA7  F00B         	goto	l3946
  5121   00172E                     u3530:
  5122   00172E                     
  5123                           ;colorfunctions.c: 71:     {;colorfunctions.c: 72:         colourname = "Pink";
  5124   00172E  0E5B               	movlw	low STR_3
  5125   001730  6E5B               	movwf	Hue2Colour@colourname^0,c
  5126   001732  0E0E               	movlw	high STR_3
  5127   001734  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5128   001736                     
  5129                           ;colorfunctions.c: 73:         cf->colourindex=4;
  5130   001736  EE20 F014          	lfsr	2,20
  5131   00173A  5057               	movf	Hue2Colour@cf^0,w,c
  5132   00173C  26D9               	addwf	fsr2l,f,c
  5133   00173E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5134   001740  22DA               	addwfc	fsr2h,f,c
  5135   001742  0E04               	movlw	4
  5136   001744  6EDE               	movwf	postinc2,c
  5137   001746  0E00               	movlw	0
  5138   001748  6EDD               	movwf	postdec2,c
  5139                           
  5140                           ;colorfunctions.c: 74:     }
  5141   00174A  EF45  F00D         	goto	l3992
  5142   00174E                     l3946:
  5143   00174E  0E00               	movlw	0
  5144   001750  6E4B               	movwf	___flge@ff1^0,c
  5145   001752  0E00               	movlw	0
  5146   001754  6E4C               	movwf	(___flge@ff1+1)^0,c
  5147   001756  0EAA               	movlw	170
  5148   001758  6E4D               	movwf	(___flge@ff1+2)^0,c
  5149   00175A  0E42               	movlw	66
  5150   00175C  6E4E               	movwf	(___flge@ff1+3)^0,c
  5151   00175E  EE20 F010          	lfsr	2,16
  5152   001762  5057               	movf	Hue2Colour@cf^0,w,c
  5153   001764  26D9               	addwf	fsr2l,f,c
  5154   001766  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5155   001768  22DA               	addwfc	fsr2h,f,c
  5156   00176A  CFDE F04F          	movff	postinc2,___flge@ff2
  5157   00176E  CFDE F050          	movff	postinc2,___flge@ff2+1
  5158   001772  CFDE F051          	movff	postinc2,___flge@ff2+2
  5159   001776  CFDE F052          	movff	postinc2,___flge@ff2+3
  5160   00177A  ECED  F01A         	call	___flge	;wreg free
  5161   00177E  B0D8               	btfsc	status,0,c
  5162   001780  EFC4  F00B         	goto	u3541
  5163   001784  EFC6  F00B         	goto	u3540
  5164   001788                     u3541:
  5165   001788  EFF5  F00B         	goto	l3954
  5166   00178C                     u3540:
  5167   00178C  EE20 F010          	lfsr	2,16
  5168   001790  5057               	movf	Hue2Colour@cf^0,w,c
  5169   001792  26D9               	addwf	fsr2l,f,c
  5170   001794  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5171   001796  22DA               	addwfc	fsr2h,f,c
  5172   001798  CFDE F04B          	movff	postinc2,___flge@ff1
  5173   00179C  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5174   0017A0  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5175   0017A4  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5176   0017A8  0E00               	movlw	0
  5177   0017AA  6E4F               	movwf	___flge@ff2^0,c
  5178   0017AC  0E00               	movlw	0
  5179   0017AE  6E50               	movwf	(___flge@ff2+1)^0,c
  5180   0017B0  0E02               	movlw	2
  5181   0017B2  6E51               	movwf	(___flge@ff2+2)^0,c
  5182   0017B4  0E43               	movlw	67
  5183   0017B6  6E52               	movwf	(___flge@ff2+3)^0,c
  5184   0017B8  ECED  F01A         	call	___flge	;wreg free
  5185   0017BC  B0D8               	btfsc	status,0,c
  5186   0017BE  EFE3  F00B         	goto	u3551
  5187   0017C2  EFE5  F00B         	goto	u3550
  5188   0017C6                     u3551:
  5189   0017C6  EFF5  F00B         	goto	l3954
  5190   0017CA                     u3550:
  5191   0017CA                     
  5192                           ;colorfunctions.c: 76:      {colourname = "Dark Blue";
  5193   0017CA  0E37               	movlw	low STR_4
  5194   0017CC  6E5B               	movwf	Hue2Colour@colourname^0,c
  5195   0017CE  0E0E               	movlw	high STR_4
  5196   0017D0  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5197   0017D2                     
  5198                           ;colorfunctions.c: 77:         cf->colourindex=2;}
  5199   0017D2  EE20 F014          	lfsr	2,20
  5200   0017D6  5057               	movf	Hue2Colour@cf^0,w,c
  5201   0017D8  26D9               	addwf	fsr2l,f,c
  5202   0017DA  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5203   0017DC  22DA               	addwfc	fsr2h,f,c
  5204   0017DE  0E02               	movlw	2
  5205   0017E0  6EDE               	movwf	postinc2,c
  5206   0017E2  0E00               	movlw	0
  5207   0017E4  6EDD               	movwf	postdec2,c
  5208   0017E6  EF45  F00D         	goto	l3992
  5209   0017EA                     l3954:
  5210   0017EA  0E00               	movlw	0
  5211   0017EC  6E4B               	movwf	___flge@ff1^0,c
  5212   0017EE  0E00               	movlw	0
  5213   0017F0  6E4C               	movwf	(___flge@ff1+1)^0,c
  5214   0017F2  0EC0               	movlw	192
  5215   0017F4  6E4D               	movwf	(___flge@ff1+2)^0,c
  5216   0017F6  0E40               	movlw	64
  5217   0017F8  6E4E               	movwf	(___flge@ff1+3)^0,c
  5218   0017FA  EE20 F010          	lfsr	2,16
  5219   0017FE  5057               	movf	Hue2Colour@cf^0,w,c
  5220   001800  26D9               	addwf	fsr2l,f,c
  5221   001802  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5222   001804  22DA               	addwfc	fsr2h,f,c
  5223   001806  CFDE F04F          	movff	postinc2,___flge@ff2
  5224   00180A  CFDE F050          	movff	postinc2,___flge@ff2+1
  5225   00180E  CFDE F051          	movff	postinc2,___flge@ff2+2
  5226   001812  CFDE F052          	movff	postinc2,___flge@ff2+3
  5227   001816  ECED  F01A         	call	___flge	;wreg free
  5228   00181A  B0D8               	btfsc	status,0,c
  5229   00181C  EF12  F00C         	goto	u3561
  5230   001820  EF14  F00C         	goto	u3560
  5231   001824                     u3561:
  5232   001824  EF43  F00C         	goto	l3962
  5233   001828                     u3560:
  5234   001828  EE20 F010          	lfsr	2,16
  5235   00182C  5057               	movf	Hue2Colour@cf^0,w,c
  5236   00182E  26D9               	addwf	fsr2l,f,c
  5237   001830  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5238   001832  22DA               	addwfc	fsr2h,f,c
  5239   001834  CFDE F04B          	movff	postinc2,___flge@ff1
  5240   001838  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5241   00183C  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5242   001840  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5243   001844  0E00               	movlw	0
  5244   001846  6E4F               	movwf	___flge@ff2^0,c
  5245   001848  0E00               	movlw	0
  5246   00184A  6E50               	movwf	(___flge@ff2+1)^0,c
  5247   00184C  0E40               	movlw	64
  5248   00184E  6E51               	movwf	(___flge@ff2+2)^0,c
  5249   001850  0E41               	movlw	65
  5250   001852  6E52               	movwf	(___flge@ff2+3)^0,c
  5251   001854  ECED  F01A         	call	___flge	;wreg free
  5252   001858  B0D8               	btfsc	status,0,c
  5253   00185A  EF31  F00C         	goto	u3571
  5254   00185E  EF33  F00C         	goto	u3570
  5255   001862                     u3571:
  5256   001862  EF43  F00C         	goto	l3962
  5257   001866                     u3570:
  5258   001866                     
  5259                           ;colorfunctions.c: 79:     {;colorfunctions.c: 80:         colourname = "Orange";
  5260   001866  0E41               	movlw	low STR_5
  5261   001868  6E5B               	movwf	Hue2Colour@colourname^0,c
  5262   00186A  0E0E               	movlw	high STR_5
  5263   00186C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5264   00186E                     
  5265                           ;colorfunctions.c: 81:         cf->colourindex=5;
  5266   00186E  EE20 F014          	lfsr	2,20
  5267   001872  5057               	movf	Hue2Colour@cf^0,w,c
  5268   001874  26D9               	addwf	fsr2l,f,c
  5269   001876  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5270   001878  22DA               	addwfc	fsr2h,f,c
  5271   00187A  0E05               	movlw	5
  5272   00187C  6EDE               	movwf	postinc2,c
  5273   00187E  0E00               	movlw	0
  5274   001880  6EDD               	movwf	postdec2,c
  5275                           
  5276                           ;colorfunctions.c: 82:     }
  5277   001882  EF45  F00D         	goto	l3992
  5278   001886                     l3962:
  5279   001886  0E00               	movlw	0
  5280   001888  6E4B               	movwf	___flge@ff1^0,c
  5281   00188A  0E00               	movlw	0
  5282   00188C  6E4C               	movwf	(___flge@ff1+1)^0,c
  5283   00188E  0E82               	movlw	130
  5284   001890  6E4D               	movwf	(___flge@ff1+2)^0,c
  5285   001892  0E42               	movlw	66
  5286   001894  6E4E               	movwf	(___flge@ff1+3)^0,c
  5287   001896  EE20 F010          	lfsr	2,16
  5288   00189A  5057               	movf	Hue2Colour@cf^0,w,c
  5289   00189C  26D9               	addwf	fsr2l,f,c
  5290   00189E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5291   0018A0  22DA               	addwfc	fsr2h,f,c
  5292   0018A2  CFDE F04F          	movff	postinc2,___flge@ff2
  5293   0018A6  CFDE F050          	movff	postinc2,___flge@ff2+1
  5294   0018AA  CFDE F051          	movff	postinc2,___flge@ff2+2
  5295   0018AE  CFDE F052          	movff	postinc2,___flge@ff2+3
  5296   0018B2  ECED  F01A         	call	___flge	;wreg free
  5297   0018B6  B0D8               	btfsc	status,0,c
  5298   0018B8  EF60  F00C         	goto	u3581
  5299   0018BC  EF62  F00C         	goto	u3580
  5300   0018C0                     u3581:
  5301   0018C0  EFC0  F00C         	goto	l3976
  5302   0018C4                     u3580:
  5303   0018C4  EE20 F010          	lfsr	2,16
  5304   0018C8  5057               	movf	Hue2Colour@cf^0,w,c
  5305   0018CA  26D9               	addwf	fsr2l,f,c
  5306   0018CC  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5307   0018CE  22DA               	addwfc	fsr2h,f,c
  5308   0018D0  CFDE F04B          	movff	postinc2,___flge@ff1
  5309   0018D4  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5310   0018D8  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5311   0018DC  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5312   0018E0  0E00               	movlw	0
  5313   0018E2  6E4F               	movwf	___flge@ff2^0,c
  5314   0018E4  0E00               	movlw	0
  5315   0018E6  6E50               	movwf	(___flge@ff2+1)^0,c
  5316   0018E8  0EA0               	movlw	160
  5317   0018EA  6E51               	movwf	(___flge@ff2+2)^0,c
  5318   0018EC  0E42               	movlw	66
  5319   0018EE  6E52               	movwf	(___flge@ff2+3)^0,c
  5320   0018F0  ECED  F01A         	call	___flge	;wreg free
  5321   0018F4  B0D8               	btfsc	status,0,c
  5322   0018F6  EF7F  F00C         	goto	u3591
  5323   0018FA  EF81  F00C         	goto	u3590
  5324   0018FE                     u3591:
  5325   0018FE  EFC0  F00C         	goto	l3976
  5326   001902                     u3590:
  5327   001902                     
  5328                           ;colorfunctions.c: 84:     {;colorfunctions.c: 87:         if (rel->B > 0.22)
  5329   001902  0EAE               	movlw	174
  5330   001904  6E4B               	movwf	___flge@ff1^0,c
  5331   001906  0E47               	movlw	71
  5332   001908  6E4C               	movwf	(___flge@ff1+1)^0,c
  5333   00190A  0E61               	movlw	97
  5334   00190C  6E4D               	movwf	(___flge@ff1+2)^0,c
  5335   00190E  0E3E               	movlw	62
  5336   001910  6E4E               	movwf	(___flge@ff1+3)^0,c
  5337   001912  EE20 F008          	lfsr	2,8
  5338   001916  5059               	movf	Hue2Colour@rel^0,w,c
  5339   001918  26D9               	addwf	fsr2l,f,c
  5340   00191A  505A               	movf	(Hue2Colour@rel+1)^0,w,c
  5341   00191C  22DA               	addwfc	fsr2h,f,c
  5342   00191E  CFDE F04F          	movff	postinc2,___flge@ff2
  5343   001922  CFDE F050          	movff	postinc2,___flge@ff2+1
  5344   001926  CFDE F051          	movff	postinc2,___flge@ff2+2
  5345   00192A  CFDE F052          	movff	postinc2,___flge@ff2+3
  5346   00192E  ECED  F01A         	call	___flge	;wreg free
  5347   001932  B0D8               	btfsc	status,0,c
  5348   001934  EF9E  F00C         	goto	u3601
  5349   001938  EFA0  F00C         	goto	u3600
  5350   00193C                     u3601:
  5351   00193C  EFB0  F00C         	goto	l3972
  5352   001940                     u3600:
  5353   001940                     
  5354                           ;colorfunctions.c: 88:         { colourname = "Light Blue";
  5355   001940  0E2C               	movlw	low STR_6
  5356   001942  6E5B               	movwf	Hue2Colour@colourname^0,c
  5357   001944  0E0E               	movlw	high STR_6
  5358   001946  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5359   001948                     
  5360                           ;colorfunctions.c: 89:         cf->colourindex=6;}
  5361   001948  EE20 F014          	lfsr	2,20
  5362   00194C  5057               	movf	Hue2Colour@cf^0,w,c
  5363   00194E  26D9               	addwf	fsr2l,f,c
  5364   001950  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5365   001952  22DA               	addwfc	fsr2h,f,c
  5366   001954  0E06               	movlw	6
  5367   001956  6EDE               	movwf	postinc2,c
  5368   001958  0E00               	movlw	0
  5369   00195A  6EDD               	movwf	postdec2,c
  5370   00195C  EF45  F00D         	goto	l3992
  5371   001960                     l3972:
  5372                           
  5373                           ;colorfunctions.c: 91:             colourname = "Green";
  5374   001960  0E55               	movlw	low STR_7
  5375   001962  6E5B               	movwf	Hue2Colour@colourname^0,c
  5376   001964  0E0E               	movlw	high STR_7
  5377   001966  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5378   001968                     
  5379                           ;colorfunctions.c: 92:         cf->colourindex=1;
  5380   001968  EE20 F014          	lfsr	2,20
  5381   00196C  5057               	movf	Hue2Colour@cf^0,w,c
  5382   00196E  26D9               	addwf	fsr2l,f,c
  5383   001970  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5384   001972  22DA               	addwfc	fsr2h,f,c
  5385   001974  0E01               	movlw	1
  5386   001976  6EDE               	movwf	postinc2,c
  5387   001978  0E00               	movlw	0
  5388   00197A  6EDD               	movwf	postdec2,c
  5389   00197C  EF45  F00D         	goto	l3992
  5390   001980                     l3976:
  5391   001980  0E00               	movlw	0
  5392   001982  6E4B               	movwf	___flge@ff1^0,c
  5393   001984  0E00               	movlw	0
  5394   001986  6E4C               	movwf	(___flge@ff1+1)^0,c
  5395   001988  0E90               	movlw	144
  5396   00198A  6E4D               	movwf	(___flge@ff1+2)^0,c
  5397   00198C  0E41               	movlw	65
  5398   00198E  6E4E               	movwf	(___flge@ff1+3)^0,c
  5399   001990  EE20 F010          	lfsr	2,16
  5400   001994  5057               	movf	Hue2Colour@cf^0,w,c
  5401   001996  26D9               	addwf	fsr2l,f,c
  5402   001998  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5403   00199A  22DA               	addwfc	fsr2h,f,c
  5404   00199C  CFDE F04F          	movff	postinc2,___flge@ff2
  5405   0019A0  CFDE F050          	movff	postinc2,___flge@ff2+1
  5406   0019A4  CFDE F051          	movff	postinc2,___flge@ff2+2
  5407   0019A8  CFDE F052          	movff	postinc2,___flge@ff2+3
  5408   0019AC  ECED  F01A         	call	___flge	;wreg free
  5409   0019B0  B0D8               	btfsc	status,0,c
  5410   0019B2  EFDD  F00C         	goto	u3611
  5411   0019B6  EFDF  F00C         	goto	u3610
  5412   0019BA                     u3611:
  5413   0019BA  EF3B  F00D         	goto	l3990
  5414   0019BE                     u3610:
  5415   0019BE  EE20 F010          	lfsr	2,16
  5416   0019C2  5057               	movf	Hue2Colour@cf^0,w,c
  5417   0019C4  26D9               	addwf	fsr2l,f,c
  5418   0019C6  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5419   0019C8  22DA               	addwfc	fsr2h,f,c
  5420   0019CA  CFDE F04B          	movff	postinc2,___flge@ff1
  5421   0019CE  CFDE F04C          	movff	postinc2,___flge@ff1+1
  5422   0019D2  CFDE F04D          	movff	postinc2,___flge@ff1+2
  5423   0019D6  CFDE F04E          	movff	postinc2,___flge@ff1+3
  5424   0019DA  0E00               	movlw	0
  5425   0019DC  6E4F               	movwf	___flge@ff2^0,c
  5426   0019DE  0E00               	movlw	0
  5427   0019E0  6E50               	movwf	(___flge@ff2+1)^0,c
  5428   0019E2  0ED8               	movlw	216
  5429   0019E4  6E51               	movwf	(___flge@ff2+2)^0,c
  5430   0019E6  0E41               	movlw	65
  5431   0019E8  6E52               	movwf	(___flge@ff2+3)^0,c
  5432   0019EA  ECED  F01A         	call	___flge	;wreg free
  5433   0019EE  B0D8               	btfsc	status,0,c
  5434   0019F0  EFFC  F00C         	goto	u3621
  5435   0019F4  EFFE  F00C         	goto	u3620
  5436   0019F8                     u3621:
  5437   0019F8  EF3B  F00D         	goto	l3990
  5438   0019FC                     u3620:
  5439   0019FC                     
  5440                           ;colorfunctions.c: 96:     {;colorfunctions.c: 97:         if (rel->R > 0.51)
  5441   0019FC  0E5C               	movlw	92
  5442   0019FE  6E4B               	movwf	___flge@ff1^0,c
  5443   001A00  0E8F               	movlw	143
  5444   001A02  6E4C               	movwf	(___flge@ff1+1)^0,c
  5445   001A04  0E02               	movlw	2
  5446   001A06  6E4D               	movwf	(___flge@ff1+2)^0,c
  5447   001A08  0E3F               	movlw	63
  5448   001A0A  6E4E               	movwf	(___flge@ff1+3)^0,c
  5449   001A0C  C059  FFD9         	movff	Hue2Colour@rel,fsr2l
  5450   001A10  C05A  FFDA         	movff	Hue2Colour@rel+1,fsr2h
  5451   001A14  CFDE F04F          	movff	postinc2,___flge@ff2
  5452   001A18  CFDE F050          	movff	postinc2,___flge@ff2+1
  5453   001A1C  CFDE F051          	movff	postinc2,___flge@ff2+2
  5454   001A20  CFDE F052          	movff	postinc2,___flge@ff2+3
  5455   001A24  ECED  F01A         	call	___flge	;wreg free
  5456   001A28  B0D8               	btfsc	status,0,c
  5457   001A2A  EF19  F00D         	goto	u3631
  5458   001A2E  EF1B  F00D         	goto	u3630
  5459   001A32                     u3631:
  5460   001A32  EF2B  F00D         	goto	l3986
  5461   001A36                     u3630:
  5462   001A36                     
  5463                           ;colorfunctions.c: 98:         {;colorfunctions.c: 99:                   colourname = "Y
      +                          ellow";
  5464   001A36  0E48               	movlw	low STR_8
  5465   001A38  6E5B               	movwf	Hue2Colour@colourname^0,c
  5466   001A3A  0E0E               	movlw	high STR_8
  5467   001A3C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5468   001A3E                     
  5469                           ;colorfunctions.c: 100:         cf->colourindex=3;
  5470   001A3E  EE20 F014          	lfsr	2,20
  5471   001A42  5057               	movf	Hue2Colour@cf^0,w,c
  5472   001A44  26D9               	addwf	fsr2l,f,c
  5473   001A46  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5474   001A48  22DA               	addwfc	fsr2h,f,c
  5475   001A4A  0E03               	movlw	3
  5476   001A4C  6EDE               	movwf	postinc2,c
  5477   001A4E  0E00               	movlw	0
  5478   001A50  6EDD               	movwf	postdec2,c
  5479                           
  5480                           ;colorfunctions.c: 101:             }
  5481   001A52  EF45  F00D         	goto	l3992
  5482   001A56                     l3986:
  5483                           
  5484                           ;colorfunctions.c: 103:             colourname = "White";
  5485   001A56  0E4F               	movlw	low STR_9
  5486   001A58  6E5B               	movwf	Hue2Colour@colourname^0,c
  5487   001A5A  0E0E               	movlw	high STR_9
  5488   001A5C  6E5C               	movwf	(Hue2Colour@colourname+1)^0,c
  5489   001A5E                     
  5490                           ;colorfunctions.c: 104:        cf->colourindex=7;
  5491   001A5E  EE20 F014          	lfsr	2,20
  5492   001A62  5057               	movf	Hue2Colour@cf^0,w,c
  5493   001A64  26D9               	addwf	fsr2l,f,c
  5494   001A66  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5495   001A68  22DA               	addwfc	fsr2h,f,c
  5496   001A6A  0E07               	movlw	7
  5497   001A6C  6EDE               	movwf	postinc2,c
  5498   001A6E  0E00               	movlw	0
  5499   001A70  6EDD               	movwf	postdec2,c
  5500   001A72  EF45  F00D         	goto	l3992
  5501   001A76                     l3990:
  5502   001A76  EE20 F014          	lfsr	2,20
  5503   001A7A  5057               	movf	Hue2Colour@cf^0,w,c
  5504   001A7C  26D9               	addwf	fsr2l,f,c
  5505   001A7E  5058               	movf	(Hue2Colour@cf+1)^0,w,c
  5506   001A80  22DA               	addwfc	fsr2h,f,c
  5507   001A82  0E08               	movlw	8
  5508   001A84  6EDE               	movwf	postinc2,c
  5509   001A86  0E00               	movlw	0
  5510   001A88  6EDD               	movwf	postdec2,c
  5511   001A8A                     l3992:
  5512                           
  5513                           ;colorfunctions.c: 108:     return colourname;
  5514   001A8A  C05B  F057         	movff	Hue2Colour@colourname,?_Hue2Colour
  5515   001A8E  C05C  F058         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
  5516   001A92  0012               	return		;funcret
  5517   001A94                     __end_of_Hue2Colour:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _Colour2Action *****************
  5521 ;; Defined at:
  5522 ;;		line 111 in file "colorfunctions.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  cf              2   90[COMRAM] PTR struct RGBC
  5525 ;;		 -> colorf(22), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;Total ram usage:        4 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 8
  5544 ;; This function calls:
  5545 ;;		_Blue_T180
  5546 ;;		_Green_L90
  5547 ;;		_LightBlue_L135
  5548 ;;		_Orange_R135
  5549 ;;		_Pink_rev1_L90
  5550 ;;		_Red_R90
  5551 ;;		_White
  5552 ;;		_Yellow_rev1_R90
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text28
  5559   003000                     __ptext28:
  5560                           	callstack 0
  5561   003000                     _Colour2Action:
  5562                           	callstack 22
  5563   003000                     
  5564                           ;colorfunctions.c: 111: void Colour2Action(struct RGBC *cf);colorfunctions.c: 112: {;col
      +                          orfunctions.c: 113:     if (cf->colourindex == 0)
  5565   003000  EE20 F014          	lfsr	2,20
  5566   003004  505B               	movf	Colour2Action@cf^0,w,c
  5567   003006  26D9               	addwf	fsr2l,f,c
  5568   003008  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5569   00300A  22DA               	addwfc	fsr2h,f,c
  5570   00300C  50DE               	movf	postinc2,w,c
  5571   00300E  10DE               	iorwf	postinc2,w,c
  5572   003010  A4D8               	btfss	status,2,c
  5573   003012  EF0D  F018         	goto	u3641
  5574   003016  EF0F  F018         	goto	u3640
  5575   00301A                     u3641:
  5576   00301A  EF1B  F018         	goto	l4000
  5577   00301E                     u3640:
  5578   00301E                     
  5579                           ;colorfunctions.c: 114:     {;colorfunctions.c: 115:         Red_R90(&motorL,&motorR);
  5580   00301E  0EB9               	movlw	low _motorL
  5581   003020  6E21               	movwf	Red_R90@mL^0,c
  5582   003022  0E00               	movlw	high _motorL
  5583   003024  6E22               	movwf	(Red_R90@mL+1)^0,c
  5584   003026  0EB0               	movlw	low _motorR
  5585   003028  6E23               	movwf	Red_R90@mR^0,c
  5586   00302A  0E00               	movlw	high _motorR
  5587   00302C  6E24               	movwf	(Red_R90@mR+1)^0,c
  5588   00302E  EC8D  F01F         	call	_Red_R90	;wreg free
  5589                           
  5590                           ;colorfunctions.c: 116:     }
  5591   003032  EFD9  F018         	goto	l163
  5592   003036                     l4000:
  5593   003036  EE20 F014          	lfsr	2,20
  5594   00303A  505B               	movf	Colour2Action@cf^0,w,c
  5595   00303C  26D9               	addwf	fsr2l,f,c
  5596   00303E  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5597   003040  22DA               	addwfc	fsr2h,f,c
  5598   003042  04DE               	decf	postinc2,w,c
  5599   003044  10DE               	iorwf	postinc2,w,c
  5600   003046  A4D8               	btfss	status,2,c
  5601   003048  EF28  F018         	goto	u3651
  5602   00304C  EF2A  F018         	goto	u3650
  5603   003050                     u3651:
  5604   003050  EF36  F018         	goto	l4004
  5605   003054                     u3650:
  5606   003054                     
  5607                           ;colorfunctions.c: 118:     {;colorfunctions.c: 119:         Green_L90(&motorL,&motorR);
  5608   003054  0EB9               	movlw	low _motorL
  5609   003056  6E21               	movwf	Green_L90@mL^0,c
  5610   003058  0E00               	movlw	high _motorL
  5611   00305A  6E22               	movwf	(Green_L90@mL+1)^0,c
  5612   00305C  0EB0               	movlw	low _motorR
  5613   00305E  6E23               	movwf	Green_L90@mR^0,c
  5614   003060  0E00               	movlw	high _motorR
  5615   003062  6E24               	movwf	(Green_L90@mR+1)^0,c
  5616   003064  ECCB  F01F         	call	_Green_L90	;wreg free
  5617                           
  5618                           ;colorfunctions.c: 120:     }
  5619   003068  EFD9  F018         	goto	l163
  5620   00306C                     l4004:
  5621   00306C  EE20 F014          	lfsr	2,20
  5622   003070  505B               	movf	Colour2Action@cf^0,w,c
  5623   003072  26D9               	addwf	fsr2l,f,c
  5624   003074  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5625   003076  22DA               	addwfc	fsr2h,f,c
  5626   003078  0E02               	movlw	2
  5627   00307A  18DE               	xorwf	postinc2,w,c
  5628   00307C  10DE               	iorwf	postinc2,w,c
  5629   00307E  A4D8               	btfss	status,2,c
  5630   003080  EF44  F018         	goto	u3661
  5631   003084  EF46  F018         	goto	u3660
  5632   003088                     u3661:
  5633   003088  EF52  F018         	goto	l4008
  5634   00308C                     u3660:
  5635   00308C                     
  5636                           ;colorfunctions.c: 122:     {;colorfunctions.c: 123:         Blue_T180(&motorL,&motorR);
  5637   00308C  0EB9               	movlw	low _motorL
  5638   00308E  6E24               	movwf	Blue_T180@mL^0,c
  5639   003090  0E00               	movlw	high _motorL
  5640   003092  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5641   003094  0EB0               	movlw	low _motorR
  5642   003096  6E26               	movwf	Blue_T180@mR^0,c
  5643   003098  0E00               	movlw	high _motorR
  5644   00309A  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5645   00309C  ECDC  F020         	call	_Blue_T180	;wreg free
  5646                           
  5647                           ;colorfunctions.c: 124:     }
  5648   0030A0  EFD9  F018         	goto	l163
  5649   0030A4                     l4008:
  5650   0030A4  EE20 F014          	lfsr	2,20
  5651   0030A8  505B               	movf	Colour2Action@cf^0,w,c
  5652   0030AA  26D9               	addwf	fsr2l,f,c
  5653   0030AC  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5654   0030AE  22DA               	addwfc	fsr2h,f,c
  5655   0030B0  0E03               	movlw	3
  5656   0030B2  18DE               	xorwf	postinc2,w,c
  5657   0030B4  10DE               	iorwf	postinc2,w,c
  5658   0030B6  A4D8               	btfss	status,2,c
  5659   0030B8  EF60  F018         	goto	u3671
  5660   0030BC  EF62  F018         	goto	u3670
  5661   0030C0                     u3671:
  5662   0030C0  EF6E  F018         	goto	l4012
  5663   0030C4                     u3670:
  5664   0030C4                     
  5665                           ;colorfunctions.c: 126:     {;colorfunctions.c: 127:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5666   0030C4  0EB9               	movlw	low _motorL
  5667   0030C6  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5668   0030C8  0E00               	movlw	high _motorL
  5669   0030CA  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5670   0030CC  0EB0               	movlw	low _motorR
  5671   0030CE  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5672   0030D0  0E00               	movlw	high _motorR
  5673   0030D2  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5674   0030D4  ECC4  F01B         	call	_Yellow_rev1_R90	;wreg free
  5675                           
  5676                           ;colorfunctions.c: 128:     }
  5677   0030D8  EFD9  F018         	goto	l163
  5678   0030DC                     l4012:
  5679   0030DC  EE20 F014          	lfsr	2,20
  5680   0030E0  505B               	movf	Colour2Action@cf^0,w,c
  5681   0030E2  26D9               	addwf	fsr2l,f,c
  5682   0030E4  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5683   0030E6  22DA               	addwfc	fsr2h,f,c
  5684   0030E8  0E04               	movlw	4
  5685   0030EA  18DE               	xorwf	postinc2,w,c
  5686   0030EC  10DE               	iorwf	postinc2,w,c
  5687   0030EE  A4D8               	btfss	status,2,c
  5688   0030F0  EF7C  F018         	goto	u3681
  5689   0030F4  EF7E  F018         	goto	u3680
  5690   0030F8                     u3681:
  5691   0030F8  EF8A  F018         	goto	l4016
  5692   0030FC                     u3680:
  5693   0030FC                     
  5694                           ;colorfunctions.c: 130:     {;colorfunctions.c: 131:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5695   0030FC  0EB9               	movlw	low _motorL
  5696   0030FE  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5697   003100  0E00               	movlw	high _motorL
  5698   003102  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5699   003104  0EB0               	movlw	low _motorR
  5700   003106  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5701   003108  0E00               	movlw	high _motorR
  5702   00310A  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5703   00310C  EC18  F01C         	call	_Pink_rev1_L90	;wreg free
  5704                           
  5705                           ;colorfunctions.c: 132:     }
  5706   003110  EFD9  F018         	goto	l163
  5707   003114                     l4016:
  5708   003114  EE20 F014          	lfsr	2,20
  5709   003118  505B               	movf	Colour2Action@cf^0,w,c
  5710   00311A  26D9               	addwf	fsr2l,f,c
  5711   00311C  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5712   00311E  22DA               	addwfc	fsr2h,f,c
  5713   003120  0E05               	movlw	5
  5714   003122  18DE               	xorwf	postinc2,w,c
  5715   003124  10DE               	iorwf	postinc2,w,c
  5716   003126  A4D8               	btfss	status,2,c
  5717   003128  EF98  F018         	goto	u3691
  5718   00312C  EF9A  F018         	goto	u3690
  5719   003130                     u3691:
  5720   003130  EFA6  F018         	goto	l4020
  5721   003134                     u3690:
  5722   003134                     
  5723                           ;colorfunctions.c: 134:     {;colorfunctions.c: 135:         Orange_R135(&motorL,&motorR
      +                          );
  5724   003134  0EB9               	movlw	low _motorL
  5725   003136  6E21               	movwf	Orange_R135@mL^0,c
  5726   003138  0E00               	movlw	high _motorL
  5727   00313A  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5728   00313C  0EB0               	movlw	low _motorR
  5729   00313E  6E23               	movwf	Orange_R135@mR^0,c
  5730   003140  0E00               	movlw	high _motorR
  5731   003142  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5732   003144  ECBF  F01C         	call	_Orange_R135	;wreg free
  5733                           
  5734                           ;colorfunctions.c: 136:     }
  5735   003148  EFD9  F018         	goto	l163
  5736   00314C                     l4020:
  5737   00314C  EE20 F014          	lfsr	2,20
  5738   003150  505B               	movf	Colour2Action@cf^0,w,c
  5739   003152  26D9               	addwf	fsr2l,f,c
  5740   003154  505C               	movf	(Colour2Action@cf+1)^0,w,c
  5741   003156  22DA               	addwfc	fsr2h,f,c
  5742   003158  0E06               	movlw	6
  5743   00315A  18DE               	xorwf	postinc2,w,c
  5744   00315C  10DE               	iorwf	postinc2,w,c
  5745   00315E  A4D8               	btfss	status,2,c
  5746   003160  EFB4  F018         	goto	u3701
  5747   003164  EFB6  F018         	goto	u3700
  5748   003168                     u3701:
  5749   003168  EFC2  F018         	goto	l4024
  5750   00316C                     u3700:
  5751   00316C                     
  5752                           ;colorfunctions.c: 138:     {;colorfunctions.c: 139:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5753   00316C  0EB9               	movlw	low _motorL
  5754   00316E  6E21               	movwf	LightBlue_L135@mL^0,c
  5755   003170  0E00               	movlw	high _motorL
  5756   003172  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5757   003174  0EB0               	movlw	low _motorR
  5758   003176  6E23               	movwf	LightBlue_L135@mR^0,c
  5759   003178  0E00               	movlw	high _motorR
  5760   00317A  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5761   00317C  EC11  F01D         	call	_LightBlue_L135	;wreg free
  5762                           
  5763                           ;colorfunctions.c: 140:     }
  5764   003180  EFD9  F018         	goto	l163
  5765   003184                     l4024:
  5766   003184                     
  5767                           ;colorfunctions.c: 142:     {;colorfunctions.c: 143:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5768   003184  0EB9               	movlw	low _motorL
  5769   003186  0100               	movlb	0	; () banked
  5770   003188  6FC2               	movwf	White@mL& (0+255),b
  5771   00318A  0E00               	movlw	high _motorL
  5772   00318C  6FC3               	movwf	(White@mL+1)& (0+255),b
  5773   00318E  0EB0               	movlw	low _motorR
  5774   003190  6FC4               	movwf	White@mR& (0+255),b
  5775   003192  0E00               	movlw	high _motorR
  5776   003194  6FC5               	movwf	(White@mR+1)& (0+255),b
  5777   003196  C062  F0C6         	movff	_movementCount,White@movementCount	;volatile
  5778   00319A  C063  F0C7         	movff	_movementCount+1,White@movementCount+1	;volatile
  5779   00319E  0E66               	movlw	low _movementMemory
  5780   0031A0  6FC8               	movwf	White@movementMemory& (0+255),b
  5781   0031A2  0E00               	movlw	high _movementMemory
  5782   0031A4  6FC9               	movwf	(White@movementMemory+1)& (0+255),b
  5783   0031A6  0E00               	movlw	low _timerMemory
  5784   0031A8  6FCA               	movwf	White@timerMemory& (0+255),b
  5785   0031AA  0E01               	movlw	high _timerMemory
  5786   0031AC  6FCB               	movwf	(White@timerMemory+1)& (0+255),b
  5787   0031AE  ECAA  F00F         	call	_White	;wreg free
  5788   0031B2                     l163:
  5789   0031B2  0012               	return		;funcret
  5790   0031B4                     __end_of_Colour2Action:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _White *****************
  5794 ;; Defined at:
  5795 ;;		line 342 in file "dc_motor.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  mL              2    0[BANK0 ] PTR struct DC_motor
  5798 ;;		 -> motorL(9), 
  5799 ;;  mR              2    2[BANK0 ] PTR struct DC_motor
  5800 ;;		 -> motorR(9), 
  5801 ;;  movementCoun    2    4[BANK0 ] unsigned int 
  5802 ;;  movementMemo    2    6[BANK0 ] PTR volatile unsigned in
  5803 ;;		 -> movementMemory(40), 
  5804 ;;  timerMemory     2    8[BANK0 ] PTR volatile float 
  5805 ;;		 -> timerMemory(80), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  tempTimer       4   10[BANK0 ] float 
  5808 ;;  i               2   14[BANK0 ] int 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5818 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5822 ;;Total ram usage:       20 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 7
  5825 ;; This function calls:
  5826 ;;		_Blue_T180
  5827 ;;		_Green_L90
  5828 ;;		_LightBlue_L135
  5829 ;;		_Orange_R135
  5830 ;;		_Pink_rev1_L90
  5831 ;;		_RAMback
  5832 ;;		_Red_R90
  5833 ;;		_TimerReset
  5834 ;;		_Yellow_rev1_R90
  5835 ;;		___fladd
  5836 ;;		___flge
  5837 ;;		_fullSpeedAhead
  5838 ;;		_getTimerValue
  5839 ;;		_reverseHalfSquare
  5840 ;;		_rotate180left
  5841 ;;		_stop
  5842 ;; This function is called by:
  5843 ;;		_Colour2Action
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text29
  5848   001F54                     __ptext29:
  5849                           	callstack 0
  5850   001F54                     _White:
  5851                           	callstack 22
  5852   001F54                     
  5853                           ;dc_motor.c: 342: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile float *timerMemory);dc_motor.c
      +                          : 343: {;dc_motor.c: 344:     LATDbits.LATD4 = 1;;
  5854   001F54  887C               	bsf	124,4,c	;volatile
  5855                           
  5856                           ;dc_motor.c: 346:     while (!retracingDone){
  5857   001F56  EFDB  F011         	goto	l3622
  5858   001F5A                     l3544:
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;dc_motor.c: 347:         reverseHalfSquare(mL,mR);
  5862   001F5A  C0C2  F01B         	movff	White@mL,reverseHalfSquare@mL
  5863   001F5E  C0C3  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5864   001F62  C0C4  F01D         	movff	White@mR,reverseHalfSquare@mR
  5865   001F66  C0C5  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5866   001F6A  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  5867                           
  5868                           ;dc_motor.c: 348:         rotate180left(mL,mR);
  5869   001F6E  C0C2  F020         	movff	White@mL,rotate180left@mL
  5870   001F72  C0C3  F021         	movff	White@mL+1,rotate180left@mL+1
  5871   001F76  C0C4  F022         	movff	White@mR,rotate180left@mR
  5872   001F7A  C0C5  F023         	movff	White@mR+1,rotate180left@mR+1
  5873   001F7E  EC06  F021         	call	_rotate180left	;wreg free
  5874   001F82                     
  5875                           ;dc_motor.c: 349:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5876   001F82  0E29               	movlw	41
  5877   001F84  6E58               	movwf	(??_White+1)^0,c
  5878   001F86  0E96               	movlw	150
  5879   001F88  6E57               	movwf	??_White^0,c
  5880   001F8A  0E7F               	movlw	127
  5881   001F8C                     u3817:
  5882   001F8C  2EE8               	decfsz	wreg,f,c
  5883   001F8E  D7FE               	bra	u3817
  5884   001F90  2E57               	decfsz	??_White^0,f,c
  5885   001F92  D7FC               	bra	u3817
  5886   001F94  2E58               	decfsz	(??_White+1)^0,f,c
  5887   001F96  D7FA               	bra	u3817
  5888   001F98  F000               	nop	
  5889   001F9A                     
  5890                           ;dc_motor.c: 350:         ForwardFlag = 0;
  5891   001F9A  0E00               	movlw	0
  5892   001F9C  0100               	movlb	0	; () banked
  5893   001F9E  6FF8               	movwf	_ForwardFlag& (0+255),b	;volatile
  5894   001FA0                     
  5895                           ; BSR set to: 0
  5896                           ;dc_motor.c: 351:         retracingDone = 1;
  5897   001FA0  0E00               	movlw	0
  5898   001FA2  6F61               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5899   001FA4  0E01               	movlw	1
  5900   001FA6  6F60               	movwf	_retracingDone& (0+255),b	;volatile
  5901   001FA8                     
  5902                           ; BSR set to: 0
  5903                           ;dc_motor.c: 353:         for (int i=movementCount; i>=0;i--){
  5904   001FA8  C0C6  F0D0         	movff	White@movementCount,White@i
  5905   001FAC  C0C7  F0D1         	movff	White@movementCount+1,White@i+1
  5906   001FB0                     l3554:
  5907                           
  5908                           ; BSR set to: 0
  5909   001FB0  BFD1               	btfsc	(White@i+1)& (0+255),7,b
  5910   001FB2  EFDF  F00F         	goto	u2880
  5911   001FB6  EFDD  F00F         	goto	u2881
  5912   001FBA                     u2881:
  5913   001FBA  EFE1  F00F         	goto	l573
  5914   001FBE                     u2880:
  5915   001FBE  EFDB  F011         	goto	l3622
  5916   001FC2                     l573:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;dc_motor.c: 354:             LATDbits.LATD4 = 1;;
  5920   001FC2  887C               	bsf	124,4,c	;volatile
  5921   001FC4                     
  5922                           ; BSR set to: 0
  5923                           ;dc_motor.c: 355:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5924   001FC4  0E11               	movlw	17
  5925   001FC6  6E58               	movwf	(??_White+1)^0,c
  5926   001FC8  0E3C               	movlw	60
  5927   001FCA  6E57               	movwf	??_White^0,c
  5928   001FCC  0ECB               	movlw	203
  5929   001FCE                     u3827:
  5930   001FCE  2EE8               	decfsz	wreg,f,c
  5931   001FD0  D7FE               	bra	u3827
  5932   001FD2  2E57               	decfsz	??_White^0,f,c
  5933   001FD4  D7FC               	bra	u3827
  5934   001FD6  2E58               	decfsz	(??_White+1)^0,f,c
  5935   001FD8  D7FA               	bra	u3827
  5936   001FDA  F000               	nop	
  5937   001FDC                     
  5938                           ;dc_motor.c: 356:             if (movementMemory[i]==0){
  5939   001FDC  90D8               	bcf	status,0,c
  5940   001FDE  0100               	movlb	0	; () banked
  5941   001FE0  35D0               	rlcf	White@i& (0+255),w,b
  5942   001FE2  6ED9               	movwf	fsr2l,c
  5943   001FE4  35D1               	rlcf	(White@i+1)& (0+255),w,b
  5944   001FE6  6EDA               	movwf	fsr2h,c
  5945   001FE8  51C8               	movf	White@movementMemory& (0+255),w,b
  5946   001FEA  26D9               	addwf	fsr2l,f,c
  5947   001FEC  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  5948   001FEE  22DA               	addwfc	fsr2h,f,c
  5949   001FF0  50DE               	movf	postinc2,w,c
  5950   001FF2  10DE               	iorwf	postinc2,w,c
  5951   001FF4  A4D8               	btfss	status,2,c
  5952   001FF6  EFFF  F00F         	goto	u2891
  5953   001FFA  EF01  F010         	goto	u2890
  5954   001FFE                     u2891:
  5955   001FFE  EF0D  F010         	goto	l3564
  5956   002002                     u2890:
  5957   002002                     
  5958                           ; BSR set to: 0
  5959                           ;dc_motor.c: 357:                 Red_R90(mL,mR);}
  5960   002002  C0C2  F021         	movff	White@mL,Red_R90@mL
  5961   002006  C0C3  F022         	movff	White@mL+1,Red_R90@mL+1
  5962   00200A  C0C4  F023         	movff	White@mR,Red_R90@mR
  5963   00200E  C0C5  F024         	movff	White@mR+1,Red_R90@mR+1
  5964   002012  EC8D  F01F         	call	_Red_R90	;wreg free
  5965   002016  EFF9  F010         	goto	l576
  5966   00201A                     l3564:
  5967                           
  5968                           ; BSR set to: 0
  5969   00201A  90D8               	bcf	status,0,c
  5970   00201C  35D0               	rlcf	White@i& (0+255),w,b
  5971   00201E  6ED9               	movwf	fsr2l,c
  5972   002020  35D1               	rlcf	(White@i+1)& (0+255),w,b
  5973   002022  6EDA               	movwf	fsr2h,c
  5974   002024  51C8               	movf	White@movementMemory& (0+255),w,b
  5975   002026  26D9               	addwf	fsr2l,f,c
  5976   002028  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  5977   00202A  22DA               	addwfc	fsr2h,f,c
  5978   00202C  04DE               	decf	postinc2,w,c
  5979   00202E  10DE               	iorwf	postinc2,w,c
  5980   002030  A4D8               	btfss	status,2,c
  5981   002032  EF1D  F010         	goto	u2901
  5982   002036  EF1F  F010         	goto	u2900
  5983   00203A                     u2901:
  5984   00203A  EF2B  F010         	goto	l3568
  5985   00203E                     u2900:
  5986   00203E                     
  5987                           ; BSR set to: 0
  5988                           ;dc_motor.c: 359:                 Green_L90(mL,mR);}
  5989   00203E  C0C2  F021         	movff	White@mL,Green_L90@mL
  5990   002042  C0C3  F022         	movff	White@mL+1,Green_L90@mL+1
  5991   002046  C0C4  F023         	movff	White@mR,Green_L90@mR
  5992   00204A  C0C5  F024         	movff	White@mR+1,Green_L90@mR+1
  5993   00204E  ECCB  F01F         	call	_Green_L90	;wreg free
  5994   002052  EFF9  F010         	goto	l576
  5995   002056                     l3568:
  5996                           
  5997                           ; BSR set to: 0
  5998   002056  90D8               	bcf	status,0,c
  5999   002058  35D0               	rlcf	White@i& (0+255),w,b
  6000   00205A  6ED9               	movwf	fsr2l,c
  6001   00205C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6002   00205E  6EDA               	movwf	fsr2h,c
  6003   002060  51C8               	movf	White@movementMemory& (0+255),w,b
  6004   002062  26D9               	addwf	fsr2l,f,c
  6005   002064  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6006   002066  22DA               	addwfc	fsr2h,f,c
  6007   002068  0E02               	movlw	2
  6008   00206A  18DE               	xorwf	postinc2,w,c
  6009   00206C  10DE               	iorwf	postinc2,w,c
  6010   00206E  A4D8               	btfss	status,2,c
  6011   002070  EF3C  F010         	goto	u2911
  6012   002074  EF3E  F010         	goto	u2910
  6013   002078                     u2911:
  6014   002078  EF4A  F010         	goto	l3572
  6015   00207C                     u2910:
  6016   00207C                     
  6017                           ; BSR set to: 0
  6018                           ;dc_motor.c: 361:                 Blue_T180(mL,mR);}
  6019   00207C  C0C2  F024         	movff	White@mL,Blue_T180@mL
  6020   002080  C0C3  F025         	movff	White@mL+1,Blue_T180@mL+1
  6021   002084  C0C4  F026         	movff	White@mR,Blue_T180@mR
  6022   002088  C0C5  F027         	movff	White@mR+1,Blue_T180@mR+1
  6023   00208C  ECDC  F020         	call	_Blue_T180	;wreg free
  6024   002090  EFF9  F010         	goto	l576
  6025   002094                     l3572:
  6026                           
  6027                           ; BSR set to: 0
  6028   002094  90D8               	bcf	status,0,c
  6029   002096  35D0               	rlcf	White@i& (0+255),w,b
  6030   002098  6ED9               	movwf	fsr2l,c
  6031   00209A  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6032   00209C  6EDA               	movwf	fsr2h,c
  6033   00209E  51C8               	movf	White@movementMemory& (0+255),w,b
  6034   0020A0  26D9               	addwf	fsr2l,f,c
  6035   0020A2  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6036   0020A4  22DA               	addwfc	fsr2h,f,c
  6037   0020A6  0E03               	movlw	3
  6038   0020A8  18DE               	xorwf	postinc2,w,c
  6039   0020AA  10DE               	iorwf	postinc2,w,c
  6040   0020AC  A4D8               	btfss	status,2,c
  6041   0020AE  EF5B  F010         	goto	u2921
  6042   0020B2  EF5D  F010         	goto	u2920
  6043   0020B6                     u2921:
  6044   0020B6  EF73  F010         	goto	l3576
  6045   0020BA                     u2920:
  6046   0020BA                     
  6047                           ; BSR set to: 0
  6048                           ;dc_motor.c: 363:                 Yellow_rev1_R90(mL,mR);
  6049   0020BA  C0C2  F021         	movff	White@mL,Yellow_rev1_R90@mL
  6050   0020BE  C0C3  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  6051   0020C2  C0C4  F023         	movff	White@mR,Yellow_rev1_R90@mR
  6052   0020C6  C0C5  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  6053   0020CA  ECC4  F01B         	call	_Yellow_rev1_R90	;wreg free
  6054                           
  6055                           ;dc_motor.c: 364:                 RAMback(mL,mR);}
  6056   0020CE  C0C2  F01B         	movff	White@mL,RAMback@mL
  6057   0020D2  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6058   0020D6  C0C4  F01D         	movff	White@mR,RAMback@mR
  6059   0020DA  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6060   0020DE  EC43  F020         	call	_RAMback	;wreg free
  6061   0020E2  EFF9  F010         	goto	l576
  6062   0020E6                     l3576:
  6063                           
  6064                           ; BSR set to: 0
  6065   0020E6  90D8               	bcf	status,0,c
  6066   0020E8  35D0               	rlcf	White@i& (0+255),w,b
  6067   0020EA  6ED9               	movwf	fsr2l,c
  6068   0020EC  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6069   0020EE  6EDA               	movwf	fsr2h,c
  6070   0020F0  51C8               	movf	White@movementMemory& (0+255),w,b
  6071   0020F2  26D9               	addwf	fsr2l,f,c
  6072   0020F4  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6073   0020F6  22DA               	addwfc	fsr2h,f,c
  6074   0020F8  0E04               	movlw	4
  6075   0020FA  18DE               	xorwf	postinc2,w,c
  6076   0020FC  10DE               	iorwf	postinc2,w,c
  6077   0020FE  A4D8               	btfss	status,2,c
  6078   002100  EF84  F010         	goto	u2931
  6079   002104  EF86  F010         	goto	u2930
  6080   002108                     u2931:
  6081   002108  EF9C  F010         	goto	l3580
  6082   00210C                     u2930:
  6083   00210C                     
  6084                           ; BSR set to: 0
  6085                           ;dc_motor.c: 366:                 Pink_rev1_L90(mL,mR);
  6086   00210C  C0C2  F021         	movff	White@mL,Pink_rev1_L90@mL
  6087   002110  C0C3  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  6088   002114  C0C4  F023         	movff	White@mR,Pink_rev1_L90@mR
  6089   002118  C0C5  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  6090   00211C  EC18  F01C         	call	_Pink_rev1_L90	;wreg free
  6091                           
  6092                           ;dc_motor.c: 367:                 RAMback(mL,mR);}
  6093   002120  C0C2  F01B         	movff	White@mL,RAMback@mL
  6094   002124  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6095   002128  C0C4  F01D         	movff	White@mR,RAMback@mR
  6096   00212C  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6097   002130  EC43  F020         	call	_RAMback	;wreg free
  6098   002134  EFF9  F010         	goto	l576
  6099   002138                     l3580:
  6100                           
  6101                           ; BSR set to: 0
  6102   002138  90D8               	bcf	status,0,c
  6103   00213A  35D0               	rlcf	White@i& (0+255),w,b
  6104   00213C  6ED9               	movwf	fsr2l,c
  6105   00213E  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6106   002140  6EDA               	movwf	fsr2h,c
  6107   002142  51C8               	movf	White@movementMemory& (0+255),w,b
  6108   002144  26D9               	addwf	fsr2l,f,c
  6109   002146  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6110   002148  22DA               	addwfc	fsr2h,f,c
  6111   00214A  0E05               	movlw	5
  6112   00214C  18DE               	xorwf	postinc2,w,c
  6113   00214E  10DE               	iorwf	postinc2,w,c
  6114   002150  A4D8               	btfss	status,2,c
  6115   002152  EFAD  F010         	goto	u2941
  6116   002156  EFAF  F010         	goto	u2940
  6117   00215A                     u2941:
  6118   00215A  EFBB  F010         	goto	l3584
  6119   00215E                     u2940:
  6120   00215E                     
  6121                           ; BSR set to: 0
  6122                           ;dc_motor.c: 369:                 Orange_R135(mL,mR);}
  6123   00215E  C0C2  F021         	movff	White@mL,Orange_R135@mL
  6124   002162  C0C3  F022         	movff	White@mL+1,Orange_R135@mL+1
  6125   002166  C0C4  F023         	movff	White@mR,Orange_R135@mR
  6126   00216A  C0C5  F024         	movff	White@mR+1,Orange_R135@mR+1
  6127   00216E  ECBF  F01C         	call	_Orange_R135	;wreg free
  6128   002172  EFF9  F010         	goto	l576
  6129   002176                     l3584:
  6130                           
  6131                           ; BSR set to: 0
  6132   002176  90D8               	bcf	status,0,c
  6133   002178  35D0               	rlcf	White@i& (0+255),w,b
  6134   00217A  6ED9               	movwf	fsr2l,c
  6135   00217C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6136   00217E  6EDA               	movwf	fsr2h,c
  6137   002180  51C8               	movf	White@movementMemory& (0+255),w,b
  6138   002182  26D9               	addwf	fsr2l,f,c
  6139   002184  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6140   002186  22DA               	addwfc	fsr2h,f,c
  6141   002188  0E06               	movlw	6
  6142   00218A  18DE               	xorwf	postinc2,w,c
  6143   00218C  10DE               	iorwf	postinc2,w,c
  6144   00218E  A4D8               	btfss	status,2,c
  6145   002190  EFCC  F010         	goto	u2951
  6146   002194  EFCE  F010         	goto	u2950
  6147   002198                     u2951:
  6148   002198  EFDA  F010         	goto	l3588
  6149   00219C                     u2950:
  6150   00219C                     
  6151                           ; BSR set to: 0
  6152                           ;dc_motor.c: 371:                 LightBlue_L135(mL,mR);}
  6153   00219C  C0C2  F021         	movff	White@mL,LightBlue_L135@mL
  6154   0021A0  C0C3  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  6155   0021A4  C0C4  F023         	movff	White@mR,LightBlue_L135@mR
  6156   0021A8  C0C5  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  6157   0021AC  EC11  F01D         	call	_LightBlue_L135	;wreg free
  6158   0021B0  EFF9  F010         	goto	l576
  6159   0021B4                     l3588:
  6160                           
  6161                           ; BSR set to: 0
  6162   0021B4  90D8               	bcf	status,0,c
  6163   0021B6  35D0               	rlcf	White@i& (0+255),w,b
  6164   0021B8  6ED9               	movwf	fsr2l,c
  6165   0021BA  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6166   0021BC  6EDA               	movwf	fsr2h,c
  6167   0021BE  51C8               	movf	White@movementMemory& (0+255),w,b
  6168   0021C0  26D9               	addwf	fsr2l,f,c
  6169   0021C2  51C9               	movf	(White@movementMemory+1)& (0+255),w,b
  6170   0021C4  22DA               	addwfc	fsr2h,f,c
  6171   0021C6  0E07               	movlw	7
  6172   0021C8  18DE               	xorwf	postinc2,w,c
  6173   0021CA  10DE               	iorwf	postinc2,w,c
  6174   0021CC  A4D8               	btfss	status,2,c
  6175   0021CE  EFEB  F010         	goto	u2961
  6176   0021D2  EFED  F010         	goto	u2960
  6177   0021D6                     u2961:
  6178   0021D6  EFF9  F010         	goto	l584
  6179   0021DA                     u2960:
  6180   0021DA                     
  6181                           ; BSR set to: 0
  6182                           ;dc_motor.c: 373:                 stop(mL,mR);}
  6183   0021DA  C0C2  F014         	movff	White@mL,stop@mL
  6184   0021DE  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6185   0021E2  C0C4  F016         	movff	White@mR,stop@mR
  6186   0021E6  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6187   0021EA  EC6C  F01C         	call	_stop	;wreg free
  6188   0021EE  EFF9  F010         	goto	l576
  6189   0021F2                     l584:
  6190   0021F2                     l576:
  6191                           
  6192                           ;dc_motor.c: 374:             RAMback(mL,mR);
  6193   0021F2  C0C2  F01B         	movff	White@mL,RAMback@mL
  6194   0021F6  C0C3  F01C         	movff	White@mL+1,RAMback@mL+1
  6195   0021FA  C0C4  F01D         	movff	White@mR,RAMback@mR
  6196   0021FE  C0C5  F01E         	movff	White@mR+1,RAMback@mR+1
  6197   002202  EC43  F020         	call	_RAMback	;wreg free
  6198   002206                     
  6199                           ;dc_motor.c: 375:             LATDbits.LATD4 = 1;;
  6200   002206  887C               	bsf	124,4,c	;volatile
  6201   002208                     
  6202                           ;dc_motor.c: 377:             float tempTimer = 0;
  6203   002208  0E00               	movlw	0
  6204   00220A  0100               	movlb	0	; () banked
  6205   00220C  6FCC               	movwf	White@tempTimer& (0+255),b
  6206   00220E  0E00               	movlw	0
  6207   002210  6FCD               	movwf	(White@tempTimer+1)& (0+255),b
  6208   002212  0E00               	movlw	0
  6209   002214  6FCE               	movwf	(White@tempTimer+2)& (0+255),b
  6210   002216  0E00               	movlw	0
  6211   002218  6FCF               	movwf	(White@tempTimer+3)& (0+255),b
  6212   00221A                     
  6213                           ; BSR set to: 0
  6214                           ;dc_motor.c: 378:             TimerReset();
  6215   00221A  EC21  F023         	call	_TimerReset	;wreg free
  6216   00221E                     
  6217                           ;dc_motor.c: 379:             fullSpeedAhead(mL,mR);
  6218   00221E  C0C2  F014         	movff	White@mL,fullSpeedAhead@mL
  6219   002222  C0C3  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  6220   002226  C0C4  F016         	movff	White@mR,fullSpeedAhead@mR
  6221   00222A  C0C5  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  6222   00222E  EC0D  F01F         	call	_fullSpeedAhead	;wreg free
  6223   002232                     
  6224                           ;dc_motor.c: 380:             if (timerMemory[i]<0)
  6225   002232  90D8               	bcf	status,0,c
  6226   002234  0100               	movlb	0	; () banked
  6227   002236  35D0               	rlcf	White@i& (0+255),w,b
  6228   002238  6ED9               	movwf	fsr2l,c
  6229   00223A  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6230   00223C  6EDA               	movwf	fsr2h,c
  6231   00223E  90D8               	bcf	status,0,c
  6232   002240  36D9               	rlcf	fsr2l,f,c
  6233   002242  36DA               	rlcf	fsr2h,f,c
  6234   002244  51CA               	movf	White@timerMemory& (0+255),w,b
  6235   002246  26D9               	addwf	fsr2l,f,c
  6236   002248  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6237   00224A  22DA               	addwfc	fsr2h,f,c
  6238   00224C  0E03               	movlw	3
  6239   00224E  BEDB               	btfsc	plusw2,7,c
  6240   002250  EF2E  F011         	goto	u2970
  6241   002254  EF2C  F011         	goto	u2971
  6242   002258                     u2971:
  6243   002258  EF74  F011         	goto	l3608
  6244   00225C                     u2970:
  6245   00225C  EF3A  F011         	goto	l3606
  6246   002260                     l3604:
  6247                           
  6248                           ;dc_motor.c: 383:                 {;dc_motor.c: 384:                     tempTimer = get
      +                          TimerValue();
  6249   002260  ECAB  F020         	call	_getTimerValue	;wreg free
  6250   002264  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6251   002268  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6252   00226C  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6253   002270  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6254   002274                     l3606:
  6255                           
  6256                           ;dc_motor.c: 382:                 while(tempTimer <(timerMemory[i]+_recogniseColour))
  6257   002274  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6258   002278  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6259   00227C  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6260   002280  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6261   002284  0E00               	movlw	0
  6262   002286  6E3F               	movwf	___fladd@a^0,c
  6263   002288  0E00               	movlw	0
  6264   00228A  6E40               	movwf	(___fladd@a+1)^0,c
  6265   00228C  0E16               	movlw	22
  6266   00228E  6E41               	movwf	(___fladd@a+2)^0,c
  6267   002290  0E43               	movlw	67
  6268   002292  6E42               	movwf	(___fladd@a+3)^0,c
  6269   002294  90D8               	bcf	status,0,c
  6270   002296  0100               	movlb	0	; () banked
  6271   002298  35D0               	rlcf	White@i& (0+255),w,b
  6272   00229A  6ED9               	movwf	fsr2l,c
  6273   00229C  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6274   00229E  6EDA               	movwf	fsr2h,c
  6275   0022A0  90D8               	bcf	status,0,c
  6276   0022A2  36D9               	rlcf	fsr2l,f,c
  6277   0022A4  36DA               	rlcf	fsr2h,f,c
  6278   0022A6  51CA               	movf	White@timerMemory& (0+255),w,b
  6279   0022A8  26D9               	addwf	fsr2l,f,c
  6280   0022AA  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6281   0022AC  22DA               	addwfc	fsr2h,f,c
  6282   0022AE  CFDE F03B          	movff	postinc2,___fladd@b
  6283   0022B2  CFDE F03C          	movff	postinc2,___fladd@b+1
  6284   0022B6  CFDE F03D          	movff	postinc2,___fladd@b+2
  6285   0022BA  CFDE F03E          	movff	postinc2,___fladd@b+3
  6286   0022BE  EC4A  F00D         	call	___fladd	;wreg free
  6287   0022C2  C03B  F04F         	movff	?___fladd,___flge@ff2
  6288   0022C6  C03C  F050         	movff	?___fladd+1,___flge@ff2+1
  6289   0022CA  C03D  F051         	movff	?___fladd+2,___flge@ff2+2
  6290   0022CE  C03E  F052         	movff	?___fladd+3,___flge@ff2+3
  6291   0022D2  ECED  F01A         	call	___flge	;wreg free
  6292   0022D6  A0D8               	btfss	status,0,c
  6293   0022D8  EF70  F011         	goto	u2981
  6294   0022DC  EF72  F011         	goto	u2980
  6295   0022E0                     u2981:
  6296   0022E0  EF30  F011         	goto	l3604
  6297   0022E4                     u2980:
  6298   0022E4  EFCB  F011         	goto	l3616
  6299   0022E8                     l3608:
  6300                           
  6301                           ; BSR set to: 0
  6302   0022E8  0E00               	movlw	0
  6303   0022EA  6E4B               	movwf	___flge@ff1^0,c
  6304   0022EC  0E00               	movlw	0
  6305   0022EE  6E4C               	movwf	(___flge@ff1+1)^0,c
  6306   0022F0  0E00               	movlw	0
  6307   0022F2  6E4D               	movwf	(___flge@ff1+2)^0,c
  6308   0022F4  0E00               	movlw	0
  6309   0022F6  6E4E               	movwf	(___flge@ff1+3)^0,c
  6310   0022F8  90D8               	bcf	status,0,c
  6311   0022FA  35D0               	rlcf	White@i& (0+255),w,b
  6312   0022FC  6ED9               	movwf	fsr2l,c
  6313   0022FE  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6314   002300  6EDA               	movwf	fsr2h,c
  6315   002302  90D8               	bcf	status,0,c
  6316   002304  36D9               	rlcf	fsr2l,f,c
  6317   002306  36DA               	rlcf	fsr2h,f,c
  6318   002308  51CA               	movf	White@timerMemory& (0+255),w,b
  6319   00230A  26D9               	addwf	fsr2l,f,c
  6320   00230C  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6321   00230E  22DA               	addwfc	fsr2h,f,c
  6322   002310  CFDE F04F          	movff	postinc2,___flge@ff2
  6323   002314  CFDE F050          	movff	postinc2,___flge@ff2+1
  6324   002318  CFDE F051          	movff	postinc2,___flge@ff2+2
  6325   00231C  CFDE F052          	movff	postinc2,___flge@ff2+3
  6326   002320  ECED  F01A         	call	___flge	;wreg free
  6327   002324  B0D8               	btfsc	status,0,c
  6328   002326  EF97  F011         	goto	u2991
  6329   00232A  EF99  F011         	goto	u2990
  6330   00232E                     u2991:
  6331   00232E  EFCB  F011         	goto	l3616
  6332   002332                     u2990:
  6333   002332  EFA5  F011         	goto	l3614
  6334   002336                     l3612:
  6335                           
  6336                           ;dc_motor.c: 388:                 {;dc_motor.c: 389:                     tempTimer = get
      +                          TimerValue();
  6337   002336  ECAB  F020         	call	_getTimerValue	;wreg free
  6338   00233A  C033  F0CC         	movff	?_getTimerValue,White@tempTimer
  6339   00233E  C034  F0CD         	movff	?_getTimerValue+1,White@tempTimer+1
  6340   002342  C035  F0CE         	movff	?_getTimerValue+2,White@tempTimer+2
  6341   002346  C036  F0CF         	movff	?_getTimerValue+3,White@tempTimer+3
  6342   00234A                     l3614:
  6343                           
  6344                           ;dc_motor.c: 387:                 while(tempTimer<timerMemory[i])
  6345   00234A  C0CC  F04B         	movff	White@tempTimer,___flge@ff1
  6346   00234E  C0CD  F04C         	movff	White@tempTimer+1,___flge@ff1+1
  6347   002352  C0CE  F04D         	movff	White@tempTimer+2,___flge@ff1+2
  6348   002356  C0CF  F04E         	movff	White@tempTimer+3,___flge@ff1+3
  6349   00235A  90D8               	bcf	status,0,c
  6350   00235C  0100               	movlb	0	; () banked
  6351   00235E  35D0               	rlcf	White@i& (0+255),w,b
  6352   002360  6ED9               	movwf	fsr2l,c
  6353   002362  35D1               	rlcf	(White@i+1)& (0+255),w,b
  6354   002364  6EDA               	movwf	fsr2h,c
  6355   002366  90D8               	bcf	status,0,c
  6356   002368  36D9               	rlcf	fsr2l,f,c
  6357   00236A  36DA               	rlcf	fsr2h,f,c
  6358   00236C  51CA               	movf	White@timerMemory& (0+255),w,b
  6359   00236E  26D9               	addwf	fsr2l,f,c
  6360   002370  51CB               	movf	(White@timerMemory+1)& (0+255),w,b
  6361   002372  22DA               	addwfc	fsr2h,f,c
  6362   002374  CFDE F04F          	movff	postinc2,___flge@ff2
  6363   002378  CFDE F050          	movff	postinc2,___flge@ff2+1
  6364   00237C  CFDE F051          	movff	postinc2,___flge@ff2+2
  6365   002380  CFDE F052          	movff	postinc2,___flge@ff2+3
  6366   002384  ECED  F01A         	call	___flge	;wreg free
  6367   002388  A0D8               	btfss	status,0,c
  6368   00238A  EFC9  F011         	goto	u3001
  6369   00238E  EFCB  F011         	goto	u3000
  6370   002392                     u3001:
  6371   002392  EF9B  F011         	goto	l3612
  6372   002396                     u3000:
  6373   002396                     l3616:
  6374                           
  6375                           ;dc_motor.c: 392:             stop(mL,mR);
  6376   002396  C0C2  F014         	movff	White@mL,stop@mL
  6377   00239A  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6378   00239E  C0C4  F016         	movff	White@mR,stop@mR
  6379   0023A2  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6380   0023A6  EC6C  F01C         	call	_stop	;wreg free
  6381   0023AA                     
  6382                           ;dc_motor.c: 393:         }
  6383   0023AA  0100               	movlb	0	; () banked
  6384   0023AC  07D0               	decf	White@i& (0+255),f,b
  6385   0023AE  A0D8               	btfss	status,0,c
  6386   0023B0  07D1               	decf	(White@i+1)& (0+255),f,b
  6387   0023B2  EFD8  F00F         	goto	l3554
  6388   0023B6                     l3622:
  6389                           
  6390                           ;dc_motor.c: 346:     while (!retracingDone){
  6391   0023B6  0100               	movlb	0	; () banked
  6392   0023B8  5160               	movf	_retracingDone& (0+255),w,b	;volatile
  6393   0023BA  1161               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  6394   0023BC  B4D8               	btfsc	status,2,c
  6395   0023BE  EFE3  F011         	goto	u3011
  6396   0023C2  EFE5  F011         	goto	u3010
  6397   0023C6                     u3011:
  6398   0023C6  EFAD  F00F         	goto	l3544
  6399   0023CA                     u3010:
  6400   0023CA                     
  6401                           ; BSR set to: 0
  6402                           ;dc_motor.c: 395:     stop(mL,mR);
  6403   0023CA  C0C2  F014         	movff	White@mL,stop@mL
  6404   0023CE  C0C3  F015         	movff	White@mL+1,stop@mL+1
  6405   0023D2  C0C4  F016         	movff	White@mR,stop@mR
  6406   0023D6  C0C5  F017         	movff	White@mR+1,stop@mR+1
  6407   0023DA  EC6C  F01C         	call	_stop	;wreg free
  6408   0023DE                     
  6409                           ;dc_motor.c: 396:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6410   0023DE  0E52               	movlw	82
  6411   0023E0  6E58               	movwf	(??_White+1)^0,c
  6412   0023E2  0E2B               	movlw	43
  6413   0023E4  6E57               	movwf	??_White^0,c
  6414   0023E6  0E00               	movlw	0
  6415   0023E8                     u3837:
  6416   0023E8  2EE8               	decfsz	wreg,f,c
  6417   0023EA  D7FE               	bra	u3837
  6418   0023EC  2E57               	decfsz	??_White^0,f,c
  6419   0023EE  D7FC               	bra	u3837
  6420   0023F0  2E58               	decfsz	(??_White+1)^0,f,c
  6421   0023F2  D7FA               	bra	u3837
  6422   0023F4  D000               	nop2	
  6423   0023F6                     
  6424                           ;dc_motor.c: 397:     LATDbits.LATD4 = 0;;
  6425   0023F6  987C               	bcf	124,4,c	;volatile
  6426   0023F8  0012               	return		;funcret
  6427   0023FA                     __end_of_White:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _getTimerValue *****************
  6431 ;; Defined at:
  6432 ;;		line 28 in file "timer.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  timerCount      2   56[COMRAM] int 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  4   50[COMRAM] float 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;Total ram usage:        8 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 2
  6453 ;; This function calls:
  6454 ;;		___flmul
  6455 ;;		___xxtofl
  6456 ;; This function is called by:
  6457 ;;		_White
  6458 ;;		_memoryUpdateTime
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text30
  6463   004156                     __ptext30:
  6464                           	callstack 0
  6465   004156                     _getTimerValue:
  6466                           	callstack 27
  6467   004156                     
  6468                           ;timer.c: 30:     int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6469   004156  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  6470   00415A  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  6471   00415C                     
  6472                           ;timer.c: 34:     timerCount |= (int)(TMR0H << 8);
  6473   00415C  50D4               	movf	212,w,c	;volatile
  6474   00415E  6E38               	movwf	(??_getTimerValue+1)^0,c
  6475   004160  6A37               	clrf	??_getTimerValue^0,c
  6476   004162  5037               	movf	??_getTimerValue^0,w,c
  6477   004164  1239               	iorwf	getTimerValue@timerCount^0,f,c
  6478   004166  5038               	movf	(??_getTimerValue+1)^0,w,c
  6479   004168  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  6480   00416A                     
  6481                           ;timer.c: 35:     return timerCount*1.048576;
  6482   00416A  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  6483   00416E  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  6484   004172  0E00               	movlw	0
  6485   004174  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6486   004176  0EFF               	movlw	-1
  6487   004178  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6488   00417A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6489   00417C  0E01               	movlw	1
  6490   00417E  ECDA  F018         	call	___xxtofl
  6491   004182  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6492   004186  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6493   00418A  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6494   00418E  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6495   004192  0EBD               	movlw	189
  6496   004194  6E1E               	movwf	___flmul@a^0,c
  6497   004196  0E37               	movlw	55
  6498   004198  6E1F               	movwf	(___flmul@a+1)^0,c
  6499   00419A  0E86               	movlw	134
  6500   00419C  6E20               	movwf	(___flmul@a+2)^0,c
  6501   00419E  0E3F               	movlw	63
  6502   0041A0  6E21               	movwf	(___flmul@a+3)^0,c
  6503   0041A2  ECFD  F011         	call	___flmul	;wreg free
  6504   0041A6  C01A  F033         	movff	?___flmul,?_getTimerValue
  6505   0041AA  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  6506   0041AE  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  6507   0041B2  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  6508   0041B6  0012               	return		;funcret
  6509   0041B8                     __end_of_getTimerValue:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function ___xxtofl *****************
  6513 ;; Defined at:
  6514 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  sign            1    wreg     unsigned char 
  6517 ;;  val             4   11[COMRAM] long 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  sign            1   19[COMRAM] unsigned char 
  6520 ;;  arg             4   21[COMRAM] unsigned long 
  6521 ;;  exp             1   20[COMRAM] unsigned char 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  4   11[COMRAM] unsigned char 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;Total ram usage:       14 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 1
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_colour_read_all
  6542 ;;		_RGB2Hue
  6543 ;;		_Left45
  6544 ;;		_Right45
  6545 ;;		_reverseHalfSquare
  6546 ;;		_Yellow_rev1_R90
  6547 ;;		_Pink_rev1_L90
  6548 ;;		_White
  6549 ;;		_memoryUpdateTime
  6550 ;;		_getTimerValue
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text31
  6555   0031B4                     __ptext31:
  6556                           	callstack 0
  6557   0031B4                     ___xxtofl:
  6558                           	callstack 27
  6559                           
  6560                           ;incstack = 0
  6561                           ;___xxtofl@sign stored from wreg
  6562   0031B4  6E14               	movwf	___xxtofl@sign^0,c
  6563   0031B6  5014               	movf	___xxtofl@sign^0,w,c
  6564   0031B8  B4D8               	btfsc	status,2,c
  6565   0031BA  EFE1  F018         	goto	u2241
  6566   0031BE  EFE3  F018         	goto	u2240
  6567   0031C2                     u2241:
  6568   0031C2  EF05  F019         	goto	l1367
  6569   0031C6                     u2240:
  6570   0031C6  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6571   0031C8  EFEA  F018         	goto	u2250
  6572   0031CC  EFE8  F018         	goto	u2251
  6573   0031D0                     u2251:
  6574   0031D0  EF05  F019         	goto	l1367
  6575   0031D4                     u2250:
  6576   0031D4  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6577   0031D8  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6578   0031DC  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6579   0031E0  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6580   0031E4  1E10               	comf	??___xxtofl^0,f,c
  6581   0031E6  1E11               	comf	(??___xxtofl+1)^0,f,c
  6582   0031E8  1E12               	comf	(??___xxtofl+2)^0,f,c
  6583   0031EA  1E13               	comf	(??___xxtofl+3)^0,f,c
  6584   0031EC  2A10               	incf	??___xxtofl^0,f,c
  6585   0031EE  0E00               	movlw	0
  6586   0031F0  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6587   0031F2  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6588   0031F4  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6589   0031F6  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6590   0031FA  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6591   0031FE  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6592   003202  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6593   003206  EF0D  F019         	goto	l3118
  6594   00320A                     l1367:
  6595   00320A  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6596   00320E  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6597   003212  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6598   003216  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6599   00321A                     l3118:
  6600   00321A  500C               	movf	___xxtofl@val^0,w,c
  6601   00321C  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6602   00321E  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6603   003220  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6604   003222  A4D8               	btfss	status,2,c
  6605   003224  EF16  F019         	goto	u2261
  6606   003228  EF18  F019         	goto	u2260
  6607   00322C                     u2261:
  6608   00322C  EF22  F019         	goto	l3124
  6609   003230                     u2260:
  6610   003230  0E00               	movlw	0
  6611   003232  6E0C               	movwf	?___xxtofl^0,c
  6612   003234  0E00               	movlw	0
  6613   003236  6E0D               	movwf	(?___xxtofl+1)^0,c
  6614   003238  0E00               	movlw	0
  6615   00323A  6E0E               	movwf	(?___xxtofl+2)^0,c
  6616   00323C  0E00               	movlw	0
  6617   00323E  6E0F               	movwf	(?___xxtofl+3)^0,c
  6618   003240  EFB3  F019         	goto	l1370
  6619   003244                     l3124:
  6620   003244  0E96               	movlw	150
  6621   003246  6E15               	movwf	___xxtofl@exp^0,c
  6622   003248  EF2C  F019         	goto	l3128
  6623   00324C                     l3126:
  6624   00324C  2A15               	incf	___xxtofl@exp^0,f,c
  6625   00324E  90D8               	bcf	status,0,c
  6626   003250  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6627   003252  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6628   003254  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6629   003256  3216               	rrcf	___xxtofl@arg^0,f,c
  6630   003258                     l3128:
  6631   003258  0E00               	movlw	0
  6632   00325A  1416               	andwf	___xxtofl@arg^0,w,c
  6633   00325C  6E10               	movwf	??___xxtofl^0,c
  6634   00325E  0E00               	movlw	0
  6635   003260  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6636   003262  6E11               	movwf	(??___xxtofl+1)^0,c
  6637   003264  0E00               	movlw	0
  6638   003266  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6639   003268  6E12               	movwf	(??___xxtofl+2)^0,c
  6640   00326A  0EFE               	movlw	254
  6641   00326C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6642   00326E  6E13               	movwf	(??___xxtofl+3)^0,c
  6643   003270  5010               	movf	??___xxtofl^0,w,c
  6644   003272  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6645   003274  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6646   003276  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6647   003278  A4D8               	btfss	status,2,c
  6648   00327A  EF41  F019         	goto	u2271
  6649   00327E  EF43  F019         	goto	u2270
  6650   003282                     u2271:
  6651   003282  EF26  F019         	goto	l3126
  6652   003286                     u2270:
  6653   003286  EF51  F019         	goto	l1374
  6654   00328A                     l3130:
  6655   00328A  2A15               	incf	___xxtofl@exp^0,f,c
  6656   00328C  0E01               	movlw	1
  6657   00328E  2616               	addwf	___xxtofl@arg^0,f,c
  6658   003290  0E00               	movlw	0
  6659   003292  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6660   003294  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6661   003296  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6662   003298  90D8               	bcf	status,0,c
  6663   00329A  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6664   00329C  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6665   00329E  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6666   0032A0  3216               	rrcf	___xxtofl@arg^0,f,c
  6667   0032A2                     l1374:
  6668   0032A2  0E00               	movlw	0
  6669   0032A4  1416               	andwf	___xxtofl@arg^0,w,c
  6670   0032A6  6E10               	movwf	??___xxtofl^0,c
  6671   0032A8  0E00               	movlw	0
  6672   0032AA  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6673   0032AC  6E11               	movwf	(??___xxtofl+1)^0,c
  6674   0032AE  0E00               	movlw	0
  6675   0032B0  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6676   0032B2  6E12               	movwf	(??___xxtofl+2)^0,c
  6677   0032B4  0EFF               	movlw	255
  6678   0032B6  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6679   0032B8  6E13               	movwf	(??___xxtofl+3)^0,c
  6680   0032BA  5010               	movf	??___xxtofl^0,w,c
  6681   0032BC  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6682   0032BE  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6683   0032C0  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6684   0032C2  A4D8               	btfss	status,2,c
  6685   0032C4  EF66  F019         	goto	u2281
  6686   0032C8  EF68  F019         	goto	u2280
  6687   0032CC                     u2281:
  6688   0032CC  EF45  F019         	goto	l3130
  6689   0032D0                     u2280:
  6690   0032D0  EF70  F019         	goto	l3138
  6691   0032D4                     l3136:
  6692   0032D4  0615               	decf	___xxtofl@exp^0,f,c
  6693   0032D6  90D8               	bcf	status,0,c
  6694   0032D8  3616               	rlcf	___xxtofl@arg^0,f,c
  6695   0032DA  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6696   0032DC  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6697   0032DE  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6698   0032E0                     l3138:
  6699   0032E0  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6700   0032E2  EF75  F019         	goto	u2291
  6701   0032E6  EF77  F019         	goto	u2290
  6702   0032EA                     u2291:
  6703   0032EA  EF7F  F019         	goto	l1381
  6704   0032EE                     u2290:
  6705   0032EE  0E02               	movlw	2
  6706   0032F0  6015               	cpfslt	___xxtofl@exp^0,c
  6707   0032F2  EF7D  F019         	goto	u2301
  6708   0032F6  EF7F  F019         	goto	u2300
  6709   0032FA                     u2301:
  6710   0032FA  EF6A  F019         	goto	l3136
  6711   0032FE                     u2300:
  6712   0032FE                     l1381:
  6713   0032FE  B015               	btfsc	___xxtofl@exp^0,0,c
  6714   003300  EF84  F019         	goto	u2311
  6715   003304  EF86  F019         	goto	u2310
  6716   003308                     u2311:
  6717   003308  EF87  F019         	goto	l3144
  6718   00330C                     u2310:
  6719   00330C  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6720   00330E                     l3144:
  6721   00330E  90D8               	bcf	status,0,c
  6722   003310  3215               	rrcf	___xxtofl@exp^0,f,c
  6723   003312  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6724   003316  6A11               	clrf	(??___xxtofl+1)^0,c
  6725   003318  6A12               	clrf	(??___xxtofl+2)^0,c
  6726   00331A  6A13               	clrf	(??___xxtofl+3)^0,c
  6727   00331C  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6728   003320  6A12               	clrf	(??___xxtofl+2)^0,c
  6729   003322  6A11               	clrf	(??___xxtofl+1)^0,c
  6730   003324  6A10               	clrf	??___xxtofl^0,c
  6731   003326  5010               	movf	??___xxtofl^0,w,c
  6732   003328  1216               	iorwf	___xxtofl@arg^0,f,c
  6733   00332A  5011               	movf	(??___xxtofl+1)^0,w,c
  6734   00332C  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6735   00332E  5012               	movf	(??___xxtofl+2)^0,w,c
  6736   003330  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6737   003332  5013               	movf	(??___xxtofl+3)^0,w,c
  6738   003334  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6739   003336  5014               	movf	___xxtofl@sign^0,w,c
  6740   003338  B4D8               	btfsc	status,2,c
  6741   00333A  EFA1  F019         	goto	u2321
  6742   00333E  EFA3  F019         	goto	u2320
  6743   003342                     u2321:
  6744   003342  EFAB  F019         	goto	l3154
  6745   003346                     u2320:
  6746   003346  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6747   003348  EFAA  F019         	goto	u2330
  6748   00334C  EFA8  F019         	goto	u2331
  6749   003350                     u2331:
  6750   003350  EFAB  F019         	goto	l3154
  6751   003354                     u2330:
  6752   003354  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6753   003356                     l3154:
  6754   003356  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6755   00335A  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6756   00335E  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6757   003362  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6758   003366                     l1370:
  6759   003366  0012               	return		;funcret
  6760   003368                     __end_of___xxtofl:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function ___flmul *****************
  6764 ;; Defined at:
  6765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  b               4   25[COMRAM] unsigned char 
  6768 ;;  a               4   29[COMRAM] unsigned char 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  prod            4   44[COMRAM] struct .
  6771 ;;  grs             4   38[COMRAM] unsigned long 
  6772 ;;  temp            2   48[COMRAM] struct .
  6773 ;;  bexp            1   43[COMRAM] unsigned char 
  6774 ;;  aexp            1   42[COMRAM] unsigned char 
  6775 ;;  sign            1   37[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  4   25[COMRAM] unsigned char 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, prodl, prodh
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;Total ram usage:       25 bytes
  6790 ;; Hardware stack levels used: 1
  6791 ;; Hardware stack levels required when called: 1
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_RGB2Hue
  6796 ;;		_Left45
  6797 ;;		_Right45
  6798 ;;		_reverseHalfSquare
  6799 ;;		_Yellow_rev1_R90
  6800 ;;		_Pink_rev1_L90
  6801 ;;		_getTimerValue
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text32
  6806   0023FA                     __ptext32:
  6807                           	callstack 0
  6808   0023FA                     ___flmul:
  6809                           	callstack 27
  6810   0023FA  501D               	movf	(___flmul@b+3)^0,w,c
  6811   0023FC  0B80               	andlw	128
  6812   0023FE  6E26               	movwf	___flmul@sign^0,c
  6813   002400  501D               	movf	(___flmul@b+3)^0,w,c
  6814   002402  241D               	addwf	(___flmul@b+3)^0,w,c
  6815   002404  6E2C               	movwf	___flmul@bexp^0,c
  6816   002406  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6817   002408  EF08  F012         	goto	u2051
  6818   00240C  EF0A  F012         	goto	u2050
  6819   002410                     u2051:
  6820   002410  EF0B  F012         	goto	l2988
  6821   002414                     u2050:
  6822   002414  802C               	bsf	___flmul@bexp^0,0,c
  6823   002416                     l2988:
  6824   002416  502C               	movf	___flmul@bexp^0,w,c
  6825   002418  B4D8               	btfsc	status,2,c
  6826   00241A  EF11  F012         	goto	u2061
  6827   00241E  EF13  F012         	goto	u2060
  6828   002422                     u2061:
  6829   002422  EF26  F012         	goto	l2996
  6830   002426                     u2060:
  6831   002426  282C               	incf	___flmul@bexp^0,w,c
  6832   002428  A4D8               	btfss	status,2,c
  6833   00242A  EF19  F012         	goto	u2071
  6834   00242E  EF1B  F012         	goto	u2070
  6835   002432                     u2071:
  6836   002432  EF23  F012         	goto	l2994
  6837   002436                     u2070:
  6838   002436  0E00               	movlw	0
  6839   002438  6E1A               	movwf	___flmul@b^0,c
  6840   00243A  0E00               	movlw	0
  6841   00243C  6E1B               	movwf	(___flmul@b+1)^0,c
  6842   00243E  0E00               	movlw	0
  6843   002440  6E1C               	movwf	(___flmul@b+2)^0,c
  6844   002442  0E00               	movlw	0
  6845   002444  6E1D               	movwf	(___flmul@b+3)^0,c
  6846   002446                     l2994:
  6847   002446  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6848   002448  EF2E  F012         	goto	l2998
  6849   00244C                     l2996:
  6850   00244C  0E00               	movlw	0
  6851   00244E  6E1A               	movwf	___flmul@b^0,c
  6852   002450  0E00               	movlw	0
  6853   002452  6E1B               	movwf	(___flmul@b+1)^0,c
  6854   002454  0E00               	movlw	0
  6855   002456  6E1C               	movwf	(___flmul@b+2)^0,c
  6856   002458  0E00               	movlw	0
  6857   00245A  6E1D               	movwf	(___flmul@b+3)^0,c
  6858   00245C                     l2998:
  6859   00245C  5021               	movf	(___flmul@a+3)^0,w,c
  6860   00245E  0B80               	andlw	128
  6861   002460  1A26               	xorwf	___flmul@sign^0,f,c
  6862   002462  5021               	movf	(___flmul@a+3)^0,w,c
  6863   002464  2421               	addwf	(___flmul@a+3)^0,w,c
  6864   002466  6E2B               	movwf	___flmul@aexp^0,c
  6865   002468  AE20               	btfss	(___flmul@a+2)^0,7,c
  6866   00246A  EF39  F012         	goto	u2081
  6867   00246E  EF3B  F012         	goto	u2080
  6868   002472                     u2081:
  6869   002472  EF3C  F012         	goto	l3006
  6870   002476                     u2080:
  6871   002476  802B               	bsf	___flmul@aexp^0,0,c
  6872   002478                     l3006:
  6873   002478  502B               	movf	___flmul@aexp^0,w,c
  6874   00247A  B4D8               	btfsc	status,2,c
  6875   00247C  EF42  F012         	goto	u2091
  6876   002480  EF44  F012         	goto	u2090
  6877   002484                     u2091:
  6878   002484  EF57  F012         	goto	l3014
  6879   002488                     u2090:
  6880   002488  282B               	incf	___flmul@aexp^0,w,c
  6881   00248A  A4D8               	btfss	status,2,c
  6882   00248C  EF4A  F012         	goto	u2101
  6883   002490  EF4C  F012         	goto	u2100
  6884   002494                     u2101:
  6885   002494  EF54  F012         	goto	l3012
  6886   002498                     u2100:
  6887   002498  0E00               	movlw	0
  6888   00249A  6E1E               	movwf	___flmul@a^0,c
  6889   00249C  0E00               	movlw	0
  6890   00249E  6E1F               	movwf	(___flmul@a+1)^0,c
  6891   0024A0  0E00               	movlw	0
  6892   0024A2  6E20               	movwf	(___flmul@a+2)^0,c
  6893   0024A4  0E00               	movlw	0
  6894   0024A6  6E21               	movwf	(___flmul@a+3)^0,c
  6895   0024A8                     l3012:
  6896   0024A8  8E20               	bsf	(___flmul@a+2)^0,7,c
  6897   0024AA  EF5F  F012         	goto	l1326
  6898   0024AE                     l3014:
  6899   0024AE  0E00               	movlw	0
  6900   0024B0  6E1E               	movwf	___flmul@a^0,c
  6901   0024B2  0E00               	movlw	0
  6902   0024B4  6E1F               	movwf	(___flmul@a+1)^0,c
  6903   0024B6  0E00               	movlw	0
  6904   0024B8  6E20               	movwf	(___flmul@a+2)^0,c
  6905   0024BA  0E00               	movlw	0
  6906   0024BC  6E21               	movwf	(___flmul@a+3)^0,c
  6907   0024BE                     l1326:
  6908   0024BE  502B               	movf	___flmul@aexp^0,w,c
  6909   0024C0  B4D8               	btfsc	status,2,c
  6910   0024C2  EF65  F012         	goto	u2111
  6911   0024C6  EF67  F012         	goto	u2110
  6912   0024CA                     u2111:
  6913   0024CA  EF6F  F012         	goto	l3018
  6914   0024CE                     u2110:
  6915   0024CE  502C               	movf	___flmul@bexp^0,w,c
  6916   0024D0  A4D8               	btfss	status,2,c
  6917   0024D2  EF6D  F012         	goto	u2121
  6918   0024D6  EF6F  F012         	goto	u2120
  6919   0024DA                     u2121:
  6920   0024DA  EF79  F012         	goto	l3022
  6921   0024DE                     u2120:
  6922   0024DE                     l3018:
  6923   0024DE  0E00               	movlw	0
  6924   0024E0  6E1A               	movwf	?___flmul^0,c
  6925   0024E2  0E00               	movlw	0
  6926   0024E4  6E1B               	movwf	(?___flmul+1)^0,c
  6927   0024E6  0E00               	movlw	0
  6928   0024E8  6E1C               	movwf	(?___flmul+2)^0,c
  6929   0024EA  0E00               	movlw	0
  6930   0024EC  6E1D               	movwf	(?___flmul+3)^0,c
  6931   0024EE  EF11  F014         	goto	l1330
  6932   0024F2                     l3022:
  6933   0024F2  5020               	movf	(___flmul@a+2)^0,w,c
  6934   0024F4  021A               	mulwf	___flmul@b^0,c
  6935   0024F6  CFF3 F031          	movff	prodl,___flmul@temp
  6936   0024FA  CFF4 F032          	movff	prodh,___flmul@temp+1
  6937   0024FE  5031               	movf	___flmul@temp^0,w,c
  6938   002500  6E27               	movwf	___flmul@grs^0,c
  6939   002502  6A28               	clrf	(___flmul@grs+1)^0,c
  6940   002504  6A29               	clrf	(___flmul@grs+2)^0,c
  6941   002506  6A2A               	clrf	(___flmul@grs+3)^0,c
  6942   002508  5032               	movf	(___flmul@temp+1)^0,w,c
  6943   00250A  6E2D               	movwf	___flmul@prod^0,c
  6944   00250C  6A2E               	clrf	(___flmul@prod+1)^0,c
  6945   00250E  6A2F               	clrf	(___flmul@prod+2)^0,c
  6946   002510  6A30               	clrf	(___flmul@prod+3)^0,c
  6947   002512  501F               	movf	(___flmul@a+1)^0,w,c
  6948   002514  021B               	mulwf	(___flmul@b+1)^0,c
  6949   002516  CFF3 F031          	movff	prodl,___flmul@temp
  6950   00251A  CFF4 F032          	movff	prodh,___flmul@temp+1
  6951   00251E  5031               	movf	___flmul@temp^0,w,c
  6952   002520  2627               	addwf	___flmul@grs^0,f,c
  6953   002522  0E00               	movlw	0
  6954   002524  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6955   002526  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6956   002528  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6957   00252A  5032               	movf	(___flmul@temp+1)^0,w,c
  6958   00252C  262D               	addwf	___flmul@prod^0,f,c
  6959   00252E  0E00               	movlw	0
  6960   002530  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6961   002532  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6962   002534  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6963   002536  501E               	movf	___flmul@a^0,w,c
  6964   002538  021C               	mulwf	(___flmul@b+2)^0,c
  6965   00253A  CFF3 F031          	movff	prodl,___flmul@temp
  6966   00253E  CFF4 F032          	movff	prodh,___flmul@temp+1
  6967   002542  5031               	movf	___flmul@temp^0,w,c
  6968   002544  2627               	addwf	___flmul@grs^0,f,c
  6969   002546  0E00               	movlw	0
  6970   002548  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6971   00254A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6972   00254C  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6973   00254E  5032               	movf	(___flmul@temp+1)^0,w,c
  6974   002550  262D               	addwf	___flmul@prod^0,f,c
  6975   002552  0E00               	movlw	0
  6976   002554  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6977   002556  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6978   002558  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6979   00255A  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6980   00255E  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6981   002562  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6982   002566  6A27               	clrf	___flmul@grs^0,c
  6983   002568  501E               	movf	___flmul@a^0,w,c
  6984   00256A  021B               	mulwf	(___flmul@b+1)^0,c
  6985   00256C  CFF3 F031          	movff	prodl,___flmul@temp
  6986   002570  CFF4 F032          	movff	prodh,___flmul@temp+1
  6987   002574  5031               	movf	___flmul@temp^0,w,c
  6988   002576  2627               	addwf	___flmul@grs^0,f,c
  6989   002578  5032               	movf	(___flmul@temp+1)^0,w,c
  6990   00257A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6991   00257C  0E00               	movlw	0
  6992   00257E  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6993   002580  0E00               	movlw	0
  6994   002582  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6995   002584  501F               	movf	(___flmul@a+1)^0,w,c
  6996   002586  021A               	mulwf	___flmul@b^0,c
  6997   002588  CFF3 F031          	movff	prodl,___flmul@temp
  6998   00258C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6999   002590  5031               	movf	___flmul@temp^0,w,c
  7000   002592  2627               	addwf	___flmul@grs^0,f,c
  7001   002594  5032               	movf	(___flmul@temp+1)^0,w,c
  7002   002596  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7003   002598  0E00               	movlw	0
  7004   00259A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7005   00259C  0E00               	movlw	0
  7006   00259E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7007   0025A0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7008   0025A4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7009   0025A8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7010   0025AC  6A27               	clrf	___flmul@grs^0,c
  7011   0025AE  501E               	movf	___flmul@a^0,w,c
  7012   0025B0  021A               	mulwf	___flmul@b^0,c
  7013   0025B2  CFF3 F031          	movff	prodl,___flmul@temp
  7014   0025B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  7015   0025BA  5031               	movf	___flmul@temp^0,w,c
  7016   0025BC  2627               	addwf	___flmul@grs^0,f,c
  7017   0025BE  5032               	movf	(___flmul@temp+1)^0,w,c
  7018   0025C0  2228               	addwfc	(___flmul@grs+1)^0,f,c
  7019   0025C2  0E00               	movlw	0
  7020   0025C4  2229               	addwfc	(___flmul@grs+2)^0,f,c
  7021   0025C6  0E00               	movlw	0
  7022   0025C8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  7023   0025CA  5020               	movf	(___flmul@a+2)^0,w,c
  7024   0025CC  021B               	mulwf	(___flmul@b+1)^0,c
  7025   0025CE  CFF3 F031          	movff	prodl,___flmul@temp
  7026   0025D2  CFF4 F032          	movff	prodh,___flmul@temp+1
  7027   0025D6  5031               	movf	___flmul@temp^0,w,c
  7028   0025D8  262D               	addwf	___flmul@prod^0,f,c
  7029   0025DA  5032               	movf	(___flmul@temp+1)^0,w,c
  7030   0025DC  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7031   0025DE  0E00               	movlw	0
  7032   0025E0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7033   0025E2  0E00               	movlw	0
  7034   0025E4  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7035   0025E6  501F               	movf	(___flmul@a+1)^0,w,c
  7036   0025E8  021C               	mulwf	(___flmul@b+2)^0,c
  7037   0025EA  CFF3 F031          	movff	prodl,___flmul@temp
  7038   0025EE  CFF4 F032          	movff	prodh,___flmul@temp+1
  7039   0025F2  5031               	movf	___flmul@temp^0,w,c
  7040   0025F4  262D               	addwf	___flmul@prod^0,f,c
  7041   0025F6  5032               	movf	(___flmul@temp+1)^0,w,c
  7042   0025F8  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7043   0025FA  0E00               	movlw	0
  7044   0025FC  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7045   0025FE  0E00               	movlw	0
  7046   002600  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7047   002602  5020               	movf	(___flmul@a+2)^0,w,c
  7048   002604  021C               	mulwf	(___flmul@b+2)^0,c
  7049   002606  CFF3 F031          	movff	prodl,___flmul@temp
  7050   00260A  CFF4 F032          	movff	prodh,___flmul@temp+1
  7051   00260E  5031               	movf	___flmul@temp^0,w,c
  7052   002610  6E22               	movwf	??___flmul^0,c
  7053   002612  5032               	movf	(___flmul@temp+1)^0,w,c
  7054   002614  6E23               	movwf	(??___flmul+1)^0,c
  7055   002616  6A24               	clrf	(??___flmul+2)^0,c
  7056   002618  6A25               	clrf	(??___flmul+3)^0,c
  7057   00261A  C024  F025         	movff	??___flmul+2,??___flmul+3
  7058   00261E  C023  F024         	movff	??___flmul+1,??___flmul+2
  7059   002622  C022  F023         	movff	??___flmul,??___flmul+1
  7060   002626  6A22               	clrf	??___flmul^0,c
  7061   002628  5022               	movf	??___flmul^0,w,c
  7062   00262A  262D               	addwf	___flmul@prod^0,f,c
  7063   00262C  5023               	movf	(??___flmul+1)^0,w,c
  7064   00262E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7065   002630  5024               	movf	(??___flmul+2)^0,w,c
  7066   002632  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7067   002634  5025               	movf	(??___flmul+3)^0,w,c
  7068   002636  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7069   002638  C027  F022         	movff	___flmul@grs,??___flmul
  7070   00263C  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  7071   002640  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  7072   002644  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  7073   002648  0E19               	movlw	25
  7074   00264A  EF2C  F013         	goto	u2130
  7075   00264E                     u2135:
  7076   00264E  90D8               	bcf	status,0,c
  7077   002650  3225               	rrcf	(??___flmul+3)^0,f,c
  7078   002652  3224               	rrcf	(??___flmul+2)^0,f,c
  7079   002654  3223               	rrcf	(??___flmul+1)^0,f,c
  7080   002656  3222               	rrcf	??___flmul^0,f,c
  7081   002658                     u2130:
  7082   002658  2EE8               	decfsz	wreg,f,c
  7083   00265A  EF27  F013         	goto	u2135
  7084   00265E  5022               	movf	??___flmul^0,w,c
  7085   002660  262D               	addwf	___flmul@prod^0,f,c
  7086   002662  5023               	movf	(??___flmul+1)^0,w,c
  7087   002664  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7088   002666  5024               	movf	(??___flmul+2)^0,w,c
  7089   002668  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7090   00266A  5025               	movf	(??___flmul+3)^0,w,c
  7091   00266C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7092   00266E  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  7093   002672  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  7094   002676  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  7095   00267A  6A27               	clrf	___flmul@grs^0,c
  7096   00267C  502B               	movf	___flmul@aexp^0,w,c
  7097   00267E  C02C  F022         	movff	___flmul@bexp,??___flmul
  7098   002682  6A23               	clrf	(??___flmul+1)^0,c
  7099   002684  2622               	addwf	??___flmul^0,f,c
  7100   002686  0E00               	movlw	0
  7101   002688  2223               	addwfc	(??___flmul+1)^0,f,c
  7102   00268A  0E82               	movlw	130
  7103   00268C  2422               	addwf	??___flmul^0,w,c
  7104   00268E  6E31               	movwf	___flmul@temp^0,c
  7105   002690  0EFF               	movlw	255
  7106   002692  2023               	addwfc	(??___flmul+1)^0,w,c
  7107   002694  6E32               	movwf	(___flmul@temp+1)^0,c
  7108   002696  EF62  F013         	goto	l3070
  7109   00269A                     l3064:
  7110   00269A  90D8               	bcf	status,0,c
  7111   00269C  362D               	rlcf	___flmul@prod^0,f,c
  7112   00269E  362E               	rlcf	(___flmul@prod+1)^0,f,c
  7113   0026A0  362F               	rlcf	(___flmul@prod+2)^0,f,c
  7114   0026A2  3630               	rlcf	(___flmul@prod+3)^0,f,c
  7115   0026A4  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7116   0026A6  EF57  F013         	goto	u2141
  7117   0026AA  EF59  F013         	goto	u2140
  7118   0026AE                     u2141:
  7119   0026AE  EF5A  F013         	goto	l1333
  7120   0026B2                     u2140:
  7121   0026B2  802D               	bsf	___flmul@prod^0,0,c
  7122   0026B4                     l1333:
  7123   0026B4  90D8               	bcf	status,0,c
  7124   0026B6  3627               	rlcf	___flmul@grs^0,f,c
  7125   0026B8  3628               	rlcf	(___flmul@grs+1)^0,f,c
  7126   0026BA  3629               	rlcf	(___flmul@grs+2)^0,f,c
  7127   0026BC  362A               	rlcf	(___flmul@grs+3)^0,f,c
  7128   0026BE  0631               	decf	___flmul@temp^0,f,c
  7129   0026C0  A0D8               	btfss	status,0,c
  7130   0026C2  0632               	decf	(___flmul@temp+1)^0,f,c
  7131   0026C4                     l3070:
  7132   0026C4  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  7133   0026C6  EF67  F013         	goto	u2151
  7134   0026CA  EF69  F013         	goto	u2150
  7135   0026CE                     u2151:
  7136   0026CE  EF4D  F013         	goto	l3064
  7137   0026D2                     u2150:
  7138   0026D2  0E00               	movlw	0
  7139   0026D4  6E2B               	movwf	___flmul@aexp^0,c
  7140   0026D6  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  7141   0026D8  EF70  F013         	goto	u2161
  7142   0026DC  EF72  F013         	goto	u2160
  7143   0026E0                     u2161:
  7144   0026E0  EF96  F013         	goto	l1335
  7145   0026E4                     u2160:
  7146   0026E4  0EFF               	movlw	255
  7147   0026E6  1427               	andwf	___flmul@grs^0,w,c
  7148   0026E8  6E22               	movwf	??___flmul^0,c
  7149   0026EA  0EFF               	movlw	255
  7150   0026EC  1428               	andwf	(___flmul@grs+1)^0,w,c
  7151   0026EE  6E23               	movwf	(??___flmul+1)^0,c
  7152   0026F0  0EFF               	movlw	255
  7153   0026F2  1429               	andwf	(___flmul@grs+2)^0,w,c
  7154   0026F4  6E24               	movwf	(??___flmul+2)^0,c
  7155   0026F6  0E7F               	movlw	127
  7156   0026F8  142A               	andwf	(___flmul@grs+3)^0,w,c
  7157   0026FA  6E25               	movwf	(??___flmul+3)^0,c
  7158   0026FC  5022               	movf	??___flmul^0,w,c
  7159   0026FE  1023               	iorwf	(??___flmul+1)^0,w,c
  7160   002700  1024               	iorwf	(??___flmul+2)^0,w,c
  7161   002702  1025               	iorwf	(??___flmul+3)^0,w,c
  7162   002704  B4D8               	btfsc	status,2,c
  7163   002706  EF87  F013         	goto	u2171
  7164   00270A  EF89  F013         	goto	u2170
  7165   00270E                     u2171:
  7166   00270E  EF8D  F013         	goto	l1336
  7167   002712                     u2170:
  7168   002712                     l3078:
  7169   002712  0E01               	movlw	1
  7170   002714  6E2B               	movwf	___flmul@aexp^0,c
  7171   002716  EF96  F013         	goto	l1335
  7172   00271A                     l1336:
  7173   00271A  A02D               	btfss	___flmul@prod^0,0,c
  7174   00271C  EF92  F013         	goto	u2181
  7175   002720  EF94  F013         	goto	u2180
  7176   002724                     u2181:
  7177   002724  EF96  F013         	goto	l1335
  7178   002728                     u2180:
  7179   002728  EF89  F013         	goto	l3078
  7180   00272C                     l1335:
  7181   00272C  502B               	movf	___flmul@aexp^0,w,c
  7182   00272E  B4D8               	btfsc	status,2,c
  7183   002730  EF9C  F013         	goto	u2191
  7184   002734  EF9E  F013         	goto	u2190
  7185   002738                     u2191:
  7186   002738  EFC2  F013         	goto	l3090
  7187   00273C                     u2190:
  7188   00273C  0E01               	movlw	1
  7189   00273E  262D               	addwf	___flmul@prod^0,f,c
  7190   002740  0E00               	movlw	0
  7191   002742  222E               	addwfc	(___flmul@prod+1)^0,f,c
  7192   002744  222F               	addwfc	(___flmul@prod+2)^0,f,c
  7193   002746  2230               	addwfc	(___flmul@prod+3)^0,f,c
  7194   002748  A030               	btfss	(___flmul@prod+3)^0,0,c
  7195   00274A  EFA9  F013         	goto	u2201
  7196   00274E  EFAB  F013         	goto	u2200
  7197   002752                     u2201:
  7198   002752  EFC2  F013         	goto	l3090
  7199   002756                     u2200:
  7200   002756  C02D  F022         	movff	___flmul@prod,??___flmul
  7201   00275A  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  7202   00275E  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  7203   002762  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  7204   002766  3425               	rlcf	(??___flmul+3)^0,w,c
  7205   002768  3225               	rrcf	(??___flmul+3)^0,f,c
  7206   00276A  3224               	rrcf	(??___flmul+2)^0,f,c
  7207   00276C  3223               	rrcf	(??___flmul+1)^0,f,c
  7208   00276E  3222               	rrcf	??___flmul^0,f,c
  7209   002770  C022  F02D         	movff	??___flmul,___flmul@prod
  7210   002774  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  7211   002778  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  7212   00277C  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  7213   002780  4A31               	infsnz	___flmul@temp^0,f,c
  7214   002782  2A32               	incf	(___flmul@temp+1)^0,f,c
  7215   002784                     l3090:
  7216   002784  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7217   002786  EFCD  F013         	goto	u2211
  7218   00278A  5032               	movf	(___flmul@temp+1)^0,w,c
  7219   00278C  E108               	bnz	u2210
  7220   00278E  2831               	incf	___flmul@temp^0,w,c
  7221   002790  A0D8               	btfss	status,0,c
  7222   002792  EFCD  F013         	goto	u2211
  7223   002796  EFCF  F013         	goto	u2210
  7224   00279A                     u2211:
  7225   00279A  EFD9  F013         	goto	l3094
  7226   00279E                     u2210:
  7227   00279E  0E00               	movlw	0
  7228   0027A0  6E2D               	movwf	___flmul@prod^0,c
  7229   0027A2  0E00               	movlw	0
  7230   0027A4  6E2E               	movwf	(___flmul@prod+1)^0,c
  7231   0027A6  0E80               	movlw	128
  7232   0027A8  6E2F               	movwf	(___flmul@prod+2)^0,c
  7233   0027AA  0E7F               	movlw	127
  7234   0027AC  6E30               	movwf	(___flmul@prod+3)^0,c
  7235   0027AE  EF07  F014         	goto	l3106
  7236   0027B2                     l3094:
  7237   0027B2  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  7238   0027B4  EFE6  F013         	goto	u2220
  7239   0027B8  5032               	movf	(___flmul@temp+1)^0,w,c
  7240   0027BA  E106               	bnz	u2221
  7241   0027BC  0431               	decf	___flmul@temp^0,w,c
  7242   0027BE  B0D8               	btfsc	status,0,c
  7243   0027C0  EFE4  F013         	goto	u2221
  7244   0027C4  EFE6  F013         	goto	u2220
  7245   0027C8                     u2221:
  7246   0027C8  EFF2  F013         	goto	l1343
  7247   0027CC                     u2220:
  7248   0027CC  0E00               	movlw	0
  7249   0027CE  6E2D               	movwf	___flmul@prod^0,c
  7250   0027D0  0E00               	movlw	0
  7251   0027D2  6E2E               	movwf	(___flmul@prod+1)^0,c
  7252   0027D4  0E00               	movlw	0
  7253   0027D6  6E2F               	movwf	(___flmul@prod+2)^0,c
  7254   0027D8  0E00               	movlw	0
  7255   0027DA  6E30               	movwf	(___flmul@prod+3)^0,c
  7256   0027DC  0E00               	movlw	0
  7257   0027DE  6E26               	movwf	___flmul@sign^0,c
  7258   0027E0  EF07  F014         	goto	l3106
  7259   0027E4                     l1343:
  7260   0027E4  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  7261   0027E8  0EFF               	movlw	255
  7262   0027EA  162D               	andwf	___flmul@prod^0,f,c
  7263   0027EC  0EFF               	movlw	255
  7264   0027EE  162E               	andwf	(___flmul@prod+1)^0,f,c
  7265   0027F0  0E7F               	movlw	127
  7266   0027F2  162F               	andwf	(___flmul@prod+2)^0,f,c
  7267   0027F4  0E00               	movlw	0
  7268   0027F6  1630               	andwf	(___flmul@prod+3)^0,f,c
  7269   0027F8  A02C               	btfss	___flmul@bexp^0,0,c
  7270   0027FA  EF01  F014         	goto	u2231
  7271   0027FE  EF03  F014         	goto	u2230
  7272   002802                     u2231:
  7273   002802  EF04  F014         	goto	l3104
  7274   002806                     u2230:
  7275   002806  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  7276   002808                     l3104:
  7277   002808  90D8               	bcf	status,0,c
  7278   00280A  302C               	rrcf	___flmul@bexp^0,w,c
  7279   00280C  6E30               	movwf	(___flmul@prod+3)^0,c
  7280   00280E                     l3106:
  7281   00280E  5026               	movf	___flmul@sign^0,w,c
  7282   002810  1230               	iorwf	(___flmul@prod+3)^0,f,c
  7283   002812  C02D  F01A         	movff	___flmul@prod,?___flmul
  7284   002816  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  7285   00281A  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  7286   00281E  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  7287   002822                     l1330:
  7288   002822  0012               	return		;funcret
  7289   002824                     __end_of___flmul:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _fullSpeedAhead *****************
  7293 ;; Defined at:
  7294 ;;		line 157 in file "dc_motor.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7297 ;;		 -> motorL(9), 
  7298 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7299 ;;		 -> motorR(9), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  i               2   24[COMRAM] unsigned int 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;Total ram usage:        7 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 3
  7318 ;; This function calls:
  7319 ;;		_setMotorPWM
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;;		_White
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text33
  7327   003E1A                     __ptext33:
  7328                           	callstack 0
  7329   003E1A                     _fullSpeedAhead:
  7330                           	callstack 27
  7331   003E1A                     
  7332                           ;dc_motor.c: 157: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 158: {;dc_motor.c: 159:  (mL->direction) = 1;
  7333   003E1A  EE20 F001          	lfsr	2,1
  7334   003E1E  5014               	movf	fullSpeedAhead@mL^0,w,c
  7335   003E20  26D9               	addwf	fsr2l,f,c
  7336   003E22  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7337   003E24  22DA               	addwfc	fsr2h,f,c
  7338   003E26  0E01               	movlw	1
  7339   003E28  6EDF               	movwf	indf2,c
  7340                           
  7341                           ;dc_motor.c: 160:  (mR->direction) = 1;
  7342   003E2A  EE20 F001          	lfsr	2,1
  7343   003E2E  5016               	movf	fullSpeedAhead@mR^0,w,c
  7344   003E30  26D9               	addwf	fsr2l,f,c
  7345   003E32  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7346   003E34  22DA               	addwfc	fsr2h,f,c
  7347   003E36  0E01               	movlw	1
  7348   003E38  6EDF               	movwf	indf2,c
  7349   003E3A                     
  7350                           ;dc_motor.c: 162:     for (unsigned int i = 0; i <30; i++)
  7351   003E3A  0E00               	movlw	0
  7352   003E3C  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7353   003E3E  0E00               	movlw	0
  7354   003E40  6E19               	movwf	fullSpeedAhead@i^0,c
  7355   003E42                     l3252:
  7356                           
  7357                           ;dc_motor.c: 163:     {;dc_motor.c: 164:         (mL->power)++;
  7358   003E42  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7359   003E46  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7360   003E4A  2ADF               	incf	indf2,f,c
  7361                           
  7362                           ;dc_motor.c: 165:         (mR->power)++;
  7363   003E4C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7364   003E50  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7365   003E54  2ADF               	incf	indf2,f,c
  7366   003E56                     
  7367                           ;dc_motor.c: 166:         setMotorPWM(mL);
  7368   003E56  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7369   003E5A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7370   003E5E  ECB4  F019         	call	_setMotorPWM	;wreg free
  7371   003E62                     
  7372                           ;dc_motor.c: 167:         setMotorPWM(mR);
  7373   003E62  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7374   003E66  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7375   003E6A  ECB4  F019         	call	_setMotorPWM	;wreg free
  7376   003E6E                     
  7377                           ;dc_motor.c: 168:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7378   003E6E  0E09               	movlw	9
  7379   003E70  6E18               	movwf	??_fullSpeedAhead^0,c
  7380   003E72  0E4E               	movlw	78
  7381   003E74                     u3847:
  7382   003E74  2EE8               	decfsz	wreg,f,c
  7383   003E76  D7FE               	bra	u3847
  7384   003E78  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7385   003E7A  D7FC               	bra	u3847
  7386   003E7C  D000               	nop2	
  7387   003E7E                     
  7388                           ;dc_motor.c: 169:     }
  7389   003E7E  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7390   003E80  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7391   003E82  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7392   003E84  E109               	bnz	u2430
  7393   003E86  0E1E               	movlw	30
  7394   003E88  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7395   003E8A  A0D8               	btfss	status,0,c
  7396   003E8C  EF4A  F01F         	goto	u2431
  7397   003E90  EF4C  F01F         	goto	u2430
  7398   003E94                     u2431:
  7399   003E94  EF21  F01F         	goto	l3252
  7400   003E98                     u2430:
  7401   003E98  0012               	return		;funcret
  7402   003E9A                     __end_of_fullSpeedAhead:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function ___flge *****************
  7406 ;; Defined at:
  7407 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  ff1             4   74[COMRAM] void 
  7410 ;;  ff2             4   78[COMRAM] void 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;		None               void
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7422 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;Total ram usage:       12 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 1
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_RGB2Hue
  7433 ;;		_Hue2Colour
  7434 ;;		_main
  7435 ;;		_White
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text34
  7440   0035DA                     __ptext34:
  7441                           	callstack 0
  7442   0035DA                     ___flge:
  7443                           	callstack 29
  7444   0035DA  0E00               	movlw	0
  7445   0035DC  144B               	andwf	___flge@ff1^0,w,c
  7446   0035DE  6E53               	movwf	??___flge^0,c
  7447   0035E0  0E00               	movlw	0
  7448   0035E2  144C               	andwf	(___flge@ff1+1)^0,w,c
  7449   0035E4  6E54               	movwf	(??___flge+1)^0,c
  7450   0035E6  0E80               	movlw	128
  7451   0035E8  144D               	andwf	(___flge@ff1+2)^0,w,c
  7452   0035EA  6E55               	movwf	(??___flge+2)^0,c
  7453   0035EC  0E7F               	movlw	127
  7454   0035EE  144E               	andwf	(___flge@ff1+3)^0,w,c
  7455   0035F0  6E56               	movwf	(??___flge+3)^0,c
  7456   0035F2  5053               	movf	??___flge^0,w,c
  7457   0035F4  1054               	iorwf	(??___flge+1)^0,w,c
  7458   0035F6  1055               	iorwf	(??___flge+2)^0,w,c
  7459   0035F8  1056               	iorwf	(??___flge+3)^0,w,c
  7460   0035FA  A4D8               	btfss	status,2,c
  7461   0035FC  EF02  F01B         	goto	u2831
  7462   003600  EF04  F01B         	goto	u2830
  7463   003604                     u2831:
  7464   003604  EF0C  F01B         	goto	l3486
  7465   003608                     u2830:
  7466   003608  0E00               	movlw	0
  7467   00360A  6E4B               	movwf	___flge@ff1^0,c
  7468   00360C  0E00               	movlw	0
  7469   00360E  6E4C               	movwf	(___flge@ff1+1)^0,c
  7470   003610  0E00               	movlw	0
  7471   003612  6E4D               	movwf	(___flge@ff1+2)^0,c
  7472   003614  0E00               	movlw	0
  7473   003616  6E4E               	movwf	(___flge@ff1+3)^0,c
  7474   003618                     l3486:
  7475   003618  0E00               	movlw	0
  7476   00361A  144F               	andwf	___flge@ff2^0,w,c
  7477   00361C  6E53               	movwf	??___flge^0,c
  7478   00361E  0E00               	movlw	0
  7479   003620  1450               	andwf	(___flge@ff2+1)^0,w,c
  7480   003622  6E54               	movwf	(??___flge+1)^0,c
  7481   003624  0E80               	movlw	128
  7482   003626  1451               	andwf	(___flge@ff2+2)^0,w,c
  7483   003628  6E55               	movwf	(??___flge+2)^0,c
  7484   00362A  0E7F               	movlw	127
  7485   00362C  1452               	andwf	(___flge@ff2+3)^0,w,c
  7486   00362E  6E56               	movwf	(??___flge+3)^0,c
  7487   003630  5053               	movf	??___flge^0,w,c
  7488   003632  1054               	iorwf	(??___flge+1)^0,w,c
  7489   003634  1055               	iorwf	(??___flge+2)^0,w,c
  7490   003636  1056               	iorwf	(??___flge+3)^0,w,c
  7491   003638  A4D8               	btfss	status,2,c
  7492   00363A  EF21  F01B         	goto	u2841
  7493   00363E  EF23  F01B         	goto	u2840
  7494   003642                     u2841:
  7495   003642  EF2B  F01B         	goto	l3490
  7496   003646                     u2840:
  7497   003646  0E00               	movlw	0
  7498   003648  6E4F               	movwf	___flge@ff2^0,c
  7499   00364A  0E00               	movlw	0
  7500   00364C  6E50               	movwf	(___flge@ff2+1)^0,c
  7501   00364E  0E00               	movlw	0
  7502   003650  6E51               	movwf	(___flge@ff2+2)^0,c
  7503   003652  0E00               	movlw	0
  7504   003654  6E52               	movwf	(___flge@ff2+3)^0,c
  7505   003656                     l3490:
  7506   003656  AE4E               	btfss	(___flge@ff1+3)^0,7,c
  7507   003658  EF30  F01B         	goto	u2851
  7508   00365C  EF32  F01B         	goto	u2850
  7509   003660                     u2851:
  7510   003660  EF3B  F01B         	goto	l3494
  7511   003664                     u2850:
  7512   003664  6C4B               	negf	___flge@ff1^0,c
  7513   003666  1E4C               	comf	(___flge@ff1+1)^0,f,c
  7514   003668  B0D8               	btfsc	status,0,c
  7515   00366A  2A4C               	incf	(___flge@ff1+1)^0,f,c
  7516   00366C  1E4D               	comf	(___flge@ff1+2)^0,f,c
  7517   00366E  B0D8               	btfsc	status,0,c
  7518   003670  2A4D               	incf	(___flge@ff1+2)^0,f,c
  7519   003672  0E80               	movlw	128
  7520   003674  564E               	subfwb	(___flge@ff1+3)^0,f,c
  7521   003676                     l3494:
  7522   003676  AE52               	btfss	(___flge@ff2+3)^0,7,c
  7523   003678  EF40  F01B         	goto	u2861
  7524   00367C  EF42  F01B         	goto	u2860
  7525   003680                     u2861:
  7526   003680  EF4B  F01B         	goto	l977
  7527   003684                     u2860:
  7528   003684  6C4F               	negf	___flge@ff2^0,c
  7529   003686  1E50               	comf	(___flge@ff2+1)^0,f,c
  7530   003688  B0D8               	btfsc	status,0,c
  7531   00368A  2A50               	incf	(___flge@ff2+1)^0,f,c
  7532   00368C  1E51               	comf	(___flge@ff2+2)^0,f,c
  7533   00368E  B0D8               	btfsc	status,0,c
  7534   003690  2A51               	incf	(___flge@ff2+2)^0,f,c
  7535   003692  0E80               	movlw	128
  7536   003694  5652               	subfwb	(___flge@ff2+3)^0,f,c
  7537   003696                     l977:
  7538   003696  0E00               	movlw	0
  7539   003698  1A4B               	xorwf	___flge@ff1^0,f,c
  7540   00369A  0E00               	movlw	0
  7541   00369C  1A4C               	xorwf	(___flge@ff1+1)^0,f,c
  7542   00369E  0E00               	movlw	0
  7543   0036A0  1A4D               	xorwf	(___flge@ff1+2)^0,f,c
  7544   0036A2  0E80               	movlw	128
  7545   0036A4  1A4E               	xorwf	(___flge@ff1+3)^0,f,c
  7546   0036A6  0E00               	movlw	0
  7547   0036A8  1A4F               	xorwf	___flge@ff2^0,f,c
  7548   0036AA  0E00               	movlw	0
  7549   0036AC  1A50               	xorwf	(___flge@ff2+1)^0,f,c
  7550   0036AE  0E00               	movlw	0
  7551   0036B0  1A51               	xorwf	(___flge@ff2+2)^0,f,c
  7552   0036B2  0E80               	movlw	128
  7553   0036B4  1A52               	xorwf	(___flge@ff2+3)^0,f,c
  7554   0036B6  504F               	movf	___flge@ff2^0,w,c
  7555   0036B8  5C4B               	subwf	___flge@ff1^0,w,c
  7556   0036BA  5050               	movf	(___flge@ff2+1)^0,w,c
  7557   0036BC  584C               	subwfb	(___flge@ff1+1)^0,w,c
  7558   0036BE  5051               	movf	(___flge@ff2+2)^0,w,c
  7559   0036C0  584D               	subwfb	(___flge@ff1+2)^0,w,c
  7560   0036C2  5052               	movf	(___flge@ff2+3)^0,w,c
  7561   0036C4  584E               	subwfb	(___flge@ff1+3)^0,w,c
  7562   0036C6  B0D8               	btfsc	status,0,c
  7563   0036C8  EF68  F01B         	goto	u2871
  7564   0036CC  EF6A  F01B         	goto	u2870
  7565   0036D0                     u2871:
  7566   0036D0  EF6D  F01B         	goto	l3500
  7567   0036D4                     u2870:
  7568   0036D4  90D8               	bcf	status,0,c
  7569   0036D6  EF6E  F01B         	goto	l982
  7570   0036DA                     l3500:
  7571   0036DA  80D8               	bsf	status,0,c
  7572   0036DC                     l982:
  7573   0036DC  0012               	return		;funcret
  7574   0036DE                     __end_of___flge:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function ___fladd *****************
  7578 ;; Defined at:
  7579 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  b               4   58[COMRAM] void 
  7582 ;;  a               4   62[COMRAM] void 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  grs             1   73[COMRAM] unsigned char 
  7585 ;;  bexp            1   72[COMRAM] unsigned char 
  7586 ;;  aexp            1   71[COMRAM] unsigned char 
  7587 ;;  signs           1   70[COMRAM] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  4   58[COMRAM] unsigned char 
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7598 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7601 ;;Total ram usage:       16 bytes
  7602 ;; Hardware stack levels used: 1
  7603 ;; Hardware stack levels required when called: 1
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_colour_read_all
  7608 ;;		_RGB2Hue
  7609 ;;		_White
  7610 ;;		___flsub
  7611 ;;		_memoryUpdateTime
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text35
  7616   001A94                     __ptext35:
  7617                           	callstack 0
  7618   001A94                     ___fladd:
  7619                           	callstack 28
  7620   001A94  503E               	movf	(___fladd@b+3)^0,w,c
  7621   001A96  0B80               	andlw	128
  7622   001A98  6E47               	movwf	___fladd@signs^0,c
  7623   001A9A  503E               	movf	(___fladd@b+3)^0,w,c
  7624   001A9C  243E               	addwf	(___fladd@b+3)^0,w,c
  7625   001A9E  6E49               	movwf	___fladd@bexp^0,c
  7626   001AA0  AE3D               	btfss	(___fladd@b+2)^0,7,c
  7627   001AA2  EF55  F00D         	goto	u2441
  7628   001AA6  EF57  F00D         	goto	u2440
  7629   001AAA                     u2441:
  7630   001AAA  EF58  F00D         	goto	l3286
  7631   001AAE                     u2440:
  7632   001AAE  8049               	bsf	___fladd@bexp^0,0,c
  7633   001AB0                     l3286:
  7634   001AB0  5049               	movf	___fladd@bexp^0,w,c
  7635   001AB2  B4D8               	btfsc	status,2,c
  7636   001AB4  EF5E  F00D         	goto	u2451
  7637   001AB8  EF60  F00D         	goto	u2450
  7638   001ABC                     u2451:
  7639   001ABC  EF75  F00D         	goto	l3296
  7640   001AC0                     u2450:
  7641   001AC0  2849               	incf	___fladd@bexp^0,w,c
  7642   001AC2  A4D8               	btfss	status,2,c
  7643   001AC4  EF66  F00D         	goto	u2461
  7644   001AC8  EF68  F00D         	goto	u2460
  7645   001ACC                     u2461:
  7646   001ACC  EF70  F00D         	goto	l3292
  7647   001AD0                     u2460:
  7648   001AD0  0E00               	movlw	0
  7649   001AD2  6E3B               	movwf	___fladd@b^0,c
  7650   001AD4  0E00               	movlw	0
  7651   001AD6  6E3C               	movwf	(___fladd@b+1)^0,c
  7652   001AD8  0E00               	movlw	0
  7653   001ADA  6E3D               	movwf	(___fladd@b+2)^0,c
  7654   001ADC  0E00               	movlw	0
  7655   001ADE  6E3E               	movwf	(___fladd@b+3)^0,c
  7656   001AE0                     l3292:
  7657   001AE0  8E3D               	bsf	(___fladd@b+2)^0,7,c
  7658   001AE2  0E00               	movlw	0
  7659   001AE4  6E3E               	movwf	(___fladd@b+3)^0,c
  7660   001AE6  EF7D  F00D         	goto	l3298
  7661   001AEA                     l3296:
  7662   001AEA  0E00               	movlw	0
  7663   001AEC  6E3B               	movwf	___fladd@b^0,c
  7664   001AEE  0E00               	movlw	0
  7665   001AF0  6E3C               	movwf	(___fladd@b+1)^0,c
  7666   001AF2  0E00               	movlw	0
  7667   001AF4  6E3D               	movwf	(___fladd@b+2)^0,c
  7668   001AF6  0E00               	movlw	0
  7669   001AF8  6E3E               	movwf	(___fladd@b+3)^0,c
  7670   001AFA                     l3298:
  7671   001AFA  5042               	movf	(___fladd@a+3)^0,w,c
  7672   001AFC  0B80               	andlw	128
  7673   001AFE  6E48               	movwf	___fladd@aexp^0,c
  7674   001B00  5047               	movf	___fladd@signs^0,w,c
  7675   001B02  1848               	xorwf	___fladd@aexp^0,w,c
  7676   001B04  B4D8               	btfsc	status,2,c
  7677   001B06  EF87  F00D         	goto	u2471
  7678   001B0A  EF89  F00D         	goto	u2470
  7679   001B0E                     u2471:
  7680   001B0E  EF8A  F00D         	goto	l3304
  7681   001B12                     u2470:
  7682   001B12  8C47               	bsf	___fladd@signs^0,6,c
  7683   001B14                     l3304:
  7684   001B14  5042               	movf	(___fladd@a+3)^0,w,c
  7685   001B16  2442               	addwf	(___fladd@a+3)^0,w,c
  7686   001B18  6E48               	movwf	___fladd@aexp^0,c
  7687   001B1A  AE41               	btfss	(___fladd@a+2)^0,7,c
  7688   001B1C  EF92  F00D         	goto	u2481
  7689   001B20  EF94  F00D         	goto	u2480
  7690   001B24                     u2481:
  7691   001B24  EF95  F00D         	goto	l3310
  7692   001B28                     u2480:
  7693   001B28  8048               	bsf	___fladd@aexp^0,0,c
  7694   001B2A                     l3310:
  7695   001B2A  5048               	movf	___fladd@aexp^0,w,c
  7696   001B2C  B4D8               	btfsc	status,2,c
  7697   001B2E  EF9B  F00D         	goto	u2491
  7698   001B32  EF9D  F00D         	goto	u2490
  7699   001B36                     u2491:
  7700   001B36  EFB2  F00D         	goto	l3320
  7701   001B3A                     u2490:
  7702   001B3A  2848               	incf	___fladd@aexp^0,w,c
  7703   001B3C  A4D8               	btfss	status,2,c
  7704   001B3E  EFA3  F00D         	goto	u2501
  7705   001B42  EFA5  F00D         	goto	u2500
  7706   001B46                     u2501:
  7707   001B46  EFAD  F00D         	goto	l3316
  7708   001B4A                     u2500:
  7709   001B4A  0E00               	movlw	0
  7710   001B4C  6E3F               	movwf	___fladd@a^0,c
  7711   001B4E  0E00               	movlw	0
  7712   001B50  6E40               	movwf	(___fladd@a+1)^0,c
  7713   001B52  0E00               	movlw	0
  7714   001B54  6E41               	movwf	(___fladd@a+2)^0,c
  7715   001B56  0E00               	movlw	0
  7716   001B58  6E42               	movwf	(___fladd@a+3)^0,c
  7717   001B5A                     l3316:
  7718   001B5A  8E41               	bsf	(___fladd@a+2)^0,7,c
  7719   001B5C  0E00               	movlw	0
  7720   001B5E  6E42               	movwf	(___fladd@a+3)^0,c
  7721   001B60  EFBA  F00D         	goto	l3322
  7722   001B64                     l3320:
  7723   001B64  0E00               	movlw	0
  7724   001B66  6E3F               	movwf	___fladd@a^0,c
  7725   001B68  0E00               	movlw	0
  7726   001B6A  6E40               	movwf	(___fladd@a+1)^0,c
  7727   001B6C  0E00               	movlw	0
  7728   001B6E  6E41               	movwf	(___fladd@a+2)^0,c
  7729   001B70  0E00               	movlw	0
  7730   001B72  6E42               	movwf	(___fladd@a+3)^0,c
  7731   001B74                     l3322:
  7732   001B74  5049               	movf	___fladd@bexp^0,w,c
  7733   001B76  5C48               	subwf	___fladd@aexp^0,w,c
  7734   001B78  B0D8               	btfsc	status,0,c
  7735   001B7A  EFC1  F00D         	goto	u2511
  7736   001B7E  EFC3  F00D         	goto	u2510
  7737   001B82                     u2511:
  7738   001B82  EFEA  F00D         	goto	l3358
  7739   001B86                     u2510:
  7740   001B86  AC47               	btfss	___fladd@signs^0,6,c
  7741   001B88  EFC8  F00D         	goto	u2521
  7742   001B8C  EFCA  F00D         	goto	u2520
  7743   001B90                     u2521:
  7744   001B90  EFCC  F00D         	goto	l3328
  7745   001B94                     u2520:
  7746   001B94  0E80               	movlw	128
  7747   001B96  1A47               	xorwf	___fladd@signs^0,f,c
  7748   001B98                     l3328:
  7749   001B98  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  7750   001B9C  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7751   001BA0  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  7752   001BA4  C03B  F04A         	movff	___fladd@b,___fladd@grs
  7753   001BA8  C03F  F03B         	movff	___fladd@a,___fladd@b
  7754   001BAC  C04A  F03F         	movff	___fladd@grs,___fladd@a
  7755   001BB0  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  7756   001BB4  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  7757   001BB8  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  7758   001BBC  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  7759   001BC0  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  7760   001BC4  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  7761   001BC8  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  7762   001BCC  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  7763   001BD0  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  7764   001BD4                     l3358:
  7765   001BD4  0E00               	movlw	0
  7766   001BD6  6E4A               	movwf	___fladd@grs^0,c
  7767   001BD8  5049               	movf	___fladd@bexp^0,w,c
  7768   001BDA  C048  F043         	movff	___fladd@aexp,??___fladd
  7769   001BDE  6A44               	clrf	(??___fladd+1)^0,c
  7770   001BE0  5E43               	subwf	??___fladd^0,f,c
  7771   001BE2  0E00               	movlw	0
  7772   001BE4  5A44               	subwfb	(??___fladd+1)^0,f,c
  7773   001BE6  BE44               	btfsc	(??___fladd+1)^0,7,c
  7774   001BE8  EFFF  F00D         	goto	u2531
  7775   001BEC  5044               	movf	(??___fladd+1)^0,w,c
  7776   001BEE  E109               	bnz	u2530
  7777   001BF0  0E1A               	movlw	26
  7778   001BF2  5C43               	subwf	??___fladd^0,w,c
  7779   001BF4  A0D8               	btfss	status,0,c
  7780   001BF6  EFFF  F00D         	goto	u2531
  7781   001BFA  EF01  F00E         	goto	u2530
  7782   001BFE                     u2531:
  7783   001BFE  EF38  F00E         	goto	l1241
  7784   001C02                     u2530:
  7785   001C02  503B               	movf	___fladd@b^0,w,c
  7786   001C04  103C               	iorwf	(___fladd@b+1)^0,w,c
  7787   001C06  103D               	iorwf	(___fladd@b+2)^0,w,c
  7788   001C08  103E               	iorwf	(___fladd@b+3)^0,w,c
  7789   001C0A  A4D8               	btfss	status,2,c
  7790   001C0C  EF0A  F00E         	goto	u2541
  7791   001C10  EF0D  F00E         	goto	u2540
  7792   001C14                     u2541:
  7793   001C14  0E01               	movlw	1
  7794   001C16  EF0E  F00E         	goto	u2550
  7795   001C1A                     u2540:
  7796   001C1A  0E00               	movlw	0
  7797   001C1C                     u2550:
  7798   001C1C  6E4A               	movwf	___fladd@grs^0,c
  7799   001C1E  0E00               	movlw	0
  7800   001C20  6E3B               	movwf	___fladd@b^0,c
  7801   001C22  0E00               	movlw	0
  7802   001C24  6E3C               	movwf	(___fladd@b+1)^0,c
  7803   001C26  0E00               	movlw	0
  7804   001C28  6E3D               	movwf	(___fladd@b+2)^0,c
  7805   001C2A  0E00               	movlw	0
  7806   001C2C  6E3E               	movwf	(___fladd@b+3)^0,c
  7807   001C2E  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  7808   001C32  EF41  F00E         	goto	l1240
  7809   001C36                     l1242:
  7810   001C36  A04A               	btfss	___fladd@grs^0,0,c
  7811   001C38  EF20  F00E         	goto	u2561
  7812   001C3C  EF22  F00E         	goto	u2560
  7813   001C40                     u2561:
  7814   001C40  EF28  F00E         	goto	l3370
  7815   001C44                     u2560:
  7816   001C44  90D8               	bcf	status,0,c
  7817   001C46  304A               	rrcf	___fladd@grs^0,w,c
  7818   001C48  0901               	iorlw	1
  7819   001C4A  6E4A               	movwf	___fladd@grs^0,c
  7820   001C4C  EF2A  F00E         	goto	l3372
  7821   001C50                     l3370:
  7822   001C50  90D8               	bcf	status,0,c
  7823   001C52  324A               	rrcf	___fladd@grs^0,f,c
  7824   001C54                     l3372:
  7825   001C54  A03B               	btfss	___fladd@b^0,0,c
  7826   001C56  EF2F  F00E         	goto	u2571
  7827   001C5A  EF31  F00E         	goto	u2570
  7828   001C5E                     u2571:
  7829   001C5E  EF32  F00E         	goto	l3376
  7830   001C62                     u2570:
  7831   001C62  8E4A               	bsf	___fladd@grs^0,7,c
  7832   001C64                     l3376:
  7833   001C64  343E               	rlcf	(___fladd@b+3)^0,w,c
  7834   001C66  323E               	rrcf	(___fladd@b+3)^0,f,c
  7835   001C68  323D               	rrcf	(___fladd@b+2)^0,f,c
  7836   001C6A  323C               	rrcf	(___fladd@b+1)^0,f,c
  7837   001C6C  323B               	rrcf	___fladd@b^0,f,c
  7838   001C6E  2A49               	incf	___fladd@bexp^0,f,c
  7839   001C70                     l1241:
  7840   001C70  5048               	movf	___fladd@aexp^0,w,c
  7841   001C72  5C49               	subwf	___fladd@bexp^0,w,c
  7842   001C74  A0D8               	btfss	status,0,c
  7843   001C76  EF3F  F00E         	goto	u2581
  7844   001C7A  EF41  F00E         	goto	u2580
  7845   001C7E                     u2581:
  7846   001C7E  EF1B  F00E         	goto	l1242
  7847   001C82                     u2580:
  7848   001C82                     l1240:
  7849   001C82  BC47               	btfsc	___fladd@signs^0,6,c
  7850   001C84  EF46  F00E         	goto	u2591
  7851   001C88  EF48  F00E         	goto	u2590
  7852   001C8C                     u2591:
  7853   001C8C  EF88  F00E         	goto	l3404
  7854   001C90                     u2590:
  7855   001C90  5049               	movf	___fladd@bexp^0,w,c
  7856   001C92  A4D8               	btfss	status,2,c
  7857   001C94  EF4E  F00E         	goto	u2601
  7858   001C98  EF50  F00E         	goto	u2600
  7859   001C9C                     u2601:
  7860   001C9C  EF5A  F00E         	goto	l3386
  7861   001CA0                     u2600:
  7862   001CA0  0E00               	movlw	0
  7863   001CA2  6E3B               	movwf	?___fladd^0,c
  7864   001CA4  0E00               	movlw	0
  7865   001CA6  6E3C               	movwf	(?___fladd+1)^0,c
  7866   001CA8  0E00               	movlw	0
  7867   001CAA  6E3D               	movwf	(?___fladd+2)^0,c
  7868   001CAC  0E00               	movlw	0
  7869   001CAE  6E3E               	movwf	(?___fladd+3)^0,c
  7870   001CB0  EFA9  F00F         	goto	l1249
  7871   001CB4                     l3386:
  7872   001CB4  503F               	movf	___fladd@a^0,w,c
  7873   001CB6  263B               	addwf	___fladd@b^0,f,c
  7874   001CB8  5040               	movf	(___fladd@a+1)^0,w,c
  7875   001CBA  223C               	addwfc	(___fladd@b+1)^0,f,c
  7876   001CBC  5041               	movf	(___fladd@a+2)^0,w,c
  7877   001CBE  223D               	addwfc	(___fladd@b+2)^0,f,c
  7878   001CC0  5042               	movf	(___fladd@a+3)^0,w,c
  7879   001CC2  223E               	addwfc	(___fladd@b+3)^0,f,c
  7880   001CC4  A03E               	btfss	(___fladd@b+3)^0,0,c
  7881   001CC6  EF67  F00E         	goto	u2611
  7882   001CCA  EF69  F00E         	goto	u2610
  7883   001CCE                     u2611:
  7884   001CCE  EF15  F00F         	goto	l3440
  7885   001CD2                     u2610:
  7886   001CD2  A04A               	btfss	___fladd@grs^0,0,c
  7887   001CD4  EF6E  F00E         	goto	u2621
  7888   001CD8  EF70  F00E         	goto	u2620
  7889   001CDC                     u2621:
  7890   001CDC  EF76  F00E         	goto	l3394
  7891   001CE0                     u2620:
  7892   001CE0  90D8               	bcf	status,0,c
  7893   001CE2  304A               	rrcf	___fladd@grs^0,w,c
  7894   001CE4  0901               	iorlw	1
  7895   001CE6  6E4A               	movwf	___fladd@grs^0,c
  7896   001CE8  EF78  F00E         	goto	l3396
  7897   001CEC                     l3394:
  7898   001CEC  90D8               	bcf	status,0,c
  7899   001CEE  324A               	rrcf	___fladd@grs^0,f,c
  7900   001CF0                     l3396:
  7901   001CF0  A03B               	btfss	___fladd@b^0,0,c
  7902   001CF2  EF7D  F00E         	goto	u2631
  7903   001CF6  EF7F  F00E         	goto	u2630
  7904   001CFA                     u2631:
  7905   001CFA  EF80  F00E         	goto	l3400
  7906   001CFE                     u2630:
  7907   001CFE  8E4A               	bsf	___fladd@grs^0,7,c
  7908   001D00                     l3400:
  7909   001D00  343E               	rlcf	(___fladd@b+3)^0,w,c
  7910   001D02  323E               	rrcf	(___fladd@b+3)^0,f,c
  7911   001D04  323D               	rrcf	(___fladd@b+2)^0,f,c
  7912   001D06  323C               	rrcf	(___fladd@b+1)^0,f,c
  7913   001D08  323B               	rrcf	___fladd@b^0,f,c
  7914   001D0A  2A49               	incf	___fladd@bexp^0,f,c
  7915   001D0C  EF15  F00F         	goto	l3440
  7916   001D10                     l3404:
  7917   001D10  503F               	movf	___fladd@a^0,w,c
  7918   001D12  5C3B               	subwf	___fladd@b^0,w,c
  7919   001D14  5040               	movf	(___fladd@a+1)^0,w,c
  7920   001D16  583C               	subwfb	(___fladd@b+1)^0,w,c
  7921   001D18  5041               	movf	(___fladd@a+2)^0,w,c
  7922   001D1A  583D               	subwfb	(___fladd@b+2)^0,w,c
  7923   001D1C  503E               	movf	(___fladd@b+3)^0,w,c
  7924   001D1E  0A80               	xorlw	128
  7925   001D20  6E43               	movwf	??___fladd^0,c
  7926   001D22  5042               	movf	(___fladd@a+3)^0,w,c
  7927   001D24  0A80               	xorlw	128
  7928   001D26  5843               	subwfb	??___fladd^0,w,c
  7929   001D28  B0D8               	btfsc	status,0,c
  7930   001D2A  EF99  F00E         	goto	u2641
  7931   001D2E  EF9B  F00E         	goto	u2640
  7932   001D32                     u2641:
  7933   001D32  EFC6  F00E         	goto	l3414
  7934   001D36                     u2640:
  7935   001D36  503B               	movf	___fladd@b^0,w,c
  7936   001D38  5C3F               	subwf	___fladd@a^0,w,c
  7937   001D3A  6E43               	movwf	??___fladd^0,c
  7938   001D3C  503C               	movf	(___fladd@b+1)^0,w,c
  7939   001D3E  5840               	subwfb	(___fladd@a+1)^0,w,c
  7940   001D40  6E44               	movwf	(??___fladd+1)^0,c
  7941   001D42  503D               	movf	(___fladd@b+2)^0,w,c
  7942   001D44  5841               	subwfb	(___fladd@a+2)^0,w,c
  7943   001D46  6E45               	movwf	(??___fladd+2)^0,c
  7944   001D48  503E               	movf	(___fladd@b+3)^0,w,c
  7945   001D4A  5842               	subwfb	(___fladd@a+3)^0,w,c
  7946   001D4C  6E46               	movwf	(??___fladd+3)^0,c
  7947   001D4E  0EFF               	movlw	255
  7948   001D50  2443               	addwf	??___fladd^0,w,c
  7949   001D52  6E3B               	movwf	___fladd@b^0,c
  7950   001D54  0EFF               	movlw	255
  7951   001D56  2044               	addwfc	(??___fladd+1)^0,w,c
  7952   001D58  6E3C               	movwf	(___fladd@b+1)^0,c
  7953   001D5A  0EFF               	movlw	255
  7954   001D5C  2045               	addwfc	(??___fladd+2)^0,w,c
  7955   001D5E  6E3D               	movwf	(___fladd@b+2)^0,c
  7956   001D60  0EFF               	movlw	255
  7957   001D62  2046               	addwfc	(??___fladd+3)^0,w,c
  7958   001D64  6E3E               	movwf	(___fladd@b+3)^0,c
  7959   001D66  0E80               	movlw	128
  7960   001D68  1A47               	xorwf	___fladd@signs^0,f,c
  7961   001D6A  6C4A               	negf	___fladd@grs^0,c
  7962   001D6C  504A               	movf	___fladd@grs^0,w,c
  7963   001D6E  A4D8               	btfss	status,2,c
  7964   001D70  EFBC  F00E         	goto	u2651
  7965   001D74  EFBE  F00E         	goto	u2650
  7966   001D78                     u2651:
  7967   001D78  EFCE  F00E         	goto	l1257
  7968   001D7C                     u2650:
  7969   001D7C  0E01               	movlw	1
  7970   001D7E  263B               	addwf	___fladd@b^0,f,c
  7971   001D80  0E00               	movlw	0
  7972   001D82  223C               	addwfc	(___fladd@b+1)^0,f,c
  7973   001D84  223D               	addwfc	(___fladd@b+2)^0,f,c
  7974   001D86  223E               	addwfc	(___fladd@b+3)^0,f,c
  7975   001D88  EFCE  F00E         	goto	l1257
  7976   001D8C                     l3414:
  7977   001D8C  503F               	movf	___fladd@a^0,w,c
  7978   001D8E  5E3B               	subwf	___fladd@b^0,f,c
  7979   001D90  5040               	movf	(___fladd@a+1)^0,w,c
  7980   001D92  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  7981   001D94  5041               	movf	(___fladd@a+2)^0,w,c
  7982   001D96  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  7983   001D98  5042               	movf	(___fladd@a+3)^0,w,c
  7984   001D9A  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  7985   001D9C                     l1257:
  7986   001D9C  503B               	movf	___fladd@b^0,w,c
  7987   001D9E  103C               	iorwf	(___fladd@b+1)^0,w,c
  7988   001DA0  103D               	iorwf	(___fladd@b+2)^0,w,c
  7989   001DA2  103E               	iorwf	(___fladd@b+3)^0,w,c
  7990   001DA4  A4D8               	btfss	status,2,c
  7991   001DA6  EFD7  F00E         	goto	u2661
  7992   001DAA  EFD9  F00E         	goto	u2660
  7993   001DAE                     u2661:
  7994   001DAE  EF0E  F00F         	goto	l3438
  7995   001DB2                     u2660:
  7996   001DB2  504A               	movf	___fladd@grs^0,w,c
  7997   001DB4  A4D8               	btfss	status,2,c
  7998   001DB6  EFDF  F00E         	goto	u2671
  7999   001DBA  EFE1  F00E         	goto	u2670
  8000   001DBE                     u2671:
  8001   001DBE  EF0E  F00F         	goto	l3438
  8002   001DC2                     u2670:
  8003   001DC2  0E00               	movlw	0
  8004   001DC4  6E3B               	movwf	?___fladd^0,c
  8005   001DC6  0E00               	movlw	0
  8006   001DC8  6E3C               	movwf	(?___fladd+1)^0,c
  8007   001DCA  0E00               	movlw	0
  8008   001DCC  6E3D               	movwf	(?___fladd+2)^0,c
  8009   001DCE  0E00               	movlw	0
  8010   001DD0  6E3E               	movwf	(?___fladd+3)^0,c
  8011   001DD2  EFA9  F00F         	goto	l1249
  8012   001DD6                     l3422:
  8013   001DD6  90D8               	bcf	status,0,c
  8014   001DD8  363B               	rlcf	___fladd@b^0,f,c
  8015   001DDA  363C               	rlcf	(___fladd@b+1)^0,f,c
  8016   001DDC  363D               	rlcf	(___fladd@b+2)^0,f,c
  8017   001DDE  363E               	rlcf	(___fladd@b+3)^0,f,c
  8018   001DE0  AE4A               	btfss	___fladd@grs^0,7,c
  8019   001DE2  EFF5  F00E         	goto	u2681
  8020   001DE6  EFF7  F00E         	goto	u2680
  8021   001DEA                     u2681:
  8022   001DEA  EFF8  F00E         	goto	l3428
  8023   001DEE                     u2680:
  8024   001DEE  803B               	bsf	___fladd@b^0,0,c
  8025   001DF0                     l3428:
  8026   001DF0  A04A               	btfss	___fladd@grs^0,0,c
  8027   001DF2  EFFD  F00E         	goto	u2691
  8028   001DF6  EFFF  F00E         	goto	u2690
  8029   001DFA                     u2691:
  8030   001DFA  EF03  F00F         	goto	l3432
  8031   001DFE                     u2690:
  8032   001DFE  80D8               	bsf	status,0,c
  8033   001E00  364A               	rlcf	___fladd@grs^0,f,c
  8034   001E02  EF05  F00F         	goto	l3434
  8035   001E06                     l3432:
  8036   001E06  90D8               	bcf	status,0,c
  8037   001E08  364A               	rlcf	___fladd@grs^0,f,c
  8038   001E0A                     l3434:
  8039   001E0A  5049               	movf	___fladd@bexp^0,w,c
  8040   001E0C  B4D8               	btfsc	status,2,c
  8041   001E0E  EF0B  F00F         	goto	u2701
  8042   001E12  EF0D  F00F         	goto	u2700
  8043   001E16                     u2701:
  8044   001E16  EF0E  F00F         	goto	l3438
  8045   001E1A                     u2700:
  8046   001E1A  0649               	decf	___fladd@bexp^0,f,c
  8047   001E1C                     l3438:
  8048   001E1C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  8049   001E1E  EF13  F00F         	goto	u2711
  8050   001E22  EF15  F00F         	goto	u2710
  8051   001E26                     u2711:
  8052   001E26  EFEB  F00E         	goto	l3422
  8053   001E2A                     u2710:
  8054   001E2A                     l3440:
  8055   001E2A  0E00               	movlw	0
  8056   001E2C  6E48               	movwf	___fladd@aexp^0,c
  8057   001E2E  AE4A               	btfss	___fladd@grs^0,7,c
  8058   001E30  EF1C  F00F         	goto	u2721
  8059   001E34  EF1E  F00F         	goto	u2720
  8060   001E38                     u2721:
  8061   001E38  EF36  F00F         	goto	l1266
  8062   001E3C                     u2720:
  8063   001E3C  C04A  F043         	movff	___fladd@grs,??___fladd
  8064   001E40  0E7F               	movlw	127
  8065   001E42  1643               	andwf	??___fladd^0,f,c
  8066   001E44  B4D8               	btfsc	status,2,c
  8067   001E46  EF27  F00F         	goto	u2731
  8068   001E4A  EF29  F00F         	goto	u2730
  8069   001E4E                     u2731:
  8070   001E4E  EF2D  F00F         	goto	l1267
  8071   001E52                     u2730:
  8072   001E52                     l3446:
  8073   001E52  0E01               	movlw	1
  8074   001E54  6E48               	movwf	___fladd@aexp^0,c
  8075   001E56  EF36  F00F         	goto	l1266
  8076   001E5A                     l1267:
  8077   001E5A  A03B               	btfss	___fladd@b^0,0,c
  8078   001E5C  EF32  F00F         	goto	u2741
  8079   001E60  EF34  F00F         	goto	u2740
  8080   001E64                     u2741:
  8081   001E64  EF36  F00F         	goto	l1266
  8082   001E68                     u2740:
  8083   001E68  EF29  F00F         	goto	l3446
  8084   001E6C                     l1266:
  8085   001E6C  5048               	movf	___fladd@aexp^0,w,c
  8086   001E6E  B4D8               	btfsc	status,2,c
  8087   001E70  EF3C  F00F         	goto	u2751
  8088   001E74  EF3E  F00F         	goto	u2750
  8089   001E78                     u2751:
  8090   001E78  EF69  F00F         	goto	l3458
  8091   001E7C                     u2750:
  8092   001E7C  0E01               	movlw	1
  8093   001E7E  263B               	addwf	___fladd@b^0,f,c
  8094   001E80  0E00               	movlw	0
  8095   001E82  223C               	addwfc	(___fladd@b+1)^0,f,c
  8096   001E84  223D               	addwfc	(___fladd@b+2)^0,f,c
  8097   001E86  223E               	addwfc	(___fladd@b+3)^0,f,c
  8098   001E88  A03E               	btfss	(___fladd@b+3)^0,0,c
  8099   001E8A  EF49  F00F         	goto	u2761
  8100   001E8E  EF4B  F00F         	goto	u2760
  8101   001E92                     u2761:
  8102   001E92  EF69  F00F         	goto	l3458
  8103   001E96                     u2760:
  8104   001E96  C03B  F043         	movff	___fladd@b,??___fladd
  8105   001E9A  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  8106   001E9E  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  8107   001EA2  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  8108   001EA6  3446               	rlcf	(??___fladd+3)^0,w,c
  8109   001EA8  3246               	rrcf	(??___fladd+3)^0,f,c
  8110   001EAA  3245               	rrcf	(??___fladd+2)^0,f,c
  8111   001EAC  3244               	rrcf	(??___fladd+1)^0,f,c
  8112   001EAE  3243               	rrcf	??___fladd^0,f,c
  8113   001EB0  C043  F03B         	movff	??___fladd,___fladd@b
  8114   001EB4  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  8115   001EB8  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  8116   001EBC  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  8117   001EC0  2849               	incf	___fladd@bexp^0,w,c
  8118   001EC2  B4D8               	btfsc	status,2,c
  8119   001EC4  EF66  F00F         	goto	u2771
  8120   001EC8  EF68  F00F         	goto	u2770
  8121   001ECC                     u2771:
  8122   001ECC  EF69  F00F         	goto	l3458
  8123   001ED0                     u2770:
  8124   001ED0  2A49               	incf	___fladd@bexp^0,f,c
  8125   001ED2                     l3458:
  8126   001ED2  2849               	incf	___fladd@bexp^0,w,c
  8127   001ED4  B4D8               	btfsc	status,2,c
  8128   001ED6  EF6F  F00F         	goto	u2781
  8129   001EDA  EF71  F00F         	goto	u2780
  8130   001EDE                     u2781:
  8131   001EDE  EF79  F00F         	goto	l3462
  8132   001EE2                     u2780:
  8133   001EE2  5049               	movf	___fladd@bexp^0,w,c
  8134   001EE4  A4D8               	btfss	status,2,c
  8135   001EE6  EF77  F00F         	goto	u2791
  8136   001EEA  EF79  F00F         	goto	u2790
  8137   001EEE                     u2791:
  8138   001EEE  EF8B  F00F         	goto	l3466
  8139   001EF2                     u2790:
  8140   001EF2                     l3462:
  8141   001EF2  0E00               	movlw	0
  8142   001EF4  6E3B               	movwf	___fladd@b^0,c
  8143   001EF6  0E00               	movlw	0
  8144   001EF8  6E3C               	movwf	(___fladd@b+1)^0,c
  8145   001EFA  0E00               	movlw	0
  8146   001EFC  6E3D               	movwf	(___fladd@b+2)^0,c
  8147   001EFE  0E00               	movlw	0
  8148   001F00  6E3E               	movwf	(___fladd@b+3)^0,c
  8149   001F02  5049               	movf	___fladd@bexp^0,w,c
  8150   001F04  A4D8               	btfss	status,2,c
  8151   001F06  EF87  F00F         	goto	u2801
  8152   001F0A  EF89  F00F         	goto	u2800
  8153   001F0E                     u2801:
  8154   001F0E  EF8B  F00F         	goto	l3466
  8155   001F12                     u2800:
  8156   001F12  0E00               	movlw	0
  8157   001F14  6E47               	movwf	___fladd@signs^0,c
  8158   001F16                     l3466:
  8159   001F16  A049               	btfss	___fladd@bexp^0,0,c
  8160   001F18  EF90  F00F         	goto	u2811
  8161   001F1C  EF92  F00F         	goto	u2810
  8162   001F20                     u2811:
  8163   001F20  EF95  F00F         	goto	l3470
  8164   001F24                     u2810:
  8165   001F24  8E3D               	bsf	(___fladd@b+2)^0,7,c
  8166   001F26  EF96  F00F         	goto	l3472
  8167   001F2A                     l3470:
  8168   001F2A  9E3D               	bcf	(___fladd@b+2)^0,7,c
  8169   001F2C                     l3472:
  8170   001F2C  90D8               	bcf	status,0,c
  8171   001F2E  3049               	rrcf	___fladd@bexp^0,w,c
  8172   001F30  6E3E               	movwf	(___fladd@b+3)^0,c
  8173   001F32  AE47               	btfss	___fladd@signs^0,7,c
  8174   001F34  EF9E  F00F         	goto	u2821
  8175   001F38  EFA0  F00F         	goto	u2820
  8176   001F3C                     u2821:
  8177   001F3C  EFA1  F00F         	goto	l3478
  8178   001F40                     u2820:
  8179   001F40  8E3E               	bsf	(___fladd@b+3)^0,7,c
  8180   001F42                     l3478:
  8181   001F42  C03B  F03B         	movff	___fladd@b,?___fladd
  8182   001F46  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  8183   001F4A  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  8184   001F4E  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  8185   001F52                     l1249:
  8186   001F52  0012               	return		;funcret
  8187   001F54                     __end_of___fladd:
  8188                           	callstack 0
  8189                           
  8190 ;; *************** function _Yellow_rev1_R90 *****************
  8191 ;; Defined at:
  8192 ;;		line 274 in file "dc_motor.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8195 ;;		 -> motorL(9), 
  8196 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8197 ;;		 -> motorR(9), 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;Total ram usage:        6 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 5
  8216 ;; This function calls:
  8217 ;;		_Left45
  8218 ;;		_Right45
  8219 ;;		_fullSpeedReverse
  8220 ;;		_reverseHalfSquare
  8221 ;; This function is called by:
  8222 ;;		_Colour2Action
  8223 ;;		_White
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text36
  8228   003788                     __ptext36:
  8229                           	callstack 0
  8230   003788                     _Yellow_rev1_R90:
  8231                           	callstack 24
  8232   003788                     
  8233                           ;dc_motor.c: 274: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 275: {;dc_motor.c: 276:     if (ForwardFlag){
  8234   003788  0100               	movlb	0	; () banked
  8235   00378A  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8236   00378C  B4D8               	btfsc	status,2,c
  8237   00378E  EFCB  F01B         	goto	u2391
  8238   003792  EFCD  F01B         	goto	u2390
  8239   003796                     u2391:
  8240   003796  EF03  F01C         	goto	l3216
  8241   00379A                     u2390:
  8242   00379A                     
  8243                           ; BSR set to: 0
  8244                           ;dc_motor.c: 277:         reverseHalfSquare(mL,mR);
  8245   00379A  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  8246   00379E  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  8247   0037A2  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  8248   0037A6  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  8249   0037AA  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8250                           
  8251                           ;dc_motor.c: 279:         fullSpeedReverse(mL,mR);
  8252   0037AE  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  8253   0037B2  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  8254   0037B6  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  8255   0037BA  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  8256   0037BE  EC4D  F01F         	call	_fullSpeedReverse	;wreg free
  8257   0037C2                     
  8258                           ;dc_motor.c: 280:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8259   0037C2  0E39               	movlw	57
  8260   0037C4  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  8261   0037C6  0ED2               	movlw	210
  8262   0037C8  6E25               	movwf	??_Yellow_rev1_R90^0,c
  8263   0037CA  0E4C               	movlw	76
  8264   0037CC                     u3857:
  8265   0037CC  2EE8               	decfsz	wreg,f,c
  8266   0037CE  D7FE               	bra	u3857
  8267   0037D0  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  8268   0037D2  D7FC               	bra	u3857
  8269   0037D4  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  8270   0037D6  D7FA               	bra	u3857
  8271   0037D8  D000               	nop2	
  8272   0037DA                     
  8273                           ;dc_motor.c: 282:         Right45(mL,mR);
  8274   0037DA  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8275   0037DE  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8276   0037E2  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8277   0037E6  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8278   0037EA  EC41  F01E         	call	_Right45	;wreg free
  8279   0037EE                     
  8280                           ;dc_motor.c: 283:         Right45(mL,mR);
  8281   0037EE  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  8282   0037F2  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  8283   0037F6  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  8284   0037FA  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  8285   0037FE  EC41  F01E         	call	_Right45	;wreg free
  8286                           
  8287                           ;dc_motor.c: 284:     }
  8288   003802  EF17  F01C         	goto	l553
  8289   003806                     l3216:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;dc_motor.c: 288:         Left45(mL,mR);
  8293   003806  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8294   00380A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8295   00380E  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8296   003812  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8297   003816  EC86  F01E         	call	_Left45	;wreg free
  8298                           
  8299                           ;dc_motor.c: 289:         Left45(mL,mR);
  8300   00381A  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  8301   00381E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  8302   003822  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  8303   003826  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  8304   00382A  EC86  F01E         	call	_Left45	;wreg free
  8305   00382E                     l553:
  8306   00382E  0012               	return		;funcret
  8307   003830                     __end_of_Yellow_rev1_R90:
  8308                           	callstack 0
  8309                           
  8310 ;; *************** function _TimerReset *****************
  8311 ;; Defined at:
  8312 ;;		line 23 in file "timer.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;Total ram usage:        0 bytes
  8331 ;; Hardware stack levels used: 1
  8332 ;; Hardware stack levels required when called: 1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;;		_White
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text37
  8342   004642                     __ptext37:
  8343                           	callstack 0
  8344   004642                     _TimerReset:
  8345                           	callstack 29
  8346   004642                     
  8347                           ;timer.c: 25:     TMR0L = 0;
  8348   004642  0E00               	movlw	0
  8349   004644  6ED3               	movwf	211,c	;volatile
  8350                           
  8351                           ;timer.c: 26:     TMR0H = 0;
  8352   004646  0E00               	movlw	0
  8353   004648  6ED4               	movwf	212,c	;volatile
  8354   00464A  0012               	return		;funcret
  8355   00464C                     __end_of_TimerReset:
  8356                           	callstack 0
  8357                           
  8358 ;; *************** function _Red_R90 *****************
  8359 ;; Defined at:
  8360 ;;		line 234 in file "dc_motor.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8363 ;;		 -> motorL(9), 
  8364 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8365 ;;		 -> motorR(9), 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;Total ram usage:        4 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 5
  8384 ;; This function calls:
  8385 ;;		_Left45
  8386 ;;		_Right45
  8387 ;;		_reverseHalfSquare
  8388 ;; This function is called by:
  8389 ;;		_Colour2Action
  8390 ;;		_White
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text38
  8395   003F1A                     __ptext38:
  8396                           	callstack 0
  8397   003F1A                     _Red_R90:
  8398                           	callstack 23
  8399   003F1A                     
  8400                           ;dc_motor.c: 234: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 235
      +                          : {;dc_motor.c: 236:     if (ForwardFlag){
  8401   003F1A  0100               	movlb	0	; () banked
  8402   003F1C  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8403   003F1E  B4D8               	btfsc	status,2,c
  8404   003F20  EF94  F01F         	goto	u2361
  8405   003F24  EF96  F01F         	goto	u2360
  8406   003F28                     u2361:
  8407   003F28  EFB6  F01F         	goto	l3192
  8408   003F2C                     u2360:
  8409   003F2C                     
  8410                           ; BSR set to: 0
  8411                           ;dc_motor.c: 237:         reverseHalfSquare(mL,mR);
  8412   003F2C  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  8413   003F30  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  8414   003F34  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  8415   003F38  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  8416   003F3C  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8417                           
  8418                           ;dc_motor.c: 238:         Right45(mL,mR);
  8419   003F40  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8420   003F44  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8421   003F48  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8422   003F4C  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8423   003F50  EC41  F01E         	call	_Right45	;wreg free
  8424                           
  8425                           ;dc_motor.c: 239:         Right45(mL,mR);
  8426   003F54  C021  F01A         	movff	Red_R90@mL,Right45@mL
  8427   003F58  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  8428   003F5C  C023  F01C         	movff	Red_R90@mR,Right45@mR
  8429   003F60  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  8430   003F64  EC41  F01E         	call	_Right45	;wreg free
  8431                           
  8432                           ;dc_motor.c: 240:     }
  8433   003F68  EFCA  F01F         	goto	l538
  8434   003F6C                     l3192:
  8435                           
  8436                           ; BSR set to: 0
  8437                           ;dc_motor.c: 243:         Left45(mL,mR);
  8438   003F6C  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8439   003F70  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8440   003F74  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8441   003F78  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8442   003F7C  EC86  F01E         	call	_Left45	;wreg free
  8443                           
  8444                           ;dc_motor.c: 244:         Left45(mL,mR);
  8445   003F80  C021  F01A         	movff	Red_R90@mL,Left45@mL
  8446   003F84  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  8447   003F88  C023  F01C         	movff	Red_R90@mR,Left45@mR
  8448   003F8C  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  8449   003F90  EC86  F01E         	call	_Left45	;wreg free
  8450   003F94                     l538:
  8451   003F94  0012               	return		;funcret
  8452   003F96                     __end_of_Red_R90:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function _RAMback *****************
  8456 ;; Defined at:
  8457 ;;		line 92 in file "dc_motor.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8460 ;;		 -> motorL(9), 
  8461 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8462 ;;		 -> motorR(9), 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;Total ram usage:        6 bytes
  8479 ;; Hardware stack levels used: 1
  8480 ;; Hardware stack levels required when called: 4
  8481 ;; This function calls:
  8482 ;;		_fullSpeedReverse
  8483 ;;		_stop
  8484 ;; This function is called by:
  8485 ;;		_White
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text39
  8490   004086                     __ptext39:
  8491                           	callstack 0
  8492   004086                     _RAMback:
  8493                           	callstack 24
  8494   004086                     
  8495                           ;dc_motor.c: 92: void RAMback(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 93: 
      +                          {;dc_motor.c: 94:     stop(mL,mR);
  8496   004086  C01B  F014         	movff	RAMback@mL,stop@mL
  8497   00408A  C01C  F015         	movff	RAMback@mL+1,stop@mL+1
  8498   00408E  C01D  F016         	movff	RAMback@mR,stop@mR
  8499   004092  C01E  F017         	movff	RAMback@mR+1,stop@mR+1
  8500   004096  EC6C  F01C         	call	_stop	;wreg free
  8501   00409A                     
  8502                           ;dc_motor.c: 95:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8503   00409A  0E09               	movlw	9
  8504   00409C  6E20               	movwf	(??_RAMback+1)^0,c
  8505   00409E  0E1E               	movlw	30
  8506   0040A0  6E1F               	movwf	??_RAMback^0,c
  8507   0040A2  0EE4               	movlw	228
  8508   0040A4                     u3867:
  8509   0040A4  2EE8               	decfsz	wreg,f,c
  8510   0040A6  D7FE               	bra	u3867
  8511   0040A8  2E1F               	decfsz	??_RAMback^0,f,c
  8512   0040AA  D7FC               	bra	u3867
  8513   0040AC  2E20               	decfsz	(??_RAMback+1)^0,f,c
  8514   0040AE  D7FA               	bra	u3867
  8515   0040B0  D000               	nop2	
  8516   0040B2                     
  8517                           ;dc_motor.c: 96:     fullSpeedReverse(mL,mR);
  8518   0040B2  C01B  F014         	movff	RAMback@mL,fullSpeedReverse@mL
  8519   0040B6  C01C  F015         	movff	RAMback@mL+1,fullSpeedReverse@mL+1
  8520   0040BA  C01D  F016         	movff	RAMback@mR,fullSpeedReverse@mR
  8521   0040BE  C01E  F017         	movff	RAMback@mR+1,fullSpeedReverse@mR+1
  8522   0040C2  EC4D  F01F         	call	_fullSpeedReverse	;wreg free
  8523                           
  8524                           ;dc_motor.c: 97:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8525   0040C6  0E52               	movlw	82
  8526   0040C8  6E20               	movwf	(??_RAMback+1)^0,c
  8527   0040CA  0E2B               	movlw	43
  8528   0040CC  6E1F               	movwf	??_RAMback^0,c
  8529   0040CE  0E00               	movlw	0
  8530   0040D0                     u3877:
  8531   0040D0  2EE8               	decfsz	wreg,f,c
  8532   0040D2  D7FE               	bra	u3877
  8533   0040D4  2E1F               	decfsz	??_RAMback^0,f,c
  8534   0040D6  D7FC               	bra	u3877
  8535   0040D8  2E20               	decfsz	(??_RAMback+1)^0,f,c
  8536   0040DA  D7FA               	bra	u3877
  8537   0040DC  D000               	nop2	
  8538   0040DE                     
  8539                           ;dc_motor.c: 98:     stop(mL,mR);
  8540   0040DE  C01B  F014         	movff	RAMback@mL,stop@mL
  8541   0040E2  C01C  F015         	movff	RAMback@mL+1,stop@mL+1
  8542   0040E6  C01D  F016         	movff	RAMback@mR,stop@mR
  8543   0040EA  C01E  F017         	movff	RAMback@mR+1,stop@mR+1
  8544   0040EE  EC6C  F01C         	call	_stop	;wreg free
  8545   0040F2  0012               	return		;funcret
  8546   0040F4                     __end_of_RAMback:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _Pink_rev1_L90 *****************
  8550 ;; Defined at:
  8551 ;;		line 292 in file "dc_motor.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8554 ;;		 -> motorL(9), 
  8555 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8556 ;;		 -> motorR(9), 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;		None
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      void 
  8561 ;; Registers used:
  8562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8571 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;Total ram usage:        6 bytes
  8573 ;; Hardware stack levels used: 1
  8574 ;; Hardware stack levels required when called: 5
  8575 ;; This function calls:
  8576 ;;		_Left45
  8577 ;;		_Right45
  8578 ;;		_fullSpeedReverse
  8579 ;;		_reverseHalfSquare
  8580 ;; This function is called by:
  8581 ;;		_Colour2Action
  8582 ;;		_White
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text40
  8587   003830                     __ptext40:
  8588                           	callstack 0
  8589   003830                     _Pink_rev1_L90:
  8590                           	callstack 23
  8591   003830                     
  8592                           ;dc_motor.c: 292: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 293: {;dc_motor.c: 294:     if (ForwardFlag){
  8593   003830  0100               	movlb	0	; () banked
  8594   003832  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8595   003834  B4D8               	btfsc	status,2,c
  8596   003836  EF1F  F01C         	goto	u2401
  8597   00383A  EF21  F01C         	goto	u2400
  8598   00383E                     u2401:
  8599   00383E  EF57  F01C         	goto	l3228
  8600   003842                     u2400:
  8601   003842                     
  8602                           ; BSR set to: 0
  8603                           ;dc_motor.c: 295:         reverseHalfSquare(mL,mR);
  8604   003842  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  8605   003846  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  8606   00384A  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  8607   00384E  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  8608   003852  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8609                           
  8610                           ;dc_motor.c: 297:         fullSpeedReverse(mL,mR);
  8611   003856  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  8612   00385A  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  8613   00385E  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  8614   003862  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  8615   003866  EC4D  F01F         	call	_fullSpeedReverse	;wreg free
  8616   00386A                     
  8617                           ;dc_motor.c: 298:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  8618   00386A  0E39               	movlw	57
  8619   00386C  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  8620   00386E  0ED2               	movlw	210
  8621   003870  6E25               	movwf	??_Pink_rev1_L90^0,c
  8622   003872  0E4C               	movlw	76
  8623   003874                     u3887:
  8624   003874  2EE8               	decfsz	wreg,f,c
  8625   003876  D7FE               	bra	u3887
  8626   003878  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  8627   00387A  D7FC               	bra	u3887
  8628   00387C  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  8629   00387E  D7FA               	bra	u3887
  8630   003880  D000               	nop2	
  8631   003882                     
  8632                           ;dc_motor.c: 299:         Left45(mL,mR);
  8633   003882  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8634   003886  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8635   00388A  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8636   00388E  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8637   003892  EC86  F01E         	call	_Left45	;wreg free
  8638   003896                     
  8639                           ;dc_motor.c: 300:         Left45(mL,mR);
  8640   003896  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  8641   00389A  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  8642   00389E  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  8643   0038A2  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  8644   0038A6  EC86  F01E         	call	_Left45	;wreg free
  8645                           
  8646                           ;dc_motor.c: 301:     }
  8647   0038AA  EF6B  F01C         	goto	l558
  8648   0038AE                     l3228:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;dc_motor.c: 304:         Right45(mL,mR);
  8652   0038AE  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8653   0038B2  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8654   0038B6  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8655   0038BA  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8656   0038BE  EC41  F01E         	call	_Right45	;wreg free
  8657                           
  8658                           ;dc_motor.c: 305:         Right45(mL,mR);
  8659   0038C2  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  8660   0038C6  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  8661   0038CA  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  8662   0038CE  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  8663   0038D2  EC41  F01E         	call	_Right45	;wreg free
  8664   0038D6                     l558:
  8665   0038D6  0012               	return		;funcret
  8666   0038D8                     __end_of_Pink_rev1_L90:
  8667                           	callstack 0
  8668                           
  8669 ;; *************** function _Orange_R135 *****************
  8670 ;; Defined at:
  8671 ;;		line 308 in file "dc_motor.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8674 ;;		 -> motorL(9), 
  8675 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8676 ;;		 -> motorR(9), 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;Total ram usage:        4 bytes
  8693 ;; Hardware stack levels used: 1
  8694 ;; Hardware stack levels required when called: 5
  8695 ;; This function calls:
  8696 ;;		_Left45
  8697 ;;		_Right45
  8698 ;;		_reverseHalfSquare
  8699 ;; This function is called by:
  8700 ;;		_Colour2Action
  8701 ;;		_White
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text41
  8706   00397E                     __ptext41:
  8707                           	callstack 0
  8708   00397E                     _Orange_R135:
  8709                           	callstack 23
  8710   00397E                     
  8711                           ;dc_motor.c: 308: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           309: {;dc_motor.c: 310:     if (ForwardFlag){
  8712   00397E  0100               	movlb	0	; () banked
  8713   003980  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8714   003982  B4D8               	btfsc	status,2,c
  8715   003984  EFC6  F01C         	goto	u2411
  8716   003988  EFC8  F01C         	goto	u2410
  8717   00398C                     u2411:
  8718   00398C  EFF2  F01C         	goto	l3234
  8719   003990                     u2410:
  8720   003990                     
  8721                           ; BSR set to: 0
  8722                           ;dc_motor.c: 311:         reverseHalfSquare(mL,mR);
  8723   003990  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  8724   003994  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  8725   003998  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  8726   00399C  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  8727   0039A0  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8728                           
  8729                           ;dc_motor.c: 313:         Right45(mL,mR);
  8730   0039A4  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8731   0039A8  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8732   0039AC  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8733   0039B0  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8734   0039B4  EC41  F01E         	call	_Right45	;wreg free
  8735                           
  8736                           ;dc_motor.c: 314:         Right45(mL,mR);
  8737   0039B8  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8738   0039BC  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8739   0039C0  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8740   0039C4  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8741   0039C8  EC41  F01E         	call	_Right45	;wreg free
  8742                           
  8743                           ;dc_motor.c: 315:         Right45(mL,mR);
  8744   0039CC  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  8745   0039D0  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  8746   0039D4  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  8747   0039D8  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  8748   0039DC  EC41  F01E         	call	_Right45	;wreg free
  8749                           
  8750                           ;dc_motor.c: 316:     }
  8751   0039E0  EF10  F01D         	goto	l563
  8752   0039E4                     l3234:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;dc_motor.c: 319:         Left45(mL,mR);
  8756   0039E4  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8757   0039E8  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8758   0039EC  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8759   0039F0  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8760   0039F4  EC86  F01E         	call	_Left45	;wreg free
  8761                           
  8762                           ;dc_motor.c: 320:         Left45(mL,mR);
  8763   0039F8  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8764   0039FC  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8765   003A00  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8766   003A04  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8767   003A08  EC86  F01E         	call	_Left45	;wreg free
  8768                           
  8769                           ;dc_motor.c: 321:         Left45(mL,mR);
  8770   003A0C  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  8771   003A10  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  8772   003A14  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  8773   003A18  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  8774   003A1C  EC86  F01E         	call	_Left45	;wreg free
  8775   003A20                     l563:
  8776   003A20  0012               	return		;funcret
  8777   003A22                     __end_of_Orange_R135:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _LightBlue_L135 *****************
  8781 ;; Defined at:
  8782 ;;		line 324 in file "dc_motor.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8785 ;;		 -> motorL(9), 
  8786 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8787 ;;		 -> motorR(9), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;Total ram usage:        4 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 5
  8806 ;; This function calls:
  8807 ;;		_Left45
  8808 ;;		_Right45
  8809 ;;		_reverseHalfSquare
  8810 ;; This function is called by:
  8811 ;;		_Colour2Action
  8812 ;;		_White
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text42
  8817   003A22                     __ptext42:
  8818                           	callstack 0
  8819   003A22                     _LightBlue_L135:
  8820                           	callstack 23
  8821   003A22                     
  8822                           ;dc_motor.c: 324: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 325: {;dc_motor.c: 327:      if (ForwardFlag){
  8823   003A22  0100               	movlb	0	; () banked
  8824   003A24  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8825   003A26  B4D8               	btfsc	status,2,c
  8826   003A28  EF18  F01D         	goto	u2421
  8827   003A2C  EF1A  F01D         	goto	u2420
  8828   003A30                     u2421:
  8829   003A30  EF44  F01D         	goto	l3240
  8830   003A34                     u2420:
  8831   003A34                     
  8832                           ; BSR set to: 0
  8833                           ;dc_motor.c: 328:         reverseHalfSquare(mL,mR);
  8834   003A34  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  8835   003A38  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  8836   003A3C  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  8837   003A40  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  8838   003A44  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8839                           
  8840                           ;dc_motor.c: 330:         Left45(mL,mR);
  8841   003A48  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8842   003A4C  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8843   003A50  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8844   003A54  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8845   003A58  EC86  F01E         	call	_Left45	;wreg free
  8846                           
  8847                           ;dc_motor.c: 331:         Left45(mL,mR);
  8848   003A5C  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8849   003A60  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8850   003A64  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8851   003A68  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8852   003A6C  EC86  F01E         	call	_Left45	;wreg free
  8853                           
  8854                           ;dc_motor.c: 332:         Left45(mL,mR);
  8855   003A70  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  8856   003A74  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  8857   003A78  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  8858   003A7C  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  8859   003A80  EC86  F01E         	call	_Left45	;wreg free
  8860                           
  8861                           ;dc_motor.c: 334:     }
  8862   003A84  EF62  F01D         	goto	l568
  8863   003A88                     l3240:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;dc_motor.c: 337:         Right45(mL,mR);
  8867   003A88  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8868   003A8C  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8869   003A90  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8870   003A94  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8871   003A98  EC41  F01E         	call	_Right45	;wreg free
  8872                           
  8873                           ;dc_motor.c: 338:         Right45(mL,mR);
  8874   003A9C  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8875   003AA0  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8876   003AA4  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8877   003AA8  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8878   003AAC  EC41  F01E         	call	_Right45	;wreg free
  8879                           
  8880                           ;dc_motor.c: 339:         Right45(mL,mR);
  8881   003AB0  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  8882   003AB4  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  8883   003AB8  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  8884   003ABC  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  8885   003AC0  EC41  F01E         	call	_Right45	;wreg free
  8886   003AC4                     l568:
  8887   003AC4  0012               	return		;funcret
  8888   003AC6                     __end_of_LightBlue_L135:
  8889                           	callstack 0
  8890                           
  8891 ;; *************** function _Green_L90 *****************
  8892 ;; Defined at:
  8893 ;;		line 248 in file "dc_motor.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  8896 ;;		 -> motorL(9), 
  8897 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  8898 ;;		 -> motorR(9), 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;Total ram usage:        4 bytes
  8915 ;; Hardware stack levels used: 1
  8916 ;; Hardware stack levels required when called: 5
  8917 ;; This function calls:
  8918 ;;		_Left45
  8919 ;;		_Right45
  8920 ;;		_reverseHalfSquare
  8921 ;; This function is called by:
  8922 ;;		_Colour2Action
  8923 ;;		_White
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text43
  8928   003F96                     __ptext43:
  8929                           	callstack 0
  8930   003F96                     _Green_L90:
  8931                           	callstack 23
  8932   003F96                     
  8933                           ;dc_motor.c: 248: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          49: {;dc_motor.c: 250:     if (ForwardFlag){
  8934   003F96  0100               	movlb	0	; () banked
  8935   003F98  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8936   003F9A  B4D8               	btfsc	status,2,c
  8937   003F9C  EFD2  F01F         	goto	u2371
  8938   003FA0  EFD4  F01F         	goto	u2370
  8939   003FA4                     u2371:
  8940   003FA4  EFF4  F01F         	goto	l3198
  8941   003FA8                     u2370:
  8942   003FA8                     
  8943                           ; BSR set to: 0
  8944                           ;dc_motor.c: 251:         reverseHalfSquare(mL,mR);
  8945   003FA8  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  8946   003FAC  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  8947   003FB0  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  8948   003FB4  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  8949   003FB8  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  8950                           
  8951                           ;dc_motor.c: 253:         Left45(mL,mR);
  8952   003FBC  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8953   003FC0  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8954   003FC4  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8955   003FC8  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8956   003FCC  EC86  F01E         	call	_Left45	;wreg free
  8957                           
  8958                           ;dc_motor.c: 254:         Left45(mL,mR);
  8959   003FD0  C021  F01A         	movff	Green_L90@mL,Left45@mL
  8960   003FD4  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  8961   003FD8  C023  F01C         	movff	Green_L90@mR,Left45@mR
  8962   003FDC  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  8963   003FE0  EC86  F01E         	call	_Left45	;wreg free
  8964                           
  8965                           ;dc_motor.c: 255:     }
  8966   003FE4  EF08  F020         	goto	l543
  8967   003FE8                     l3198:
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;dc_motor.c: 258:         Right45(mL,mR);
  8971   003FE8  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8972   003FEC  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8973   003FF0  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8974   003FF4  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8975   003FF8  EC41  F01E         	call	_Right45	;wreg free
  8976                           
  8977                           ;dc_motor.c: 259:         Right45(mL,mR);
  8978   003FFC  C021  F01A         	movff	Green_L90@mL,Right45@mL
  8979   004000  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  8980   004004  C023  F01C         	movff	Green_L90@mR,Right45@mR
  8981   004008  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  8982   00400C  EC41  F01E         	call	_Right45	;wreg free
  8983   004010                     l543:
  8984   004010  0012               	return		;funcret
  8985   004012                     __end_of_Green_L90:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _Right45 *****************
  8989 ;; Defined at:
  8990 ;;		line 201 in file "dc_motor.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8993 ;;		 -> motorL(9), 
  8994 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8995 ;;		 -> motorR(9), 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;Total ram usage:        6 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; Hardware stack levels required when called: 4
  9014 ;; This function calls:
  9015 ;;		_stop
  9016 ;;		_turnRight
  9017 ;; This function is called by:
  9018 ;;		_Red_R90
  9019 ;;		_Green_L90
  9020 ;;		_Yellow_rev1_R90
  9021 ;;		_Pink_rev1_L90
  9022 ;;		_Orange_R135
  9023 ;;		_LightBlue_L135
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text44
  9028   003C82                     __ptext44:
  9029                           	callstack 0
  9030   003C82                     _Right45:
  9031                           	callstack 24
  9032   003C82                     
  9033                           ;dc_motor.c: 201: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 202
      +                          : {;dc_motor.c: 203:     LATHbits.LATH0 = 1;;
  9034   003C82  8080               	bsf	128,0,c	;volatile
  9035   003C84                     
  9036                           ;dc_motor.c: 205:     stop(mL,mR);
  9037   003C84  C01A  F014         	movff	Right45@mL,stop@mL
  9038   003C88  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  9039   003C8C  C01C  F016         	movff	Right45@mR,stop@mR
  9040   003C90  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  9041   003C94  EC6C  F01C         	call	_stop	;wreg free
  9042   003C98                     
  9043                           ;dc_motor.c: 206:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9044   003C98  0E09               	movlw	9
  9045   003C9A  6E1F               	movwf	(??_Right45+1)^0,c
  9046   003C9C  0E1E               	movlw	30
  9047   003C9E  6E1E               	movwf	??_Right45^0,c
  9048   003CA0  0EE4               	movlw	228
  9049   003CA2                     u3897:
  9050   003CA2  2EE8               	decfsz	wreg,f,c
  9051   003CA4  D7FE               	bra	u3897
  9052   003CA6  2E1E               	decfsz	??_Right45^0,f,c
  9053   003CA8  D7FC               	bra	u3897
  9054   003CAA  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9055   003CAC  D7FA               	bra	u3897
  9056   003CAE  D000               	nop2	
  9057   003CB0                     
  9058                           ;dc_motor.c: 207:     turnRight(mL,mR);
  9059   003CB0  C01A  F014         	movff	Right45@mL,turnRight@mL
  9060   003CB4  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  9061   003CB8  C01C  F016         	movff	Right45@mR,turnRight@mR
  9062   003CBC  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  9063   003CC0  EC63  F01D         	call	_turnRight	;wreg free
  9064                           
  9065                           ;dc_motor.c: 208:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  9066   003CC4  0E0C               	movlw	12
  9067   003CC6  6E1F               	movwf	(??_Right45+1)^0,c
  9068   003CC8  0E5E               	movlw	94
  9069   003CCA  6E1E               	movwf	??_Right45^0,c
  9070   003CCC  0E0D               	movlw	13
  9071   003CCE                     u3907:
  9072   003CCE  2EE8               	decfsz	wreg,f,c
  9073   003CD0  D7FE               	bra	u3907
  9074   003CD2  2E1E               	decfsz	??_Right45^0,f,c
  9075   003CD4  D7FC               	bra	u3907
  9076   003CD6  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9077   003CD8  D7FA               	bra	u3907
  9078   003CDA  F000               	nop	
  9079   003CDC                     
  9080                           ;dc_motor.c: 209:     stop(mL,mR);
  9081   003CDC  C01A  F014         	movff	Right45@mL,stop@mL
  9082   003CE0  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  9083   003CE4  C01C  F016         	movff	Right45@mR,stop@mR
  9084   003CE8  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  9085   003CEC  EC6C  F01C         	call	_stop	;wreg free
  9086   003CF0                     
  9087                           ;dc_motor.c: 210:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9088   003CF0  0E09               	movlw	9
  9089   003CF2  6E1F               	movwf	(??_Right45+1)^0,c
  9090   003CF4  0E1E               	movlw	30
  9091   003CF6  6E1E               	movwf	??_Right45^0,c
  9092   003CF8  0EE4               	movlw	228
  9093   003CFA                     u3917:
  9094   003CFA  2EE8               	decfsz	wreg,f,c
  9095   003CFC  D7FE               	bra	u3917
  9096   003CFE  2E1E               	decfsz	??_Right45^0,f,c
  9097   003D00  D7FC               	bra	u3917
  9098   003D02  2E1F               	decfsz	(??_Right45+1)^0,f,c
  9099   003D04  D7FA               	bra	u3917
  9100   003D06  D000               	nop2	
  9101   003D08                     
  9102                           ;dc_motor.c: 211:     LATHbits.LATH0 = 0;;
  9103   003D08  9080               	bcf	128,0,c	;volatile
  9104   003D0A  0012               	return		;funcret
  9105   003D0C                     __end_of_Right45:
  9106                           	callstack 0
  9107                           
  9108 ;; *************** function _turnRight *****************
  9109 ;; Defined at:
  9110 ;;		line 140 in file "dc_motor.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9113 ;;		 -> motorL(9), 
  9114 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9115 ;;		 -> motorR(9), 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  i               2   23[COMRAM] unsigned int 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  1    wreg      void 
  9120 ;; Registers used:
  9121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;Total ram usage:        6 bytes
  9132 ;; Hardware stack levels used: 1
  9133 ;; Hardware stack levels required when called: 3
  9134 ;; This function calls:
  9135 ;;		_setMotorPWM
  9136 ;; This function is called by:
  9137 ;;		_Right45
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text45
  9142   003AC6                     __ptext45:
  9143                           	callstack 0
  9144   003AC6                     _turnRight:
  9145                           	callstack 24
  9146   003AC6                     
  9147                           ;dc_motor.c: 140: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          41: {;dc_motor.c: 142:     (mL->direction) = 1;
  9148   003AC6  EE20 F001          	lfsr	2,1
  9149   003ACA  5014               	movf	turnRight@mL^0,w,c
  9150   003ACC  26D9               	addwf	fsr2l,f,c
  9151   003ACE  5015               	movf	(turnRight@mL+1)^0,w,c
  9152   003AD0  22DA               	addwfc	fsr2h,f,c
  9153   003AD2  0E01               	movlw	1
  9154   003AD4  6EDF               	movwf	indf2,c
  9155                           
  9156                           ;dc_motor.c: 143:     (mR->direction) = 0;
  9157   003AD6  EE20 F001          	lfsr	2,1
  9158   003ADA  5016               	movf	turnRight@mR^0,w,c
  9159   003ADC  26D9               	addwf	fsr2l,f,c
  9160   003ADE  5017               	movf	(turnRight@mR+1)^0,w,c
  9161   003AE0  22DA               	addwfc	fsr2h,f,c
  9162   003AE2  0E00               	movlw	0
  9163   003AE4  6EDF               	movwf	indf2,c
  9164   003AE6                     
  9165                           ;dc_motor.c: 144:     setMotorPWM(mL);
  9166   003AE6  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9167   003AEA  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9168   003AEE  ECB4  F019         	call	_setMotorPWM	;wreg free
  9169   003AF2                     
  9170                           ;dc_motor.c: 145:     setMotorPWM(mR);
  9171   003AF2  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9172   003AF6  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9173   003AFA  ECB4  F019         	call	_setMotorPWM	;wreg free
  9174   003AFE                     
  9175                           ;dc_motor.c: 146:     for (unsigned int i = 0; i <50; i++)
  9176   003AFE  0E00               	movlw	0
  9177   003B00  6E19               	movwf	(turnRight@i+1)^0,c
  9178   003B02  0E00               	movlw	0
  9179   003B04  6E18               	movwf	turnRight@i^0,c
  9180   003B06                     l2926:
  9181                           
  9182                           ;dc_motor.c: 147:     {;dc_motor.c: 148:         mL->power++;
  9183   003B06  C014  FFD9         	movff	turnRight@mL,fsr2l
  9184   003B0A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9185   003B0E  2ADF               	incf	indf2,f,c
  9186                           
  9187                           ;dc_motor.c: 149:         mR->power++;
  9188   003B10  C016  FFD9         	movff	turnRight@mR,fsr2l
  9189   003B14  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9190   003B18  2ADF               	incf	indf2,f,c
  9191   003B1A                     
  9192                           ;dc_motor.c: 150:         setMotorPWM(mL);
  9193   003B1A  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9194   003B1E  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9195   003B22  ECB4  F019         	call	_setMotorPWM	;wreg free
  9196   003B26                     
  9197                           ;dc_motor.c: 151:         setMotorPWM(mR);
  9198   003B26  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9199   003B2A  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9200   003B2E  ECB4  F019         	call	_setMotorPWM	;wreg free
  9201   003B32                     
  9202                           ;dc_motor.c: 152:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9203   003B32  0EE4               	movlw	228
  9204   003B34                     u3927:
  9205   003B34  D000               	nop2	
  9206   003B36  D000               	nop2	
  9207   003B38  2EE8               	decfsz	wreg,f,c
  9208   003B3A  D7FC               	bra	u3927
  9209   003B3C  D000               	nop2	
  9210   003B3E  D000               	nop2	
  9211   003B40                     
  9212                           ;dc_motor.c: 153:     }
  9213   003B40  4A18               	infsnz	turnRight@i^0,f,c
  9214   003B42  2A19               	incf	(turnRight@i+1)^0,f,c
  9215   003B44  5019               	movf	(turnRight@i+1)^0,w,c
  9216   003B46  E109               	bnz	u2020
  9217   003B48  0E32               	movlw	50
  9218   003B4A  5C18               	subwf	turnRight@i^0,w,c
  9219   003B4C  A0D8               	btfss	status,0,c
  9220   003B4E  EFAB  F01D         	goto	u2021
  9221   003B52  EFAD  F01D         	goto	u2020
  9222   003B56                     u2021:
  9223   003B56  EF83  F01D         	goto	l2926
  9224   003B5A                     u2020:
  9225   003B5A  0012               	return		;funcret
  9226   003B5C                     __end_of_turnRight:
  9227                           	callstack 0
  9228                           
  9229 ;; *************** function _Blue_T180 *****************
  9230 ;; Defined at:
  9231 ;;		line 263 in file "dc_motor.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  9234 ;;		 -> motorL(9), 
  9235 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  9236 ;;		 -> motorR(9), 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  1    wreg      void 
  9241 ;; Registers used:
  9242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;Total ram usage:        4 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; Hardware stack levels required when called: 6
  9255 ;; This function calls:
  9256 ;;		_reverseHalfSquare
  9257 ;;		_rotate180left
  9258 ;; This function is called by:
  9259 ;;		_Colour2Action
  9260 ;;		_White
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text46
  9265   0041B8                     __ptext46:
  9266                           	callstack 0
  9267   0041B8                     _Blue_T180:
  9268                           	callstack 22
  9269   0041B8                     
  9270                           ;dc_motor.c: 263: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          64: {;dc_motor.c: 265:     if (ForwardFlag){
  9271   0041B8  0100               	movlb	0	; () banked
  9272   0041BA  51F8               	movf	_ForwardFlag& (0+255),w,b	;volatile
  9273   0041BC  B4D8               	btfsc	status,2,c
  9274   0041BE  EFE3  F020         	goto	u2381
  9275   0041C2  EFE5  F020         	goto	u2380
  9276   0041C6                     u2381:
  9277   0041C6  EFFB  F020         	goto	l3204
  9278   0041CA                     u2380:
  9279   0041CA                     
  9280                           ; BSR set to: 0
  9281                           ;dc_motor.c: 266:     reverseHalfSquare(mL,mR);
  9282   0041CA  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  9283   0041CE  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  9284   0041D2  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  9285   0041D6  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  9286   0041DA  ECCB  F01E         	call	_reverseHalfSquare	;wreg free
  9287                           
  9288                           ;dc_motor.c: 268:     rotate180left(mL,mR);
  9289   0041DE  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9290   0041E2  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9291   0041E6  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9292   0041EA  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9293   0041EE  EC06  F021         	call	_rotate180left	;wreg free
  9294                           
  9295                           ;dc_motor.c: 269:     }else{
  9296   0041F2  EF05  F021         	goto	l548
  9297   0041F6                     l3204:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;dc_motor.c: 270:     rotate180left(mL,mR);
  9301   0041F6  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  9302   0041FA  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  9303   0041FE  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  9304   004202  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  9305   004206  EC06  F021         	call	_rotate180left	;wreg free
  9306   00420A                     l548:
  9307   00420A  0012               	return		;funcret
  9308   00420C                     __end_of_Blue_T180:
  9309                           	callstack 0
  9310                           
  9311 ;; *************** function _rotate180left *****************
  9312 ;; Defined at:
  9313 ;;		line 215 in file "dc_motor.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9316 ;;		 -> motorL(9), 
  9317 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9318 ;;		 -> motorR(9), 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;Total ram usage:        4 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; Hardware stack levels required when called: 5
  9337 ;; This function calls:
  9338 ;;		_Left45
  9339 ;; This function is called by:
  9340 ;;		_Blue_T180
  9341 ;;		_White
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text47
  9346   00420C                     __ptext47:
  9347                           	callstack 0
  9348   00420C                     _rotate180left:
  9349                           	callstack 23
  9350   00420C                     
  9351                           ;dc_motor.c: 215: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 216: {;dc_motor.c: 218:     Left45(mL,mR);
  9352   00420C  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9353   004210  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9354   004214  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9355   004218  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9356   00421C  EC86  F01E         	call	_Left45	;wreg free
  9357                           
  9358                           ;dc_motor.c: 219:     Left45(mL,mR);
  9359   004220  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9360   004224  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9361   004228  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9362   00422C  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9363   004230  EC86  F01E         	call	_Left45	;wreg free
  9364                           
  9365                           ;dc_motor.c: 220:     Left45(mL,mR);
  9366   004234  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9367   004238  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9368   00423C  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9369   004240  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9370   004244  EC86  F01E         	call	_Left45	;wreg free
  9371                           
  9372                           ;dc_motor.c: 221:     Left45(mL,mR);
  9373   004248  C020  F01A         	movff	rotate180left@mL,Left45@mL
  9374   00424C  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  9375   004250  C022  F01C         	movff	rotate180left@mR,Left45@mR
  9376   004254  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  9377   004258  EC86  F01E         	call	_Left45	;wreg free
  9378   00425C  0012               	return		;funcret
  9379   00425E                     __end_of_rotate180left:
  9380                           	callstack 0
  9381                           
  9382 ;; *************** function _Left45 *****************
  9383 ;; Defined at:
  9384 ;;		line 187 in file "dc_motor.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9387 ;;		 -> motorL(9), 
  9388 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9389 ;;		 -> motorR(9), 
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9404 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9405 ;;Total ram usage:        6 bytes
  9406 ;; Hardware stack levels used: 1
  9407 ;; Hardware stack levels required when called: 4
  9408 ;; This function calls:
  9409 ;;		_stop
  9410 ;;		_turnLeft
  9411 ;; This function is called by:
  9412 ;;		_rotate180left
  9413 ;;		_Red_R90
  9414 ;;		_Green_L90
  9415 ;;		_Yellow_rev1_R90
  9416 ;;		_Pink_rev1_L90
  9417 ;;		_Orange_R135
  9418 ;;		_LightBlue_L135
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text48
  9423   003D0C                     __ptext48:
  9424                           	callstack 0
  9425   003D0C                     _Left45:
  9426                           	callstack 24
  9427   003D0C                     
  9428                           ;dc_motor.c: 187: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 188:
      +                           {;dc_motor.c: 189:     LATFbits.LATF0 = 1;;
  9429   003D0C  807E               	bsf	126,0,c	;volatile
  9430   003D0E                     
  9431                           ;dc_motor.c: 191:     stop(mL,mR);
  9432   003D0E  C01A  F014         	movff	Left45@mL,stop@mL
  9433   003D12  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9434   003D16  C01C  F016         	movff	Left45@mR,stop@mR
  9435   003D1A  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9436   003D1E  EC6C  F01C         	call	_stop	;wreg free
  9437   003D22                     
  9438                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9439   003D22  0E05               	movlw	5
  9440   003D24  6E1F               	movwf	(??_Left45+1)^0,c
  9441   003D26  0E0F               	movlw	15
  9442   003D28  6E1E               	movwf	??_Left45^0,c
  9443   003D2A  0EF1               	movlw	241
  9444   003D2C                     u3937:
  9445   003D2C  2EE8               	decfsz	wreg,f,c
  9446   003D2E  D7FE               	bra	u3937
  9447   003D30  2E1E               	decfsz	??_Left45^0,f,c
  9448   003D32  D7FC               	bra	u3937
  9449   003D34  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9450   003D36  D7FA               	bra	u3937
  9451   003D38  F000               	nop	
  9452   003D3A                     
  9453                           ;dc_motor.c: 193:     turnLeft(mL,mR);
  9454   003D3A  C01A  F014         	movff	Left45@mL,turnLeft@mL
  9455   003D3E  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  9456   003D42  C01C  F016         	movff	Left45@mR,turnLeft@mR
  9457   003D46  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  9458   003D4A  ECAE  F01D         	call	_turnLeft	;wreg free
  9459                           
  9460                           ;dc_motor.c: 194:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  9461   003D4E  0E0C               	movlw	12
  9462   003D50  6E1F               	movwf	(??_Left45+1)^0,c
  9463   003D52  0EB1               	movlw	177
  9464   003D54  6E1E               	movwf	??_Left45^0,c
  9465   003D56  0E2B               	movlw	43
  9466   003D58                     u3947:
  9467   003D58  2EE8               	decfsz	wreg,f,c
  9468   003D5A  D7FE               	bra	u3947
  9469   003D5C  2E1E               	decfsz	??_Left45^0,f,c
  9470   003D5E  D7FC               	bra	u3947
  9471   003D60  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9472   003D62  D7FA               	bra	u3947
  9473   003D64  F000               	nop	
  9474   003D66                     
  9475                           ;dc_motor.c: 195:     stop(mL,mR);
  9476   003D66  C01A  F014         	movff	Left45@mL,stop@mL
  9477   003D6A  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  9478   003D6E  C01C  F016         	movff	Left45@mR,stop@mR
  9479   003D72  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  9480   003D76  EC6C  F01C         	call	_stop	;wreg free
  9481   003D7A                     
  9482                           ;dc_motor.c: 196:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9483   003D7A  0E05               	movlw	5
  9484   003D7C  6E1F               	movwf	(??_Left45+1)^0,c
  9485   003D7E  0E0F               	movlw	15
  9486   003D80  6E1E               	movwf	??_Left45^0,c
  9487   003D82  0EF1               	movlw	241
  9488   003D84                     u3957:
  9489   003D84  2EE8               	decfsz	wreg,f,c
  9490   003D86  D7FE               	bra	u3957
  9491   003D88  2E1E               	decfsz	??_Left45^0,f,c
  9492   003D8A  D7FC               	bra	u3957
  9493   003D8C  2E1F               	decfsz	(??_Left45+1)^0,f,c
  9494   003D8E  D7FA               	bra	u3957
  9495   003D90  F000               	nop	
  9496   003D92                     
  9497                           ;dc_motor.c: 197:     LATFbits.LATF0 = 0;;
  9498   003D92  907E               	bcf	126,0,c	;volatile
  9499   003D94  0012               	return		;funcret
  9500   003D96                     __end_of_Left45:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _turnLeft *****************
  9504 ;; Defined at:
  9505 ;;		line 121 in file "dc_motor.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9508 ;;		 -> motorL(9), 
  9509 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9510 ;;		 -> motorR(9), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  i               2   23[COMRAM] unsigned int 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9526 ;;Total ram usage:        6 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; Hardware stack levels required when called: 3
  9529 ;; This function calls:
  9530 ;;		_setMotorPWM
  9531 ;; This function is called by:
  9532 ;;		_Left45
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text49
  9537   003B5C                     __ptext49:
  9538                           	callstack 0
  9539   003B5C                     _turnLeft:
  9540                           	callstack 24
  9541   003B5C                     
  9542                           ;dc_motor.c: 121: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 12
      +                          2: {;dc_motor.c: 124:     (mL->direction) = 0;
  9543   003B5C  EE20 F001          	lfsr	2,1
  9544   003B60  5014               	movf	turnLeft@mL^0,w,c
  9545   003B62  26D9               	addwf	fsr2l,f,c
  9546   003B64  5015               	movf	(turnLeft@mL+1)^0,w,c
  9547   003B66  22DA               	addwfc	fsr2h,f,c
  9548   003B68  0E00               	movlw	0
  9549   003B6A  6EDF               	movwf	indf2,c
  9550                           
  9551                           ;dc_motor.c: 125:     (mR->direction) = 1;
  9552   003B6C  EE20 F001          	lfsr	2,1
  9553   003B70  5016               	movf	turnLeft@mR^0,w,c
  9554   003B72  26D9               	addwf	fsr2l,f,c
  9555   003B74  5017               	movf	(turnLeft@mR+1)^0,w,c
  9556   003B76  22DA               	addwfc	fsr2h,f,c
  9557   003B78  0E01               	movlw	1
  9558   003B7A  6EDF               	movwf	indf2,c
  9559   003B7C                     
  9560                           ;dc_motor.c: 126:     setMotorPWM(mL);
  9561   003B7C  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9562   003B80  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9563   003B84  ECB4  F019         	call	_setMotorPWM	;wreg free
  9564   003B88                     
  9565                           ;dc_motor.c: 127:     setMotorPWM(mR);
  9566   003B88  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9567   003B8C  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9568   003B90  ECB4  F019         	call	_setMotorPWM	;wreg free
  9569   003B94                     
  9570                           ;dc_motor.c: 128:     for (unsigned int i = 0; i <50; i++)
  9571   003B94  0E00               	movlw	0
  9572   003B96  6E19               	movwf	(turnLeft@i+1)^0,c
  9573   003B98  0E00               	movlw	0
  9574   003B9A  6E18               	movwf	turnLeft@i^0,c
  9575   003B9C                     l2882:
  9576                           
  9577                           ;dc_motor.c: 129:     {;dc_motor.c: 130:         mL->power++;
  9578   003B9C  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9579   003BA0  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9580   003BA4  2ADF               	incf	indf2,f,c
  9581                           
  9582                           ;dc_motor.c: 131:         mR->power++;
  9583   003BA6  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9584   003BAA  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9585   003BAE  2ADF               	incf	indf2,f,c
  9586   003BB0                     
  9587                           ;dc_motor.c: 132:         setMotorPWM(mL);
  9588   003BB0  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9589   003BB4  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9590   003BB8  ECB4  F019         	call	_setMotorPWM	;wreg free
  9591   003BBC                     
  9592                           ;dc_motor.c: 133:         setMotorPWM(mR);
  9593   003BBC  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9594   003BC0  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9595   003BC4  ECB4  F019         	call	_setMotorPWM	;wreg free
  9596   003BC8                     
  9597                           ;dc_motor.c: 134:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  9598   003BC8  0EE4               	movlw	228
  9599   003BCA                     u3967:
  9600   003BCA  D000               	nop2	
  9601   003BCC  D000               	nop2	
  9602   003BCE  2EE8               	decfsz	wreg,f,c
  9603   003BD0  D7FC               	bra	u3967
  9604   003BD2  D000               	nop2	
  9605   003BD4  D000               	nop2	
  9606   003BD6                     
  9607                           ;dc_motor.c: 135:     }
  9608   003BD6  4A18               	infsnz	turnLeft@i^0,f,c
  9609   003BD8  2A19               	incf	(turnLeft@i+1)^0,f,c
  9610   003BDA  5019               	movf	(turnLeft@i+1)^0,w,c
  9611   003BDC  E109               	bnz	u2000
  9612   003BDE  0E32               	movlw	50
  9613   003BE0  5C18               	subwf	turnLeft@i^0,w,c
  9614   003BE2  A0D8               	btfss	status,0,c
  9615   003BE4  EFF6  F01D         	goto	u2001
  9616   003BE8  EFF8  F01D         	goto	u2000
  9617   003BEC                     u2001:
  9618   003BEC  EFCE  F01D         	goto	l2882
  9619   003BF0                     u2000:
  9620   003BF0  0012               	return		;funcret
  9621   003BF2                     __end_of_turnLeft:
  9622                           	callstack 0
  9623                           
  9624 ;; *************** function _reverseHalfSquare *****************
  9625 ;; Defined at:
  9626 ;;		line 224 in file "dc_motor.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  9629 ;;		 -> motorL(9), 
  9630 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  9631 ;;		 -> motorR(9), 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;Total ram usage:        6 bytes
  9648 ;; Hardware stack levels used: 1
  9649 ;; Hardware stack levels required when called: 4
  9650 ;; This function calls:
  9651 ;;		_fullSpeedReverse
  9652 ;;		_stop
  9653 ;; This function is called by:
  9654 ;;		_Red_R90
  9655 ;;		_Green_L90
  9656 ;;		_Blue_T180
  9657 ;;		_Yellow_rev1_R90
  9658 ;;		_Pink_rev1_L90
  9659 ;;		_Orange_R135
  9660 ;;		_LightBlue_L135
  9661 ;;		_White
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text50
  9666   003D96                     __ptext50:
  9667                           	callstack 0
  9668   003D96                     _reverseHalfSquare:
  9669                           	callstack 24
  9670   003D96                     
  9671                           ;dc_motor.c: 224: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 225: {;dc_motor.c: 226:     stop(mL,mR);
  9672   003D96  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9673   003D9A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9674   003D9E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9675   003DA2  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9676   003DA6  EC6C  F01C         	call	_stop	;wreg free
  9677   003DAA                     
  9678                           ;dc_motor.c: 227:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9679   003DAA  0E09               	movlw	9
  9680   003DAC  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9681   003DAE  0E1E               	movlw	30
  9682   003DB0  6E1F               	movwf	??_reverseHalfSquare^0,c
  9683   003DB2  0EE4               	movlw	228
  9684   003DB4                     u3977:
  9685   003DB4  2EE8               	decfsz	wreg,f,c
  9686   003DB6  D7FE               	bra	u3977
  9687   003DB8  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9688   003DBA  D7FC               	bra	u3977
  9689   003DBC  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9690   003DBE  D7FA               	bra	u3977
  9691   003DC0  D000               	nop2	
  9692   003DC2                     
  9693                           ;dc_motor.c: 228:     fullSpeedReverse(mL,mR);
  9694   003DC2  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  9695   003DC6  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  9696   003DCA  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  9697   003DCE  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  9698   003DD2  EC4D  F01F         	call	_fullSpeedReverse	;wreg free
  9699                           
  9700                           ;dc_motor.c: 229:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  9701   003DD6  0E19               	movlw	25
  9702   003DD8  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9703   003DDA  0E5A               	movlw	90
  9704   003DDC  6E1F               	movwf	??_reverseHalfSquare^0,c
  9705   003DDE  0EB2               	movlw	178
  9706   003DE0                     u3987:
  9707   003DE0  2EE8               	decfsz	wreg,f,c
  9708   003DE2  D7FE               	bra	u3987
  9709   003DE4  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9710   003DE6  D7FC               	bra	u3987
  9711   003DE8  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9712   003DEA  D7FA               	bra	u3987
  9713   003DEC                     
  9714                           ;dc_motor.c: 230:     stop(mL,mR);
  9715   003DEC  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  9716   003DF0  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  9717   003DF4  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  9718   003DF8  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  9719   003DFC  EC6C  F01C         	call	_stop	;wreg free
  9720   003E00                     
  9721                           ;dc_motor.c: 231:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9722   003E00  0E09               	movlw	9
  9723   003E02  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  9724   003E04  0E1E               	movlw	30
  9725   003E06  6E1F               	movwf	??_reverseHalfSquare^0,c
  9726   003E08  0EE4               	movlw	228
  9727   003E0A                     u3997:
  9728   003E0A  2EE8               	decfsz	wreg,f,c
  9729   003E0C  D7FE               	bra	u3997
  9730   003E0E  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  9731   003E10  D7FC               	bra	u3997
  9732   003E12  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  9733   003E14  D7FA               	bra	u3997
  9734   003E16  D000               	nop2	
  9735   003E18  0012               	return		;funcret
  9736   003E1A                     __end_of_reverseHalfSquare:
  9737                           	callstack 0
  9738                           
  9739 ;; *************** function _stop *****************
  9740 ;; Defined at:
  9741 ;;		line 101 in file "dc_motor.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9744 ;;		 -> motorL(9), 
  9745 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9746 ;;		 -> motorR(9), 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9762 ;;Total ram usage:        5 bytes
  9763 ;; Hardware stack levels used: 1
  9764 ;; Hardware stack levels required when called: 3
  9765 ;; This function calls:
  9766 ;;		_setMotorPWM
  9767 ;; This function is called by:
  9768 ;;		_main
  9769 ;;		_RAMback
  9770 ;;		_Left45
  9771 ;;		_Right45
  9772 ;;		_reverseHalfSquare
  9773 ;;		_White
  9774 ;;		_maxTimeReturn
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text51
  9779   0038D8                     __ptext51:
  9780                           	callstack 0
  9781   0038D8                     _stop:
  9782                           	callstack 27
  9783   0038D8                     
  9784                           ;dc_motor.c: 101: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 102: {
      +                          ;dc_motor.c: 103:     LATDbits.LATD4 = 1;;
  9785   0038D8  887C               	bsf	124,4,c	;volatile
  9786                           
  9787                           ;dc_motor.c: 104:     while((mL->power)>0 && (mR->power)>0)
  9788   0038DA  EFA5  F01C         	goto	l2866
  9789   0038DE                     l2852:
  9790                           
  9791                           ;dc_motor.c: 105:     {;dc_motor.c: 107:         if (mL->power>0){
  9792   0038DE  C014  FFD9         	movff	stop@mL,fsr2l
  9793   0038E2  C015  FFDA         	movff	stop@mL+1,fsr2h
  9794   0038E6  50DF               	movf	indf2,w,c
  9795   0038E8  B4D8               	btfsc	status,2,c
  9796   0038EA  EF79  F01C         	goto	u1961
  9797   0038EE  EF7B  F01C         	goto	u1960
  9798   0038F2                     u1961:
  9799   0038F2  EF80  F01C         	goto	l2856
  9800   0038F6                     u1960:
  9801   0038F6                     
  9802                           ;dc_motor.c: 108:             mL->power--;
  9803   0038F6  C014  FFD9         	movff	stop@mL,fsr2l
  9804   0038FA  C015  FFDA         	movff	stop@mL+1,fsr2h
  9805   0038FE  06DF               	decf	indf2,f,c
  9806   003900                     l2856:
  9807                           
  9808                           ;dc_motor.c: 110:         if ((mR->power)>0){
  9809   003900  C016  FFD9         	movff	stop@mR,fsr2l
  9810   003904  C017  FFDA         	movff	stop@mR+1,fsr2h
  9811   003908  50DF               	movf	indf2,w,c
  9812   00390A  B4D8               	btfsc	status,2,c
  9813   00390C  EF8A  F01C         	goto	u1971
  9814   003910  EF8C  F01C         	goto	u1970
  9815   003914                     u1971:
  9816   003914  EF91  F01C         	goto	l2860
  9817   003918                     u1970:
  9818   003918                     
  9819                           ;dc_motor.c: 111:             mR->power--;
  9820   003918  C016  FFD9         	movff	stop@mR,fsr2l
  9821   00391C  C017  FFDA         	movff	stop@mR+1,fsr2h
  9822   003920  06DF               	decf	indf2,f,c
  9823   003922                     l2860:
  9824                           
  9825                           ;dc_motor.c: 113:         setMotorPWM(mL);
  9826   003922  C014  F00E         	movff	stop@mL,setMotorPWM@m
  9827   003926  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9828   00392A  ECB4  F019         	call	_setMotorPWM	;wreg free
  9829   00392E                     
  9830                           ;dc_motor.c: 114:         setMotorPWM(mR);
  9831   00392E  C016  F00E         	movff	stop@mR,setMotorPWM@m
  9832   003932  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9833   003936  ECB4  F019         	call	_setMotorPWM	;wreg free
  9834   00393A                     
  9835                           ;dc_motor.c: 115:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9836   00393A  0E09               	movlw	9
  9837   00393C  6E18               	movwf	??_stop^0,c
  9838   00393E  0E4E               	movlw	78
  9839   003940                     u4007:
  9840   003940  2EE8               	decfsz	wreg,f,c
  9841   003942  D7FE               	bra	u4007
  9842   003944  2E18               	decfsz	??_stop^0,f,c
  9843   003946  D7FC               	bra	u4007
  9844   003948  D000               	nop2	
  9845   00394A                     l2866:
  9846                           
  9847                           ;dc_motor.c: 104:     while((mL->power)>0 && (mR->power)>0)
  9848   00394A  C014  FFD9         	movff	stop@mL,fsr2l
  9849   00394E  C015  FFDA         	movff	stop@mL+1,fsr2h
  9850   003952  50DF               	movf	indf2,w,c
  9851   003954  B4D8               	btfsc	status,2,c
  9852   003956  EFAF  F01C         	goto	u1981
  9853   00395A  EFB1  F01C         	goto	u1980
  9854   00395E                     u1981:
  9855   00395E  EFBD  F01C         	goto	l500
  9856   003962                     u1980:
  9857   003962  C016  FFD9         	movff	stop@mR,fsr2l
  9858   003966  C017  FFDA         	movff	stop@mR+1,fsr2h
  9859   00396A  50DF               	movf	indf2,w,c
  9860   00396C  A4D8               	btfss	status,2,c
  9861   00396E  EFBB  F01C         	goto	u1991
  9862   003972  EFBD  F01C         	goto	u1990
  9863   003976                     u1991:
  9864   003976  EF6F  F01C         	goto	l2852
  9865   00397A                     u1990:
  9866   00397A                     l500:
  9867                           
  9868                           ;dc_motor.c: 117:     LATDbits.LATD4 = 0;;
  9869   00397A  987C               	bcf	124,4,c	;volatile
  9870   00397C  0012               	return		;funcret
  9871   00397E                     __end_of_stop:
  9872                           	callstack 0
  9873                           
  9874 ;; *************** function _fullSpeedReverse *****************
  9875 ;; Defined at:
  9876 ;;		line 171 in file "dc_motor.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9879 ;;		 -> motorL(9), 
  9880 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9881 ;;		 -> motorR(9), 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  i               2   24[COMRAM] unsigned int 
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  1    wreg      void 
  9886 ;; Registers used:
  9887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9896 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;Total ram usage:        7 bytes
  9898 ;; Hardware stack levels used: 1
  9899 ;; Hardware stack levels required when called: 3
  9900 ;; This function calls:
  9901 ;;		_setMotorPWM
  9902 ;; This function is called by:
  9903 ;;		_RAMback
  9904 ;;		_reverseHalfSquare
  9905 ;;		_Yellow_rev1_R90
  9906 ;;		_Pink_rev1_L90
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text52
  9911   003E9A                     __ptext52:
  9912                           	callstack 0
  9913   003E9A                     _fullSpeedReverse:
  9914                           	callstack 24
  9915   003E9A                     
  9916                           ;dc_motor.c: 171: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 172: {;dc_motor.c: 173:  (mL->direction) = 0;
  9917   003E9A  EE20 F001          	lfsr	2,1
  9918   003E9E  5014               	movf	fullSpeedReverse@mL^0,w,c
  9919   003EA0  26D9               	addwf	fsr2l,f,c
  9920   003EA2  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  9921   003EA4  22DA               	addwfc	fsr2h,f,c
  9922   003EA6  0E00               	movlw	0
  9923   003EA8  6EDF               	movwf	indf2,c
  9924                           
  9925                           ;dc_motor.c: 174:  (mR->direction) = 0;
  9926   003EAA  EE20 F001          	lfsr	2,1
  9927   003EAE  5016               	movf	fullSpeedReverse@mR^0,w,c
  9928   003EB0  26D9               	addwf	fsr2l,f,c
  9929   003EB2  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  9930   003EB4  22DA               	addwfc	fsr2h,f,c
  9931   003EB6  0E00               	movlw	0
  9932   003EB8  6EDF               	movwf	indf2,c
  9933   003EBA                     
  9934                           ;dc_motor.c: 176:     for (unsigned int i = 0; i <50; i++)
  9935   003EBA  0E00               	movlw	0
  9936   003EBC  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  9937   003EBE  0E00               	movlw	0
  9938   003EC0  6E19               	movwf	fullSpeedReverse@i^0,c
  9939   003EC2                     l2902:
  9940                           
  9941                           ;dc_motor.c: 177:     {;dc_motor.c: 178:         (mL->power)++;
  9942   003EC2  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  9943   003EC6  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  9944   003ECA  2ADF               	incf	indf2,f,c
  9945                           
  9946                           ;dc_motor.c: 179:         (mR->power)++;
  9947   003ECC  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  9948   003ED0  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  9949   003ED4  2ADF               	incf	indf2,f,c
  9950   003ED6                     
  9951                           ;dc_motor.c: 180:         setMotorPWM(mL);
  9952   003ED6  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  9953   003EDA  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  9954   003EDE  ECB4  F019         	call	_setMotorPWM	;wreg free
  9955   003EE2                     
  9956                           ;dc_motor.c: 181:         setMotorPWM(mR);
  9957   003EE2  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  9958   003EE6  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  9959   003EEA  ECB4  F019         	call	_setMotorPWM	;wreg free
  9960   003EEE                     
  9961                           ;dc_motor.c: 182:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  9962   003EEE  0E09               	movlw	9
  9963   003EF0  6E18               	movwf	??_fullSpeedReverse^0,c
  9964   003EF2  0E4E               	movlw	78
  9965   003EF4                     u4017:
  9966   003EF4  2EE8               	decfsz	wreg,f,c
  9967   003EF6  D7FE               	bra	u4017
  9968   003EF8  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  9969   003EFA  D7FC               	bra	u4017
  9970   003EFC  D000               	nop2	
  9971   003EFE                     
  9972                           ;dc_motor.c: 183:     }
  9973   003EFE  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  9974   003F00  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  9975   003F02  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  9976   003F04  E109               	bnz	u2010
  9977   003F06  0E32               	movlw	50
  9978   003F08  5C19               	subwf	fullSpeedReverse@i^0,w,c
  9979   003F0A  A0D8               	btfss	status,0,c
  9980   003F0C  EF8A  F01F         	goto	u2011
  9981   003F10  EF8C  F01F         	goto	u2010
  9982   003F14                     u2011:
  9983   003F14  EF61  F01F         	goto	l2902
  9984   003F18                     u2010:
  9985   003F18  0012               	return		;funcret
  9986   003F1A                     __end_of_fullSpeedReverse:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _setMotorPWM *****************
  9990 ;; Defined at:
  9991 ;;		line 70 in file "dc_motor.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9994 ;;		 -> motorR(9), motorL(9), 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;  negDuty         1   18[COMRAM] unsigned char 
  9997 ;;  posDuty         1   17[COMRAM] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;Total ram usage:        6 bytes
 10012 ;; Hardware stack levels used: 1
 10013 ;; Hardware stack levels required when called: 2
 10014 ;; This function calls:
 10015 ;;		___lwdiv
 10016 ;;		___wmul
 10017 ;; This function is called by:
 10018 ;;		_stop
 10019 ;;		_turnLeft
 10020 ;;		_turnRight
 10021 ;;		_fullSpeedAhead
 10022 ;;		_fullSpeedReverse
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text53
 10027   003368                     __ptext53:
 10028                           	callstack 0
 10029   003368                     _setMotorPWM:
 10030                           	callstack 27
 10031   003368                     
 10032                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
 10033   003368  EE20 F002          	lfsr	2,2
 10034   00336C  500E               	movf	setMotorPWM@m^0,w,c
 10035   00336E  26D9               	addwf	fsr2l,f,c
 10036   003370  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10037   003372  22DA               	addwfc	fsr2h,f,c
 10038   003374  50DF               	movf	indf2,w,c
 10039   003376  B4D8               	btfsc	status,2,c
 10040   003378  EFC0  F019         	goto	u1941
 10041   00337C  EFC2  F019         	goto	u1940
 10042   003380                     u1941:
 10043   003380  EFF6  F019         	goto	l2840
 10044   003384                     u1940:
 10045   003384                     
 10046                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
 10047   003384  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10048   003388  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10049   00338C  50DF               	movf	indf2,w,c
 10050   00338E  6E10               	movwf	??_setMotorPWM^0,c
 10051   003390  5010               	movf	??_setMotorPWM^0,w,c
 10052   003392  6E01               	movwf	___wmul@multiplier^0,c
 10053   003394  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10054   003396  EE20 F003          	lfsr	2,3
 10055   00339A  500E               	movf	setMotorPWM@m^0,w,c
 10056   00339C  26D9               	addwf	fsr2l,f,c
 10057   00339E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10058   0033A0  22DA               	addwfc	fsr2h,f,c
 10059   0033A2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10060   0033A6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10061   0033AA  ECB3  F022         	call	___wmul	;wreg free
 10062   0033AE  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10063   0033B2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10064   0033B6  0E00               	movlw	0
 10065   0033B8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10066   0033BA  0E64               	movlw	100
 10067   0033BC  6E09               	movwf	___lwdiv@divisor^0,c
 10068   0033BE  EC09  F020         	call	___lwdiv	;wreg free
 10069   0033C2  EE20 F003          	lfsr	2,3
 10070   0033C6  500E               	movf	setMotorPWM@m^0,w,c
 10071   0033C8  26D9               	addwf	fsr2l,f,c
 10072   0033CA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10073   0033CC  22DA               	addwfc	fsr2h,f,c
 10074   0033CE  50DF               	movf	indf2,w,c
 10075   0033D0  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10076   0033D2  5007               	movf	?___lwdiv^0,w,c
 10077   0033D4  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10078   0033D6  6E12               	movwf	setMotorPWM@posDuty^0,c
 10079   0033D8                     
 10080                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
 10081   0033D8  EE20 F003          	lfsr	2,3
 10082   0033DC  500E               	movf	setMotorPWM@m^0,w,c
 10083   0033DE  26D9               	addwf	fsr2l,f,c
 10084   0033E0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10085   0033E2  22DA               	addwfc	fsr2h,f,c
 10086   0033E4  50DF               	movf	indf2,w,c
 10087   0033E6  6E13               	movwf	setMotorPWM@negDuty^0,c
 10088                           
 10089                           ;dc_motor.c: 77:     }
 10090   0033E8  EF19  F01A         	goto	l2844
 10091   0033EC                     l2840:
 10092                           
 10093                           ;dc_motor.c: 79:         posDuty=0;
 10094   0033EC  0E00               	movlw	0
 10095   0033EE  6E12               	movwf	setMotorPWM@posDuty^0,c
 10096   0033F0                     
 10097                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10098   0033F0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10099   0033F4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10100   0033F8  50DF               	movf	indf2,w,c
 10101   0033FA  6E10               	movwf	??_setMotorPWM^0,c
 10102   0033FC  5010               	movf	??_setMotorPWM^0,w,c
 10103   0033FE  6E01               	movwf	___wmul@multiplier^0,c
 10104   003400  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10105   003402  EE20 F003          	lfsr	2,3
 10106   003406  500E               	movf	setMotorPWM@m^0,w,c
 10107   003408  26D9               	addwf	fsr2l,f,c
 10108   00340A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10109   00340C  22DA               	addwfc	fsr2h,f,c
 10110   00340E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10111   003412  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10112   003416  ECB3  F022         	call	___wmul	;wreg free
 10113   00341A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10114   00341E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10115   003422  0E00               	movlw	0
 10116   003424  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10117   003426  0E64               	movlw	100
 10118   003428  6E09               	movwf	___lwdiv@divisor^0,c
 10119   00342A  EC09  F020         	call	___lwdiv	;wreg free
 10120   00342E  5007               	movf	?___lwdiv^0,w,c
 10121   003430  6E13               	movwf	setMotorPWM@negDuty^0,c
 10122   003432                     l2844:
 10123                           
 10124                           ;dc_motor.c: 83:     if (m->direction) {
 10125   003432  EE20 F001          	lfsr	2,1
 10126   003436  500E               	movf	setMotorPWM@m^0,w,c
 10127   003438  26D9               	addwf	fsr2l,f,c
 10128   00343A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10129   00343C  22DA               	addwfc	fsr2h,f,c
 10130   00343E  50DF               	movf	indf2,w,c
 10131   003440  B4D8               	btfsc	status,2,c
 10132   003442  EF25  F01A         	goto	u1951
 10133   003446  EF27  F01A         	goto	u1950
 10134   00344A                     u1951:
 10135   00344A  EF49  F01A         	goto	l2848
 10136   00344E                     u1950:
 10137   00344E                     
 10138                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 10139   00344E  EE20 F005          	lfsr	2,5
 10140   003452  500E               	movf	setMotorPWM@m^0,w,c
 10141   003454  26D9               	addwf	fsr2l,f,c
 10142   003456  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10143   003458  22DA               	addwfc	fsr2h,f,c
 10144   00345A  CFDE F010          	movff	postinc2,??_setMotorPWM
 10145   00345E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10146   003462  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10147   003466  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10148   00346A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10149                           
 10150                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 10151   00346E  EE20 F007          	lfsr	2,7
 10152   003472  500E               	movf	setMotorPWM@m^0,w,c
 10153   003474  26D9               	addwf	fsr2l,f,c
 10154   003476  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10155   003478  22DA               	addwfc	fsr2h,f,c
 10156   00347A  CFDE F010          	movff	postinc2,??_setMotorPWM
 10157   00347E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10158   003482  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10159   003486  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10160   00348A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10161                           
 10162                           ;dc_motor.c: 86:     } else {
 10163   00348E  EF69  F01A         	goto	l488
 10164   003492                     l2848:
 10165                           
 10166                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 10167   003492  EE20 F005          	lfsr	2,5
 10168   003496  500E               	movf	setMotorPWM@m^0,w,c
 10169   003498  26D9               	addwf	fsr2l,f,c
 10170   00349A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10171   00349C  22DA               	addwfc	fsr2h,f,c
 10172   00349E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10173   0034A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10174   0034A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10175   0034AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10176   0034AE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10177                           
 10178                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 10179   0034B2  EE20 F007          	lfsr	2,7
 10180   0034B6  500E               	movf	setMotorPWM@m^0,w,c
 10181   0034B8  26D9               	addwf	fsr2l,f,c
 10182   0034BA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10183   0034BC  22DA               	addwfc	fsr2h,f,c
 10184   0034BE  CFDE F010          	movff	postinc2,??_setMotorPWM
 10185   0034C2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10186   0034C6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10187   0034CA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10188   0034CE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10189   0034D2                     l488:
 10190   0034D2  0012               	return		;funcret
 10191   0034D4                     __end_of_setMotorPWM:
 10192                           	callstack 0
 10193                           
 10194 ;; *************** function ___wmul *****************
 10195 ;; Defined at:
 10196 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  multiplier      2    0[COMRAM] unsigned int 
 10199 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  product         2    4[COMRAM] unsigned int 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2    0[COMRAM] unsigned int 
 10204 ;; Registers used:
 10205 ;;		wreg, status,2, status,0, prodl, prodh
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10215 ;;Total ram usage:        6 bytes
 10216 ;; Hardware stack levels used: 1
 10217 ;; Hardware stack levels required when called: 1
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_setMotorPWM
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text54
 10226   004566                     __ptext54:
 10227                           	callstack 0
 10228   004566                     ___wmul:
 10229                           	callstack 27
 10230   004566  5001               	movf	___wmul@multiplier^0,w,c
 10231   004568  0203               	mulwf	___wmul@multiplicand^0,c
 10232   00456A  CFF3 F005          	movff	prodl,___wmul@product
 10233   00456E  CFF4 F006          	movff	prodh,___wmul@product+1
 10234   004572  5001               	movf	___wmul@multiplier^0,w,c
 10235   004574  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10236   004576  50F3               	movf	243,w,c
 10237   004578  2606               	addwf	(___wmul@product+1)^0,f,c
 10238   00457A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10239   00457C  0203               	mulwf	___wmul@multiplicand^0,c
 10240   00457E  50F3               	movf	243,w,c
 10241   004580  2606               	addwf	(___wmul@product+1)^0,f,c
 10242   004582  C005  F001         	movff	___wmul@product,?___wmul
 10243   004586  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10244   00458A  0012               	return		;funcret
 10245   00458C                     __end_of___wmul:
 10246                           	callstack 0
 10247                           
 10248 ;; *************** function ___lwdiv *****************
 10249 ;; Defined at:
 10250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  dividend        2    6[COMRAM] unsigned int 
 10253 ;;  divisor         2    8[COMRAM] unsigned int 
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;  quotient        2   10[COMRAM] unsigned int 
 10256 ;;  counter         1   12[COMRAM] unsigned char 
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  2    6[COMRAM] unsigned int 
 10259 ;; Registers used:
 10260 ;;		wreg, status,2, status,0
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10269 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;Total ram usage:        7 bytes
 10271 ;; Hardware stack levels used: 1
 10272 ;; Hardware stack levels required when called: 1
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_setMotorPWM
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text55
 10281   004012                     __ptext55:
 10282                           	callstack 0
 10283   004012                     ___lwdiv:
 10284                           	callstack 27
 10285   004012  0E00               	movlw	0
 10286   004014  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10287   004016  0E00               	movlw	0
 10288   004018  6E0B               	movwf	___lwdiv@quotient^0,c
 10289   00401A  5009               	movf	___lwdiv@divisor^0,w,c
 10290   00401C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10291   00401E  B4D8               	btfsc	status,2,c
 10292   004020  EF14  F020         	goto	u1911
 10293   004024  EF16  F020         	goto	u1910
 10294   004028                     u1911:
 10295   004028  EF3E  F020         	goto	l1203
 10296   00402C                     u1910:
 10297   00402C  0E01               	movlw	1
 10298   00402E  6E0D               	movwf	___lwdiv@counter^0,c
 10299   004030  EF1E  F020         	goto	l2820
 10300   004034                     l2818:
 10301   004034  90D8               	bcf	status,0,c
 10302   004036  3609               	rlcf	___lwdiv@divisor^0,f,c
 10303   004038  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10304   00403A  2A0D               	incf	___lwdiv@counter^0,f,c
 10305   00403C                     l2820:
 10306   00403C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10307   00403E  EF23  F020         	goto	u1921
 10308   004042  EF25  F020         	goto	u1920
 10309   004046                     u1921:
 10310   004046  EF1A  F020         	goto	l2818
 10311   00404A                     u1920:
 10312   00404A                     l2822:
 10313   00404A  90D8               	bcf	status,0,c
 10314   00404C  360B               	rlcf	___lwdiv@quotient^0,f,c
 10315   00404E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10316   004050  5009               	movf	___lwdiv@divisor^0,w,c
 10317   004052  5C07               	subwf	___lwdiv@dividend^0,w,c
 10318   004054  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10319   004056  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10320   004058  A0D8               	btfss	status,0,c
 10321   00405A  EF31  F020         	goto	u1931
 10322   00405E  EF33  F020         	goto	u1930
 10323   004062                     u1931:
 10324   004062  EF38  F020         	goto	l2830
 10325   004066                     u1930:
 10326   004066  5009               	movf	___lwdiv@divisor^0,w,c
 10327   004068  5E07               	subwf	___lwdiv@dividend^0,f,c
 10328   00406A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10329   00406C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10330   00406E  800B               	bsf	___lwdiv@quotient^0,0,c
 10331   004070                     l2830:
 10332   004070  90D8               	bcf	status,0,c
 10333   004072  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10334   004074  3209               	rrcf	___lwdiv@divisor^0,f,c
 10335   004076  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10336   004078  EF25  F020         	goto	l2822
 10337   00407C                     l1203:
 10338   00407C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10339   004080  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10340   004084  0012               	return		;funcret
 10341   004086                     __end_of___lwdiv:
 10342                           	callstack 0
 10343                           
 10344 ;; *************** function _ClickLEDOn *****************
 10345 ;; Defined at:
 10346 ;;		line 93 in file "colorclick.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  power           1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  power           1    0[COMRAM] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;Total ram usage:        1 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 1
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_main
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           	psect	text56
 10375   0044B0                     __ptext56:
 10376                           	callstack 0
 10377   0044B0                     _ClickLEDOn:
 10378                           	callstack 29
 10379                           
 10380                           ;incstack = 0
 10381                           ;ClickLEDOn@power stored from wreg
 10382   0044B0  6E01               	movwf	ClickLEDOn@power^0,c
 10383   0044B2                     
 10384                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 10385   0044B2  5001               	movf	ClickLEDOn@power^0,w,c
 10386   0044B4  B4D8               	btfsc	status,2,c
 10387   0044B6  EF5F  F022         	goto	u3351
 10388   0044BA  EF61  F022         	goto	u3350
 10389   0044BE                     u3351:
 10390   0044BE  EF66  F022         	goto	l3860
 10391   0044C2                     u3350:
 10392   0044C2                     
 10393                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 10394   0044C2  827F               	bsf	127,1,c	;volatile
 10395                           
 10396                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 10397   0044C4  8879               	bsf	121,4,c	;volatile
 10398                           
 10399                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 10400   0044C6  8E7E               	bsf	126,7,c	;volatile
 10401                           
 10402                           ;colorclick.c: 99:     }
 10403   0044C8  EF71  F022         	goto	l52
 10404   0044CC                     l3860:
 10405   0044CC  5001               	movf	ClickLEDOn@power^0,w,c
 10406   0044CE  A4D8               	btfss	status,2,c
 10407   0044D0  EF6C  F022         	goto	u3361
 10408   0044D4  EF6E  F022         	goto	u3360
 10409   0044D8                     u3361:
 10410   0044D8  EF71  F022         	goto	l52
 10411   0044DC                     u3360:
 10412   0044DC                     
 10413                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 10414   0044DC  927F               	bcf	127,1,c	;volatile
 10415                           
 10416                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 10417   0044DE  9879               	bcf	121,4,c	;volatile
 10418                           
 10419                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 10420   0044E0  9E7E               	bcf	126,7,c	;volatile
 10421   0044E2                     l52:
 10422   0044E2  0012               	return		;funcret
 10423   0044E4                     __end_of_ClickLEDOn:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function _HighISR *****************
 10427 ;; Defined at:
 10428 ;;		line 25 in file "interrupts.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;		None
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;		None
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;Total ram usage:        0 bytes
 10447 ;; Hardware stack levels used: 1
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		Interrupt level 2
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	intcode
 10456   000008                     __pintcode:
 10457                           	callstack 0
 10458   000008                     _HighISR:
 10459                           	callstack 22
 10460                           
 10461                           ;incstack = 0
 10462   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10463   00000A                     
 10464                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 10465   00000A  010E               	movlb	14	; () banked
 10466   00000C  AB33               	btfss	51,5,b	;volatile
 10467   00000E  EF0B  F000         	goto	i2u377_41
 10468   000012  EF0D  F000         	goto	i2u377_40
 10469   000016                     i2u377_41:
 10470   000016  EF14  F000         	goto	i2l709
 10471   00001A                     i2u377_40:
 10472   00001A                     
 10473                           ; BSR set to: 14
 10474                           ;interrupts.c: 29:     maxTime = 1;
 10475   00001A  0E00               	movlw	0
 10476   00001C  0100               	movlb	0	; () banked
 10477   00001E  6F65               	movwf	(_maxTime+1)& (0+255),b	;volatile
 10478   000020  0E01               	movlw	1
 10479   000022  6F64               	movwf	_maxTime& (0+255),b	;volatile
 10480   000024                     
 10481                           ; BSR set to: 0
 10482                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 10483   000024  010E               	movlb	14	; () banked
 10484   000026  9B33               	bcf	51,5,b	;volatile
 10485   000028                     i2l709:
 10486                           
 10487                           ; BSR set to: 14
 10488   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10489   00002A  0011               	retfie		f
 10490   00002C                     __end_of_HighISR:
 10491                           	callstack 0
 10492                           
 10493                           	psect	rparam
 10494   000000                     
 10495                           	psect	temp
 10496   00005F                     btemp:
 10497                           	callstack 0
 10498   00005F                     	ds	1
 10499   000000                     int$flags	set	btemp
 10500   000000                     wtemp8	set	btemp+1
 10501   000000                     ttemp5	set	btemp+1
 10502   000000                     ttemp6	set	btemp+4
 10503   000000                     ttemp7	set	btemp+8
 10504                           
 10505                           	psect	idloc
 10506                           
 10507                           ;Config register IDLOC0 @ 0x200000
 10508                           ;	unspecified, using default values
 10509   200000                     	org	2097152
 10510   200000  0FFF               	dw	4095
 10511                           
 10512                           ;Config register IDLOC1 @ 0x200002
 10513                           ;	unspecified, using default values
 10514   200002                     	org	2097154
 10515   200002  0FFF               	dw	4095
 10516                           
 10517                           ;Config register IDLOC2 @ 0x200004
 10518                           ;	unspecified, using default values
 10519   200004                     	org	2097156
 10520   200004  0FFF               	dw	4095
 10521                           
 10522                           ;Config register IDLOC3 @ 0x200006
 10523                           ;	unspecified, using default values
 10524   200006                     	org	2097158
 10525   200006  0FFF               	dw	4095
 10526                           
 10527                           ;Config register IDLOC4 @ 0x200008
 10528                           ;	unspecified, using default values
 10529   200008                     	org	2097160
 10530   200008  0FFF               	dw	4095
 10531                           
 10532                           ;Config register IDLOC5 @ 0x20000A
 10533                           ;	unspecified, using default values
 10534   20000A                     	org	2097162
 10535   20000A  0FFF               	dw	4095
 10536                           
 10537                           ;Config register IDLOC6 @ 0x20000C
 10538                           ;	unspecified, using default values
 10539   20000C                     	org	2097164
 10540   20000C  0FFF               	dw	4095
 10541                           
 10542                           ;Config register IDLOC7 @ 0x20000E
 10543                           ;	unspecified, using default values
 10544   20000E                     	org	2097166
 10545   20000E  0FFF               	dw	4095
 10546                           
 10547                           	psect	config
 10548                           
 10549                           ;Config register CONFIG1L @ 0x300000
 10550                           ;	External Oscillator mode Selection bits
 10551                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10552                           ;	Power-up default value for COSC bits
 10553                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10554   300000                     	org	3145728
 10555   300000  AA                 	db	170
 10556                           
 10557                           ;Config register CONFIG1H @ 0x300001
 10558                           ;	unspecified, using default values
 10559                           ;	Clock Out Enable bit
 10560                           ;	CLKOUTEN = 0x1, unprogrammed default
 10561                           ;	Clock Switch Enable bit
 10562                           ;	CSWEN = 0x1, unprogrammed default
 10563                           ;	Fail-Safe Clock Monitor Enable bit
 10564                           ;	FCMEN = 0x1, unprogrammed default
 10565   300001                     	org	3145729
 10566   300001  FF                 	db	255
 10567                           
 10568                           ;Config register CONFIG2L @ 0x300002
 10569                           ;	unspecified, using default values
 10570                           ;	Master Clear Enable bit
 10571                           ;	MCLRE = 0x1, unprogrammed default
 10572                           ;	Power-up Timer Enable bit
 10573                           ;	PWRTE = 0x1, unprogrammed default
 10574                           ;	Low-power BOR enable bit
 10575                           ;	LPBOREN = 0x1, unprogrammed default
 10576                           ;	Brown-out Reset Enable bits
 10577                           ;	BOREN = 0x3, unprogrammed default
 10578   300002                     	org	3145730
 10579   300002  FF                 	db	255
 10580                           
 10581                           ;Config register CONFIG2H @ 0x300003
 10582                           ;	unspecified, using default values
 10583                           ;	Brown Out Reset Voltage selection bits
 10584                           ;	BORV = 0x3, unprogrammed default
 10585                           ;	ZCD Disable bit
 10586                           ;	ZCD = 0x1, unprogrammed default
 10587                           ;	PPSLOCK bit One-Way Set Enable bit
 10588                           ;	PPS1WAY = 0x1, unprogrammed default
 10589                           ;	Stack Full/Underflow Reset Enable bit
 10590                           ;	STVREN = 0x1, unprogrammed default
 10591                           ;	Debugger Enable bit
 10592                           ;	DEBUG = 0x1, unprogrammed default
 10593                           ;	Extended Instruction Set Enable bit
 10594                           ;	XINST = 0x1, unprogrammed default
 10595   300003                     	org	3145731
 10596   300003  FF                 	db	255
 10597                           
 10598                           ;Config register CONFIG3L @ 0x300004
 10599                           ;	WDT Period Select bits
 10600                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10601                           ;	WDT operating mode
 10602                           ;	WDTE = OFF, WDT Disabled
 10603   300004                     	org	3145732
 10604   300004  9F                 	db	159
 10605                           
 10606                           ;Config register CONFIG3H @ 0x300005
 10607                           ;	unspecified, using default values
 10608                           ;	WDT Window Select bits
 10609                           ;	WDTCWS = 0x7, unprogrammed default
 10610                           ;	WDT input clock selector
 10611                           ;	WDTCCS = 0x7, unprogrammed default
 10612   300005                     	org	3145733
 10613   300005  FF                 	db	255
 10614                           
 10615                           ;Config register CONFIG4L @ 0x300006
 10616                           ;	unspecified, using default values
 10617                           ;	Write Protection Block 0
 10618                           ;	WRT0 = 0x1, unprogrammed default
 10619                           ;	Write Protection Block 1
 10620                           ;	WRT1 = 0x1, unprogrammed default
 10621                           ;	Write Protection Block 2
 10622                           ;	WRT2 = 0x1, unprogrammed default
 10623                           ;	Write Protection Block 3
 10624                           ;	WRT3 = 0x1, unprogrammed default
 10625                           ;	Write Protection Block 3
 10626                           ;	WRT4 = 0x1, unprogrammed default
 10627                           ;	Write Protection Block 3
 10628                           ;	WRT5 = 0x1, unprogrammed default
 10629                           ;	Write Protection Block 3
 10630                           ;	WRT6 = 0x1, unprogrammed default
 10631                           ;	Write Protection Block 3
 10632                           ;	WRT7 = 0x1, unprogrammed default
 10633   300006                     	org	3145734
 10634   300006  FF                 	db	255
 10635                           
 10636                           ;Config register CONFIG4H @ 0x300007
 10637                           ;	unspecified, using default values
 10638                           ;	Configuration Register Write Protection bit
 10639                           ;	WRTC = 0x1, unprogrammed default
 10640                           ;	Boot Block Write Protection bit
 10641                           ;	WRTB = 0x1, unprogrammed default
 10642                           ;	Data EEPROM Write Protection bit
 10643                           ;	WRTD = 0x1, unprogrammed default
 10644                           ;	Scanner Enable bit
 10645                           ;	SCANE = 0x1, unprogrammed default
 10646                           ;	Low Voltage Programming Enable bit
 10647                           ;	LVP = 0x1, unprogrammed default
 10648   300007                     	org	3145735
 10649   300007  FF                 	db	255
 10650                           
 10651                           ;Config register CONFIG5L @ 0x300008
 10652                           ;	unspecified, using default values
 10653                           ;	UserNVM Program Memory Code Protection bit
 10654                           ;	CP = 0x1, unprogrammed default
 10655                           ;	DataNVM Memory Code Protection bit
 10656                           ;	CPD = 0x1, unprogrammed default
 10657   300008                     	org	3145736
 10658   300008  FF                 	db	255
 10659                           
 10660                           ;Config register CONFIG5H @ 0x300009
 10661                           ;	unspecified, using default values
 10662   300009                     	org	3145737
 10663   300009  FF                 	db	255
 10664                           
 10665                           ;Config register CONFIG6L @ 0x30000A
 10666                           ;	unspecified, using default values
 10667                           ;	Table Read Protection Block 0
 10668                           ;	EBTR0 = 0x1, unprogrammed default
 10669                           ;	Table Read Protection Block 1
 10670                           ;	EBTR1 = 0x1, unprogrammed default
 10671                           ;	Table Read Protection Block 2
 10672                           ;	EBTR2 = 0x1, unprogrammed default
 10673                           ;	Table Read Protection Block 3
 10674                           ;	EBTR3 = 0x1, unprogrammed default
 10675                           ;	Table Read Protection Block 4
 10676                           ;	EBTR4 = 0x1, unprogrammed default
 10677                           ;	Table Read Protection Block 5
 10678                           ;	EBTR5 = 0x1, unprogrammed default
 10679                           ;	Table Read Protection Block 6
 10680                           ;	EBTR6 = 0x1, unprogrammed default
 10681                           ;	Table Read Protection Block 7
 10682                           ;	EBTR7 = 0x1, unprogrammed default
 10683   30000A                     	org	3145738
 10684   30000A  FF                 	db	255
 10685                           
 10686                           ;Config register CONFIG6H @ 0x30000B
 10687                           ;	unspecified, using default values
 10688                           ;	Boot Block Table Read Protection bit
 10689                           ;	EBTRB = 0x1, unprogrammed default
 10690   30000B                     	org	3145739
 10691   30000B  FF                 	db	255
 10692                           tosu	equ	0xFFF
 10693                           tosh	equ	0xFFE
 10694                           tosl	equ	0xFFD
 10695                           stkptr	equ	0xFFC
 10696                           pclatu	equ	0xFFB
 10697                           pclath	equ	0xFFA
 10698                           pcl	equ	0xFF9
 10699                           tblptru	equ	0xFF8
 10700                           tblptrh	equ	0xFF7
 10701                           tblptrl	equ	0xFF6
 10702                           tablat	equ	0xFF5
 10703                           prodh	equ	0xFF4
 10704                           prodl	equ	0xFF3
 10705                           indf0	equ	0xFEF
 10706                           postinc0	equ	0xFEE
 10707                           postdec0	equ	0xFED
 10708                           preinc0	equ	0xFEC
 10709                           plusw0	equ	0xFEB
 10710                           fsr0h	equ	0xFEA
 10711                           fsr0l	equ	0xFE9
 10712                           wreg	equ	0xFE8
 10713                           indf1	equ	0xFE7
 10714                           postinc1	equ	0xFE6
 10715                           postdec1	equ	0xFE5
 10716                           preinc1	equ	0xFE4
 10717                           plusw1	equ	0xFE3
 10718                           fsr1h	equ	0xFE2
 10719                           fsr1l	equ	0xFE1
 10720                           bsr	equ	0xFE0
 10721                           indf2	equ	0xFDF
 10722                           postinc2	equ	0xFDE
 10723                           postdec2	equ	0xFDD
 10724                           preinc2	equ	0xFDC
 10725                           plusw2	equ	0xFDB
 10726                           fsr2h	equ	0xFDA
 10727                           fsr2l	equ	0xFD9
 10728                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    0
    Data        11
    BSS         178
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     44     153
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_11(CODE[43]), STR_10(CODE[43]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2846$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2846$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    White@timerMemory	PTR volatile float  size(2) Largest target is 80
		 -> timerMemory(BANK1[80]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK0[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RAMback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    RAMback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    Colour2Action@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    Hue2Colour@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[6]), STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    colour_read_all@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> colorrel(BANK0[12]), 

    colour_read_all@cf	PTR struct RGBC size(2) Largest target is 22
		 -> colorf(BANK0[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S312DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S312DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_Colour2Action
    _memoryUpdateTime->___fladd
    _colour_read_all->___fldiv
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _Hue2Colour->___flge
    _Colour2Action->_White
    _White->___flge
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    _fullSpeedAhead->_setMotorPWM
    ___flge->___fladd
    ___fladd->_getTimerValue
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _RAMback->_fullSpeedReverse
    _Pink_rev1_L90->_reverseHalfSquare
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colour_read_all
    _colour_read_all->___fldiv
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  478838
                                             41 BANK0      3     3      0
                         _ClickLEDOn
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                            _RGB2Hue
                        _Timer0_init
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                     8     4      4    7395
                                             74 COMRAM     8     4      4
                            ___fladd
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     28    24      4    7655
                                             13 BANK0     28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   18441
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     863
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3629
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           6     2      4    4027
                                             86 COMRAM     6     2      4
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  430433
                                             90 COMRAM     4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               20    10     10  238071
                                             86 COMRAM     4     4      0
                                              0 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _RAMback
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fladd
                             ___flge
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4148
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1406
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2718
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    2615
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    3142
                                             74 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3028
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   30751
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27788
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _RAMback                                              6     2      4    7792
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   30751
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                   _fullSpeedReverse
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27876
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27876
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27788
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9052
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19280
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10292
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9660
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2507
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8552
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4285
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2919
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2133
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedReverse
       _reverseHalfSquare
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _RAMback
         _fullSpeedReverse
         _stop
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedReverse
         _reverseHalfSquare
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___xxtofl (ARG)
         _getTimerValue (ARG)
           ___flmul
           ___xxtofl
       ___flge
         ___fladd (ARG)
       _fullSpeedAhead
         _setMotorPWM
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
     ___flge
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _Timer0_init
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___fladd
     ___fldiv
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllhh       52      0       0      42        0.0%
BITBIGSFRllhllh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRlllllh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllh      17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRlllllh      5      0       0      53        0.0%
BITBIGSFRhhlll       5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRlllllh      3      0       0      52        0.0%
BITBIGSFRllhlh       2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      51        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     147      62        0.0%
DATA                 0      0     147       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 21:01:01 2023

                    _color_read_Red 425E                        ___fldiv@aexp 00CE  
                      ___fldiv@bexp 00CD                        ___fldiv@sign 00C6  
                   _color_read_Blue 434E                                  l31 44AE  
                                l40 42FC                                  l34 45F0  
                                l43 439C                                  l52 44E2  
                                l37 42AC                                  l46 434C  
                   ??_getTimerValue 0037                 ___wmul@multiplicand 0003  
                    ?_rotate180left 0020                    _color_read_Clear 42FE  
                  _color_read_Green 42AE                   ??_Interrupts_init 0001  
                       Green_L90@mL 0021                         Green_L90@mR 0023  
                               l202 462C                                 l115 10C4  
                               l123 1590                                 l211 446E  
                               l205 4636                                 l109 2DEE  
                               l310 2FFC                                 l144 1A92  
                               l208 460A                                 l163 31B2  
                               l500 397A                                 l501 397C  
                               l190 453C                                 l511 3B5A  
                               l600 23F8                                 l521 3F18  
                               l193 453E                                 l506 3BF0  
                               l530 425C                                 l347 45D0  
                               l524 3D94                                 l516 3E98  
                               l196 4564                                 l533 3E18  
                               l527 3D0A                                 l543 4010  
                               l703 4616                                 l199 4640  
                               l712 458A                                 l640 4154  
                               l296 2E64                                 l553 382E  
                               l481 3C80                                 l538 3F94  
                               l386 45FE                                 l563 3A20  
                               l491 40F2                                 l548 420A  
                               l573 1FC2                                 l637 4512  
                               l558 38D6                                 l662 41B6  
                               l488 34D2                                 l568 3AC4  
                               l584 21F2                                 l576 21F2  
                               l656 45AE                                 l659 464A  
                               l971 3786                                 l982 36DC  
                               l977 3696              memoryUpdateMovement@cf 0001  
                               wreg 000FE8               ?_memoryUpdateMovement 0001  
                      ___flmul@aexp 002B                        ___flmul@bexp 002C  
                      ___flmul@sign 0026                        ___flmul@temp 0031  
                      ___flmul@prod 002D                     __end_of_RGB2Hue 1592  
                      ___fltol@exp1 000A                                l1009 35D8  
                              l1210 4084                                l1203 407C  
                              l1240 1C82                                l3000 2462  
                              l1241 1C70                                l1305 2A64  
                              l1242 1C36                                l1330 2822  
                              l3010 2498                                l3002 2468  
                              l1307 2ADC                                l3100 27F8  
                              l3012 24A8                                l3004 2476  
                              l1308 2ACA                                l1333 26B4  
                              l3102 2806                                l3030 252A  
                              l3022 24F2                                l1326 24BE  
                              l3014 24AE                                l3006 2478  
                              l1343 27E4                                l1335 272C  
                              l3200 41B8                                l3104 2808  
                              l1336 271A                                l3040 2574  
                              l3032 2542                                l3024 24FE  
                              l3016 24CE                                l3008 2488  
                              l3120 3230                                l3112 31B6  
                              l4000 3036                                l1257 1D9C  
                              l1249 1F52                                l3202 41CA  
                              l3210 37C2                                l1266 1E6C  
                              l3106 280E                                l3050 25CA  
                              l3042 2584                                l3034 254E  
                              l3026 2508                                l3018 24DE  
                              l3130 328A                                l1370 3366  
                              l3114 31C6                                l4010 30C4  
                              l4002 3054                                l1282 442C  
                              l1267 1E5A                                l3204 41F6  
                              l3220 3842                                l3212 37DA  
                              l3300 1B00                                l3108 2812  
                              l3060 266E                                l3052 25E6  
                              l3044 2590                                l3036 255A  
                              l3028 251E                                l3140 32EE  
                              l3132 328C                                l3124 3244  
                              l3116 31D4                                l4020 314C  
                              l4012 30DC                                l4004 306C  
                              l4100 2E08                                l1381 32FE  
                              l3230 397E                                l3222 386A  
                              l3214 37EE                                l3206 3788  
                              l3310 1B2A                                l3302 1B12  
                              l3070 26C4                                l3062 267C  
                              l3054 25F2                                l3046 25A0  
                              l3038 2568                                l3150 3346  
                              l3142 330C                                l3134 3298  
                              l1374 32A2                                l3126 324C  
                              l3118 321A                                l4022 316C  
                              l4014 30FC                                l4006 308C  
                              l1294 2BBE                                l4030 45B0  
                              l4110 2E22                                l4102 2E08  
                              l1367 320A                                l3240 3A88  
                              l3232 3990                                l3224 3882  
                              l3208 379A                                l3216 3806  
                              l3400 1D00                                l3312 1B3A  
                              l3320 1B64                                l3304 1B14  
                              l3072 26D2                                l3064 269A  
                              l3056 260E                                l3048 25BA  
                              l3152 3354                                l3144 330E  
                              l3136 32D4                                l3128 3258  
                              l4024 3184                                l4016 3114  
                              l4008 30A4                                l1296 2A1E  
                              l3160 463C                                l4040 45CC  
                              l4032 45B4                                l4120 2E42  
                              l4112 2E2A                                l4104 2E14  
                              l3234 39E4                                l3226 3896  
                              l3218 3830                                l3242 4642  
                              l3410 1D6C                                l3402 1D0A  
                              l3330 1B9C                                l3322 1B74  
                              l3314 1B4A                                l3306 1B1A  
                              l3082 273C                                l3090 2784  
                              l3074 26D6                                l3066 26A4  
                              l3058 2638                                l3154 3356  
                              l3146 3312                                l3138 32E0  
                              l4026 3184                                l4018 3134  
                              l4050 4594                                l3162 4602  
                              l3170 4624                                l4042 45CE  
                              l4034 45BE                                l4130 2E60  
                              l4122 2E46                                l4114 2E32  
                              l4106 2E1A                                l1299 29E2  
                              l3236 3A22                                l3228 38AE  
                              l3412 1D7C                                l3404 1D10  
                              l3340 1BB0                                l3332 1BA0  
                              l3324 1B86                                l3316 1B5A  
                              l3308 1B28                                l3500 36DA  
                              l3260 3E7E                                l3252 3E42  
                              l3244 3E1A                                l3092 279E  
                              l3084 2748                                l3076 26E4  
                              l3068 26B2                                l3148 3336  
                              l4044 45F2                                l4052 459E  
                              l3164 4606                                l3180 4444  
                              l3172 4628                                l4060 3C02  
                              l4036 45C0                                l4140 2E9E  
                              l4132 2E72                                l4124 2E4E  
                              l4116 2E3A                                l4108 2E1E  
                              l3238 3A34                                l3270 40DE  
                              l3190 3F2C                                l3430 1DFE  
                              l3422 1DD6                                l3406 1D36  
                              l3414 1D8C                                l3350 1BC4  
                              l3342 1BB4                                l3334 1BA4  
                              l3326 1B94                                l3318 1B5C  
                              l3262 3E82                                l3254 3E56  
                              l3246 3E3A                                l3094 27B2  
                              l3086 2756                                l3078 2712  
                              l4046 460C                                l4054 45A0  
                              l3510 4526                                l3158 4638  
                              l3166 462E                                l3182 446A  
                              l3174 4430                                l4070 3C5C  
                              l4062 3C28                                l4038 45CA  
                              l4150 2F16                                l4142 2EB6  
                              l4134 2E8A                                l4126 2E56  
                              l4118 2E3E                                l3264 4086  
                              l3192 3F6C                                l3432 1E06  
                              l3424 1DE0                                l3416 1DB2  
                              l3408 1D6A                                l3440 1E2A  
                              l3360 1BD8                                l3352 1BC8  
                              l3344 1BB8                                l3336 1BA8  
                              l3328 1B98                                l3280 1A94  
                              l3256 3E62                                l3096 27CC  
                              l3088 2780                                l3272 4156  
                              l3600 2232                                l4056 45AC  
                              l4048 458C                                l3512 4528  
                              l3504 4514                                l3168 4632  
                              l3184 446C                                l3176 4434  
                              l3520 42A4                                l4080 3C7E  
                              l4072 3C66                                l4064 3C2C  
                              l4160 2F6E                                l4152 2F2E  
                              l4144 2ECA                                l4136 2E8E  
                              l4128 2E5E                                l3194 3F96  
                              l3266 409A                                l3450 1E7C  
                              l3442 1E2E                                l3434 1E0A  
                              l3426 1DEE                                l3418 1DC2  
                              l3370 1C50                                l3362 1C02  
                              l3354 1BCC                                l3346 1BBC  
                              l3338 1BAC                                l3290 1AD0  
                              l3282 1AA0                                l3258 3E6E  
                              l3098 27E8                                l3274 415C  
                              l3514 452A                                l3506 451E  
                              l3178 443C                                l3530 434E  
                              l4074 3C68                                l4066 3C50  
                              l4058 3BF2                                l4082 40F4  
                              l4162 2F7A                                l4146 2EFC  
                              l4154 2F42                                l4138 2E94  
                              l4090 2DF4                                l2820 403C  
                              l2812 4012                                l3196 3FA8  
                              l3268 40B2                                l3188 3F1A  
                              l3460 1EE2                                l3452 1E88  
                              l3444 1E3C                                l3436 1E1A  
                              l3428 1DF0                                l3380 1C90  
                              l3372 1C54                                l3364 1C1E  
                              l3356 1BD0                                l3348 1BC0  
                              l3292 1AE0                                l3284 1AAE  
                              l3276 416A                                l3612 2336  
                              l3604 2260                                l3700 29BE  
                              l3508 4524                                l3516 45D4  
                              l3532 4394                                l3524 42AE  
                              l4076 3C72                                l4068 3C5A  
                              l4084 412C                                l4172 2FCC  
                              l4164 2F8E                                l4156 2F54  
                              l4148 2F10                                l4092 2DF8  
                              l2830 4070                                l2822 404A  
                              l2814 401A                                l2806 4566  
                              l2910 3EFE                                l2902 3EC2  
                              l3198 3FE8                                l3470 1F2A  
                              l3462 1EF2                                l3454 1E96  
                              l3446 1E52                                l3438 1E1C  
                              l3390 1CD2                                l3382 1CA0  
                              l3374 1C62                                l3366 1C2E  
                              l3358 1BD4                                l3294 1AE2  
                              l3286 1AB0                                l3614 234A  
                              l3606 2274                                l3550 1FA0  
                              l3622 23B6                                l3542 1F54  
                              l3710 2A0C                                l3702 29D2  
                              l3630 2824                                l3526 42F4  
                              l3518 425E                                l4078 3C74  
                              l4086 44E4                                l4174 2FDE  
                              l4166 2FAA                                l4158 2F68  
                              l4094 2DFC                                l2832 4076  
                              l2824 4050                                l2816 402C  
                              l2808 4582                                l2840 33EC  
                              l2912 3F02                                l2904 3ED6  
                              l2920 3AFE                                l3472 1F2C  
                              l3464 1F12                                l3456 1ED0  
                              l3392 1CE0                                l3376 1C64  
                              l3368 1C44                                l3288 1AC0  
                              l3296 1AEA                                l3624 23CA  
                              l3616 2396                                l3608 22E8  
                              l3560 1FDC                                l3552 1FA8  
                              l3544 1F5A                                l3720 2A54  
                              l3712 2A1C                                l3704 29E0  
                              l3640 2862                                l3632 2832  
                              l3800 352A                                l3536 42FE  
                              l4176 2FE2                                l4168 2FB6  
                              l4096 2E00                                l4088 2DF0  
                              l2826 4066                                l2818 4034  
                              l2842 33F0                                l2834 3368  
                              l2906 3EE2                                l2850 38D8  
                              l2930 3B26                                l2914 3AC6  
                              l3474 1F32                                l3466 1F16  
                              l3458 1ED2                                l3394 1CEC  
                              l3386 1CB4                                l3378 1C6E  
                              l3298 1AFA                                l3490 3656  
                              l3482 35DA                                l3626 23DE  
                              l3618 23AA                                l3570 207C  
                              l3562 2002                                l3554 1FB0  
                              l3546 1F82                                l3730 2A94  
                              l3722 2A62                                l3714 2A2E  
                              l3706 29EC                                l3650 2892  
                              l3642 2872                                l3634 2840  
                              l3802 353A                                l3538 4344  
                              l4178 2FE8                                l4098 2E04  
                              l2828 406E                                l2844 3432  
                              l2836 3384                                l2908 3EEE  
                              l2860 3922                                l2852 38DE  
                              l2940 3D0E                                l2932 3B32  
                              l2916 3AE6                                l3476 1F40  
                              l3468 1F24                                l3396 1CF0  
                              l3388 1CC4                                l3492 3664  
                              l3484 3608                                l3628 23F6  
                              l3580 2138                                l3572 2094  
                              l3564 201A                                l3548 1F9A  
                              l3740 2B06                                l3732 2AC2  
                              l3716 2A44                                l3724 2A74  
                              l3708 2A0A                                l3660 28C8  
                              l3652 2898                                l3644 2874  
                              l3636 2842                                l3812 3564  
                              l3804 353E                                l3900 109A  
                              l2846 344E                                l2838 33D8  
                              l2862 392E                                l2854 38F6  
                              l2870 3B5C                                l2950 3D92  
                              l2942 3D22                                l2934 3B40  
                              l2926 3B06                                l2918 3AF2  
                              l3478 1F42                                l3398 1CFE  
                              l3494 3676                                l3486 3618  
                              l3590 21DA                                l3582 215E  
                              l3574 20BA                                l3566 203E  
                              l3558 1FC4                                l3750 2B7E  
                              l3742 2B30                                l3726 2A82  
                              l3718 2A4A                                l3670 2908  
                              l3662 28D8                                l3654 28A6  
                              l3638 2852                                l3646 287C  
                              l3830 35C8                                l3822 358C  
                              l3814 356E                                l3806 354C  
                              l3910 128E                                l3902 110C  
                              l2848 3492                                l2864 393A  
                              l2856 3900                                l2872 3B7C  
                              l2944 3D3A                                l2936 3B44  
                              l2928 3B1A                                l2960 3C98  
                              l3496 3684                                l3488 3646  
                              l3592 2206                                l3584 2176  
                              l3576 20E6                                l3568 2056  
                              l3760 2BB4                                l3752 2B9A  
                              l3736 2AEC                                l3744 2B34  
                              l3728 2A86                                l3672 2918  
                              l3680 2938                                l3664 28DA  
                              l3656 28A8                                l3648 288C  
                              l3824 3598                                l3816 3578  
                              l3912 12DA                                l3920 1526  
                              l3904 1154                                l2952 453E  
                              l3840 448E                                l2858 3918  
                              l2866 394A                                l2890 3BD6  
                              l2882 3B9C                                l2874 3B88  
                              l2946 3D66                                l2938 3D0C  
                              l2970 420C                                l2962 3CB0  
                              l3498 36D4                                l3594 2208  
                              l3586 219C                                l3578 210C  
                              l3930 1616                                l3754 2B9E  
                              l3746 2B4E                                l3738 2AF8  
                              l3690 2976                                l3682 2948  
                              l3674 2920                                l3658 28B8  
                              l3666 28E2                                l3770 43F8  
                              l3826 35A8                                l3922 1542  
                              l3914 1398                                l3906 1178  
                              l2954 454E                                l3850 44A8  
                              l3842 4498                                l3834 4470  
                              l3860 44CC                                l2868 3962  
                              l2980 3E00                                l2972 3D96  
                              l2892 3BDA                                l2884 3BB0  
                              l2876 3B94                                l2948 3D7A  
                              l2964 3CDC                                l2956 3C82  
                              l3596 221A                                l3588 21B4  
                              l3940 16F0                                l3932 1654  
                              l3924 1592                                l3756 2BAC  
                              l3748 2B64                                l3692 2986  
                              l3684 2948                                l3676 2924  
                              l3668 28F2                                l3780 374A  
                              l3828 35B8                                l3916 1402  
                              l3908 1246                                l3852 44AA  
                              l3844 44A2                                l3836 4474  
                              l3862 44DC                                l2894 3E9A  
                              l2974 3DAA                                l2886 3BBC  
                              l2966 3CF0                                l2958 3C84  
                              l2990 2426                                l2982 23FA  
                              l3598 221E                                l3950 17CA  
                              l3942 172E                                l3934 1692  
                              l3926 159A                                l3758 2BB2  
                              l3694 2996                                l3782 375A  
                              l3774 36DE                                l3790 34D4  
                              l3918 14C0                                l3854 44AC  
                              l3846 44A4                                l3838 447E  
                              l3870 2CF6                                l3856 44B2  
                              l2896 3EBA                                l2976 3DC2  
                              l2888 3BC8                                l2968 3D08  
                              l2992 2436                                l2984 2406  
                              l3960 186E                                l3952 17D2  
                              l3944 1736                                l3936 169A  
                              l3928 15D8                                l3696 29A6  
                              l3688 295C                                l3784 377E  
                              l3776 370C                                l3768 43E8  
                              l3792 34EA                                l3880 0E66  
                              l3848 44A6                                l3872 2D12  
                              l3864 2BC0                                l3858 44C2  
                              l2978 3DEC                                l2994 2446  
                              l2986 2414                                l3970 1948  
                              l3962 1886                                l3954 17EA  
                              l3946 174E                                l3938 16B2  
                              l3698 29AE                                l3786 3784  
                              l3778 371C                                l3890 0F68  
                              l3882 0EAE                                l3874 2D2E  
                              l3866 2CC0                                l2996 244C  
                              l2988 2416                                l3980 19FC  
                              l3972 1960                                l3964 18C4  
                              l3956 1828                                l3948 178C  
                              l3796 34FE                                l3892 0FB0  
                              l3884 0EF6                                l3876 2D6A  
                              l3868 2CD8                                l2998 245C  
                              l3982 1A36                                l3990 1A76  
                              l3974 1968                                l3966 1902  
                              l3958 1866                                l3798 3528  
                              l3894 0FD8                                l3886 0F18  
                              l3878 2DAC                                l3984 1A3E  
                              l3968 1940                                l3976 1980  
                              l3992 1A8A                                l3896 1020  
                              l3888 0F22                                l3986 1A56  
                              l3978 19BE                                l3898 106C  
                              l3996 3000                                l3988 1A5E  
                              l3998 301E                                STR_1 0E2B  
                              STR_2 0E60                                STR_3 0E5B  
                              STR_4 0E37                                STR_5 0E41  
                              STR_6 0E2C                                STR_7 0E55  
                              STR_8 0E48                                STR_9 0E4F  
                              u2000 3BF0                                u2001 3BEC  
                              u2010 3F18                                u2011 3F14  
                              u2020 3B5A                                u2100 2498  
                              u2021 3B56                                u2101 2494  
                              u2110 24CE                                u2030 454E  
                              u2111 24CA                                u2031 454A  
                              u2200 2756                                u2120 24DE  
                              u3000 2396                                u2040 4564  
                              u2201 2752                                u2121 24DA  
                              u3001 2392                                u2041 4560  
                              u2210 279E                                u2130 2658  
                              u2050 2414                                u3010 23CA  
                              u2211 279A                                u2051 2410  
                              u3011 23C6                                u2220 27CC  
                              u2140 26B2                                u2060 2426  
                              u2300 32FE                                u3100 29BE  
                              u3020 2840                                u2221 27C8  
                              u2141 26AE                                u2061 2422  
                              u2301 32FA                                u3101 29BA  
                              u3021 283C                                u2230 2806  
                              u2150 26D2                                u2070 2436  
                              u2310 330C                                u3110 29E0  
                              u3030 2852                                u2231 2802  
                              u2151 26CE                                u2135 264E  
                              u2071 2432                                u2311 3308  
                              u3111 29DC                                u3031 284E  
                              u2400 3842                                u2160 26E4  
                              u2080 2476                                u2320 3346  
                              u2240 31C6                                u3200 2AEC  
                              u3120 2A0A                                u3040 2862  
                      _BAUD4CONbits 000EE9                                u2401 383E  
                              u2161 26E0                                u2081 2472  
                              u2321 3342                                u2241 31C2  
                              u3201 2AE8                                u3121 2A06  
                              u3041 285E                                u2410 3990  
                              u2170 2712                                u2090 2488  
                              u2330 3354                                u2250 31D4  
                              u3210 2B06                                u3130 2A2E  
                              u3050 28A6                                u2411 398C  
                              u2171 270E                                u2091 2484  
                              u2331 3350                                u2251 31D0  
                              u3211 2B02                                u3131 2A2A  
                              u3051 28A2                                u2420 3A34  
                              u2500 1B4A                                u2180 2728  
                              u2260 3230                                u3220 2B4E  
                              u3140 2A44                                u3060 28B8  
                              u3300 354C                                u2340 4458  
                              u2421 3A30                                u2501 1B46  
                              u2181 2724                                u2261 322C  
                              u3221 2B4A                                u3141 2A40  
                              u3061 28B4                                u3301 3548  
                              u2341 4450                                u2510 1B86  
                              u2430 3E98                                u2190 273C  
                              u2270 3286                                u3230 2B7E  
                              u3150 2A62                                u3070 28C8  
                              u3310 3560                                u4007 3940  
                              u2511 1B82                                u2431 3E94  
                              u2191 2738                                u2271 3282  
                              u3231 2B7A                                u3151 2A5E  
                              u3071 28C4                                u3311 355C  
                              u2360 3F2C                                u2600 1CA0  
                              u2520 1B94                                u2440 1AAE  
                              u2280 32D0                                u3240 2BAC  
                              u3160 2A82                                u3080 2908  
                              u3320 3588                                u3400 0FB0  
                              u4017 3EF4                                u2361 3F28  
                              u2601 1C9C                                u2521 1B90  
                              u2441 1AAA                                u2281 32CC  
                              u3241 2BA8                                u3161 2A7E  
                              u3081 2904                                u3321 3584  
                              u3401 0FAC                                u2370 3FA8  
                              u2610 1CD2                                u2530 1C02  
                              u2450 1AC0                                u2290 32EE  
                              u3170 2A94                                u3090 2948  
                              u3250 370C                                u3330 35A8  
                              u3410 1020                                _T2PR 000FBC  
                              u2371 3FA4                                u2611 1CCE  
                              u2531 1BFE                                u2451 1ABC  
                              u2291 32EA                                u3171 2A90  
                              u3091 2944                                u3251 3708  
                              u3331 35A4                                u3411 101C  
                              u2380 41CA                                u2700 1E1A  
                              u2620 1CE0                                u2540 1C1A  
                              u2460 1AD0                                u3500 1654  
                              u3180 2AC2                                u3260 374A  
                              u3340 35B8                                u3420 106C  
                              u2381 41C6                                u2701 1E16  
                              u2621 1CDC                                u2541 1C14  
                              u2461 1ACC                                u3501 1650  
                              u3181 2ABE                                u3261 3746  
                              u3341 35B4                                u3421 1068  
                              u3350 44C2                                u1910 402C  
                              u2390 379A                                u2710 1E2A  
                              u2630 1CFE                                u2550 1C1C  
                              u2470 1B12                                u3510 1692  
                              u3190 2AD8                                u3270 377E  
                              u3430 110C                                u2358 445A  
                              u3351 44BE                                u1911 4028  
                              u2391 3796                                u2711 1E26  
                              u2631 1CFA                                u2471 1B0E  
                              u3511 168E                                u3191 2AD4  
                              u3271 377A                                u3431 1108  
                              u3360 44DC                                u1920 404A  
                              u2800 1F12                                u2720 1E3C  
                              u2640 1D36                                u2560 1C44  
                              u2480 1B28                                u3600 1940  
                              u3520 16F0                                u3280 34EA  
                              u3440 1154                                u3361 44D8  
                              u1921 4046                                u2801 1F0E  
                              u2721 1E38                                u2641 1D32  
                              u2561 1C40                                u2481 1B24  
                              u3601 193C                                u3521 16EC  
                              u3281 34E6                                u3441 1150  
                              u1930 4066                                u2810 1F24  
                              u2730 1E52                                u2650 1D7C  
                              u2570 1C62                                u2490 1B3A  
                              u3610 19BE                                u3530 172E  
                              u3290 351E                                u3450 128E  
                              u3370 0EAE                                u1931 4062  
                              u2811 1F20                                u2731 1E4E  
                              u2651 1D78                                u2571 1C5E  
                              u2491 1B36                                u3611 19BA  
                              u3531 172A                                u3451 128A  
                              u3371 0EAA                                u1940 3384  
                              u2820 1F40                                u2740 1E68  
                              u2660 1DB2                                u2580 1C82  
                              u2900 203E                                u3700 316C  
                              u3620 19FC                                u3540 178C  
                              u3460 12DA                                u3380 0EF6  
                              u1941 3380                                u2821 1F3C  
                              u2741 1E64                                u2661 1DAE  
                              u2581 1C7E                                u2901 203A  
                              u3701 3168                                u3621 19F8  
                              u3541 1788                                u3461 12D6  
                              u3381 0EF2                                u1950 344E  
                              u2750 1E7C                                u2670 1DC2  
                              u2590 1C90                                u2830 3608  
                              u2910 207C                                u3630 1A36  
                              u3550 17CA                                u3470 1542  
                              u3390 0F68                                u3710 2E72  
                              u1951 344A                                u2751 1E78  
                              u2671 1DBE                                u2591 1C8C  
                              u2831 3604                                u2911 2078  
                              u3631 1A32                                u3551 17C6  
                              u3295 3514                                u3471 153E  
                              u3391 0F64                                u3711 2E6E  
                              u1960 38F6                                u2760 1E96  
                              u2680 1DEE                                u2840 3646  
                              u2920 20BA                                u3640 301E  
                              u3560 1828                                u3480 15D8  
                              u3720 2EFC                                u1961 38F2  
                              u2761 1E92                                u2681 1DEA  
                              u2841 3642                                u2921 20B6  
                              u3641 301A                                u3561 1824  
                              u3481 15D4                                u3721 2EF8  
                              u1970 3918                                u2770 1ED0  
                              u2690 1DFE                                u2850 3664  
                              u2930 210C                                u3650 3054  
                              u3570 1866                                u3490 1616  
                              u3730 2F54                                u1971 3914  
                              u2771 1ECC                                u2691 1DFA  
                              u2851 3660                                u2931 2108  
                              u3651 3050                                u3571 1862  
                              u3491 1612                                u3731 2F50  
                              u1980 3962                                u2780 1EE2  
                              u2860 3684                                u2940 215E  
                              u3660 308C                                u3580 18C4  
                              u3740 2FCC                                u1981 395E  
                              u2781 1EDE                                u2861 3680  
                              u2941 215A                                u3661 3088  
                              u3581 18C0                                u3741 2FC8  
                              u1990 397A                                u2790 1EF2  
                              u2870 36D4                                u2950 219C  
                              u3670 30C4                                u3590 1902  
                              u3750 2FDE                                u1991 3976  
                              u2791 1EEE                                u2871 36D0  
                              u2951 2198                                u3671 30C0  
                              u3591 18FE                                u3807 4484  
                              u3751 2FDA                                u2960 21DA  
                              u2880 1FBE                                u3680 30FC  
                              u3760 2FFC                                u2961 21D6  
                              u2881 1FBA                                u3817 1F8C  
                              u3681 30F8                                u3761 2FF8  
                              u2970 225C                                u2890 2002  
                              u3690 3134                                u3907 3CCE  
                              u2971 2258                                u2891 1FFE  
                              u3827 1FCE                                u3691 3130  
                              u2980 22E4                                u3917 3CFA  
                              u3837 23E8                                u2981 22E0  
                              u2990 2332                                u3927 3B34  
                              u3847 3E74                                u2991 232E  
                              u3937 3D2C                                u3857 37CC  
                              u3947 3D58                                u3867 40A4  
                              u3787 2E7E                                u3957 3D84  
                              u3877 40D0                                u3797 2F22  
                              u3967 3BCA                                u3887 3874  
                              u3977 3DB4                                u3897 3CA2  
                              u3987 3DE0                                u3997 3E0A  
               reverseHalfSquare@mL 001B                     __end_of_RAMback 40F4  
               reverseHalfSquare@mR 001D                                _main 2DF0  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              btemp 005F                                _stop 38D8  
                        _ClickLEDOn 44B0            memoryUpdateTime@timerVal 004F  
                              prodh 000FF4                                prodl 000FF3  
                              start 002C                     ___fldiv@new_exp 00C7  
           __end_of_Yellow_rev1_R90 3830       memoryUpdateTime@movementCount 004B  
            __end_of_color_read_Red 42AE                     __end_of_HighISR 002C  
                      ___param_bank 000000                     __end_of_Red_R90 3F96  
                        _Hue2Colour 1592                     __end_of_Right45 3D0C  
                  __end_of_LED_init 4600                       ___fltol@sign1 0009  
                   __end_of___fladd 1F54                               ?_main 0001  
                   __end_of___fldiv 2BC0                               STR_10 0E01  
                   __end_of___flmul 2824                     __end_of___flsub 442E  
                   __end_of___fltol 35DA                      _LightBlue_L135 3A22  
                             ?_stop 0014                     __end_of___lwdiv 4086  
                             i2l709 0028                               _TMR0H 000FD4  
                             _TMR0L 000FD3          __end_of_I2C_2_Master_Start 4642  
                             _White 1F54          __end_of_I2C_2_Master_Write 460C  
                 fullSpeedReverse@i 0019                               tablat 000FF5  
                             plusw2 000FDB                               ttemp5 0060  
                             ttemp6 0063                               ttemp7 0067  
                             status 000FD8                               wtemp8 0060  
                  _memoryUpdateTime 40F4             __end_of_color_read_Blue 439E  
             _I2C_2_Master_RepStart 4624                     ?_color_read_Red 0005  
                   __initialization 439E                        __end_of_main 3000  
                      __end_of_stop 397E                     ??_rotate180left 0024  
            __end_of_LightBlue_L135 3AC6                              ??_main 00EB  
                            ??_stop 0018                       __activetblptr 000001  
            ??_memoryUpdateMovement 0007                           ??_RGB2Hue 00D1  
                     ??_Orange_R135 0025                              ?_White 00C2  
                         ??_RAMback 001F                        ?_setMotorPWM 000E  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                   _colour_read_all 2BC0                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RC7PPS 000E69                              _RD5PPS 000E6F  
                            _RE4PPS 000E76                              _RD6PPS 000E70  
                            i2l4190 000A                              i2l4192 001A  
                            i2l4194 0024                              _RG6PPS 000E88  
                         ??_HighISR 0001            __end_of_color_click_init 44B0  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                       ?_ClickLEDOn 0001                    __end_of___xxtofl 3368  
                         ??_Red_R90 0025                              _Left45 3D0C  
                         ??_Right45 001E                    _fullSpeedReverse 3E9A  
                  ?_Yellow_rev1_R90 0021                       ??_Timer0_init 0001  
                      _CCPTMRS0bits 000FAD                              White@i 00D0  
                            ___flge 35DA                              ___fleq 36DE  
                         ??___fladd 0043                         ?_Hue2Colour 0057  
                            ___wmul 4566                           ??___fldiv 005B  
                     Orange_R135@mL 0021                           ??___flmul 0022  
                     Orange_R135@mR 0023                           ??___flsub 0053  
                         ??___fltol 0005                           ??___lwdiv 000B  
                        _TimerReset 4642                              _colorf 008E  
                   ?_LightBlue_L135 0021                              clear_0 43C4  
                            clear_1 43D0                  fullSpeedReverse@mL 0014  
                fullSpeedReverse@mR 0016                              _motorL 00B9  
                            _motorR 00B0                              isa$std 000001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
 memoryUpdateMovement@movementCount 0003                              stop@mL 0014  
                            stop@mR 0016                   ??_initDCmotorsPWM 0003  
                  __end_of_turnLeft 3BF2                          ___flge@ff1 004B  
                        ___flge@ff2 004F                        ___xxtofl@arg 0016  
                      ___xxtofl@exp 0015                        ___xxtofl@val 000C  
                        ___fleq@ff1 0001                          ___fleq@ff2 0005  
               __end_of_Orange_R135 3A22                          __accesstop 0060  
           __end_of__initialization 43D6            __end_of_color_read_Clear 434E  
                   fullSpeedAhead@i 0019                   __end_of_Blue_T180 420C  
          __end_of_color_read_Green 42FE              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                           ?_LED_init 0001  
                        ___fltol@f1 0001                    ?_color_read_Blue 0005  
                   _Interrupts_init 460C                      __pcstackCOMRAM 0001  
                     __end_of_White 23FA                        __pidataBANK0 4618  
                 __end_of_Green_L90 4012                           RGB2Hue@cf 00CF  
               __end_of_Timer0_init 45B0                         _ForwardFlag 00F8  
           __end_of_colour_read_all 2DF0                             ??_White 0057  
                        __pbssBANK0 0060                          __pbssBANK1 0100  
                        ??_LED_init 0001                             ?_Left45 001A  
                 _color_writetoaddr 45D2                        _T2CLKCONbits 000FBF  
             __end_of_Colour2Action 31B4                             ?___flge 004B  
                           ?___fleq 0001                  ?_color_writetoaddr 0003  
                         RAMback@mL 001B                           RAMback@mR 001D  
                           ?___wmul 0001                         ?_TimerReset 0001  
               ??_color_writetoaddr 0004               __end_of_getTimerValue 41B8  
          __end_of_memoryUpdateTime 4156                             _RGB2Hue 0E66  
                         ?___xxtofl 000C                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                         _Orange_R135 397E  
                           _RAMback 4086                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5             __end_of_Interrupts_init 4618  
            color_writetoaddr@value 0003                    ??_color_read_Red 0007  
                           _HighISR 0008           __end_of_color_writetoaddr 45F2  
                           _Red_R90 3F1A                  _I2C_2_Master_Start 4638  
                        _initUSART4 45B0                  _I2C_2_Master_Write 4600  
                           _Right45 3C82                             __Hparam 0000  
                           __Lparam 0000                   color_read_Red@tmp 000A  
                       _Timer0_init 458C                             White@mL 00C2  
                           White@mR 00C4                             ___fladd 1A94  
                           ___fldiv 2824                             ___flmul 23FA  
                           ___flsub 43E8                             ___fltol 34D4  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 4012  
               ?_I2C_2_Master_Write 0001                        __psmallconst 0E00  
                           __pcinit 439E                             __ramtop 0E00  
                         ?_turnLeft 0014                             __ptext0 2DF0  
                           __ptext1 40F4                             __ptext2 44E4  
                           __ptext3 45B0                             __ptext4 3BF2  
                           __ptext5 2BC0                             __ptext6 425E  
                           __ptext7 42AE                             __ptext8 42FE  
                           __ptext9 434E                             _maxTime 0064  
                         _T2CONbits 000FBD                    ?_colour_read_all 00CF  
                        ??___xxtofl 0010            __end_of_fullSpeedReverse 3F1A  
                         _T2HLTbits 000FBE                  colour_read_all@rel 00D1  
                     Hue2Colour@rel 0059                ??_I2C_2_Master_Start 0002  
              ??_I2C_2_Master_Write 0002                end_of_initialization 43D6  
    memoryUpdateMovement@colourcode 0007                       _Pink_rev1_L90 3830  
                      ??_ClickLEDOn 0001                   ?_color_click_init 0001  
                    __45drightdelay 00F4                  ??_color_click_init 0005  
                  ??_LightBlue_L135 0025                   _reverseHalfSquare 3D96  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Hue2Colour 005B                             postinc0 000FEE  
                           postinc2 000FDE  memoryUpdateMovement@movementMemory 0005  
                ?_reverseHalfSquare 001B               __end_of_rotate180left 425E  
                   _initDCmotorsPWM 3BF2                          ??_turnLeft 0018  
                  White@timerMemory 00CA                           _PORTFbits 000F8E  
                setMotorPWM@negDuty 0013                   __end_of_turnRight 3B5C  
                       ___fladd@grs 004A                 ??_reverseHalfSquare 001F  
                __end_of_ClickLEDOn 44E4                       ___xxtofl@sign 0014  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0012  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 00C9                         ___fldiv@rem 00C2  
                  fullSpeedAhead@mL 0014                    fullSpeedAhead@mR 0016  
          color_writetoaddr@address 0004                           Red_R90@mL 0021  
                         Red_R90@mR 0023             ??_I2C_2_Master_RepStart 0002  
                    _movementMemory 0066                  __end_of_Hue2Colour 1A94  
                    ?_Pink_rev1_L90 0021                    ?_Interrupts_init 0001  
                       ___flmul@grs 0027                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0005                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0005                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
                   Colour2Action@cf 005B           __end_of_reverseHalfSquare 3E1A  
                ??_color_read_Clear 0007                  ??_color_read_Green 0007  
                         _Blue_T180 41B8                      __end_of_Left45 3D96  
                      _RGB2Hue$3104 00D5                      __end_of___flge 36DE  
                    __end_of___fleq 3788                      _fullSpeedAhead 3E1A  
                    __end_of___wmul 458C                           _Green_L90 3F96  
                         Right45@mL 001A                           Right45@mR 001C  
              _colour_read_all$3103 00D7                          RGB2Hue@max 00D9  
                        RGB2Hue@min 00DB                 color_read_Clear@tmp 000A  
               start_initialization 439E                         __halfsquare 00F0  
                          ??_Left45 001E                 color_read_Green@tmp 000A  
                        ?_Blue_T180 0024             __end_of_initDCmotorsPWM 3C82  
            __end_of_fullSpeedAhead 3E9A                            ??___flge 0053  
                          ??___fleq 0009                            ??___wmul 0005  
                      ??_TimerReset 0001                         __pdataBANK0 00EE  
                         ___fladd@a 003F                           ___fladd@b 003B  
                   ClickLEDOn@power 0001                          ?_Green_L90 0021  
                         ___fldiv@a 0057                           ___fldiv@b 0053  
                 ?_memoryUpdateTime 004B                            ?_RGB2Hue 00CF  
                         ___flmul@a 001E                           ___flmul@b 001A  
                         ___flsub@a 004F                           ___flsub@b 004B  
                     __pcstackBANK0 00C2                        ?_Orange_R135 0021  
                ??_memoryUpdateTime 004F                            ?_RAMback 001B  
                   ??_Pink_rev1_L90 0025                            ?_HighISR 0001  
                __end_of_TimerReset 464C                            ?_Red_R90 0021  
                          ?_Right45 001A                    ___lwdiv@dividend 0007  
                      ?_Timer0_init 0001                     ?_fullSpeedAhead 0014  
                         __pintcode 0008                            ?___fladd 003B  
                          ?___fldiv 0053                            ?___flmul 001A  
                          ?___flsub 004B                            ?___fltol 0001  
                          ?___lwdiv 0007                I2C_2_Master_Read@ack 0003  
              I2C_2_Master_Read@tmp 0004                     Pink_rev1_L90@mL 0021  
                   Pink_rev1_L90@mR 0023                         __smallconst 0E00  
                 _I2C_2_Master_Idle 453E                   _I2C_2_Master_Init 4514  
                 _I2C_2_Master_Read 442E                       __45dleftdelay 00F6  
                 _I2C_2_Master_Stop 462E                   ?_fullSpeedReverse 0014  
                 ??_Yellow_rev1_R90 0025                  ?_I2C_2_Master_Idle 0001  
                   rotate180left@mL 0020                     rotate180left@mR 0022  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0010                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000B                 White@movementMemory 00C8  
          initDCmotorsPWM@PWMperiod 0001                  ??_fullSpeedReverse 0018  
              Hue2Colour@colourname 005B                   colour_read_all@cf 00CF  
                      Hue2Colour@cf 0057                 ??_I2C_2_Master_Idle 0001  
               ??_I2C_2_Master_Init 0001                 ??_I2C_2_Master_Read 0002  
                    ___wmul@product 0005                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0002                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _PIE0bits 000E29  
                          _LED_init 45F2                            _PIE4bits 000E2D  
                       turnRight@mL 0014                         turnRight@mR 0016  
                          _PIR0bits 000E33                         ??_Blue_T180 0028  
                          _PIR4bits 000E37                            i2u377_40 001A  
                          i2u377_41 0016                    ?_initDCmotorsPWM 0001  
                          Left45@mL 001A                            Left45@mR 001C  
              colour_read_all@total 00E7                            _SSP2CON2 000EDA  
                          _SSP2STAT 000ED8           __end_of_I2C_2_Master_Idle 4566  
         __end_of_I2C_2_Master_Init 453E           __end_of_I2C_2_Master_Read 4470  
                 ___wmul@multiplier 0001           __end_of_I2C_2_Master_Stop 4638  
                     _movementCount 0062                         ??_Green_L90 0025  
                      setMotorPWM@m 000E         I2C_2_Master_Write@data_byte 0002  
                 ??_color_read_Blue 0007                           _turnRight 3AC6  
                     _retracingDone 0060                            __1square 00F2  
                         copy_data0 43B2       __end_of_I2C_2_Master_RepStart 462E  
                color_read_Blue@tmp 000A                 __end_of_setMotorPWM 34D4  
                      ??_initUSART4 0001                            __Hrparam 0000  
      __end_of_memoryUpdateMovement 4514                            __Lrparam 0000  
                      __Lsmallconst 0E00                       _Colour2Action 3000  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                     _getTimerValue 4156                         Blue_T180@mL 0024  
                       Blue_T180@mR 0026                            ___xxtofl 31B4  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                   ___lwdiv@divisor 0009                  __end_of_initUSART4 45D2  
                   ___lwdiv@counter 000D                          ?_turnRight 0014  
                          __ptext10 4624                            __ptext11 442E  
                          __ptext20 0E66                            __ptext12 4470  
                          __ptext21 34D4                            __ptext13 45D2  
                          __ptext30 4156                            __ptext22 43E8  
                          __ptext14 4600                            __ptext31 31B4  
                          __ptext23 36DE                            __ptext15 462E  
                          __ptext40 3830                            __ptext32 23FA  
                          __ptext24 2824                            __ptext16 4638  
                          __ptext41 397E                            __ptext33 3E1A  
                          __ptext25 45F2                            __ptext17 453E  
                          __ptext50 3D96                            __ptext42 3A22  
                          __ptext34 35DA                            __ptext26 460C  
                          __ptext18 4514                            __ptext51 38D8  
                          __ptext43 3F96                            __ptext35 1A94  
                          __ptext27 1592                            __ptext19 458C  
                          __ptext52 3E9A                            __ptext44 3C82  
                          __ptext36 3788                            __ptext28 3000  
                          __ptext53 3368                            __ptext45 3AC6  
                          __ptext37 4642                            __ptext29 1F54  
                          __ptext54 4566                            __ptext46 41B8  
                          __ptext38 3F1A                            __ptext55 4012  
                          __ptext47 420C                            __ptext39 4086  
                          __ptext56 44B0                            __ptext48 3D0C  
                          __ptext49 3B5C                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                            _colorrel 00A4  
                White@movementCount 00C6                          turnLeft@mL 0014  
                        turnLeft@mR 0016                    colour_read_all@B 00E3  
                  colour_read_all@C 00D3                    colour_read_all@G 00DF  
                  colour_read_all@R 00DB                      White@tempTimer 00CC  
                        turnRight@i 0018                    LightBlue_L135@mL 0021  
                  LightBlue_L135@mR 0023                      ?_Colour2Action 005B  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005F                   Yellow_rev1_R90@mL 0021  
                 Yellow_rev1_R90@mR 0023                            main@wall 00ED  
                          _turnLeft 3B5C                      ?_getTimerValue 0033  
                        _INTCONbits 000FF2                         _setMotorPWM 3368  
                          intlevel2 0000                    ??_fullSpeedAhead 0018  
                         turnLeft@i 0018                   ??_colour_read_all 005F  
           getTimerValue@timerCount 0039                     _Yellow_rev1_R90 3788  
                  _color_click_init 4470                       _rotate180left 420C  
                  __recogniseColour 00EE                          _SSP2DATPPS 000E1D  
                        _SSP2CLKPPS 000E1C                         _timerMemory 0100  
              _memoryUpdateMovement 44E4                         ??_turnRight 0018  
                     ___fladd@signs 0047                          _TX4STAbits 000EE8  
             __end_of_Pink_rev1_L90 38D8                        ___fladd@aexp 0048  
                      ___fladd@bexp 0049         memoryUpdateTime@timerMemory 004D  
                   ??_Colour2Action 005D  
